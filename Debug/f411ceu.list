
f411ceu.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002c210  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00003e70  0802c3b0  0802c3b0  0003c3b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00004a92  08030220  08030220  00040220  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000228  08034cb4  08034cb4  00044cb4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 ExtFlashSection 00017ea8  08034edc  08034edc  00044edc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 TextFlashSection 000000f4  0804cd84  0804cd84  0005cd84  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  0804ce78  0804ce78  000600fc  2**0
                  CONTENTS
  8 .ARM          00000008  0804ce78  0804ce78  0005ce78  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  0804ce80  0804ce80  000600fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000018  0804ce80  0804ce80  0005ce80  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   0000000c  0804ce98  0804ce98  0005ce98  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         000000fc  20000000  0804cea4  00060000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00002d88  200000fc  0804cfa0  000600fc  2**2
                  ALLOC
 14 ._user_heap_stack 00000604  20002e84  0804cfa0  00062e84  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  000600fc  2**0
                  CONTENTS, READONLY
 16 .comment      000000c2  00000000  00000000  0006012c  2**0
                  CONTENTS, READONLY
 17 .debug_info   00100ee3  00000000  00000000  000601ee  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_abbrev 0001783a  00000000  00000000  001610d1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_aranges 00003f50  00000000  00000000  00178910  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_rnglists 00002ebd  00000000  00000000  0017c860  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_macro  0002764b  00000000  00000000  0017f71d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line   00046102  00000000  00000000  001a6d68  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    000c8b79  00000000  00000000  001ece6a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_frame  00011b08  00000000  00000000  002b59e4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_line_str 0000004d  00000000  00000000  002c74ec  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	200000fc 	.word	0x200000fc
 80001bc:	00000000 	.word	0x00000000
 80001c0:	0802c398 	.word	0x0802c398

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000100 	.word	0x20000100
 80001dc:	0802c398 	.word	0x0802c398

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <__aeabi_drsub>:
 8000280:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000284:	e002      	b.n	800028c <__adddf3>
 8000286:	bf00      	nop

08000288 <__aeabi_dsub>:
 8000288:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800028c <__adddf3>:
 800028c:	b530      	push	{r4, r5, lr}
 800028e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000292:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000296:	ea94 0f05 	teq	r4, r5
 800029a:	bf08      	it	eq
 800029c:	ea90 0f02 	teqeq	r0, r2
 80002a0:	bf1f      	itttt	ne
 80002a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002b2:	f000 80e2 	beq.w	800047a <__adddf3+0x1ee>
 80002b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002be:	bfb8      	it	lt
 80002c0:	426d      	neglt	r5, r5
 80002c2:	dd0c      	ble.n	80002de <__adddf3+0x52>
 80002c4:	442c      	add	r4, r5
 80002c6:	ea80 0202 	eor.w	r2, r0, r2
 80002ca:	ea81 0303 	eor.w	r3, r1, r3
 80002ce:	ea82 0000 	eor.w	r0, r2, r0
 80002d2:	ea83 0101 	eor.w	r1, r3, r1
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	2d36      	cmp	r5, #54	; 0x36
 80002e0:	bf88      	it	hi
 80002e2:	bd30      	pophi	{r4, r5, pc}
 80002e4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002ec:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80002f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002f4:	d002      	beq.n	80002fc <__adddf3+0x70>
 80002f6:	4240      	negs	r0, r0
 80002f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002fc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000300:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000304:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x84>
 800030a:	4252      	negs	r2, r2
 800030c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000310:	ea94 0f05 	teq	r4, r5
 8000314:	f000 80a7 	beq.w	8000466 <__adddf3+0x1da>
 8000318:	f1a4 0401 	sub.w	r4, r4, #1
 800031c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000320:	db0d      	blt.n	800033e <__adddf3+0xb2>
 8000322:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000326:	fa22 f205 	lsr.w	r2, r2, r5
 800032a:	1880      	adds	r0, r0, r2
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	fa03 f20e 	lsl.w	r2, r3, lr
 8000334:	1880      	adds	r0, r0, r2
 8000336:	fa43 f305 	asr.w	r3, r3, r5
 800033a:	4159      	adcs	r1, r3
 800033c:	e00e      	b.n	800035c <__adddf3+0xd0>
 800033e:	f1a5 0520 	sub.w	r5, r5, #32
 8000342:	f10e 0e20 	add.w	lr, lr, #32
 8000346:	2a01      	cmp	r2, #1
 8000348:	fa03 fc0e 	lsl.w	ip, r3, lr
 800034c:	bf28      	it	cs
 800034e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000352:	fa43 f305 	asr.w	r3, r3, r5
 8000356:	18c0      	adds	r0, r0, r3
 8000358:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800035c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000360:	d507      	bpl.n	8000372 <__adddf3+0xe6>
 8000362:	f04f 0e00 	mov.w	lr, #0
 8000366:	f1dc 0c00 	rsbs	ip, ip, #0
 800036a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800036e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000372:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000376:	d31b      	bcc.n	80003b0 <__adddf3+0x124>
 8000378:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800037c:	d30c      	bcc.n	8000398 <__adddf3+0x10c>
 800037e:	0849      	lsrs	r1, r1, #1
 8000380:	ea5f 0030 	movs.w	r0, r0, rrx
 8000384:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000388:	f104 0401 	add.w	r4, r4, #1
 800038c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000390:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000394:	f080 809a 	bcs.w	80004cc <__adddf3+0x240>
 8000398:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800039c:	bf08      	it	eq
 800039e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003a2:	f150 0000 	adcs.w	r0, r0, #0
 80003a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003aa:	ea41 0105 	orr.w	r1, r1, r5
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003b4:	4140      	adcs	r0, r0
 80003b6:	eb41 0101 	adc.w	r1, r1, r1
 80003ba:	3c01      	subs	r4, #1
 80003bc:	bf28      	it	cs
 80003be:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003c2:	d2e9      	bcs.n	8000398 <__adddf3+0x10c>
 80003c4:	f091 0f00 	teq	r1, #0
 80003c8:	bf04      	itt	eq
 80003ca:	4601      	moveq	r1, r0
 80003cc:	2000      	moveq	r0, #0
 80003ce:	fab1 f381 	clz	r3, r1
 80003d2:	bf08      	it	eq
 80003d4:	3320      	addeq	r3, #32
 80003d6:	f1a3 030b 	sub.w	r3, r3, #11
 80003da:	f1b3 0220 	subs.w	r2, r3, #32
 80003de:	da0c      	bge.n	80003fa <__adddf3+0x16e>
 80003e0:	320c      	adds	r2, #12
 80003e2:	dd08      	ble.n	80003f6 <__adddf3+0x16a>
 80003e4:	f102 0c14 	add.w	ip, r2, #20
 80003e8:	f1c2 020c 	rsb	r2, r2, #12
 80003ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80003f0:	fa21 f102 	lsr.w	r1, r1, r2
 80003f4:	e00c      	b.n	8000410 <__adddf3+0x184>
 80003f6:	f102 0214 	add.w	r2, r2, #20
 80003fa:	bfd8      	it	le
 80003fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000400:	fa01 f102 	lsl.w	r1, r1, r2
 8000404:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000408:	bfdc      	itt	le
 800040a:	ea41 010c 	orrle.w	r1, r1, ip
 800040e:	4090      	lslle	r0, r2
 8000410:	1ae4      	subs	r4, r4, r3
 8000412:	bfa2      	ittt	ge
 8000414:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000418:	4329      	orrge	r1, r5
 800041a:	bd30      	popge	{r4, r5, pc}
 800041c:	ea6f 0404 	mvn.w	r4, r4
 8000420:	3c1f      	subs	r4, #31
 8000422:	da1c      	bge.n	800045e <__adddf3+0x1d2>
 8000424:	340c      	adds	r4, #12
 8000426:	dc0e      	bgt.n	8000446 <__adddf3+0x1ba>
 8000428:	f104 0414 	add.w	r4, r4, #20
 800042c:	f1c4 0220 	rsb	r2, r4, #32
 8000430:	fa20 f004 	lsr.w	r0, r0, r4
 8000434:	fa01 f302 	lsl.w	r3, r1, r2
 8000438:	ea40 0003 	orr.w	r0, r0, r3
 800043c:	fa21 f304 	lsr.w	r3, r1, r4
 8000440:	ea45 0103 	orr.w	r1, r5, r3
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	f1c4 040c 	rsb	r4, r4, #12
 800044a:	f1c4 0220 	rsb	r2, r4, #32
 800044e:	fa20 f002 	lsr.w	r0, r0, r2
 8000452:	fa01 f304 	lsl.w	r3, r1, r4
 8000456:	ea40 0003 	orr.w	r0, r0, r3
 800045a:	4629      	mov	r1, r5
 800045c:	bd30      	pop	{r4, r5, pc}
 800045e:	fa21 f004 	lsr.w	r0, r1, r4
 8000462:	4629      	mov	r1, r5
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f094 0f00 	teq	r4, #0
 800046a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800046e:	bf06      	itte	eq
 8000470:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000474:	3401      	addeq	r4, #1
 8000476:	3d01      	subne	r5, #1
 8000478:	e74e      	b.n	8000318 <__adddf3+0x8c>
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf18      	it	ne
 8000480:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000484:	d029      	beq.n	80004da <__adddf3+0x24e>
 8000486:	ea94 0f05 	teq	r4, r5
 800048a:	bf08      	it	eq
 800048c:	ea90 0f02 	teqeq	r0, r2
 8000490:	d005      	beq.n	800049e <__adddf3+0x212>
 8000492:	ea54 0c00 	orrs.w	ip, r4, r0
 8000496:	bf04      	itt	eq
 8000498:	4619      	moveq	r1, r3
 800049a:	4610      	moveq	r0, r2
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	ea91 0f03 	teq	r1, r3
 80004a2:	bf1e      	ittt	ne
 80004a4:	2100      	movne	r1, #0
 80004a6:	2000      	movne	r0, #0
 80004a8:	bd30      	popne	{r4, r5, pc}
 80004aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ae:	d105      	bne.n	80004bc <__adddf3+0x230>
 80004b0:	0040      	lsls	r0, r0, #1
 80004b2:	4149      	adcs	r1, r1
 80004b4:	bf28      	it	cs
 80004b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ba:	bd30      	pop	{r4, r5, pc}
 80004bc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004c0:	bf3c      	itt	cc
 80004c2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004c6:	bd30      	popcc	{r4, r5, pc}
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004cc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004de:	bf1a      	itte	ne
 80004e0:	4619      	movne	r1, r3
 80004e2:	4610      	movne	r0, r2
 80004e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004e8:	bf1c      	itt	ne
 80004ea:	460b      	movne	r3, r1
 80004ec:	4602      	movne	r2, r0
 80004ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004f2:	bf06      	itte	eq
 80004f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004f8:	ea91 0f03 	teqeq	r1, r3
 80004fc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000500:	bd30      	pop	{r4, r5, pc}
 8000502:	bf00      	nop

08000504 <__aeabi_ui2d>:
 8000504:	f090 0f00 	teq	r0, #0
 8000508:	bf04      	itt	eq
 800050a:	2100      	moveq	r1, #0
 800050c:	4770      	bxeq	lr
 800050e:	b530      	push	{r4, r5, lr}
 8000510:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000514:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000518:	f04f 0500 	mov.w	r5, #0
 800051c:	f04f 0100 	mov.w	r1, #0
 8000520:	e750      	b.n	80003c4 <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_i2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000538:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800053c:	bf48      	it	mi
 800053e:	4240      	negmi	r0, r0
 8000540:	f04f 0100 	mov.w	r1, #0
 8000544:	e73e      	b.n	80003c4 <__adddf3+0x138>
 8000546:	bf00      	nop

08000548 <__aeabi_f2d>:
 8000548:	0042      	lsls	r2, r0, #1
 800054a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800054e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000552:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000556:	bf1f      	itttt	ne
 8000558:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800055c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000560:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000564:	4770      	bxne	lr
 8000566:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800056a:	bf08      	it	eq
 800056c:	4770      	bxeq	lr
 800056e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000572:	bf04      	itt	eq
 8000574:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000578:	4770      	bxeq	lr
 800057a:	b530      	push	{r4, r5, lr}
 800057c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000580:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000584:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000588:	e71c      	b.n	80003c4 <__adddf3+0x138>
 800058a:	bf00      	nop

0800058c <__aeabi_ul2d>:
 800058c:	ea50 0201 	orrs.w	r2, r0, r1
 8000590:	bf08      	it	eq
 8000592:	4770      	bxeq	lr
 8000594:	b530      	push	{r4, r5, lr}
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	e00a      	b.n	80005b2 <__aeabi_l2d+0x16>

0800059c <__aeabi_l2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005aa:	d502      	bpl.n	80005b2 <__aeabi_l2d+0x16>
 80005ac:	4240      	negs	r0, r0
 80005ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005b2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005b6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005be:	f43f aed8 	beq.w	8000372 <__adddf3+0xe6>
 80005c2:	f04f 0203 	mov.w	r2, #3
 80005c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ca:	bf18      	it	ne
 80005cc:	3203      	addne	r2, #3
 80005ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005d2:	bf18      	it	ne
 80005d4:	3203      	addne	r2, #3
 80005d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005da:	f1c2 0320 	rsb	r3, r2, #32
 80005de:	fa00 fc03 	lsl.w	ip, r0, r3
 80005e2:	fa20 f002 	lsr.w	r0, r0, r2
 80005e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005ea:	ea40 000e 	orr.w	r0, r0, lr
 80005ee:	fa21 f102 	lsr.w	r1, r1, r2
 80005f2:	4414      	add	r4, r2
 80005f4:	e6bd      	b.n	8000372 <__adddf3+0xe6>
 80005f6:	bf00      	nop

080005f8 <__aeabi_dmul>:
 80005f8:	b570      	push	{r4, r5, r6, lr}
 80005fa:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80005fe:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000602:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000606:	bf1d      	ittte	ne
 8000608:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800060c:	ea94 0f0c 	teqne	r4, ip
 8000610:	ea95 0f0c 	teqne	r5, ip
 8000614:	f000 f8de 	bleq	80007d4 <__aeabi_dmul+0x1dc>
 8000618:	442c      	add	r4, r5
 800061a:	ea81 0603 	eor.w	r6, r1, r3
 800061e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000622:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000626:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800062a:	bf18      	it	ne
 800062c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000630:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000634:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000638:	d038      	beq.n	80006ac <__aeabi_dmul+0xb4>
 800063a:	fba0 ce02 	umull	ip, lr, r0, r2
 800063e:	f04f 0500 	mov.w	r5, #0
 8000642:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000646:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800064a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800064e:	f04f 0600 	mov.w	r6, #0
 8000652:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000656:	f09c 0f00 	teq	ip, #0
 800065a:	bf18      	it	ne
 800065c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000660:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000664:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000668:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800066c:	d204      	bcs.n	8000678 <__aeabi_dmul+0x80>
 800066e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000672:	416d      	adcs	r5, r5
 8000674:	eb46 0606 	adc.w	r6, r6, r6
 8000678:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800067c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000680:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000684:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000688:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800068c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000690:	bf88      	it	hi
 8000692:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000696:	d81e      	bhi.n	80006d6 <__aeabi_dmul+0xde>
 8000698:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800069c:	bf08      	it	eq
 800069e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006a2:	f150 0000 	adcs.w	r0, r0, #0
 80006a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006aa:	bd70      	pop	{r4, r5, r6, pc}
 80006ac:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006b0:	ea46 0101 	orr.w	r1, r6, r1
 80006b4:	ea40 0002 	orr.w	r0, r0, r2
 80006b8:	ea81 0103 	eor.w	r1, r1, r3
 80006bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006c0:	bfc2      	ittt	gt
 80006c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	popgt	{r4, r5, r6, pc}
 80006cc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006d0:	f04f 0e00 	mov.w	lr, #0
 80006d4:	3c01      	subs	r4, #1
 80006d6:	f300 80ab 	bgt.w	8000830 <__aeabi_dmul+0x238>
 80006da:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006de:	bfde      	ittt	le
 80006e0:	2000      	movle	r0, #0
 80006e2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006e6:	bd70      	pople	{r4, r5, r6, pc}
 80006e8:	f1c4 0400 	rsb	r4, r4, #0
 80006ec:	3c20      	subs	r4, #32
 80006ee:	da35      	bge.n	800075c <__aeabi_dmul+0x164>
 80006f0:	340c      	adds	r4, #12
 80006f2:	dc1b      	bgt.n	800072c <__aeabi_dmul+0x134>
 80006f4:	f104 0414 	add.w	r4, r4, #20
 80006f8:	f1c4 0520 	rsb	r5, r4, #32
 80006fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000700:	fa20 f004 	lsr.w	r0, r0, r4
 8000704:	fa01 f205 	lsl.w	r2, r1, r5
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000710:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000714:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000718:	fa21 f604 	lsr.w	r6, r1, r4
 800071c:	eb42 0106 	adc.w	r1, r2, r6
 8000720:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000724:	bf08      	it	eq
 8000726:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	f1c4 040c 	rsb	r4, r4, #12
 8000730:	f1c4 0520 	rsb	r5, r4, #32
 8000734:	fa00 f304 	lsl.w	r3, r0, r4
 8000738:	fa20 f005 	lsr.w	r0, r0, r5
 800073c:	fa01 f204 	lsl.w	r2, r1, r4
 8000740:	ea40 0002 	orr.w	r0, r0, r2
 8000744:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000748:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800074c:	f141 0100 	adc.w	r1, r1, #0
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 0520 	rsb	r5, r4, #32
 8000760:	fa00 f205 	lsl.w	r2, r0, r5
 8000764:	ea4e 0e02 	orr.w	lr, lr, r2
 8000768:	fa20 f304 	lsr.w	r3, r0, r4
 800076c:	fa01 f205 	lsl.w	r2, r1, r5
 8000770:	ea43 0302 	orr.w	r3, r3, r2
 8000774:	fa21 f004 	lsr.w	r0, r1, r4
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800077c:	fa21 f204 	lsr.w	r2, r1, r4
 8000780:	ea20 0002 	bic.w	r0, r0, r2
 8000784:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000788:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800078c:	bf08      	it	eq
 800078e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f094 0f00 	teq	r4, #0
 8000798:	d10f      	bne.n	80007ba <__aeabi_dmul+0x1c2>
 800079a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800079e:	0040      	lsls	r0, r0, #1
 80007a0:	eb41 0101 	adc.w	r1, r1, r1
 80007a4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007a8:	bf08      	it	eq
 80007aa:	3c01      	subeq	r4, #1
 80007ac:	d0f7      	beq.n	800079e <__aeabi_dmul+0x1a6>
 80007ae:	ea41 0106 	orr.w	r1, r1, r6
 80007b2:	f095 0f00 	teq	r5, #0
 80007b6:	bf18      	it	ne
 80007b8:	4770      	bxne	lr
 80007ba:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007be:	0052      	lsls	r2, r2, #1
 80007c0:	eb43 0303 	adc.w	r3, r3, r3
 80007c4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3d01      	subeq	r5, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1c6>
 80007ce:	ea43 0306 	orr.w	r3, r3, r6
 80007d2:	4770      	bx	lr
 80007d4:	ea94 0f0c 	teq	r4, ip
 80007d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007dc:	bf18      	it	ne
 80007de:	ea95 0f0c 	teqne	r5, ip
 80007e2:	d00c      	beq.n	80007fe <__aeabi_dmul+0x206>
 80007e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007e8:	bf18      	it	ne
 80007ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ee:	d1d1      	bne.n	8000794 <__aeabi_dmul+0x19c>
 80007f0:	ea81 0103 	eor.w	r1, r1, r3
 80007f4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd70      	pop	{r4, r5, r6, pc}
 80007fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000802:	bf06      	itte	eq
 8000804:	4610      	moveq	r0, r2
 8000806:	4619      	moveq	r1, r3
 8000808:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080c:	d019      	beq.n	8000842 <__aeabi_dmul+0x24a>
 800080e:	ea94 0f0c 	teq	r4, ip
 8000812:	d102      	bne.n	800081a <__aeabi_dmul+0x222>
 8000814:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000818:	d113      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800081a:	ea95 0f0c 	teq	r5, ip
 800081e:	d105      	bne.n	800082c <__aeabi_dmul+0x234>
 8000820:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000824:	bf1c      	itt	ne
 8000826:	4610      	movne	r0, r2
 8000828:	4619      	movne	r1, r3
 800082a:	d10a      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800082c:	ea81 0103 	eor.w	r1, r1, r3
 8000830:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000834:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000838:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800083c:	f04f 0000 	mov.w	r0, #0
 8000840:	bd70      	pop	{r4, r5, r6, pc}
 8000842:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000846:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800084a:	bd70      	pop	{r4, r5, r6, pc}

0800084c <__aeabi_ddiv>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000852:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000856:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800085a:	bf1d      	ittte	ne
 800085c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000860:	ea94 0f0c 	teqne	r4, ip
 8000864:	ea95 0f0c 	teqne	r5, ip
 8000868:	f000 f8a7 	bleq	80009ba <__aeabi_ddiv+0x16e>
 800086c:	eba4 0405 	sub.w	r4, r4, r5
 8000870:	ea81 0e03 	eor.w	lr, r1, r3
 8000874:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000878:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800087c:	f000 8088 	beq.w	8000990 <__aeabi_ddiv+0x144>
 8000880:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000884:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000888:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800088c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000890:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000894:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000898:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800089c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008a0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008a4:	429d      	cmp	r5, r3
 80008a6:	bf08      	it	eq
 80008a8:	4296      	cmpeq	r6, r2
 80008aa:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ae:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008b2:	d202      	bcs.n	80008ba <__aeabi_ddiv+0x6e>
 80008b4:	085b      	lsrs	r3, r3, #1
 80008b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ba:	1ab6      	subs	r6, r6, r2
 80008bc:	eb65 0503 	sbc.w	r5, r5, r3
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008ca:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ee:	bf22      	ittt	cs
 80008f0:	1ab6      	subcs	r6, r6, r2
 80008f2:	4675      	movcs	r5, lr
 80008f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008f8:	085b      	lsrs	r3, r3, #1
 80008fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000928:	ea55 0e06 	orrs.w	lr, r5, r6
 800092c:	d018      	beq.n	8000960 <__aeabi_ddiv+0x114>
 800092e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000932:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000936:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800093a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800093e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000942:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000946:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800094a:	d1c0      	bne.n	80008ce <__aeabi_ddiv+0x82>
 800094c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000950:	d10b      	bne.n	800096a <__aeabi_ddiv+0x11e>
 8000952:	ea41 0100 	orr.w	r1, r1, r0
 8000956:	f04f 0000 	mov.w	r0, #0
 800095a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800095e:	e7b6      	b.n	80008ce <__aeabi_ddiv+0x82>
 8000960:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000964:	bf04      	itt	eq
 8000966:	4301      	orreq	r1, r0
 8000968:	2000      	moveq	r0, #0
 800096a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800096e:	bf88      	it	hi
 8000970:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000974:	f63f aeaf 	bhi.w	80006d6 <__aeabi_dmul+0xde>
 8000978:	ebb5 0c03 	subs.w	ip, r5, r3
 800097c:	bf04      	itt	eq
 800097e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000982:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000986:	f150 0000 	adcs.w	r0, r0, #0
 800098a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800098e:	bd70      	pop	{r4, r5, r6, pc}
 8000990:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000994:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000998:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800099c:	bfc2      	ittt	gt
 800099e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009a6:	bd70      	popgt	{r4, r5, r6, pc}
 80009a8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ac:	f04f 0e00 	mov.w	lr, #0
 80009b0:	3c01      	subs	r4, #1
 80009b2:	e690      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009b4:	ea45 0e06 	orr.w	lr, r5, r6
 80009b8:	e68d      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009be:	ea94 0f0c 	teq	r4, ip
 80009c2:	bf08      	it	eq
 80009c4:	ea95 0f0c 	teqeq	r5, ip
 80009c8:	f43f af3b 	beq.w	8000842 <__aeabi_dmul+0x24a>
 80009cc:	ea94 0f0c 	teq	r4, ip
 80009d0:	d10a      	bne.n	80009e8 <__aeabi_ddiv+0x19c>
 80009d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009d6:	f47f af34 	bne.w	8000842 <__aeabi_dmul+0x24a>
 80009da:	ea95 0f0c 	teq	r5, ip
 80009de:	f47f af25 	bne.w	800082c <__aeabi_dmul+0x234>
 80009e2:	4610      	mov	r0, r2
 80009e4:	4619      	mov	r1, r3
 80009e6:	e72c      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009e8:	ea95 0f0c 	teq	r5, ip
 80009ec:	d106      	bne.n	80009fc <__aeabi_ddiv+0x1b0>
 80009ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009f2:	f43f aefd 	beq.w	80007f0 <__aeabi_dmul+0x1f8>
 80009f6:	4610      	mov	r0, r2
 80009f8:	4619      	mov	r1, r3
 80009fa:	e722      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a00:	bf18      	it	ne
 8000a02:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a06:	f47f aec5 	bne.w	8000794 <__aeabi_dmul+0x19c>
 8000a0a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a0e:	f47f af0d 	bne.w	800082c <__aeabi_dmul+0x234>
 8000a12:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a16:	f47f aeeb 	bne.w	80007f0 <__aeabi_dmul+0x1f8>
 8000a1a:	e712      	b.n	8000842 <__aeabi_dmul+0x24a>

08000a1c <__aeabi_d2f>:
 8000a1c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a20:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000a24:	bf24      	itt	cs
 8000a26:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000a2a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000a2e:	d90d      	bls.n	8000a4c <__aeabi_d2f+0x30>
 8000a30:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000a34:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000a38:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000a3c:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000a40:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000a44:	bf08      	it	eq
 8000a46:	f020 0001 	biceq.w	r0, r0, #1
 8000a4a:	4770      	bx	lr
 8000a4c:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000a50:	d121      	bne.n	8000a96 <__aeabi_d2f+0x7a>
 8000a52:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000a56:	bfbc      	itt	lt
 8000a58:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000a5c:	4770      	bxlt	lr
 8000a5e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000a62:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000a66:	f1c2 0218 	rsb	r2, r2, #24
 8000a6a:	f1c2 0c20 	rsb	ip, r2, #32
 8000a6e:	fa10 f30c 	lsls.w	r3, r0, ip
 8000a72:	fa20 f002 	lsr.w	r0, r0, r2
 8000a76:	bf18      	it	ne
 8000a78:	f040 0001 	orrne.w	r0, r0, #1
 8000a7c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a80:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000a84:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000a88:	ea40 000c 	orr.w	r0, r0, ip
 8000a8c:	fa23 f302 	lsr.w	r3, r3, r2
 8000a90:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000a94:	e7cc      	b.n	8000a30 <__aeabi_d2f+0x14>
 8000a96:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000a9a:	d107      	bne.n	8000aac <__aeabi_d2f+0x90>
 8000a9c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000aa0:	bf1e      	ittt	ne
 8000aa2:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000aa6:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000aaa:	4770      	bxne	lr
 8000aac:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000ab0:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000ab4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000ab8:	4770      	bx	lr
 8000aba:	bf00      	nop

08000abc <__aeabi_ldivmod>:
 8000abc:	b97b      	cbnz	r3, 8000ade <__aeabi_ldivmod+0x22>
 8000abe:	b972      	cbnz	r2, 8000ade <__aeabi_ldivmod+0x22>
 8000ac0:	2900      	cmp	r1, #0
 8000ac2:	bfbe      	ittt	lt
 8000ac4:	2000      	movlt	r0, #0
 8000ac6:	f04f 4100 	movlt.w	r1, #2147483648	; 0x80000000
 8000aca:	e006      	blt.n	8000ada <__aeabi_ldivmod+0x1e>
 8000acc:	bf08      	it	eq
 8000ace:	2800      	cmpeq	r0, #0
 8000ad0:	bf1c      	itt	ne
 8000ad2:	f06f 4100 	mvnne.w	r1, #2147483648	; 0x80000000
 8000ad6:	f04f 30ff 	movne.w	r0, #4294967295
 8000ada:	f000 b9bb 	b.w	8000e54 <__aeabi_idiv0>
 8000ade:	f1ad 0c08 	sub.w	ip, sp, #8
 8000ae2:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000ae6:	2900      	cmp	r1, #0
 8000ae8:	db09      	blt.n	8000afe <__aeabi_ldivmod+0x42>
 8000aea:	2b00      	cmp	r3, #0
 8000aec:	db1a      	blt.n	8000b24 <__aeabi_ldivmod+0x68>
 8000aee:	f000 f84d 	bl	8000b8c <__udivmoddi4>
 8000af2:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000af6:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000afa:	b004      	add	sp, #16
 8000afc:	4770      	bx	lr
 8000afe:	4240      	negs	r0, r0
 8000b00:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000b04:	2b00      	cmp	r3, #0
 8000b06:	db1b      	blt.n	8000b40 <__aeabi_ldivmod+0x84>
 8000b08:	f000 f840 	bl	8000b8c <__udivmoddi4>
 8000b0c:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000b10:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000b14:	b004      	add	sp, #16
 8000b16:	4240      	negs	r0, r0
 8000b18:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000b1c:	4252      	negs	r2, r2
 8000b1e:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000b22:	4770      	bx	lr
 8000b24:	4252      	negs	r2, r2
 8000b26:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000b2a:	f000 f82f 	bl	8000b8c <__udivmoddi4>
 8000b2e:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000b32:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000b36:	b004      	add	sp, #16
 8000b38:	4240      	negs	r0, r0
 8000b3a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000b3e:	4770      	bx	lr
 8000b40:	4252      	negs	r2, r2
 8000b42:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000b46:	f000 f821 	bl	8000b8c <__udivmoddi4>
 8000b4a:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000b4e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000b52:	b004      	add	sp, #16
 8000b54:	4252      	negs	r2, r2
 8000b56:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000b5a:	4770      	bx	lr

08000b5c <__aeabi_uldivmod>:
 8000b5c:	b953      	cbnz	r3, 8000b74 <__aeabi_uldivmod+0x18>
 8000b5e:	b94a      	cbnz	r2, 8000b74 <__aeabi_uldivmod+0x18>
 8000b60:	2900      	cmp	r1, #0
 8000b62:	bf08      	it	eq
 8000b64:	2800      	cmpeq	r0, #0
 8000b66:	bf1c      	itt	ne
 8000b68:	f04f 31ff 	movne.w	r1, #4294967295
 8000b6c:	f04f 30ff 	movne.w	r0, #4294967295
 8000b70:	f000 b970 	b.w	8000e54 <__aeabi_idiv0>
 8000b74:	f1ad 0c08 	sub.w	ip, sp, #8
 8000b78:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000b7c:	f000 f806 	bl	8000b8c <__udivmoddi4>
 8000b80:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000b84:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000b88:	b004      	add	sp, #16
 8000b8a:	4770      	bx	lr

08000b8c <__udivmoddi4>:
 8000b8c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000b90:	9e08      	ldr	r6, [sp, #32]
 8000b92:	460d      	mov	r5, r1
 8000b94:	4604      	mov	r4, r0
 8000b96:	460f      	mov	r7, r1
 8000b98:	2b00      	cmp	r3, #0
 8000b9a:	d14a      	bne.n	8000c32 <__udivmoddi4+0xa6>
 8000b9c:	428a      	cmp	r2, r1
 8000b9e:	4694      	mov	ip, r2
 8000ba0:	d965      	bls.n	8000c6e <__udivmoddi4+0xe2>
 8000ba2:	fab2 f382 	clz	r3, r2
 8000ba6:	b143      	cbz	r3, 8000bba <__udivmoddi4+0x2e>
 8000ba8:	fa02 fc03 	lsl.w	ip, r2, r3
 8000bac:	f1c3 0220 	rsb	r2, r3, #32
 8000bb0:	409f      	lsls	r7, r3
 8000bb2:	fa20 f202 	lsr.w	r2, r0, r2
 8000bb6:	4317      	orrs	r7, r2
 8000bb8:	409c      	lsls	r4, r3
 8000bba:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 8000bbe:	fa1f f58c 	uxth.w	r5, ip
 8000bc2:	fbb7 f1fe 	udiv	r1, r7, lr
 8000bc6:	0c22      	lsrs	r2, r4, #16
 8000bc8:	fb0e 7711 	mls	r7, lr, r1, r7
 8000bcc:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000bd0:	fb01 f005 	mul.w	r0, r1, r5
 8000bd4:	4290      	cmp	r0, r2
 8000bd6:	d90a      	bls.n	8000bee <__udivmoddi4+0x62>
 8000bd8:	eb1c 0202 	adds.w	r2, ip, r2
 8000bdc:	f101 37ff 	add.w	r7, r1, #4294967295
 8000be0:	f080 811c 	bcs.w	8000e1c <__udivmoddi4+0x290>
 8000be4:	4290      	cmp	r0, r2
 8000be6:	f240 8119 	bls.w	8000e1c <__udivmoddi4+0x290>
 8000bea:	3902      	subs	r1, #2
 8000bec:	4462      	add	r2, ip
 8000bee:	1a12      	subs	r2, r2, r0
 8000bf0:	b2a4      	uxth	r4, r4
 8000bf2:	fbb2 f0fe 	udiv	r0, r2, lr
 8000bf6:	fb0e 2210 	mls	r2, lr, r0, r2
 8000bfa:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000bfe:	fb00 f505 	mul.w	r5, r0, r5
 8000c02:	42a5      	cmp	r5, r4
 8000c04:	d90a      	bls.n	8000c1c <__udivmoddi4+0x90>
 8000c06:	eb1c 0404 	adds.w	r4, ip, r4
 8000c0a:	f100 32ff 	add.w	r2, r0, #4294967295
 8000c0e:	f080 8107 	bcs.w	8000e20 <__udivmoddi4+0x294>
 8000c12:	42a5      	cmp	r5, r4
 8000c14:	f240 8104 	bls.w	8000e20 <__udivmoddi4+0x294>
 8000c18:	4464      	add	r4, ip
 8000c1a:	3802      	subs	r0, #2
 8000c1c:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000c20:	1b64      	subs	r4, r4, r5
 8000c22:	2100      	movs	r1, #0
 8000c24:	b11e      	cbz	r6, 8000c2e <__udivmoddi4+0xa2>
 8000c26:	40dc      	lsrs	r4, r3
 8000c28:	2300      	movs	r3, #0
 8000c2a:	e9c6 4300 	strd	r4, r3, [r6]
 8000c2e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c32:	428b      	cmp	r3, r1
 8000c34:	d908      	bls.n	8000c48 <__udivmoddi4+0xbc>
 8000c36:	2e00      	cmp	r6, #0
 8000c38:	f000 80ed 	beq.w	8000e16 <__udivmoddi4+0x28a>
 8000c3c:	2100      	movs	r1, #0
 8000c3e:	e9c6 0500 	strd	r0, r5, [r6]
 8000c42:	4608      	mov	r0, r1
 8000c44:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c48:	fab3 f183 	clz	r1, r3
 8000c4c:	2900      	cmp	r1, #0
 8000c4e:	d149      	bne.n	8000ce4 <__udivmoddi4+0x158>
 8000c50:	42ab      	cmp	r3, r5
 8000c52:	d302      	bcc.n	8000c5a <__udivmoddi4+0xce>
 8000c54:	4282      	cmp	r2, r0
 8000c56:	f200 80f8 	bhi.w	8000e4a <__udivmoddi4+0x2be>
 8000c5a:	1a84      	subs	r4, r0, r2
 8000c5c:	eb65 0203 	sbc.w	r2, r5, r3
 8000c60:	2001      	movs	r0, #1
 8000c62:	4617      	mov	r7, r2
 8000c64:	2e00      	cmp	r6, #0
 8000c66:	d0e2      	beq.n	8000c2e <__udivmoddi4+0xa2>
 8000c68:	e9c6 4700 	strd	r4, r7, [r6]
 8000c6c:	e7df      	b.n	8000c2e <__udivmoddi4+0xa2>
 8000c6e:	b902      	cbnz	r2, 8000c72 <__udivmoddi4+0xe6>
 8000c70:	deff      	udf	#255	; 0xff
 8000c72:	fab2 f382 	clz	r3, r2
 8000c76:	2b00      	cmp	r3, #0
 8000c78:	f040 8090 	bne.w	8000d9c <__udivmoddi4+0x210>
 8000c7c:	1a8a      	subs	r2, r1, r2
 8000c7e:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000c82:	fa1f fe8c 	uxth.w	lr, ip
 8000c86:	2101      	movs	r1, #1
 8000c88:	fbb2 f5f7 	udiv	r5, r2, r7
 8000c8c:	fb07 2015 	mls	r0, r7, r5, r2
 8000c90:	0c22      	lsrs	r2, r4, #16
 8000c92:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8000c96:	fb0e f005 	mul.w	r0, lr, r5
 8000c9a:	4290      	cmp	r0, r2
 8000c9c:	d908      	bls.n	8000cb0 <__udivmoddi4+0x124>
 8000c9e:	eb1c 0202 	adds.w	r2, ip, r2
 8000ca2:	f105 38ff 	add.w	r8, r5, #4294967295
 8000ca6:	d202      	bcs.n	8000cae <__udivmoddi4+0x122>
 8000ca8:	4290      	cmp	r0, r2
 8000caa:	f200 80cb 	bhi.w	8000e44 <__udivmoddi4+0x2b8>
 8000cae:	4645      	mov	r5, r8
 8000cb0:	1a12      	subs	r2, r2, r0
 8000cb2:	b2a4      	uxth	r4, r4
 8000cb4:	fbb2 f0f7 	udiv	r0, r2, r7
 8000cb8:	fb07 2210 	mls	r2, r7, r0, r2
 8000cbc:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000cc0:	fb0e fe00 	mul.w	lr, lr, r0
 8000cc4:	45a6      	cmp	lr, r4
 8000cc6:	d908      	bls.n	8000cda <__udivmoddi4+0x14e>
 8000cc8:	eb1c 0404 	adds.w	r4, ip, r4
 8000ccc:	f100 32ff 	add.w	r2, r0, #4294967295
 8000cd0:	d202      	bcs.n	8000cd8 <__udivmoddi4+0x14c>
 8000cd2:	45a6      	cmp	lr, r4
 8000cd4:	f200 80bb 	bhi.w	8000e4e <__udivmoddi4+0x2c2>
 8000cd8:	4610      	mov	r0, r2
 8000cda:	eba4 040e 	sub.w	r4, r4, lr
 8000cde:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000ce2:	e79f      	b.n	8000c24 <__udivmoddi4+0x98>
 8000ce4:	f1c1 0720 	rsb	r7, r1, #32
 8000ce8:	408b      	lsls	r3, r1
 8000cea:	fa22 fc07 	lsr.w	ip, r2, r7
 8000cee:	ea4c 0c03 	orr.w	ip, ip, r3
 8000cf2:	fa05 f401 	lsl.w	r4, r5, r1
 8000cf6:	fa20 f307 	lsr.w	r3, r0, r7
 8000cfa:	40fd      	lsrs	r5, r7
 8000cfc:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000d00:	4323      	orrs	r3, r4
 8000d02:	fbb5 f8f9 	udiv	r8, r5, r9
 8000d06:	fa1f fe8c 	uxth.w	lr, ip
 8000d0a:	fb09 5518 	mls	r5, r9, r8, r5
 8000d0e:	0c1c      	lsrs	r4, r3, #16
 8000d10:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000d14:	fb08 f50e 	mul.w	r5, r8, lr
 8000d18:	42a5      	cmp	r5, r4
 8000d1a:	fa02 f201 	lsl.w	r2, r2, r1
 8000d1e:	fa00 f001 	lsl.w	r0, r0, r1
 8000d22:	d90b      	bls.n	8000d3c <__udivmoddi4+0x1b0>
 8000d24:	eb1c 0404 	adds.w	r4, ip, r4
 8000d28:	f108 3aff 	add.w	sl, r8, #4294967295
 8000d2c:	f080 8088 	bcs.w	8000e40 <__udivmoddi4+0x2b4>
 8000d30:	42a5      	cmp	r5, r4
 8000d32:	f240 8085 	bls.w	8000e40 <__udivmoddi4+0x2b4>
 8000d36:	f1a8 0802 	sub.w	r8, r8, #2
 8000d3a:	4464      	add	r4, ip
 8000d3c:	1b64      	subs	r4, r4, r5
 8000d3e:	b29d      	uxth	r5, r3
 8000d40:	fbb4 f3f9 	udiv	r3, r4, r9
 8000d44:	fb09 4413 	mls	r4, r9, r3, r4
 8000d48:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000d4c:	fb03 fe0e 	mul.w	lr, r3, lr
 8000d50:	45a6      	cmp	lr, r4
 8000d52:	d908      	bls.n	8000d66 <__udivmoddi4+0x1da>
 8000d54:	eb1c 0404 	adds.w	r4, ip, r4
 8000d58:	f103 35ff 	add.w	r5, r3, #4294967295
 8000d5c:	d26c      	bcs.n	8000e38 <__udivmoddi4+0x2ac>
 8000d5e:	45a6      	cmp	lr, r4
 8000d60:	d96a      	bls.n	8000e38 <__udivmoddi4+0x2ac>
 8000d62:	3b02      	subs	r3, #2
 8000d64:	4464      	add	r4, ip
 8000d66:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000d6a:	fba3 9502 	umull	r9, r5, r3, r2
 8000d6e:	eba4 040e 	sub.w	r4, r4, lr
 8000d72:	42ac      	cmp	r4, r5
 8000d74:	46c8      	mov	r8, r9
 8000d76:	46ae      	mov	lr, r5
 8000d78:	d356      	bcc.n	8000e28 <__udivmoddi4+0x29c>
 8000d7a:	d053      	beq.n	8000e24 <__udivmoddi4+0x298>
 8000d7c:	b156      	cbz	r6, 8000d94 <__udivmoddi4+0x208>
 8000d7e:	ebb0 0208 	subs.w	r2, r0, r8
 8000d82:	eb64 040e 	sbc.w	r4, r4, lr
 8000d86:	fa04 f707 	lsl.w	r7, r4, r7
 8000d8a:	40ca      	lsrs	r2, r1
 8000d8c:	40cc      	lsrs	r4, r1
 8000d8e:	4317      	orrs	r7, r2
 8000d90:	e9c6 7400 	strd	r7, r4, [r6]
 8000d94:	4618      	mov	r0, r3
 8000d96:	2100      	movs	r1, #0
 8000d98:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d9c:	f1c3 0120 	rsb	r1, r3, #32
 8000da0:	fa02 fc03 	lsl.w	ip, r2, r3
 8000da4:	fa20 f201 	lsr.w	r2, r0, r1
 8000da8:	fa25 f101 	lsr.w	r1, r5, r1
 8000dac:	409d      	lsls	r5, r3
 8000dae:	432a      	orrs	r2, r5
 8000db0:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000db4:	fa1f fe8c 	uxth.w	lr, ip
 8000db8:	fbb1 f0f7 	udiv	r0, r1, r7
 8000dbc:	fb07 1510 	mls	r5, r7, r0, r1
 8000dc0:	0c11      	lsrs	r1, r2, #16
 8000dc2:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8000dc6:	fb00 f50e 	mul.w	r5, r0, lr
 8000dca:	428d      	cmp	r5, r1
 8000dcc:	fa04 f403 	lsl.w	r4, r4, r3
 8000dd0:	d908      	bls.n	8000de4 <__udivmoddi4+0x258>
 8000dd2:	eb1c 0101 	adds.w	r1, ip, r1
 8000dd6:	f100 38ff 	add.w	r8, r0, #4294967295
 8000dda:	d22f      	bcs.n	8000e3c <__udivmoddi4+0x2b0>
 8000ddc:	428d      	cmp	r5, r1
 8000dde:	d92d      	bls.n	8000e3c <__udivmoddi4+0x2b0>
 8000de0:	3802      	subs	r0, #2
 8000de2:	4461      	add	r1, ip
 8000de4:	1b49      	subs	r1, r1, r5
 8000de6:	b292      	uxth	r2, r2
 8000de8:	fbb1 f5f7 	udiv	r5, r1, r7
 8000dec:	fb07 1115 	mls	r1, r7, r5, r1
 8000df0:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000df4:	fb05 f10e 	mul.w	r1, r5, lr
 8000df8:	4291      	cmp	r1, r2
 8000dfa:	d908      	bls.n	8000e0e <__udivmoddi4+0x282>
 8000dfc:	eb1c 0202 	adds.w	r2, ip, r2
 8000e00:	f105 38ff 	add.w	r8, r5, #4294967295
 8000e04:	d216      	bcs.n	8000e34 <__udivmoddi4+0x2a8>
 8000e06:	4291      	cmp	r1, r2
 8000e08:	d914      	bls.n	8000e34 <__udivmoddi4+0x2a8>
 8000e0a:	3d02      	subs	r5, #2
 8000e0c:	4462      	add	r2, ip
 8000e0e:	1a52      	subs	r2, r2, r1
 8000e10:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000e14:	e738      	b.n	8000c88 <__udivmoddi4+0xfc>
 8000e16:	4631      	mov	r1, r6
 8000e18:	4630      	mov	r0, r6
 8000e1a:	e708      	b.n	8000c2e <__udivmoddi4+0xa2>
 8000e1c:	4639      	mov	r1, r7
 8000e1e:	e6e6      	b.n	8000bee <__udivmoddi4+0x62>
 8000e20:	4610      	mov	r0, r2
 8000e22:	e6fb      	b.n	8000c1c <__udivmoddi4+0x90>
 8000e24:	4548      	cmp	r0, r9
 8000e26:	d2a9      	bcs.n	8000d7c <__udivmoddi4+0x1f0>
 8000e28:	ebb9 0802 	subs.w	r8, r9, r2
 8000e2c:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000e30:	3b01      	subs	r3, #1
 8000e32:	e7a3      	b.n	8000d7c <__udivmoddi4+0x1f0>
 8000e34:	4645      	mov	r5, r8
 8000e36:	e7ea      	b.n	8000e0e <__udivmoddi4+0x282>
 8000e38:	462b      	mov	r3, r5
 8000e3a:	e794      	b.n	8000d66 <__udivmoddi4+0x1da>
 8000e3c:	4640      	mov	r0, r8
 8000e3e:	e7d1      	b.n	8000de4 <__udivmoddi4+0x258>
 8000e40:	46d0      	mov	r8, sl
 8000e42:	e77b      	b.n	8000d3c <__udivmoddi4+0x1b0>
 8000e44:	3d02      	subs	r5, #2
 8000e46:	4462      	add	r2, ip
 8000e48:	e732      	b.n	8000cb0 <__udivmoddi4+0x124>
 8000e4a:	4608      	mov	r0, r1
 8000e4c:	e70a      	b.n	8000c64 <__udivmoddi4+0xd8>
 8000e4e:	4464      	add	r4, ip
 8000e50:	3802      	subs	r0, #2
 8000e52:	e742      	b.n	8000cda <__udivmoddi4+0x14e>

08000e54 <__aeabi_idiv0>:
 8000e54:	4770      	bx	lr
 8000e56:	bf00      	nop

08000e58 <TrimRead>:



// Read the Trimming parameters saved in the NVM ROM of the device
void TrimRead(void)
{
 8000e58:	b580      	push	{r7, lr}
 8000e5a:	b08c      	sub	sp, #48	; 0x30
 8000e5c:	af04      	add	r7, sp, #16
	uint8_t trimdata[32];
	// Read NVM from 0x88 to 0xA1
	HAL_I2C_Mem_Read(BMP280_I2C, BMP280_ADDRESS, 0x88, 1, trimdata, 25, HAL_MAX_DELAY);
 8000e5e:	f04f 33ff 	mov.w	r3, #4294967295
 8000e62:	9302      	str	r3, [sp, #8]
 8000e64:	2319      	movs	r3, #25
 8000e66:	9301      	str	r3, [sp, #4]
 8000e68:	463b      	mov	r3, r7
 8000e6a:	9300      	str	r3, [sp, #0]
 8000e6c:	2301      	movs	r3, #1
 8000e6e:	2288      	movs	r2, #136	; 0x88
 8000e70:	21ec      	movs	r1, #236	; 0xec
 8000e72:	4857      	ldr	r0, [pc, #348]	; (8000fd0 <TrimRead+0x178>)
 8000e74:	f004 fd02 	bl	800587c <HAL_I2C_Mem_Read>

	// Read NVM from 0xE1 to 0xE7
	HAL_I2C_Mem_Read(BMP280_I2C, BMP280_ADDRESS, 0xE1, 1, (uint8_t *)trimdata+25, 7, HAL_MAX_DELAY);
 8000e78:	463b      	mov	r3, r7
 8000e7a:	3319      	adds	r3, #25
 8000e7c:	f04f 32ff 	mov.w	r2, #4294967295
 8000e80:	9202      	str	r2, [sp, #8]
 8000e82:	2207      	movs	r2, #7
 8000e84:	9201      	str	r2, [sp, #4]
 8000e86:	9300      	str	r3, [sp, #0]
 8000e88:	2301      	movs	r3, #1
 8000e8a:	22e1      	movs	r2, #225	; 0xe1
 8000e8c:	21ec      	movs	r1, #236	; 0xec
 8000e8e:	4850      	ldr	r0, [pc, #320]	; (8000fd0 <TrimRead+0x178>)
 8000e90:	f004 fcf4 	bl	800587c <HAL_I2C_Mem_Read>

	// Arrange the data as per the datasheet (page no. 24)
	dig_T1 = (trimdata[1]<<8) | trimdata[0];
 8000e94:	787b      	ldrb	r3, [r7, #1]
 8000e96:	021b      	lsls	r3, r3, #8
 8000e98:	b21a      	sxth	r2, r3
 8000e9a:	783b      	ldrb	r3, [r7, #0]
 8000e9c:	b21b      	sxth	r3, r3
 8000e9e:	4313      	orrs	r3, r2
 8000ea0:	b21b      	sxth	r3, r3
 8000ea2:	b29a      	uxth	r2, r3
 8000ea4:	4b4b      	ldr	r3, [pc, #300]	; (8000fd4 <TrimRead+0x17c>)
 8000ea6:	801a      	strh	r2, [r3, #0]
	dig_T2 = (trimdata[3]<<8) | trimdata[2];
 8000ea8:	78fb      	ldrb	r3, [r7, #3]
 8000eaa:	021b      	lsls	r3, r3, #8
 8000eac:	b21a      	sxth	r2, r3
 8000eae:	78bb      	ldrb	r3, [r7, #2]
 8000eb0:	b21b      	sxth	r3, r3
 8000eb2:	4313      	orrs	r3, r2
 8000eb4:	b21a      	sxth	r2, r3
 8000eb6:	4b48      	ldr	r3, [pc, #288]	; (8000fd8 <TrimRead+0x180>)
 8000eb8:	801a      	strh	r2, [r3, #0]
	dig_T3 = (trimdata[5]<<8) | trimdata[4];
 8000eba:	797b      	ldrb	r3, [r7, #5]
 8000ebc:	021b      	lsls	r3, r3, #8
 8000ebe:	b21a      	sxth	r2, r3
 8000ec0:	793b      	ldrb	r3, [r7, #4]
 8000ec2:	b21b      	sxth	r3, r3
 8000ec4:	4313      	orrs	r3, r2
 8000ec6:	b21a      	sxth	r2, r3
 8000ec8:	4b44      	ldr	r3, [pc, #272]	; (8000fdc <TrimRead+0x184>)
 8000eca:	801a      	strh	r2, [r3, #0]
	dig_P1 = (trimdata[7]<<8) | trimdata[5];
 8000ecc:	79fb      	ldrb	r3, [r7, #7]
 8000ece:	021b      	lsls	r3, r3, #8
 8000ed0:	b21a      	sxth	r2, r3
 8000ed2:	797b      	ldrb	r3, [r7, #5]
 8000ed4:	b21b      	sxth	r3, r3
 8000ed6:	4313      	orrs	r3, r2
 8000ed8:	b21b      	sxth	r3, r3
 8000eda:	b29a      	uxth	r2, r3
 8000edc:	4b40      	ldr	r3, [pc, #256]	; (8000fe0 <TrimRead+0x188>)
 8000ede:	801a      	strh	r2, [r3, #0]
	dig_P2 = (trimdata[9]<<8) | trimdata[6];
 8000ee0:	7a7b      	ldrb	r3, [r7, #9]
 8000ee2:	021b      	lsls	r3, r3, #8
 8000ee4:	b21a      	sxth	r2, r3
 8000ee6:	79bb      	ldrb	r3, [r7, #6]
 8000ee8:	b21b      	sxth	r3, r3
 8000eea:	4313      	orrs	r3, r2
 8000eec:	b21a      	sxth	r2, r3
 8000eee:	4b3d      	ldr	r3, [pc, #244]	; (8000fe4 <TrimRead+0x18c>)
 8000ef0:	801a      	strh	r2, [r3, #0]
	dig_P3 = (trimdata[11]<<8) | trimdata[10];
 8000ef2:	7afb      	ldrb	r3, [r7, #11]
 8000ef4:	021b      	lsls	r3, r3, #8
 8000ef6:	b21a      	sxth	r2, r3
 8000ef8:	7abb      	ldrb	r3, [r7, #10]
 8000efa:	b21b      	sxth	r3, r3
 8000efc:	4313      	orrs	r3, r2
 8000efe:	b21a      	sxth	r2, r3
 8000f00:	4b39      	ldr	r3, [pc, #228]	; (8000fe8 <TrimRead+0x190>)
 8000f02:	801a      	strh	r2, [r3, #0]
	dig_P4 = (trimdata[13]<<8) | trimdata[12];
 8000f04:	7b7b      	ldrb	r3, [r7, #13]
 8000f06:	021b      	lsls	r3, r3, #8
 8000f08:	b21a      	sxth	r2, r3
 8000f0a:	7b3b      	ldrb	r3, [r7, #12]
 8000f0c:	b21b      	sxth	r3, r3
 8000f0e:	4313      	orrs	r3, r2
 8000f10:	b21a      	sxth	r2, r3
 8000f12:	4b36      	ldr	r3, [pc, #216]	; (8000fec <TrimRead+0x194>)
 8000f14:	801a      	strh	r2, [r3, #0]
	dig_P5 = (trimdata[15]<<8) | trimdata[14];
 8000f16:	7bfb      	ldrb	r3, [r7, #15]
 8000f18:	021b      	lsls	r3, r3, #8
 8000f1a:	b21a      	sxth	r2, r3
 8000f1c:	7bbb      	ldrb	r3, [r7, #14]
 8000f1e:	b21b      	sxth	r3, r3
 8000f20:	4313      	orrs	r3, r2
 8000f22:	b21a      	sxth	r2, r3
 8000f24:	4b32      	ldr	r3, [pc, #200]	; (8000ff0 <TrimRead+0x198>)
 8000f26:	801a      	strh	r2, [r3, #0]
	dig_P6 = (trimdata[17]<<8) | trimdata[16];
 8000f28:	7c7b      	ldrb	r3, [r7, #17]
 8000f2a:	021b      	lsls	r3, r3, #8
 8000f2c:	b21a      	sxth	r2, r3
 8000f2e:	7c3b      	ldrb	r3, [r7, #16]
 8000f30:	b21b      	sxth	r3, r3
 8000f32:	4313      	orrs	r3, r2
 8000f34:	b21a      	sxth	r2, r3
 8000f36:	4b2f      	ldr	r3, [pc, #188]	; (8000ff4 <TrimRead+0x19c>)
 8000f38:	801a      	strh	r2, [r3, #0]
	dig_P7 = (trimdata[19]<<8) | trimdata[18];
 8000f3a:	7cfb      	ldrb	r3, [r7, #19]
 8000f3c:	021b      	lsls	r3, r3, #8
 8000f3e:	b21a      	sxth	r2, r3
 8000f40:	7cbb      	ldrb	r3, [r7, #18]
 8000f42:	b21b      	sxth	r3, r3
 8000f44:	4313      	orrs	r3, r2
 8000f46:	b21a      	sxth	r2, r3
 8000f48:	4b2b      	ldr	r3, [pc, #172]	; (8000ff8 <TrimRead+0x1a0>)
 8000f4a:	801a      	strh	r2, [r3, #0]
	dig_P8 = (trimdata[21]<<8) | trimdata[20];
 8000f4c:	7d7b      	ldrb	r3, [r7, #21]
 8000f4e:	021b      	lsls	r3, r3, #8
 8000f50:	b21a      	sxth	r2, r3
 8000f52:	7d3b      	ldrb	r3, [r7, #20]
 8000f54:	b21b      	sxth	r3, r3
 8000f56:	4313      	orrs	r3, r2
 8000f58:	b21a      	sxth	r2, r3
 8000f5a:	4b28      	ldr	r3, [pc, #160]	; (8000ffc <TrimRead+0x1a4>)
 8000f5c:	801a      	strh	r2, [r3, #0]
	dig_P9 = (trimdata[23]<<8) | trimdata[22];
 8000f5e:	7dfb      	ldrb	r3, [r7, #23]
 8000f60:	021b      	lsls	r3, r3, #8
 8000f62:	b21a      	sxth	r2, r3
 8000f64:	7dbb      	ldrb	r3, [r7, #22]
 8000f66:	b21b      	sxth	r3, r3
 8000f68:	4313      	orrs	r3, r2
 8000f6a:	b21a      	sxth	r2, r3
 8000f6c:	4b24      	ldr	r3, [pc, #144]	; (8001000 <TrimRead+0x1a8>)
 8000f6e:	801a      	strh	r2, [r3, #0]
	dig_H1 = trimdata[24];
 8000f70:	7e3b      	ldrb	r3, [r7, #24]
 8000f72:	b29a      	uxth	r2, r3
 8000f74:	4b23      	ldr	r3, [pc, #140]	; (8001004 <TrimRead+0x1ac>)
 8000f76:	801a      	strh	r2, [r3, #0]
	dig_H2 = (trimdata[26]<<8) | trimdata[25];
 8000f78:	7ebb      	ldrb	r3, [r7, #26]
 8000f7a:	021b      	lsls	r3, r3, #8
 8000f7c:	b21a      	sxth	r2, r3
 8000f7e:	7e7b      	ldrb	r3, [r7, #25]
 8000f80:	b21b      	sxth	r3, r3
 8000f82:	4313      	orrs	r3, r2
 8000f84:	b21a      	sxth	r2, r3
 8000f86:	4b20      	ldr	r3, [pc, #128]	; (8001008 <TrimRead+0x1b0>)
 8000f88:	801a      	strh	r2, [r3, #0]
	dig_H3 = (trimdata[27]);
 8000f8a:	7efb      	ldrb	r3, [r7, #27]
 8000f8c:	b29a      	uxth	r2, r3
 8000f8e:	4b1f      	ldr	r3, [pc, #124]	; (800100c <TrimRead+0x1b4>)
 8000f90:	801a      	strh	r2, [r3, #0]
	dig_H4 = (trimdata[28]<<4) | (trimdata[29] & 0x0f);
 8000f92:	7f3b      	ldrb	r3, [r7, #28]
 8000f94:	011b      	lsls	r3, r3, #4
 8000f96:	b21a      	sxth	r2, r3
 8000f98:	7f7b      	ldrb	r3, [r7, #29]
 8000f9a:	b21b      	sxth	r3, r3
 8000f9c:	f003 030f 	and.w	r3, r3, #15
 8000fa0:	b21b      	sxth	r3, r3
 8000fa2:	4313      	orrs	r3, r2
 8000fa4:	b21a      	sxth	r2, r3
 8000fa6:	4b1a      	ldr	r3, [pc, #104]	; (8001010 <TrimRead+0x1b8>)
 8000fa8:	801a      	strh	r2, [r3, #0]
	dig_H5 = (trimdata[30]<<4) | (trimdata[29]>>4);
 8000faa:	7fbb      	ldrb	r3, [r7, #30]
 8000fac:	011b      	lsls	r3, r3, #4
 8000fae:	b21a      	sxth	r2, r3
 8000fb0:	7f7b      	ldrb	r3, [r7, #29]
 8000fb2:	091b      	lsrs	r3, r3, #4
 8000fb4:	b2db      	uxtb	r3, r3
 8000fb6:	b21b      	sxth	r3, r3
 8000fb8:	4313      	orrs	r3, r2
 8000fba:	b21a      	sxth	r2, r3
 8000fbc:	4b15      	ldr	r3, [pc, #84]	; (8001014 <TrimRead+0x1bc>)
 8000fbe:	801a      	strh	r2, [r3, #0]
	dig_H6 = (trimdata[31]);
 8000fc0:	7ffb      	ldrb	r3, [r7, #31]
 8000fc2:	b21a      	sxth	r2, r3
 8000fc4:	4b14      	ldr	r3, [pc, #80]	; (8001018 <TrimRead+0x1c0>)
 8000fc6:	801a      	strh	r2, [r3, #0]
}
 8000fc8:	bf00      	nop
 8000fca:	3720      	adds	r7, #32
 8000fcc:	46bd      	mov	sp, r7
 8000fce:	bd80      	pop	{r7, pc}
 8000fd0:	20000158 	.word	0x20000158
 8000fd4:	20000128 	.word	0x20000128
 8000fd8:	20000130 	.word	0x20000130
 8000fdc:	20000132 	.word	0x20000132
 8000fe0:	2000012a 	.word	0x2000012a
 8000fe4:	20000134 	.word	0x20000134
 8000fe8:	20000136 	.word	0x20000136
 8000fec:	20000138 	.word	0x20000138
 8000ff0:	2000013a 	.word	0x2000013a
 8000ff4:	2000013c 	.word	0x2000013c
 8000ff8:	2000013e 	.word	0x2000013e
 8000ffc:	20000140 	.word	0x20000140
 8001000:	20000142 	.word	0x20000142
 8001004:	2000012c 	.word	0x2000012c
 8001008:	20000144 	.word	0x20000144
 800100c:	2000012e 	.word	0x2000012e
 8001010:	20000146 	.word	0x20000146
 8001014:	20000148 	.word	0x20000148
 8001018:	2000014a 	.word	0x2000014a

0800101c <BMP280_Config>:
 *         IIR is used to avoid the short term fluctuations
 *         Check datasheet page no 18 and page no 30
 */

int BMP280_Config (uint8_t osrs_t, uint8_t osrs_p, uint8_t osrs_h, uint8_t mode, uint8_t t_sb, uint8_t filter)
{
 800101c:	b590      	push	{r4, r7, lr}
 800101e:	b089      	sub	sp, #36	; 0x24
 8001020:	af04      	add	r7, sp, #16
 8001022:	4604      	mov	r4, r0
 8001024:	4608      	mov	r0, r1
 8001026:	4611      	mov	r1, r2
 8001028:	461a      	mov	r2, r3
 800102a:	4623      	mov	r3, r4
 800102c:	71fb      	strb	r3, [r7, #7]
 800102e:	4603      	mov	r3, r0
 8001030:	71bb      	strb	r3, [r7, #6]
 8001032:	460b      	mov	r3, r1
 8001034:	717b      	strb	r3, [r7, #5]
 8001036:	4613      	mov	r3, r2
 8001038:	713b      	strb	r3, [r7, #4]
	// Read the Trimming parameters
	TrimRead();
 800103a:	f7ff ff0d 	bl	8000e58 <TrimRead>


	uint8_t datatowrite = 0;
 800103e:	2300      	movs	r3, #0
 8001040:	73fb      	strb	r3, [r7, #15]
	uint8_t datacheck = 0;
 8001042:	2300      	movs	r3, #0
 8001044:	73bb      	strb	r3, [r7, #14]

	// Reset the device
	datatowrite = 0xB6;  // reset sequence
 8001046:	23b6      	movs	r3, #182	; 0xb6
 8001048:	73fb      	strb	r3, [r7, #15]
	if (HAL_I2C_Mem_Write(BMP280_I2C, BMP280_ADDRESS, RESET_REG, 1, &datatowrite, 1, 1000) != HAL_OK)
 800104a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800104e:	9302      	str	r3, [sp, #8]
 8001050:	2301      	movs	r3, #1
 8001052:	9301      	str	r3, [sp, #4]
 8001054:	f107 030f 	add.w	r3, r7, #15
 8001058:	9300      	str	r3, [sp, #0]
 800105a:	2301      	movs	r3, #1
 800105c:	22e0      	movs	r2, #224	; 0xe0
 800105e:	21ec      	movs	r1, #236	; 0xec
 8001060:	4858      	ldr	r0, [pc, #352]	; (80011c4 <BMP280_Config+0x1a8>)
 8001062:	f004 fb11 	bl	8005688 <HAL_I2C_Mem_Write>
 8001066:	4603      	mov	r3, r0
 8001068:	2b00      	cmp	r3, #0
 800106a:	d002      	beq.n	8001072 <BMP280_Config+0x56>
	{
		return -1;
 800106c:	f04f 33ff 	mov.w	r3, #4294967295
 8001070:	e0a3      	b.n	80011ba <BMP280_Config+0x19e>
	}

	HAL_Delay (100);
 8001072:	2064      	movs	r0, #100	; 0x64
 8001074:	f002 ff6a 	bl	8003f4c <HAL_Delay>


	// write the humidity oversampling to 0xF2
	datatowrite = osrs_h;
 8001078:	797b      	ldrb	r3, [r7, #5]
 800107a:	73fb      	strb	r3, [r7, #15]
	if (HAL_I2C_Mem_Write(BMP280_I2C, BMP280_ADDRESS, CTRL_HUM_REG, 1, &datatowrite, 1, 1000) != HAL_OK)
 800107c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001080:	9302      	str	r3, [sp, #8]
 8001082:	2301      	movs	r3, #1
 8001084:	9301      	str	r3, [sp, #4]
 8001086:	f107 030f 	add.w	r3, r7, #15
 800108a:	9300      	str	r3, [sp, #0]
 800108c:	2301      	movs	r3, #1
 800108e:	22f2      	movs	r2, #242	; 0xf2
 8001090:	21ec      	movs	r1, #236	; 0xec
 8001092:	484c      	ldr	r0, [pc, #304]	; (80011c4 <BMP280_Config+0x1a8>)
 8001094:	f004 faf8 	bl	8005688 <HAL_I2C_Mem_Write>
 8001098:	4603      	mov	r3, r0
 800109a:	2b00      	cmp	r3, #0
 800109c:	d002      	beq.n	80010a4 <BMP280_Config+0x88>
	{
		return -2;
 800109e:	f06f 0301 	mvn.w	r3, #1
 80010a2:	e08a      	b.n	80011ba <BMP280_Config+0x19e>
	}
	HAL_Delay (100);
 80010a4:	2064      	movs	r0, #100	; 0x64
 80010a6:	f002 ff51 	bl	8003f4c <HAL_Delay>
	HAL_I2C_Mem_Read(BMP280_I2C, BMP280_ADDRESS, CTRL_HUM_REG, 1, &datacheck, 1, 1000);
 80010aa:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80010ae:	9302      	str	r3, [sp, #8]
 80010b0:	2301      	movs	r3, #1
 80010b2:	9301      	str	r3, [sp, #4]
 80010b4:	f107 030e 	add.w	r3, r7, #14
 80010b8:	9300      	str	r3, [sp, #0]
 80010ba:	2301      	movs	r3, #1
 80010bc:	22f2      	movs	r2, #242	; 0xf2
 80010be:	21ec      	movs	r1, #236	; 0xec
 80010c0:	4840      	ldr	r0, [pc, #256]	; (80011c4 <BMP280_Config+0x1a8>)
 80010c2:	f004 fbdb 	bl	800587c <HAL_I2C_Mem_Read>
	if (datacheck != datatowrite)
 80010c6:	7bba      	ldrb	r2, [r7, #14]
 80010c8:	7bfb      	ldrb	r3, [r7, #15]
 80010ca:	429a      	cmp	r2, r3
 80010cc:	d002      	beq.n	80010d4 <BMP280_Config+0xb8>
	{
		return -3;
 80010ce:	f06f 0302 	mvn.w	r3, #2
 80010d2:	e072      	b.n	80011ba <BMP280_Config+0x19e>
	}


	// write the standby time and IIR filter coeff to 0xF5
	datatowrite = (t_sb <<5) |(filter << 2);
 80010d4:	f897 3020 	ldrb.w	r3, [r7, #32]
 80010d8:	015b      	lsls	r3, r3, #5
 80010da:	b25a      	sxtb	r2, r3
 80010dc:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 80010e0:	009b      	lsls	r3, r3, #2
 80010e2:	b25b      	sxtb	r3, r3
 80010e4:	4313      	orrs	r3, r2
 80010e6:	b25b      	sxtb	r3, r3
 80010e8:	b2db      	uxtb	r3, r3
 80010ea:	73fb      	strb	r3, [r7, #15]
	if (HAL_I2C_Mem_Write(BMP280_I2C, BMP280_ADDRESS, CONFIG_REG, 1, &datatowrite, 1, 1000) != HAL_OK)
 80010ec:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80010f0:	9302      	str	r3, [sp, #8]
 80010f2:	2301      	movs	r3, #1
 80010f4:	9301      	str	r3, [sp, #4]
 80010f6:	f107 030f 	add.w	r3, r7, #15
 80010fa:	9300      	str	r3, [sp, #0]
 80010fc:	2301      	movs	r3, #1
 80010fe:	22f5      	movs	r2, #245	; 0xf5
 8001100:	21ec      	movs	r1, #236	; 0xec
 8001102:	4830      	ldr	r0, [pc, #192]	; (80011c4 <BMP280_Config+0x1a8>)
 8001104:	f004 fac0 	bl	8005688 <HAL_I2C_Mem_Write>
 8001108:	4603      	mov	r3, r0
 800110a:	2b00      	cmp	r3, #0
 800110c:	d002      	beq.n	8001114 <BMP280_Config+0xf8>
	{
		return -4;
 800110e:	f06f 0303 	mvn.w	r3, #3
 8001112:	e052      	b.n	80011ba <BMP280_Config+0x19e>
	}
	HAL_Delay (100);
 8001114:	2064      	movs	r0, #100	; 0x64
 8001116:	f002 ff19 	bl	8003f4c <HAL_Delay>
	HAL_I2C_Mem_Read(BMP280_I2C, BMP280_ADDRESS, CONFIG_REG, 1, &datacheck, 1, 1000);
 800111a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800111e:	9302      	str	r3, [sp, #8]
 8001120:	2301      	movs	r3, #1
 8001122:	9301      	str	r3, [sp, #4]
 8001124:	f107 030e 	add.w	r3, r7, #14
 8001128:	9300      	str	r3, [sp, #0]
 800112a:	2301      	movs	r3, #1
 800112c:	22f5      	movs	r2, #245	; 0xf5
 800112e:	21ec      	movs	r1, #236	; 0xec
 8001130:	4824      	ldr	r0, [pc, #144]	; (80011c4 <BMP280_Config+0x1a8>)
 8001132:	f004 fba3 	bl	800587c <HAL_I2C_Mem_Read>
	if (datacheck != datatowrite)
 8001136:	7bba      	ldrb	r2, [r7, #14]
 8001138:	7bfb      	ldrb	r3, [r7, #15]
 800113a:	429a      	cmp	r2, r3
 800113c:	d002      	beq.n	8001144 <BMP280_Config+0x128>
	{
		return -5;
 800113e:	f06f 0304 	mvn.w	r3, #4
 8001142:	e03a      	b.n	80011ba <BMP280_Config+0x19e>
	}


	// write the pressure and temp oversampling along with mode to 0xF4
	datatowrite = (osrs_t <<5) |(osrs_p << 2) | mode;
 8001144:	79fb      	ldrb	r3, [r7, #7]
 8001146:	015b      	lsls	r3, r3, #5
 8001148:	b25a      	sxtb	r2, r3
 800114a:	79bb      	ldrb	r3, [r7, #6]
 800114c:	009b      	lsls	r3, r3, #2
 800114e:	b25b      	sxtb	r3, r3
 8001150:	4313      	orrs	r3, r2
 8001152:	b25a      	sxtb	r2, r3
 8001154:	f997 3004 	ldrsb.w	r3, [r7, #4]
 8001158:	4313      	orrs	r3, r2
 800115a:	b25b      	sxtb	r3, r3
 800115c:	b2db      	uxtb	r3, r3
 800115e:	73fb      	strb	r3, [r7, #15]
	if (HAL_I2C_Mem_Write(BMP280_I2C, BMP280_ADDRESS, CTRL_MEAS_REG, 1, &datatowrite, 1, 1000) != HAL_OK)
 8001160:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001164:	9302      	str	r3, [sp, #8]
 8001166:	2301      	movs	r3, #1
 8001168:	9301      	str	r3, [sp, #4]
 800116a:	f107 030f 	add.w	r3, r7, #15
 800116e:	9300      	str	r3, [sp, #0]
 8001170:	2301      	movs	r3, #1
 8001172:	22f4      	movs	r2, #244	; 0xf4
 8001174:	21ec      	movs	r1, #236	; 0xec
 8001176:	4813      	ldr	r0, [pc, #76]	; (80011c4 <BMP280_Config+0x1a8>)
 8001178:	f004 fa86 	bl	8005688 <HAL_I2C_Mem_Write>
 800117c:	4603      	mov	r3, r0
 800117e:	2b00      	cmp	r3, #0
 8001180:	d002      	beq.n	8001188 <BMP280_Config+0x16c>
	{
		return -6;
 8001182:	f06f 0305 	mvn.w	r3, #5
 8001186:	e018      	b.n	80011ba <BMP280_Config+0x19e>
	}
	HAL_Delay (100);
 8001188:	2064      	movs	r0, #100	; 0x64
 800118a:	f002 fedf 	bl	8003f4c <HAL_Delay>
	HAL_I2C_Mem_Read(BMP280_I2C, BMP280_ADDRESS, CTRL_MEAS_REG, 1, &datacheck, 1, 1000);
 800118e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001192:	9302      	str	r3, [sp, #8]
 8001194:	2301      	movs	r3, #1
 8001196:	9301      	str	r3, [sp, #4]
 8001198:	f107 030e 	add.w	r3, r7, #14
 800119c:	9300      	str	r3, [sp, #0]
 800119e:	2301      	movs	r3, #1
 80011a0:	22f4      	movs	r2, #244	; 0xf4
 80011a2:	21ec      	movs	r1, #236	; 0xec
 80011a4:	4807      	ldr	r0, [pc, #28]	; (80011c4 <BMP280_Config+0x1a8>)
 80011a6:	f004 fb69 	bl	800587c <HAL_I2C_Mem_Read>
	if (datacheck != datatowrite)
 80011aa:	7bba      	ldrb	r2, [r7, #14]
 80011ac:	7bfb      	ldrb	r3, [r7, #15]
 80011ae:	429a      	cmp	r2, r3
 80011b0:	d002      	beq.n	80011b8 <BMP280_Config+0x19c>
	{
		return -7;
 80011b2:	f06f 0306 	mvn.w	r3, #6
 80011b6:	e000      	b.n	80011ba <BMP280_Config+0x19e>
	}

	return 0;
 80011b8:	2300      	movs	r3, #0
}
 80011ba:	4618      	mov	r0, r3
 80011bc:	3714      	adds	r7, #20
 80011be:	46bd      	mov	sp, r7
 80011c0:	bd90      	pop	{r4, r7, pc}
 80011c2:	bf00      	nop
 80011c4:	20000158 	.word	0x20000158

080011c8 <BMPReadRaw>:


int BMPReadRaw(void)
{
 80011c8:	b580      	push	{r7, lr}
 80011ca:	b086      	sub	sp, #24
 80011cc:	af04      	add	r7, sp, #16
	uint8_t RawData[6];

	// Check the chip ID before reading
	HAL_I2C_Mem_Read(&hi2c1, BMP280_ADDRESS, ID_REG, 1, &chipID, 1, 1000);
 80011ce:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80011d2:	9302      	str	r3, [sp, #8]
 80011d4:	2301      	movs	r3, #1
 80011d6:	9301      	str	r3, [sp, #4]
 80011d8:	4b1c      	ldr	r3, [pc, #112]	; (800124c <BMPReadRaw+0x84>)
 80011da:	9300      	str	r3, [sp, #0]
 80011dc:	2301      	movs	r3, #1
 80011de:	22d0      	movs	r2, #208	; 0xd0
 80011e0:	21ec      	movs	r1, #236	; 0xec
 80011e2:	481b      	ldr	r0, [pc, #108]	; (8001250 <BMPReadRaw+0x88>)
 80011e4:	f004 fb4a 	bl	800587c <HAL_I2C_Mem_Read>

	if (chipID == 0x58)
 80011e8:	4b18      	ldr	r3, [pc, #96]	; (800124c <BMPReadRaw+0x84>)
 80011ea:	781b      	ldrb	r3, [r3, #0]
 80011ec:	2b58      	cmp	r3, #88	; 0x58
 80011ee:	d127      	bne.n	8001240 <BMPReadRaw+0x78>
	{
		// Read the Registers 0xF7 to 0xFE
		HAL_I2C_Mem_Read(BMP280_I2C, BMP280_ADDRESS, PRESS_MSB_REG, 1, RawData, 6, HAL_MAX_DELAY);
 80011f0:	f04f 33ff 	mov.w	r3, #4294967295
 80011f4:	9302      	str	r3, [sp, #8]
 80011f6:	2306      	movs	r3, #6
 80011f8:	9301      	str	r3, [sp, #4]
 80011fa:	463b      	mov	r3, r7
 80011fc:	9300      	str	r3, [sp, #0]
 80011fe:	2301      	movs	r3, #1
 8001200:	22f7      	movs	r2, #247	; 0xf7
 8001202:	21ec      	movs	r1, #236	; 0xec
 8001204:	4812      	ldr	r0, [pc, #72]	; (8001250 <BMPReadRaw+0x88>)
 8001206:	f004 fb39 	bl	800587c <HAL_I2C_Mem_Read>

		/* Calculate the Raw data for the parameters
		 * Here the Pressure and Temperature are in 20 bit format and humidity in 16 bit format
		 */
		pRaw = (RawData[0]<<12)|(RawData[1]<<4)|(RawData[2]>>4);
 800120a:	783b      	ldrb	r3, [r7, #0]
 800120c:	031a      	lsls	r2, r3, #12
 800120e:	787b      	ldrb	r3, [r7, #1]
 8001210:	011b      	lsls	r3, r3, #4
 8001212:	4313      	orrs	r3, r2
 8001214:	78ba      	ldrb	r2, [r7, #2]
 8001216:	0912      	lsrs	r2, r2, #4
 8001218:	b2d2      	uxtb	r2, r2
 800121a:	4313      	orrs	r3, r2
 800121c:	4a0d      	ldr	r2, [pc, #52]	; (8001254 <BMPReadRaw+0x8c>)
 800121e:	6013      	str	r3, [r2, #0]
		tRaw = (RawData[3]<<12)|(RawData[4]<<4)|(RawData[5]>>4);
 8001220:	78fb      	ldrb	r3, [r7, #3]
 8001222:	031a      	lsls	r2, r3, #12
 8001224:	793b      	ldrb	r3, [r7, #4]
 8001226:	011b      	lsls	r3, r3, #4
 8001228:	4313      	orrs	r3, r2
 800122a:	797a      	ldrb	r2, [r7, #5]
 800122c:	0912      	lsrs	r2, r2, #4
 800122e:	b2d2      	uxtb	r2, r2
 8001230:	4313      	orrs	r3, r2
 8001232:	4a09      	ldr	r2, [pc, #36]	; (8001258 <BMPReadRaw+0x90>)
 8001234:	6013      	str	r3, [r2, #0]
		hRaw = 0;
 8001236:	4b09      	ldr	r3, [pc, #36]	; (800125c <BMPReadRaw+0x94>)
 8001238:	2200      	movs	r2, #0
 800123a:	601a      	str	r2, [r3, #0]

		return 0;
 800123c:	2300      	movs	r3, #0
 800123e:	e001      	b.n	8001244 <BMPReadRaw+0x7c>
	}

	else return -1;
 8001240:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001244:	4618      	mov	r0, r3
 8001246:	3708      	adds	r7, #8
 8001248:	46bd      	mov	sp, r7
 800124a:	bd80      	pop	{r7, pc}
 800124c:	20000118 	.word	0x20000118
 8001250:	20000158 	.word	0x20000158
 8001254:	20000120 	.word	0x20000120
 8001258:	2000011c 	.word	0x2000011c
 800125c:	20000124 	.word	0x20000124

08001260 <BMP280_compensate_P_int64>:
#if SUPPORT_64BIT
/* Returns pressure in Pa as unsigned 32 bit integer in Q24.8 format (24 integer bits and 8 fractional bits).
   Output value of “24674867” represents 24674867/256 = 96386.2 Pa = 963.862 hPa
*/
uint32_t BMP280_compensate_P_int64(int32_t adc_P)
{
 8001260:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8001264:	b0ca      	sub	sp, #296	; 0x128
 8001266:	af00      	add	r7, sp, #0
 8001268:	f8c7 010c 	str.w	r0, [r7, #268]	; 0x10c
	int64_t var1, var2, p;
	var1 = ((int64_t)t_fine) - 128000;
 800126c:	4baf      	ldr	r3, [pc, #700]	; (800152c <BMP280_compensate_P_int64+0x2cc>)
 800126e:	681b      	ldr	r3, [r3, #0]
 8001270:	17da      	asrs	r2, r3, #31
 8001272:	461c      	mov	r4, r3
 8001274:	4615      	mov	r5, r2
 8001276:	f5b4 3afa 	subs.w	sl, r4, #128000	; 0x1f400
 800127a:	f145 3bff 	adc.w	fp, r5, #4294967295
 800127e:	e9c7 ab48 	strd	sl, fp, [r7, #288]	; 0x120
	var2 = var1 * var1 * (int64_t)dig_P6;
 8001282:	f8d7 2124 	ldr.w	r2, [r7, #292]	; 0x124
 8001286:	f8d7 3120 	ldr.w	r3, [r7, #288]	; 0x120
 800128a:	fb03 f102 	mul.w	r1, r3, r2
 800128e:	f8d7 2124 	ldr.w	r2, [r7, #292]	; 0x124
 8001292:	f8d7 3120 	ldr.w	r3, [r7, #288]	; 0x120
 8001296:	fb02 f303 	mul.w	r3, r2, r3
 800129a:	18ca      	adds	r2, r1, r3
 800129c:	f8d7 3120 	ldr.w	r3, [r7, #288]	; 0x120
 80012a0:	fba3 8903 	umull	r8, r9, r3, r3
 80012a4:	eb02 0309 	add.w	r3, r2, r9
 80012a8:	4699      	mov	r9, r3
 80012aa:	4ba1      	ldr	r3, [pc, #644]	; (8001530 <BMP280_compensate_P_int64+0x2d0>)
 80012ac:	f9b3 3000 	ldrsh.w	r3, [r3]
 80012b0:	b21b      	sxth	r3, r3
 80012b2:	17da      	asrs	r2, r3, #31
 80012b4:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 80012b8:	f8c7 20bc 	str.w	r2, [r7, #188]	; 0xbc
 80012bc:	e9d7 012e 	ldrd	r0, r1, [r7, #184]	; 0xb8
 80012c0:	4603      	mov	r3, r0
 80012c2:	fb03 f209 	mul.w	r2, r3, r9
 80012c6:	460b      	mov	r3, r1
 80012c8:	fb08 f303 	mul.w	r3, r8, r3
 80012cc:	4413      	add	r3, r2
 80012ce:	4602      	mov	r2, r0
 80012d0:	fba8 1202 	umull	r1, r2, r8, r2
 80012d4:	f8c7 20c4 	str.w	r2, [r7, #196]	; 0xc4
 80012d8:	460a      	mov	r2, r1
 80012da:	f8c7 20c0 	str.w	r2, [r7, #192]	; 0xc0
 80012de:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 80012e2:	4413      	add	r3, r2
 80012e4:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 80012e8:	e9d7 3430 	ldrd	r3, r4, [r7, #192]	; 0xc0
 80012ec:	e9c7 3446 	strd	r3, r4, [r7, #280]	; 0x118
 80012f0:	e9c7 3446 	strd	r3, r4, [r7, #280]	; 0x118
	var2 = var2 + ((var1*(int64_t)dig_P5)<<17);
 80012f4:	4b8f      	ldr	r3, [pc, #572]	; (8001534 <BMP280_compensate_P_int64+0x2d4>)
 80012f6:	f9b3 3000 	ldrsh.w	r3, [r3]
 80012fa:	b21b      	sxth	r3, r3
 80012fc:	17da      	asrs	r2, r3, #31
 80012fe:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8001302:	f8c7 20b4 	str.w	r2, [r7, #180]	; 0xb4
 8001306:	f8d7 3120 	ldr.w	r3, [r7, #288]	; 0x120
 800130a:	e9d7 452c 	ldrd	r4, r5, [r7, #176]	; 0xb0
 800130e:	462a      	mov	r2, r5
 8001310:	fb02 f203 	mul.w	r2, r2, r3
 8001314:	f8d7 3124 	ldr.w	r3, [r7, #292]	; 0x124
 8001318:	4621      	mov	r1, r4
 800131a:	fb01 f303 	mul.w	r3, r1, r3
 800131e:	441a      	add	r2, r3
 8001320:	f8d7 3120 	ldr.w	r3, [r7, #288]	; 0x120
 8001324:	4621      	mov	r1, r4
 8001326:	fba3 1301 	umull	r1, r3, r3, r1
 800132a:	f8c7 3104 	str.w	r3, [r7, #260]	; 0x104
 800132e:	460b      	mov	r3, r1
 8001330:	f8c7 3100 	str.w	r3, [r7, #256]	; 0x100
 8001334:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8001338:	18d3      	adds	r3, r2, r3
 800133a:	f8c7 3104 	str.w	r3, [r7, #260]	; 0x104
 800133e:	f04f 0000 	mov.w	r0, #0
 8001342:	f04f 0100 	mov.w	r1, #0
 8001346:	e9d7 4540 	ldrd	r4, r5, [r7, #256]	; 0x100
 800134a:	462b      	mov	r3, r5
 800134c:	0459      	lsls	r1, r3, #17
 800134e:	4623      	mov	r3, r4
 8001350:	ea41 31d3 	orr.w	r1, r1, r3, lsr #15
 8001354:	4623      	mov	r3, r4
 8001356:	0458      	lsls	r0, r3, #17
 8001358:	e9d7 2346 	ldrd	r2, r3, [r7, #280]	; 0x118
 800135c:	1814      	adds	r4, r2, r0
 800135e:	643c      	str	r4, [r7, #64]	; 0x40
 8001360:	414b      	adcs	r3, r1
 8001362:	647b      	str	r3, [r7, #68]	; 0x44
 8001364:	e9d7 3410 	ldrd	r3, r4, [r7, #64]	; 0x40
 8001368:	e9c7 3446 	strd	r3, r4, [r7, #280]	; 0x118
	var2 = var2 + (((int64_t)dig_P4)<<35);
 800136c:	4b72      	ldr	r3, [pc, #456]	; (8001538 <BMP280_compensate_P_int64+0x2d8>)
 800136e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001372:	b21b      	sxth	r3, r3
 8001374:	17da      	asrs	r2, r3, #31
 8001376:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 800137a:	f8c7 20ac 	str.w	r2, [r7, #172]	; 0xac
 800137e:	f04f 0000 	mov.w	r0, #0
 8001382:	f04f 0100 	mov.w	r1, #0
 8001386:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 800138a:	00d9      	lsls	r1, r3, #3
 800138c:	2000      	movs	r0, #0
 800138e:	e9d7 2346 	ldrd	r2, r3, [r7, #280]	; 0x118
 8001392:	1814      	adds	r4, r2, r0
 8001394:	63bc      	str	r4, [r7, #56]	; 0x38
 8001396:	414b      	adcs	r3, r1
 8001398:	63fb      	str	r3, [r7, #60]	; 0x3c
 800139a:	e9d7 340e 	ldrd	r3, r4, [r7, #56]	; 0x38
 800139e:	e9c7 3446 	strd	r3, r4, [r7, #280]	; 0x118
	var1 = ((var1 * var1 * (int64_t)dig_P3)>>8) + ((var1 * (int64_t)dig_P2)<<12);
 80013a2:	f8d7 2124 	ldr.w	r2, [r7, #292]	; 0x124
 80013a6:	f8d7 3120 	ldr.w	r3, [r7, #288]	; 0x120
 80013aa:	fb03 f102 	mul.w	r1, r3, r2
 80013ae:	f8d7 2124 	ldr.w	r2, [r7, #292]	; 0x124
 80013b2:	f8d7 3120 	ldr.w	r3, [r7, #288]	; 0x120
 80013b6:	fb02 f303 	mul.w	r3, r2, r3
 80013ba:	18ca      	adds	r2, r1, r3
 80013bc:	f8d7 3120 	ldr.w	r3, [r7, #288]	; 0x120
 80013c0:	fba3 1303 	umull	r1, r3, r3, r3
 80013c4:	f8c7 30fc 	str.w	r3, [r7, #252]	; 0xfc
 80013c8:	460b      	mov	r3, r1
 80013ca:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 80013ce:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 80013d2:	18d3      	adds	r3, r2, r3
 80013d4:	f8c7 30fc 	str.w	r3, [r7, #252]	; 0xfc
 80013d8:	4b58      	ldr	r3, [pc, #352]	; (800153c <BMP280_compensate_P_int64+0x2dc>)
 80013da:	f9b3 3000 	ldrsh.w	r3, [r3]
 80013de:	b21b      	sxth	r3, r3
 80013e0:	17da      	asrs	r2, r3, #31
 80013e2:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 80013e6:	f8c7 20a4 	str.w	r2, [r7, #164]	; 0xa4
 80013ea:	e9d7 453e 	ldrd	r4, r5, [r7, #248]	; 0xf8
 80013ee:	462b      	mov	r3, r5
 80013f0:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	; 0xa0
 80013f4:	4642      	mov	r2, r8
 80013f6:	fb02 f203 	mul.w	r2, r2, r3
 80013fa:	464b      	mov	r3, r9
 80013fc:	4621      	mov	r1, r4
 80013fe:	fb01 f303 	mul.w	r3, r1, r3
 8001402:	4413      	add	r3, r2
 8001404:	4622      	mov	r2, r4
 8001406:	4641      	mov	r1, r8
 8001408:	fba2 1201 	umull	r1, r2, r2, r1
 800140c:	f8c7 20f4 	str.w	r2, [r7, #244]	; 0xf4
 8001410:	460a      	mov	r2, r1
 8001412:	f8c7 20f0 	str.w	r2, [r7, #240]	; 0xf0
 8001416:	f8d7 20f4 	ldr.w	r2, [r7, #244]	; 0xf4
 800141a:	4413      	add	r3, r2
 800141c:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
 8001420:	f04f 0000 	mov.w	r0, #0
 8001424:	f04f 0100 	mov.w	r1, #0
 8001428:	e9d7 453c 	ldrd	r4, r5, [r7, #240]	; 0xf0
 800142c:	4623      	mov	r3, r4
 800142e:	0a18      	lsrs	r0, r3, #8
 8001430:	462b      	mov	r3, r5
 8001432:	ea40 6003 	orr.w	r0, r0, r3, lsl #24
 8001436:	462b      	mov	r3, r5
 8001438:	1219      	asrs	r1, r3, #8
 800143a:	4b41      	ldr	r3, [pc, #260]	; (8001540 <BMP280_compensate_P_int64+0x2e0>)
 800143c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001440:	b21b      	sxth	r3, r3
 8001442:	17da      	asrs	r2, r3, #31
 8001444:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8001448:	f8c7 209c 	str.w	r2, [r7, #156]	; 0x9c
 800144c:	f8d7 3120 	ldr.w	r3, [r7, #288]	; 0x120
 8001450:	e9d7 8926 	ldrd	r8, r9, [r7, #152]	; 0x98
 8001454:	464a      	mov	r2, r9
 8001456:	fb02 f203 	mul.w	r2, r2, r3
 800145a:	f8d7 3124 	ldr.w	r3, [r7, #292]	; 0x124
 800145e:	4644      	mov	r4, r8
 8001460:	fb04 f303 	mul.w	r3, r4, r3
 8001464:	441a      	add	r2, r3
 8001466:	f8d7 3120 	ldr.w	r3, [r7, #288]	; 0x120
 800146a:	4644      	mov	r4, r8
 800146c:	fba3 4304 	umull	r4, r3, r3, r4
 8001470:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
 8001474:	4623      	mov	r3, r4
 8001476:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 800147a:	f8d7 30ec 	ldr.w	r3, [r7, #236]	; 0xec
 800147e:	18d3      	adds	r3, r2, r3
 8001480:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
 8001484:	f04f 0200 	mov.w	r2, #0
 8001488:	f04f 0300 	mov.w	r3, #0
 800148c:	e9d7 893a 	ldrd	r8, r9, [r7, #232]	; 0xe8
 8001490:	464c      	mov	r4, r9
 8001492:	0323      	lsls	r3, r4, #12
 8001494:	4644      	mov	r4, r8
 8001496:	ea43 5314 	orr.w	r3, r3, r4, lsr #20
 800149a:	4644      	mov	r4, r8
 800149c:	0322      	lsls	r2, r4, #12
 800149e:	1884      	adds	r4, r0, r2
 80014a0:	633c      	str	r4, [r7, #48]	; 0x30
 80014a2:	eb41 0303 	adc.w	r3, r1, r3
 80014a6:	637b      	str	r3, [r7, #52]	; 0x34
 80014a8:	e9d7 340c 	ldrd	r3, r4, [r7, #48]	; 0x30
 80014ac:	e9c7 3448 	strd	r3, r4, [r7, #288]	; 0x120
	var1 = (((((int64_t)1)<<47)+var1))*((int64_t)dig_P1)>>33;
 80014b0:	e9d7 2348 	ldrd	r2, r3, [r7, #288]	; 0x120
 80014b4:	f503 4100 	add.w	r1, r3, #32768	; 0x8000
 80014b8:	f8c7 1094 	str.w	r1, [r7, #148]	; 0x94
 80014bc:	f8c7 2090 	str.w	r2, [r7, #144]	; 0x90
 80014c0:	4b20      	ldr	r3, [pc, #128]	; (8001544 <BMP280_compensate_P_int64+0x2e4>)
 80014c2:	881b      	ldrh	r3, [r3, #0]
 80014c4:	b29b      	uxth	r3, r3
 80014c6:	2200      	movs	r2, #0
 80014c8:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 80014cc:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 80014d0:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	; 0x90
 80014d4:	462b      	mov	r3, r5
 80014d6:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	; 0x88
 80014da:	4642      	mov	r2, r8
 80014dc:	fb02 f203 	mul.w	r2, r2, r3
 80014e0:	464b      	mov	r3, r9
 80014e2:	4621      	mov	r1, r4
 80014e4:	fb01 f303 	mul.w	r3, r1, r3
 80014e8:	4413      	add	r3, r2
 80014ea:	4622      	mov	r2, r4
 80014ec:	4641      	mov	r1, r8
 80014ee:	fba2 1201 	umull	r1, r2, r2, r1
 80014f2:	f8c7 20e4 	str.w	r2, [r7, #228]	; 0xe4
 80014f6:	460a      	mov	r2, r1
 80014f8:	f8c7 20e0 	str.w	r2, [r7, #224]	; 0xe0
 80014fc:	f8d7 20e4 	ldr.w	r2, [r7, #228]	; 0xe4
 8001500:	4413      	add	r3, r2
 8001502:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 8001506:	f04f 0200 	mov.w	r2, #0
 800150a:	f04f 0300 	mov.w	r3, #0
 800150e:	e9d7 4538 	ldrd	r4, r5, [r7, #224]	; 0xe0
 8001512:	4629      	mov	r1, r5
 8001514:	104a      	asrs	r2, r1, #1
 8001516:	4629      	mov	r1, r5
 8001518:	17cb      	asrs	r3, r1, #31
 800151a:	e9c7 2348 	strd	r2, r3, [r7, #288]	; 0x120
	if (var1 == 0)
 800151e:	e9d7 2348 	ldrd	r2, r3, [r7, #288]	; 0x120
 8001522:	4313      	orrs	r3, r2
 8001524:	d110      	bne.n	8001548 <BMP280_compensate_P_int64+0x2e8>
	{
		return 0; // avoid exception caused by division by zero
 8001526:	2300      	movs	r3, #0
 8001528:	e154      	b.n	80017d4 <BMP280_compensate_P_int64+0x574>
 800152a:	bf00      	nop
 800152c:	2000014c 	.word	0x2000014c
 8001530:	2000013c 	.word	0x2000013c
 8001534:	2000013a 	.word	0x2000013a
 8001538:	20000138 	.word	0x20000138
 800153c:	20000136 	.word	0x20000136
 8001540:	20000134 	.word	0x20000134
 8001544:	2000012a 	.word	0x2000012a
	}
	p = 1048576-adc_P;
 8001548:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 800154c:	f5c3 1380 	rsb	r3, r3, #1048576	; 0x100000
 8001550:	17da      	asrs	r2, r3, #31
 8001552:	62bb      	str	r3, [r7, #40]	; 0x28
 8001554:	62fa      	str	r2, [r7, #44]	; 0x2c
 8001556:	e9d7 340a 	ldrd	r3, r4, [r7, #40]	; 0x28
 800155a:	e9c7 3444 	strd	r3, r4, [r7, #272]	; 0x110
	p = (((p<<31)-var2)*3125)/var1;
 800155e:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 8001562:	105b      	asrs	r3, r3, #1
 8001564:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8001568:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 800156c:	07db      	lsls	r3, r3, #31
 800156e:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 8001572:	e9d7 2346 	ldrd	r2, r3, [r7, #280]	; 0x118
 8001576:	e9d7 4520 	ldrd	r4, r5, [r7, #128]	; 0x80
 800157a:	4621      	mov	r1, r4
 800157c:	1a89      	subs	r1, r1, r2
 800157e:	67b9      	str	r1, [r7, #120]	; 0x78
 8001580:	4629      	mov	r1, r5
 8001582:	eb61 0303 	sbc.w	r3, r1, r3
 8001586:	67fb      	str	r3, [r7, #124]	; 0x7c
 8001588:	e9d7 451e 	ldrd	r4, r5, [r7, #120]	; 0x78
 800158c:	4622      	mov	r2, r4
 800158e:	462b      	mov	r3, r5
 8001590:	1891      	adds	r1, r2, r2
 8001592:	6239      	str	r1, [r7, #32]
 8001594:	415b      	adcs	r3, r3
 8001596:	627b      	str	r3, [r7, #36]	; 0x24
 8001598:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 800159c:	4621      	mov	r1, r4
 800159e:	1851      	adds	r1, r2, r1
 80015a0:	61b9      	str	r1, [r7, #24]
 80015a2:	4629      	mov	r1, r5
 80015a4:	414b      	adcs	r3, r1
 80015a6:	61fb      	str	r3, [r7, #28]
 80015a8:	f04f 0200 	mov.w	r2, #0
 80015ac:	f04f 0300 	mov.w	r3, #0
 80015b0:	e9d7 8906 	ldrd	r8, r9, [r7, #24]
 80015b4:	4649      	mov	r1, r9
 80015b6:	018b      	lsls	r3, r1, #6
 80015b8:	4641      	mov	r1, r8
 80015ba:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 80015be:	4641      	mov	r1, r8
 80015c0:	018a      	lsls	r2, r1, #6
 80015c2:	4641      	mov	r1, r8
 80015c4:	1889      	adds	r1, r1, r2
 80015c6:	6139      	str	r1, [r7, #16]
 80015c8:	4649      	mov	r1, r9
 80015ca:	eb43 0101 	adc.w	r1, r3, r1
 80015ce:	6179      	str	r1, [r7, #20]
 80015d0:	f04f 0200 	mov.w	r2, #0
 80015d4:	f04f 0300 	mov.w	r3, #0
 80015d8:	e9d7 8904 	ldrd	r8, r9, [r7, #16]
 80015dc:	4649      	mov	r1, r9
 80015de:	008b      	lsls	r3, r1, #2
 80015e0:	4641      	mov	r1, r8
 80015e2:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 80015e6:	4641      	mov	r1, r8
 80015e8:	008a      	lsls	r2, r1, #2
 80015ea:	4610      	mov	r0, r2
 80015ec:	4619      	mov	r1, r3
 80015ee:	4603      	mov	r3, r0
 80015f0:	4622      	mov	r2, r4
 80015f2:	189b      	adds	r3, r3, r2
 80015f4:	60bb      	str	r3, [r7, #8]
 80015f6:	460b      	mov	r3, r1
 80015f8:	462a      	mov	r2, r5
 80015fa:	eb42 0303 	adc.w	r3, r2, r3
 80015fe:	60fb      	str	r3, [r7, #12]
 8001600:	f04f 0200 	mov.w	r2, #0
 8001604:	f04f 0300 	mov.w	r3, #0
 8001608:	e9d7 8902 	ldrd	r8, r9, [r7, #8]
 800160c:	4649      	mov	r1, r9
 800160e:	008b      	lsls	r3, r1, #2
 8001610:	4641      	mov	r1, r8
 8001612:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8001616:	4641      	mov	r1, r8
 8001618:	008a      	lsls	r2, r1, #2
 800161a:	4610      	mov	r0, r2
 800161c:	4619      	mov	r1, r3
 800161e:	4603      	mov	r3, r0
 8001620:	4622      	mov	r2, r4
 8001622:	189b      	adds	r3, r3, r2
 8001624:	673b      	str	r3, [r7, #112]	; 0x70
 8001626:	462b      	mov	r3, r5
 8001628:	460a      	mov	r2, r1
 800162a:	eb42 0303 	adc.w	r3, r2, r3
 800162e:	677b      	str	r3, [r7, #116]	; 0x74
 8001630:	e9d7 2348 	ldrd	r2, r3, [r7, #288]	; 0x120
 8001634:	e9d7 011c 	ldrd	r0, r1, [r7, #112]	; 0x70
 8001638:	f7ff fa40 	bl	8000abc <__aeabi_ldivmod>
 800163c:	4602      	mov	r2, r0
 800163e:	460b      	mov	r3, r1
 8001640:	e9c7 2344 	strd	r2, r3, [r7, #272]	; 0x110
	var1 = (((int64_t)dig_P9) * (p>>13) * (p>>13)) >> 25;
 8001644:	4b66      	ldr	r3, [pc, #408]	; (80017e0 <BMP280_compensate_P_int64+0x580>)
 8001646:	f9b3 3000 	ldrsh.w	r3, [r3]
 800164a:	b21b      	sxth	r3, r3
 800164c:	17da      	asrs	r2, r3, #31
 800164e:	66bb      	str	r3, [r7, #104]	; 0x68
 8001650:	66fa      	str	r2, [r7, #108]	; 0x6c
 8001652:	e9d7 2344 	ldrd	r2, r3, [r7, #272]	; 0x110
 8001656:	f04f 0000 	mov.w	r0, #0
 800165a:	f04f 0100 	mov.w	r1, #0
 800165e:	0b50      	lsrs	r0, r2, #13
 8001660:	ea40 40c3 	orr.w	r0, r0, r3, lsl #19
 8001664:	1359      	asrs	r1, r3, #13
 8001666:	e9d7 451a 	ldrd	r4, r5, [r7, #104]	; 0x68
 800166a:	462b      	mov	r3, r5
 800166c:	fb00 f203 	mul.w	r2, r0, r3
 8001670:	4623      	mov	r3, r4
 8001672:	fb03 f301 	mul.w	r3, r3, r1
 8001676:	4413      	add	r3, r2
 8001678:	4622      	mov	r2, r4
 800167a:	fba2 1200 	umull	r1, r2, r2, r0
 800167e:	f8c7 20dc 	str.w	r2, [r7, #220]	; 0xdc
 8001682:	460a      	mov	r2, r1
 8001684:	f8c7 20d8 	str.w	r2, [r7, #216]	; 0xd8
 8001688:	f8d7 20dc 	ldr.w	r2, [r7, #220]	; 0xdc
 800168c:	4413      	add	r3, r2
 800168e:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 8001692:	e9d7 2344 	ldrd	r2, r3, [r7, #272]	; 0x110
 8001696:	f04f 0000 	mov.w	r0, #0
 800169a:	f04f 0100 	mov.w	r1, #0
 800169e:	0b50      	lsrs	r0, r2, #13
 80016a0:	ea40 40c3 	orr.w	r0, r0, r3, lsl #19
 80016a4:	1359      	asrs	r1, r3, #13
 80016a6:	e9d7 4536 	ldrd	r4, r5, [r7, #216]	; 0xd8
 80016aa:	462b      	mov	r3, r5
 80016ac:	fb00 f203 	mul.w	r2, r0, r3
 80016b0:	4623      	mov	r3, r4
 80016b2:	fb03 f301 	mul.w	r3, r3, r1
 80016b6:	4413      	add	r3, r2
 80016b8:	4622      	mov	r2, r4
 80016ba:	fba2 1200 	umull	r1, r2, r2, r0
 80016be:	f8c7 20d4 	str.w	r2, [r7, #212]	; 0xd4
 80016c2:	460a      	mov	r2, r1
 80016c4:	f8c7 20d0 	str.w	r2, [r7, #208]	; 0xd0
 80016c8:	f8d7 20d4 	ldr.w	r2, [r7, #212]	; 0xd4
 80016cc:	4413      	add	r3, r2
 80016ce:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 80016d2:	f04f 0200 	mov.w	r2, #0
 80016d6:	f04f 0300 	mov.w	r3, #0
 80016da:	e9d7 4534 	ldrd	r4, r5, [r7, #208]	; 0xd0
 80016de:	4621      	mov	r1, r4
 80016e0:	0e4a      	lsrs	r2, r1, #25
 80016e2:	4629      	mov	r1, r5
 80016e4:	ea42 12c1 	orr.w	r2, r2, r1, lsl #7
 80016e8:	4629      	mov	r1, r5
 80016ea:	164b      	asrs	r3, r1, #25
 80016ec:	e9c7 2348 	strd	r2, r3, [r7, #288]	; 0x120
	var2 = (((int64_t)dig_P8) * p) >> 19;
 80016f0:	4b3c      	ldr	r3, [pc, #240]	; (80017e4 <BMP280_compensate_P_int64+0x584>)
 80016f2:	f9b3 3000 	ldrsh.w	r3, [r3]
 80016f6:	b21b      	sxth	r3, r3
 80016f8:	17da      	asrs	r2, r3, #31
 80016fa:	663b      	str	r3, [r7, #96]	; 0x60
 80016fc:	667a      	str	r2, [r7, #100]	; 0x64
 80016fe:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 8001702:	e9d7 4518 	ldrd	r4, r5, [r7, #96]	; 0x60
 8001706:	462a      	mov	r2, r5
 8001708:	fb02 f203 	mul.w	r2, r2, r3
 800170c:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8001710:	4621      	mov	r1, r4
 8001712:	fb01 f303 	mul.w	r3, r1, r3
 8001716:	4413      	add	r3, r2
 8001718:	f8d7 2110 	ldr.w	r2, [r7, #272]	; 0x110
 800171c:	4621      	mov	r1, r4
 800171e:	fba2 1201 	umull	r1, r2, r2, r1
 8001722:	f8c7 20cc 	str.w	r2, [r7, #204]	; 0xcc
 8001726:	460a      	mov	r2, r1
 8001728:	f8c7 20c8 	str.w	r2, [r7, #200]	; 0xc8
 800172c:	f8d7 20cc 	ldr.w	r2, [r7, #204]	; 0xcc
 8001730:	4413      	add	r3, r2
 8001732:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 8001736:	f04f 0200 	mov.w	r2, #0
 800173a:	f04f 0300 	mov.w	r3, #0
 800173e:	e9d7 4532 	ldrd	r4, r5, [r7, #200]	; 0xc8
 8001742:	4621      	mov	r1, r4
 8001744:	0cca      	lsrs	r2, r1, #19
 8001746:	4629      	mov	r1, r5
 8001748:	ea42 3241 	orr.w	r2, r2, r1, lsl #13
 800174c:	4629      	mov	r1, r5
 800174e:	14cb      	asrs	r3, r1, #19
 8001750:	e9c7 2346 	strd	r2, r3, [r7, #280]	; 0x118
	p = ((p + var1 + var2) >> 8) + (((int64_t)dig_P7)<<4);
 8001754:	e9d7 0144 	ldrd	r0, r1, [r7, #272]	; 0x110
 8001758:	e9d7 2348 	ldrd	r2, r3, [r7, #288]	; 0x120
 800175c:	1884      	adds	r4, r0, r2
 800175e:	65bc      	str	r4, [r7, #88]	; 0x58
 8001760:	eb41 0303 	adc.w	r3, r1, r3
 8001764:	65fb      	str	r3, [r7, #92]	; 0x5c
 8001766:	e9d7 2346 	ldrd	r2, r3, [r7, #280]	; 0x118
 800176a:	e9d7 4516 	ldrd	r4, r5, [r7, #88]	; 0x58
 800176e:	4621      	mov	r1, r4
 8001770:	1889      	adds	r1, r1, r2
 8001772:	6539      	str	r1, [r7, #80]	; 0x50
 8001774:	4629      	mov	r1, r5
 8001776:	eb43 0101 	adc.w	r1, r3, r1
 800177a:	6579      	str	r1, [r7, #84]	; 0x54
 800177c:	f04f 0000 	mov.w	r0, #0
 8001780:	f04f 0100 	mov.w	r1, #0
 8001784:	e9d7 4514 	ldrd	r4, r5, [r7, #80]	; 0x50
 8001788:	4623      	mov	r3, r4
 800178a:	0a18      	lsrs	r0, r3, #8
 800178c:	462b      	mov	r3, r5
 800178e:	ea40 6003 	orr.w	r0, r0, r3, lsl #24
 8001792:	462b      	mov	r3, r5
 8001794:	1219      	asrs	r1, r3, #8
 8001796:	4b14      	ldr	r3, [pc, #80]	; (80017e8 <BMP280_compensate_P_int64+0x588>)
 8001798:	f9b3 3000 	ldrsh.w	r3, [r3]
 800179c:	b21b      	sxth	r3, r3
 800179e:	17da      	asrs	r2, r3, #31
 80017a0:	64bb      	str	r3, [r7, #72]	; 0x48
 80017a2:	64fa      	str	r2, [r7, #76]	; 0x4c
 80017a4:	f04f 0200 	mov.w	r2, #0
 80017a8:	f04f 0300 	mov.w	r3, #0
 80017ac:	e9d7 8912 	ldrd	r8, r9, [r7, #72]	; 0x48
 80017b0:	464c      	mov	r4, r9
 80017b2:	0123      	lsls	r3, r4, #4
 80017b4:	4644      	mov	r4, r8
 80017b6:	ea43 7314 	orr.w	r3, r3, r4, lsr #28
 80017ba:	4644      	mov	r4, r8
 80017bc:	0122      	lsls	r2, r4, #4
 80017be:	1884      	adds	r4, r0, r2
 80017c0:	603c      	str	r4, [r7, #0]
 80017c2:	eb41 0303 	adc.w	r3, r1, r3
 80017c6:	607b      	str	r3, [r7, #4]
 80017c8:	e9d7 3400 	ldrd	r3, r4, [r7]
 80017cc:	e9c7 3444 	strd	r3, r4, [r7, #272]	; 0x110
	return (uint32_t)p;
 80017d0:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
}
 80017d4:	4618      	mov	r0, r3
 80017d6:	f507 7794 	add.w	r7, r7, #296	; 0x128
 80017da:	46bd      	mov	sp, r7
 80017dc:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80017e0:	20000142 	.word	0x20000142
 80017e4:	20000140 	.word	0x20000140
 80017e8:	2000013e 	.word	0x2000013e

080017ec <BMP280_Measure>:

/* measure the temp, pressure and humidity
 * the values will be stored in the parameters passed to the function
 */
 float BMP280_Measure ()
{
 80017ec:	b580      	push	{r7, lr}
 80017ee:	af00      	add	r7, sp, #0
	if (BMPReadRaw() == 0)
 80017f0:	f7ff fcea 	bl	80011c8 <BMPReadRaw>
 80017f4:	4603      	mov	r3, r0
 80017f6:	2b00      	cmp	r3, #0
 80017f8:	d121      	bne.n	800183e <BMP280_Measure+0x52>
//		  else
//		  {
//			  Temperature = (BMP280_compensate_T_int32 (tRaw))/100.0;  // as per datasheet, the temp is x100
//		  }

		  if (pRaw == 0x800000) Pressure = 0; // value in case temp measurement was disabled
 80017fa:	4b16      	ldr	r3, [pc, #88]	; (8001854 <BMP280_Measure+0x68>)
 80017fc:	681b      	ldr	r3, [r3, #0]
 80017fe:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 8001802:	d104      	bne.n	800180e <BMP280_Measure+0x22>
 8001804:	4b14      	ldr	r3, [pc, #80]	; (8001858 <BMP280_Measure+0x6c>)
 8001806:	f04f 0200 	mov.w	r2, #0
 800180a:	601a      	str	r2, [r3, #0]
 800180c:	e01b      	b.n	8001846 <BMP280_Measure+0x5a>
		  else
		  {
//#if SUPPORT_64BIT
			  Pressure = (BMP280_compensate_P_int64 (pRaw))/256.0;  // as per datasheet, the pressure is x256
 800180e:	4b11      	ldr	r3, [pc, #68]	; (8001854 <BMP280_Measure+0x68>)
 8001810:	681b      	ldr	r3, [r3, #0]
 8001812:	4618      	mov	r0, r3
 8001814:	f7ff fd24 	bl	8001260 <BMP280_compensate_P_int64>
 8001818:	4603      	mov	r3, r0
 800181a:	4618      	mov	r0, r3
 800181c:	f7fe fe72 	bl	8000504 <__aeabi_ui2d>
 8001820:	f04f 0200 	mov.w	r2, #0
 8001824:	4b0d      	ldr	r3, [pc, #52]	; (800185c <BMP280_Measure+0x70>)
 8001826:	f7ff f811 	bl	800084c <__aeabi_ddiv>
 800182a:	4602      	mov	r2, r0
 800182c:	460b      	mov	r3, r1
 800182e:	4610      	mov	r0, r2
 8001830:	4619      	mov	r1, r3
 8001832:	f7ff f8f3 	bl	8000a1c <__aeabi_d2f>
 8001836:	4603      	mov	r3, r0
 8001838:	4a07      	ldr	r2, [pc, #28]	; (8001858 <BMP280_Measure+0x6c>)
 800183a:	6013      	str	r3, [r2, #0]
 800183c:	e003      	b.n	8001846 <BMP280_Measure+0x5a>

	// if the device is detached
	else
	{
//		Temperature = 0;
		Pressure = 0;
 800183e:	4b06      	ldr	r3, [pc, #24]	; (8001858 <BMP280_Measure+0x6c>)
 8001840:	f04f 0200 	mov.w	r2, #0
 8001844:	601a      	str	r2, [r3, #0]
//	    Humidity = 0;
	}
	return Pressure;
 8001846:	4b04      	ldr	r3, [pc, #16]	; (8001858 <BMP280_Measure+0x6c>)
 8001848:	681b      	ldr	r3, [r3, #0]
 800184a:	ee07 3a90 	vmov	s15, r3
}
 800184e:	eeb0 0a67 	vmov.f32	s0, s15
 8001852:	bd80      	pop	{r7, pc}
 8001854:	20000120 	.word	0x20000120
 8001858:	2000034c 	.word	0x2000034c
 800185c:	40700000 	.word	0x40700000

08001860 <LM75_Temperature_9Bit_ReadReg>:

#include "LM75.h"


float LM75_Temperature_9Bit_ReadReg( uint8_t reg ){
 8001860:	b580      	push	{r7, lr}
 8001862:	b086      	sub	sp, #24
 8001864:	af02      	add	r7, sp, #8
 8001866:	4603      	mov	r3, r0
 8001868:	71fb      	strb	r3, [r7, #7]
	HAL_I2C_Master_Transmit( &MY_I2C, LM75_ADDRESS, &reg, 1, 500 );
 800186a:	1dfa      	adds	r2, r7, #7
 800186c:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8001870:	9300      	str	r3, [sp, #0]
 8001872:	2301      	movs	r3, #1
 8001874:	2190      	movs	r1, #144	; 0x90
 8001876:	481f      	ldr	r0, [pc, #124]	; (80018f4 <LM75_Temperature_9Bit_ReadReg+0x94>)
 8001878:	f003 fbd6 	bl	8005028 <HAL_I2C_Master_Transmit>
	uint16_t value;
	HAL_I2C_Master_Receive( &MY_I2C, LM75_ADDRESS, (uint8_t*)&value, 2, 500 );
 800187c:	f107 020e 	add.w	r2, r7, #14
 8001880:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8001884:	9300      	str	r3, [sp, #0]
 8001886:	2302      	movs	r3, #2
 8001888:	2190      	movs	r1, #144	; 0x90
 800188a:	481a      	ldr	r0, [pc, #104]	; (80018f4 <LM75_Temperature_9Bit_ReadReg+0x94>)
 800188c:	f003 fcca 	bl	8005224 <HAL_I2C_Master_Receive>
	value = ((( value >> 8 ) | ( value << 8 )) >> 7) & 0x01FF;
 8001890:	89fb      	ldrh	r3, [r7, #14]
 8001892:	0a1b      	lsrs	r3, r3, #8
 8001894:	b29b      	uxth	r3, r3
 8001896:	461a      	mov	r2, r3
 8001898:	89fb      	ldrh	r3, [r7, #14]
 800189a:	021b      	lsls	r3, r3, #8
 800189c:	4313      	orrs	r3, r2
 800189e:	11db      	asrs	r3, r3, #7
 80018a0:	b29b      	uxth	r3, r3
 80018a2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80018a6:	b29b      	uxth	r3, r3
 80018a8:	81fb      	strh	r3, [r7, #14]
	if( value & 0x0100 ){
 80018aa:	89fb      	ldrh	r3, [r7, #14]
 80018ac:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80018b0:	2b00      	cmp	r3, #0
 80018b2:	d010      	beq.n	80018d6 <LM75_Temperature_9Bit_ReadReg+0x76>
		value = (0x01FE ^ value) + 2;
 80018b4:	89fb      	ldrh	r3, [r7, #14]
 80018b6:	f483 73ff 	eor.w	r3, r3, #510	; 0x1fe
 80018ba:	b29b      	uxth	r3, r3
 80018bc:	3302      	adds	r3, #2
 80018be:	b29b      	uxth	r3, r3
 80018c0:	81fb      	strh	r3, [r7, #14]
		return (float)( value * (-0.5f) );
 80018c2:	89fb      	ldrh	r3, [r7, #14]
 80018c4:	ee07 3a90 	vmov	s15, r3
 80018c8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80018cc:	eebe 7a00 	vmov.f32	s14, #224	; 0xbf000000 -0.5
 80018d0:	ee67 7a87 	vmul.f32	s15, s15, s14
 80018d4:	e008      	b.n	80018e8 <LM75_Temperature_9Bit_ReadReg+0x88>
	}
	else{
		return (float)( value * 0.5f );
 80018d6:	89fb      	ldrh	r3, [r7, #14]
 80018d8:	ee07 3a90 	vmov	s15, r3
 80018dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80018e0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80018e4:	ee67 7a87 	vmul.f32	s15, s15, s14
	}

}
 80018e8:	eeb0 0a67 	vmov.f32	s0, s15
 80018ec:	3710      	adds	r7, #16
 80018ee:	46bd      	mov	sp, r7
 80018f0:	bd80      	pop	{r7, pc}
 80018f2:	bf00      	nop
 80018f4:	20000158 	.word	0x20000158

080018f8 <LM75_TemperatureRead>:

	HAL_I2C_Master_Transmit( &MY_I2C, LM75_ADDRESS, buff, 2, 500 );
}


float LM75_TemperatureRead(void){
 80018f8:	b580      	push	{r7, lr}
 80018fa:	af00      	add	r7, sp, #0
	#ifdef LM75_11BIT
		return LM75_Temperature_11Bit_ReadReg( LM75_TEMPERATURE );
	#endif

	#ifdef LM75_9BIT
		return LM75_Temperature_9Bit_ReadReg( LM75_TEMPERATURE );
 80018fc:	2000      	movs	r0, #0
 80018fe:	f7ff ffaf 	bl	8001860 <LM75_Temperature_9Bit_ReadReg>
 8001902:	eef0 7a40 	vmov.f32	s15, s0
	#endif
}
 8001906:	eeb0 0a67 	vmov.f32	s0, s15
 800190a:	bd80      	pop	{r7, pc}

0800190c <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 800190c:	b480      	push	{r7}
 800190e:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8001910:	4b04      	ldr	r3, [pc, #16]	; (8001924 <__NVIC_GetPriorityGrouping+0x18>)
 8001912:	68db      	ldr	r3, [r3, #12]
 8001914:	0a1b      	lsrs	r3, r3, #8
 8001916:	f003 0307 	and.w	r3, r3, #7
}
 800191a:	4618      	mov	r0, r3
 800191c:	46bd      	mov	sp, r7
 800191e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001922:	4770      	bx	lr
 8001924:	e000ed00 	.word	0xe000ed00

08001928 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8001928:	b480      	push	{r7}
 800192a:	b083      	sub	sp, #12
 800192c:	af00      	add	r7, sp, #0
 800192e:	4603      	mov	r3, r0
 8001930:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8001932:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001936:	2b00      	cmp	r3, #0
 8001938:	db0b      	blt.n	8001952 <__NVIC_EnableIRQ+0x2a>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800193a:	79fb      	ldrb	r3, [r7, #7]
 800193c:	f003 021f 	and.w	r2, r3, #31
 8001940:	4907      	ldr	r1, [pc, #28]	; (8001960 <__NVIC_EnableIRQ+0x38>)
 8001942:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001946:	095b      	lsrs	r3, r3, #5
 8001948:	2001      	movs	r0, #1
 800194a:	fa00 f202 	lsl.w	r2, r0, r2
 800194e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    __COMPILER_BARRIER();
  }
}
 8001952:	bf00      	nop
 8001954:	370c      	adds	r7, #12
 8001956:	46bd      	mov	sp, r7
 8001958:	f85d 7b04 	ldr.w	r7, [sp], #4
 800195c:	4770      	bx	lr
 800195e:	bf00      	nop
 8001960:	e000e100 	.word	0xe000e100

08001964 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8001964:	b480      	push	{r7}
 8001966:	b083      	sub	sp, #12
 8001968:	af00      	add	r7, sp, #0
 800196a:	4603      	mov	r3, r0
 800196c:	6039      	str	r1, [r7, #0]
 800196e:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8001970:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001974:	2b00      	cmp	r3, #0
 8001976:	db0a      	blt.n	800198e <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001978:	683b      	ldr	r3, [r7, #0]
 800197a:	b2da      	uxtb	r2, r3
 800197c:	490c      	ldr	r1, [pc, #48]	; (80019b0 <__NVIC_SetPriority+0x4c>)
 800197e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001982:	0112      	lsls	r2, r2, #4
 8001984:	b2d2      	uxtb	r2, r2
 8001986:	440b      	add	r3, r1
 8001988:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 800198c:	e00a      	b.n	80019a4 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800198e:	683b      	ldr	r3, [r7, #0]
 8001990:	b2da      	uxtb	r2, r3
 8001992:	4908      	ldr	r1, [pc, #32]	; (80019b4 <__NVIC_SetPriority+0x50>)
 8001994:	79fb      	ldrb	r3, [r7, #7]
 8001996:	f003 030f 	and.w	r3, r3, #15
 800199a:	3b04      	subs	r3, #4
 800199c:	0112      	lsls	r2, r2, #4
 800199e:	b2d2      	uxtb	r2, r2
 80019a0:	440b      	add	r3, r1
 80019a2:	761a      	strb	r2, [r3, #24]
}
 80019a4:	bf00      	nop
 80019a6:	370c      	adds	r7, #12
 80019a8:	46bd      	mov	sp, r7
 80019aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019ae:	4770      	bx	lr
 80019b0:	e000e100 	.word	0xe000e100
 80019b4:	e000ed00 	.word	0xe000ed00

080019b8 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 80019b8:	b480      	push	{r7}
 80019ba:	b089      	sub	sp, #36	; 0x24
 80019bc:	af00      	add	r7, sp, #0
 80019be:	60f8      	str	r0, [r7, #12]
 80019c0:	60b9      	str	r1, [r7, #8]
 80019c2:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 80019c4:	68fb      	ldr	r3, [r7, #12]
 80019c6:	f003 0307 	and.w	r3, r3, #7
 80019ca:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80019cc:	69fb      	ldr	r3, [r7, #28]
 80019ce:	f1c3 0307 	rsb	r3, r3, #7
 80019d2:	2b04      	cmp	r3, #4
 80019d4:	bf28      	it	cs
 80019d6:	2304      	movcs	r3, #4
 80019d8:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80019da:	69fb      	ldr	r3, [r7, #28]
 80019dc:	3304      	adds	r3, #4
 80019de:	2b06      	cmp	r3, #6
 80019e0:	d902      	bls.n	80019e8 <NVIC_EncodePriority+0x30>
 80019e2:	69fb      	ldr	r3, [r7, #28]
 80019e4:	3b03      	subs	r3, #3
 80019e6:	e000      	b.n	80019ea <NVIC_EncodePriority+0x32>
 80019e8:	2300      	movs	r3, #0
 80019ea:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80019ec:	f04f 32ff 	mov.w	r2, #4294967295
 80019f0:	69bb      	ldr	r3, [r7, #24]
 80019f2:	fa02 f303 	lsl.w	r3, r2, r3
 80019f6:	43da      	mvns	r2, r3
 80019f8:	68bb      	ldr	r3, [r7, #8]
 80019fa:	401a      	ands	r2, r3
 80019fc:	697b      	ldr	r3, [r7, #20]
 80019fe:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8001a00:	f04f 31ff 	mov.w	r1, #4294967295
 8001a04:	697b      	ldr	r3, [r7, #20]
 8001a06:	fa01 f303 	lsl.w	r3, r1, r3
 8001a0a:	43d9      	mvns	r1, r3
 8001a0c:	687b      	ldr	r3, [r7, #4]
 8001a0e:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001a10:	4313      	orrs	r3, r2
         );
}
 8001a12:	4618      	mov	r0, r3
 8001a14:	3724      	adds	r7, #36	; 0x24
 8001a16:	46bd      	mov	sp, r7
 8001a18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a1c:	4770      	bx	lr

08001a1e <LL_ADC_DMA_GetRegAddr>:

  return data_reg_addr;
}
#else
__STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(ADC_TypeDef *ADCx, uint32_t Register)
{
 8001a1e:	b480      	push	{r7}
 8001a20:	b083      	sub	sp, #12
 8001a22:	af00      	add	r7, sp, #0
 8001a24:	6078      	str	r0, [r7, #4]
 8001a26:	6039      	str	r1, [r7, #0]
  /* Prevent unused argument compilation warning */
  (void)Register;

  /* Retrieve address of register DR */
  return (uint32_t) & (ADCx->DR);
 8001a28:	687b      	ldr	r3, [r7, #4]
 8001a2a:	334c      	adds	r3, #76	; 0x4c
}
 8001a2c:	4618      	mov	r0, r3
 8001a2e:	370c      	adds	r7, #12
 8001a30:	46bd      	mov	sp, r7
 8001a32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a36:	4770      	bx	lr

08001a38 <LL_ADC_REG_SetSequencerRanks>:
  *         (1) On STM32F4, parameter available only on ADC instance: ADC1.\n
  *         (2) On devices STM32F42x and STM32F43x, limitation: this internal channel is shared between temperature sensor and Vbat, only 1 measurement path must be enabled.
  * @retval None
  */
__STATIC_INLINE void LL_ADC_REG_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channel)
{
 8001a38:	b480      	push	{r7}
 8001a3a:	b089      	sub	sp, #36	; 0x24
 8001a3c:	af00      	add	r7, sp, #0
 8001a3e:	60f8      	str	r0, [r7, #12]
 8001a40:	60b9      	str	r1, [r7, #8]
 8001a42:	607a      	str	r2, [r7, #4]
  /* Set bits with content of parameter "Channel" with bits position          */
  /* in register and register position depending on parameter "Rank".         */
  /* Parameters "Rank" and "Channel" are used with masks because containing   */
  /* other bits reserved for other purpose.                                   */
  __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, __ADC_MASK_SHIFT(Rank, ADC_REG_SQRX_REGOFFSET_MASK));
 8001a44:	68fb      	ldr	r3, [r7, #12]
 8001a46:	332c      	adds	r3, #44	; 0x2c
 8001a48:	4619      	mov	r1, r3
 8001a4a:	68bb      	ldr	r3, [r7, #8]
 8001a4c:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8001a50:	f44f 7240 	mov.w	r2, #768	; 0x300
 8001a54:	617a      	str	r2, [r7, #20]
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8001a56:	697a      	ldr	r2, [r7, #20]
 8001a58:	fa92 f2a2 	rbit	r2, r2
 8001a5c:	613a      	str	r2, [r7, #16]
    result |= value & 1U;
    s--;
  }
  result <<= s;                        /* shift when v's highest bits are zero */
#endif
  return result;
 8001a5e:	693a      	ldr	r2, [r7, #16]
 8001a60:	61ba      	str	r2, [r7, #24]
     optimisations using the logic "value was passed to __builtin_clz, so it
     is non-zero".
     ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
     single CLZ instruction.
   */
  if (value == 0U)
 8001a62:	69ba      	ldr	r2, [r7, #24]
 8001a64:	2a00      	cmp	r2, #0
 8001a66:	d101      	bne.n	8001a6c <LL_ADC_REG_SetSequencerRanks+0x34>
  {
    return 32U;
 8001a68:	2220      	movs	r2, #32
 8001a6a:	e003      	b.n	8001a74 <LL_ADC_REG_SetSequencerRanks+0x3c>
  }
  return __builtin_clz(value);
 8001a6c:	69ba      	ldr	r2, [r7, #24]
 8001a6e:	fab2 f282 	clz	r2, r2
 8001a72:	b2d2      	uxtb	r2, r2
 8001a74:	40d3      	lsrs	r3, r2
 8001a76:	009b      	lsls	r3, r3, #2
 8001a78:	440b      	add	r3, r1
 8001a7a:	61fb      	str	r3, [r7, #28]

  MODIFY_REG(*preg,
 8001a7c:	69fb      	ldr	r3, [r7, #28]
 8001a7e:	681a      	ldr	r2, [r3, #0]
 8001a80:	68bb      	ldr	r3, [r7, #8]
 8001a82:	f003 031f 	and.w	r3, r3, #31
 8001a86:	211f      	movs	r1, #31
 8001a88:	fa01 f303 	lsl.w	r3, r1, r3
 8001a8c:	43db      	mvns	r3, r3
 8001a8e:	401a      	ands	r2, r3
 8001a90:	687b      	ldr	r3, [r7, #4]
 8001a92:	f003 011f 	and.w	r1, r3, #31
 8001a96:	68bb      	ldr	r3, [r7, #8]
 8001a98:	f003 031f 	and.w	r3, r3, #31
 8001a9c:	fa01 f303 	lsl.w	r3, r1, r3
 8001aa0:	431a      	orrs	r2, r3
 8001aa2:	69fb      	ldr	r3, [r7, #28]
 8001aa4:	601a      	str	r2, [r3, #0]
             ADC_CHANNEL_ID_NUMBER_MASK << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
             (Channel & ADC_CHANNEL_ID_NUMBER_MASK) << (Rank & ADC_REG_RANK_ID_SQRX_MASK));
}
 8001aa6:	bf00      	nop
 8001aa8:	3724      	adds	r7, #36	; 0x24
 8001aaa:	46bd      	mov	sp, r7
 8001aac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ab0:	4770      	bx	lr

08001ab2 <LL_ADC_REG_SetFlagEndOfConversion>:
  *         @arg @ref LL_ADC_REG_FLAG_EOC_SEQUENCE_CONV
  *         @arg @ref LL_ADC_REG_FLAG_EOC_UNITARY_CONV
  * @retval None
  */
__STATIC_INLINE void LL_ADC_REG_SetFlagEndOfConversion(ADC_TypeDef *ADCx, uint32_t EocSelection)
{
 8001ab2:	b480      	push	{r7}
 8001ab4:	b083      	sub	sp, #12
 8001ab6:	af00      	add	r7, sp, #0
 8001ab8:	6078      	str	r0, [r7, #4]
 8001aba:	6039      	str	r1, [r7, #0]
  MODIFY_REG(ADCx->CR2, ADC_CR2_EOCS, EocSelection);
 8001abc:	687b      	ldr	r3, [r7, #4]
 8001abe:	689b      	ldr	r3, [r3, #8]
 8001ac0:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 8001ac4:	683b      	ldr	r3, [r7, #0]
 8001ac6:	431a      	orrs	r2, r3
 8001ac8:	687b      	ldr	r3, [r7, #4]
 8001aca:	609a      	str	r2, [r3, #8]
}
 8001acc:	bf00      	nop
 8001ace:	370c      	adds	r7, #12
 8001ad0:	46bd      	mov	sp, r7
 8001ad2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ad6:	4770      	bx	lr

08001ad8 <LL_ADC_SetChannelSamplingTime>:
  *         @arg @ref LL_ADC_SAMPLINGTIME_144CYCLES
  *         @arg @ref LL_ADC_SAMPLINGTIME_480CYCLES
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t SamplingTime)
{
 8001ad8:	b480      	push	{r7}
 8001ada:	b08f      	sub	sp, #60	; 0x3c
 8001adc:	af00      	add	r7, sp, #0
 8001ade:	60f8      	str	r0, [r7, #12]
 8001ae0:	60b9      	str	r1, [r7, #8]
 8001ae2:	607a      	str	r2, [r7, #4]
  /* Set bits with content of parameter "SamplingTime" with bits position     */
  /* in register and register position depending on parameter "Channel".      */
  /* Parameter "Channel" is used with masks because containing                */
  /* other bits reserved for other purpose.                                   */
  __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, __ADC_MASK_SHIFT(Channel, ADC_CHANNEL_SMPRX_REGOFFSET_MASK));
 8001ae4:	68fb      	ldr	r3, [r7, #12]
 8001ae6:	330c      	adds	r3, #12
 8001ae8:	4619      	mov	r1, r3
 8001aea:	68bb      	ldr	r3, [r7, #8]
 8001aec:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001af0:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8001af4:	617a      	str	r2, [r7, #20]
   __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8001af6:	697a      	ldr	r2, [r7, #20]
 8001af8:	fa92 f2a2 	rbit	r2, r2
 8001afc:	613a      	str	r2, [r7, #16]
  return result;
 8001afe:	693a      	ldr	r2, [r7, #16]
 8001b00:	61ba      	str	r2, [r7, #24]
  if (value == 0U)
 8001b02:	69ba      	ldr	r2, [r7, #24]
 8001b04:	2a00      	cmp	r2, #0
 8001b06:	d101      	bne.n	8001b0c <LL_ADC_SetChannelSamplingTime+0x34>
    return 32U;
 8001b08:	2220      	movs	r2, #32
 8001b0a:	e003      	b.n	8001b14 <LL_ADC_SetChannelSamplingTime+0x3c>
  return __builtin_clz(value);
 8001b0c:	69ba      	ldr	r2, [r7, #24]
 8001b0e:	fab2 f282 	clz	r2, r2
 8001b12:	b2d2      	uxtb	r2, r2
 8001b14:	40d3      	lsrs	r3, r2
 8001b16:	009b      	lsls	r3, r3, #2
 8001b18:	440b      	add	r3, r1
 8001b1a:	637b      	str	r3, [r7, #52]	; 0x34

  MODIFY_REG(*preg,
 8001b1c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8001b1e:	681a      	ldr	r2, [r3, #0]
 8001b20:	68bb      	ldr	r3, [r7, #8]
 8001b22:	f003 73f8 	and.w	r3, r3, #32505856	; 0x1f00000
 8001b26:	f04f 71f8 	mov.w	r1, #32505856	; 0x1f00000
 8001b2a:	6239      	str	r1, [r7, #32]
   __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8001b2c:	6a39      	ldr	r1, [r7, #32]
 8001b2e:	fa91 f1a1 	rbit	r1, r1
 8001b32:	61f9      	str	r1, [r7, #28]
  return result;
 8001b34:	69f9      	ldr	r1, [r7, #28]
 8001b36:	6279      	str	r1, [r7, #36]	; 0x24
  if (value == 0U)
 8001b38:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8001b3a:	2900      	cmp	r1, #0
 8001b3c:	d101      	bne.n	8001b42 <LL_ADC_SetChannelSamplingTime+0x6a>
    return 32U;
 8001b3e:	2120      	movs	r1, #32
 8001b40:	e003      	b.n	8001b4a <LL_ADC_SetChannelSamplingTime+0x72>
  return __builtin_clz(value);
 8001b42:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8001b44:	fab1 f181 	clz	r1, r1
 8001b48:	b2c9      	uxtb	r1, r1
 8001b4a:	40cb      	lsrs	r3, r1
 8001b4c:	2107      	movs	r1, #7
 8001b4e:	fa01 f303 	lsl.w	r3, r1, r3
 8001b52:	43db      	mvns	r3, r3
 8001b54:	401a      	ands	r2, r3
 8001b56:	68bb      	ldr	r3, [r7, #8]
 8001b58:	f003 73f8 	and.w	r3, r3, #32505856	; 0x1f00000
 8001b5c:	f04f 71f8 	mov.w	r1, #32505856	; 0x1f00000
 8001b60:	62f9      	str	r1, [r7, #44]	; 0x2c
   __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8001b62:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8001b64:	fa91 f1a1 	rbit	r1, r1
 8001b68:	62b9      	str	r1, [r7, #40]	; 0x28
  return result;
 8001b6a:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8001b6c:	6339      	str	r1, [r7, #48]	; 0x30
  if (value == 0U)
 8001b6e:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8001b70:	2900      	cmp	r1, #0
 8001b72:	d101      	bne.n	8001b78 <LL_ADC_SetChannelSamplingTime+0xa0>
    return 32U;
 8001b74:	2120      	movs	r1, #32
 8001b76:	e003      	b.n	8001b80 <LL_ADC_SetChannelSamplingTime+0xa8>
  return __builtin_clz(value);
 8001b78:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8001b7a:	fab1 f181 	clz	r1, r1
 8001b7e:	b2c9      	uxtb	r1, r1
 8001b80:	40cb      	lsrs	r3, r1
 8001b82:	6879      	ldr	r1, [r7, #4]
 8001b84:	fa01 f303 	lsl.w	r3, r1, r3
 8001b88:	431a      	orrs	r2, r3
 8001b8a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8001b8c:	601a      	str	r2, [r3, #0]
             ADC_SMPR2_SMP0 << __ADC_MASK_SHIFT(Channel, ADC_CHANNEL_SMPx_BITOFFSET_MASK),
             SamplingTime   << __ADC_MASK_SHIFT(Channel, ADC_CHANNEL_SMPx_BITOFFSET_MASK));
}
 8001b8e:	bf00      	nop
 8001b90:	373c      	adds	r7, #60	; 0x3c
 8001b92:	46bd      	mov	sp, r7
 8001b94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b98:	4770      	bx	lr

08001b9a <LL_ADC_Enable>:
  * @rmtoll CR2      ADON           LL_ADC_Enable
  * @param  ADCx ADC instance
  * @retval None
  */
__STATIC_INLINE void LL_ADC_Enable(ADC_TypeDef *ADCx)
{
 8001b9a:	b480      	push	{r7}
 8001b9c:	b083      	sub	sp, #12
 8001b9e:	af00      	add	r7, sp, #0
 8001ba0:	6078      	str	r0, [r7, #4]
  SET_BIT(ADCx->CR2, ADC_CR2_ADON);
 8001ba2:	687b      	ldr	r3, [r7, #4]
 8001ba4:	689b      	ldr	r3, [r3, #8]
 8001ba6:	f043 0201 	orr.w	r2, r3, #1
 8001baa:	687b      	ldr	r3, [r7, #4]
 8001bac:	609a      	str	r2, [r3, #8]
}
 8001bae:	bf00      	nop
 8001bb0:	370c      	adds	r7, #12
 8001bb2:	46bd      	mov	sp, r7
 8001bb4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bb8:	4770      	bx	lr

08001bba <LL_ADC_IsEnabled>:
  * @rmtoll CR2      ADON           LL_ADC_IsEnabled
  * @param  ADCx ADC instance
  * @retval 0: ADC is disabled, 1: ADC is enabled.
  */
__STATIC_INLINE uint32_t LL_ADC_IsEnabled(ADC_TypeDef *ADCx)
{
 8001bba:	b480      	push	{r7}
 8001bbc:	b083      	sub	sp, #12
 8001bbe:	af00      	add	r7, sp, #0
 8001bc0:	6078      	str	r0, [r7, #4]
  return (READ_BIT(ADCx->CR2, ADC_CR2_ADON) == (ADC_CR2_ADON));
 8001bc2:	687b      	ldr	r3, [r7, #4]
 8001bc4:	689b      	ldr	r3, [r3, #8]
 8001bc6:	f003 0301 	and.w	r3, r3, #1
 8001bca:	2b01      	cmp	r3, #1
 8001bcc:	bf0c      	ite	eq
 8001bce:	2301      	moveq	r3, #1
 8001bd0:	2300      	movne	r3, #0
 8001bd2:	b2db      	uxtb	r3, r3
}
 8001bd4:	4618      	mov	r0, r3
 8001bd6:	370c      	adds	r7, #12
 8001bd8:	46bd      	mov	sp, r7
 8001bda:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bde:	4770      	bx	lr

08001be0 <LL_ADC_REG_StartConversionExtTrig>:
  *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
  * @param  ADCx ADC instance
  * @retval None
  */
__STATIC_INLINE void LL_ADC_REG_StartConversionExtTrig(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
{
 8001be0:	b480      	push	{r7}
 8001be2:	b083      	sub	sp, #12
 8001be4:	af00      	add	r7, sp, #0
 8001be6:	6078      	str	r0, [r7, #4]
 8001be8:	6039      	str	r1, [r7, #0]
  SET_BIT(ADCx->CR2, ExternalTriggerEdge);
 8001bea:	687b      	ldr	r3, [r7, #4]
 8001bec:	689a      	ldr	r2, [r3, #8]
 8001bee:	683b      	ldr	r3, [r7, #0]
 8001bf0:	431a      	orrs	r2, r3
 8001bf2:	687b      	ldr	r3, [r7, #4]
 8001bf4:	609a      	str	r2, [r3, #8]
}
 8001bf6:	bf00      	nop
 8001bf8:	370c      	adds	r7, #12
 8001bfa:	46bd      	mov	sp, r7
 8001bfc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c00:	4770      	bx	lr

08001c02 <LL_ADC_EnableIT_OVR>:
  * @rmtoll CR1      OVRIE          LL_ADC_EnableIT_OVR
  * @param  ADCx ADC instance
  * @retval None
  */
__STATIC_INLINE void LL_ADC_EnableIT_OVR(ADC_TypeDef *ADCx)
{
 8001c02:	b480      	push	{r7}
 8001c04:	b083      	sub	sp, #12
 8001c06:	af00      	add	r7, sp, #0
 8001c08:	6078      	str	r0, [r7, #4]
  SET_BIT(ADCx->CR1, LL_ADC_IT_OVR);
 8001c0a:	687b      	ldr	r3, [r7, #4]
 8001c0c:	685b      	ldr	r3, [r3, #4]
 8001c0e:	f043 6280 	orr.w	r2, r3, #67108864	; 0x4000000
 8001c12:	687b      	ldr	r3, [r7, #4]
 8001c14:	605a      	str	r2, [r3, #4]
}
 8001c16:	bf00      	nop
 8001c18:	370c      	adds	r7, #12
 8001c1a:	46bd      	mov	sp, r7
 8001c1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c20:	4770      	bx	lr
	...

08001c24 <LL_AHB1_GRP1_EnableClock>:
  *
  *         (*) value not defined in all devices.
  * @retval None
*/
__STATIC_INLINE void LL_AHB1_GRP1_EnableClock(uint32_t Periphs)
{
 8001c24:	b480      	push	{r7}
 8001c26:	b085      	sub	sp, #20
 8001c28:	af00      	add	r7, sp, #0
 8001c2a:	6078      	str	r0, [r7, #4]
  __IO uint32_t tmpreg;
  SET_BIT(RCC->AHB1ENR, Periphs);
 8001c2c:	4b08      	ldr	r3, [pc, #32]	; (8001c50 <LL_AHB1_GRP1_EnableClock+0x2c>)
 8001c2e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c30:	4907      	ldr	r1, [pc, #28]	; (8001c50 <LL_AHB1_GRP1_EnableClock+0x2c>)
 8001c32:	687b      	ldr	r3, [r7, #4]
 8001c34:	4313      	orrs	r3, r2
 8001c36:	630b      	str	r3, [r1, #48]	; 0x30
  /* Delay after an RCC peripheral clock enabling */
  tmpreg = READ_BIT(RCC->AHB1ENR, Periphs);
 8001c38:	4b05      	ldr	r3, [pc, #20]	; (8001c50 <LL_AHB1_GRP1_EnableClock+0x2c>)
 8001c3a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c3c:	687b      	ldr	r3, [r7, #4]
 8001c3e:	4013      	ands	r3, r2
 8001c40:	60fb      	str	r3, [r7, #12]
  (void)tmpreg;
 8001c42:	68fb      	ldr	r3, [r7, #12]
}
 8001c44:	bf00      	nop
 8001c46:	3714      	adds	r7, #20
 8001c48:	46bd      	mov	sp, r7
 8001c4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c4e:	4770      	bx	lr
 8001c50:	40023800 	.word	0x40023800

08001c54 <LL_APB2_GRP1_EnableClock>:
  *
  *         (*) value not defined in all devices.
  * @retval None
*/
__STATIC_INLINE void LL_APB2_GRP1_EnableClock(uint32_t Periphs)
{
 8001c54:	b480      	push	{r7}
 8001c56:	b085      	sub	sp, #20
 8001c58:	af00      	add	r7, sp, #0
 8001c5a:	6078      	str	r0, [r7, #4]
  __IO uint32_t tmpreg;
  SET_BIT(RCC->APB2ENR, Periphs);
 8001c5c:	4b08      	ldr	r3, [pc, #32]	; (8001c80 <LL_APB2_GRP1_EnableClock+0x2c>)
 8001c5e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001c60:	4907      	ldr	r1, [pc, #28]	; (8001c80 <LL_APB2_GRP1_EnableClock+0x2c>)
 8001c62:	687b      	ldr	r3, [r7, #4]
 8001c64:	4313      	orrs	r3, r2
 8001c66:	644b      	str	r3, [r1, #68]	; 0x44
  /* Delay after an RCC peripheral clock enabling */
  tmpreg = READ_BIT(RCC->APB2ENR, Periphs);
 8001c68:	4b05      	ldr	r3, [pc, #20]	; (8001c80 <LL_APB2_GRP1_EnableClock+0x2c>)
 8001c6a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001c6c:	687b      	ldr	r3, [r7, #4]
 8001c6e:	4013      	ands	r3, r2
 8001c70:	60fb      	str	r3, [r7, #12]
  (void)tmpreg;
 8001c72:	68fb      	ldr	r3, [r7, #12]
}
 8001c74:	bf00      	nop
 8001c76:	3714      	adds	r7, #20
 8001c78:	46bd      	mov	sp, r7
 8001c7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c7e:	4770      	bx	lr
 8001c80:	40023800 	.word	0x40023800

08001c84 <LL_DMA_EnableStream>:
  *         @arg @ref LL_DMA_STREAM_6
  *         @arg @ref LL_DMA_STREAM_7
  * @retval None
  */
__STATIC_INLINE void LL_DMA_EnableStream(DMA_TypeDef *DMAx, uint32_t Stream)
{
 8001c84:	b480      	push	{r7}
 8001c86:	b083      	sub	sp, #12
 8001c88:	af00      	add	r7, sp, #0
 8001c8a:	6078      	str	r0, [r7, #4]
 8001c8c:	6039      	str	r1, [r7, #0]
  SET_BIT(((DMA_Stream_TypeDef *)((uint32_t)((uint32_t)DMAx + STREAM_OFFSET_TAB[Stream])))->CR, DMA_SxCR_EN);
 8001c8e:	4a0c      	ldr	r2, [pc, #48]	; (8001cc0 <LL_DMA_EnableStream+0x3c>)
 8001c90:	683b      	ldr	r3, [r7, #0]
 8001c92:	4413      	add	r3, r2
 8001c94:	781b      	ldrb	r3, [r3, #0]
 8001c96:	461a      	mov	r2, r3
 8001c98:	687b      	ldr	r3, [r7, #4]
 8001c9a:	4413      	add	r3, r2
 8001c9c:	681b      	ldr	r3, [r3, #0]
 8001c9e:	4908      	ldr	r1, [pc, #32]	; (8001cc0 <LL_DMA_EnableStream+0x3c>)
 8001ca0:	683a      	ldr	r2, [r7, #0]
 8001ca2:	440a      	add	r2, r1
 8001ca4:	7812      	ldrb	r2, [r2, #0]
 8001ca6:	4611      	mov	r1, r2
 8001ca8:	687a      	ldr	r2, [r7, #4]
 8001caa:	440a      	add	r2, r1
 8001cac:	f043 0301 	orr.w	r3, r3, #1
 8001cb0:	6013      	str	r3, [r2, #0]
}
 8001cb2:	bf00      	nop
 8001cb4:	370c      	adds	r7, #12
 8001cb6:	46bd      	mov	sp, r7
 8001cb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001cbc:	4770      	bx	lr
 8001cbe:	bf00      	nop
 8001cc0:	0802ddb8 	.word	0x0802ddb8

08001cc4 <LL_DMA_SetDataTransferDirection>:
  *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH
  *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_MEMORY
  * @retval None
  */
__STATIC_INLINE void LL_DMA_SetDataTransferDirection(DMA_TypeDef *DMAx, uint32_t Stream, uint32_t  Direction)
{
 8001cc4:	b480      	push	{r7}
 8001cc6:	b085      	sub	sp, #20
 8001cc8:	af00      	add	r7, sp, #0
 8001cca:	60f8      	str	r0, [r7, #12]
 8001ccc:	60b9      	str	r1, [r7, #8]
 8001cce:	607a      	str	r2, [r7, #4]
  MODIFY_REG(((DMA_Stream_TypeDef*)((uint32_t)((uint32_t)DMAx + STREAM_OFFSET_TAB[Stream])))->CR, DMA_SxCR_DIR, Direction);
 8001cd0:	4a0d      	ldr	r2, [pc, #52]	; (8001d08 <LL_DMA_SetDataTransferDirection+0x44>)
 8001cd2:	68bb      	ldr	r3, [r7, #8]
 8001cd4:	4413      	add	r3, r2
 8001cd6:	781b      	ldrb	r3, [r3, #0]
 8001cd8:	461a      	mov	r2, r3
 8001cda:	68fb      	ldr	r3, [r7, #12]
 8001cdc:	4413      	add	r3, r2
 8001cde:	681b      	ldr	r3, [r3, #0]
 8001ce0:	f023 02c0 	bic.w	r2, r3, #192	; 0xc0
 8001ce4:	4908      	ldr	r1, [pc, #32]	; (8001d08 <LL_DMA_SetDataTransferDirection+0x44>)
 8001ce6:	68bb      	ldr	r3, [r7, #8]
 8001ce8:	440b      	add	r3, r1
 8001cea:	781b      	ldrb	r3, [r3, #0]
 8001cec:	4619      	mov	r1, r3
 8001cee:	68fb      	ldr	r3, [r7, #12]
 8001cf0:	440b      	add	r3, r1
 8001cf2:	4619      	mov	r1, r3
 8001cf4:	687b      	ldr	r3, [r7, #4]
 8001cf6:	4313      	orrs	r3, r2
 8001cf8:	600b      	str	r3, [r1, #0]
}
 8001cfa:	bf00      	nop
 8001cfc:	3714      	adds	r7, #20
 8001cfe:	46bd      	mov	sp, r7
 8001d00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d04:	4770      	bx	lr
 8001d06:	bf00      	nop
 8001d08:	0802ddb8 	.word	0x0802ddb8

08001d0c <LL_DMA_SetMode>:
  *         @arg @ref LL_DMA_MODE_CIRCULAR
  *         @arg @ref LL_DMA_MODE_PFCTRL
  * @retval None
  */
__STATIC_INLINE void LL_DMA_SetMode(DMA_TypeDef *DMAx, uint32_t Stream, uint32_t Mode)
{
 8001d0c:	b480      	push	{r7}
 8001d0e:	b085      	sub	sp, #20
 8001d10:	af00      	add	r7, sp, #0
 8001d12:	60f8      	str	r0, [r7, #12]
 8001d14:	60b9      	str	r1, [r7, #8]
 8001d16:	607a      	str	r2, [r7, #4]
  MODIFY_REG(((DMA_Stream_TypeDef*)((uint32_t)((uint32_t)DMAx + STREAM_OFFSET_TAB[Stream])))->CR, DMA_SxCR_CIRC | DMA_SxCR_PFCTRL, Mode);
 8001d18:	4a0d      	ldr	r2, [pc, #52]	; (8001d50 <LL_DMA_SetMode+0x44>)
 8001d1a:	68bb      	ldr	r3, [r7, #8]
 8001d1c:	4413      	add	r3, r2
 8001d1e:	781b      	ldrb	r3, [r3, #0]
 8001d20:	461a      	mov	r2, r3
 8001d22:	68fb      	ldr	r3, [r7, #12]
 8001d24:	4413      	add	r3, r2
 8001d26:	681b      	ldr	r3, [r3, #0]
 8001d28:	f423 7290 	bic.w	r2, r3, #288	; 0x120
 8001d2c:	4908      	ldr	r1, [pc, #32]	; (8001d50 <LL_DMA_SetMode+0x44>)
 8001d2e:	68bb      	ldr	r3, [r7, #8]
 8001d30:	440b      	add	r3, r1
 8001d32:	781b      	ldrb	r3, [r3, #0]
 8001d34:	4619      	mov	r1, r3
 8001d36:	68fb      	ldr	r3, [r7, #12]
 8001d38:	440b      	add	r3, r1
 8001d3a:	4619      	mov	r1, r3
 8001d3c:	687b      	ldr	r3, [r7, #4]
 8001d3e:	4313      	orrs	r3, r2
 8001d40:	600b      	str	r3, [r1, #0]
}
 8001d42:	bf00      	nop
 8001d44:	3714      	adds	r7, #20
 8001d46:	46bd      	mov	sp, r7
 8001d48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d4c:	4770      	bx	lr
 8001d4e:	bf00      	nop
 8001d50:	0802ddb8 	.word	0x0802ddb8

08001d54 <LL_DMA_SetPeriphIncMode>:
  *         @arg @ref LL_DMA_PERIPH_NOINCREMENT
  *         @arg @ref LL_DMA_PERIPH_INCREMENT
  * @retval None
  */
__STATIC_INLINE void LL_DMA_SetPeriphIncMode(DMA_TypeDef *DMAx, uint32_t Stream, uint32_t IncrementMode)
{
 8001d54:	b480      	push	{r7}
 8001d56:	b085      	sub	sp, #20
 8001d58:	af00      	add	r7, sp, #0
 8001d5a:	60f8      	str	r0, [r7, #12]
 8001d5c:	60b9      	str	r1, [r7, #8]
 8001d5e:	607a      	str	r2, [r7, #4]
  MODIFY_REG(((DMA_Stream_TypeDef*)((uint32_t)((uint32_t)DMAx + STREAM_OFFSET_TAB[Stream])))->CR, DMA_SxCR_PINC, IncrementMode);
 8001d60:	4a0d      	ldr	r2, [pc, #52]	; (8001d98 <LL_DMA_SetPeriphIncMode+0x44>)
 8001d62:	68bb      	ldr	r3, [r7, #8]
 8001d64:	4413      	add	r3, r2
 8001d66:	781b      	ldrb	r3, [r3, #0]
 8001d68:	461a      	mov	r2, r3
 8001d6a:	68fb      	ldr	r3, [r7, #12]
 8001d6c:	4413      	add	r3, r2
 8001d6e:	681b      	ldr	r3, [r3, #0]
 8001d70:	f423 7200 	bic.w	r2, r3, #512	; 0x200
 8001d74:	4908      	ldr	r1, [pc, #32]	; (8001d98 <LL_DMA_SetPeriphIncMode+0x44>)
 8001d76:	68bb      	ldr	r3, [r7, #8]
 8001d78:	440b      	add	r3, r1
 8001d7a:	781b      	ldrb	r3, [r3, #0]
 8001d7c:	4619      	mov	r1, r3
 8001d7e:	68fb      	ldr	r3, [r7, #12]
 8001d80:	440b      	add	r3, r1
 8001d82:	4619      	mov	r1, r3
 8001d84:	687b      	ldr	r3, [r7, #4]
 8001d86:	4313      	orrs	r3, r2
 8001d88:	600b      	str	r3, [r1, #0]
}
 8001d8a:	bf00      	nop
 8001d8c:	3714      	adds	r7, #20
 8001d8e:	46bd      	mov	sp, r7
 8001d90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d94:	4770      	bx	lr
 8001d96:	bf00      	nop
 8001d98:	0802ddb8 	.word	0x0802ddb8

08001d9c <LL_DMA_SetMemoryIncMode>:
  *         @arg @ref LL_DMA_MEMORY_NOINCREMENT
  *         @arg @ref LL_DMA_MEMORY_INCREMENT
  * @retval None
  */
__STATIC_INLINE void LL_DMA_SetMemoryIncMode(DMA_TypeDef *DMAx, uint32_t Stream, uint32_t IncrementMode)
{
 8001d9c:	b480      	push	{r7}
 8001d9e:	b085      	sub	sp, #20
 8001da0:	af00      	add	r7, sp, #0
 8001da2:	60f8      	str	r0, [r7, #12]
 8001da4:	60b9      	str	r1, [r7, #8]
 8001da6:	607a      	str	r2, [r7, #4]
  MODIFY_REG(((DMA_Stream_TypeDef*)((uint32_t)((uint32_t)DMAx + STREAM_OFFSET_TAB[Stream])))->CR, DMA_SxCR_MINC, IncrementMode);
 8001da8:	4a0d      	ldr	r2, [pc, #52]	; (8001de0 <LL_DMA_SetMemoryIncMode+0x44>)
 8001daa:	68bb      	ldr	r3, [r7, #8]
 8001dac:	4413      	add	r3, r2
 8001dae:	781b      	ldrb	r3, [r3, #0]
 8001db0:	461a      	mov	r2, r3
 8001db2:	68fb      	ldr	r3, [r7, #12]
 8001db4:	4413      	add	r3, r2
 8001db6:	681b      	ldr	r3, [r3, #0]
 8001db8:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 8001dbc:	4908      	ldr	r1, [pc, #32]	; (8001de0 <LL_DMA_SetMemoryIncMode+0x44>)
 8001dbe:	68bb      	ldr	r3, [r7, #8]
 8001dc0:	440b      	add	r3, r1
 8001dc2:	781b      	ldrb	r3, [r3, #0]
 8001dc4:	4619      	mov	r1, r3
 8001dc6:	68fb      	ldr	r3, [r7, #12]
 8001dc8:	440b      	add	r3, r1
 8001dca:	4619      	mov	r1, r3
 8001dcc:	687b      	ldr	r3, [r7, #4]
 8001dce:	4313      	orrs	r3, r2
 8001dd0:	600b      	str	r3, [r1, #0]
}
 8001dd2:	bf00      	nop
 8001dd4:	3714      	adds	r7, #20
 8001dd6:	46bd      	mov	sp, r7
 8001dd8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ddc:	4770      	bx	lr
 8001dde:	bf00      	nop
 8001de0:	0802ddb8 	.word	0x0802ddb8

08001de4 <LL_DMA_SetPeriphSize>:
  *         @arg @ref LL_DMA_PDATAALIGN_HALFWORD
  *         @arg @ref LL_DMA_PDATAALIGN_WORD
  * @retval None
  */
__STATIC_INLINE void LL_DMA_SetPeriphSize(DMA_TypeDef *DMAx, uint32_t Stream, uint32_t  Size)
{
 8001de4:	b480      	push	{r7}
 8001de6:	b085      	sub	sp, #20
 8001de8:	af00      	add	r7, sp, #0
 8001dea:	60f8      	str	r0, [r7, #12]
 8001dec:	60b9      	str	r1, [r7, #8]
 8001dee:	607a      	str	r2, [r7, #4]
  MODIFY_REG(((DMA_Stream_TypeDef*)((uint32_t)((uint32_t)DMAx + STREAM_OFFSET_TAB[Stream])))->CR, DMA_SxCR_PSIZE, Size);
 8001df0:	4a0d      	ldr	r2, [pc, #52]	; (8001e28 <LL_DMA_SetPeriphSize+0x44>)
 8001df2:	68bb      	ldr	r3, [r7, #8]
 8001df4:	4413      	add	r3, r2
 8001df6:	781b      	ldrb	r3, [r3, #0]
 8001df8:	461a      	mov	r2, r3
 8001dfa:	68fb      	ldr	r3, [r7, #12]
 8001dfc:	4413      	add	r3, r2
 8001dfe:	681b      	ldr	r3, [r3, #0]
 8001e00:	f423 52c0 	bic.w	r2, r3, #6144	; 0x1800
 8001e04:	4908      	ldr	r1, [pc, #32]	; (8001e28 <LL_DMA_SetPeriphSize+0x44>)
 8001e06:	68bb      	ldr	r3, [r7, #8]
 8001e08:	440b      	add	r3, r1
 8001e0a:	781b      	ldrb	r3, [r3, #0]
 8001e0c:	4619      	mov	r1, r3
 8001e0e:	68fb      	ldr	r3, [r7, #12]
 8001e10:	440b      	add	r3, r1
 8001e12:	4619      	mov	r1, r3
 8001e14:	687b      	ldr	r3, [r7, #4]
 8001e16:	4313      	orrs	r3, r2
 8001e18:	600b      	str	r3, [r1, #0]
}
 8001e1a:	bf00      	nop
 8001e1c:	3714      	adds	r7, #20
 8001e1e:	46bd      	mov	sp, r7
 8001e20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e24:	4770      	bx	lr
 8001e26:	bf00      	nop
 8001e28:	0802ddb8 	.word	0x0802ddb8

08001e2c <LL_DMA_SetMemorySize>:
  *         @arg @ref LL_DMA_MDATAALIGN_HALFWORD
  *         @arg @ref LL_DMA_MDATAALIGN_WORD
  * @retval None
  */
__STATIC_INLINE void LL_DMA_SetMemorySize(DMA_TypeDef *DMAx, uint32_t Stream, uint32_t  Size)
{
 8001e2c:	b480      	push	{r7}
 8001e2e:	b085      	sub	sp, #20
 8001e30:	af00      	add	r7, sp, #0
 8001e32:	60f8      	str	r0, [r7, #12]
 8001e34:	60b9      	str	r1, [r7, #8]
 8001e36:	607a      	str	r2, [r7, #4]
  MODIFY_REG(((DMA_Stream_TypeDef*)((uint32_t)((uint32_t)DMAx + STREAM_OFFSET_TAB[Stream])))->CR, DMA_SxCR_MSIZE, Size);
 8001e38:	4a0d      	ldr	r2, [pc, #52]	; (8001e70 <LL_DMA_SetMemorySize+0x44>)
 8001e3a:	68bb      	ldr	r3, [r7, #8]
 8001e3c:	4413      	add	r3, r2
 8001e3e:	781b      	ldrb	r3, [r3, #0]
 8001e40:	461a      	mov	r2, r3
 8001e42:	68fb      	ldr	r3, [r7, #12]
 8001e44:	4413      	add	r3, r2
 8001e46:	681b      	ldr	r3, [r3, #0]
 8001e48:	f423 42c0 	bic.w	r2, r3, #24576	; 0x6000
 8001e4c:	4908      	ldr	r1, [pc, #32]	; (8001e70 <LL_DMA_SetMemorySize+0x44>)
 8001e4e:	68bb      	ldr	r3, [r7, #8]
 8001e50:	440b      	add	r3, r1
 8001e52:	781b      	ldrb	r3, [r3, #0]
 8001e54:	4619      	mov	r1, r3
 8001e56:	68fb      	ldr	r3, [r7, #12]
 8001e58:	440b      	add	r3, r1
 8001e5a:	4619      	mov	r1, r3
 8001e5c:	687b      	ldr	r3, [r7, #4]
 8001e5e:	4313      	orrs	r3, r2
 8001e60:	600b      	str	r3, [r1, #0]
}
 8001e62:	bf00      	nop
 8001e64:	3714      	adds	r7, #20
 8001e66:	46bd      	mov	sp, r7
 8001e68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e6c:	4770      	bx	lr
 8001e6e:	bf00      	nop
 8001e70:	0802ddb8 	.word	0x0802ddb8

08001e74 <LL_DMA_SetStreamPriorityLevel>:
  *         @arg @ref LL_DMA_PRIORITY_HIGH
  *         @arg @ref LL_DMA_PRIORITY_VERYHIGH
  * @retval None
  */
__STATIC_INLINE void LL_DMA_SetStreamPriorityLevel(DMA_TypeDef *DMAx, uint32_t Stream, uint32_t  Priority)
{
 8001e74:	b480      	push	{r7}
 8001e76:	b085      	sub	sp, #20
 8001e78:	af00      	add	r7, sp, #0
 8001e7a:	60f8      	str	r0, [r7, #12]
 8001e7c:	60b9      	str	r1, [r7, #8]
 8001e7e:	607a      	str	r2, [r7, #4]
  MODIFY_REG(((DMA_Stream_TypeDef*)((uint32_t)((uint32_t)DMAx + STREAM_OFFSET_TAB[Stream])))->CR, DMA_SxCR_PL, Priority);
 8001e80:	4a0d      	ldr	r2, [pc, #52]	; (8001eb8 <LL_DMA_SetStreamPriorityLevel+0x44>)
 8001e82:	68bb      	ldr	r3, [r7, #8]
 8001e84:	4413      	add	r3, r2
 8001e86:	781b      	ldrb	r3, [r3, #0]
 8001e88:	461a      	mov	r2, r3
 8001e8a:	68fb      	ldr	r3, [r7, #12]
 8001e8c:	4413      	add	r3, r2
 8001e8e:	681b      	ldr	r3, [r3, #0]
 8001e90:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8001e94:	4908      	ldr	r1, [pc, #32]	; (8001eb8 <LL_DMA_SetStreamPriorityLevel+0x44>)
 8001e96:	68bb      	ldr	r3, [r7, #8]
 8001e98:	440b      	add	r3, r1
 8001e9a:	781b      	ldrb	r3, [r3, #0]
 8001e9c:	4619      	mov	r1, r3
 8001e9e:	68fb      	ldr	r3, [r7, #12]
 8001ea0:	440b      	add	r3, r1
 8001ea2:	4619      	mov	r1, r3
 8001ea4:	687b      	ldr	r3, [r7, #4]
 8001ea6:	4313      	orrs	r3, r2
 8001ea8:	600b      	str	r3, [r1, #0]
}
 8001eaa:	bf00      	nop
 8001eac:	3714      	adds	r7, #20
 8001eae:	46bd      	mov	sp, r7
 8001eb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001eb4:	4770      	bx	lr
 8001eb6:	bf00      	nop
 8001eb8:	0802ddb8 	.word	0x0802ddb8

08001ebc <LL_DMA_SetDataLength>:
  *         @arg @ref LL_DMA_STREAM_7
  * @param  NbData Between 0 to 0xFFFFFFFF
  * @retval None
  */
__STATIC_INLINE void LL_DMA_SetDataLength(DMA_TypeDef* DMAx, uint32_t Stream, uint32_t NbData)
{
 8001ebc:	b480      	push	{r7}
 8001ebe:	b085      	sub	sp, #20
 8001ec0:	af00      	add	r7, sp, #0
 8001ec2:	60f8      	str	r0, [r7, #12]
 8001ec4:	60b9      	str	r1, [r7, #8]
 8001ec6:	607a      	str	r2, [r7, #4]
  MODIFY_REG(((DMA_Stream_TypeDef*)((uint32_t)((uint32_t)DMAx + STREAM_OFFSET_TAB[Stream])))->NDTR, DMA_SxNDT, NbData);
 8001ec8:	4a0d      	ldr	r2, [pc, #52]	; (8001f00 <LL_DMA_SetDataLength+0x44>)
 8001eca:	68bb      	ldr	r3, [r7, #8]
 8001ecc:	4413      	add	r3, r2
 8001ece:	781b      	ldrb	r3, [r3, #0]
 8001ed0:	461a      	mov	r2, r3
 8001ed2:	68fb      	ldr	r3, [r7, #12]
 8001ed4:	4413      	add	r3, r2
 8001ed6:	685b      	ldr	r3, [r3, #4]
 8001ed8:	0c1b      	lsrs	r3, r3, #16
 8001eda:	041b      	lsls	r3, r3, #16
 8001edc:	4908      	ldr	r1, [pc, #32]	; (8001f00 <LL_DMA_SetDataLength+0x44>)
 8001ede:	68ba      	ldr	r2, [r7, #8]
 8001ee0:	440a      	add	r2, r1
 8001ee2:	7812      	ldrb	r2, [r2, #0]
 8001ee4:	4611      	mov	r1, r2
 8001ee6:	68fa      	ldr	r2, [r7, #12]
 8001ee8:	440a      	add	r2, r1
 8001eea:	4611      	mov	r1, r2
 8001eec:	687a      	ldr	r2, [r7, #4]
 8001eee:	4313      	orrs	r3, r2
 8001ef0:	604b      	str	r3, [r1, #4]
}
 8001ef2:	bf00      	nop
 8001ef4:	3714      	adds	r7, #20
 8001ef6:	46bd      	mov	sp, r7
 8001ef8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001efc:	4770      	bx	lr
 8001efe:	bf00      	nop
 8001f00:	0802ddb8 	.word	0x0802ddb8

08001f04 <LL_DMA_SetChannelSelection>:
  *         @arg @ref LL_DMA_CHANNEL_6
  *         @arg @ref LL_DMA_CHANNEL_7
  * @retval None
  */
__STATIC_INLINE void LL_DMA_SetChannelSelection(DMA_TypeDef *DMAx, uint32_t Stream, uint32_t Channel)
{
 8001f04:	b480      	push	{r7}
 8001f06:	b085      	sub	sp, #20
 8001f08:	af00      	add	r7, sp, #0
 8001f0a:	60f8      	str	r0, [r7, #12]
 8001f0c:	60b9      	str	r1, [r7, #8]
 8001f0e:	607a      	str	r2, [r7, #4]
  MODIFY_REG(((DMA_Stream_TypeDef*)((uint32_t)((uint32_t)DMAx + STREAM_OFFSET_TAB[Stream])))->CR, DMA_SxCR_CHSEL, Channel);
 8001f10:	4a0d      	ldr	r2, [pc, #52]	; (8001f48 <LL_DMA_SetChannelSelection+0x44>)
 8001f12:	68bb      	ldr	r3, [r7, #8]
 8001f14:	4413      	add	r3, r2
 8001f16:	781b      	ldrb	r3, [r3, #0]
 8001f18:	461a      	mov	r2, r3
 8001f1a:	68fb      	ldr	r3, [r7, #12]
 8001f1c:	4413      	add	r3, r2
 8001f1e:	681b      	ldr	r3, [r3, #0]
 8001f20:	f023 6260 	bic.w	r2, r3, #234881024	; 0xe000000
 8001f24:	4908      	ldr	r1, [pc, #32]	; (8001f48 <LL_DMA_SetChannelSelection+0x44>)
 8001f26:	68bb      	ldr	r3, [r7, #8]
 8001f28:	440b      	add	r3, r1
 8001f2a:	781b      	ldrb	r3, [r3, #0]
 8001f2c:	4619      	mov	r1, r3
 8001f2e:	68fb      	ldr	r3, [r7, #12]
 8001f30:	440b      	add	r3, r1
 8001f32:	4619      	mov	r1, r3
 8001f34:	687b      	ldr	r3, [r7, #4]
 8001f36:	4313      	orrs	r3, r2
 8001f38:	600b      	str	r3, [r1, #0]
}
 8001f3a:	bf00      	nop
 8001f3c:	3714      	adds	r7, #20
 8001f3e:	46bd      	mov	sp, r7
 8001f40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f44:	4770      	bx	lr
 8001f46:	bf00      	nop
 8001f48:	0802ddb8 	.word	0x0802ddb8

08001f4c <LL_DMA_DisableFifoMode>:
  *         @arg @ref LL_DMA_STREAM_6
  *         @arg @ref LL_DMA_STREAM_7
  * @retval None
  */
__STATIC_INLINE void LL_DMA_DisableFifoMode(DMA_TypeDef *DMAx, uint32_t Stream)
{
 8001f4c:	b480      	push	{r7}
 8001f4e:	b083      	sub	sp, #12
 8001f50:	af00      	add	r7, sp, #0
 8001f52:	6078      	str	r0, [r7, #4]
 8001f54:	6039      	str	r1, [r7, #0]
  CLEAR_BIT(((DMA_Stream_TypeDef *)((uint32_t)((uint32_t)DMAx + STREAM_OFFSET_TAB[Stream])))->FCR, DMA_SxFCR_DMDIS);
 8001f56:	4a0c      	ldr	r2, [pc, #48]	; (8001f88 <LL_DMA_DisableFifoMode+0x3c>)
 8001f58:	683b      	ldr	r3, [r7, #0]
 8001f5a:	4413      	add	r3, r2
 8001f5c:	781b      	ldrb	r3, [r3, #0]
 8001f5e:	461a      	mov	r2, r3
 8001f60:	687b      	ldr	r3, [r7, #4]
 8001f62:	4413      	add	r3, r2
 8001f64:	695b      	ldr	r3, [r3, #20]
 8001f66:	4908      	ldr	r1, [pc, #32]	; (8001f88 <LL_DMA_DisableFifoMode+0x3c>)
 8001f68:	683a      	ldr	r2, [r7, #0]
 8001f6a:	440a      	add	r2, r1
 8001f6c:	7812      	ldrb	r2, [r2, #0]
 8001f6e:	4611      	mov	r1, r2
 8001f70:	687a      	ldr	r2, [r7, #4]
 8001f72:	440a      	add	r2, r1
 8001f74:	f023 0304 	bic.w	r3, r3, #4
 8001f78:	6153      	str	r3, [r2, #20]
}
 8001f7a:	bf00      	nop
 8001f7c:	370c      	adds	r7, #12
 8001f7e:	46bd      	mov	sp, r7
 8001f80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f84:	4770      	bx	lr
 8001f86:	bf00      	nop
 8001f88:	0802ddb8 	.word	0x0802ddb8

08001f8c <LL_DMA_ConfigAddresses>:
  *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH
  *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_MEMORY
  * @retval None
  */
__STATIC_INLINE void LL_DMA_ConfigAddresses(DMA_TypeDef* DMAx, uint32_t Stream, uint32_t SrcAddress, uint32_t DstAddress, uint32_t Direction)
{
 8001f8c:	b480      	push	{r7}
 8001f8e:	b085      	sub	sp, #20
 8001f90:	af00      	add	r7, sp, #0
 8001f92:	60f8      	str	r0, [r7, #12]
 8001f94:	60b9      	str	r1, [r7, #8]
 8001f96:	607a      	str	r2, [r7, #4]
 8001f98:	603b      	str	r3, [r7, #0]
  /* Direction Memory to Periph */
  if (Direction == LL_DMA_DIRECTION_MEMORY_TO_PERIPH)
 8001f9a:	69bb      	ldr	r3, [r7, #24]
 8001f9c:	2b40      	cmp	r3, #64	; 0x40
 8001f9e:	d114      	bne.n	8001fca <LL_DMA_ConfigAddresses+0x3e>
  {
    WRITE_REG(((DMA_Stream_TypeDef*)((uint32_t)((uint32_t)DMAx + STREAM_OFFSET_TAB[Stream])))->M0AR, SrcAddress);
 8001fa0:	4a17      	ldr	r2, [pc, #92]	; (8002000 <LL_DMA_ConfigAddresses+0x74>)
 8001fa2:	68bb      	ldr	r3, [r7, #8]
 8001fa4:	4413      	add	r3, r2
 8001fa6:	781b      	ldrb	r3, [r3, #0]
 8001fa8:	461a      	mov	r2, r3
 8001faa:	68fb      	ldr	r3, [r7, #12]
 8001fac:	4413      	add	r3, r2
 8001fae:	461a      	mov	r2, r3
 8001fb0:	687b      	ldr	r3, [r7, #4]
 8001fb2:	60d3      	str	r3, [r2, #12]
    WRITE_REG(((DMA_Stream_TypeDef*)((uint32_t)((uint32_t)DMAx + STREAM_OFFSET_TAB[Stream])))->PAR, DstAddress);
 8001fb4:	4a12      	ldr	r2, [pc, #72]	; (8002000 <LL_DMA_ConfigAddresses+0x74>)
 8001fb6:	68bb      	ldr	r3, [r7, #8]
 8001fb8:	4413      	add	r3, r2
 8001fba:	781b      	ldrb	r3, [r3, #0]
 8001fbc:	461a      	mov	r2, r3
 8001fbe:	68fb      	ldr	r3, [r7, #12]
 8001fc0:	4413      	add	r3, r2
 8001fc2:	461a      	mov	r2, r3
 8001fc4:	683b      	ldr	r3, [r7, #0]
 8001fc6:	6093      	str	r3, [r2, #8]
  else
  {
    WRITE_REG(((DMA_Stream_TypeDef*)((uint32_t)((uint32_t)DMAx + STREAM_OFFSET_TAB[Stream])))->PAR, SrcAddress);
    WRITE_REG(((DMA_Stream_TypeDef*)((uint32_t)((uint32_t)DMAx + STREAM_OFFSET_TAB[Stream])))->M0AR, DstAddress);
  }
}
 8001fc8:	e013      	b.n	8001ff2 <LL_DMA_ConfigAddresses+0x66>
    WRITE_REG(((DMA_Stream_TypeDef*)((uint32_t)((uint32_t)DMAx + STREAM_OFFSET_TAB[Stream])))->PAR, SrcAddress);
 8001fca:	4a0d      	ldr	r2, [pc, #52]	; (8002000 <LL_DMA_ConfigAddresses+0x74>)
 8001fcc:	68bb      	ldr	r3, [r7, #8]
 8001fce:	4413      	add	r3, r2
 8001fd0:	781b      	ldrb	r3, [r3, #0]
 8001fd2:	461a      	mov	r2, r3
 8001fd4:	68fb      	ldr	r3, [r7, #12]
 8001fd6:	4413      	add	r3, r2
 8001fd8:	461a      	mov	r2, r3
 8001fda:	687b      	ldr	r3, [r7, #4]
 8001fdc:	6093      	str	r3, [r2, #8]
    WRITE_REG(((DMA_Stream_TypeDef*)((uint32_t)((uint32_t)DMAx + STREAM_OFFSET_TAB[Stream])))->M0AR, DstAddress);
 8001fde:	4a08      	ldr	r2, [pc, #32]	; (8002000 <LL_DMA_ConfigAddresses+0x74>)
 8001fe0:	68bb      	ldr	r3, [r7, #8]
 8001fe2:	4413      	add	r3, r2
 8001fe4:	781b      	ldrb	r3, [r3, #0]
 8001fe6:	461a      	mov	r2, r3
 8001fe8:	68fb      	ldr	r3, [r7, #12]
 8001fea:	4413      	add	r3, r2
 8001fec:	461a      	mov	r2, r3
 8001fee:	683b      	ldr	r3, [r7, #0]
 8001ff0:	60d3      	str	r3, [r2, #12]
}
 8001ff2:	bf00      	nop
 8001ff4:	3714      	adds	r7, #20
 8001ff6:	46bd      	mov	sp, r7
 8001ff8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ffc:	4770      	bx	lr
 8001ffe:	bf00      	nop
 8002000:	0802ddb8 	.word	0x0802ddb8

08002004 <LL_DMA_ClearFlag_HT0>:
  * @rmtoll LIFCR  CHTIF0    LL_DMA_ClearFlag_HT0
  * @param  DMAx DMAx Instance
  * @retval None
  */
__STATIC_INLINE void LL_DMA_ClearFlag_HT0(DMA_TypeDef *DMAx)
{
 8002004:	b480      	push	{r7}
 8002006:	b083      	sub	sp, #12
 8002008:	af00      	add	r7, sp, #0
 800200a:	6078      	str	r0, [r7, #4]
  WRITE_REG(DMAx->LIFCR , DMA_LIFCR_CHTIF0);
 800200c:	687b      	ldr	r3, [r7, #4]
 800200e:	2210      	movs	r2, #16
 8002010:	609a      	str	r2, [r3, #8]
}
 8002012:	bf00      	nop
 8002014:	370c      	adds	r7, #12
 8002016:	46bd      	mov	sp, r7
 8002018:	f85d 7b04 	ldr.w	r7, [sp], #4
 800201c:	4770      	bx	lr

0800201e <LL_DMA_ClearFlag_TC0>:
  * @rmtoll LIFCR  CTCIF0    LL_DMA_ClearFlag_TC0
  * @param  DMAx DMAx Instance
  * @retval None
  */
__STATIC_INLINE void LL_DMA_ClearFlag_TC0(DMA_TypeDef *DMAx)
{
 800201e:	b480      	push	{r7}
 8002020:	b083      	sub	sp, #12
 8002022:	af00      	add	r7, sp, #0
 8002024:	6078      	str	r0, [r7, #4]
  WRITE_REG(DMAx->LIFCR , DMA_LIFCR_CTCIF0);
 8002026:	687b      	ldr	r3, [r7, #4]
 8002028:	2220      	movs	r2, #32
 800202a:	609a      	str	r2, [r3, #8]
}
 800202c:	bf00      	nop
 800202e:	370c      	adds	r7, #12
 8002030:	46bd      	mov	sp, r7
 8002032:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002036:	4770      	bx	lr

08002038 <LL_DMA_ClearFlag_TE0>:
  * @rmtoll LIFCR  CTEIF0    LL_DMA_ClearFlag_TE0
  * @param  DMAx DMAx Instance
  * @retval None
  */
__STATIC_INLINE void LL_DMA_ClearFlag_TE0(DMA_TypeDef *DMAx)
{
 8002038:	b480      	push	{r7}
 800203a:	b083      	sub	sp, #12
 800203c:	af00      	add	r7, sp, #0
 800203e:	6078      	str	r0, [r7, #4]
  WRITE_REG(DMAx->LIFCR , DMA_LIFCR_CTEIF0);
 8002040:	687b      	ldr	r3, [r7, #4]
 8002042:	2208      	movs	r2, #8
 8002044:	609a      	str	r2, [r3, #8]
}
 8002046:	bf00      	nop
 8002048:	370c      	adds	r7, #12
 800204a:	46bd      	mov	sp, r7
 800204c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002050:	4770      	bx	lr

08002052 <LL_DMA_ClearFlag_DME0>:
  * @rmtoll LIFCR  CDMEIF0    LL_DMA_ClearFlag_DME0
  * @param  DMAx DMAx Instance
  * @retval None
  */
__STATIC_INLINE void LL_DMA_ClearFlag_DME0(DMA_TypeDef *DMAx)
{
 8002052:	b480      	push	{r7}
 8002054:	b083      	sub	sp, #12
 8002056:	af00      	add	r7, sp, #0
 8002058:	6078      	str	r0, [r7, #4]
  WRITE_REG(DMAx->LIFCR , DMA_LIFCR_CDMEIF0);
 800205a:	687b      	ldr	r3, [r7, #4]
 800205c:	2204      	movs	r2, #4
 800205e:	609a      	str	r2, [r3, #8]
}
 8002060:	bf00      	nop
 8002062:	370c      	adds	r7, #12
 8002064:	46bd      	mov	sp, r7
 8002066:	f85d 7b04 	ldr.w	r7, [sp], #4
 800206a:	4770      	bx	lr

0800206c <LL_DMA_ClearFlag_FE0>:
  * @rmtoll LIFCR  CFEIF0    LL_DMA_ClearFlag_FE0
  * @param  DMAx DMAx Instance
  * @retval None
  */
__STATIC_INLINE void LL_DMA_ClearFlag_FE0(DMA_TypeDef *DMAx)
{
 800206c:	b480      	push	{r7}
 800206e:	b083      	sub	sp, #12
 8002070:	af00      	add	r7, sp, #0
 8002072:	6078      	str	r0, [r7, #4]
  WRITE_REG(DMAx->LIFCR , DMA_LIFCR_CFEIF0);
 8002074:	687b      	ldr	r3, [r7, #4]
 8002076:	2201      	movs	r2, #1
 8002078:	609a      	str	r2, [r3, #8]
}
 800207a:	bf00      	nop
 800207c:	370c      	adds	r7, #12
 800207e:	46bd      	mov	sp, r7
 8002080:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002084:	4770      	bx	lr
	...

08002088 <LL_DMA_EnableIT_TE>:
  *         @arg @ref LL_DMA_STREAM_6
  *         @arg @ref LL_DMA_STREAM_7
  * @retval None
  */
__STATIC_INLINE void LL_DMA_EnableIT_TE(DMA_TypeDef *DMAx, uint32_t Stream)
{
 8002088:	b480      	push	{r7}
 800208a:	b083      	sub	sp, #12
 800208c:	af00      	add	r7, sp, #0
 800208e:	6078      	str	r0, [r7, #4]
 8002090:	6039      	str	r1, [r7, #0]
  SET_BIT(((DMA_Stream_TypeDef *)((uint32_t)((uint32_t)DMAx + STREAM_OFFSET_TAB[Stream])))->CR, DMA_SxCR_TEIE);
 8002092:	4a0c      	ldr	r2, [pc, #48]	; (80020c4 <LL_DMA_EnableIT_TE+0x3c>)
 8002094:	683b      	ldr	r3, [r7, #0]
 8002096:	4413      	add	r3, r2
 8002098:	781b      	ldrb	r3, [r3, #0]
 800209a:	461a      	mov	r2, r3
 800209c:	687b      	ldr	r3, [r7, #4]
 800209e:	4413      	add	r3, r2
 80020a0:	681b      	ldr	r3, [r3, #0]
 80020a2:	4908      	ldr	r1, [pc, #32]	; (80020c4 <LL_DMA_EnableIT_TE+0x3c>)
 80020a4:	683a      	ldr	r2, [r7, #0]
 80020a6:	440a      	add	r2, r1
 80020a8:	7812      	ldrb	r2, [r2, #0]
 80020aa:	4611      	mov	r1, r2
 80020ac:	687a      	ldr	r2, [r7, #4]
 80020ae:	440a      	add	r2, r1
 80020b0:	f043 0304 	orr.w	r3, r3, #4
 80020b4:	6013      	str	r3, [r2, #0]
}
 80020b6:	bf00      	nop
 80020b8:	370c      	adds	r7, #12
 80020ba:	46bd      	mov	sp, r7
 80020bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020c0:	4770      	bx	lr
 80020c2:	bf00      	nop
 80020c4:	0802ddb8 	.word	0x0802ddb8

080020c8 <LL_DMA_EnableIT_TC>:
  *         @arg @ref LL_DMA_STREAM_6
  *         @arg @ref LL_DMA_STREAM_7
  * @retval None
  */
__STATIC_INLINE void LL_DMA_EnableIT_TC(DMA_TypeDef *DMAx, uint32_t Stream)
{
 80020c8:	b480      	push	{r7}
 80020ca:	b083      	sub	sp, #12
 80020cc:	af00      	add	r7, sp, #0
 80020ce:	6078      	str	r0, [r7, #4]
 80020d0:	6039      	str	r1, [r7, #0]
  SET_BIT(((DMA_Stream_TypeDef *)((uint32_t)((uint32_t)DMAx + STREAM_OFFSET_TAB[Stream])))->CR, DMA_SxCR_TCIE);
 80020d2:	4a0c      	ldr	r2, [pc, #48]	; (8002104 <LL_DMA_EnableIT_TC+0x3c>)
 80020d4:	683b      	ldr	r3, [r7, #0]
 80020d6:	4413      	add	r3, r2
 80020d8:	781b      	ldrb	r3, [r3, #0]
 80020da:	461a      	mov	r2, r3
 80020dc:	687b      	ldr	r3, [r7, #4]
 80020de:	4413      	add	r3, r2
 80020e0:	681b      	ldr	r3, [r3, #0]
 80020e2:	4908      	ldr	r1, [pc, #32]	; (8002104 <LL_DMA_EnableIT_TC+0x3c>)
 80020e4:	683a      	ldr	r2, [r7, #0]
 80020e6:	440a      	add	r2, r1
 80020e8:	7812      	ldrb	r2, [r2, #0]
 80020ea:	4611      	mov	r1, r2
 80020ec:	687a      	ldr	r2, [r7, #4]
 80020ee:	440a      	add	r2, r1
 80020f0:	f043 0310 	orr.w	r3, r3, #16
 80020f4:	6013      	str	r3, [r2, #0]
}
 80020f6:	bf00      	nop
 80020f8:	370c      	adds	r7, #12
 80020fa:	46bd      	mov	sp, r7
 80020fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002100:	4770      	bx	lr
 8002102:	bf00      	nop
 8002104:	0802ddb8 	.word	0x0802ddb8

08002108 <LL_DMA_DisableIT_HT>:
  *         @arg @ref LL_DMA_STREAM_6
  *         @arg @ref LL_DMA_STREAM_7
  * @retval None
  */
__STATIC_INLINE void LL_DMA_DisableIT_HT(DMA_TypeDef *DMAx, uint32_t Stream)
{
 8002108:	b480      	push	{r7}
 800210a:	b083      	sub	sp, #12
 800210c:	af00      	add	r7, sp, #0
 800210e:	6078      	str	r0, [r7, #4]
 8002110:	6039      	str	r1, [r7, #0]
  CLEAR_BIT(((DMA_Stream_TypeDef *)((uint32_t)((uint32_t)DMAx + STREAM_OFFSET_TAB[Stream])))->CR, DMA_SxCR_HTIE);
 8002112:	4a0c      	ldr	r2, [pc, #48]	; (8002144 <LL_DMA_DisableIT_HT+0x3c>)
 8002114:	683b      	ldr	r3, [r7, #0]
 8002116:	4413      	add	r3, r2
 8002118:	781b      	ldrb	r3, [r3, #0]
 800211a:	461a      	mov	r2, r3
 800211c:	687b      	ldr	r3, [r7, #4]
 800211e:	4413      	add	r3, r2
 8002120:	681b      	ldr	r3, [r3, #0]
 8002122:	4908      	ldr	r1, [pc, #32]	; (8002144 <LL_DMA_DisableIT_HT+0x3c>)
 8002124:	683a      	ldr	r2, [r7, #0]
 8002126:	440a      	add	r2, r1
 8002128:	7812      	ldrb	r2, [r2, #0]
 800212a:	4611      	mov	r1, r2
 800212c:	687a      	ldr	r2, [r7, #4]
 800212e:	440a      	add	r2, r1
 8002130:	f023 0308 	bic.w	r3, r3, #8
 8002134:	6013      	str	r3, [r2, #0]
}
 8002136:	bf00      	nop
 8002138:	370c      	adds	r7, #12
 800213a:	46bd      	mov	sp, r7
 800213c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002140:	4770      	bx	lr
 8002142:	bf00      	nop
 8002144:	0802ddb8 	.word	0x0802ddb8

08002148 <LL_DMA_DisableIT_DME>:
  *         @arg @ref LL_DMA_STREAM_6
  *         @arg @ref LL_DMA_STREAM_7
  * @retval None
  */
__STATIC_INLINE void LL_DMA_DisableIT_DME(DMA_TypeDef *DMAx, uint32_t Stream)
{
 8002148:	b480      	push	{r7}
 800214a:	b083      	sub	sp, #12
 800214c:	af00      	add	r7, sp, #0
 800214e:	6078      	str	r0, [r7, #4]
 8002150:	6039      	str	r1, [r7, #0]
  CLEAR_BIT(((DMA_Stream_TypeDef *)((uint32_t)((uint32_t)DMAx + STREAM_OFFSET_TAB[Stream])))->CR, DMA_SxCR_DMEIE);
 8002152:	4a0c      	ldr	r2, [pc, #48]	; (8002184 <LL_DMA_DisableIT_DME+0x3c>)
 8002154:	683b      	ldr	r3, [r7, #0]
 8002156:	4413      	add	r3, r2
 8002158:	781b      	ldrb	r3, [r3, #0]
 800215a:	461a      	mov	r2, r3
 800215c:	687b      	ldr	r3, [r7, #4]
 800215e:	4413      	add	r3, r2
 8002160:	681b      	ldr	r3, [r3, #0]
 8002162:	4908      	ldr	r1, [pc, #32]	; (8002184 <LL_DMA_DisableIT_DME+0x3c>)
 8002164:	683a      	ldr	r2, [r7, #0]
 8002166:	440a      	add	r2, r1
 8002168:	7812      	ldrb	r2, [r2, #0]
 800216a:	4611      	mov	r1, r2
 800216c:	687a      	ldr	r2, [r7, #4]
 800216e:	440a      	add	r2, r1
 8002170:	f023 0302 	bic.w	r3, r3, #2
 8002174:	6013      	str	r3, [r2, #0]
}
 8002176:	bf00      	nop
 8002178:	370c      	adds	r7, #12
 800217a:	46bd      	mov	sp, r7
 800217c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002180:	4770      	bx	lr
 8002182:	bf00      	nop
 8002184:	0802ddb8 	.word	0x0802ddb8

08002188 <LL_DMA_DisableIT_FE>:
  *         @arg @ref LL_DMA_STREAM_6
  *         @arg @ref LL_DMA_STREAM_7
  * @retval None
  */
__STATIC_INLINE void LL_DMA_DisableIT_FE(DMA_TypeDef *DMAx, uint32_t Stream)
{
 8002188:	b480      	push	{r7}
 800218a:	b083      	sub	sp, #12
 800218c:	af00      	add	r7, sp, #0
 800218e:	6078      	str	r0, [r7, #4]
 8002190:	6039      	str	r1, [r7, #0]
  CLEAR_BIT(((DMA_Stream_TypeDef *)((uint32_t)((uint32_t)DMAx + STREAM_OFFSET_TAB[Stream])))->FCR, DMA_SxFCR_FEIE);
 8002192:	4a0c      	ldr	r2, [pc, #48]	; (80021c4 <LL_DMA_DisableIT_FE+0x3c>)
 8002194:	683b      	ldr	r3, [r7, #0]
 8002196:	4413      	add	r3, r2
 8002198:	781b      	ldrb	r3, [r3, #0]
 800219a:	461a      	mov	r2, r3
 800219c:	687b      	ldr	r3, [r7, #4]
 800219e:	4413      	add	r3, r2
 80021a0:	695b      	ldr	r3, [r3, #20]
 80021a2:	4908      	ldr	r1, [pc, #32]	; (80021c4 <LL_DMA_DisableIT_FE+0x3c>)
 80021a4:	683a      	ldr	r2, [r7, #0]
 80021a6:	440a      	add	r2, r1
 80021a8:	7812      	ldrb	r2, [r2, #0]
 80021aa:	4611      	mov	r1, r2
 80021ac:	687a      	ldr	r2, [r7, #4]
 80021ae:	440a      	add	r2, r1
 80021b0:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80021b4:	6153      	str	r3, [r2, #20]
}
 80021b6:	bf00      	nop
 80021b8:	370c      	adds	r7, #12
 80021ba:	46bd      	mov	sp, r7
 80021bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021c0:	4770      	bx	lr
 80021c2:	bf00      	nop
 80021c4:	0802ddb8 	.word	0x0802ddb8

080021c8 <getAdcVoltage>:

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */

float getAdcVoltage(void)
{
 80021c8:	b580      	push	{r7, lr}
 80021ca:	af00      	add	r7, sp, #0
  if(adc_complete == 1)
 80021cc:	4b1a      	ldr	r3, [pc, #104]	; (8002238 <getAdcVoltage+0x70>)
 80021ce:	681b      	ldr	r3, [r3, #0]
 80021d0:	2b01      	cmp	r3, #1
 80021d2:	d124      	bne.n	800221e <getAdcVoltage+0x56>
  {
    doadc = average_adc1.in0 ;
 80021d4:	4b19      	ldr	r3, [pc, #100]	; (800223c <getAdcVoltage+0x74>)
 80021d6:	881a      	ldrh	r2, [r3, #0]
 80021d8:	4b19      	ldr	r3, [pc, #100]	; (8002240 <getAdcVoltage+0x78>)
 80021da:	801a      	strh	r2, [r3, #0]
    voltage = ((float)doadc * 3.3) / 4096;
 80021dc:	4b18      	ldr	r3, [pc, #96]	; (8002240 <getAdcVoltage+0x78>)
 80021de:	881b      	ldrh	r3, [r3, #0]
 80021e0:	ee07 3a90 	vmov	s15, r3
 80021e4:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80021e8:	ee17 0a90 	vmov	r0, s15
 80021ec:	f7fe f9ac 	bl	8000548 <__aeabi_f2d>
 80021f0:	a30f      	add	r3, pc, #60	; (adr r3, 8002230 <getAdcVoltage+0x68>)
 80021f2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80021f6:	f7fe f9ff 	bl	80005f8 <__aeabi_dmul>
 80021fa:	4602      	mov	r2, r0
 80021fc:	460b      	mov	r3, r1
 80021fe:	4610      	mov	r0, r2
 8002200:	4619      	mov	r1, r3
 8002202:	f04f 0200 	mov.w	r2, #0
 8002206:	4b0f      	ldr	r3, [pc, #60]	; (8002244 <getAdcVoltage+0x7c>)
 8002208:	f7fe fb20 	bl	800084c <__aeabi_ddiv>
 800220c:	4602      	mov	r2, r0
 800220e:	460b      	mov	r3, r1
 8002210:	4610      	mov	r0, r2
 8002212:	4619      	mov	r1, r3
 8002214:	f7fe fc02 	bl	8000a1c <__aeabi_d2f>
 8002218:	4603      	mov	r3, r0
 800221a:	4a0b      	ldr	r2, [pc, #44]	; (8002248 <getAdcVoltage+0x80>)
 800221c:	6013      	str	r3, [r2, #0]
  }
  return voltage;
 800221e:	4b0a      	ldr	r3, [pc, #40]	; (8002248 <getAdcVoltage+0x80>)
 8002220:	681b      	ldr	r3, [r3, #0]
 8002222:	ee07 3a90 	vmov	s15, r3
}
 8002226:	eeb0 0a67 	vmov.f32	s0, s15
 800222a:	bd80      	pop	{r7, pc}
 800222c:	f3af 8000 	nop.w
 8002230:	66666666 	.word	0x66666666
 8002234:	400a6666 	.word	0x400a6666
 8002238:	20000358 	.word	0x20000358
 800223c:	20000354 	.word	0x20000354
 8002240:	20000340 	.word	0x20000340
 8002244:	40b00000 	.word	0x40b00000
 8002248:	20000344 	.word	0x20000344

0800224c <getGasConcentration>:

float getGasConcentration(void)
{
 800224c:	b5b0      	push	{r4, r5, r7, lr}
 800224e:	b082      	sub	sp, #8
 8002250:	af00      	add	r7, sp, #0
  float Vrl = getAdcVoltage();
 8002252:	f7ff ffb9 	bl	80021c8 <getAdcVoltage>
 8002256:	ed87 0a01 	vstr	s0, [r7, #4]
  RSdivRL = (5.0 - Vrl)/Vrl;
 800225a:	6878      	ldr	r0, [r7, #4]
 800225c:	f7fe f974 	bl	8000548 <__aeabi_f2d>
 8002260:	4602      	mov	r2, r0
 8002262:	460b      	mov	r3, r1
 8002264:	f04f 0000 	mov.w	r0, #0
 8002268:	4910      	ldr	r1, [pc, #64]	; (80022ac <getGasConcentration+0x60>)
 800226a:	f7fe f80d 	bl	8000288 <__aeabi_dsub>
 800226e:	4602      	mov	r2, r0
 8002270:	460b      	mov	r3, r1
 8002272:	4614      	mov	r4, r2
 8002274:	461d      	mov	r5, r3
 8002276:	6878      	ldr	r0, [r7, #4]
 8002278:	f7fe f966 	bl	8000548 <__aeabi_f2d>
 800227c:	4602      	mov	r2, r0
 800227e:	460b      	mov	r3, r1
 8002280:	4620      	mov	r0, r4
 8002282:	4629      	mov	r1, r5
 8002284:	f7fe fae2 	bl	800084c <__aeabi_ddiv>
 8002288:	4602      	mov	r2, r0
 800228a:	460b      	mov	r3, r1
 800228c:	4610      	mov	r0, r2
 800228e:	4619      	mov	r1, r3
 8002290:	f7fe fbc4 	bl	8000a1c <__aeabi_d2f>
 8002294:	4603      	mov	r3, r0
 8002296:	4a06      	ldr	r2, [pc, #24]	; (80022b0 <getGasConcentration+0x64>)
 8002298:	6013      	str	r3, [r2, #0]
  return RSdivRL;
 800229a:	4b05      	ldr	r3, [pc, #20]	; (80022b0 <getGasConcentration+0x64>)
 800229c:	681b      	ldr	r3, [r3, #0]
 800229e:	ee07 3a90 	vmov	s15, r3
}
 80022a2:	eeb0 0a67 	vmov.f32	s0, s15
 80022a6:	3708      	adds	r7, #8
 80022a8:	46bd      	mov	sp, r7
 80022aa:	bdb0      	pop	{r4, r5, r7, pc}
 80022ac:	40140000 	.word	0x40140000
 80022b0:	20000348 	.word	0x20000348

080022b4 <TIM4_PWMConfig>:

void TIM4_PWMConfig(void)
{
 80022b4:	b580      	push	{r7, lr}
 80022b6:	af00      	add	r7, sp, #0
   /*Starts the TIM4 Output Compare channel 4 signal generation*/
   HAL_TIM_OC_Start(&htim4, TIM_CHANNEL_4);
 80022b8:	210c      	movs	r1, #12
 80022ba:	480f      	ldr	r0, [pc, #60]	; (80022f8 <TIM4_PWMConfig+0x44>)
 80022bc:	f005 ff26 	bl	800810c <HAL_TIM_OC_Start>

   /* Disable the TIM Capture/Compare 4 interrupt */
   __HAL_TIM_DISABLE_IT(&htim4, TIM_IT_CC4);
 80022c0:	4b0d      	ldr	r3, [pc, #52]	; (80022f8 <TIM4_PWMConfig+0x44>)
 80022c2:	681b      	ldr	r3, [r3, #0]
 80022c4:	68da      	ldr	r2, [r3, #12]
 80022c6:	4b0c      	ldr	r3, [pc, #48]	; (80022f8 <TIM4_PWMConfig+0x44>)
 80022c8:	681b      	ldr	r3, [r3, #0]
 80022ca:	f022 0210 	bic.w	r2, r2, #16
 80022ce:	60da      	str	r2, [r3, #12]

   /* Disable the TIM Update interrupt */
   __HAL_TIM_DISABLE_IT(&htim4, TIM_IT_UPDATE);
 80022d0:	4b09      	ldr	r3, [pc, #36]	; (80022f8 <TIM4_PWMConfig+0x44>)
 80022d2:	681b      	ldr	r3, [r3, #0]
 80022d4:	68da      	ldr	r2, [r3, #12]
 80022d6:	4b08      	ldr	r3, [pc, #32]	; (80022f8 <TIM4_PWMConfig+0x44>)
 80022d8:	681b      	ldr	r3, [r3, #0]
 80022da:	f022 0201 	bic.w	r2, r2, #1
 80022de:	60da      	str	r2, [r3, #12]

   /*Clear Capture compare 4 event */
   __HAL_TIM_CLEAR_FLAG(&htim4, TIM_FLAG_CC4);
 80022e0:	4b05      	ldr	r3, [pc, #20]	; (80022f8 <TIM4_PWMConfig+0x44>)
 80022e2:	681b      	ldr	r3, [r3, #0]
 80022e4:	f06f 0210 	mvn.w	r2, #16
 80022e8:	611a      	str	r2, [r3, #16]

   /*Clear TIM4 Update event */
   __HAL_TIM_CLEAR_FLAG(&htim4, TIM_FLAG_UPDATE);
 80022ea:	4b03      	ldr	r3, [pc, #12]	; (80022f8 <TIM4_PWMConfig+0x44>)
 80022ec:	681b      	ldr	r3, [r3, #0]
 80022ee:	f06f 0201 	mvn.w	r2, #1
 80022f2:	611a      	str	r2, [r3, #16]

}
 80022f4:	bf00      	nop
 80022f6:	bd80      	pop	{r7, pc}
 80022f8:	200002f4 	.word	0x200002f4

080022fc <ADC1_InitMore>:

void ADC1_InitMore(void)
{
 80022fc:	b580      	push	{r7, lr}
 80022fe:	af00      	add	r7, sp, #0
  /*## Configuration of ADC interruptions ####################################*/
  /* Enable interruption ADC group regular overrun */
  LL_ADC_EnableIT_OVR(ADC1);
 8002300:	480c      	ldr	r0, [pc, #48]	; (8002334 <ADC1_InitMore+0x38>)
 8002302:	f7ff fc7e 	bl	8001c02 <LL_ADC_EnableIT_OVR>
  /*       However, in order to be compliant with other STM32 series          */
  /*       and to show the best practice usages, ADC state is checked.        */
  /*       Software can be optimized by removing some of these checks, if     */
  /*       they are not relevant considering previous settings and actions    */
  /*       in user application.                                               */
  if (LL_ADC_IsEnabled(ADC1) == 0)
 8002306:	480b      	ldr	r0, [pc, #44]	; (8002334 <ADC1_InitMore+0x38>)
 8002308:	f7ff fc57 	bl	8001bba <LL_ADC_IsEnabled>
 800230c:	4603      	mov	r3, r0
 800230e:	2b00      	cmp	r3, #0
 8002310:	d102      	bne.n	8002318 <ADC1_InitMore+0x1c>
  {
    /* Enable ADC */
    LL_ADC_Enable(ADC1);
 8002312:	4808      	ldr	r0, [pc, #32]	; (8002334 <ADC1_InitMore+0x38>)
 8002314:	f7ff fc41 	bl	8001b9a <LL_ADC_Enable>
  /*       However, in order to be compliant with other STM32 series          */
  /*       and to show the best practice usages, ADC state is checked.        */
  /*       Software can be optimized by removing some of these checks, if     */
  /*       they are not relevant considering previous settings and actions    */
  /*       in user application.                                               */
  if (LL_ADC_IsEnabled(ADC1) == 1)
 8002318:	4806      	ldr	r0, [pc, #24]	; (8002334 <ADC1_InitMore+0x38>)
 800231a:	f7ff fc4e 	bl	8001bba <LL_ADC_IsEnabled>
 800231e:	4603      	mov	r3, r0
 8002320:	2b01      	cmp	r3, #1
 8002322:	d104      	bne.n	800232e <ADC1_InitMore+0x32>
  {
    LL_ADC_REG_StartConversionExtTrig(ADC1, LL_ADC_REG_TRIG_EXT_RISING);
 8002324:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
 8002328:	4802      	ldr	r0, [pc, #8]	; (8002334 <ADC1_InitMore+0x38>)
 800232a:	f7ff fc59 	bl	8001be0 <LL_ADC_REG_StartConversionExtTrig>
  }
}
 800232e:	bf00      	nop
 8002330:	bd80      	pop	{r7, pc}
 8002332:	bf00      	nop
 8002334:	40012000 	.word	0x40012000

08002338 <ADC1_DMA2_InitMore>:

void ADC1_DMA2_InitMore(void)
{
 8002338:	b580      	push	{r7, lr}
 800233a:	b082      	sub	sp, #8
 800233c:	af02      	add	r7, sp, #8
  /* Configure NVIC to disable DMA interruptions */
  //NVIC_DisableIRQ(DMA2_Stream0_IRQn);

  //LL_DMA_ClearFlag_GI1(DMA2);
  LL_DMA_ClearFlag_HT0(DMA2);
 800233e:	481e      	ldr	r0, [pc, #120]	; (80023b8 <ADC1_DMA2_InitMore+0x80>)
 8002340:	f7ff fe60 	bl	8002004 <LL_DMA_ClearFlag_HT0>
  LL_DMA_ClearFlag_TE0(DMA2);
 8002344:	481c      	ldr	r0, [pc, #112]	; (80023b8 <ADC1_DMA2_InitMore+0x80>)
 8002346:	f7ff fe77 	bl	8002038 <LL_DMA_ClearFlag_TE0>
  LL_DMA_ClearFlag_TC0(DMA2);
 800234a:	481b      	ldr	r0, [pc, #108]	; (80023b8 <ADC1_DMA2_InitMore+0x80>)
 800234c:	f7ff fe67 	bl	800201e <LL_DMA_ClearFlag_TC0>
  LL_DMA_ClearFlag_DME0(DMA2);
 8002350:	4819      	ldr	r0, [pc, #100]	; (80023b8 <ADC1_DMA2_InitMore+0x80>)
 8002352:	f7ff fe7e 	bl	8002052 <LL_DMA_ClearFlag_DME0>
  LL_DMA_ClearFlag_FE0(DMA2);
 8002356:	4818      	ldr	r0, [pc, #96]	; (80023b8 <ADC1_DMA2_InitMore+0x80>)
 8002358:	f7ff fe88 	bl	800206c <LL_DMA_ClearFlag_FE0>
  LL_DMA_ConfigAddresses(DMA2, LL_DMA_STREAM_0,
 800235c:	2100      	movs	r1, #0
 800235e:	4817      	ldr	r0, [pc, #92]	; (80023bc <ADC1_DMA2_InitMore+0x84>)
 8002360:	f7ff fb5d 	bl	8001a1e <LL_ADC_DMA_GetRegAddr>
 8002364:	4602      	mov	r2, r0
 8002366:	4916      	ldr	r1, [pc, #88]	; (80023c0 <ADC1_DMA2_InitMore+0x88>)
 8002368:	2300      	movs	r3, #0
 800236a:	9300      	str	r3, [sp, #0]
 800236c:	460b      	mov	r3, r1
 800236e:	2100      	movs	r1, #0
 8002370:	4811      	ldr	r0, [pc, #68]	; (80023b8 <ADC1_DMA2_InitMore+0x80>)
 8002372:	f7ff fe0b 	bl	8001f8c <LL_DMA_ConfigAddresses>
                         LL_ADC_DMA_GetRegAddr(ADC1, LL_ADC_DMA_REG_REGULAR_DATA),
                         (uint32_t)&adc1.in0,
                         LL_DMA_DIRECTION_PERIPH_TO_MEMORY);

  LL_DMA_SetDataLength(DMA2, LL_DMA_STREAM_0, 1);
 8002376:	2201      	movs	r2, #1
 8002378:	2100      	movs	r1, #0
 800237a:	480f      	ldr	r0, [pc, #60]	; (80023b8 <ADC1_DMA2_InitMore+0x80>)
 800237c:	f7ff fd9e 	bl	8001ebc <LL_DMA_SetDataLength>

  /* Enable/Disable DMA transfer complete/error interrupts */
  LL_DMA_DisableIT_HT(DMA2, LL_DMA_STREAM_0);
 8002380:	2100      	movs	r1, #0
 8002382:	480d      	ldr	r0, [pc, #52]	; (80023b8 <ADC1_DMA2_InitMore+0x80>)
 8002384:	f7ff fec0 	bl	8002108 <LL_DMA_DisableIT_HT>

  /* Enable DMA transfer interruption: transfer error */
  LL_DMA_EnableIT_TE(DMA2, LL_DMA_CHANNEL_0);
 8002388:	2100      	movs	r1, #0
 800238a:	480b      	ldr	r0, [pc, #44]	; (80023b8 <ADC1_DMA2_InitMore+0x80>)
 800238c:	f7ff fe7c 	bl	8002088 <LL_DMA_EnableIT_TE>

  /* Enable DMA transfer interruption: transfer complete */
  LL_DMA_EnableIT_TC(DMA2, LL_DMA_CHANNEL_0);
 8002390:	2100      	movs	r1, #0
 8002392:	4809      	ldr	r0, [pc, #36]	; (80023b8 <ADC1_DMA2_InitMore+0x80>)
 8002394:	f7ff fe98 	bl	80020c8 <LL_DMA_EnableIT_TC>

  LL_DMA_DisableIT_DME(DMA2, LL_DMA_STREAM_0);
 8002398:	2100      	movs	r1, #0
 800239a:	4807      	ldr	r0, [pc, #28]	; (80023b8 <ADC1_DMA2_InitMore+0x80>)
 800239c:	f7ff fed4 	bl	8002148 <LL_DMA_DisableIT_DME>
  LL_DMA_DisableIT_FE(DMA2, LL_DMA_STREAM_0);
 80023a0:	2100      	movs	r1, #0
 80023a2:	4805      	ldr	r0, [pc, #20]	; (80023b8 <ADC1_DMA2_InitMore+0x80>)
 80023a4:	f7ff fef0 	bl	8002188 <LL_DMA_DisableIT_FE>

  /*## Activation of DMA #####################################################*/
  /* Enable the DMA transfer */
  LL_DMA_EnableStream(DMA2, LL_DMA_STREAM_0);
 80023a8:	2100      	movs	r1, #0
 80023aa:	4803      	ldr	r0, [pc, #12]	; (80023b8 <ADC1_DMA2_InitMore+0x80>)
 80023ac:	f7ff fc6a 	bl	8001c84 <LL_DMA_EnableStream>
}
 80023b0:	bf00      	nop
 80023b2:	46bd      	mov	sp, r7
 80023b4:	bd80      	pop	{r7, pc}
 80023b6:	bf00      	nop
 80023b8:	40026400 	.word	0x40026400
 80023bc:	40012000 	.word	0x40012000
 80023c0:	20000350 	.word	0x20000350

080023c4 <AdcDmaTransferComplete_Callback>:
  * @note   This function is executed when the transfer complete interrupt
  *         is generated
  * @retval None
  */
void AdcDmaTransferComplete_Callback()
{
 80023c4:	b580      	push	{r7, lr}
 80023c6:	af00      	add	r7, sp, #0
  static v_u32 sum_adc1_in0 = 0, sum_adc1_in1 = 0, i = 0;

  sum_adc1_in0 += adc1.in0;
 80023c8:	4b14      	ldr	r3, [pc, #80]	; (800241c <AdcDmaTransferComplete_Callback+0x58>)
 80023ca:	881b      	ldrh	r3, [r3, #0]
 80023cc:	461a      	mov	r2, r3
 80023ce:	4b14      	ldr	r3, [pc, #80]	; (8002420 <AdcDmaTransferComplete_Callback+0x5c>)
 80023d0:	681b      	ldr	r3, [r3, #0]
 80023d2:	4413      	add	r3, r2
 80023d4:	4a12      	ldr	r2, [pc, #72]	; (8002420 <AdcDmaTransferComplete_Callback+0x5c>)
 80023d6:	6013      	str	r3, [r2, #0]
  //sum_adc1_in1 += adc1.in1;
  i += 1;
 80023d8:	4b12      	ldr	r3, [pc, #72]	; (8002424 <AdcDmaTransferComplete_Callback+0x60>)
 80023da:	681b      	ldr	r3, [r3, #0]
 80023dc:	3301      	adds	r3, #1
 80023de:	4a11      	ldr	r2, [pc, #68]	; (8002424 <AdcDmaTransferComplete_Callback+0x60>)
 80023e0:	6013      	str	r3, [r2, #0]
  if(i >= 250)
 80023e2:	4b10      	ldr	r3, [pc, #64]	; (8002424 <AdcDmaTransferComplete_Callback+0x60>)
 80023e4:	681b      	ldr	r3, [r3, #0]
 80023e6:	2bf9      	cmp	r3, #249	; 0xf9
 80023e8:	d916      	bls.n	8002418 <AdcDmaTransferComplete_Callback+0x54>
  {
    i = 0;
 80023ea:	4b0e      	ldr	r3, [pc, #56]	; (8002424 <AdcDmaTransferComplete_Callback+0x60>)
 80023ec:	2200      	movs	r2, #0
 80023ee:	601a      	str	r2, [r3, #0]
    average_adc1.in0 = (u16)(sum_adc1_in0 / 250);
 80023f0:	4b0b      	ldr	r3, [pc, #44]	; (8002420 <AdcDmaTransferComplete_Callback+0x5c>)
 80023f2:	681b      	ldr	r3, [r3, #0]
 80023f4:	4a0c      	ldr	r2, [pc, #48]	; (8002428 <AdcDmaTransferComplete_Callback+0x64>)
 80023f6:	fba2 2303 	umull	r2, r3, r2, r3
 80023fa:	091b      	lsrs	r3, r3, #4
 80023fc:	b29a      	uxth	r2, r3
 80023fe:	4b0b      	ldr	r3, [pc, #44]	; (800242c <AdcDmaTransferComplete_Callback+0x68>)
 8002400:	801a      	strh	r2, [r3, #0]
    //average_adc1.in1 = (u16)(sum_adc1_in1 / 250);
    sum_adc1_in0 = 0;
 8002402:	4b07      	ldr	r3, [pc, #28]	; (8002420 <AdcDmaTransferComplete_Callback+0x5c>)
 8002404:	2200      	movs	r2, #0
 8002406:	601a      	str	r2, [r3, #0]
    //sum_adc1_in1 = 0;
    HAL_GPIO_TogglePin(LED_BOARD_GPIO_Port, LED_BOARD_Pin);
 8002408:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800240c:	4808      	ldr	r0, [pc, #32]	; (8002430 <AdcDmaTransferComplete_Callback+0x6c>)
 800240e:	f002 fc94 	bl	8004d3a <HAL_GPIO_TogglePin>
    adc_complete = 1;
 8002412:	4b08      	ldr	r3, [pc, #32]	; (8002434 <AdcDmaTransferComplete_Callback+0x70>)
 8002414:	2201      	movs	r2, #1
 8002416:	601a      	str	r2, [r3, #0]
  }
}
 8002418:	bf00      	nop
 800241a:	bd80      	pop	{r7, pc}
 800241c:	20000350 	.word	0x20000350
 8002420:	20000364 	.word	0x20000364
 8002424:	20000368 	.word	0x20000368
 8002428:	10624dd3 	.word	0x10624dd3
 800242c:	20000354 	.word	0x20000354
 8002430:	40020800 	.word	0x40020800
 8002434:	20000358 	.word	0x20000358

08002438 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8002438:	b580      	push	{r7, lr}
 800243a:	b084      	sub	sp, #16
 800243c:	af02      	add	r7, sp, #8
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 800243e:	f001 fd13 	bl	8003e68 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8002442:	f000 f869 	bl	8002518 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8002446:	f000 fb59 	bl	8002afc <MX_GPIO_Init>
  MX_DMA_Init();
 800244a:	f000 fb19 	bl	8002a80 <MX_DMA_Init>
  MX_SPI2_Init();
 800244e:	f000 f9c3 	bl	80027d8 <MX_SPI2_Init>
  MX_CRC_Init();
 8002452:	f000 f97f 	bl	8002754 <MX_CRC_Init>
  MX_TIM2_Init();
 8002456:	f000 f9f5 	bl	8002844 <MX_TIM2_Init>
  MX_TIM3_Init();
 800245a:	f000 fa4b 	bl	80028f4 <MX_TIM3_Init>
  MX_ADC1_Init();
 800245e:	f000 f8c3 	bl	80025e8 <MX_ADC1_Init>
  MX_I2C1_Init();
 8002462:	f000 f98b 	bl	800277c <MX_I2C1_Init>
  MX_TIM4_Init();
 8002466:	f000 fa93 	bl	8002990 <MX_TIM4_Init>
  MX_TouchGFX_Init();
 800246a:	f007 f88d 	bl	8009588 <MX_TouchGFX_Init>
  /* USER CODE BEGIN 2 */
  Displ_Init(Displ_Orientat_0);			// initialize display controller - set orientation parameter as per TouchGFX setup
 800246e:	2000      	movs	r0, #0
 8002470:	f001 f8d6 	bl	8003620 <Displ_Init>
  Displ_BackLight('I');  					// initialize backlight
 8002474:	2049      	movs	r0, #73	; 0x49
 8002476:	f001 f977 	bl	8003768 <Displ_BackLight>
  HAL_TIM_Base_Start_IT(&TGFX_T);			// start TouchGFX tick timer
 800247a:	4821      	ldr	r0, [pc, #132]	; (8002500 <main+0xc8>)
 800247c:	f005 fde4 	bl	8008048 <HAL_TIM_Base_Start_IT>

  ADC1_DMA2_InitMore();
 8002480:	f7ff ff5a 	bl	8002338 <ADC1_DMA2_InitMore>
  ADC1_InitMore();
 8002484:	f7ff ff3a 	bl	80022fc <ADC1_InitMore>
  TIM4_PWMConfig();
 8002488:	f7ff ff14 	bl	80022b4 <TIM4_PWMConfig>
//	  	DS1307_SetYear(2023);
//	  	DS1307_SetDayOfWeek(4);
//	  	DS1307_SetHour(11);
//	  	DS1307_SetMinute(16);
//	  	DS1307_SetSecond(30);
        int ret = BMP280_Config(OSRS_16, OSRS_16, OSRS_OFF, MODE_NORMAL, T_SB_1000, IIR_16);
 800248c:	2304      	movs	r3, #4
 800248e:	9301      	str	r3, [sp, #4]
 8002490:	2305      	movs	r3, #5
 8002492:	9300      	str	r3, [sp, #0]
 8002494:	2303      	movs	r3, #3
 8002496:	2200      	movs	r2, #0
 8002498:	2105      	movs	r1, #5
 800249a:	2005      	movs	r0, #5
 800249c:	f7fe fdbe 	bl	800101c <BMP280_Config>
 80024a0:	6078      	str	r0, [r7, #4]
        HAL_Delay(500);
 80024a2:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80024a6:	f001 fd51 	bl	8003f4c <HAL_Delay>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
    if(Counter_0 >= 1000)
 80024aa:	4b16      	ldr	r3, [pc, #88]	; (8002504 <main+0xcc>)
 80024ac:	681b      	ldr	r3, [r3, #0]
 80024ae:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80024b2:	d309      	bcc.n	80024c8 <main+0x90>
    {
      Counter_0 = 0;
 80024b4:	4b13      	ldr	r3, [pc, #76]	; (8002504 <main+0xcc>)
 80024b6:	2200      	movs	r2, #0
 80024b8:	601a      	str	r2, [r3, #0]
//	  hour   = DS1307_GetHour();
//	  minute = DS1307_GetMinute();
//	  second = DS1307_GetSecond();
//	  minute = DS1307_GetMinute();
//	  hour   = DS1307_GetHour();
      Pa = BMP280_Measure();
 80024ba:	f7ff f997 	bl	80017ec <BMP280_Measure>
 80024be:	eef0 7a40 	vmov.f32	s15, s0
 80024c2:	4b11      	ldr	r3, [pc, #68]	; (8002508 <main+0xd0>)
 80024c4:	edc3 7a00 	vstr	s15, [r3]
    }
  //  HAL_Delay(500);
    if(Counter_1 >= (1000*60*5))
 80024c8:	4b10      	ldr	r3, [pc, #64]	; (800250c <main+0xd4>)
 80024ca:	681b      	ldr	r3, [r3, #0]
 80024cc:	4a10      	ldr	r2, [pc, #64]	; (8002510 <main+0xd8>)
 80024ce:	4293      	cmp	r3, r2
 80024d0:	d912      	bls.n	80024f8 <main+0xc0>
    {
        Counter_1 = 0;
 80024d2:	4b0e      	ldr	r3, [pc, #56]	; (800250c <main+0xd4>)
 80024d4:	2200      	movs	r2, #0
 80024d6:	601a      	str	r2, [r3, #0]

        T= LM75_TemperatureRead();
 80024d8:	f7ff fa0e 	bl	80018f8 <LM75_TemperatureRead>
 80024dc:	eef0 7a40 	vmov.f32	s15, s0
 80024e0:	4b0c      	ldr	r3, [pc, #48]	; (8002514 <main+0xdc>)
 80024e2:	edc3 7a00 	vstr	s15, [r3]
        getGasConcentration();
 80024e6:	f7ff feb1 	bl	800224c <getGasConcentration>
        Pa = BMP280_Measure();
 80024ea:	f7ff f97f 	bl	80017ec <BMP280_Measure>
 80024ee:	eef0 7a40 	vmov.f32	s15, s0
 80024f2:	4b05      	ldr	r3, [pc, #20]	; (8002508 <main+0xd0>)
 80024f4:	edc3 7a00 	vstr	s15, [r3]
    }
    /* USER CODE END WHILE */

  MX_TouchGFX_Process();
 80024f8:	f007 f84e 	bl	8009598 <MX_TouchGFX_Process>
    if(Counter_0 >= 1000)
 80024fc:	e7d5      	b.n	80024aa <main+0x72>
 80024fe:	bf00      	nop
 8002500:	200002ac 	.word	0x200002ac
 8002504:	2000035c 	.word	0x2000035c
 8002508:	20000440 	.word	0x20000440
 800250c:	20000360 	.word	0x20000360
 8002510:	000493df 	.word	0x000493df
 8002514:	2000033c 	.word	0x2000033c

08002518 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8002518:	b580      	push	{r7, lr}
 800251a:	b094      	sub	sp, #80	; 0x50
 800251c:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800251e:	f107 0320 	add.w	r3, r7, #32
 8002522:	2230      	movs	r2, #48	; 0x30
 8002524:	2100      	movs	r1, #0
 8002526:	4618      	mov	r0, r3
 8002528:	f029 f911 	bl	802b74e <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800252c:	f107 030c 	add.w	r3, r7, #12
 8002530:	2200      	movs	r2, #0
 8002532:	601a      	str	r2, [r3, #0]
 8002534:	605a      	str	r2, [r3, #4]
 8002536:	609a      	str	r2, [r3, #8]
 8002538:	60da      	str	r2, [r3, #12]
 800253a:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 800253c:	2300      	movs	r3, #0
 800253e:	60bb      	str	r3, [r7, #8]
 8002540:	4b27      	ldr	r3, [pc, #156]	; (80025e0 <SystemClock_Config+0xc8>)
 8002542:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002544:	4a26      	ldr	r2, [pc, #152]	; (80025e0 <SystemClock_Config+0xc8>)
 8002546:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800254a:	6413      	str	r3, [r2, #64]	; 0x40
 800254c:	4b24      	ldr	r3, [pc, #144]	; (80025e0 <SystemClock_Config+0xc8>)
 800254e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002550:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002554:	60bb      	str	r3, [r7, #8]
 8002556:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8002558:	2300      	movs	r3, #0
 800255a:	607b      	str	r3, [r7, #4]
 800255c:	4b21      	ldr	r3, [pc, #132]	; (80025e4 <SystemClock_Config+0xcc>)
 800255e:	681b      	ldr	r3, [r3, #0]
 8002560:	4a20      	ldr	r2, [pc, #128]	; (80025e4 <SystemClock_Config+0xcc>)
 8002562:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8002566:	6013      	str	r3, [r2, #0]
 8002568:	4b1e      	ldr	r3, [pc, #120]	; (80025e4 <SystemClock_Config+0xcc>)
 800256a:	681b      	ldr	r3, [r3, #0]
 800256c:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8002570:	607b      	str	r3, [r7, #4]
 8002572:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8002574:	2301      	movs	r3, #1
 8002576:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8002578:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800257c:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800257e:	2302      	movs	r3, #2
 8002580:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8002582:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8002586:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 12;
 8002588:	230c      	movs	r3, #12
 800258a:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 96;
 800258c:	2360      	movs	r3, #96	; 0x60
 800258e:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8002590:	2302      	movs	r3, #2
 8002592:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8002594:	2304      	movs	r3, #4
 8002596:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8002598:	f107 0320 	add.w	r3, r7, #32
 800259c:	4618      	mov	r0, r3
 800259e:	f004 f8a3 	bl	80066e8 <HAL_RCC_OscConfig>
 80025a2:	4603      	mov	r3, r0
 80025a4:	2b00      	cmp	r3, #0
 80025a6:	d001      	beq.n	80025ac <SystemClock_Config+0x94>
  {
    Error_Handler();
 80025a8:	f000 fb62 	bl	8002c70 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80025ac:	230f      	movs	r3, #15
 80025ae:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80025b0:	2302      	movs	r3, #2
 80025b2:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80025b4:	2300      	movs	r3, #0
 80025b6:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 80025b8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80025bc:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80025be:	2300      	movs	r3, #0
 80025c0:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 80025c2:	f107 030c 	add.w	r3, r7, #12
 80025c6:	2103      	movs	r1, #3
 80025c8:	4618      	mov	r0, r3
 80025ca:	f004 fb05 	bl	8006bd8 <HAL_RCC_ClockConfig>
 80025ce:	4603      	mov	r3, r0
 80025d0:	2b00      	cmp	r3, #0
 80025d2:	d001      	beq.n	80025d8 <SystemClock_Config+0xc0>
  {
    Error_Handler();
 80025d4:	f000 fb4c 	bl	8002c70 <Error_Handler>
  }
}
 80025d8:	bf00      	nop
 80025da:	3750      	adds	r7, #80	; 0x50
 80025dc:	46bd      	mov	sp, r7
 80025de:	bd80      	pop	{r7, pc}
 80025e0:	40023800 	.word	0x40023800
 80025e4:	40007000 	.word	0x40007000

080025e8 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 80025e8:	b580      	push	{r7, lr}
 80025ea:	b090      	sub	sp, #64	; 0x40
 80025ec:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  LL_ADC_InitTypeDef ADC_InitStruct = {0};
 80025ee:	f107 0334 	add.w	r3, r7, #52	; 0x34
 80025f2:	2200      	movs	r2, #0
 80025f4:	601a      	str	r2, [r3, #0]
 80025f6:	605a      	str	r2, [r3, #4]
 80025f8:	609a      	str	r2, [r3, #8]
  LL_ADC_REG_InitTypeDef ADC_REG_InitStruct = {0};
 80025fa:	f107 0320 	add.w	r3, r7, #32
 80025fe:	2200      	movs	r2, #0
 8002600:	601a      	str	r2, [r3, #0]
 8002602:	605a      	str	r2, [r3, #4]
 8002604:	609a      	str	r2, [r3, #8]
 8002606:	60da      	str	r2, [r3, #12]
 8002608:	611a      	str	r2, [r3, #16]
  LL_ADC_CommonInitTypeDef ADC_CommonInitStruct = {0};
 800260a:	2300      	movs	r3, #0
 800260c:	61fb      	str	r3, [r7, #28]

  LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
 800260e:	1d3b      	adds	r3, r7, #4
 8002610:	2200      	movs	r2, #0
 8002612:	601a      	str	r2, [r3, #0]
 8002614:	605a      	str	r2, [r3, #4]
 8002616:	609a      	str	r2, [r3, #8]
 8002618:	60da      	str	r2, [r3, #12]
 800261a:	611a      	str	r2, [r3, #16]
 800261c:	615a      	str	r2, [r3, #20]

  /* Peripheral clock enable */
  LL_APB2_GRP1_EnableClock(LL_APB2_GRP1_PERIPH_ADC1);
 800261e:	f44f 7080 	mov.w	r0, #256	; 0x100
 8002622:	f7ff fb17 	bl	8001c54 <LL_APB2_GRP1_EnableClock>

  LL_AHB1_GRP1_EnableClock(LL_AHB1_GRP1_PERIPH_GPIOA);
 8002626:	2001      	movs	r0, #1
 8002628:	f7ff fafc 	bl	8001c24 <LL_AHB1_GRP1_EnableClock>
  /**ADC1 GPIO Configuration
  PA0-WKUP   ------> ADC1_IN0
  */
  GPIO_InitStruct.Pin = LL_GPIO_PIN_0;
 800262c:	2301      	movs	r3, #1
 800262e:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 8002630:	2303      	movs	r3, #3
 8002632:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 8002634:	2300      	movs	r3, #0
 8002636:	617b      	str	r3, [r7, #20]
  LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002638:	1d3b      	adds	r3, r7, #4
 800263a:	4619      	mov	r1, r3
 800263c:	4841      	ldr	r0, [pc, #260]	; (8002744 <MX_ADC1_Init+0x15c>)
 800263e:	f006 ff22 	bl	8009486 <LL_GPIO_Init>

  /* ADC1 DMA Init */

  /* ADC1 Init */
  LL_DMA_SetChannelSelection(DMA2, LL_DMA_STREAM_0, LL_DMA_CHANNEL_0);
 8002642:	2200      	movs	r2, #0
 8002644:	2100      	movs	r1, #0
 8002646:	4840      	ldr	r0, [pc, #256]	; (8002748 <MX_ADC1_Init+0x160>)
 8002648:	f7ff fc5c 	bl	8001f04 <LL_DMA_SetChannelSelection>

  LL_DMA_SetDataTransferDirection(DMA2, LL_DMA_STREAM_0, LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
 800264c:	2200      	movs	r2, #0
 800264e:	2100      	movs	r1, #0
 8002650:	483d      	ldr	r0, [pc, #244]	; (8002748 <MX_ADC1_Init+0x160>)
 8002652:	f7ff fb37 	bl	8001cc4 <LL_DMA_SetDataTransferDirection>

  LL_DMA_SetStreamPriorityLevel(DMA2, LL_DMA_STREAM_0, LL_DMA_PRIORITY_LOW);
 8002656:	2200      	movs	r2, #0
 8002658:	2100      	movs	r1, #0
 800265a:	483b      	ldr	r0, [pc, #236]	; (8002748 <MX_ADC1_Init+0x160>)
 800265c:	f7ff fc0a 	bl	8001e74 <LL_DMA_SetStreamPriorityLevel>

  LL_DMA_SetMode(DMA2, LL_DMA_STREAM_0, LL_DMA_MODE_CIRCULAR);
 8002660:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002664:	2100      	movs	r1, #0
 8002666:	4838      	ldr	r0, [pc, #224]	; (8002748 <MX_ADC1_Init+0x160>)
 8002668:	f7ff fb50 	bl	8001d0c <LL_DMA_SetMode>

  LL_DMA_SetPeriphIncMode(DMA2, LL_DMA_STREAM_0, LL_DMA_PERIPH_NOINCREMENT);
 800266c:	2200      	movs	r2, #0
 800266e:	2100      	movs	r1, #0
 8002670:	4835      	ldr	r0, [pc, #212]	; (8002748 <MX_ADC1_Init+0x160>)
 8002672:	f7ff fb6f 	bl	8001d54 <LL_DMA_SetPeriphIncMode>

  LL_DMA_SetMemoryIncMode(DMA2, LL_DMA_STREAM_0, LL_DMA_MEMORY_NOINCREMENT);
 8002676:	2200      	movs	r2, #0
 8002678:	2100      	movs	r1, #0
 800267a:	4833      	ldr	r0, [pc, #204]	; (8002748 <MX_ADC1_Init+0x160>)
 800267c:	f7ff fb8e 	bl	8001d9c <LL_DMA_SetMemoryIncMode>

  LL_DMA_SetPeriphSize(DMA2, LL_DMA_STREAM_0, LL_DMA_PDATAALIGN_HALFWORD);
 8002680:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8002684:	2100      	movs	r1, #0
 8002686:	4830      	ldr	r0, [pc, #192]	; (8002748 <MX_ADC1_Init+0x160>)
 8002688:	f7ff fbac 	bl	8001de4 <LL_DMA_SetPeriphSize>

  LL_DMA_SetMemorySize(DMA2, LL_DMA_STREAM_0, LL_DMA_MDATAALIGN_HALFWORD);
 800268c:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8002690:	2100      	movs	r1, #0
 8002692:	482d      	ldr	r0, [pc, #180]	; (8002748 <MX_ADC1_Init+0x160>)
 8002694:	f7ff fbca 	bl	8001e2c <LL_DMA_SetMemorySize>

  LL_DMA_DisableFifoMode(DMA2, LL_DMA_STREAM_0);
 8002698:	2100      	movs	r1, #0
 800269a:	482b      	ldr	r0, [pc, #172]	; (8002748 <MX_ADC1_Init+0x160>)
 800269c:	f7ff fc56 	bl	8001f4c <LL_DMA_DisableFifoMode>

  /* ADC1 interrupt Init */
  NVIC_SetPriority(ADC_IRQn, NVIC_EncodePriority(NVIC_GetPriorityGrouping(),3, 0));
 80026a0:	f7ff f934 	bl	800190c <__NVIC_GetPriorityGrouping>
 80026a4:	4603      	mov	r3, r0
 80026a6:	2200      	movs	r2, #0
 80026a8:	2103      	movs	r1, #3
 80026aa:	4618      	mov	r0, r3
 80026ac:	f7ff f984 	bl	80019b8 <NVIC_EncodePriority>
 80026b0:	4603      	mov	r3, r0
 80026b2:	4619      	mov	r1, r3
 80026b4:	2012      	movs	r0, #18
 80026b6:	f7ff f955 	bl	8001964 <__NVIC_SetPriority>
  NVIC_EnableIRQ(ADC_IRQn);
 80026ba:	2012      	movs	r0, #18
 80026bc:	f7ff f934 	bl	8001928 <__NVIC_EnableIRQ>

  /* USER CODE END ADC1_Init 1 */

  /** Common config
  */
  ADC_InitStruct.Resolution = LL_ADC_RESOLUTION_12B;
 80026c0:	2300      	movs	r3, #0
 80026c2:	637b      	str	r3, [r7, #52]	; 0x34
  ADC_InitStruct.DataAlignment = LL_ADC_DATA_ALIGN_RIGHT;
 80026c4:	2300      	movs	r3, #0
 80026c6:	63bb      	str	r3, [r7, #56]	; 0x38
  ADC_InitStruct.SequencersScanMode = LL_ADC_SEQ_SCAN_DISABLE;
 80026c8:	2300      	movs	r3, #0
 80026ca:	63fb      	str	r3, [r7, #60]	; 0x3c
  LL_ADC_Init(ADC1, &ADC_InitStruct);
 80026cc:	f107 0334 	add.w	r3, r7, #52	; 0x34
 80026d0:	4619      	mov	r1, r3
 80026d2:	481e      	ldr	r0, [pc, #120]	; (800274c <MX_ADC1_Init+0x164>)
 80026d4:	f006 fd1e 	bl	8009114 <LL_ADC_Init>
  ADC_REG_InitStruct.TriggerSource = LL_ADC_REG_TRIG_EXT_TIM4_CH4;
 80026d8:	f04f 53c8 	mov.w	r3, #419430400	; 0x19000000
 80026dc:	623b      	str	r3, [r7, #32]
  ADC_REG_InitStruct.SequencerLength = LL_ADC_REG_SEQ_SCAN_DISABLE;
 80026de:	2300      	movs	r3, #0
 80026e0:	627b      	str	r3, [r7, #36]	; 0x24
  ADC_REG_InitStruct.SequencerDiscont = LL_ADC_REG_SEQ_DISCONT_DISABLE;
 80026e2:	2300      	movs	r3, #0
 80026e4:	62bb      	str	r3, [r7, #40]	; 0x28
  ADC_REG_InitStruct.ContinuousMode = LL_ADC_REG_CONV_SINGLE;
 80026e6:	2300      	movs	r3, #0
 80026e8:	62fb      	str	r3, [r7, #44]	; 0x2c
  ADC_REG_InitStruct.DMATransfer = LL_ADC_REG_DMA_TRANSFER_UNLIMITED;
 80026ea:	f44f 7340 	mov.w	r3, #768	; 0x300
 80026ee:	633b      	str	r3, [r7, #48]	; 0x30
  LL_ADC_REG_Init(ADC1, &ADC_REG_InitStruct);
 80026f0:	f107 0320 	add.w	r3, r7, #32
 80026f4:	4619      	mov	r1, r3
 80026f6:	4815      	ldr	r0, [pc, #84]	; (800274c <MX_ADC1_Init+0x164>)
 80026f8:	f006 fd38 	bl	800916c <LL_ADC_REG_Init>
  LL_ADC_REG_SetFlagEndOfConversion(ADC1, LL_ADC_REG_FLAG_EOC_SEQUENCE_CONV);
 80026fc:	2100      	movs	r1, #0
 80026fe:	4813      	ldr	r0, [pc, #76]	; (800274c <MX_ADC1_Init+0x164>)
 8002700:	f7ff f9d7 	bl	8001ab2 <LL_ADC_REG_SetFlagEndOfConversion>
  ADC_CommonInitStruct.CommonClock = LL_ADC_CLOCK_SYNC_PCLK_DIV4;
 8002704:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8002708:	61fb      	str	r3, [r7, #28]
  LL_ADC_CommonInit(__LL_ADC_COMMON_INSTANCE(ADC1), &ADC_CommonInitStruct);
 800270a:	f107 031c 	add.w	r3, r7, #28
 800270e:	4619      	mov	r1, r3
 8002710:	480f      	ldr	r0, [pc, #60]	; (8002750 <MX_ADC1_Init+0x168>)
 8002712:	f006 fce1 	bl	80090d8 <LL_ADC_CommonInit>
  LL_ADC_REG_StartConversionExtTrig(ADC1, LL_ADC_REG_TRIG_EXT_RISING);
 8002716:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
 800271a:	480c      	ldr	r0, [pc, #48]	; (800274c <MX_ADC1_Init+0x164>)
 800271c:	f7ff fa60 	bl	8001be0 <LL_ADC_REG_StartConversionExtTrig>

  /** Configure Regular Channel
  */
  LL_ADC_REG_SetSequencerRanks(ADC1, LL_ADC_REG_RANK_1, LL_ADC_CHANNEL_0);
 8002720:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8002724:	f44f 7100 	mov.w	r1, #512	; 0x200
 8002728:	4808      	ldr	r0, [pc, #32]	; (800274c <MX_ADC1_Init+0x164>)
 800272a:	f7ff f985 	bl	8001a38 <LL_ADC_REG_SetSequencerRanks>
  LL_ADC_SetChannelSamplingTime(ADC1, LL_ADC_CHANNEL_0, LL_ADC_SAMPLINGTIME_3CYCLES);
 800272e:	2200      	movs	r2, #0
 8002730:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 8002734:	4805      	ldr	r0, [pc, #20]	; (800274c <MX_ADC1_Init+0x164>)
 8002736:	f7ff f9cf 	bl	8001ad8 <LL_ADC_SetChannelSamplingTime>
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 800273a:	bf00      	nop
 800273c:	3740      	adds	r7, #64	; 0x40
 800273e:	46bd      	mov	sp, r7
 8002740:	bd80      	pop	{r7, pc}
 8002742:	bf00      	nop
 8002744:	40020000 	.word	0x40020000
 8002748:	40026400 	.word	0x40026400
 800274c:	40012000 	.word	0x40012000
 8002750:	40012300 	.word	0x40012300

08002754 <MX_CRC_Init>:
  * @brief CRC Initialization Function
  * @param None
  * @retval None
  */
static void MX_CRC_Init(void)
{
 8002754:	b580      	push	{r7, lr}
 8002756:	af00      	add	r7, sp, #0
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 8002758:	4b06      	ldr	r3, [pc, #24]	; (8002774 <MX_CRC_Init+0x20>)
 800275a:	4a07      	ldr	r2, [pc, #28]	; (8002778 <MX_CRC_Init+0x24>)
 800275c:	601a      	str	r2, [r3, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 800275e:	4805      	ldr	r0, [pc, #20]	; (8002774 <MX_CRC_Init+0x20>)
 8002760:	f001 fd87 	bl	8004272 <HAL_CRC_Init>
 8002764:	4603      	mov	r3, r0
 8002766:	2b00      	cmp	r3, #0
 8002768:	d001      	beq.n	800276e <MX_CRC_Init+0x1a>
  {
    Error_Handler();
 800276a:	f000 fa81 	bl	8002c70 <Error_Handler>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 800276e:	bf00      	nop
 8002770:	bd80      	pop	{r7, pc}
 8002772:	bf00      	nop
 8002774:	20000150 	.word	0x20000150
 8002778:	40023000 	.word	0x40023000

0800277c <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 800277c:	b580      	push	{r7, lr}
 800277e:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8002780:	4b12      	ldr	r3, [pc, #72]	; (80027cc <MX_I2C1_Init+0x50>)
 8002782:	4a13      	ldr	r2, [pc, #76]	; (80027d0 <MX_I2C1_Init+0x54>)
 8002784:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 100000;
 8002786:	4b11      	ldr	r3, [pc, #68]	; (80027cc <MX_I2C1_Init+0x50>)
 8002788:	4a12      	ldr	r2, [pc, #72]	; (80027d4 <MX_I2C1_Init+0x58>)
 800278a:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 800278c:	4b0f      	ldr	r3, [pc, #60]	; (80027cc <MX_I2C1_Init+0x50>)
 800278e:	2200      	movs	r2, #0
 8002790:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 8002792:	4b0e      	ldr	r3, [pc, #56]	; (80027cc <MX_I2C1_Init+0x50>)
 8002794:	2200      	movs	r2, #0
 8002796:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8002798:	4b0c      	ldr	r3, [pc, #48]	; (80027cc <MX_I2C1_Init+0x50>)
 800279a:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 800279e:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80027a0:	4b0a      	ldr	r3, [pc, #40]	; (80027cc <MX_I2C1_Init+0x50>)
 80027a2:	2200      	movs	r2, #0
 80027a4:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 80027a6:	4b09      	ldr	r3, [pc, #36]	; (80027cc <MX_I2C1_Init+0x50>)
 80027a8:	2200      	movs	r2, #0
 80027aa:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80027ac:	4b07      	ldr	r3, [pc, #28]	; (80027cc <MX_I2C1_Init+0x50>)
 80027ae:	2200      	movs	r2, #0
 80027b0:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80027b2:	4b06      	ldr	r3, [pc, #24]	; (80027cc <MX_I2C1_Init+0x50>)
 80027b4:	2200      	movs	r2, #0
 80027b6:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 80027b8:	4804      	ldr	r0, [pc, #16]	; (80027cc <MX_I2C1_Init+0x50>)
 80027ba:	f002 faf1 	bl	8004da0 <HAL_I2C_Init>
 80027be:	4603      	mov	r3, r0
 80027c0:	2b00      	cmp	r3, #0
 80027c2:	d001      	beq.n	80027c8 <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 80027c4:	f000 fa54 	bl	8002c70 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 80027c8:	bf00      	nop
 80027ca:	bd80      	pop	{r7, pc}
 80027cc:	20000158 	.word	0x20000158
 80027d0:	40005400 	.word	0x40005400
 80027d4:	000186a0 	.word	0x000186a0

080027d8 <MX_SPI2_Init>:
  * @brief SPI2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI2_Init(void)
{
 80027d8:	b580      	push	{r7, lr}
 80027da:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI2_Init 1 */

  /* USER CODE END SPI2_Init 1 */
  /* SPI2 parameter configuration*/
  hspi2.Instance = SPI2;
 80027dc:	4b17      	ldr	r3, [pc, #92]	; (800283c <MX_SPI2_Init+0x64>)
 80027de:	4a18      	ldr	r2, [pc, #96]	; (8002840 <MX_SPI2_Init+0x68>)
 80027e0:	601a      	str	r2, [r3, #0]
  hspi2.Init.Mode = SPI_MODE_MASTER;
 80027e2:	4b16      	ldr	r3, [pc, #88]	; (800283c <MX_SPI2_Init+0x64>)
 80027e4:	f44f 7282 	mov.w	r2, #260	; 0x104
 80027e8:	605a      	str	r2, [r3, #4]
  hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 80027ea:	4b14      	ldr	r3, [pc, #80]	; (800283c <MX_SPI2_Init+0x64>)
 80027ec:	2200      	movs	r2, #0
 80027ee:	609a      	str	r2, [r3, #8]
  hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 80027f0:	4b12      	ldr	r3, [pc, #72]	; (800283c <MX_SPI2_Init+0x64>)
 80027f2:	2200      	movs	r2, #0
 80027f4:	60da      	str	r2, [r3, #12]
  hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 80027f6:	4b11      	ldr	r3, [pc, #68]	; (800283c <MX_SPI2_Init+0x64>)
 80027f8:	2200      	movs	r2, #0
 80027fa:	611a      	str	r2, [r3, #16]
  hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 80027fc:	4b0f      	ldr	r3, [pc, #60]	; (800283c <MX_SPI2_Init+0x64>)
 80027fe:	2200      	movs	r2, #0
 8002800:	615a      	str	r2, [r3, #20]
  hspi2.Init.NSS = SPI_NSS_SOFT;
 8002802:	4b0e      	ldr	r3, [pc, #56]	; (800283c <MX_SPI2_Init+0x64>)
 8002804:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002808:	619a      	str	r2, [r3, #24]
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800280a:	4b0c      	ldr	r3, [pc, #48]	; (800283c <MX_SPI2_Init+0x64>)
 800280c:	2200      	movs	r2, #0
 800280e:	61da      	str	r2, [r3, #28]
  hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8002810:	4b0a      	ldr	r3, [pc, #40]	; (800283c <MX_SPI2_Init+0x64>)
 8002812:	2200      	movs	r2, #0
 8002814:	621a      	str	r2, [r3, #32]
  hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 8002816:	4b09      	ldr	r3, [pc, #36]	; (800283c <MX_SPI2_Init+0x64>)
 8002818:	2200      	movs	r2, #0
 800281a:	625a      	str	r2, [r3, #36]	; 0x24
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800281c:	4b07      	ldr	r3, [pc, #28]	; (800283c <MX_SPI2_Init+0x64>)
 800281e:	2200      	movs	r2, #0
 8002820:	629a      	str	r2, [r3, #40]	; 0x28
  hspi2.Init.CRCPolynomial = 10;
 8002822:	4b06      	ldr	r3, [pc, #24]	; (800283c <MX_SPI2_Init+0x64>)
 8002824:	220a      	movs	r2, #10
 8002826:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi2) != HAL_OK)
 8002828:	4804      	ldr	r0, [pc, #16]	; (800283c <MX_SPI2_Init+0x64>)
 800282a:	f004 fba1 	bl	8006f70 <HAL_SPI_Init>
 800282e:	4603      	mov	r3, r0
 8002830:	2b00      	cmp	r3, #0
 8002832:	d001      	beq.n	8002838 <MX_SPI2_Init+0x60>
  {
    Error_Handler();
 8002834:	f000 fa1c 	bl	8002c70 <Error_Handler>
  }
  /* USER CODE BEGIN SPI2_Init 2 */

  /* USER CODE END SPI2_Init 2 */

}
 8002838:	bf00      	nop
 800283a:	bd80      	pop	{r7, pc}
 800283c:	200001ac 	.word	0x200001ac
 8002840:	40003800 	.word	0x40003800

08002844 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8002844:	b580      	push	{r7, lr}
 8002846:	b08a      	sub	sp, #40	; 0x28
 8002848:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800284a:	f107 0320 	add.w	r3, r7, #32
 800284e:	2200      	movs	r2, #0
 8002850:	601a      	str	r2, [r3, #0]
 8002852:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8002854:	1d3b      	adds	r3, r7, #4
 8002856:	2200      	movs	r2, #0
 8002858:	601a      	str	r2, [r3, #0]
 800285a:	605a      	str	r2, [r3, #4]
 800285c:	609a      	str	r2, [r3, #8]
 800285e:	60da      	str	r2, [r3, #12]
 8002860:	611a      	str	r2, [r3, #16]
 8002862:	615a      	str	r2, [r3, #20]
 8002864:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8002866:	4b22      	ldr	r3, [pc, #136]	; (80028f0 <MX_TIM2_Init+0xac>)
 8002868:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800286c:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 1000;
 800286e:	4b20      	ldr	r3, [pc, #128]	; (80028f0 <MX_TIM2_Init+0xac>)
 8002870:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8002874:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002876:	4b1e      	ldr	r3, [pc, #120]	; (80028f0 <MX_TIM2_Init+0xac>)
 8002878:	2200      	movs	r2, #0
 800287a:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 100;
 800287c:	4b1c      	ldr	r3, [pc, #112]	; (80028f0 <MX_TIM2_Init+0xac>)
 800287e:	2264      	movs	r2, #100	; 0x64
 8002880:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002882:	4b1b      	ldr	r3, [pc, #108]	; (80028f0 <MX_TIM2_Init+0xac>)
 8002884:	2200      	movs	r2, #0
 8002886:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002888:	4b19      	ldr	r3, [pc, #100]	; (80028f0 <MX_TIM2_Init+0xac>)
 800288a:	2200      	movs	r2, #0
 800288c:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 800288e:	4818      	ldr	r0, [pc, #96]	; (80028f0 <MX_TIM2_Init+0xac>)
 8002890:	f005 fcec 	bl	800826c <HAL_TIM_PWM_Init>
 8002894:	4603      	mov	r3, r0
 8002896:	2b00      	cmp	r3, #0
 8002898:	d001      	beq.n	800289e <MX_TIM2_Init+0x5a>
  {
    Error_Handler();
 800289a:	f000 f9e9 	bl	8002c70 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800289e:	2300      	movs	r3, #0
 80028a0:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80028a2:	2300      	movs	r3, #0
 80028a4:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80028a6:	f107 0320 	add.w	r3, r7, #32
 80028aa:	4619      	mov	r1, r3
 80028ac:	4810      	ldr	r0, [pc, #64]	; (80028f0 <MX_TIM2_Init+0xac>)
 80028ae:	f006 fb57 	bl	8008f60 <HAL_TIMEx_MasterConfigSynchronization>
 80028b2:	4603      	mov	r3, r0
 80028b4:	2b00      	cmp	r3, #0
 80028b6:	d001      	beq.n	80028bc <MX_TIM2_Init+0x78>
  {
    Error_Handler();
 80028b8:	f000 f9da 	bl	8002c70 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80028bc:	2360      	movs	r3, #96	; 0x60
 80028be:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 80028c0:	2300      	movs	r3, #0
 80028c2:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80028c4:	2300      	movs	r3, #0
 80028c6:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80028c8:	2300      	movs	r3, #0
 80028ca:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80028cc:	1d3b      	adds	r3, r7, #4
 80028ce:	2200      	movs	r2, #0
 80028d0:	4619      	mov	r1, r3
 80028d2:	4807      	ldr	r0, [pc, #28]	; (80028f0 <MX_TIM2_Init+0xac>)
 80028d4:	f005 feba 	bl	800864c <HAL_TIM_PWM_ConfigChannel>
 80028d8:	4603      	mov	r3, r0
 80028da:	2b00      	cmp	r3, #0
 80028dc:	d001      	beq.n	80028e2 <MX_TIM2_Init+0x9e>
  {
    Error_Handler();
 80028de:	f000 f9c7 	bl	8002c70 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 80028e2:	4803      	ldr	r0, [pc, #12]	; (80028f0 <MX_TIM2_Init+0xac>)
 80028e4:	f000 fb3c 	bl	8002f60 <HAL_TIM_MspPostInit>

}
 80028e8:	bf00      	nop
 80028ea:	3728      	adds	r7, #40	; 0x28
 80028ec:	46bd      	mov	sp, r7
 80028ee:	bd80      	pop	{r7, pc}
 80028f0:	20000264 	.word	0x20000264

080028f4 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 80028f4:	b580      	push	{r7, lr}
 80028f6:	b086      	sub	sp, #24
 80028f8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80028fa:	f107 0308 	add.w	r3, r7, #8
 80028fe:	2200      	movs	r2, #0
 8002900:	601a      	str	r2, [r3, #0]
 8002902:	605a      	str	r2, [r3, #4]
 8002904:	609a      	str	r2, [r3, #8]
 8002906:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002908:	463b      	mov	r3, r7
 800290a:	2200      	movs	r2, #0
 800290c:	601a      	str	r2, [r3, #0]
 800290e:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8002910:	4b1d      	ldr	r3, [pc, #116]	; (8002988 <MX_TIM3_Init+0x94>)
 8002912:	4a1e      	ldr	r2, [pc, #120]	; (800298c <MX_TIM3_Init+0x98>)
 8002914:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 13333;
 8002916:	4b1c      	ldr	r3, [pc, #112]	; (8002988 <MX_TIM3_Init+0x94>)
 8002918:	f243 4215 	movw	r2, #13333	; 0x3415
 800291c:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 800291e:	4b1a      	ldr	r3, [pc, #104]	; (8002988 <MX_TIM3_Init+0x94>)
 8002920:	2200      	movs	r2, #0
 8002922:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 100;
 8002924:	4b18      	ldr	r3, [pc, #96]	; (8002988 <MX_TIM3_Init+0x94>)
 8002926:	2264      	movs	r2, #100	; 0x64
 8002928:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800292a:	4b17      	ldr	r3, [pc, #92]	; (8002988 <MX_TIM3_Init+0x94>)
 800292c:	2200      	movs	r2, #0
 800292e:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002930:	4b15      	ldr	r3, [pc, #84]	; (8002988 <MX_TIM3_Init+0x94>)
 8002932:	2200      	movs	r2, #0
 8002934:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8002936:	4814      	ldr	r0, [pc, #80]	; (8002988 <MX_TIM3_Init+0x94>)
 8002938:	f005 fb36 	bl	8007fa8 <HAL_TIM_Base_Init>
 800293c:	4603      	mov	r3, r0
 800293e:	2b00      	cmp	r3, #0
 8002940:	d001      	beq.n	8002946 <MX_TIM3_Init+0x52>
  {
    Error_Handler();
 8002942:	f000 f995 	bl	8002c70 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8002946:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800294a:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 800294c:	f107 0308 	add.w	r3, r7, #8
 8002950:	4619      	mov	r1, r3
 8002952:	480d      	ldr	r0, [pc, #52]	; (8002988 <MX_TIM3_Init+0x94>)
 8002954:	f005 ff3c 	bl	80087d0 <HAL_TIM_ConfigClockSource>
 8002958:	4603      	mov	r3, r0
 800295a:	2b00      	cmp	r3, #0
 800295c:	d001      	beq.n	8002962 <MX_TIM3_Init+0x6e>
  {
    Error_Handler();
 800295e:	f000 f987 	bl	8002c70 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8002962:	2300      	movs	r3, #0
 8002964:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002966:	2300      	movs	r3, #0
 8002968:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 800296a:	463b      	mov	r3, r7
 800296c:	4619      	mov	r1, r3
 800296e:	4806      	ldr	r0, [pc, #24]	; (8002988 <MX_TIM3_Init+0x94>)
 8002970:	f006 faf6 	bl	8008f60 <HAL_TIMEx_MasterConfigSynchronization>
 8002974:	4603      	mov	r3, r0
 8002976:	2b00      	cmp	r3, #0
 8002978:	d001      	beq.n	800297e <MX_TIM3_Init+0x8a>
  {
    Error_Handler();
 800297a:	f000 f979 	bl	8002c70 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 800297e:	bf00      	nop
 8002980:	3718      	adds	r7, #24
 8002982:	46bd      	mov	sp, r7
 8002984:	bd80      	pop	{r7, pc}
 8002986:	bf00      	nop
 8002988:	200002ac 	.word	0x200002ac
 800298c:	40000400 	.word	0x40000400

08002990 <MX_TIM4_Init>:
  * @brief TIM4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM4_Init(void)
{
 8002990:	b580      	push	{r7, lr}
 8002992:	b08e      	sub	sp, #56	; 0x38
 8002994:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8002996:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800299a:	2200      	movs	r2, #0
 800299c:	601a      	str	r2, [r3, #0]
 800299e:	605a      	str	r2, [r3, #4]
 80029a0:	609a      	str	r2, [r3, #8]
 80029a2:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80029a4:	f107 0320 	add.w	r3, r7, #32
 80029a8:	2200      	movs	r2, #0
 80029aa:	601a      	str	r2, [r3, #0]
 80029ac:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80029ae:	1d3b      	adds	r3, r7, #4
 80029b0:	2200      	movs	r2, #0
 80029b2:	601a      	str	r2, [r3, #0]
 80029b4:	605a      	str	r2, [r3, #4]
 80029b6:	609a      	str	r2, [r3, #8]
 80029b8:	60da      	str	r2, [r3, #12]
 80029ba:	611a      	str	r2, [r3, #16]
 80029bc:	615a      	str	r2, [r3, #20]
 80029be:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 80029c0:	4b2d      	ldr	r3, [pc, #180]	; (8002a78 <MX_TIM4_Init+0xe8>)
 80029c2:	4a2e      	ldr	r2, [pc, #184]	; (8002a7c <MX_TIM4_Init+0xec>)
 80029c4:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 83;
 80029c6:	4b2c      	ldr	r3, [pc, #176]	; (8002a78 <MX_TIM4_Init+0xe8>)
 80029c8:	2253      	movs	r2, #83	; 0x53
 80029ca:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 80029cc:	4b2a      	ldr	r3, [pc, #168]	; (8002a78 <MX_TIM4_Init+0xe8>)
 80029ce:	2200      	movs	r2, #0
 80029d0:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 999;
 80029d2:	4b29      	ldr	r3, [pc, #164]	; (8002a78 <MX_TIM4_Init+0xe8>)
 80029d4:	f240 32e7 	movw	r2, #999	; 0x3e7
 80029d8:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80029da:	4b27      	ldr	r3, [pc, #156]	; (8002a78 <MX_TIM4_Init+0xe8>)
 80029dc:	2200      	movs	r2, #0
 80029de:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80029e0:	4b25      	ldr	r3, [pc, #148]	; (8002a78 <MX_TIM4_Init+0xe8>)
 80029e2:	2200      	movs	r2, #0
 80029e4:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 80029e6:	4824      	ldr	r0, [pc, #144]	; (8002a78 <MX_TIM4_Init+0xe8>)
 80029e8:	f005 fade 	bl	8007fa8 <HAL_TIM_Base_Init>
 80029ec:	4603      	mov	r3, r0
 80029ee:	2b00      	cmp	r3, #0
 80029f0:	d001      	beq.n	80029f6 <MX_TIM4_Init+0x66>
  {
    Error_Handler();
 80029f2:	f000 f93d 	bl	8002c70 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80029f6:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80029fa:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 80029fc:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8002a00:	4619      	mov	r1, r3
 8002a02:	481d      	ldr	r0, [pc, #116]	; (8002a78 <MX_TIM4_Init+0xe8>)
 8002a04:	f005 fee4 	bl	80087d0 <HAL_TIM_ConfigClockSource>
 8002a08:	4603      	mov	r3, r0
 8002a0a:	2b00      	cmp	r3, #0
 8002a0c:	d001      	beq.n	8002a12 <MX_TIM4_Init+0x82>
  {
    Error_Handler();
 8002a0e:	f000 f92f 	bl	8002c70 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 8002a12:	4819      	ldr	r0, [pc, #100]	; (8002a78 <MX_TIM4_Init+0xe8>)
 8002a14:	f005 fc2a 	bl	800826c <HAL_TIM_PWM_Init>
 8002a18:	4603      	mov	r3, r0
 8002a1a:	2b00      	cmp	r3, #0
 8002a1c:	d001      	beq.n	8002a22 <MX_TIM4_Init+0x92>
  {
    Error_Handler();
 8002a1e:	f000 f927 	bl	8002c70 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_OC4REF;
 8002a22:	2370      	movs	r3, #112	; 0x70
 8002a24:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002a26:	2300      	movs	r3, #0
 8002a28:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 8002a2a:	f107 0320 	add.w	r3, r7, #32
 8002a2e:	4619      	mov	r1, r3
 8002a30:	4811      	ldr	r0, [pc, #68]	; (8002a78 <MX_TIM4_Init+0xe8>)
 8002a32:	f006 fa95 	bl	8008f60 <HAL_TIMEx_MasterConfigSynchronization>
 8002a36:	4603      	mov	r3, r0
 8002a38:	2b00      	cmp	r3, #0
 8002a3a:	d001      	beq.n	8002a40 <MX_TIM4_Init+0xb0>
  {
    Error_Handler();
 8002a3c:	f000 f918 	bl	8002c70 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8002a40:	2360      	movs	r3, #96	; 0x60
 8002a42:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 499;
 8002a44:	f240 13f3 	movw	r3, #499	; 0x1f3
 8002a48:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8002a4a:	2300      	movs	r3, #0
 8002a4c:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8002a4e:	2300      	movs	r3, #0
 8002a50:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 8002a52:	1d3b      	adds	r3, r7, #4
 8002a54:	220c      	movs	r2, #12
 8002a56:	4619      	mov	r1, r3
 8002a58:	4807      	ldr	r0, [pc, #28]	; (8002a78 <MX_TIM4_Init+0xe8>)
 8002a5a:	f005 fdf7 	bl	800864c <HAL_TIM_PWM_ConfigChannel>
 8002a5e:	4603      	mov	r3, r0
 8002a60:	2b00      	cmp	r3, #0
 8002a62:	d001      	beq.n	8002a68 <MX_TIM4_Init+0xd8>
  {
    Error_Handler();
 8002a64:	f000 f904 	bl	8002c70 <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */
  HAL_TIM_MspPostInit(&htim4);
 8002a68:	4803      	ldr	r0, [pc, #12]	; (8002a78 <MX_TIM4_Init+0xe8>)
 8002a6a:	f000 fa79 	bl	8002f60 <HAL_TIM_MspPostInit>

}
 8002a6e:	bf00      	nop
 8002a70:	3738      	adds	r7, #56	; 0x38
 8002a72:	46bd      	mov	sp, r7
 8002a74:	bd80      	pop	{r7, pc}
 8002a76:	bf00      	nop
 8002a78:	200002f4 	.word	0x200002f4
 8002a7c:	40000800 	.word	0x40000800

08002a80 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 8002a80:	b580      	push	{r7, lr}
 8002a82:	b082      	sub	sp, #8
 8002a84:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 8002a86:	2300      	movs	r3, #0
 8002a88:	607b      	str	r3, [r7, #4]
 8002a8a:	4b1b      	ldr	r3, [pc, #108]	; (8002af8 <MX_DMA_Init+0x78>)
 8002a8c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002a8e:	4a1a      	ldr	r2, [pc, #104]	; (8002af8 <MX_DMA_Init+0x78>)
 8002a90:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8002a94:	6313      	str	r3, [r2, #48]	; 0x30
 8002a96:	4b18      	ldr	r3, [pc, #96]	; (8002af8 <MX_DMA_Init+0x78>)
 8002a98:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002a9a:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002a9e:	607b      	str	r3, [r7, #4]
 8002aa0:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_DMA2_CLK_ENABLE();
 8002aa2:	2300      	movs	r3, #0
 8002aa4:	603b      	str	r3, [r7, #0]
 8002aa6:	4b14      	ldr	r3, [pc, #80]	; (8002af8 <MX_DMA_Init+0x78>)
 8002aa8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002aaa:	4a13      	ldr	r2, [pc, #76]	; (8002af8 <MX_DMA_Init+0x78>)
 8002aac:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8002ab0:	6313      	str	r3, [r2, #48]	; 0x30
 8002ab2:	4b11      	ldr	r3, [pc, #68]	; (8002af8 <MX_DMA_Init+0x78>)
 8002ab4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002ab6:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8002aba:	603b      	str	r3, [r7, #0]
 8002abc:	683b      	ldr	r3, [r7, #0]

  /* DMA interrupt init */
  /* DMA1_Stream4_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream4_IRQn, 0, 0);
 8002abe:	2200      	movs	r2, #0
 8002ac0:	2100      	movs	r1, #0
 8002ac2:	200f      	movs	r0, #15
 8002ac4:	f001 fb83 	bl	80041ce <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream4_IRQn);
 8002ac8:	200f      	movs	r0, #15
 8002aca:	f001 fb9c 	bl	8004206 <HAL_NVIC_EnableIRQ>
  /* DMA2_Stream0_IRQn interrupt configuration */
  NVIC_SetPriority(DMA2_Stream0_IRQn, NVIC_EncodePriority(NVIC_GetPriorityGrouping(),4, 0));
 8002ace:	f7fe ff1d 	bl	800190c <__NVIC_GetPriorityGrouping>
 8002ad2:	4603      	mov	r3, r0
 8002ad4:	2200      	movs	r2, #0
 8002ad6:	2104      	movs	r1, #4
 8002ad8:	4618      	mov	r0, r3
 8002ada:	f7fe ff6d 	bl	80019b8 <NVIC_EncodePriority>
 8002ade:	4603      	mov	r3, r0
 8002ae0:	4619      	mov	r1, r3
 8002ae2:	2038      	movs	r0, #56	; 0x38
 8002ae4:	f7fe ff3e 	bl	8001964 <__NVIC_SetPriority>
  NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 8002ae8:	2038      	movs	r0, #56	; 0x38
 8002aea:	f7fe ff1d 	bl	8001928 <__NVIC_EnableIRQ>

}
 8002aee:	bf00      	nop
 8002af0:	3708      	adds	r7, #8
 8002af2:	46bd      	mov	sp, r7
 8002af4:	bd80      	pop	{r7, pc}
 8002af6:	bf00      	nop
 8002af8:	40023800 	.word	0x40023800

08002afc <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8002afc:	b580      	push	{r7, lr}
 8002afe:	b08a      	sub	sp, #40	; 0x28
 8002b00:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002b02:	f107 0314 	add.w	r3, r7, #20
 8002b06:	2200      	movs	r2, #0
 8002b08:	601a      	str	r2, [r3, #0]
 8002b0a:	605a      	str	r2, [r3, #4]
 8002b0c:	609a      	str	r2, [r3, #8]
 8002b0e:	60da      	str	r2, [r3, #12]
 8002b10:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8002b12:	2300      	movs	r3, #0
 8002b14:	613b      	str	r3, [r7, #16]
 8002b16:	4b52      	ldr	r3, [pc, #328]	; (8002c60 <MX_GPIO_Init+0x164>)
 8002b18:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b1a:	4a51      	ldr	r2, [pc, #324]	; (8002c60 <MX_GPIO_Init+0x164>)
 8002b1c:	f043 0304 	orr.w	r3, r3, #4
 8002b20:	6313      	str	r3, [r2, #48]	; 0x30
 8002b22:	4b4f      	ldr	r3, [pc, #316]	; (8002c60 <MX_GPIO_Init+0x164>)
 8002b24:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b26:	f003 0304 	and.w	r3, r3, #4
 8002b2a:	613b      	str	r3, [r7, #16]
 8002b2c:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8002b2e:	2300      	movs	r3, #0
 8002b30:	60fb      	str	r3, [r7, #12]
 8002b32:	4b4b      	ldr	r3, [pc, #300]	; (8002c60 <MX_GPIO_Init+0x164>)
 8002b34:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b36:	4a4a      	ldr	r2, [pc, #296]	; (8002c60 <MX_GPIO_Init+0x164>)
 8002b38:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8002b3c:	6313      	str	r3, [r2, #48]	; 0x30
 8002b3e:	4b48      	ldr	r3, [pc, #288]	; (8002c60 <MX_GPIO_Init+0x164>)
 8002b40:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b42:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002b46:	60fb      	str	r3, [r7, #12]
 8002b48:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8002b4a:	2300      	movs	r3, #0
 8002b4c:	60bb      	str	r3, [r7, #8]
 8002b4e:	4b44      	ldr	r3, [pc, #272]	; (8002c60 <MX_GPIO_Init+0x164>)
 8002b50:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b52:	4a43      	ldr	r2, [pc, #268]	; (8002c60 <MX_GPIO_Init+0x164>)
 8002b54:	f043 0301 	orr.w	r3, r3, #1
 8002b58:	6313      	str	r3, [r2, #48]	; 0x30
 8002b5a:	4b41      	ldr	r3, [pc, #260]	; (8002c60 <MX_GPIO_Init+0x164>)
 8002b5c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b5e:	f003 0301 	and.w	r3, r3, #1
 8002b62:	60bb      	str	r3, [r7, #8]
 8002b64:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8002b66:	2300      	movs	r3, #0
 8002b68:	607b      	str	r3, [r7, #4]
 8002b6a:	4b3d      	ldr	r3, [pc, #244]	; (8002c60 <MX_GPIO_Init+0x164>)
 8002b6c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b6e:	4a3c      	ldr	r2, [pc, #240]	; (8002c60 <MX_GPIO_Init+0x164>)
 8002b70:	f043 0302 	orr.w	r3, r3, #2
 8002b74:	6313      	str	r3, [r2, #48]	; 0x30
 8002b76:	4b3a      	ldr	r3, [pc, #232]	; (8002c60 <MX_GPIO_Init+0x164>)
 8002b78:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b7a:	f003 0302 	and.w	r3, r3, #2
 8002b7e:	607b      	str	r3, [r7, #4]
 8002b80:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LED_BOARD_GPIO_Port, LED_BOARD_Pin, GPIO_PIN_RESET);
 8002b82:	2200      	movs	r2, #0
 8002b84:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8002b88:	4836      	ldr	r0, [pc, #216]	; (8002c64 <MX_GPIO_Init+0x168>)
 8002b8a:	f002 f8bd 	bl	8004d08 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET);
 8002b8e:	2201      	movs	r2, #1
 8002b90:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8002b94:	4834      	ldr	r0, [pc, #208]	; (8002c68 <MX_GPIO_Init+0x16c>)
 8002b96:	f002 f8b7 	bl	8004d08 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_SET);
 8002b9a:	2201      	movs	r2, #1
 8002b9c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8002ba0:	4832      	ldr	r0, [pc, #200]	; (8002c6c <MX_GPIO_Init+0x170>)
 8002ba2:	f002 f8b1 	bl	8004d08 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, DISPL_RST_Pin|DISPL_DC_Pin, GPIO_PIN_RESET);
 8002ba6:	2200      	movs	r2, #0
 8002ba8:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8002bac:	482f      	ldr	r0, [pc, #188]	; (8002c6c <MX_GPIO_Init+0x170>)
 8002bae:	f002 f8ab 	bl	8004d08 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : LED_BOARD_Pin */
  GPIO_InitStruct.Pin = LED_BOARD_Pin;
 8002bb2:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002bb6:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002bb8:	2301      	movs	r3, #1
 8002bba:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002bbc:	2300      	movs	r3, #0
 8002bbe:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002bc0:	2300      	movs	r3, #0
 8002bc2:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(LED_BOARD_GPIO_Port, &GPIO_InitStruct);
 8002bc4:	f107 0314 	add.w	r3, r7, #20
 8002bc8:	4619      	mov	r1, r3
 8002bca:	4826      	ldr	r0, [pc, #152]	; (8002c64 <MX_GPIO_Init+0x168>)
 8002bcc:	f001 ff00 	bl	80049d0 <HAL_GPIO_Init>

  /*Configure GPIO pin : TOUCH_CS_Pin */
  GPIO_InitStruct.Pin = TOUCH_CS_Pin;
 8002bd0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002bd4:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002bd6:	2301      	movs	r3, #1
 8002bd8:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002bda:	2300      	movs	r3, #0
 8002bdc:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002bde:	2302      	movs	r3, #2
 8002be0:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(TOUCH_CS_GPIO_Port, &GPIO_InitStruct);
 8002be2:	f107 0314 	add.w	r3, r7, #20
 8002be6:	4619      	mov	r1, r3
 8002be8:	481f      	ldr	r0, [pc, #124]	; (8002c68 <MX_GPIO_Init+0x16c>)
 8002bea:	f001 fef1 	bl	80049d0 <HAL_GPIO_Init>

  /*Configure GPIO pins : DISPL_CS_Pin DISPL_DC_Pin */
  GPIO_InitStruct.Pin = DISPL_CS_Pin|DISPL_DC_Pin;
 8002bee:	f44f 63a0 	mov.w	r3, #1280	; 0x500
 8002bf2:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002bf4:	2301      	movs	r3, #1
 8002bf6:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002bf8:	2300      	movs	r3, #0
 8002bfa:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002bfc:	2302      	movs	r3, #2
 8002bfe:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002c00:	f107 0314 	add.w	r3, r7, #20
 8002c04:	4619      	mov	r1, r3
 8002c06:	4819      	ldr	r0, [pc, #100]	; (8002c6c <MX_GPIO_Init+0x170>)
 8002c08:	f001 fee2 	bl	80049d0 <HAL_GPIO_Init>

  /*Configure GPIO pin : DISPL_RST_Pin */
  GPIO_InitStruct.Pin = DISPL_RST_Pin;
 8002c0c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8002c10:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002c12:	2301      	movs	r3, #1
 8002c14:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002c16:	2300      	movs	r3, #0
 8002c18:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002c1a:	2300      	movs	r3, #0
 8002c1c:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(DISPL_RST_GPIO_Port, &GPIO_InitStruct);
 8002c1e:	f107 0314 	add.w	r3, r7, #20
 8002c22:	4619      	mov	r1, r3
 8002c24:	4811      	ldr	r0, [pc, #68]	; (8002c6c <MX_GPIO_Init+0x170>)
 8002c26:	f001 fed3 	bl	80049d0 <HAL_GPIO_Init>

  /*Configure GPIO pin : TOUCH_INT_Pin */
  GPIO_InitStruct.Pin = TOUCH_INT_Pin;
 8002c2a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002c2e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8002c30:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 8002c34:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8002c36:	2301      	movs	r3, #1
 8002c38:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(TOUCH_INT_GPIO_Port, &GPIO_InitStruct);
 8002c3a:	f107 0314 	add.w	r3, r7, #20
 8002c3e:	4619      	mov	r1, r3
 8002c40:	480a      	ldr	r0, [pc, #40]	; (8002c6c <MX_GPIO_Init+0x170>)
 8002c42:	f001 fec5 	bl	80049d0 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 1, 0);
 8002c46:	2200      	movs	r2, #0
 8002c48:	2101      	movs	r1, #1
 8002c4a:	2028      	movs	r0, #40	; 0x28
 8002c4c:	f001 fabf 	bl	80041ce <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8002c50:	2028      	movs	r0, #40	; 0x28
 8002c52:	f001 fad8 	bl	8004206 <HAL_NVIC_EnableIRQ>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8002c56:	bf00      	nop
 8002c58:	3728      	adds	r7, #40	; 0x28
 8002c5a:	46bd      	mov	sp, r7
 8002c5c:	bd80      	pop	{r7, pc}
 8002c5e:	bf00      	nop
 8002c60:	40023800 	.word	0x40023800
 8002c64:	40020800 	.word	0x40020800
 8002c68:	40020400 	.word	0x40020400
 8002c6c:	40020000 	.word	0x40020000

08002c70 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8002c70:	b480      	push	{r7}
 8002c72:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002c74:	b672      	cpsid	i
}
 8002c76:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8002c78:	e7fe      	b.n	8002c78 <Error_Handler+0x8>
	...

08002c7c <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                        /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002c7c:	b480      	push	{r7}
 8002c7e:	b083      	sub	sp, #12
 8002c80:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002c82:	2300      	movs	r3, #0
 8002c84:	607b      	str	r3, [r7, #4]
 8002c86:	4b10      	ldr	r3, [pc, #64]	; (8002cc8 <HAL_MspInit+0x4c>)
 8002c88:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002c8a:	4a0f      	ldr	r2, [pc, #60]	; (8002cc8 <HAL_MspInit+0x4c>)
 8002c8c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002c90:	6453      	str	r3, [r2, #68]	; 0x44
 8002c92:	4b0d      	ldr	r3, [pc, #52]	; (8002cc8 <HAL_MspInit+0x4c>)
 8002c94:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002c96:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8002c9a:	607b      	str	r3, [r7, #4]
 8002c9c:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8002c9e:	2300      	movs	r3, #0
 8002ca0:	603b      	str	r3, [r7, #0]
 8002ca2:	4b09      	ldr	r3, [pc, #36]	; (8002cc8 <HAL_MspInit+0x4c>)
 8002ca4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002ca6:	4a08      	ldr	r2, [pc, #32]	; (8002cc8 <HAL_MspInit+0x4c>)
 8002ca8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002cac:	6413      	str	r3, [r2, #64]	; 0x40
 8002cae:	4b06      	ldr	r3, [pc, #24]	; (8002cc8 <HAL_MspInit+0x4c>)
 8002cb0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002cb2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002cb6:	603b      	str	r3, [r7, #0]
 8002cb8:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002cba:	bf00      	nop
 8002cbc:	370c      	adds	r7, #12
 8002cbe:	46bd      	mov	sp, r7
 8002cc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002cc4:	4770      	bx	lr
 8002cc6:	bf00      	nop
 8002cc8:	40023800 	.word	0x40023800

08002ccc <HAL_CRC_MspInit>:
* This function configures the hardware resources used in this example
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
 8002ccc:	b480      	push	{r7}
 8002cce:	b085      	sub	sp, #20
 8002cd0:	af00      	add	r7, sp, #0
 8002cd2:	6078      	str	r0, [r7, #4]
  if(hcrc->Instance==CRC)
 8002cd4:	687b      	ldr	r3, [r7, #4]
 8002cd6:	681b      	ldr	r3, [r3, #0]
 8002cd8:	4a0b      	ldr	r2, [pc, #44]	; (8002d08 <HAL_CRC_MspInit+0x3c>)
 8002cda:	4293      	cmp	r3, r2
 8002cdc:	d10d      	bne.n	8002cfa <HAL_CRC_MspInit+0x2e>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8002cde:	2300      	movs	r3, #0
 8002ce0:	60fb      	str	r3, [r7, #12]
 8002ce2:	4b0a      	ldr	r3, [pc, #40]	; (8002d0c <HAL_CRC_MspInit+0x40>)
 8002ce4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002ce6:	4a09      	ldr	r2, [pc, #36]	; (8002d0c <HAL_CRC_MspInit+0x40>)
 8002ce8:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8002cec:	6313      	str	r3, [r2, #48]	; 0x30
 8002cee:	4b07      	ldr	r3, [pc, #28]	; (8002d0c <HAL_CRC_MspInit+0x40>)
 8002cf0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002cf2:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8002cf6:	60fb      	str	r3, [r7, #12]
 8002cf8:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8002cfa:	bf00      	nop
 8002cfc:	3714      	adds	r7, #20
 8002cfe:	46bd      	mov	sp, r7
 8002d00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d04:	4770      	bx	lr
 8002d06:	bf00      	nop
 8002d08:	40023000 	.word	0x40023000
 8002d0c:	40023800 	.word	0x40023800

08002d10 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8002d10:	b580      	push	{r7, lr}
 8002d12:	b08a      	sub	sp, #40	; 0x28
 8002d14:	af00      	add	r7, sp, #0
 8002d16:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002d18:	f107 0314 	add.w	r3, r7, #20
 8002d1c:	2200      	movs	r2, #0
 8002d1e:	601a      	str	r2, [r3, #0]
 8002d20:	605a      	str	r2, [r3, #4]
 8002d22:	609a      	str	r2, [r3, #8]
 8002d24:	60da      	str	r2, [r3, #12]
 8002d26:	611a      	str	r2, [r3, #16]
  if(hi2c->Instance==I2C1)
 8002d28:	687b      	ldr	r3, [r7, #4]
 8002d2a:	681b      	ldr	r3, [r3, #0]
 8002d2c:	4a19      	ldr	r2, [pc, #100]	; (8002d94 <HAL_I2C_MspInit+0x84>)
 8002d2e:	4293      	cmp	r3, r2
 8002d30:	d12b      	bne.n	8002d8a <HAL_I2C_MspInit+0x7a>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002d32:	2300      	movs	r3, #0
 8002d34:	613b      	str	r3, [r7, #16]
 8002d36:	4b18      	ldr	r3, [pc, #96]	; (8002d98 <HAL_I2C_MspInit+0x88>)
 8002d38:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002d3a:	4a17      	ldr	r2, [pc, #92]	; (8002d98 <HAL_I2C_MspInit+0x88>)
 8002d3c:	f043 0302 	orr.w	r3, r3, #2
 8002d40:	6313      	str	r3, [r2, #48]	; 0x30
 8002d42:	4b15      	ldr	r3, [pc, #84]	; (8002d98 <HAL_I2C_MspInit+0x88>)
 8002d44:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002d46:	f003 0302 	and.w	r3, r3, #2
 8002d4a:	613b      	str	r3, [r7, #16]
 8002d4c:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration
    PB6     ------> I2C1_SCL
    PB7     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8002d4e:	23c0      	movs	r3, #192	; 0xc0
 8002d50:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002d52:	2312      	movs	r3, #18
 8002d54:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002d56:	2300      	movs	r3, #0
 8002d58:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002d5a:	2303      	movs	r3, #3
 8002d5c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8002d5e:	2304      	movs	r3, #4
 8002d60:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002d62:	f107 0314 	add.w	r3, r7, #20
 8002d66:	4619      	mov	r1, r3
 8002d68:	480c      	ldr	r0, [pc, #48]	; (8002d9c <HAL_I2C_MspInit+0x8c>)
 8002d6a:	f001 fe31 	bl	80049d0 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8002d6e:	2300      	movs	r3, #0
 8002d70:	60fb      	str	r3, [r7, #12]
 8002d72:	4b09      	ldr	r3, [pc, #36]	; (8002d98 <HAL_I2C_MspInit+0x88>)
 8002d74:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002d76:	4a08      	ldr	r2, [pc, #32]	; (8002d98 <HAL_I2C_MspInit+0x88>)
 8002d78:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8002d7c:	6413      	str	r3, [r2, #64]	; 0x40
 8002d7e:	4b06      	ldr	r3, [pc, #24]	; (8002d98 <HAL_I2C_MspInit+0x88>)
 8002d80:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002d82:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002d86:	60fb      	str	r3, [r7, #12]
 8002d88:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }

}
 8002d8a:	bf00      	nop
 8002d8c:	3728      	adds	r7, #40	; 0x28
 8002d8e:	46bd      	mov	sp, r7
 8002d90:	bd80      	pop	{r7, pc}
 8002d92:	bf00      	nop
 8002d94:	40005400 	.word	0x40005400
 8002d98:	40023800 	.word	0x40023800
 8002d9c:	40020400 	.word	0x40020400

08002da0 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8002da0:	b580      	push	{r7, lr}
 8002da2:	b08a      	sub	sp, #40	; 0x28
 8002da4:	af00      	add	r7, sp, #0
 8002da6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002da8:	f107 0314 	add.w	r3, r7, #20
 8002dac:	2200      	movs	r2, #0
 8002dae:	601a      	str	r2, [r3, #0]
 8002db0:	605a      	str	r2, [r3, #4]
 8002db2:	609a      	str	r2, [r3, #8]
 8002db4:	60da      	str	r2, [r3, #12]
 8002db6:	611a      	str	r2, [r3, #16]
  if(hspi->Instance==SPI2)
 8002db8:	687b      	ldr	r3, [r7, #4]
 8002dba:	681b      	ldr	r3, [r3, #0]
 8002dbc:	4a34      	ldr	r2, [pc, #208]	; (8002e90 <HAL_SPI_MspInit+0xf0>)
 8002dbe:	4293      	cmp	r3, r2
 8002dc0:	d161      	bne.n	8002e86 <HAL_SPI_MspInit+0xe6>
  {
  /* USER CODE BEGIN SPI2_MspInit 0 */

  /* USER CODE END SPI2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI2_CLK_ENABLE();
 8002dc2:	2300      	movs	r3, #0
 8002dc4:	613b      	str	r3, [r7, #16]
 8002dc6:	4b33      	ldr	r3, [pc, #204]	; (8002e94 <HAL_SPI_MspInit+0xf4>)
 8002dc8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002dca:	4a32      	ldr	r2, [pc, #200]	; (8002e94 <HAL_SPI_MspInit+0xf4>)
 8002dcc:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002dd0:	6413      	str	r3, [r2, #64]	; 0x40
 8002dd2:	4b30      	ldr	r3, [pc, #192]	; (8002e94 <HAL_SPI_MspInit+0xf4>)
 8002dd4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002dd6:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8002dda:	613b      	str	r3, [r7, #16]
 8002ddc:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002dde:	2300      	movs	r3, #0
 8002de0:	60fb      	str	r3, [r7, #12]
 8002de2:	4b2c      	ldr	r3, [pc, #176]	; (8002e94 <HAL_SPI_MspInit+0xf4>)
 8002de4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002de6:	4a2b      	ldr	r2, [pc, #172]	; (8002e94 <HAL_SPI_MspInit+0xf4>)
 8002de8:	f043 0302 	orr.w	r3, r3, #2
 8002dec:	6313      	str	r3, [r2, #48]	; 0x30
 8002dee:	4b29      	ldr	r3, [pc, #164]	; (8002e94 <HAL_SPI_MspInit+0xf4>)
 8002df0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002df2:	f003 0302 	and.w	r3, r3, #2
 8002df6:	60fb      	str	r3, [r7, #12]
 8002df8:	68fb      	ldr	r3, [r7, #12]
    /**SPI2 GPIO Configuration
    PB13     ------> SPI2_SCK
    PB14     ------> SPI2_MISO
    PB15     ------> SPI2_MOSI
    */
    GPIO_InitStruct.Pin = DISPL_SCK_Pin|TOUCH_MISO_Pin|DISPL_MOSI_Pin;
 8002dfa:	f44f 4360 	mov.w	r3, #57344	; 0xe000
 8002dfe:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002e00:	2302      	movs	r3, #2
 8002e02:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002e04:	2300      	movs	r3, #0
 8002e06:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002e08:	2303      	movs	r3, #3
 8002e0a:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8002e0c:	2305      	movs	r3, #5
 8002e0e:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002e10:	f107 0314 	add.w	r3, r7, #20
 8002e14:	4619      	mov	r1, r3
 8002e16:	4820      	ldr	r0, [pc, #128]	; (8002e98 <HAL_SPI_MspInit+0xf8>)
 8002e18:	f001 fdda 	bl	80049d0 <HAL_GPIO_Init>

    /* SPI2 DMA Init */
    /* SPI2_TX Init */
    hdma_spi2_tx.Instance = DMA1_Stream4;
 8002e1c:	4b1f      	ldr	r3, [pc, #124]	; (8002e9c <HAL_SPI_MspInit+0xfc>)
 8002e1e:	4a20      	ldr	r2, [pc, #128]	; (8002ea0 <HAL_SPI_MspInit+0x100>)
 8002e20:	601a      	str	r2, [r3, #0]
    hdma_spi2_tx.Init.Channel = DMA_CHANNEL_0;
 8002e22:	4b1e      	ldr	r3, [pc, #120]	; (8002e9c <HAL_SPI_MspInit+0xfc>)
 8002e24:	2200      	movs	r2, #0
 8002e26:	605a      	str	r2, [r3, #4]
    hdma_spi2_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8002e28:	4b1c      	ldr	r3, [pc, #112]	; (8002e9c <HAL_SPI_MspInit+0xfc>)
 8002e2a:	2240      	movs	r2, #64	; 0x40
 8002e2c:	609a      	str	r2, [r3, #8]
    hdma_spi2_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 8002e2e:	4b1b      	ldr	r3, [pc, #108]	; (8002e9c <HAL_SPI_MspInit+0xfc>)
 8002e30:	2200      	movs	r2, #0
 8002e32:	60da      	str	r2, [r3, #12]
    hdma_spi2_tx.Init.MemInc = DMA_MINC_ENABLE;
 8002e34:	4b19      	ldr	r3, [pc, #100]	; (8002e9c <HAL_SPI_MspInit+0xfc>)
 8002e36:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8002e3a:	611a      	str	r2, [r3, #16]
    hdma_spi2_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8002e3c:	4b17      	ldr	r3, [pc, #92]	; (8002e9c <HAL_SPI_MspInit+0xfc>)
 8002e3e:	2200      	movs	r2, #0
 8002e40:	615a      	str	r2, [r3, #20]
    hdma_spi2_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8002e42:	4b16      	ldr	r3, [pc, #88]	; (8002e9c <HAL_SPI_MspInit+0xfc>)
 8002e44:	2200      	movs	r2, #0
 8002e46:	619a      	str	r2, [r3, #24]
    hdma_spi2_tx.Init.Mode = DMA_NORMAL;
 8002e48:	4b14      	ldr	r3, [pc, #80]	; (8002e9c <HAL_SPI_MspInit+0xfc>)
 8002e4a:	2200      	movs	r2, #0
 8002e4c:	61da      	str	r2, [r3, #28]
    hdma_spi2_tx.Init.Priority = DMA_PRIORITY_LOW;
 8002e4e:	4b13      	ldr	r3, [pc, #76]	; (8002e9c <HAL_SPI_MspInit+0xfc>)
 8002e50:	2200      	movs	r2, #0
 8002e52:	621a      	str	r2, [r3, #32]
    hdma_spi2_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8002e54:	4b11      	ldr	r3, [pc, #68]	; (8002e9c <HAL_SPI_MspInit+0xfc>)
 8002e56:	2200      	movs	r2, #0
 8002e58:	625a      	str	r2, [r3, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_spi2_tx) != HAL_OK)
 8002e5a:	4810      	ldr	r0, [pc, #64]	; (8002e9c <HAL_SPI_MspInit+0xfc>)
 8002e5c:	f001 fa26 	bl	80042ac <HAL_DMA_Init>
 8002e60:	4603      	mov	r3, r0
 8002e62:	2b00      	cmp	r3, #0
 8002e64:	d001      	beq.n	8002e6a <HAL_SPI_MspInit+0xca>
    {
      Error_Handler();
 8002e66:	f7ff ff03 	bl	8002c70 <Error_Handler>
    }

    __HAL_LINKDMA(hspi,hdmatx,hdma_spi2_tx);
 8002e6a:	687b      	ldr	r3, [r7, #4]
 8002e6c:	4a0b      	ldr	r2, [pc, #44]	; (8002e9c <HAL_SPI_MspInit+0xfc>)
 8002e6e:	649a      	str	r2, [r3, #72]	; 0x48
 8002e70:	4a0a      	ldr	r2, [pc, #40]	; (8002e9c <HAL_SPI_MspInit+0xfc>)
 8002e72:	687b      	ldr	r3, [r7, #4]
 8002e74:	6393      	str	r3, [r2, #56]	; 0x38

    /* SPI2 interrupt Init */
    HAL_NVIC_SetPriority(SPI2_IRQn, 0, 0);
 8002e76:	2200      	movs	r2, #0
 8002e78:	2100      	movs	r1, #0
 8002e7a:	2024      	movs	r0, #36	; 0x24
 8002e7c:	f001 f9a7 	bl	80041ce <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SPI2_IRQn);
 8002e80:	2024      	movs	r0, #36	; 0x24
 8002e82:	f001 f9c0 	bl	8004206 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN SPI2_MspInit 1 */

  /* USER CODE END SPI2_MspInit 1 */
  }

}
 8002e86:	bf00      	nop
 8002e88:	3728      	adds	r7, #40	; 0x28
 8002e8a:	46bd      	mov	sp, r7
 8002e8c:	bd80      	pop	{r7, pc}
 8002e8e:	bf00      	nop
 8002e90:	40003800 	.word	0x40003800
 8002e94:	40023800 	.word	0x40023800
 8002e98:	40020400 	.word	0x40020400
 8002e9c:	20000204 	.word	0x20000204
 8002ea0:	40026070 	.word	0x40026070

08002ea4 <HAL_TIM_PWM_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_pwm: TIM_PWM handle pointer
* @retval None
*/
void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* htim_pwm)
{
 8002ea4:	b480      	push	{r7}
 8002ea6:	b085      	sub	sp, #20
 8002ea8:	af00      	add	r7, sp, #0
 8002eaa:	6078      	str	r0, [r7, #4]
  if(htim_pwm->Instance==TIM2)
 8002eac:	687b      	ldr	r3, [r7, #4]
 8002eae:	681b      	ldr	r3, [r3, #0]
 8002eb0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002eb4:	d10d      	bne.n	8002ed2 <HAL_TIM_PWM_MspInit+0x2e>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8002eb6:	2300      	movs	r3, #0
 8002eb8:	60fb      	str	r3, [r7, #12]
 8002eba:	4b09      	ldr	r3, [pc, #36]	; (8002ee0 <HAL_TIM_PWM_MspInit+0x3c>)
 8002ebc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002ebe:	4a08      	ldr	r2, [pc, #32]	; (8002ee0 <HAL_TIM_PWM_MspInit+0x3c>)
 8002ec0:	f043 0301 	orr.w	r3, r3, #1
 8002ec4:	6413      	str	r3, [r2, #64]	; 0x40
 8002ec6:	4b06      	ldr	r3, [pc, #24]	; (8002ee0 <HAL_TIM_PWM_MspInit+0x3c>)
 8002ec8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002eca:	f003 0301 	and.w	r3, r3, #1
 8002ece:	60fb      	str	r3, [r7, #12]
 8002ed0:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }

}
 8002ed2:	bf00      	nop
 8002ed4:	3714      	adds	r7, #20
 8002ed6:	46bd      	mov	sp, r7
 8002ed8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002edc:	4770      	bx	lr
 8002ede:	bf00      	nop
 8002ee0:	40023800 	.word	0x40023800

08002ee4 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8002ee4:	b580      	push	{r7, lr}
 8002ee6:	b084      	sub	sp, #16
 8002ee8:	af00      	add	r7, sp, #0
 8002eea:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM3)
 8002eec:	687b      	ldr	r3, [r7, #4]
 8002eee:	681b      	ldr	r3, [r3, #0]
 8002ef0:	4a18      	ldr	r2, [pc, #96]	; (8002f54 <HAL_TIM_Base_MspInit+0x70>)
 8002ef2:	4293      	cmp	r3, r2
 8002ef4:	d116      	bne.n	8002f24 <HAL_TIM_Base_MspInit+0x40>
  {
  /* USER CODE BEGIN TIM3_MspInit 0 */

  /* USER CODE END TIM3_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM3_CLK_ENABLE();
 8002ef6:	2300      	movs	r3, #0
 8002ef8:	60fb      	str	r3, [r7, #12]
 8002efa:	4b17      	ldr	r3, [pc, #92]	; (8002f58 <HAL_TIM_Base_MspInit+0x74>)
 8002efc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002efe:	4a16      	ldr	r2, [pc, #88]	; (8002f58 <HAL_TIM_Base_MspInit+0x74>)
 8002f00:	f043 0302 	orr.w	r3, r3, #2
 8002f04:	6413      	str	r3, [r2, #64]	; 0x40
 8002f06:	4b14      	ldr	r3, [pc, #80]	; (8002f58 <HAL_TIM_Base_MspInit+0x74>)
 8002f08:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002f0a:	f003 0302 	and.w	r3, r3, #2
 8002f0e:	60fb      	str	r3, [r7, #12]
 8002f10:	68fb      	ldr	r3, [r7, #12]
    /* TIM3 interrupt Init */
    HAL_NVIC_SetPriority(TIM3_IRQn, 0, 0);
 8002f12:	2200      	movs	r2, #0
 8002f14:	2100      	movs	r1, #0
 8002f16:	201d      	movs	r0, #29
 8002f18:	f001 f959 	bl	80041ce <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
 8002f1c:	201d      	movs	r0, #29
 8002f1e:	f001 f972 	bl	8004206 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM4_MspInit 1 */

  /* USER CODE END TIM4_MspInit 1 */
  }

}
 8002f22:	e012      	b.n	8002f4a <HAL_TIM_Base_MspInit+0x66>
  else if(htim_base->Instance==TIM4)
 8002f24:	687b      	ldr	r3, [r7, #4]
 8002f26:	681b      	ldr	r3, [r3, #0]
 8002f28:	4a0c      	ldr	r2, [pc, #48]	; (8002f5c <HAL_TIM_Base_MspInit+0x78>)
 8002f2a:	4293      	cmp	r3, r2
 8002f2c:	d10d      	bne.n	8002f4a <HAL_TIM_Base_MspInit+0x66>
    __HAL_RCC_TIM4_CLK_ENABLE();
 8002f2e:	2300      	movs	r3, #0
 8002f30:	60bb      	str	r3, [r7, #8]
 8002f32:	4b09      	ldr	r3, [pc, #36]	; (8002f58 <HAL_TIM_Base_MspInit+0x74>)
 8002f34:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002f36:	4a08      	ldr	r2, [pc, #32]	; (8002f58 <HAL_TIM_Base_MspInit+0x74>)
 8002f38:	f043 0304 	orr.w	r3, r3, #4
 8002f3c:	6413      	str	r3, [r2, #64]	; 0x40
 8002f3e:	4b06      	ldr	r3, [pc, #24]	; (8002f58 <HAL_TIM_Base_MspInit+0x74>)
 8002f40:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002f42:	f003 0304 	and.w	r3, r3, #4
 8002f46:	60bb      	str	r3, [r7, #8]
 8002f48:	68bb      	ldr	r3, [r7, #8]
}
 8002f4a:	bf00      	nop
 8002f4c:	3710      	adds	r7, #16
 8002f4e:	46bd      	mov	sp, r7
 8002f50:	bd80      	pop	{r7, pc}
 8002f52:	bf00      	nop
 8002f54:	40000400 	.word	0x40000400
 8002f58:	40023800 	.word	0x40023800
 8002f5c:	40000800 	.word	0x40000800

08002f60 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8002f60:	b580      	push	{r7, lr}
 8002f62:	b08a      	sub	sp, #40	; 0x28
 8002f64:	af00      	add	r7, sp, #0
 8002f66:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002f68:	f107 0314 	add.w	r3, r7, #20
 8002f6c:	2200      	movs	r2, #0
 8002f6e:	601a      	str	r2, [r3, #0]
 8002f70:	605a      	str	r2, [r3, #4]
 8002f72:	609a      	str	r2, [r3, #8]
 8002f74:	60da      	str	r2, [r3, #12]
 8002f76:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM2)
 8002f78:	687b      	ldr	r3, [r7, #4]
 8002f7a:	681b      	ldr	r3, [r3, #0]
 8002f7c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002f80:	d11f      	bne.n	8002fc2 <HAL_TIM_MspPostInit+0x62>
  {
  /* USER CODE BEGIN TIM2_MspPostInit 0 */

  /* USER CODE END TIM2_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002f82:	2300      	movs	r3, #0
 8002f84:	613b      	str	r3, [r7, #16]
 8002f86:	4b23      	ldr	r3, [pc, #140]	; (8003014 <HAL_TIM_MspPostInit+0xb4>)
 8002f88:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002f8a:	4a22      	ldr	r2, [pc, #136]	; (8003014 <HAL_TIM_MspPostInit+0xb4>)
 8002f8c:	f043 0301 	orr.w	r3, r3, #1
 8002f90:	6313      	str	r3, [r2, #48]	; 0x30
 8002f92:	4b20      	ldr	r3, [pc, #128]	; (8003014 <HAL_TIM_MspPostInit+0xb4>)
 8002f94:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002f96:	f003 0301 	and.w	r3, r3, #1
 8002f9a:	613b      	str	r3, [r7, #16]
 8002f9c:	693b      	ldr	r3, [r7, #16]
    /**TIM2 GPIO Configuration
    PA15     ------> TIM2_CH1
    */
    GPIO_InitStruct.Pin = DISPL_LED_Pin;
 8002f9e:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8002fa2:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002fa4:	2302      	movs	r3, #2
 8002fa6:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002fa8:	2300      	movs	r3, #0
 8002faa:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002fac:	2300      	movs	r3, #0
 8002fae:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 8002fb0:	2301      	movs	r3, #1
 8002fb2:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(DISPL_LED_GPIO_Port, &GPIO_InitStruct);
 8002fb4:	f107 0314 	add.w	r3, r7, #20
 8002fb8:	4619      	mov	r1, r3
 8002fba:	4817      	ldr	r0, [pc, #92]	; (8003018 <HAL_TIM_MspPostInit+0xb8>)
 8002fbc:	f001 fd08 	bl	80049d0 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM4_MspPostInit 1 */

  /* USER CODE END TIM4_MspPostInit 1 */
  }

}
 8002fc0:	e023      	b.n	800300a <HAL_TIM_MspPostInit+0xaa>
  else if(htim->Instance==TIM4)
 8002fc2:	687b      	ldr	r3, [r7, #4]
 8002fc4:	681b      	ldr	r3, [r3, #0]
 8002fc6:	4a15      	ldr	r2, [pc, #84]	; (800301c <HAL_TIM_MspPostInit+0xbc>)
 8002fc8:	4293      	cmp	r3, r2
 8002fca:	d11e      	bne.n	800300a <HAL_TIM_MspPostInit+0xaa>
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002fcc:	2300      	movs	r3, #0
 8002fce:	60fb      	str	r3, [r7, #12]
 8002fd0:	4b10      	ldr	r3, [pc, #64]	; (8003014 <HAL_TIM_MspPostInit+0xb4>)
 8002fd2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002fd4:	4a0f      	ldr	r2, [pc, #60]	; (8003014 <HAL_TIM_MspPostInit+0xb4>)
 8002fd6:	f043 0302 	orr.w	r3, r3, #2
 8002fda:	6313      	str	r3, [r2, #48]	; 0x30
 8002fdc:	4b0d      	ldr	r3, [pc, #52]	; (8003014 <HAL_TIM_MspPostInit+0xb4>)
 8002fde:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002fe0:	f003 0302 	and.w	r3, r3, #2
 8002fe4:	60fb      	str	r3, [r7, #12]
 8002fe6:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8002fe8:	f44f 7300 	mov.w	r3, #512	; 0x200
 8002fec:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002fee:	2302      	movs	r3, #2
 8002ff0:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002ff2:	2300      	movs	r3, #0
 8002ff4:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002ff6:	2300      	movs	r3, #0
 8002ff8:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 8002ffa:	2302      	movs	r3, #2
 8002ffc:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002ffe:	f107 0314 	add.w	r3, r7, #20
 8003002:	4619      	mov	r1, r3
 8003004:	4806      	ldr	r0, [pc, #24]	; (8003020 <HAL_TIM_MspPostInit+0xc0>)
 8003006:	f001 fce3 	bl	80049d0 <HAL_GPIO_Init>
}
 800300a:	bf00      	nop
 800300c:	3728      	adds	r7, #40	; 0x28
 800300e:	46bd      	mov	sp, r7
 8003010:	bd80      	pop	{r7, pc}
 8003012:	bf00      	nop
 8003014:	40023800 	.word	0x40023800
 8003018:	40020000 	.word	0x40020000
 800301c:	40000800 	.word	0x40000800
 8003020:	40020400 	.word	0x40020400

08003024 <LL_ADC_IsActiveFlag_OVR>:
{
 8003024:	b480      	push	{r7}
 8003026:	b083      	sub	sp, #12
 8003028:	af00      	add	r7, sp, #0
 800302a:	6078      	str	r0, [r7, #4]
  return (READ_BIT(ADCx->SR, LL_ADC_FLAG_OVR) == (LL_ADC_FLAG_OVR));
 800302c:	687b      	ldr	r3, [r7, #4]
 800302e:	681b      	ldr	r3, [r3, #0]
 8003030:	f003 0320 	and.w	r3, r3, #32
 8003034:	2b20      	cmp	r3, #32
 8003036:	bf0c      	ite	eq
 8003038:	2301      	moveq	r3, #1
 800303a:	2300      	movne	r3, #0
 800303c:	b2db      	uxtb	r3, r3
}
 800303e:	4618      	mov	r0, r3
 8003040:	370c      	adds	r7, #12
 8003042:	46bd      	mov	sp, r7
 8003044:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003048:	4770      	bx	lr

0800304a <LL_ADC_ClearFlag_OVR>:
{
 800304a:	b480      	push	{r7}
 800304c:	b083      	sub	sp, #12
 800304e:	af00      	add	r7, sp, #0
 8003050:	6078      	str	r0, [r7, #4]
  WRITE_REG(ADCx->SR, ~LL_ADC_FLAG_OVR);
 8003052:	687b      	ldr	r3, [r7, #4]
 8003054:	f06f 0220 	mvn.w	r2, #32
 8003058:	601a      	str	r2, [r3, #0]
}
 800305a:	bf00      	nop
 800305c:	370c      	adds	r7, #12
 800305e:	46bd      	mov	sp, r7
 8003060:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003064:	4770      	bx	lr

08003066 <LL_DMA_IsActiveFlag_TC0>:
{
 8003066:	b480      	push	{r7}
 8003068:	b083      	sub	sp, #12
 800306a:	af00      	add	r7, sp, #0
 800306c:	6078      	str	r0, [r7, #4]
  return (READ_BIT(DMAx->LISR ,DMA_LISR_TCIF0)==(DMA_LISR_TCIF0));
 800306e:	687b      	ldr	r3, [r7, #4]
 8003070:	681b      	ldr	r3, [r3, #0]
 8003072:	f003 0320 	and.w	r3, r3, #32
 8003076:	2b20      	cmp	r3, #32
 8003078:	bf0c      	ite	eq
 800307a:	2301      	moveq	r3, #1
 800307c:	2300      	movne	r3, #0
 800307e:	b2db      	uxtb	r3, r3
}
 8003080:	4618      	mov	r0, r3
 8003082:	370c      	adds	r7, #12
 8003084:	46bd      	mov	sp, r7
 8003086:	f85d 7b04 	ldr.w	r7, [sp], #4
 800308a:	4770      	bx	lr

0800308c <LL_DMA_IsActiveFlag_TE0>:
{
 800308c:	b480      	push	{r7}
 800308e:	b083      	sub	sp, #12
 8003090:	af00      	add	r7, sp, #0
 8003092:	6078      	str	r0, [r7, #4]
  return (READ_BIT(DMAx->LISR ,DMA_LISR_TEIF0)==(DMA_LISR_TEIF0));
 8003094:	687b      	ldr	r3, [r7, #4]
 8003096:	681b      	ldr	r3, [r3, #0]
 8003098:	f003 0308 	and.w	r3, r3, #8
 800309c:	2b08      	cmp	r3, #8
 800309e:	bf0c      	ite	eq
 80030a0:	2301      	moveq	r3, #1
 80030a2:	2300      	movne	r3, #0
 80030a4:	b2db      	uxtb	r3, r3
}
 80030a6:	4618      	mov	r0, r3
 80030a8:	370c      	adds	r7, #12
 80030aa:	46bd      	mov	sp, r7
 80030ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030b0:	4770      	bx	lr

080030b2 <LL_DMA_ClearFlag_TC0>:
{
 80030b2:	b480      	push	{r7}
 80030b4:	b083      	sub	sp, #12
 80030b6:	af00      	add	r7, sp, #0
 80030b8:	6078      	str	r0, [r7, #4]
  WRITE_REG(DMAx->LIFCR , DMA_LIFCR_CTCIF0);
 80030ba:	687b      	ldr	r3, [r7, #4]
 80030bc:	2220      	movs	r2, #32
 80030be:	609a      	str	r2, [r3, #8]
}
 80030c0:	bf00      	nop
 80030c2:	370c      	adds	r7, #12
 80030c4:	46bd      	mov	sp, r7
 80030c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030ca:	4770      	bx	lr

080030cc <LL_DMA_ClearFlag_TE0>:
{
 80030cc:	b480      	push	{r7}
 80030ce:	b083      	sub	sp, #12
 80030d0:	af00      	add	r7, sp, #0
 80030d2:	6078      	str	r0, [r7, #4]
  WRITE_REG(DMAx->LIFCR , DMA_LIFCR_CTEIF0);
 80030d4:	687b      	ldr	r3, [r7, #4]
 80030d6:	2208      	movs	r2, #8
 80030d8:	609a      	str	r2, [r3, #8]
}
 80030da:	bf00      	nop
 80030dc:	370c      	adds	r7, #12
 80030de:	46bd      	mov	sp, r7
 80030e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030e4:	4770      	bx	lr

080030e6 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80030e6:	b480      	push	{r7}
 80030e8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 80030ea:	e7fe      	b.n	80030ea <NMI_Handler+0x4>

080030ec <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80030ec:	b480      	push	{r7}
 80030ee:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80030f0:	e7fe      	b.n	80030f0 <HardFault_Handler+0x4>

080030f2 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80030f2:	b480      	push	{r7}
 80030f4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80030f6:	e7fe      	b.n	80030f6 <MemManage_Handler+0x4>

080030f8 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80030f8:	b480      	push	{r7}
 80030fa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80030fc:	e7fe      	b.n	80030fc <BusFault_Handler+0x4>

080030fe <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80030fe:	b480      	push	{r7}
 8003100:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8003102:	e7fe      	b.n	8003102 <UsageFault_Handler+0x4>

08003104 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8003104:	b480      	push	{r7}
 8003106:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8003108:	bf00      	nop
 800310a:	46bd      	mov	sp, r7
 800310c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003110:	4770      	bx	lr

08003112 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8003112:	b480      	push	{r7}
 8003114:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8003116:	bf00      	nop
 8003118:	46bd      	mov	sp, r7
 800311a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800311e:	4770      	bx	lr

08003120 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8003120:	b480      	push	{r7}
 8003122:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8003124:	bf00      	nop
 8003126:	46bd      	mov	sp, r7
 8003128:	f85d 7b04 	ldr.w	r7, [sp], #4
 800312c:	4770      	bx	lr
	...

08003130 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8003130:	b580      	push	{r7, lr}
 8003132:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8003134:	f000 feea 	bl	8003f0c <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */
  Counter_0 += 1;
 8003138:	4b05      	ldr	r3, [pc, #20]	; (8003150 <SysTick_Handler+0x20>)
 800313a:	681b      	ldr	r3, [r3, #0]
 800313c:	3301      	adds	r3, #1
 800313e:	4a04      	ldr	r2, [pc, #16]	; (8003150 <SysTick_Handler+0x20>)
 8003140:	6013      	str	r3, [r2, #0]
  Counter_1 += 1;
 8003142:	4b04      	ldr	r3, [pc, #16]	; (8003154 <SysTick_Handler+0x24>)
 8003144:	681b      	ldr	r3, [r3, #0]
 8003146:	3301      	adds	r3, #1
 8003148:	4a02      	ldr	r2, [pc, #8]	; (8003154 <SysTick_Handler+0x24>)
 800314a:	6013      	str	r3, [r2, #0]
  /* USER CODE END SysTick_IRQn 1 */
}
 800314c:	bf00      	nop
 800314e:	bd80      	pop	{r7, pc}
 8003150:	2000035c 	.word	0x2000035c
 8003154:	20000360 	.word	0x20000360

08003158 <DMA1_Stream4_IRQHandler>:

/**
  * @brief This function handles DMA1 stream4 global interrupt.
  */
void DMA1_Stream4_IRQHandler(void)
{
 8003158:	b580      	push	{r7, lr}
 800315a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream4_IRQn 0 */

  /* USER CODE END DMA1_Stream4_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_spi2_tx);
 800315c:	4802      	ldr	r0, [pc, #8]	; (8003168 <DMA1_Stream4_IRQHandler+0x10>)
 800315e:	f001 f9cd 	bl	80044fc <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream4_IRQn 1 */

  /* USER CODE END DMA1_Stream4_IRQn 1 */
}
 8003162:	bf00      	nop
 8003164:	bd80      	pop	{r7, pc}
 8003166:	bf00      	nop
 8003168:	20000204 	.word	0x20000204

0800316c <ADC_IRQHandler>:

/**
  * @brief This function handles ADC1 global interrupt.
  */
void ADC_IRQHandler(void)
{
 800316c:	b580      	push	{r7, lr}
 800316e:	af00      	add	r7, sp, #0

  /* USER CODE END ADC_IRQn 0 */

  /* USER CODE BEGIN ADC_IRQn 1 */
  /* Check whether ADC group regular overrun caused the ADC interruption */
  if(LL_ADC_IsActiveFlag_OVR(ADC1) != 0)
 8003170:	4805      	ldr	r0, [pc, #20]	; (8003188 <ADC_IRQHandler+0x1c>)
 8003172:	f7ff ff57 	bl	8003024 <LL_ADC_IsActiveFlag_OVR>
 8003176:	4603      	mov	r3, r0
 8003178:	2b00      	cmp	r3, #0
 800317a:	d002      	beq.n	8003182 <ADC_IRQHandler+0x16>
  {
    /* Clear flag ADC group regular overrun */
    LL_ADC_ClearFlag_OVR(ADC1);
 800317c:	4802      	ldr	r0, [pc, #8]	; (8003188 <ADC_IRQHandler+0x1c>)
 800317e:	f7ff ff64 	bl	800304a <LL_ADC_ClearFlag_OVR>

    /* Call interruption treatment function */
    //AdcGrpRegularOverrunError_Callback();
  }
  /* USER CODE END ADC_IRQn 1 */
}
 8003182:	bf00      	nop
 8003184:	bd80      	pop	{r7, pc}
 8003186:	bf00      	nop
 8003188:	40012000 	.word	0x40012000

0800318c <TIM3_IRQHandler>:

/**
  * @brief This function handles TIM3 global interrupt.
  */
void TIM3_IRQHandler(void)
{
 800318c:	b580      	push	{r7, lr}
 800318e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM3_IRQn 0 */

  /* USER CODE END TIM3_IRQn 0 */
  HAL_TIM_IRQHandler(&htim3);
 8003190:	4802      	ldr	r0, [pc, #8]	; (800319c <TIM3_IRQHandler+0x10>)
 8003192:	f005 f96b 	bl	800846c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM3_IRQn 1 */

  /* USER CODE END TIM3_IRQn 1 */
}
 8003196:	bf00      	nop
 8003198:	bd80      	pop	{r7, pc}
 800319a:	bf00      	nop
 800319c:	200002ac 	.word	0x200002ac

080031a0 <SPI2_IRQHandler>:

/**
  * @brief This function handles SPI2 global interrupt.
  */
void SPI2_IRQHandler(void)
{
 80031a0:	b580      	push	{r7, lr}
 80031a2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SPI2_IRQn 0 */

  /* USER CODE END SPI2_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi2);
 80031a4:	4802      	ldr	r0, [pc, #8]	; (80031b0 <SPI2_IRQHandler+0x10>)
 80031a6:	f004 fc29 	bl	80079fc <HAL_SPI_IRQHandler>
  /* USER CODE BEGIN SPI2_IRQn 1 */

  /* USER CODE END SPI2_IRQn 1 */
}
 80031aa:	bf00      	nop
 80031ac:	bd80      	pop	{r7, pc}
 80031ae:	bf00      	nop
 80031b0:	200001ac 	.word	0x200001ac

080031b4 <EXTI15_10_IRQHandler>:

/**
  * @brief This function handles EXTI line[15:10] interrupts.
  */
void EXTI15_10_IRQHandler(void)
{
 80031b4:	b580      	push	{r7, lr}
 80031b6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI15_10_IRQn 0 */

  /* USER CODE END EXTI15_10_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(TOUCH_INT_Pin);
 80031b8:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 80031bc:	f001 fdd8 	bl	8004d70 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI15_10_IRQn 1 */

  /* USER CODE END EXTI15_10_IRQn 1 */
}
 80031c0:	bf00      	nop
 80031c2:	bd80      	pop	{r7, pc}

080031c4 <DMA2_Stream0_IRQHandler>:

/**
  * @brief This function handles DMA2 stream0 global interrupt.
  */
void DMA2_Stream0_IRQHandler(void)
{
 80031c4:	b580      	push	{r7, lr}
 80031c6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream0_IRQn 0 */
  /* Check whether DMA transfer complete caused the DMA interruption */
  if(LL_DMA_IsActiveFlag_TC0(DMA2) == 1)
 80031c8:	480a      	ldr	r0, [pc, #40]	; (80031f4 <DMA2_Stream0_IRQHandler+0x30>)
 80031ca:	f7ff ff4c 	bl	8003066 <LL_DMA_IsActiveFlag_TC0>
 80031ce:	4603      	mov	r3, r0
 80031d0:	2b01      	cmp	r3, #1
 80031d2:	d104      	bne.n	80031de <DMA2_Stream0_IRQHandler+0x1a>
  {
    /* Clear flag DMA transfer complete */
    LL_DMA_ClearFlag_TC0(DMA2);
 80031d4:	4807      	ldr	r0, [pc, #28]	; (80031f4 <DMA2_Stream0_IRQHandler+0x30>)
 80031d6:	f7ff ff6c 	bl	80030b2 <LL_DMA_ClearFlag_TC0>

    /* Call interruption treatment function */
    AdcDmaTransferComplete_Callback();
 80031da:	f7ff f8f3 	bl	80023c4 <AdcDmaTransferComplete_Callback>
  }


  /* Check whether DMA transfer error caused the DMA interruption */
  if(LL_DMA_IsActiveFlag_TE0(DMA2) == 1)
 80031de:	4805      	ldr	r0, [pc, #20]	; (80031f4 <DMA2_Stream0_IRQHandler+0x30>)
 80031e0:	f7ff ff54 	bl	800308c <LL_DMA_IsActiveFlag_TE0>
 80031e4:	4603      	mov	r3, r0
 80031e6:	2b01      	cmp	r3, #1
 80031e8:	d102      	bne.n	80031f0 <DMA2_Stream0_IRQHandler+0x2c>
  {
    /* Clear flag DMA transfer error */
    LL_DMA_ClearFlag_TE0(DMA2);
 80031ea:	4802      	ldr	r0, [pc, #8]	; (80031f4 <DMA2_Stream0_IRQHandler+0x30>)
 80031ec:	f7ff ff6e 	bl	80030cc <LL_DMA_ClearFlag_TE0>
  /* USER CODE END DMA2_Stream0_IRQn 0 */

  /* USER CODE BEGIN DMA2_Stream0_IRQn 1 */

  /* USER CODE END DMA2_Stream0_IRQn 1 */
}
 80031f0:	bf00      	nop
 80031f2:	bd80      	pop	{r7, pc}
 80031f4:	40026400 	.word	0x40026400

080031f8 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80031f8:	b480      	push	{r7}
 80031fa:	af00      	add	r7, sp, #0
  return 1;
 80031fc:	2301      	movs	r3, #1
}
 80031fe:	4618      	mov	r0, r3
 8003200:	46bd      	mov	sp, r7
 8003202:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003206:	4770      	bx	lr

08003208 <_kill>:

int _kill(int pid, int sig)
{
 8003208:	b580      	push	{r7, lr}
 800320a:	b082      	sub	sp, #8
 800320c:	af00      	add	r7, sp, #0
 800320e:	6078      	str	r0, [r7, #4]
 8003210:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8003212:	f028 fb3f 	bl	802b894 <__errno>
 8003216:	4603      	mov	r3, r0
 8003218:	2216      	movs	r2, #22
 800321a:	601a      	str	r2, [r3, #0]
  return -1;
 800321c:	f04f 33ff 	mov.w	r3, #4294967295
}
 8003220:	4618      	mov	r0, r3
 8003222:	3708      	adds	r7, #8
 8003224:	46bd      	mov	sp, r7
 8003226:	bd80      	pop	{r7, pc}

08003228 <_exit>:

void _exit (int status)
{
 8003228:	b580      	push	{r7, lr}
 800322a:	b082      	sub	sp, #8
 800322c:	af00      	add	r7, sp, #0
 800322e:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8003230:	f04f 31ff 	mov.w	r1, #4294967295
 8003234:	6878      	ldr	r0, [r7, #4]
 8003236:	f7ff ffe7 	bl	8003208 <_kill>
  while (1) {}    /* Make sure we hang here */
 800323a:	e7fe      	b.n	800323a <_exit+0x12>

0800323c <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800323c:	b580      	push	{r7, lr}
 800323e:	b086      	sub	sp, #24
 8003240:	af00      	add	r7, sp, #0
 8003242:	60f8      	str	r0, [r7, #12]
 8003244:	60b9      	str	r1, [r7, #8]
 8003246:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8003248:	2300      	movs	r3, #0
 800324a:	617b      	str	r3, [r7, #20]
 800324c:	e00a      	b.n	8003264 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800324e:	f3af 8000 	nop.w
 8003252:	4601      	mov	r1, r0
 8003254:	68bb      	ldr	r3, [r7, #8]
 8003256:	1c5a      	adds	r2, r3, #1
 8003258:	60ba      	str	r2, [r7, #8]
 800325a:	b2ca      	uxtb	r2, r1
 800325c:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800325e:	697b      	ldr	r3, [r7, #20]
 8003260:	3301      	adds	r3, #1
 8003262:	617b      	str	r3, [r7, #20]
 8003264:	697a      	ldr	r2, [r7, #20]
 8003266:	687b      	ldr	r3, [r7, #4]
 8003268:	429a      	cmp	r2, r3
 800326a:	dbf0      	blt.n	800324e <_read+0x12>
  }

  return len;
 800326c:	687b      	ldr	r3, [r7, #4]
}
 800326e:	4618      	mov	r0, r3
 8003270:	3718      	adds	r7, #24
 8003272:	46bd      	mov	sp, r7
 8003274:	bd80      	pop	{r7, pc}

08003276 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8003276:	b580      	push	{r7, lr}
 8003278:	b086      	sub	sp, #24
 800327a:	af00      	add	r7, sp, #0
 800327c:	60f8      	str	r0, [r7, #12]
 800327e:	60b9      	str	r1, [r7, #8]
 8003280:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8003282:	2300      	movs	r3, #0
 8003284:	617b      	str	r3, [r7, #20]
 8003286:	e009      	b.n	800329c <_write+0x26>
  {
    __io_putchar(*ptr++);
 8003288:	68bb      	ldr	r3, [r7, #8]
 800328a:	1c5a      	adds	r2, r3, #1
 800328c:	60ba      	str	r2, [r7, #8]
 800328e:	781b      	ldrb	r3, [r3, #0]
 8003290:	4618      	mov	r0, r3
 8003292:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8003296:	697b      	ldr	r3, [r7, #20]
 8003298:	3301      	adds	r3, #1
 800329a:	617b      	str	r3, [r7, #20]
 800329c:	697a      	ldr	r2, [r7, #20]
 800329e:	687b      	ldr	r3, [r7, #4]
 80032a0:	429a      	cmp	r2, r3
 80032a2:	dbf1      	blt.n	8003288 <_write+0x12>
  }
  return len;
 80032a4:	687b      	ldr	r3, [r7, #4]
}
 80032a6:	4618      	mov	r0, r3
 80032a8:	3718      	adds	r7, #24
 80032aa:	46bd      	mov	sp, r7
 80032ac:	bd80      	pop	{r7, pc}

080032ae <_close>:

int _close(int file)
{
 80032ae:	b480      	push	{r7}
 80032b0:	b083      	sub	sp, #12
 80032b2:	af00      	add	r7, sp, #0
 80032b4:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80032b6:	f04f 33ff 	mov.w	r3, #4294967295
}
 80032ba:	4618      	mov	r0, r3
 80032bc:	370c      	adds	r7, #12
 80032be:	46bd      	mov	sp, r7
 80032c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032c4:	4770      	bx	lr

080032c6 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80032c6:	b480      	push	{r7}
 80032c8:	b083      	sub	sp, #12
 80032ca:	af00      	add	r7, sp, #0
 80032cc:	6078      	str	r0, [r7, #4]
 80032ce:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80032d0:	683b      	ldr	r3, [r7, #0]
 80032d2:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80032d6:	605a      	str	r2, [r3, #4]
  return 0;
 80032d8:	2300      	movs	r3, #0
}
 80032da:	4618      	mov	r0, r3
 80032dc:	370c      	adds	r7, #12
 80032de:	46bd      	mov	sp, r7
 80032e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032e4:	4770      	bx	lr

080032e6 <_isatty>:

int _isatty(int file)
{
 80032e6:	b480      	push	{r7}
 80032e8:	b083      	sub	sp, #12
 80032ea:	af00      	add	r7, sp, #0
 80032ec:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80032ee:	2301      	movs	r3, #1
}
 80032f0:	4618      	mov	r0, r3
 80032f2:	370c      	adds	r7, #12
 80032f4:	46bd      	mov	sp, r7
 80032f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032fa:	4770      	bx	lr

080032fc <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80032fc:	b480      	push	{r7}
 80032fe:	b085      	sub	sp, #20
 8003300:	af00      	add	r7, sp, #0
 8003302:	60f8      	str	r0, [r7, #12]
 8003304:	60b9      	str	r1, [r7, #8]
 8003306:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8003308:	2300      	movs	r3, #0
}
 800330a:	4618      	mov	r0, r3
 800330c:	3714      	adds	r7, #20
 800330e:	46bd      	mov	sp, r7
 8003310:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003314:	4770      	bx	lr
	...

08003318 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8003318:	b580      	push	{r7, lr}
 800331a:	b086      	sub	sp, #24
 800331c:	af00      	add	r7, sp, #0
 800331e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8003320:	4a14      	ldr	r2, [pc, #80]	; (8003374 <_sbrk+0x5c>)
 8003322:	4b15      	ldr	r3, [pc, #84]	; (8003378 <_sbrk+0x60>)
 8003324:	1ad3      	subs	r3, r2, r3
 8003326:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8003328:	697b      	ldr	r3, [r7, #20]
 800332a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800332c:	4b13      	ldr	r3, [pc, #76]	; (800337c <_sbrk+0x64>)
 800332e:	681b      	ldr	r3, [r3, #0]
 8003330:	2b00      	cmp	r3, #0
 8003332:	d102      	bne.n	800333a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8003334:	4b11      	ldr	r3, [pc, #68]	; (800337c <_sbrk+0x64>)
 8003336:	4a12      	ldr	r2, [pc, #72]	; (8003380 <_sbrk+0x68>)
 8003338:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800333a:	4b10      	ldr	r3, [pc, #64]	; (800337c <_sbrk+0x64>)
 800333c:	681a      	ldr	r2, [r3, #0]
 800333e:	687b      	ldr	r3, [r7, #4]
 8003340:	4413      	add	r3, r2
 8003342:	693a      	ldr	r2, [r7, #16]
 8003344:	429a      	cmp	r2, r3
 8003346:	d207      	bcs.n	8003358 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8003348:	f028 faa4 	bl	802b894 <__errno>
 800334c:	4603      	mov	r3, r0
 800334e:	220c      	movs	r2, #12
 8003350:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8003352:	f04f 33ff 	mov.w	r3, #4294967295
 8003356:	e009      	b.n	800336c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8003358:	4b08      	ldr	r3, [pc, #32]	; (800337c <_sbrk+0x64>)
 800335a:	681b      	ldr	r3, [r3, #0]
 800335c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800335e:	4b07      	ldr	r3, [pc, #28]	; (800337c <_sbrk+0x64>)
 8003360:	681a      	ldr	r2, [r3, #0]
 8003362:	687b      	ldr	r3, [r7, #4]
 8003364:	4413      	add	r3, r2
 8003366:	4a05      	ldr	r2, [pc, #20]	; (800337c <_sbrk+0x64>)
 8003368:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800336a:	68fb      	ldr	r3, [r7, #12]
}
 800336c:	4618      	mov	r0, r3
 800336e:	3718      	adds	r7, #24
 8003370:	46bd      	mov	sp, r7
 8003372:	bd80      	pop	{r7, pc}
 8003374:	20020000 	.word	0x20020000
 8003378:	00000400 	.word	0x00000400
 800337c:	2000036c 	.word	0x2000036c
 8003380:	20002e88 	.word	0x20002e88

08003384 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8003384:	b480      	push	{r7}
 8003386:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8003388:	4b06      	ldr	r3, [pc, #24]	; (80033a4 <SystemInit+0x20>)
 800338a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800338e:	4a05      	ldr	r2, [pc, #20]	; (80033a4 <SystemInit+0x20>)
 8003390:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8003394:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8003398:	bf00      	nop
 800339a:	46bd      	mov	sp, r7
 800339c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033a0:	4770      	bx	lr
 80033a2:	bf00      	nop
 80033a4:	e000ed00 	.word	0xe000ed00

080033a8 <Displ_Select>:

/******************************************
 * @brief	enable display, disabling touch
 * 			device selected if CS low
 ******************************************/
void Displ_Select(void) {
 80033a8:	b580      	push	{r7, lr}
 80033aa:	af00      	add	r7, sp, #0
	if (TOUCH_SPI==DISPL_SPI){														// if SPI port shared (display <-> touch)
		if (HAL_GPIO_ReadPin(DISPL_CS_GPIO_Port, DISPL_CS_Pin)) {					// if display not yet selected
 80033ac:	f44f 7180 	mov.w	r1, #256	; 0x100
 80033b0:	4810      	ldr	r0, [pc, #64]	; (80033f4 <Displ_Select+0x4c>)
 80033b2:	f001 fc91 	bl	8004cd8 <HAL_GPIO_ReadPin>
 80033b6:	4603      	mov	r3, r0
 80033b8:	2b00      	cmp	r3, #0
 80033ba:	d018      	beq.n	80033ee <Displ_Select+0x46>
			HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET); 		// unselect touch
 80033bc:	2201      	movs	r2, #1
 80033be:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80033c2:	480d      	ldr	r0, [pc, #52]	; (80033f8 <Displ_Select+0x50>)
 80033c4:	f001 fca0 	bl	8004d08 <HAL_GPIO_WritePin>
			SET_DISPL_SPI_BAUDRATE;				   									//change SPI port speed as per display needs
 80033c8:	4b0c      	ldr	r3, [pc, #48]	; (80033fc <Displ_Select+0x54>)
 80033ca:	681a      	ldr	r2, [r3, #0]
 80033cc:	490b      	ldr	r1, [pc, #44]	; (80033fc <Displ_Select+0x54>)
 80033ce:	f64f 73c7 	movw	r3, #65479	; 0xffc7
 80033d2:	4013      	ands	r3, r2
 80033d4:	600b      	str	r3, [r1, #0]
 80033d6:	4b09      	ldr	r3, [pc, #36]	; (80033fc <Displ_Select+0x54>)
 80033d8:	681b      	ldr	r3, [r3, #0]
 80033da:	4a08      	ldr	r2, [pc, #32]	; (80033fc <Displ_Select+0x54>)
 80033dc:	f043 0308 	orr.w	r3, r3, #8
 80033e0:	6013      	str	r3, [r2, #0]
			HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_RESET);	// select display
 80033e2:	2200      	movs	r2, #0
 80033e4:	f44f 7180 	mov.w	r1, #256	; 0x100
 80033e8:	4802      	ldr	r0, [pc, #8]	; (80033f4 <Displ_Select+0x4c>)
 80033ea:	f001 fc8d 	bl	8004d08 <HAL_GPIO_WritePin>
		}
	}
}
 80033ee:	bf00      	nop
 80033f0:	bd80      	pop	{r7, pc}
 80033f2:	bf00      	nop
 80033f4:	40020000 	.word	0x40020000
 80033f8:	40020400 	.word	0x40020400
 80033fc:	40003800 	.word	0x40003800

08003400 <Displ_Transmit>:
 * @PARAM	DC_Status 	indicates if sending command or data
 * 			data		buffer data to send
 * 			dataSize	number of bytes in "data" to be sent
 * 			isTouchGFXBuffer 1 only when called by touchgfxDisplayDriverTransmitBlock (for byte endian conversion). All other cases 0
 **************************/
void Displ_Transmit(GPIO_PinState DC_Status, uint8_t* data, uint16_t dataSize, uint8_t isTouchGFXBuffer ){
 8003400:	b580      	push	{r7, lr}
 8003402:	b086      	sub	sp, #24
 8003404:	af00      	add	r7, sp, #0
 8003406:	6039      	str	r1, [r7, #0]
 8003408:	4611      	mov	r1, r2
 800340a:	461a      	mov	r2, r3
 800340c:	4603      	mov	r3, r0
 800340e:	71fb      	strb	r3, [r7, #7]
 8003410:	460b      	mov	r3, r1
 8003412:	80bb      	strh	r3, [r7, #4]
 8003414:	4613      	mov	r3, r2
 8003416:	71bb      	strb	r3, [r7, #6]

	while (!Displ_SpiAvailable) {};  // waiting for a free SPI port. Flag is set to 1 by transmission-complete interrupt callback
 8003418:	bf00      	nop
 800341a:	4b25      	ldr	r3, [pc, #148]	; (80034b0 <Displ_Transmit+0xb0>)
 800341c:	781b      	ldrb	r3, [r3, #0]
 800341e:	b2db      	uxtb	r3, r3
 8003420:	2b00      	cmp	r3, #0
 8003422:	d0fa      	beq.n	800341a <Displ_Transmit+0x1a>

	Displ_Select();
 8003424:	f7ff ffc0 	bl	80033a8 <Displ_Select>
	HAL_GPIO_WritePin(DISPL_DC_GPIO_Port, DISPL_DC_Pin, DC_Status);
 8003428:	79fb      	ldrb	r3, [r7, #7]
 800342a:	461a      	mov	r2, r3
 800342c:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8003430:	4820      	ldr	r0, [pc, #128]	; (80034b4 <Displ_Transmit+0xb4>)
 8003432:	f001 fc69 	bl	8004d08 <HAL_GPIO_WritePin>

	if (isTouchGFXBuffer){
 8003436:	79bb      	ldrb	r3, [r7, #6]
 8003438:	2b00      	cmp	r3, #0
 800343a:	d016      	beq.n	800346a <Displ_Transmit+0x6a>
#ifdef Z_RGB565
//if color format is RGB565 just swap even and odd bytes correcting endianess for ILI driver
		uint32_t *limit=(uint32_t*)(data+dataSize);
 800343c:	88bb      	ldrh	r3, [r7, #4]
 800343e:	683a      	ldr	r2, [r7, #0]
 8003440:	4413      	add	r3, r2
 8003442:	613b      	str	r3, [r7, #16]
		for (uint32_t *data32=(uint32_t*)data; data32<limit; data32++) {
 8003444:	683b      	ldr	r3, [r7, #0]
 8003446:	617b      	str	r3, [r7, #20]
 8003448:	e00b      	b.n	8003462 <Displ_Transmit+0x62>
			*data32=__REV16(*data32);
 800344a:	697b      	ldr	r3, [r7, #20]
 800344c:	681b      	ldr	r3, [r3, #0]
 800344e:	60fb      	str	r3, [r7, #12]
  __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 8003450:	68fb      	ldr	r3, [r7, #12]
 8003452:	ba5b      	rev16	r3, r3
 8003454:	60bb      	str	r3, [r7, #8]
  return result;
 8003456:	68ba      	ldr	r2, [r7, #8]
 8003458:	697b      	ldr	r3, [r7, #20]
 800345a:	601a      	str	r2, [r3, #0]
		for (uint32_t *data32=(uint32_t*)data; data32<limit; data32++) {
 800345c:	697b      	ldr	r3, [r7, #20]
 800345e:	3304      	adds	r3, #4
 8003460:	617b      	str	r3, [r7, #20]
 8003462:	697a      	ldr	r2, [r7, #20]
 8003464:	693b      	ldr	r3, [r7, #16]
 8003466:	429a      	cmp	r2, r3
 8003468:	d3ef      	bcc.n	800344a <Displ_Transmit+0x4a>
#ifdef DISPLAY_SPI_INTERRUPT_MODE
		Displ_SpiAvailable=0;
		HAL_SPI_Transmit_IT(&DISPL_SPI_PORT , data, dataSize);
#else
#ifdef DISPLAY_SPI_DMA_MODE
		if (dataSize<DISPL_DMA_CUTOFF) {
 800346a:	88bb      	ldrh	r3, [r7, #4]
 800346c:	2b13      	cmp	r3, #19
 800346e:	d812      	bhi.n	8003496 <Displ_Transmit+0x96>
#endif //DISPLAY_SPI_DMA_MODE
			Displ_SpiAvailable=0;
 8003470:	4b0f      	ldr	r3, [pc, #60]	; (80034b0 <Displ_Transmit+0xb0>)
 8003472:	2200      	movs	r2, #0
 8003474:	701a      	strb	r2, [r3, #0]
			HAL_SPI_Transmit(&DISPL_SPI_PORT , data, dataSize, HAL_MAX_DELAY);
 8003476:	88ba      	ldrh	r2, [r7, #4]
 8003478:	f04f 33ff 	mov.w	r3, #4294967295
 800347c:	6839      	ldr	r1, [r7, #0]
 800347e:	480e      	ldr	r0, [pc, #56]	; (80034b8 <Displ_Transmit+0xb8>)
 8003480:	f003 fdff 	bl	8007082 <HAL_SPI_Transmit>
			Displ_SpiAvailable=1;
 8003484:	4b0a      	ldr	r3, [pc, #40]	; (80034b0 <Displ_Transmit+0xb0>)
 8003486:	2201      	movs	r2, #1
 8003488:	701a      	strb	r2, [r3, #0]
#ifdef DISPLAY_USING_TOUCHGFX
			if (isTouchGFXBuffer){
 800348a:	79bb      	ldrb	r3, [r7, #6]
 800348c:	2b00      	cmp	r3, #0
 800348e:	d00b      	beq.n	80034a8 <Displ_Transmit+0xa8>
				DisplayDriver_TransferCompleteCallback();
 8003490:	f00e ff68 	bl	8012364 <DisplayDriver_TransferCompleteCallback>
			Displ_SpiAvailable=0;
			HAL_SPI_Transmit_DMA(&DISPL_SPI_PORT , data, dataSize);
		}
#endif //DISPLAY_SPI_DMA_MODE
#endif //DISPLAY_SPI_INTERRUPT_MODE
	}
 8003494:	e008      	b.n	80034a8 <Displ_Transmit+0xa8>
			Displ_SpiAvailable=0;
 8003496:	4b06      	ldr	r3, [pc, #24]	; (80034b0 <Displ_Transmit+0xb0>)
 8003498:	2200      	movs	r2, #0
 800349a:	701a      	strb	r2, [r3, #0]
			HAL_SPI_Transmit_DMA(&DISPL_SPI_PORT , data, dataSize);
 800349c:	88bb      	ldrh	r3, [r7, #4]
 800349e:	461a      	mov	r2, r3
 80034a0:	6839      	ldr	r1, [r7, #0]
 80034a2:	4805      	ldr	r0, [pc, #20]	; (80034b8 <Displ_Transmit+0xb8>)
 80034a4:	f004 f9f8 	bl	8007898 <HAL_SPI_Transmit_DMA>
	}
 80034a8:	bf00      	nop
 80034aa:	3718      	adds	r7, #24
 80034ac:	46bd      	mov	sp, r7
 80034ae:	bd80      	pop	{r7, pc}
 80034b0:	20000008 	.word	0x20000008
 80034b4:	40020000 	.word	0x40020000
 80034b8:	200001ac 	.word	0x200001ac

080034bc <Displ_WriteCommand>:


/**********************************
 * @BRIEF	transmit a byte in a SPI_COMMAND format
 **********************************/
void Displ_WriteCommand(uint8_t cmd){
 80034bc:	b580      	push	{r7, lr}
 80034be:	b082      	sub	sp, #8
 80034c0:	af00      	add	r7, sp, #0
 80034c2:	4603      	mov	r3, r0
 80034c4:	71fb      	strb	r3, [r7, #7]
	Displ_Transmit(SPI_COMMAND, &cmd, sizeof(cmd),0);
 80034c6:	1df9      	adds	r1, r7, #7
 80034c8:	2300      	movs	r3, #0
 80034ca:	2201      	movs	r2, #1
 80034cc:	2000      	movs	r0, #0
 80034ce:	f7ff ff97 	bl	8003400 <Displ_Transmit>
}
 80034d2:	bf00      	nop
 80034d4:	3708      	adds	r7, #8
 80034d6:	46bd      	mov	sp, r7
 80034d8:	bd80      	pop	{r7, pc}

080034da <Displ_WriteData>:
 * @BRIEF	transmit a set of data in a SPI_DATA format
 * @PARAM 	data		buffer data to send
 * 			dataSize	number of bytes in "data" to be sent
 * 			isTouchGFXBuffer 1 only when called by touchgfxDisplayDriverTransmitBlock (for byte endian conversion). All other cases 0
 **********************************/
void Displ_WriteData(uint8_t* buff, size_t buff_size, uint8_t isTouchGFXBuffer){
 80034da:	b580      	push	{r7, lr}
 80034dc:	b084      	sub	sp, #16
 80034de:	af00      	add	r7, sp, #0
 80034e0:	60f8      	str	r0, [r7, #12]
 80034e2:	60b9      	str	r1, [r7, #8]
 80034e4:	4613      	mov	r3, r2
 80034e6:	71fb      	strb	r3, [r7, #7]
	if (buff_size==0) return;
 80034e8:	68bb      	ldr	r3, [r7, #8]
 80034ea:	2b00      	cmp	r3, #0
 80034ec:	d007      	beq.n	80034fe <Displ_WriteData+0x24>
	Displ_Transmit(SPI_DATA, buff, buff_size, isTouchGFXBuffer);
 80034ee:	68bb      	ldr	r3, [r7, #8]
 80034f0:	b29a      	uxth	r2, r3
 80034f2:	79fb      	ldrb	r3, [r7, #7]
 80034f4:	68f9      	ldr	r1, [r7, #12]
 80034f6:	2001      	movs	r0, #1
 80034f8:	f7ff ff82 	bl	8003400 <Displ_Transmit>
 80034fc:	e000      	b.n	8003500 <Displ_WriteData+0x26>
	if (buff_size==0) return;
 80034fe:	bf00      	nop
}
 8003500:	3710      	adds	r7, #16
 8003502:	46bd      	mov	sp, r7
 8003504:	bd80      	pop	{r7, pc}
	...

08003508 <ILI9XXX_Init>:


/**********************************
 * @brief	ILIXXX initialization sequence
 **********************************/
void ILI9XXX_Init(){
 8003508:	b580      	push	{r7, lr}
 800350a:	af00      	add	r7, sp, #0
	Displ_Select();
 800350c:	f7ff ff4c 	bl	80033a8 <Displ_Select>

	HAL_GPIO_WritePin(DISPL_RST_GPIO_Port, DISPL_RST_Pin, GPIO_PIN_RESET);
 8003510:	2200      	movs	r2, #0
 8003512:	f44f 7100 	mov.w	r1, #512	; 0x200
 8003516:	481a      	ldr	r0, [pc, #104]	; (8003580 <ILI9XXX_Init+0x78>)
 8003518:	f001 fbf6 	bl	8004d08 <HAL_GPIO_WritePin>
	HAL_Delay(1);
 800351c:	2001      	movs	r0, #1
 800351e:	f000 fd15 	bl	8003f4c <HAL_Delay>
	HAL_GPIO_WritePin(DISPL_RST_GPIO_Port, DISPL_RST_Pin, GPIO_PIN_SET);
 8003522:	2201      	movs	r2, #1
 8003524:	f44f 7100 	mov.w	r1, #512	; 0x200
 8003528:	4815      	ldr	r0, [pc, #84]	; (8003580 <ILI9XXX_Init+0x78>)
 800352a:	f001 fbed 	bl	8004d08 <HAL_GPIO_WritePin>
	HAL_Delay(150);
 800352e:	2096      	movs	r0, #150	; 0x96
 8003530:	f000 fd0c 	bl	8003f4c <HAL_Delay>
		Displ_WriteData(data,3);
	#endif
*/


	Displ_WriteCommand(ILI9XXX_PIXEL_FORMAT);
 8003534:	203a      	movs	r0, #58	; 0x3a
 8003536:	f7ff ffc1 	bl	80034bc <Displ_WriteCommand>
#ifdef Z_RGB666
	Displ_WriteData((uint8_t *)"\x66",1,0);		// RGB666
#endif
#ifdef Z_RGB565
	Displ_WriteData((uint8_t *)"\x55",1,0);		// RGB565
 800353a:	2200      	movs	r2, #0
 800353c:	2101      	movs	r1, #1
 800353e:	4811      	ldr	r0, [pc, #68]	; (8003584 <ILI9XXX_Init+0x7c>)
 8003540:	f7ff ffcb 	bl	80034da <Displ_WriteData>
#endif
	Displ_WriteCommand(ILI9XXX_RGB_INTERFACE);
 8003544:	20b0      	movs	r0, #176	; 0xb0
 8003546:	f7ff ffb9 	bl	80034bc <Displ_WriteCommand>
	Displ_WriteData((uint8_t *)"\x80",1,0);        // disable MISO pin
 800354a:	2200      	movs	r2, #0
 800354c:	2101      	movs	r1, #1
 800354e:	480e      	ldr	r0, [pc, #56]	; (8003588 <ILI9XXX_Init+0x80>)
 8003550:	f7ff ffc3 	bl	80034da <Displ_WriteData>

	Displ_WriteCommand(ILI9XXX_RGB_INTERFACE);
 8003554:	20b0      	movs	r0, #176	; 0xb0
 8003556:	f7ff ffb1 	bl	80034bc <Displ_WriteCommand>
	Displ_WriteData((uint8_t *)"\x80",1,0);        // disable MISO pin
 800355a:	2200      	movs	r2, #0
 800355c:	2101      	movs	r1, #1
 800355e:	480a      	ldr	r0, [pc, #40]	; (8003588 <ILI9XXX_Init+0x80>)
 8003560:	f7ff ffbb 	bl	80034da <Displ_WriteData>

	Displ_WriteCommand(ILI9XXX_SLEEP_OUT);
 8003564:	2011      	movs	r0, #17
 8003566:	f7ff ffa9 	bl	80034bc <Displ_WriteCommand>
	HAL_Delay(120);
 800356a:	2078      	movs	r0, #120	; 0x78
 800356c:	f000 fcee 	bl	8003f4c <HAL_Delay>

	Displ_WriteCommand(ILI9XXX_DISPLAY_ON);
 8003570:	2029      	movs	r0, #41	; 0x29
 8003572:	f7ff ffa3 	bl	80034bc <Displ_WriteCommand>
	HAL_Delay(5);
 8003576:	2005      	movs	r0, #5
 8003578:	f000 fce8 	bl	8003f4c <HAL_Delay>

}
 800357c:	bf00      	nop
 800357e:	bd80      	pop	{r7, pc}
 8003580:	40020000 	.word	0x40020000
 8003584:	0802c3b0 	.word	0x0802c3b0
 8003588:	0802c3b4 	.word	0x0802c3b4

0800358c <Displ_SetAddressWindow>:
 * 			information
 * @param  x1,y1,x2,y2 top left and bottom
 * 					   right corner of the area
 * 					   to write
 **********************************************/
void Displ_SetAddressWindow(uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2) {
 800358c:	b590      	push	{r4, r7, lr}
 800358e:	b083      	sub	sp, #12
 8003590:	af00      	add	r7, sp, #0
 8003592:	4604      	mov	r4, r0
 8003594:	4608      	mov	r0, r1
 8003596:	4611      	mov	r1, r2
 8003598:	461a      	mov	r2, r3
 800359a:	4623      	mov	r3, r4
 800359c:	80fb      	strh	r3, [r7, #6]
 800359e:	4603      	mov	r3, r0
 80035a0:	80bb      	strh	r3, [r7, #4]
 80035a2:	460b      	mov	r3, r1
 80035a4:	807b      	strh	r3, [r7, #2]
 80035a6:	4613      	mov	r3, r2
 80035a8:	803b      	strh	r3, [r7, #0]
	static uint8_t data[4];

	((uint32_t *)data)[0]=(((x2 & 0xFF)<<24) | ((x2 & 0xFF00)<<8) | ((x1 & 0xFF)<<8) | ((x1 & 0xFF00)>>8) );
 80035aa:	887b      	ldrh	r3, [r7, #2]
 80035ac:	061a      	lsls	r2, r3, #24
 80035ae:	887b      	ldrh	r3, [r7, #2]
 80035b0:	021b      	lsls	r3, r3, #8
 80035b2:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 80035b6:	431a      	orrs	r2, r3
 80035b8:	88fb      	ldrh	r3, [r7, #6]
 80035ba:	021b      	lsls	r3, r3, #8
 80035bc:	b29b      	uxth	r3, r3
 80035be:	4313      	orrs	r3, r2
 80035c0:	88fa      	ldrh	r2, [r7, #6]
 80035c2:	0a12      	lsrs	r2, r2, #8
 80035c4:	b292      	uxth	r2, r2
 80035c6:	431a      	orrs	r2, r3
 80035c8:	4b14      	ldr	r3, [pc, #80]	; (800361c <Displ_SetAddressWindow+0x90>)
 80035ca:	601a      	str	r2, [r3, #0]
	Displ_WriteCommand(ILI9XXX_COLUMN_ADDR);
 80035cc:	202a      	movs	r0, #42	; 0x2a
 80035ce:	f7ff ff75 	bl	80034bc <Displ_WriteCommand>
	Displ_WriteData(data, 4,0);
 80035d2:	2200      	movs	r2, #0
 80035d4:	2104      	movs	r1, #4
 80035d6:	4811      	ldr	r0, [pc, #68]	; (800361c <Displ_SetAddressWindow+0x90>)
 80035d8:	f7ff ff7f 	bl	80034da <Displ_WriteData>

	((uint32_t *)data)[0]=(((y2 & 0xFF)<<24) | ((y2 & 0xFF00)<<8) | ((y1 & 0xFF)<<8) | ((y1 & 0xFF00)>>8) );
 80035dc:	883b      	ldrh	r3, [r7, #0]
 80035de:	061a      	lsls	r2, r3, #24
 80035e0:	883b      	ldrh	r3, [r7, #0]
 80035e2:	021b      	lsls	r3, r3, #8
 80035e4:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 80035e8:	431a      	orrs	r2, r3
 80035ea:	88bb      	ldrh	r3, [r7, #4]
 80035ec:	021b      	lsls	r3, r3, #8
 80035ee:	b29b      	uxth	r3, r3
 80035f0:	4313      	orrs	r3, r2
 80035f2:	88ba      	ldrh	r2, [r7, #4]
 80035f4:	0a12      	lsrs	r2, r2, #8
 80035f6:	b292      	uxth	r2, r2
 80035f8:	431a      	orrs	r2, r3
 80035fa:	4b08      	ldr	r3, [pc, #32]	; (800361c <Displ_SetAddressWindow+0x90>)
 80035fc:	601a      	str	r2, [r3, #0]
	Displ_WriteCommand(ILI9XXX_PAGE_ADDR);
 80035fe:	202b      	movs	r0, #43	; 0x2b
 8003600:	f7ff ff5c 	bl	80034bc <Displ_WriteCommand>
	Displ_WriteData(data, 4,0);
 8003604:	2200      	movs	r2, #0
 8003606:	2104      	movs	r1, #4
 8003608:	4804      	ldr	r0, [pc, #16]	; (800361c <Displ_SetAddressWindow+0x90>)
 800360a:	f7ff ff66 	bl	80034da <Displ_WriteData>
	Displ_WriteCommand(ILI9XXX_MEMWR);
 800360e:	202c      	movs	r0, #44	; 0x2c
 8003610:	f7ff ff54 	bl	80034bc <Displ_WriteCommand>
}
 8003614:	bf00      	nop
 8003616:	370c      	adds	r7, #12
 8003618:	46bd      	mov	sp, r7
 800361a:	bd90      	pop	{r4, r7, pc}
 800361c:	20000378 	.word	0x20000378

08003620 <Displ_Init>:

/*****************************************************
 * @brief				first display initialization.
 * @param	orientation	display orientation
 *****************************************************/
void Displ_Init(Displ_Orientat_e orientation){
 8003620:	b580      	push	{r7, lr}
 8003622:	b082      	sub	sp, #8
 8003624:	af00      	add	r7, sp, #0
 8003626:	4603      	mov	r3, r0
 8003628:	71fb      	strb	r3, [r7, #7]
	if (TOUCH_SPI==DISPL_SPI){													// if touch and display share the same SPI port
		HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_SET); 		// unselect display (will be selected at writing time)
 800362a:	2201      	movs	r2, #1
 800362c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003630:	4809      	ldr	r0, [pc, #36]	; (8003658 <Displ_Init+0x38>)
 8003632:	f001 fb69 	bl	8004d08 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET);		// unselect touch (will be selected at writing time)
 8003636:	2201      	movs	r2, #1
 8003638:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800363c:	4807      	ldr	r0, [pc, #28]	; (800365c <Displ_Init+0x3c>)
 800363e:	f001 fb63 	bl	8004d08 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_RESET); 	// select display
		SET_DISPL_SPI_BAUDRATE;
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_RESET);	// select touch
		SET_TOUCH_SPI_BAUDRATE;
	}
	ILI9XXX_Init();
 8003642:	f7ff ff61 	bl	8003508 <ILI9XXX_Init>
	Displ_Orientation(orientation);
 8003646:	79fb      	ldrb	r3, [r7, #7]
 8003648:	4618      	mov	r0, r3
 800364a:	f000 f809 	bl	8003660 <Displ_Orientation>
}
 800364e:	bf00      	nop
 8003650:	3708      	adds	r7, #8
 8003652:	46bd      	mov	sp, r7
 8003654:	bd80      	pop	{r7, pc}
 8003656:	bf00      	nop
 8003658:	40020000 	.word	0x40020000
 800365c:	40020400 	.word	0x40020400

08003660 <Displ_Orientation>:

/**********************************************
 * @brief		set orientation of the display
 * @param  	m	orientation
 **********************************************/
void Displ_Orientation(Displ_Orientat_e orientation){
 8003660:	b580      	push	{r7, lr}
 8003662:	b082      	sub	sp, #8
 8003664:	af00      	add	r7, sp, #0
 8003666:	4603      	mov	r3, r0
 8003668:	71fb      	strb	r3, [r7, #7]
	static uint8_t data[1];
	switch(orientation) {
 800366a:	79fb      	ldrb	r3, [r7, #7]
 800366c:	2b03      	cmp	r3, #3
 800366e:	d837      	bhi.n	80036e0 <Displ_Orientation+0x80>
 8003670:	a201      	add	r2, pc, #4	; (adr r2, 8003678 <Displ_Orientation+0x18>)
 8003672:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003676:	bf00      	nop
 8003678:	08003689 	.word	0x08003689
 800367c:	0800369f 	.word	0x0800369f
 8003680:	080036b5 	.word	0x080036b5
 8003684:	080036cb 	.word	0x080036cb
		case Displ_Orientat_0:
			data[0]=ILI9XXX_MADCTL_0DEG;
 8003688:	4b1d      	ldr	r3, [pc, #116]	; (8003700 <Displ_Orientation+0xa0>)
 800368a:	2288      	movs	r2, #136	; 0x88
 800368c:	701a      	strb	r2, [r3, #0]
			_height = DISPL_HEIGHT;
 800368e:	4b1d      	ldr	r3, [pc, #116]	; (8003704 <Displ_Orientation+0xa4>)
 8003690:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8003694:	801a      	strh	r2, [r3, #0]
			_width = DISPL_WIDTH;
 8003696:	4b1c      	ldr	r3, [pc, #112]	; (8003708 <Displ_Orientation+0xa8>)
 8003698:	22f0      	movs	r2, #240	; 0xf0
 800369a:	801a      	strh	r2, [r3, #0]
			break;
 800369c:	e020      	b.n	80036e0 <Displ_Orientation+0x80>
		case Displ_Orientat_90:
			data[0]=ILI9XXX_MADCTL_90DEG;
 800369e:	4b18      	ldr	r3, [pc, #96]	; (8003700 <Displ_Orientation+0xa0>)
 80036a0:	22e8      	movs	r2, #232	; 0xe8
 80036a2:	701a      	strb	r2, [r3, #0]
			_height = DISPL_WIDTH;
 80036a4:	4b17      	ldr	r3, [pc, #92]	; (8003704 <Displ_Orientation+0xa4>)
 80036a6:	22f0      	movs	r2, #240	; 0xf0
 80036a8:	801a      	strh	r2, [r3, #0]
			_width = DISPL_HEIGHT;
 80036aa:	4b17      	ldr	r3, [pc, #92]	; (8003708 <Displ_Orientation+0xa8>)
 80036ac:	f44f 72a0 	mov.w	r2, #320	; 0x140
 80036b0:	801a      	strh	r2, [r3, #0]
			break;
 80036b2:	e015      	b.n	80036e0 <Displ_Orientation+0x80>
		case Displ_Orientat_180:
			data[0]=ILI9XXX_MADCTL_180DEG;
 80036b4:	4b12      	ldr	r3, [pc, #72]	; (8003700 <Displ_Orientation+0xa0>)
 80036b6:	2248      	movs	r2, #72	; 0x48
 80036b8:	701a      	strb	r2, [r3, #0]
			_height = DISPL_HEIGHT;
 80036ba:	4b12      	ldr	r3, [pc, #72]	; (8003704 <Displ_Orientation+0xa4>)
 80036bc:	f44f 72a0 	mov.w	r2, #320	; 0x140
 80036c0:	801a      	strh	r2, [r3, #0]
			_width = DISPL_WIDTH;
 80036c2:	4b11      	ldr	r3, [pc, #68]	; (8003708 <Displ_Orientation+0xa8>)
 80036c4:	22f0      	movs	r2, #240	; 0xf0
 80036c6:	801a      	strh	r2, [r3, #0]
			break;
 80036c8:	e00a      	b.n	80036e0 <Displ_Orientation+0x80>
		case Displ_Orientat_270:
			data[0]=ILI9XXX_MADCTL_270DEG;
 80036ca:	4b0d      	ldr	r3, [pc, #52]	; (8003700 <Displ_Orientation+0xa0>)
 80036cc:	2228      	movs	r2, #40	; 0x28
 80036ce:	701a      	strb	r2, [r3, #0]
			_height = DISPL_WIDTH;
 80036d0:	4b0c      	ldr	r3, [pc, #48]	; (8003704 <Displ_Orientation+0xa4>)
 80036d2:	22f0      	movs	r2, #240	; 0xf0
 80036d4:	801a      	strh	r2, [r3, #0]
			_width = DISPL_HEIGHT;
 80036d6:	4b0c      	ldr	r3, [pc, #48]	; (8003708 <Displ_Orientation+0xa8>)
 80036d8:	f44f 72a0 	mov.w	r2, #320	; 0x140
 80036dc:	801a      	strh	r2, [r3, #0]
			break;
 80036de:	bf00      	nop
	}
	Displ_WriteCommand(ILI9XXX_MADCTL);
 80036e0:	2036      	movs	r0, #54	; 0x36
 80036e2:	f7ff feeb 	bl	80034bc <Displ_WriteCommand>
	Displ_WriteData(data,1,0);
 80036e6:	2200      	movs	r2, #0
 80036e8:	2101      	movs	r1, #1
 80036ea:	4805      	ldr	r0, [pc, #20]	; (8003700 <Displ_Orientation+0xa0>)
 80036ec:	f7ff fef5 	bl	80034da <Displ_WriteData>
	current_orientation = orientation;  //stores active orientation into a global variable for touch routines
 80036f0:	4a06      	ldr	r2, [pc, #24]	; (800370c <Displ_Orientation+0xac>)
 80036f2:	79fb      	ldrb	r3, [r7, #7]
 80036f4:	7013      	strb	r3, [r2, #0]
}
 80036f6:	bf00      	nop
 80036f8:	3708      	adds	r7, #8
 80036fa:	46bd      	mov	sp, r7
 80036fc:	bd80      	pop	{r7, pc}
 80036fe:	bf00      	nop
 8003700:	2000037c 	.word	0x2000037c
 8003704:	20000374 	.word	0x20000374
 8003708:	20000372 	.word	0x20000372
 800370c:	20000370 	.word	0x20000370

08003710 <HAL_SPI_ErrorCallback>:




void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi){
 8003710:	b480      	push	{r7}
 8003712:	b083      	sub	sp, #12
 8003714:	af00      	add	r7, sp, #0
 8003716:	6078      	str	r0, [r7, #4]
	if (hspi->Instance==DISPL_SPI) {
 8003718:	687b      	ldr	r3, [r7, #4]
 800371a:	681b      	ldr	r3, [r3, #0]
 800371c:	4a05      	ldr	r2, [pc, #20]	; (8003734 <HAL_SPI_ErrorCallback+0x24>)
 800371e:	4293      	cmp	r3, r2
 8003720:	d102      	bne.n	8003728 <HAL_SPI_ErrorCallback+0x18>
		Displ_SpiAvailable=1;
 8003722:	4b05      	ldr	r3, [pc, #20]	; (8003738 <HAL_SPI_ErrorCallback+0x28>)
 8003724:	2201      	movs	r2, #1
 8003726:	701a      	strb	r2, [r3, #0]
	}
}
 8003728:	bf00      	nop
 800372a:	370c      	adds	r7, #12
 800372c:	46bd      	mov	sp, r7
 800372e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003732:	4770      	bx	lr
 8003734:	40003800 	.word	0x40003800
 8003738:	20000008 	.word	0x20000008

0800373c <HAL_SPI_TxCpltCallback>:





void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi) {
 800373c:	b580      	push	{r7, lr}
 800373e:	b082      	sub	sp, #8
 8003740:	af00      	add	r7, sp, #0
 8003742:	6078      	str	r0, [r7, #4]
	if (hspi->Instance==DISPL_SPI) {
 8003744:	687b      	ldr	r3, [r7, #4]
 8003746:	681b      	ldr	r3, [r3, #0]
 8003748:	4a05      	ldr	r2, [pc, #20]	; (8003760 <HAL_SPI_TxCpltCallback+0x24>)
 800374a:	4293      	cmp	r3, r2
 800374c:	d104      	bne.n	8003758 <HAL_SPI_TxCpltCallback+0x1c>
		Displ_SpiAvailable=1;
 800374e:	4b05      	ldr	r3, [pc, #20]	; (8003764 <HAL_SPI_TxCpltCallback+0x28>)
 8003750:	2201      	movs	r2, #1
 8003752:	701a      	strb	r2, [r3, #0]

	#ifdef DISPLAY_USING_TOUCHGFX
		DisplayDriver_TransferCompleteCallback();
 8003754:	f00e fe06 	bl	8012364 <DisplayDriver_TransferCompleteCallback>
	#endif

	}
}
 8003758:	bf00      	nop
 800375a:	3708      	adds	r7, #8
 800375c:	46bd      	mov	sp, r7
 800375e:	bd80      	pop	{r7, pc}
 8003760:	40003800 	.word	0x40003800
 8003764:	20000008 	.word	0x20000008

08003768 <Displ_BackLight>:
 *				'0'		set the display level to 0 (off)
 *				'I'		'Initialize'  IT MUST BE in dimming mode
 *              'Q'		do nothing, just return current level
 * @return		current backlight level
 **************************************/
uint32_t  Displ_BackLight(uint8_t cmd) {
 8003768:	b580      	push	{r7, lr}
 800376a:	b082      	sub	sp, #8
 800376c:	af00      	add	r7, sp, #0
 800376e:	4603      	mov	r3, r0
 8003770:	71fb      	strb	r3, [r7, #7]

#ifdef DISPLAY_DIMMING_MODE
	static uint16_t memCCR1=0;  			//it stores CCR1 value while in stand-by
#endif

	switch (cmd) {
 8003772:	79fb      	ldrb	r3, [r7, #7]
 8003774:	3b2b      	subs	r3, #43	; 0x2b
 8003776:	2b2c      	cmp	r3, #44	; 0x2c
 8003778:	f200 80b0 	bhi.w	80038dc <Displ_BackLight+0x174>
 800377c:	a201      	add	r2, pc, #4	; (adr r2, 8003784 <Displ_BackLight+0x1c>)
 800377e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003782:	bf00      	nop
 8003784:	08003881 	.word	0x08003881
 8003788:	080038dd 	.word	0x080038dd
 800378c:	080038ab 	.word	0x080038ab
 8003790:	080038dd 	.word	0x080038dd
 8003794:	080038dd 	.word	0x080038dd
 8003798:	0800384b 	.word	0x0800384b
 800379c:	0800383d 	.word	0x0800383d
 80037a0:	080038dd 	.word	0x080038dd
 80037a4:	080038dd 	.word	0x080038dd
 80037a8:	080038dd 	.word	0x080038dd
 80037ac:	080038dd 	.word	0x080038dd
 80037b0:	080038dd 	.word	0x080038dd
 80037b4:	080038dd 	.word	0x080038dd
 80037b8:	080038dd 	.word	0x080038dd
 80037bc:	080038dd 	.word	0x080038dd
 80037c0:	080038dd 	.word	0x080038dd
 80037c4:	080038dd 	.word	0x080038dd
 80037c8:	080038dd 	.word	0x080038dd
 80037cc:	080038dd 	.word	0x080038dd
 80037d0:	080038dd 	.word	0x080038dd
 80037d4:	080038dd 	.word	0x080038dd
 80037d8:	080038dd 	.word	0x080038dd
 80037dc:	080038dd 	.word	0x080038dd
 80037e0:	080038dd 	.word	0x080038dd
 80037e4:	080038dd 	.word	0x080038dd
 80037e8:	080038dd 	.word	0x080038dd
 80037ec:	080038dd 	.word	0x080038dd
 80037f0:	0800383d 	.word	0x0800383d
 80037f4:	080038dd 	.word	0x080038dd
 80037f8:	080038dd 	.word	0x080038dd
 80037fc:	080038cb 	.word	0x080038cb
 8003800:	080038dd 	.word	0x080038dd
 8003804:	080038dd 	.word	0x080038dd
 8003808:	080038dd 	.word	0x080038dd
 800380c:	080038dd 	.word	0x080038dd
 8003810:	080038dd 	.word	0x080038dd
 8003814:	080038dd 	.word	0x080038dd
 8003818:	080038dd 	.word	0x080038dd
 800381c:	08003839 	.word	0x08003839
 8003820:	080038dd 	.word	0x080038dd
 8003824:	08003861 	.word	0x08003861
 8003828:	080038dd 	.word	0x080038dd
 800382c:	080038dd 	.word	0x080038dd
 8003830:	080038dd 	.word	0x080038dd
 8003834:	08003855 	.word	0x08003855
	case 'Q':
		__NOP();
 8003838:	bf00      	nop
		break;
 800383a:	e052      	b.n	80038e2 <Displ_BackLight+0x17a>
		HAL_GPIO_WritePin(DISPL_LED_GPIO_Port, DISPL_LED_Pin, GPIO_PIN_RESET);
		break;
#else
	case 'F':
	case '1':
		BKLIT_TIMER->BKLIT_CCR=BKLIT_TIMER->ARR;
 800383c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003840:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8003844:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003846:	6353      	str	r3, [r2, #52]	; 0x34
		break;
 8003848:	e04b      	b.n	80038e2 <Displ_BackLight+0x17a>
	case '0':
		BKLIT_TIMER->BKLIT_CCR=0;
 800384a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800384e:	2200      	movs	r2, #0
 8003850:	635a      	str	r2, [r3, #52]	; 0x34
		break;
 8003852:	e046      	b.n	80038e2 <Displ_BackLight+0x17a>
	case 'W':
		BKLIT_TIMER->BKLIT_CCR=memCCR1;					//restore previous level
 8003854:	4b26      	ldr	r3, [pc, #152]	; (80038f0 <Displ_BackLight+0x188>)
 8003856:	881a      	ldrh	r2, [r3, #0]
 8003858:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800385c:	635a      	str	r2, [r3, #52]	; 0x34
		break;
 800385e:	e040      	b.n	80038e2 <Displ_BackLight+0x17a>
	case 'S':
		memCCR1=BKLIT_TIMER->BKLIT_CCR;
 8003860:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003864:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003866:	b29a      	uxth	r2, r3
 8003868:	4b21      	ldr	r3, [pc, #132]	; (80038f0 <Displ_BackLight+0x188>)
 800386a:	801a      	strh	r2, [r3, #0]
		if (BKLIT_TIMER->BKLIT_CCR>=(BKLIT_STBY_LEVEL))	//set stby level only if current level is higher
 800386c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003870:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003872:	2b31      	cmp	r3, #49	; 0x31
 8003874:	d934      	bls.n	80038e0 <Displ_BackLight+0x178>
			BKLIT_TIMER->BKLIT_CCR=(BKLIT_STBY_LEVEL);
 8003876:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800387a:	2232      	movs	r2, #50	; 0x32
 800387c:	635a      	str	r2, [r3, #52]	; 0x34
		break;
 800387e:	e02f      	b.n	80038e0 <Displ_BackLight+0x178>
	case '+':
		if (BKLIT_TIMER->ARR>BKLIT_TIMER->BKLIT_CCR)		// if CCR1 has not yet the highest value (ARR)
 8003880:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003884:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003886:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800388a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800388c:	429a      	cmp	r2, r3
 800388e:	d905      	bls.n	800389c <Displ_BackLight+0x134>
			++BKLIT_TIMER->BKLIT_CCR;
 8003890:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003894:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003896:	3201      	adds	r2, #1
 8003898:	635a      	str	r2, [r3, #52]	; 0x34
		else
			BKLIT_TIMER->BKLIT_CCR=BKLIT_TIMER->ARR;
		break;
 800389a:	e022      	b.n	80038e2 <Displ_BackLight+0x17a>
			BKLIT_TIMER->BKLIT_CCR=BKLIT_TIMER->ARR;
 800389c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80038a0:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80038a4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80038a6:	6353      	str	r3, [r2, #52]	; 0x34
		break;
 80038a8:	e01b      	b.n	80038e2 <Displ_BackLight+0x17a>
	case '-':
		if (BKLIT_TIMER->BKLIT_CCR>0)					// if CCR1 has not yet the lowest value (0)
 80038aa:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80038ae:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80038b0:	2b00      	cmp	r3, #0
 80038b2:	d005      	beq.n	80038c0 <Displ_BackLight+0x158>
			--BKLIT_TIMER->BKLIT_CCR;
 80038b4:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80038b8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80038ba:	3a01      	subs	r2, #1
 80038bc:	635a      	str	r2, [r3, #52]	; 0x34
		else
			BKLIT_TIMER->BKLIT_CCR=0;
		break;
 80038be:	e010      	b.n	80038e2 <Displ_BackLight+0x17a>
			BKLIT_TIMER->BKLIT_CCR=0;
 80038c0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80038c4:	2200      	movs	r2, #0
 80038c6:	635a      	str	r2, [r3, #52]	; 0x34
		break;
 80038c8:	e00b      	b.n	80038e2 <Displ_BackLight+0x17a>
	case 'I':
	  	HAL_TIM_PWM_Start(&BKLIT_T, BKLIT_CHANNEL);
 80038ca:	2100      	movs	r1, #0
 80038cc:	4809      	ldr	r0, [pc, #36]	; (80038f4 <Displ_BackLight+0x18c>)
 80038ce:	f004 fd1d 	bl	800830c <HAL_TIM_PWM_Start>
		BKLIT_TIMER->BKLIT_CCR=BKLIT_INIT_LEVEL;
 80038d2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80038d6:	2264      	movs	r2, #100	; 0x64
 80038d8:	635a      	str	r2, [r3, #52]	; 0x34
		break;
 80038da:	e002      	b.n	80038e2 <Displ_BackLight+0x17a>
#endif
	default:
		break;
 80038dc:	bf00      	nop
 80038de:	e000      	b.n	80038e2 <Displ_BackLight+0x17a>
		break;
 80038e0:	bf00      	nop
	}
#ifndef DISPLAY_DIMMING_MODE
	return HAL_GPIO_ReadPin(DISPL_LED_GPIO_Port, DISPL_LED_Pin);
#else
	return (BKLIT_TIMER->BKLIT_CCR);
 80038e2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80038e6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
#endif
}
 80038e8:	4618      	mov	r0, r3
 80038ea:	3708      	adds	r7, #8
 80038ec:	46bd      	mov	sp, r7
 80038ee:	bd80      	pop	{r7, pc}
 80038f0:	2000037e 	.word	0x2000037e
 80038f4:	20000264 	.word	0x20000264

080038f8 <touchgfxDisplayDriverTransmitActive>:
 * @brief	TouchGFX integration: returns status of
 * 			communication to the display
 * @return	1 = there is a transmission running
 * 			0 = no transmission
 *********************************************************/
int touchgfxDisplayDriverTransmitActive(){
 80038f8:	b480      	push	{r7}
 80038fa:	af00      	add	r7, sp, #0
	// using the flag indicating SPI port availability
	// already used to drive communication via DMA
	return (!Displ_SpiAvailable);
 80038fc:	4b06      	ldr	r3, [pc, #24]	; (8003918 <touchgfxDisplayDriverTransmitActive+0x20>)
 80038fe:	781b      	ldrb	r3, [r3, #0]
 8003900:	b2db      	uxtb	r3, r3
 8003902:	2b00      	cmp	r3, #0
 8003904:	bf0c      	ite	eq
 8003906:	2301      	moveq	r3, #1
 8003908:	2300      	movne	r3, #0
 800390a:	b2db      	uxtb	r3, r3
}
 800390c:	4618      	mov	r0, r3
 800390e:	46bd      	mov	sp, r7
 8003910:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003914:	4770      	bx	lr
 8003916:	bf00      	nop
 8003918:	20000008 	.word	0x20000008

0800391c <touchgfxDisplayDriverTransmitBlock>:

/*********************************************************
 * @brief	TouchGFX integration: write to display the
 * 			block indicated by parameters
 *********************************************************/
void touchgfxDisplayDriverTransmitBlock(const uint8_t* pixels, uint16_t x, uint16_t y, uint16_t w, uint16_t h){
 800391c:	b590      	push	{r4, r7, lr}
 800391e:	b085      	sub	sp, #20
 8003920:	af00      	add	r7, sp, #0
 8003922:	60f8      	str	r0, [r7, #12]
 8003924:	4608      	mov	r0, r1
 8003926:	4611      	mov	r1, r2
 8003928:	461a      	mov	r2, r3
 800392a:	4603      	mov	r3, r0
 800392c:	817b      	strh	r3, [r7, #10]
 800392e:	460b      	mov	r3, r1
 8003930:	813b      	strh	r3, [r7, #8]
 8003932:	4613      	mov	r3, r2
 8003934:	80fb      	strh	r3, [r7, #6]
	//START WRITING TO DISPLAY
		Displ_SetAddressWindow(x, y, x+w-1, y+h-1);
 8003936:	897a      	ldrh	r2, [r7, #10]
 8003938:	88fb      	ldrh	r3, [r7, #6]
 800393a:	4413      	add	r3, r2
 800393c:	b29b      	uxth	r3, r3
 800393e:	3b01      	subs	r3, #1
 8003940:	b29c      	uxth	r4, r3
 8003942:	893a      	ldrh	r2, [r7, #8]
 8003944:	8c3b      	ldrh	r3, [r7, #32]
 8003946:	4413      	add	r3, r2
 8003948:	b29b      	uxth	r3, r3
 800394a:	3b01      	subs	r3, #1
 800394c:	b29b      	uxth	r3, r3
 800394e:	8939      	ldrh	r1, [r7, #8]
 8003950:	8978      	ldrh	r0, [r7, #10]
 8003952:	4622      	mov	r2, r4
 8003954:	f7ff fe1a 	bl	800358c <Displ_SetAddressWindow>
		Displ_WriteData((uint8_t* )pixels,((w*h)<<1),1);
 8003958:	88fb      	ldrh	r3, [r7, #6]
 800395a:	8c3a      	ldrh	r2, [r7, #32]
 800395c:	fb02 f303 	mul.w	r3, r2, r3
 8003960:	005b      	lsls	r3, r3, #1
 8003962:	2201      	movs	r2, #1
 8003964:	4619      	mov	r1, r3
 8003966:	68f8      	ldr	r0, [r7, #12]
 8003968:	f7ff fdb7 	bl	80034da <Displ_WriteData>
}
 800396c:	bf00      	nop
 800396e:	3714      	adds	r7, #20
 8003970:	46bd      	mov	sp, r7
 8003972:	bd90      	pop	{r4, r7, pc}

08003974 <HAL_TIM_PeriodElapsedCallback>:
 * @brief	TouchGFX integration: this is the callback
 * 			function run by timer interrupt implementing
 * 			the tick timer for TouchGFX
 *********************************************************/
#ifdef DISPLAY_USING_TOUCHGFX
void HAL_TIM_PeriodElapsedCallback (TIM_HandleTypeDef * htim){
 8003974:	b580      	push	{r7, lr}
 8003976:	b082      	sub	sp, #8
 8003978:	af00      	add	r7, sp, #0
 800397a:	6078      	str	r0, [r7, #4]
	if (htim==&TGFX_T){
 800397c:	687b      	ldr	r3, [r7, #4]
 800397e:	4a04      	ldr	r2, [pc, #16]	; (8003990 <HAL_TIM_PeriodElapsedCallback+0x1c>)
 8003980:	4293      	cmp	r3, r2
 8003982:	d101      	bne.n	8003988 <HAL_TIM_PeriodElapsedCallback+0x14>
		  touchgfxSignalVSync();
 8003984:	f00e fcf4 	bl	8012370 <touchgfxSignalVSync>
	}
}
 8003988:	bf00      	nop
 800398a:	3708      	adds	r7, #8
 800398c:	46bd      	mov	sp, r7
 800398e:	bd80      	pop	{r7, pc}
 8003990:	200002ac 	.word	0x200002ac

08003994 <Touch_HandlePenDownInterrupt>:
volatile uint8_t Touch_PenDown=0;						// set to 1 by pendown interrupt callback, reset to 0 by sw
volatile uint8_t Touch_Int_Enabled=1;					// while reading touch sensor touch interrupt handling is disabled through this flag



void Touch_HandlePenDownInterrupt (){
 8003994:	b480      	push	{r7}
 8003996:	af00      	add	r7, sp, #0
	if (Touch_Int_Enabled) {
 8003998:	4b06      	ldr	r3, [pc, #24]	; (80039b4 <Touch_HandlePenDownInterrupt+0x20>)
 800399a:	781b      	ldrb	r3, [r3, #0]
 800399c:	b2db      	uxtb	r3, r3
 800399e:	2b00      	cmp	r3, #0
 80039a0:	d002      	beq.n	80039a8 <Touch_HandlePenDownInterrupt+0x14>
		Touch_PenDown=1;
 80039a2:	4b05      	ldr	r3, [pc, #20]	; (80039b8 <Touch_HandlePenDownInterrupt+0x24>)
 80039a4:	2201      	movs	r2, #1
 80039a6:	701a      	strb	r2, [r3, #0]
	}
}
 80039a8:	bf00      	nop
 80039aa:	46bd      	mov	sp, r7
 80039ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80039b0:	4770      	bx	lr
 80039b2:	bf00      	nop
 80039b4:	20000009 	.word	0x20000009
 80039b8:	20000380 	.word	0x20000380

080039bc <HAL_GPIO_EXTI_Callback>:



void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin){
 80039bc:	b580      	push	{r7, lr}
 80039be:	b082      	sub	sp, #8
 80039c0:	af00      	add	r7, sp, #0
 80039c2:	4603      	mov	r3, r0
 80039c4:	80fb      	strh	r3, [r7, #6]
	if (GPIO_Pin==TOUCH_INT_Pin){
 80039c6:	88fb      	ldrh	r3, [r7, #6]
 80039c8:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80039cc:	d101      	bne.n	80039d2 <HAL_GPIO_EXTI_Callback+0x16>
		Touch_HandlePenDownInterrupt();
 80039ce:	f7ff ffe1 	bl	8003994 <Touch_HandlePenDownInterrupt>
	}
}
 80039d2:	bf00      	nop
 80039d4:	3708      	adds	r7, #8
 80039d6:	46bd      	mov	sp, r7
 80039d8:	bd80      	pop	{r7, pc}
	...

080039dc <Touch_Select>:

/******************************************
 * @brief	enable touch, disabling display
 * 			set SPI baudrate as needed
 ******************************************/
void Touch_Select(void) {
 80039dc:	b580      	push	{r7, lr}
 80039de:	af00      	add	r7, sp, #0
	if (TOUCH_SPI==DISPL_SPI){														// if touch and display share the same SPI port
		if (!HAL_GPIO_ReadPin(DISPL_CS_GPIO_Port, DISPL_CS_Pin)) {					// if display selected
 80039e0:	f44f 7180 	mov.w	r1, #256	; 0x100
 80039e4:	4813      	ldr	r0, [pc, #76]	; (8003a34 <Touch_Select+0x58>)
 80039e6:	f001 f977 	bl	8004cd8 <HAL_GPIO_ReadPin>
 80039ea:	4603      	mov	r3, r0
 80039ec:	2b00      	cmp	r3, #0
 80039ee:	d10b      	bne.n	8003a08 <Touch_Select+0x2c>
			while (!Displ_SpiAvailable) {};  										// waiting for completing display communication. Flag is set to 1 by transmission-complete interrupt callback
 80039f0:	bf00      	nop
 80039f2:	4b11      	ldr	r3, [pc, #68]	; (8003a38 <Touch_Select+0x5c>)
 80039f4:	781b      	ldrb	r3, [r3, #0]
 80039f6:	b2db      	uxtb	r3, r3
 80039f8:	2b00      	cmp	r3, #0
 80039fa:	d0fa      	beq.n	80039f2 <Touch_Select+0x16>
			HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_SET); 		// unselect display
 80039fc:	2201      	movs	r2, #1
 80039fe:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003a02:	480c      	ldr	r0, [pc, #48]	; (8003a34 <Touch_Select+0x58>)
 8003a04:	f001 f980 	bl	8004d08 <HAL_GPIO_WritePin>
		}
		SET_TOUCH_SPI_BAUDRATE;				   										//change SPI port speed as per display needs
 8003a08:	4b0c      	ldr	r3, [pc, #48]	; (8003a3c <Touch_Select+0x60>)
 8003a0a:	681a      	ldr	r2, [r3, #0]
 8003a0c:	490b      	ldr	r1, [pc, #44]	; (8003a3c <Touch_Select+0x60>)
 8003a0e:	f64f 73c7 	movw	r3, #65479	; 0xffc7
 8003a12:	4013      	ands	r3, r2
 8003a14:	600b      	str	r3, [r1, #0]
 8003a16:	4b09      	ldr	r3, [pc, #36]	; (8003a3c <Touch_Select+0x60>)
 8003a18:	681b      	ldr	r3, [r3, #0]
 8003a1a:	4a08      	ldr	r2, [pc, #32]	; (8003a3c <Touch_Select+0x60>)
 8003a1c:	f043 0338 	orr.w	r3, r3, #56	; 0x38
 8003a20:	6013      	str	r3, [r2, #0]
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_RESET);
 8003a22:	2200      	movs	r2, #0
 8003a24:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8003a28:	4805      	ldr	r0, [pc, #20]	; (8003a40 <Touch_Select+0x64>)
 8003a2a:	f001 f96d 	bl	8004d08 <HAL_GPIO_WritePin>
	}
}
 8003a2e:	bf00      	nop
 8003a30:	bd80      	pop	{r7, pc}
 8003a32:	bf00      	nop
 8003a34:	40020000 	.word	0x40020000
 8003a38:	20000008 	.word	0x20000008
 8003a3c:	40003800 	.word	0x40003800
 8003a40:	40020400 	.word	0x40020400

08003a44 <Touch_UnSelect>:


/******************************************
 * @brief	disable touch
 ******************************************/
void Touch_UnSelect(void) {
 8003a44:	b580      	push	{r7, lr}
 8003a46:	af00      	add	r7, sp, #0
	if (TOUCH_SPI==DISPL_SPI){														// if touch and display share the same SPI port
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET);			// unselect touch
 8003a48:	2201      	movs	r2, #1
 8003a4a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8003a4e:	4802      	ldr	r0, [pc, #8]	; (8003a58 <Touch_UnSelect+0x14>)
 8003a50:	f001 f95a 	bl	8004d08 <HAL_GPIO_WritePin>
	}
}
 8003a54:	bf00      	nop
 8003a56:	bd80      	pop	{r7, pc}
 8003a58:	40020400 	.word	0x40020400

08003a5c <Touch_PollAxis>:
 * @params	axis	use only one of the three options X_AXIS, Y_AXIS or Z_AXIS
 * @return			the level measured on the "axis" axis
 * 					PLEASE NOTE this function should be only for internal usage
 * 								Use Touch_GetXYTouch() instead
 *******************************************************************************/
uint16_t Touch_PollAxis(uint8_t axis) {
 8003a5c:	b580      	push	{r7, lr}
 8003a5e:	b084      	sub	sp, #16
 8003a60:	af00      	add	r7, sp, #0
 8003a62:	4603      	mov	r3, r0
 8003a64:	71fb      	strb	r3, [r7, #7]
	uint8_t poll[2] = {0,0};
 8003a66:	2300      	movs	r3, #0
 8003a68:	813b      	strh	r3, [r7, #8]
	uint32_t poll16;
	
	if (TOUCH_SPI==DISPL_SPI){				// if touch and display share the same SPI port
		Touch_Select();						// enable CS on touch device
 8003a6a:	f7ff ffb7 	bl	80039dc <Touch_Select>
	}

	Touch_Int_Enabled=0;	//disable interrupt handling: sensor reading triggers interrupt
 8003a6e:	4b17      	ldr	r3, [pc, #92]	; (8003acc <Touch_PollAxis+0x70>)
 8003a70:	2200      	movs	r2, #0
 8003a72:	701a      	strb	r2, [r3, #0]
	// disable interrupt while enquiring the touch sensor because it triggers the interrupt pin
	HAL_NVIC_DisableIRQ(TOUCH_INT_EXTI_IRQn);
 8003a74:	2028      	movs	r0, #40	; 0x28
 8003a76:	f000 fbd4 	bl	8004222 <HAL_NVIC_DisableIRQ>

	HAL_SPI_Transmit(&TOUCH_SPI_PORT, &axis, 1, 10);
 8003a7a:	1df9      	adds	r1, r7, #7
 8003a7c:	230a      	movs	r3, #10
 8003a7e:	2201      	movs	r2, #1
 8003a80:	4813      	ldr	r0, [pc, #76]	; (8003ad0 <Touch_PollAxis+0x74>)
 8003a82:	f003 fafe 	bl	8007082 <HAL_SPI_Transmit>
	if (HAL_SPI_Receive(&TOUCH_SPI_PORT, poll, 2, 10) == HAL_OK) {
 8003a86:	f107 0108 	add.w	r1, r7, #8
 8003a8a:	230a      	movs	r3, #10
 8003a8c:	2202      	movs	r2, #2
 8003a8e:	4810      	ldr	r0, [pc, #64]	; (8003ad0 <Touch_PollAxis+0x74>)
 8003a90:	f003 fc3a 	bl	8007308 <HAL_SPI_Receive>
 8003a94:	4603      	mov	r3, r0
 8003a96:	2b00      	cmp	r3, #0
 8003a98:	d105      	bne.n	8003aa6 <Touch_PollAxis+0x4a>
		poll16 = (poll[0]<<8) + poll[1];
 8003a9a:	7a3b      	ldrb	r3, [r7, #8]
 8003a9c:	021b      	lsls	r3, r3, #8
 8003a9e:	7a7a      	ldrb	r2, [r7, #9]
 8003aa0:	4413      	add	r3, r2
 8003aa2:	60fb      	str	r3, [r7, #12]
 8003aa4:	e001      	b.n	8003aaa <Touch_PollAxis+0x4e>
	}
	else {
		poll16 = 0;
 8003aa6:	2300      	movs	r3, #0
 8003aa8:	60fb      	str	r3, [r7, #12]
	}

//enable back interrupt after reading the sensor
	HAL_NVIC_ClearPendingIRQ(TOUCH_INT_EXTI_IRQn);
 8003aaa:	2028      	movs	r0, #40	; 0x28
 8003aac:	f000 fbd3 	bl	8004256 <HAL_NVIC_ClearPendingIRQ>
	HAL_NVIC_EnableIRQ(TOUCH_INT_EXTI_IRQn);
 8003ab0:	2028      	movs	r0, #40	; 0x28
 8003ab2:	f000 fba8 	bl	8004206 <HAL_NVIC_EnableIRQ>

	Touch_Int_Enabled=1;
 8003ab6:	4b05      	ldr	r3, [pc, #20]	; (8003acc <Touch_PollAxis+0x70>)
 8003ab8:	2201      	movs	r2, #1
 8003aba:	701a      	strb	r2, [r3, #0]

	if (TOUCH_SPI==DISPL_SPI){	// if touch and display share the same SPI port
		Touch_UnSelect();
 8003abc:	f7ff ffc2 	bl	8003a44 <Touch_UnSelect>
	}

	return poll16;
 8003ac0:	68fb      	ldr	r3, [r7, #12]
 8003ac2:	b29b      	uxth	r3, r3
}
 8003ac4:	4618      	mov	r0, r3
 8003ac6:	3710      	adds	r7, #16
 8003ac8:	46bd      	mov	sp, r7
 8003aca:	bd80      	pop	{r7, pc}
 8003acc:	20000009 	.word	0x20000009
 8003ad0:	200001ac 	.word	0x200001ac

08003ad4 <Touch_GetXYtouch>:
 * @brief			polls touch screen and returning its XY screen position
 * 					that's regardless touch recording flag (interrupt received)
 * @return	x,y		in case isTouch=1 contain touch coordinates
 * 			isTouch is 1 if detected a touch, otherwise 0;
 *********************************************************************************/
void Touch_GetXYtouch(uint16_t *x, uint16_t *y, uint8_t *isTouch){
 8003ad4:	b580      	push	{r7, lr}
 8003ad6:	b08a      	sub	sp, #40	; 0x28
 8003ad8:	af00      	add	r7, sp, #0
 8003ada:	60f8      	str	r0, [r7, #12]
 8003adc:	60b9      	str	r1, [r7, #8]
 8003ade:	607a      	str	r2, [r7, #4]

const uint8_t pollingLevel=4;
 8003ae0:	2304      	movs	r3, #4
 8003ae2:	77fb      	strb	r3, [r7, #31]


// get the average value (over "1<<pollingLevel" attempts of X, Y and Z axes readings)

	// reading Z
	touch=0;
 8003ae4:	2300      	movs	r3, #0
 8003ae6:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 8003ae8:	2300      	movs	r3, #0
 8003aea:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8003aee:	e00c      	b.n	8003b0a <Touch_GetXYtouch+0x36>
		touch += Touch_PollAxis(Z_AXIS);
 8003af0:	20b0      	movs	r0, #176	; 0xb0
 8003af2:	f7ff ffb3 	bl	8003a5c <Touch_PollAxis>
 8003af6:	4603      	mov	r3, r0
 8003af8:	461a      	mov	r2, r3
 8003afa:	6a3b      	ldr	r3, [r7, #32]
 8003afc:	4413      	add	r3, r2
 8003afe:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 8003b00:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8003b04:	3301      	adds	r3, #1
 8003b06:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8003b0a:	f897 2027 	ldrb.w	r2, [r7, #39]	; 0x27
 8003b0e:	7ffb      	ldrb	r3, [r7, #31]
 8003b10:	2101      	movs	r1, #1
 8003b12:	fa01 f303 	lsl.w	r3, r1, r3
 8003b16:	429a      	cmp	r2, r3
 8003b18:	dbea      	blt.n	8003af0 <Touch_GetXYtouch+0x1c>
	touch >>= pollingLevel;  //get the average value
 8003b1a:	7ffb      	ldrb	r3, [r7, #31]
 8003b1c:	6a3a      	ldr	r2, [r7, #32]
 8003b1e:	fa22 f303 	lsr.w	r3, r2, r3
 8003b22:	623b      	str	r3, [r7, #32]
	if (touch<=Z_THRESHOLD) {
 8003b24:	6a3b      	ldr	r3, [r7, #32]
 8003b26:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8003b2a:	d806      	bhi.n	8003b3a <Touch_GetXYtouch+0x66>
		*isTouch=0;
 8003b2c:	687b      	ldr	r3, [r7, #4]
 8003b2e:	2200      	movs	r2, #0
 8003b30:	701a      	strb	r2, [r3, #0]
		HAL_NVIC_ClearPendingIRQ(TOUCH_INT_EXTI_IRQn);
 8003b32:	2028      	movs	r0, #40	; 0x28
 8003b34:	f000 fb8f 	bl	8004256 <HAL_NVIC_ClearPendingIRQ>
		return;	// no touch: return 0
 8003b38:	e0b2      	b.n	8003ca0 <Touch_GetXYtouch+0x1cc>
	}

	// reading X
	touch=0;
 8003b3a:	2300      	movs	r3, #0
 8003b3c:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 8003b3e:	2300      	movs	r3, #0
 8003b40:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8003b44:	e00c      	b.n	8003b60 <Touch_GetXYtouch+0x8c>
		touch += Touch_PollAxis(X_AXIS);
 8003b46:	20d0      	movs	r0, #208	; 0xd0
 8003b48:	f7ff ff88 	bl	8003a5c <Touch_PollAxis>
 8003b4c:	4603      	mov	r3, r0
 8003b4e:	461a      	mov	r2, r3
 8003b50:	6a3b      	ldr	r3, [r7, #32]
 8003b52:	4413      	add	r3, r2
 8003b54:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 8003b56:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8003b5a:	3301      	adds	r3, #1
 8003b5c:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8003b60:	f897 2027 	ldrb.w	r2, [r7, #39]	; 0x27
 8003b64:	7ffb      	ldrb	r3, [r7, #31]
 8003b66:	2101      	movs	r1, #1
 8003b68:	fa01 f303 	lsl.w	r3, r1, r3
 8003b6c:	429a      	cmp	r2, r3
 8003b6e:	dbea      	blt.n	8003b46 <Touch_GetXYtouch+0x72>
	touch >>= pollingLevel;  //get the average value
 8003b70:	7ffb      	ldrb	r3, [r7, #31]
 8003b72:	6a3a      	ldr	r2, [r7, #32]
 8003b74:	fa22 f303 	lsr.w	r3, r2, r3
 8003b78:	623b      	str	r3, [r7, #32]
	if (touch<=X_THRESHOLD) {
 8003b7a:	6a3b      	ldr	r3, [r7, #32]
 8003b7c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8003b80:	d806      	bhi.n	8003b90 <Touch_GetXYtouch+0xbc>
		*isTouch=0;
 8003b82:	687b      	ldr	r3, [r7, #4]
 8003b84:	2200      	movs	r2, #0
 8003b86:	701a      	strb	r2, [r3, #0]
		HAL_NVIC_ClearPendingIRQ(TOUCH_INT_EXTI_IRQn);
 8003b88:	2028      	movs	r0, #40	; 0x28
 8003b8a:	f000 fb64 	bl	8004256 <HAL_NVIC_ClearPendingIRQ>
		return;	// no touch: return 0
 8003b8e:	e087      	b.n	8003ca0 <Touch_GetXYtouch+0x1cc>
	}
	touchx=(AX*touch+BX);
 8003b90:	6a3b      	ldr	r3, [r7, #32]
 8003b92:	ee07 3a90 	vmov	s15, r3
 8003b96:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003b9a:	ed9f 7a43 	vldr	s14, [pc, #268]	; 8003ca8 <Touch_GetXYtouch+0x1d4>
 8003b9e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003ba2:	ed9f 7a42 	vldr	s14, [pc, #264]	; 8003cac <Touch_GetXYtouch+0x1d8>
 8003ba6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8003baa:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003bae:	ee17 3a90 	vmov	r3, s15
 8003bb2:	61bb      	str	r3, [r7, #24]

	// reading Y - there is no a threshold for Y
	touch=0;
 8003bb4:	2300      	movs	r3, #0
 8003bb6:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 8003bb8:	2300      	movs	r3, #0
 8003bba:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8003bbe:	e00c      	b.n	8003bda <Touch_GetXYtouch+0x106>
		touch += Touch_PollAxis(Y_AXIS);
 8003bc0:	2090      	movs	r0, #144	; 0x90
 8003bc2:	f7ff ff4b 	bl	8003a5c <Touch_PollAxis>
 8003bc6:	4603      	mov	r3, r0
 8003bc8:	461a      	mov	r2, r3
 8003bca:	6a3b      	ldr	r3, [r7, #32]
 8003bcc:	4413      	add	r3, r2
 8003bce:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 8003bd0:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8003bd4:	3301      	adds	r3, #1
 8003bd6:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8003bda:	f897 2027 	ldrb.w	r2, [r7, #39]	; 0x27
 8003bde:	7ffb      	ldrb	r3, [r7, #31]
 8003be0:	2101      	movs	r1, #1
 8003be2:	fa01 f303 	lsl.w	r3, r1, r3
 8003be6:	429a      	cmp	r2, r3
 8003be8:	dbea      	blt.n	8003bc0 <Touch_GetXYtouch+0xec>
	touch >>= pollingLevel; //get the average value
 8003bea:	7ffb      	ldrb	r3, [r7, #31]
 8003bec:	6a3a      	ldr	r2, [r7, #32]
 8003bee:	fa22 f303 	lsr.w	r3, r2, r3
 8003bf2:	623b      	str	r3, [r7, #32]

	touchy=(AY*touch+BY);
 8003bf4:	6a3b      	ldr	r3, [r7, #32]
 8003bf6:	ee07 3a90 	vmov	s15, r3
 8003bfa:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003bfe:	ed9f 7a2c 	vldr	s14, [pc, #176]	; 8003cb0 <Touch_GetXYtouch+0x1dc>
 8003c02:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003c06:	ed9f 7a2b 	vldr	s14, [pc, #172]	; 8003cb4 <Touch_GetXYtouch+0x1e0>
 8003c0a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8003c0e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003c12:	ee17 3a90 	vmov	r3, s15
 8003c16:	617b      	str	r3, [r7, #20]


//having X and Y axis average values
// calculating coordinates as per screen orientation
	switch (current_orientation)
 8003c18:	4b27      	ldr	r3, [pc, #156]	; (8003cb8 <Touch_GetXYtouch+0x1e4>)
 8003c1a:	781b      	ldrb	r3, [r3, #0]
 8003c1c:	2b03      	cmp	r3, #3
 8003c1e:	d83b      	bhi.n	8003c98 <Touch_GetXYtouch+0x1c4>
 8003c20:	a201      	add	r2, pc, #4	; (adr r2, 8003c28 <Touch_GetXYtouch+0x154>)
 8003c22:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003c26:	bf00      	nop
 8003c28:	08003c39 	.word	0x08003c39
 8003c2c:	08003c4b 	.word	0x08003c4b
 8003c30:	08003c63 	.word	0x08003c63
 8003c34:	08003c81 	.word	0x08003c81
	{
	case TOUCH0:
		*x=touchx;
 8003c38:	69bb      	ldr	r3, [r7, #24]
 8003c3a:	b29a      	uxth	r2, r3
 8003c3c:	68fb      	ldr	r3, [r7, #12]
 8003c3e:	801a      	strh	r2, [r3, #0]
		*y=touchy;
 8003c40:	697b      	ldr	r3, [r7, #20]
 8003c42:	b29a      	uxth	r2, r3
 8003c44:	68bb      	ldr	r3, [r7, #8]
 8003c46:	801a      	strh	r2, [r3, #0]
		break;
 8003c48:	e026      	b.n	8003c98 <Touch_GetXYtouch+0x1c4>
	case TOUCH90:
		*x=touchy;
 8003c4a:	697b      	ldr	r3, [r7, #20]
 8003c4c:	b29a      	uxth	r2, r3
 8003c4e:	68fb      	ldr	r3, [r7, #12]
 8003c50:	801a      	strh	r2, [r3, #0]
		*y=(TOUCH_0_WIDTH-touchx);
 8003c52:	69bb      	ldr	r3, [r7, #24]
 8003c54:	b29b      	uxth	r3, r3
 8003c56:	f1c3 03f0 	rsb	r3, r3, #240	; 0xf0
 8003c5a:	b29a      	uxth	r2, r3
 8003c5c:	68bb      	ldr	r3, [r7, #8]
 8003c5e:	801a      	strh	r2, [r3, #0]
		break;
 8003c60:	e01a      	b.n	8003c98 <Touch_GetXYtouch+0x1c4>
	case TOUCH180:
		*x=(TOUCH_0_WIDTH-touchx);
 8003c62:	69bb      	ldr	r3, [r7, #24]
 8003c64:	b29b      	uxth	r3, r3
 8003c66:	f1c3 03f0 	rsb	r3, r3, #240	; 0xf0
 8003c6a:	b29a      	uxth	r2, r3
 8003c6c:	68fb      	ldr	r3, [r7, #12]
 8003c6e:	801a      	strh	r2, [r3, #0]
		*y=(TOUCH_0_HEIGHT - touchy);
 8003c70:	697b      	ldr	r3, [r7, #20]
 8003c72:	b29b      	uxth	r3, r3
 8003c74:	f5c3 73a0 	rsb	r3, r3, #320	; 0x140
 8003c78:	b29a      	uxth	r2, r3
 8003c7a:	68bb      	ldr	r3, [r7, #8]
 8003c7c:	801a      	strh	r2, [r3, #0]
		break;
 8003c7e:	e00b      	b.n	8003c98 <Touch_GetXYtouch+0x1c4>
	case TOUCH270:
		*x=(TOUCH_0_HEIGHT- touchy);
 8003c80:	697b      	ldr	r3, [r7, #20]
 8003c82:	b29b      	uxth	r3, r3
 8003c84:	f5c3 73a0 	rsb	r3, r3, #320	; 0x140
 8003c88:	b29a      	uxth	r2, r3
 8003c8a:	68fb      	ldr	r3, [r7, #12]
 8003c8c:	801a      	strh	r2, [r3, #0]
		*y=touchx;
 8003c8e:	69bb      	ldr	r3, [r7, #24]
 8003c90:	b29a      	uxth	r2, r3
 8003c92:	68bb      	ldr	r3, [r7, #8]
 8003c94:	801a      	strh	r2, [r3, #0]
		break;
 8003c96:	bf00      	nop
	}

// set flag indicating there was a touch
	*isTouch=1;
 8003c98:	687b      	ldr	r3, [r7, #4]
 8003c9a:	2201      	movs	r2, #1
 8003c9c:	701a      	strb	r2, [r3, #0]
	return;
 8003c9e:	bf00      	nop
}
 8003ca0:	3728      	adds	r7, #40	; 0x28
 8003ca2:	46bd      	mov	sp, r7
 8003ca4:	bd80      	pop	{r7, pc}
 8003ca6:	bf00      	nop
 8003ca8:	3c033c60 	.word	0x3c033c60
 8003cac:	413ff7cf 	.word	0x413ff7cf
 8003cb0:	3c375643 	.word	0x3c375643
 8003cb4:	421c3a5e 	.word	0x421c3a5e
 8003cb8:	20000370 	.word	0x20000370

08003cbc <Touch_GotATouch>:
 * 						(use "2" in main loop activating touchgfxSignalVSync()
 * @returns		1	if recorded a touch
 * 				0	if no touch recorded
 ***********************************************************/

uint8_t Touch_GotATouch(uint8_t reset) {
 8003cbc:	b580      	push	{r7, lr}
 8003cbe:	b084      	sub	sp, #16
 8003cc0:	af00      	add	r7, sp, #0
 8003cc2:	4603      	mov	r3, r0
 8003cc4:	71fb      	strb	r3, [r7, #7]
static uint32_t touchTime=0;
uint8_t result = Touch_PenDown;
 8003cc6:	4b10      	ldr	r3, [pc, #64]	; (8003d08 <Touch_GotATouch+0x4c>)
 8003cc8:	781b      	ldrb	r3, [r3, #0]
 8003cca:	73fb      	strb	r3, [r7, #15]

//	if (result)
//		result=Touch_PollTouch();

	if (reset==2){
 8003ccc:	79fb      	ldrb	r3, [r7, #7]
 8003cce:	2b02      	cmp	r3, #2
 8003cd0:	d10f      	bne.n	8003cf2 <Touch_GotATouch+0x36>
		if ((HAL_GetTick()-touchTime) >= TOUCHGFX_TIMING)
 8003cd2:	f000 f92f 	bl	8003f34 <HAL_GetTick>
 8003cd6:	4602      	mov	r2, r0
 8003cd8:	4b0c      	ldr	r3, [pc, #48]	; (8003d0c <Touch_GotATouch+0x50>)
 8003cda:	681b      	ldr	r3, [r3, #0]
 8003cdc:	1ad3      	subs	r3, r2, r3
 8003cde:	2b3b      	cmp	r3, #59	; 0x3b
 8003ce0:	d905      	bls.n	8003cee <Touch_GotATouch+0x32>
			touchTime=HAL_GetTick();
 8003ce2:	f000 f927 	bl	8003f34 <HAL_GetTick>
 8003ce6:	4603      	mov	r3, r0
 8003ce8:	4a08      	ldr	r2, [pc, #32]	; (8003d0c <Touch_GotATouch+0x50>)
 8003cea:	6013      	str	r3, [r2, #0]
 8003cec:	e001      	b.n	8003cf2 <Touch_GotATouch+0x36>
		else
			result=0;
 8003cee:	2300      	movs	r3, #0
 8003cf0:	73fb      	strb	r3, [r7, #15]
	}
	if (reset==1)
 8003cf2:	79fb      	ldrb	r3, [r7, #7]
 8003cf4:	2b01      	cmp	r3, #1
 8003cf6:	d102      	bne.n	8003cfe <Touch_GotATouch+0x42>
		Touch_PenDown=0;
 8003cf8:	4b03      	ldr	r3, [pc, #12]	; (8003d08 <Touch_GotATouch+0x4c>)
 8003cfa:	2200      	movs	r2, #0
 8003cfc:	701a      	strb	r2, [r3, #0]
	return result;
 8003cfe:	7bfb      	ldrb	r3, [r7, #15]
}
 8003d00:	4618      	mov	r0, r3
 8003d02:	3710      	adds	r7, #16
 8003d04:	46bd      	mov	sp, r7
 8003d06:	bd80      	pop	{r7, pc}
 8003d08:	20000380 	.word	0x20000380
 8003d0c:	20000384 	.word	0x20000384

08003d10 <Touch_TouchGFXSampleTouch>:
 *			then, into STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
 *			change "return false;"
 *			into:  "return ((bool) Touch_TouchGFXSampleTouch(&x, &y));"
 * 			that's enough for touch integration in TouchGFX
***********************************************************/
uint8_t Touch_TouchGFXSampleTouch(int32_t *x, int32_t *y){
 8003d10:	b580      	push	{r7, lr}
 8003d12:	b084      	sub	sp, #16
 8003d14:	af00      	add	r7, sp, #0
 8003d16:	6078      	str	r0, [r7, #4]
 8003d18:	6039      	str	r1, [r7, #0]
	//	sTouchData result;
	uint8_t isTouch=0;				// preset to no touch
 8003d1a:	2300      	movs	r3, #0
 8003d1c:	73fb      	strb	r3, [r7, #15]
	uint16_t xx=0,yy=0;  			// need to convert library coordinates type (uint16_t) to TouchGFX ones (int32_t)
 8003d1e:	2300      	movs	r3, #0
 8003d20:	81bb      	strh	r3, [r7, #12]
 8003d22:	2300      	movs	r3, #0
 8003d24:	817b      	strh	r3, [r7, #10]
	static uint8_t flipTouch=0;		// switches 0/1, on every function call, until sensor is touched allowing to return key repeat
	static uint32_t touchTime=1; 	// tick value get on the first touch. 0 means display untouched.
	static uint16_t avgXX=0, avgYY=0;  			// need to convert library coordinates type (uint16_t) to TouchGFX one (int32_t)
	static uint8_t repetition=TOUCHGFX_REPEAT_IT+TOUCHGFX_REPEAT_NO;

	if (Touch_GotATouch(0)){				// polls interrupt flag not resetting it
 8003d26:	2000      	movs	r0, #0
 8003d28:	f7ff ffc8 	bl	8003cbc <Touch_GotATouch>
 8003d2c:	4603      	mov	r3, r0
 8003d2e:	2b00      	cmp	r3, #0
 8003d30:	d060      	beq.n	8003df4 <Touch_TouchGFXSampleTouch+0xe4>
		Touch_GetXYtouch(&xx,&yy,&isTouch);	// get touch sensor position
 8003d32:	f107 020f 	add.w	r2, r7, #15
 8003d36:	f107 010a 	add.w	r1, r7, #10
 8003d3a:	f107 030c 	add.w	r3, r7, #12
 8003d3e:	4618      	mov	r0, r3
 8003d40:	f7ff fec8 	bl	8003ad4 <Touch_GetXYtouch>
		if (!isTouch){						// received a "no touch"
 8003d44:	7bfb      	ldrb	r3, [r7, #15]
 8003d46:	2b00      	cmp	r3, #0
 8003d48:	d126      	bne.n	8003d98 <Touch_TouchGFXSampleTouch+0x88>
			if (touchTime != 0){			// if previously touched
 8003d4a:	4b2d      	ldr	r3, [pc, #180]	; (8003e00 <Touch_TouchGFXSampleTouch+0xf0>)
 8003d4c:	681b      	ldr	r3, [r3, #0]
 8003d4e:	2b00      	cmp	r3, #0
 8003d50:	d050      	beq.n	8003df4 <Touch_TouchGFXSampleTouch+0xe4>
				if ((repetition--)>TOUCHGFX_REPEAT_NO+1){		// n-repetition of last touch sending
 8003d52:	4b2c      	ldr	r3, [pc, #176]	; (8003e04 <Touch_TouchGFXSampleTouch+0xf4>)
 8003d54:	781b      	ldrb	r3, [r3, #0]
 8003d56:	1e5a      	subs	r2, r3, #1
 8003d58:	b2d1      	uxtb	r1, r2
 8003d5a:	4a2a      	ldr	r2, [pc, #168]	; (8003e04 <Touch_TouchGFXSampleTouch+0xf4>)
 8003d5c:	7011      	strb	r1, [r2, #0]
 8003d5e:	2b01      	cmp	r3, #1
 8003d60:	d90c      	bls.n	8003d7c <Touch_TouchGFXSampleTouch+0x6c>
					*x = avgXX;
 8003d62:	4b29      	ldr	r3, [pc, #164]	; (8003e08 <Touch_TouchGFXSampleTouch+0xf8>)
 8003d64:	881b      	ldrh	r3, [r3, #0]
 8003d66:	461a      	mov	r2, r3
 8003d68:	687b      	ldr	r3, [r7, #4]
 8003d6a:	601a      	str	r2, [r3, #0]
					*y = avgYY;
 8003d6c:	4b27      	ldr	r3, [pc, #156]	; (8003e0c <Touch_TouchGFXSampleTouch+0xfc>)
 8003d6e:	881b      	ldrh	r3, [r3, #0]
 8003d70:	461a      	mov	r2, r3
 8003d72:	683b      	ldr	r3, [r7, #0]
 8003d74:	601a      	str	r2, [r3, #0]
					isTouch=1;
 8003d76:	2301      	movs	r3, #1
 8003d78:	73fb      	strb	r3, [r7, #15]
 8003d7a:	e03b      	b.n	8003df4 <Touch_TouchGFXSampleTouch+0xe4>
				} else if ((repetition==255)) {  // that's -1
 8003d7c:	4b21      	ldr	r3, [pc, #132]	; (8003e04 <Touch_TouchGFXSampleTouch+0xf4>)
 8003d7e:	781b      	ldrb	r3, [r3, #0]
 8003d80:	2bff      	cmp	r3, #255	; 0xff
 8003d82:	d137      	bne.n	8003df4 <Touch_TouchGFXSampleTouch+0xe4>
					touchTime=0;					// set display as untouched
 8003d84:	4b1e      	ldr	r3, [pc, #120]	; (8003e00 <Touch_TouchGFXSampleTouch+0xf0>)
 8003d86:	2200      	movs	r2, #0
 8003d88:	601a      	str	r2, [r3, #0]
					Touch_GotATouch(1);				// reset interrupt touch flag
 8003d8a:	2001      	movs	r0, #1
 8003d8c:	f7ff ff96 	bl	8003cbc <Touch_GotATouch>
					repetition=TOUCHGFX_REPEAT_IT+TOUCHGFX_REPEAT_NO;  //reset repetition counter
 8003d90:	4b1c      	ldr	r3, [pc, #112]	; (8003e04 <Touch_TouchGFXSampleTouch+0xf4>)
 8003d92:	2200      	movs	r2, #0
 8003d94:	701a      	strb	r2, [r3, #0]
 8003d96:	e02d      	b.n	8003df4 <Touch_TouchGFXSampleTouch+0xe4>
				}
			}
		} else {					// display touched

			if (touchTime==0) {				// if previously untouched
 8003d98:	4b19      	ldr	r3, [pc, #100]	; (8003e00 <Touch_TouchGFXSampleTouch+0xf0>)
 8003d9a:	681b      	ldr	r3, [r3, #0]
 8003d9c:	2b00      	cmp	r3, #0
 8003d9e:	d10e      	bne.n	8003dbe <Touch_TouchGFXSampleTouch+0xae>
				avgXX =(xx/TOUCHGFX_SENSITIVITY)*TOUCHGFX_SENSITIVITY;
 8003da0:	89ba      	ldrh	r2, [r7, #12]
 8003da2:	4b19      	ldr	r3, [pc, #100]	; (8003e08 <Touch_TouchGFXSampleTouch+0xf8>)
 8003da4:	801a      	strh	r2, [r3, #0]
				avgYY =(yy/TOUCHGFX_SENSITIVITY)*TOUCHGFX_SENSITIVITY;
 8003da6:	897a      	ldrh	r2, [r7, #10]
 8003da8:	4b18      	ldr	r3, [pc, #96]	; (8003e0c <Touch_TouchGFXSampleTouch+0xfc>)
 8003daa:	801a      	strh	r2, [r3, #0]
				touchTime=HAL_GetTick();	// store tick value at touch time
 8003dac:	f000 f8c2 	bl	8003f34 <HAL_GetTick>
 8003db0:	4603      	mov	r3, r0
 8003db2:	4a13      	ldr	r2, [pc, #76]	; (8003e00 <Touch_TouchGFXSampleTouch+0xf0>)
 8003db4:	6013      	str	r3, [r2, #0]
				flipTouch=1;				// set switch to send touch now
 8003db6:	4b16      	ldr	r3, [pc, #88]	; (8003e10 <Touch_TouchGFXSampleTouch+0x100>)
 8003db8:	2201      	movs	r2, #1
 8003dba:	701a      	strb	r2, [r3, #0]
 8003dbc:	e001      	b.n	8003dc2 <Touch_TouchGFXSampleTouch+0xb2>
			} else {						// not a new touch
				if (((HAL_GetTick()-touchTime)>DELAY_TO_KEY_REPEAT) && (DELAY_TO_KEY_REPEAT > 0)){	// if timeout to key repeat is over (0 means no key repeat)
 8003dbe:	f000 f8b9 	bl	8003f34 <HAL_GetTick>
					flipTouch=!flipTouch;	// alternate every time function is called
				} else
					if (DELAY_TO_KEY_REPEAT == 0)
						flipTouch=0;		// (DELAY_TO_KEY_REPEAT == 0) means a single pulse, "-1" keep pulse as long as touch
			}
			if (flipTouch) { 	// return position only if the switching flag is on
 8003dc2:	4b13      	ldr	r3, [pc, #76]	; (8003e10 <Touch_TouchGFXSampleTouch+0x100>)
 8003dc4:	781b      	ldrb	r3, [r3, #0]
 8003dc6:	2b00      	cmp	r3, #0
 8003dc8:	d012      	beq.n	8003df0 <Touch_TouchGFXSampleTouch+0xe0>
				*x=(((avgXX*(TOUCHGFX_MOVAVG-1)+((xx/TOUCHGFX_SENSITIVITY)*TOUCHGFX_SENSITIVITY)))/TOUCHGFX_MOVAVG);
 8003dca:	89bb      	ldrh	r3, [r7, #12]
 8003dcc:	461a      	mov	r2, r3
 8003dce:	687b      	ldr	r3, [r7, #4]
 8003dd0:	601a      	str	r2, [r3, #0]
				*y=(((avgYY*(TOUCHGFX_MOVAVG-1)+((yy/TOUCHGFX_SENSITIVITY)*TOUCHGFX_SENSITIVITY)))/TOUCHGFX_MOVAVG);
 8003dd2:	897b      	ldrh	r3, [r7, #10]
 8003dd4:	461a      	mov	r2, r3
 8003dd6:	683b      	ldr	r3, [r7, #0]
 8003dd8:	601a      	str	r2, [r3, #0]
				avgXX = *x;
 8003dda:	687b      	ldr	r3, [r7, #4]
 8003ddc:	681b      	ldr	r3, [r3, #0]
 8003dde:	b29a      	uxth	r2, r3
 8003de0:	4b09      	ldr	r3, [pc, #36]	; (8003e08 <Touch_TouchGFXSampleTouch+0xf8>)
 8003de2:	801a      	strh	r2, [r3, #0]
				avgYY = *y;
 8003de4:	683b      	ldr	r3, [r7, #0]
 8003de6:	681b      	ldr	r3, [r3, #0]
 8003de8:	b29a      	uxth	r2, r3
 8003dea:	4b08      	ldr	r3, [pc, #32]	; (8003e0c <Touch_TouchGFXSampleTouch+0xfc>)
 8003dec:	801a      	strh	r2, [r3, #0]
 8003dee:	e001      	b.n	8003df4 <Touch_TouchGFXSampleTouch+0xe4>
			} else {			// otherwise return "no touch" from display
				isTouch = 0;
 8003df0:	2300      	movs	r3, #0
 8003df2:	73fb      	strb	r3, [r7, #15]
			}
		}
	}
	return isTouch;
 8003df4:	7bfb      	ldrb	r3, [r7, #15]
}
 8003df6:	4618      	mov	r0, r3
 8003df8:	3710      	adds	r7, #16
 8003dfa:	46bd      	mov	sp, r7
 8003dfc:	bd80      	pop	{r7, pc}
 8003dfe:	bf00      	nop
 8003e00:	2000000c 	.word	0x2000000c
 8003e04:	20000388 	.word	0x20000388
 8003e08:	2000038a 	.word	0x2000038a
 8003e0c:	2000038c 	.word	0x2000038c
 8003e10:	2000038e 	.word	0x2000038e

08003e14 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack    		 /* set stack pointer */
 8003e14:	f8df d034 	ldr.w	sp, [pc, #52]	; 8003e4c <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8003e18:	480d      	ldr	r0, [pc, #52]	; (8003e50 <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 8003e1a:	490e      	ldr	r1, [pc, #56]	; (8003e54 <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 8003e1c:	4a0e      	ldr	r2, [pc, #56]	; (8003e58 <LoopFillZerobss+0x1e>)
  movs r3, #0
 8003e1e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8003e20:	e002      	b.n	8003e28 <LoopCopyDataInit>

08003e22 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8003e22:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8003e24:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8003e26:	3304      	adds	r3, #4

08003e28 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8003e28:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8003e2a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8003e2c:	d3f9      	bcc.n	8003e22 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8003e2e:	4a0b      	ldr	r2, [pc, #44]	; (8003e5c <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 8003e30:	4c0b      	ldr	r4, [pc, #44]	; (8003e60 <LoopFillZerobss+0x26>)
  movs r3, #0
 8003e32:	2300      	movs	r3, #0
  b LoopFillZerobss
 8003e34:	e001      	b.n	8003e3a <LoopFillZerobss>

08003e36 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8003e36:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8003e38:	3204      	adds	r2, #4

08003e3a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8003e3a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8003e3c:	d3fb      	bcc.n	8003e36 <FillZerobss>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 8003e3e:	f7ff faa1 	bl	8003384 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8003e42:	f027 fd2d 	bl	802b8a0 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8003e46:	f7fe faf7 	bl	8002438 <main>
  bx  lr    
 8003e4a:	4770      	bx	lr
  ldr   sp, =_estack    		 /* set stack pointer */
 8003e4c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8003e50:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8003e54:	200000fc 	.word	0x200000fc
  ldr r2, =_sidata
 8003e58:	0804cea4 	.word	0x0804cea4
  ldr r2, =_sbss
 8003e5c:	200000fc 	.word	0x200000fc
  ldr r4, =_ebss
 8003e60:	20002e84 	.word	0x20002e84

08003e64 <DMA1_Stream0_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8003e64:	e7fe      	b.n	8003e64 <DMA1_Stream0_IRQHandler>
	...

08003e68 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8003e68:	b580      	push	{r7, lr}
 8003e6a:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8003e6c:	4b0e      	ldr	r3, [pc, #56]	; (8003ea8 <HAL_Init+0x40>)
 8003e6e:	681b      	ldr	r3, [r3, #0]
 8003e70:	4a0d      	ldr	r2, [pc, #52]	; (8003ea8 <HAL_Init+0x40>)
 8003e72:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8003e76:	6013      	str	r3, [r2, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8003e78:	4b0b      	ldr	r3, [pc, #44]	; (8003ea8 <HAL_Init+0x40>)
 8003e7a:	681b      	ldr	r3, [r3, #0]
 8003e7c:	4a0a      	ldr	r2, [pc, #40]	; (8003ea8 <HAL_Init+0x40>)
 8003e7e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8003e82:	6013      	str	r3, [r2, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8003e84:	4b08      	ldr	r3, [pc, #32]	; (8003ea8 <HAL_Init+0x40>)
 8003e86:	681b      	ldr	r3, [r3, #0]
 8003e88:	4a07      	ldr	r2, [pc, #28]	; (8003ea8 <HAL_Init+0x40>)
 8003e8a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003e8e:	6013      	str	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8003e90:	2003      	movs	r0, #3
 8003e92:	f000 f991 	bl	80041b8 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8003e96:	200f      	movs	r0, #15
 8003e98:	f000 f808 	bl	8003eac <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8003e9c:	f7fe feee 	bl	8002c7c <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 8003ea0:	2300      	movs	r3, #0
}
 8003ea2:	4618      	mov	r0, r3
 8003ea4:	bd80      	pop	{r7, pc}
 8003ea6:	bf00      	nop
 8003ea8:	40023c00 	.word	0x40023c00

08003eac <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8003eac:	b580      	push	{r7, lr}
 8003eae:	b082      	sub	sp, #8
 8003eb0:	af00      	add	r7, sp, #0
 8003eb2:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8003eb4:	4b12      	ldr	r3, [pc, #72]	; (8003f00 <HAL_InitTick+0x54>)
 8003eb6:	681a      	ldr	r2, [r3, #0]
 8003eb8:	4b12      	ldr	r3, [pc, #72]	; (8003f04 <HAL_InitTick+0x58>)
 8003eba:	781b      	ldrb	r3, [r3, #0]
 8003ebc:	4619      	mov	r1, r3
 8003ebe:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8003ec2:	fbb3 f3f1 	udiv	r3, r3, r1
 8003ec6:	fbb2 f3f3 	udiv	r3, r2, r3
 8003eca:	4618      	mov	r0, r3
 8003ecc:	f000 f9b7 	bl	800423e <HAL_SYSTICK_Config>
 8003ed0:	4603      	mov	r3, r0
 8003ed2:	2b00      	cmp	r3, #0
 8003ed4:	d001      	beq.n	8003eda <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 8003ed6:	2301      	movs	r3, #1
 8003ed8:	e00e      	b.n	8003ef8 <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8003eda:	687b      	ldr	r3, [r7, #4]
 8003edc:	2b0f      	cmp	r3, #15
 8003ede:	d80a      	bhi.n	8003ef6 <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8003ee0:	2200      	movs	r2, #0
 8003ee2:	6879      	ldr	r1, [r7, #4]
 8003ee4:	f04f 30ff 	mov.w	r0, #4294967295
 8003ee8:	f000 f971 	bl	80041ce <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8003eec:	4a06      	ldr	r2, [pc, #24]	; (8003f08 <HAL_InitTick+0x5c>)
 8003eee:	687b      	ldr	r3, [r7, #4]
 8003ef0:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 8003ef2:	2300      	movs	r3, #0
 8003ef4:	e000      	b.n	8003ef8 <HAL_InitTick+0x4c>
    return HAL_ERROR;
 8003ef6:	2301      	movs	r3, #1
}
 8003ef8:	4618      	mov	r0, r3
 8003efa:	3708      	adds	r7, #8
 8003efc:	46bd      	mov	sp, r7
 8003efe:	bd80      	pop	{r7, pc}
 8003f00:	20000004 	.word	0x20000004
 8003f04:	20000014 	.word	0x20000014
 8003f08:	20000010 	.word	0x20000010

08003f0c <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8003f0c:	b480      	push	{r7}
 8003f0e:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8003f10:	4b06      	ldr	r3, [pc, #24]	; (8003f2c <HAL_IncTick+0x20>)
 8003f12:	781b      	ldrb	r3, [r3, #0]
 8003f14:	461a      	mov	r2, r3
 8003f16:	4b06      	ldr	r3, [pc, #24]	; (8003f30 <HAL_IncTick+0x24>)
 8003f18:	681b      	ldr	r3, [r3, #0]
 8003f1a:	4413      	add	r3, r2
 8003f1c:	4a04      	ldr	r2, [pc, #16]	; (8003f30 <HAL_IncTick+0x24>)
 8003f1e:	6013      	str	r3, [r2, #0]
}
 8003f20:	bf00      	nop
 8003f22:	46bd      	mov	sp, r7
 8003f24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f28:	4770      	bx	lr
 8003f2a:	bf00      	nop
 8003f2c:	20000014 	.word	0x20000014
 8003f30:	20000390 	.word	0x20000390

08003f34 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8003f34:	b480      	push	{r7}
 8003f36:	af00      	add	r7, sp, #0
  return uwTick;
 8003f38:	4b03      	ldr	r3, [pc, #12]	; (8003f48 <HAL_GetTick+0x14>)
 8003f3a:	681b      	ldr	r3, [r3, #0]
}
 8003f3c:	4618      	mov	r0, r3
 8003f3e:	46bd      	mov	sp, r7
 8003f40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f44:	4770      	bx	lr
 8003f46:	bf00      	nop
 8003f48:	20000390 	.word	0x20000390

08003f4c <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8003f4c:	b580      	push	{r7, lr}
 8003f4e:	b084      	sub	sp, #16
 8003f50:	af00      	add	r7, sp, #0
 8003f52:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8003f54:	f7ff ffee 	bl	8003f34 <HAL_GetTick>
 8003f58:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 8003f5a:	687b      	ldr	r3, [r7, #4]
 8003f5c:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8003f5e:	68fb      	ldr	r3, [r7, #12]
 8003f60:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003f64:	d005      	beq.n	8003f72 <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 8003f66:	4b0a      	ldr	r3, [pc, #40]	; (8003f90 <HAL_Delay+0x44>)
 8003f68:	781b      	ldrb	r3, [r3, #0]
 8003f6a:	461a      	mov	r2, r3
 8003f6c:	68fb      	ldr	r3, [r7, #12]
 8003f6e:	4413      	add	r3, r2
 8003f70:	60fb      	str	r3, [r7, #12]
  }

  while((HAL_GetTick() - tickstart) < wait)
 8003f72:	bf00      	nop
 8003f74:	f7ff ffde 	bl	8003f34 <HAL_GetTick>
 8003f78:	4602      	mov	r2, r0
 8003f7a:	68bb      	ldr	r3, [r7, #8]
 8003f7c:	1ad3      	subs	r3, r2, r3
 8003f7e:	68fa      	ldr	r2, [r7, #12]
 8003f80:	429a      	cmp	r2, r3
 8003f82:	d8f7      	bhi.n	8003f74 <HAL_Delay+0x28>
  {
  }
}
 8003f84:	bf00      	nop
 8003f86:	bf00      	nop
 8003f88:	3710      	adds	r7, #16
 8003f8a:	46bd      	mov	sp, r7
 8003f8c:	bd80      	pop	{r7, pc}
 8003f8e:	bf00      	nop
 8003f90:	20000014 	.word	0x20000014

08003f94 <__NVIC_SetPriorityGrouping>:
{
 8003f94:	b480      	push	{r7}
 8003f96:	b085      	sub	sp, #20
 8003f98:	af00      	add	r7, sp, #0
 8003f9a:	6078      	str	r0, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 8003f9c:	687b      	ldr	r3, [r7, #4]
 8003f9e:	f003 0307 	and.w	r3, r3, #7
 8003fa2:	60fb      	str	r3, [r7, #12]
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8003fa4:	4b0c      	ldr	r3, [pc, #48]	; (8003fd8 <__NVIC_SetPriorityGrouping+0x44>)
 8003fa6:	68db      	ldr	r3, [r3, #12]
 8003fa8:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8003faa:	68ba      	ldr	r2, [r7, #8]
 8003fac:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8003fb0:	4013      	ands	r3, r2
 8003fb2:	60bb      	str	r3, [r7, #8]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8003fb4:	68fb      	ldr	r3, [r7, #12]
 8003fb6:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8003fb8:	68bb      	ldr	r3, [r7, #8]
 8003fba:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8003fbc:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8003fc0:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8003fc4:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 8003fc6:	4a04      	ldr	r2, [pc, #16]	; (8003fd8 <__NVIC_SetPriorityGrouping+0x44>)
 8003fc8:	68bb      	ldr	r3, [r7, #8]
 8003fca:	60d3      	str	r3, [r2, #12]
}
 8003fcc:	bf00      	nop
 8003fce:	3714      	adds	r7, #20
 8003fd0:	46bd      	mov	sp, r7
 8003fd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003fd6:	4770      	bx	lr
 8003fd8:	e000ed00 	.word	0xe000ed00

08003fdc <__NVIC_GetPriorityGrouping>:
{
 8003fdc:	b480      	push	{r7}
 8003fde:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8003fe0:	4b04      	ldr	r3, [pc, #16]	; (8003ff4 <__NVIC_GetPriorityGrouping+0x18>)
 8003fe2:	68db      	ldr	r3, [r3, #12]
 8003fe4:	0a1b      	lsrs	r3, r3, #8
 8003fe6:	f003 0307 	and.w	r3, r3, #7
}
 8003fea:	4618      	mov	r0, r3
 8003fec:	46bd      	mov	sp, r7
 8003fee:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ff2:	4770      	bx	lr
 8003ff4:	e000ed00 	.word	0xe000ed00

08003ff8 <__NVIC_EnableIRQ>:
{
 8003ff8:	b480      	push	{r7}
 8003ffa:	b083      	sub	sp, #12
 8003ffc:	af00      	add	r7, sp, #0
 8003ffe:	4603      	mov	r3, r0
 8004000:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8004002:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004006:	2b00      	cmp	r3, #0
 8004008:	db0b      	blt.n	8004022 <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800400a:	79fb      	ldrb	r3, [r7, #7]
 800400c:	f003 021f 	and.w	r2, r3, #31
 8004010:	4907      	ldr	r1, [pc, #28]	; (8004030 <__NVIC_EnableIRQ+0x38>)
 8004012:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004016:	095b      	lsrs	r3, r3, #5
 8004018:	2001      	movs	r0, #1
 800401a:	fa00 f202 	lsl.w	r2, r0, r2
 800401e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 8004022:	bf00      	nop
 8004024:	370c      	adds	r7, #12
 8004026:	46bd      	mov	sp, r7
 8004028:	f85d 7b04 	ldr.w	r7, [sp], #4
 800402c:	4770      	bx	lr
 800402e:	bf00      	nop
 8004030:	e000e100 	.word	0xe000e100

08004034 <__NVIC_DisableIRQ>:
{
 8004034:	b480      	push	{r7}
 8004036:	b083      	sub	sp, #12
 8004038:	af00      	add	r7, sp, #0
 800403a:	4603      	mov	r3, r0
 800403c:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800403e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004042:	2b00      	cmp	r3, #0
 8004044:	db12      	blt.n	800406c <__NVIC_DisableIRQ+0x38>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8004046:	79fb      	ldrb	r3, [r7, #7]
 8004048:	f003 021f 	and.w	r2, r3, #31
 800404c:	490a      	ldr	r1, [pc, #40]	; (8004078 <__NVIC_DisableIRQ+0x44>)
 800404e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004052:	095b      	lsrs	r3, r3, #5
 8004054:	2001      	movs	r0, #1
 8004056:	fa00 f202 	lsl.w	r2, r0, r2
 800405a:	3320      	adds	r3, #32
 800405c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 8004060:	f3bf 8f4f 	dsb	sy
}
 8004064:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8004066:	f3bf 8f6f 	isb	sy
}
 800406a:	bf00      	nop
}
 800406c:	bf00      	nop
 800406e:	370c      	adds	r7, #12
 8004070:	46bd      	mov	sp, r7
 8004072:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004076:	4770      	bx	lr
 8004078:	e000e100 	.word	0xe000e100

0800407c <__NVIC_ClearPendingIRQ>:
{
 800407c:	b480      	push	{r7}
 800407e:	b083      	sub	sp, #12
 8004080:	af00      	add	r7, sp, #0
 8004082:	4603      	mov	r3, r0
 8004084:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8004086:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800408a:	2b00      	cmp	r3, #0
 800408c:	db0c      	blt.n	80040a8 <__NVIC_ClearPendingIRQ+0x2c>
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800408e:	79fb      	ldrb	r3, [r7, #7]
 8004090:	f003 021f 	and.w	r2, r3, #31
 8004094:	4907      	ldr	r1, [pc, #28]	; (80040b4 <__NVIC_ClearPendingIRQ+0x38>)
 8004096:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800409a:	095b      	lsrs	r3, r3, #5
 800409c:	2001      	movs	r0, #1
 800409e:	fa00 f202 	lsl.w	r2, r0, r2
 80040a2:	3360      	adds	r3, #96	; 0x60
 80040a4:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 80040a8:	bf00      	nop
 80040aa:	370c      	adds	r7, #12
 80040ac:	46bd      	mov	sp, r7
 80040ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040b2:	4770      	bx	lr
 80040b4:	e000e100 	.word	0xe000e100

080040b8 <__NVIC_SetPriority>:
{
 80040b8:	b480      	push	{r7}
 80040ba:	b083      	sub	sp, #12
 80040bc:	af00      	add	r7, sp, #0
 80040be:	4603      	mov	r3, r0
 80040c0:	6039      	str	r1, [r7, #0]
 80040c2:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80040c4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80040c8:	2b00      	cmp	r3, #0
 80040ca:	db0a      	blt.n	80040e2 <__NVIC_SetPriority+0x2a>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80040cc:	683b      	ldr	r3, [r7, #0]
 80040ce:	b2da      	uxtb	r2, r3
 80040d0:	490c      	ldr	r1, [pc, #48]	; (8004104 <__NVIC_SetPriority+0x4c>)
 80040d2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80040d6:	0112      	lsls	r2, r2, #4
 80040d8:	b2d2      	uxtb	r2, r2
 80040da:	440b      	add	r3, r1
 80040dc:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
 80040e0:	e00a      	b.n	80040f8 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80040e2:	683b      	ldr	r3, [r7, #0]
 80040e4:	b2da      	uxtb	r2, r3
 80040e6:	4908      	ldr	r1, [pc, #32]	; (8004108 <__NVIC_SetPriority+0x50>)
 80040e8:	79fb      	ldrb	r3, [r7, #7]
 80040ea:	f003 030f 	and.w	r3, r3, #15
 80040ee:	3b04      	subs	r3, #4
 80040f0:	0112      	lsls	r2, r2, #4
 80040f2:	b2d2      	uxtb	r2, r2
 80040f4:	440b      	add	r3, r1
 80040f6:	761a      	strb	r2, [r3, #24]
}
 80040f8:	bf00      	nop
 80040fa:	370c      	adds	r7, #12
 80040fc:	46bd      	mov	sp, r7
 80040fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004102:	4770      	bx	lr
 8004104:	e000e100 	.word	0xe000e100
 8004108:	e000ed00 	.word	0xe000ed00

0800410c <NVIC_EncodePriority>:
{
 800410c:	b480      	push	{r7}
 800410e:	b089      	sub	sp, #36	; 0x24
 8004110:	af00      	add	r7, sp, #0
 8004112:	60f8      	str	r0, [r7, #12]
 8004114:	60b9      	str	r1, [r7, #8]
 8004116:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 8004118:	68fb      	ldr	r3, [r7, #12]
 800411a:	f003 0307 	and.w	r3, r3, #7
 800411e:	61fb      	str	r3, [r7, #28]
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8004120:	69fb      	ldr	r3, [r7, #28]
 8004122:	f1c3 0307 	rsb	r3, r3, #7
 8004126:	2b04      	cmp	r3, #4
 8004128:	bf28      	it	cs
 800412a:	2304      	movcs	r3, #4
 800412c:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800412e:	69fb      	ldr	r3, [r7, #28]
 8004130:	3304      	adds	r3, #4
 8004132:	2b06      	cmp	r3, #6
 8004134:	d902      	bls.n	800413c <NVIC_EncodePriority+0x30>
 8004136:	69fb      	ldr	r3, [r7, #28]
 8004138:	3b03      	subs	r3, #3
 800413a:	e000      	b.n	800413e <NVIC_EncodePriority+0x32>
 800413c:	2300      	movs	r3, #0
 800413e:	617b      	str	r3, [r7, #20]
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004140:	f04f 32ff 	mov.w	r2, #4294967295
 8004144:	69bb      	ldr	r3, [r7, #24]
 8004146:	fa02 f303 	lsl.w	r3, r2, r3
 800414a:	43da      	mvns	r2, r3
 800414c:	68bb      	ldr	r3, [r7, #8]
 800414e:	401a      	ands	r2, r3
 8004150:	697b      	ldr	r3, [r7, #20]
 8004152:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8004154:	f04f 31ff 	mov.w	r1, #4294967295
 8004158:	697b      	ldr	r3, [r7, #20]
 800415a:	fa01 f303 	lsl.w	r3, r1, r3
 800415e:	43d9      	mvns	r1, r3
 8004160:	687b      	ldr	r3, [r7, #4]
 8004162:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004164:	4313      	orrs	r3, r2
}
 8004166:	4618      	mov	r0, r3
 8004168:	3724      	adds	r7, #36	; 0x24
 800416a:	46bd      	mov	sp, r7
 800416c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004170:	4770      	bx	lr
	...

08004174 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8004174:	b580      	push	{r7, lr}
 8004176:	b082      	sub	sp, #8
 8004178:	af00      	add	r7, sp, #0
 800417a:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 800417c:	687b      	ldr	r3, [r7, #4]
 800417e:	3b01      	subs	r3, #1
 8004180:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8004184:	d301      	bcc.n	800418a <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 8004186:	2301      	movs	r3, #1
 8004188:	e00f      	b.n	80041aa <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 800418a:	4a0a      	ldr	r2, [pc, #40]	; (80041b4 <SysTick_Config+0x40>)
 800418c:	687b      	ldr	r3, [r7, #4]
 800418e:	3b01      	subs	r3, #1
 8004190:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8004192:	210f      	movs	r1, #15
 8004194:	f04f 30ff 	mov.w	r0, #4294967295
 8004198:	f7ff ff8e 	bl	80040b8 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 800419c:	4b05      	ldr	r3, [pc, #20]	; (80041b4 <SysTick_Config+0x40>)
 800419e:	2200      	movs	r2, #0
 80041a0:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 80041a2:	4b04      	ldr	r3, [pc, #16]	; (80041b4 <SysTick_Config+0x40>)
 80041a4:	2207      	movs	r2, #7
 80041a6:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 80041a8:	2300      	movs	r3, #0
}
 80041aa:	4618      	mov	r0, r3
 80041ac:	3708      	adds	r7, #8
 80041ae:	46bd      	mov	sp, r7
 80041b0:	bd80      	pop	{r7, pc}
 80041b2:	bf00      	nop
 80041b4:	e000e010 	.word	0xe000e010

080041b8 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 80041b8:	b580      	push	{r7, lr}
 80041ba:	b082      	sub	sp, #8
 80041bc:	af00      	add	r7, sp, #0
 80041be:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 80041c0:	6878      	ldr	r0, [r7, #4]
 80041c2:	f7ff fee7 	bl	8003f94 <__NVIC_SetPriorityGrouping>
}
 80041c6:	bf00      	nop
 80041c8:	3708      	adds	r7, #8
 80041ca:	46bd      	mov	sp, r7
 80041cc:	bd80      	pop	{r7, pc}

080041ce <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80041ce:	b580      	push	{r7, lr}
 80041d0:	b086      	sub	sp, #24
 80041d2:	af00      	add	r7, sp, #0
 80041d4:	4603      	mov	r3, r0
 80041d6:	60b9      	str	r1, [r7, #8]
 80041d8:	607a      	str	r2, [r7, #4]
 80041da:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 80041dc:	2300      	movs	r3, #0
 80041de:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 80041e0:	f7ff fefc 	bl	8003fdc <__NVIC_GetPriorityGrouping>
 80041e4:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 80041e6:	687a      	ldr	r2, [r7, #4]
 80041e8:	68b9      	ldr	r1, [r7, #8]
 80041ea:	6978      	ldr	r0, [r7, #20]
 80041ec:	f7ff ff8e 	bl	800410c <NVIC_EncodePriority>
 80041f0:	4602      	mov	r2, r0
 80041f2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80041f6:	4611      	mov	r1, r2
 80041f8:	4618      	mov	r0, r3
 80041fa:	f7ff ff5d 	bl	80040b8 <__NVIC_SetPriority>
}
 80041fe:	bf00      	nop
 8004200:	3718      	adds	r7, #24
 8004202:	46bd      	mov	sp, r7
 8004204:	bd80      	pop	{r7, pc}

08004206 <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8004206:	b580      	push	{r7, lr}
 8004208:	b082      	sub	sp, #8
 800420a:	af00      	add	r7, sp, #0
 800420c:	4603      	mov	r3, r0
 800420e:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 8004210:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004214:	4618      	mov	r0, r3
 8004216:	f7ff feef 	bl	8003ff8 <__NVIC_EnableIRQ>
}
 800421a:	bf00      	nop
 800421c:	3708      	adds	r7, #8
 800421e:	46bd      	mov	sp, r7
 8004220:	bd80      	pop	{r7, pc}

08004222 <HAL_NVIC_DisableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_DisableIRQ(IRQn_Type IRQn)
{
 8004222:	b580      	push	{r7, lr}
 8004224:	b082      	sub	sp, #8
 8004226:	af00      	add	r7, sp, #0
 8004228:	4603      	mov	r3, r0
 800422a:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
 800422c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004230:	4618      	mov	r0, r3
 8004232:	f7ff feff 	bl	8004034 <__NVIC_DisableIRQ>
}
 8004236:	bf00      	nop
 8004238:	3708      	adds	r7, #8
 800423a:	46bd      	mov	sp, r7
 800423c:	bd80      	pop	{r7, pc}

0800423e <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 800423e:	b580      	push	{r7, lr}
 8004240:	b082      	sub	sp, #8
 8004242:	af00      	add	r7, sp, #0
 8004244:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 8004246:	6878      	ldr	r0, [r7, #4]
 8004248:	f7ff ff94 	bl	8004174 <SysTick_Config>
 800424c:	4603      	mov	r3, r0
}
 800424e:	4618      	mov	r0, r3
 8004250:	3708      	adds	r7, #8
 8004252:	46bd      	mov	sp, r7
 8004254:	bd80      	pop	{r7, pc}

08004256 <HAL_NVIC_ClearPendingIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
 8004256:	b580      	push	{r7, lr}
 8004258:	b082      	sub	sp, #8
 800425a:	af00      	add	r7, sp, #0
 800425c:	4603      	mov	r3, r0
 800425e:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Clear pending interrupt */
  NVIC_ClearPendingIRQ(IRQn);
 8004260:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004264:	4618      	mov	r0, r3
 8004266:	f7ff ff09 	bl	800407c <__NVIC_ClearPendingIRQ>
}
 800426a:	bf00      	nop
 800426c:	3708      	adds	r7, #8
 800426e:	46bd      	mov	sp, r7
 8004270:	bd80      	pop	{r7, pc}

08004272 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8004272:	b580      	push	{r7, lr}
 8004274:	b082      	sub	sp, #8
 8004276:	af00      	add	r7, sp, #0
 8004278:	6078      	str	r0, [r7, #4]
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800427a:	687b      	ldr	r3, [r7, #4]
 800427c:	2b00      	cmp	r3, #0
 800427e:	d101      	bne.n	8004284 <HAL_CRC_Init+0x12>
  {
    return HAL_ERROR;
 8004280:	2301      	movs	r3, #1
 8004282:	e00e      	b.n	80042a2 <HAL_CRC_Init+0x30>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8004284:	687b      	ldr	r3, [r7, #4]
 8004286:	795b      	ldrb	r3, [r3, #5]
 8004288:	b2db      	uxtb	r3, r3
 800428a:	2b00      	cmp	r3, #0
 800428c:	d105      	bne.n	800429a <HAL_CRC_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 800428e:	687b      	ldr	r3, [r7, #4]
 8004290:	2200      	movs	r2, #0
 8004292:	711a      	strb	r2, [r3, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8004294:	6878      	ldr	r0, [r7, #4]
 8004296:	f7fe fd19 	bl	8002ccc <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800429a:	687b      	ldr	r3, [r7, #4]
 800429c:	2201      	movs	r2, #1
 800429e:	715a      	strb	r2, [r3, #5]

  /* Return function status */
  return HAL_OK;
 80042a0:	2300      	movs	r3, #0
}
 80042a2:	4618      	mov	r0, r3
 80042a4:	3708      	adds	r7, #8
 80042a6:	46bd      	mov	sp, r7
 80042a8:	bd80      	pop	{r7, pc}
	...

080042ac <HAL_DMA_Init>:
  * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
{
 80042ac:	b580      	push	{r7, lr}
 80042ae:	b086      	sub	sp, #24
 80042b0:	af00      	add	r7, sp, #0
 80042b2:	6078      	str	r0, [r7, #4]
  uint32_t tmp = 0U;
 80042b4:	2300      	movs	r3, #0
 80042b6:	617b      	str	r3, [r7, #20]
  uint32_t tickstart = HAL_GetTick();
 80042b8:	f7ff fe3c 	bl	8003f34 <HAL_GetTick>
 80042bc:	6138      	str	r0, [r7, #16]
  DMA_Base_Registers *regs;

  /* Check the DMA peripheral state */
  if(hdma == NULL)
 80042be:	687b      	ldr	r3, [r7, #4]
 80042c0:	2b00      	cmp	r3, #0
 80042c2:	d101      	bne.n	80042c8 <HAL_DMA_Init+0x1c>
  {
    return HAL_ERROR;
 80042c4:	2301      	movs	r3, #1
 80042c6:	e099      	b.n	80043fc <HAL_DMA_Init+0x150>
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
  }

  /* Change DMA peripheral state */
  hdma->State = HAL_DMA_STATE_BUSY;
 80042c8:	687b      	ldr	r3, [r7, #4]
 80042ca:	2202      	movs	r2, #2
 80042cc:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

  /* Allocate lock resource */
  __HAL_UNLOCK(hdma);
 80042d0:	687b      	ldr	r3, [r7, #4]
 80042d2:	2200      	movs	r2, #0
 80042d4:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
  
  /* Disable the peripheral */
  __HAL_DMA_DISABLE(hdma);
 80042d8:	687b      	ldr	r3, [r7, #4]
 80042da:	681b      	ldr	r3, [r3, #0]
 80042dc:	681a      	ldr	r2, [r3, #0]
 80042de:	687b      	ldr	r3, [r7, #4]
 80042e0:	681b      	ldr	r3, [r3, #0]
 80042e2:	f022 0201 	bic.w	r2, r2, #1
 80042e6:	601a      	str	r2, [r3, #0]
  
  /* Check if the DMA Stream is effectively disabled */
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 80042e8:	e00f      	b.n	800430a <HAL_DMA_Init+0x5e>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 80042ea:	f7ff fe23 	bl	8003f34 <HAL_GetTick>
 80042ee:	4602      	mov	r2, r0
 80042f0:	693b      	ldr	r3, [r7, #16]
 80042f2:	1ad3      	subs	r3, r2, r3
 80042f4:	2b05      	cmp	r3, #5
 80042f6:	d908      	bls.n	800430a <HAL_DMA_Init+0x5e>
    {
      /* Update error code */
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 80042f8:	687b      	ldr	r3, [r7, #4]
 80042fa:	2220      	movs	r2, #32
 80042fc:	655a      	str	r2, [r3, #84]	; 0x54
      
      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 80042fe:	687b      	ldr	r3, [r7, #4]
 8004300:	2203      	movs	r2, #3
 8004302:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
      
      return HAL_TIMEOUT;
 8004306:	2303      	movs	r3, #3
 8004308:	e078      	b.n	80043fc <HAL_DMA_Init+0x150>
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 800430a:	687b      	ldr	r3, [r7, #4]
 800430c:	681b      	ldr	r3, [r3, #0]
 800430e:	681b      	ldr	r3, [r3, #0]
 8004310:	f003 0301 	and.w	r3, r3, #1
 8004314:	2b00      	cmp	r3, #0
 8004316:	d1e8      	bne.n	80042ea <HAL_DMA_Init+0x3e>
    }
  }
  
  /* Get the CR register value */
  tmp = hdma->Instance->CR;
 8004318:	687b      	ldr	r3, [r7, #4]
 800431a:	681b      	ldr	r3, [r3, #0]
 800431c:	681b      	ldr	r3, [r3, #0]
 800431e:	617b      	str	r3, [r7, #20]

  /* Clear CHSEL, MBURST, PBURST, PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR, CT and DBM bits */
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8004320:	697a      	ldr	r2, [r7, #20]
 8004322:	4b38      	ldr	r3, [pc, #224]	; (8004404 <HAL_DMA_Init+0x158>)
 8004324:	4013      	ands	r3, r2
 8004326:	617b      	str	r3, [r7, #20]
                      DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
                      DMA_SxCR_MINC  | DMA_SxCR_PINC   | DMA_SxCR_CIRC   | \
                      DMA_SxCR_DIR   | DMA_SxCR_CT     | DMA_SxCR_DBM));

  /* Prepare the DMA Stream configuration */
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8004328:	687b      	ldr	r3, [r7, #4]
 800432a:	685a      	ldr	r2, [r3, #4]
 800432c:	687b      	ldr	r3, [r7, #4]
 800432e:	689b      	ldr	r3, [r3, #8]
 8004330:	431a      	orrs	r2, r3
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8004332:	687b      	ldr	r3, [r7, #4]
 8004334:	68db      	ldr	r3, [r3, #12]
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8004336:	431a      	orrs	r2, r3
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8004338:	687b      	ldr	r3, [r7, #4]
 800433a:	691b      	ldr	r3, [r3, #16]
 800433c:	431a      	orrs	r2, r3
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 800433e:	687b      	ldr	r3, [r7, #4]
 8004340:	695b      	ldr	r3, [r3, #20]
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8004342:	431a      	orrs	r2, r3
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8004344:	687b      	ldr	r3, [r7, #4]
 8004346:	699b      	ldr	r3, [r3, #24]
 8004348:	431a      	orrs	r2, r3
          hdma->Init.Mode                | hdma->Init.Priority;
 800434a:	687b      	ldr	r3, [r7, #4]
 800434c:	69db      	ldr	r3, [r3, #28]
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 800434e:	431a      	orrs	r2, r3
          hdma->Init.Mode                | hdma->Init.Priority;
 8004350:	687b      	ldr	r3, [r7, #4]
 8004352:	6a1b      	ldr	r3, [r3, #32]
 8004354:	4313      	orrs	r3, r2
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8004356:	697a      	ldr	r2, [r7, #20]
 8004358:	4313      	orrs	r3, r2
 800435a:	617b      	str	r3, [r7, #20]

  /* the Memory burst and peripheral burst are not used when the FIFO is disabled */
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 800435c:	687b      	ldr	r3, [r7, #4]
 800435e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004360:	2b04      	cmp	r3, #4
 8004362:	d107      	bne.n	8004374 <HAL_DMA_Init+0xc8>
  {
    /* Get memory burst and peripheral burst */
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 8004364:	687b      	ldr	r3, [r7, #4]
 8004366:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004368:	687b      	ldr	r3, [r7, #4]
 800436a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800436c:	4313      	orrs	r3, r2
 800436e:	697a      	ldr	r2, [r7, #20]
 8004370:	4313      	orrs	r3, r2
 8004372:	617b      	str	r3, [r7, #20]
  }
  
  /* Write to DMA Stream CR register */
  hdma->Instance->CR = tmp;  
 8004374:	687b      	ldr	r3, [r7, #4]
 8004376:	681b      	ldr	r3, [r3, #0]
 8004378:	697a      	ldr	r2, [r7, #20]
 800437a:	601a      	str	r2, [r3, #0]

  /* Get the FCR register value */
  tmp = hdma->Instance->FCR;
 800437c:	687b      	ldr	r3, [r7, #4]
 800437e:	681b      	ldr	r3, [r3, #0]
 8004380:	695b      	ldr	r3, [r3, #20]
 8004382:	617b      	str	r3, [r7, #20]

  /* Clear Direct mode and FIFO threshold bits */
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 8004384:	697b      	ldr	r3, [r7, #20]
 8004386:	f023 0307 	bic.w	r3, r3, #7
 800438a:	617b      	str	r3, [r7, #20]

  /* Prepare the DMA Stream FIFO configuration */
  tmp |= hdma->Init.FIFOMode;
 800438c:	687b      	ldr	r3, [r7, #4]
 800438e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004390:	697a      	ldr	r2, [r7, #20]
 8004392:	4313      	orrs	r3, r2
 8004394:	617b      	str	r3, [r7, #20]

  /* The FIFO threshold is not used when the FIFO mode is disabled */
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8004396:	687b      	ldr	r3, [r7, #4]
 8004398:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800439a:	2b04      	cmp	r3, #4
 800439c:	d117      	bne.n	80043ce <HAL_DMA_Init+0x122>
  {
    /* Get the FIFO threshold */
    tmp |= hdma->Init.FIFOThreshold;
 800439e:	687b      	ldr	r3, [r7, #4]
 80043a0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80043a2:	697a      	ldr	r2, [r7, #20]
 80043a4:	4313      	orrs	r3, r2
 80043a6:	617b      	str	r3, [r7, #20]
    
    /* Check compatibility between FIFO threshold level and size of the memory burst */
    /* for INCR4, INCR8, INCR16 bursts */
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 80043a8:	687b      	ldr	r3, [r7, #4]
 80043aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80043ac:	2b00      	cmp	r3, #0
 80043ae:	d00e      	beq.n	80043ce <HAL_DMA_Init+0x122>
    {
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
 80043b0:	6878      	ldr	r0, [r7, #4]
 80043b2:	f000 fa91 	bl	80048d8 <DMA_CheckFifoParam>
 80043b6:	4603      	mov	r3, r0
 80043b8:	2b00      	cmp	r3, #0
 80043ba:	d008      	beq.n	80043ce <HAL_DMA_Init+0x122>
      {
        /* Update error code */
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 80043bc:	687b      	ldr	r3, [r7, #4]
 80043be:	2240      	movs	r2, #64	; 0x40
 80043c0:	655a      	str	r2, [r3, #84]	; 0x54
        
        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_READY;
 80043c2:	687b      	ldr	r3, [r7, #4]
 80043c4:	2201      	movs	r2, #1
 80043c6:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
        
        return HAL_ERROR; 
 80043ca:	2301      	movs	r3, #1
 80043cc:	e016      	b.n	80043fc <HAL_DMA_Init+0x150>
      }
    }
  }
  
  /* Write to DMA Stream FCR */
  hdma->Instance->FCR = tmp;
 80043ce:	687b      	ldr	r3, [r7, #4]
 80043d0:	681b      	ldr	r3, [r3, #0]
 80043d2:	697a      	ldr	r2, [r7, #20]
 80043d4:	615a      	str	r2, [r3, #20]

  /* Initialize StreamBaseAddress and StreamIndex parameters to be used to calculate
     DMA steam Base Address needed by HAL_DMA_IRQHandler() and HAL_DMA_PollForTransfer() */
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 80043d6:	6878      	ldr	r0, [r7, #4]
 80043d8:	f000 fa48 	bl	800486c <DMA_CalcBaseAndBitshift>
 80043dc:	4603      	mov	r3, r0
 80043de:	60fb      	str	r3, [r7, #12]
  
  /* Clear all interrupt flags */
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 80043e0:	687b      	ldr	r3, [r7, #4]
 80043e2:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80043e4:	223f      	movs	r2, #63	; 0x3f
 80043e6:	409a      	lsls	r2, r3
 80043e8:	68fb      	ldr	r3, [r7, #12]
 80043ea:	609a      	str	r2, [r3, #8]

  /* Initialize the error code */
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80043ec:	687b      	ldr	r3, [r7, #4]
 80043ee:	2200      	movs	r2, #0
 80043f0:	655a      	str	r2, [r3, #84]	; 0x54
                                                                                     
  /* Initialize the DMA state */
  hdma->State = HAL_DMA_STATE_READY;
 80043f2:	687b      	ldr	r3, [r7, #4]
 80043f4:	2201      	movs	r2, #1
 80043f6:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

  return HAL_OK;
 80043fa:	2300      	movs	r3, #0
}
 80043fc:	4618      	mov	r0, r3
 80043fe:	3718      	adds	r7, #24
 8004400:	46bd      	mov	sp, r7
 8004402:	bd80      	pop	{r7, pc}
 8004404:	f010803f 	.word	0xf010803f

08004408 <HAL_DMA_Start_IT>:
  * @param  DstAddress The destination memory Buffer address
  * @param  DataLength The length of data to be transferred from source to destination
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
 8004408:	b580      	push	{r7, lr}
 800440a:	b086      	sub	sp, #24
 800440c:	af00      	add	r7, sp, #0
 800440e:	60f8      	str	r0, [r7, #12]
 8004410:	60b9      	str	r1, [r7, #8]
 8004412:	607a      	str	r2, [r7, #4]
 8004414:	603b      	str	r3, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 8004416:	2300      	movs	r3, #0
 8004418:	75fb      	strb	r3, [r7, #23]

  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 800441a:	68fb      	ldr	r3, [r7, #12]
 800441c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800441e:	613b      	str	r3, [r7, #16]
  
  /* Check the parameters */
  assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 
  /* Process locked */
  __HAL_LOCK(hdma);
 8004420:	68fb      	ldr	r3, [r7, #12]
 8004422:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 8004426:	2b01      	cmp	r3, #1
 8004428:	d101      	bne.n	800442e <HAL_DMA_Start_IT+0x26>
 800442a:	2302      	movs	r3, #2
 800442c:	e040      	b.n	80044b0 <HAL_DMA_Start_IT+0xa8>
 800442e:	68fb      	ldr	r3, [r7, #12]
 8004430:	2201      	movs	r2, #1
 8004432:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
  
  if(HAL_DMA_STATE_READY == hdma->State)
 8004436:	68fb      	ldr	r3, [r7, #12]
 8004438:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 800443c:	b2db      	uxtb	r3, r3
 800443e:	2b01      	cmp	r3, #1
 8004440:	d12f      	bne.n	80044a2 <HAL_DMA_Start_IT+0x9a>
  {
    /* Change DMA peripheral state */
    hdma->State = HAL_DMA_STATE_BUSY;
 8004442:	68fb      	ldr	r3, [r7, #12]
 8004444:	2202      	movs	r2, #2
 8004446:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
    
    /* Initialize the error code */
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800444a:	68fb      	ldr	r3, [r7, #12]
 800444c:	2200      	movs	r2, #0
 800444e:	655a      	str	r2, [r3, #84]	; 0x54
    
    /* Configure the source, destination address and the data length */
    DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 8004450:	683b      	ldr	r3, [r7, #0]
 8004452:	687a      	ldr	r2, [r7, #4]
 8004454:	68b9      	ldr	r1, [r7, #8]
 8004456:	68f8      	ldr	r0, [r7, #12]
 8004458:	f000 f9da 	bl	8004810 <DMA_SetConfig>
    
    /* Clear all interrupt flags at correct offset within the register */
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 800445c:	68fb      	ldr	r3, [r7, #12]
 800445e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004460:	223f      	movs	r2, #63	; 0x3f
 8004462:	409a      	lsls	r2, r3
 8004464:	693b      	ldr	r3, [r7, #16]
 8004466:	609a      	str	r2, [r3, #8]
    
    /* Enable Common interrupts*/
    hdma->Instance->CR  |= DMA_IT_TC | DMA_IT_TE | DMA_IT_DME;
 8004468:	68fb      	ldr	r3, [r7, #12]
 800446a:	681b      	ldr	r3, [r3, #0]
 800446c:	681a      	ldr	r2, [r3, #0]
 800446e:	68fb      	ldr	r3, [r7, #12]
 8004470:	681b      	ldr	r3, [r3, #0]
 8004472:	f042 0216 	orr.w	r2, r2, #22
 8004476:	601a      	str	r2, [r3, #0]
    
    if(hdma->XferHalfCpltCallback != NULL)
 8004478:	68fb      	ldr	r3, [r7, #12]
 800447a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800447c:	2b00      	cmp	r3, #0
 800447e:	d007      	beq.n	8004490 <HAL_DMA_Start_IT+0x88>
    {
      hdma->Instance->CR  |= DMA_IT_HT;
 8004480:	68fb      	ldr	r3, [r7, #12]
 8004482:	681b      	ldr	r3, [r3, #0]
 8004484:	681a      	ldr	r2, [r3, #0]
 8004486:	68fb      	ldr	r3, [r7, #12]
 8004488:	681b      	ldr	r3, [r3, #0]
 800448a:	f042 0208 	orr.w	r2, r2, #8
 800448e:	601a      	str	r2, [r3, #0]
    }
    
    /* Enable the Peripheral */
    __HAL_DMA_ENABLE(hdma);
 8004490:	68fb      	ldr	r3, [r7, #12]
 8004492:	681b      	ldr	r3, [r3, #0]
 8004494:	681a      	ldr	r2, [r3, #0]
 8004496:	68fb      	ldr	r3, [r7, #12]
 8004498:	681b      	ldr	r3, [r3, #0]
 800449a:	f042 0201 	orr.w	r2, r2, #1
 800449e:	601a      	str	r2, [r3, #0]
 80044a0:	e005      	b.n	80044ae <HAL_DMA_Start_IT+0xa6>
  }
  else
  {
    /* Process unlocked */
    __HAL_UNLOCK(hdma);	  
 80044a2:	68fb      	ldr	r3, [r7, #12]
 80044a4:	2200      	movs	r2, #0
 80044a6:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    
    /* Return error status */
    status = HAL_BUSY;
 80044aa:	2302      	movs	r3, #2
 80044ac:	75fb      	strb	r3, [r7, #23]
  }
  
  return status;
 80044ae:	7dfb      	ldrb	r3, [r7, #23]
}
 80044b0:	4618      	mov	r0, r3
 80044b2:	3718      	adds	r7, #24
 80044b4:	46bd      	mov	sp, r7
 80044b6:	bd80      	pop	{r7, pc}

080044b8 <HAL_DMA_Abort_IT>:
  * @param  hdma   pointer to a DMA_HandleTypeDef structure that contains
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
 80044b8:	b480      	push	{r7}
 80044ba:	b083      	sub	sp, #12
 80044bc:	af00      	add	r7, sp, #0
 80044be:	6078      	str	r0, [r7, #4]
  if(hdma->State != HAL_DMA_STATE_BUSY)
 80044c0:	687b      	ldr	r3, [r7, #4]
 80044c2:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80044c6:	b2db      	uxtb	r3, r3
 80044c8:	2b02      	cmp	r3, #2
 80044ca:	d004      	beq.n	80044d6 <HAL_DMA_Abort_IT+0x1e>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 80044cc:	687b      	ldr	r3, [r7, #4]
 80044ce:	2280      	movs	r2, #128	; 0x80
 80044d0:	655a      	str	r2, [r3, #84]	; 0x54
    return HAL_ERROR;
 80044d2:	2301      	movs	r3, #1
 80044d4:	e00c      	b.n	80044f0 <HAL_DMA_Abort_IT+0x38>
  }
  else
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
 80044d6:	687b      	ldr	r3, [r7, #4]
 80044d8:	2205      	movs	r2, #5
 80044da:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 80044de:	687b      	ldr	r3, [r7, #4]
 80044e0:	681b      	ldr	r3, [r3, #0]
 80044e2:	681a      	ldr	r2, [r3, #0]
 80044e4:	687b      	ldr	r3, [r7, #4]
 80044e6:	681b      	ldr	r3, [r3, #0]
 80044e8:	f022 0201 	bic.w	r2, r2, #1
 80044ec:	601a      	str	r2, [r3, #0]
  }

  return HAL_OK;
 80044ee:	2300      	movs	r3, #0
}
 80044f0:	4618      	mov	r0, r3
 80044f2:	370c      	adds	r7, #12
 80044f4:	46bd      	mov	sp, r7
 80044f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80044fa:	4770      	bx	lr

080044fc <HAL_DMA_IRQHandler>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.  
  * @retval None
  */
void HAL_DMA_IRQHandler(DMA_HandleTypeDef *hdma)
{
 80044fc:	b580      	push	{r7, lr}
 80044fe:	b086      	sub	sp, #24
 8004500:	af00      	add	r7, sp, #0
 8004502:	6078      	str	r0, [r7, #4]
  uint32_t tmpisr;
  __IO uint32_t count = 0U;
 8004504:	2300      	movs	r3, #0
 8004506:	60bb      	str	r3, [r7, #8]
  uint32_t timeout = SystemCoreClock / 9600U;
 8004508:	4b8e      	ldr	r3, [pc, #568]	; (8004744 <HAL_DMA_IRQHandler+0x248>)
 800450a:	681b      	ldr	r3, [r3, #0]
 800450c:	4a8e      	ldr	r2, [pc, #568]	; (8004748 <HAL_DMA_IRQHandler+0x24c>)
 800450e:	fba2 2303 	umull	r2, r3, r2, r3
 8004512:	0a9b      	lsrs	r3, r3, #10
 8004514:	617b      	str	r3, [r7, #20]

  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8004516:	687b      	ldr	r3, [r7, #4]
 8004518:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800451a:	613b      	str	r3, [r7, #16]

  tmpisr = regs->ISR;
 800451c:	693b      	ldr	r3, [r7, #16]
 800451e:	681b      	ldr	r3, [r3, #0]
 8004520:	60fb      	str	r3, [r7, #12]

  /* Transfer Error Interrupt management ***************************************/
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 8004522:	687b      	ldr	r3, [r7, #4]
 8004524:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004526:	2208      	movs	r2, #8
 8004528:	409a      	lsls	r2, r3
 800452a:	68fb      	ldr	r3, [r7, #12]
 800452c:	4013      	ands	r3, r2
 800452e:	2b00      	cmp	r3, #0
 8004530:	d01a      	beq.n	8004568 <HAL_DMA_IRQHandler+0x6c>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != RESET)
 8004532:	687b      	ldr	r3, [r7, #4]
 8004534:	681b      	ldr	r3, [r3, #0]
 8004536:	681b      	ldr	r3, [r3, #0]
 8004538:	f003 0304 	and.w	r3, r3, #4
 800453c:	2b00      	cmp	r3, #0
 800453e:	d013      	beq.n	8004568 <HAL_DMA_IRQHandler+0x6c>
    {
      /* Disable the transfer error interrupt */
      hdma->Instance->CR  &= ~(DMA_IT_TE);
 8004540:	687b      	ldr	r3, [r7, #4]
 8004542:	681b      	ldr	r3, [r3, #0]
 8004544:	681a      	ldr	r2, [r3, #0]
 8004546:	687b      	ldr	r3, [r7, #4]
 8004548:	681b      	ldr	r3, [r3, #0]
 800454a:	f022 0204 	bic.w	r2, r2, #4
 800454e:	601a      	str	r2, [r3, #0]
      
      /* Clear the transfer error flag */
      regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 8004550:	687b      	ldr	r3, [r7, #4]
 8004552:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004554:	2208      	movs	r2, #8
 8004556:	409a      	lsls	r2, r3
 8004558:	693b      	ldr	r3, [r7, #16]
 800455a:	609a      	str	r2, [r3, #8]
      
      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 800455c:	687b      	ldr	r3, [r7, #4]
 800455e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004560:	f043 0201 	orr.w	r2, r3, #1
 8004564:	687b      	ldr	r3, [r7, #4]
 8004566:	655a      	str	r2, [r3, #84]	; 0x54
    }
  }
  /* FIFO Error Interrupt management ******************************************/
  if ((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 8004568:	687b      	ldr	r3, [r7, #4]
 800456a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800456c:	2201      	movs	r2, #1
 800456e:	409a      	lsls	r2, r3
 8004570:	68fb      	ldr	r3, [r7, #12]
 8004572:	4013      	ands	r3, r2
 8004574:	2b00      	cmp	r3, #0
 8004576:	d012      	beq.n	800459e <HAL_DMA_IRQHandler+0xa2>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != RESET)
 8004578:	687b      	ldr	r3, [r7, #4]
 800457a:	681b      	ldr	r3, [r3, #0]
 800457c:	695b      	ldr	r3, [r3, #20]
 800457e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004582:	2b00      	cmp	r3, #0
 8004584:	d00b      	beq.n	800459e <HAL_DMA_IRQHandler+0xa2>
    {
      /* Clear the FIFO error flag */
      regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 8004586:	687b      	ldr	r3, [r7, #4]
 8004588:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800458a:	2201      	movs	r2, #1
 800458c:	409a      	lsls	r2, r3
 800458e:	693b      	ldr	r3, [r7, #16]
 8004590:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 8004592:	687b      	ldr	r3, [r7, #4]
 8004594:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004596:	f043 0202 	orr.w	r2, r3, #2
 800459a:	687b      	ldr	r3, [r7, #4]
 800459c:	655a      	str	r2, [r3, #84]	; 0x54
    }
  }
  /* Direct Mode Error Interrupt management ***********************************/
  if ((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 800459e:	687b      	ldr	r3, [r7, #4]
 80045a0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80045a2:	2204      	movs	r2, #4
 80045a4:	409a      	lsls	r2, r3
 80045a6:	68fb      	ldr	r3, [r7, #12]
 80045a8:	4013      	ands	r3, r2
 80045aa:	2b00      	cmp	r3, #0
 80045ac:	d012      	beq.n	80045d4 <HAL_DMA_IRQHandler+0xd8>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != RESET)
 80045ae:	687b      	ldr	r3, [r7, #4]
 80045b0:	681b      	ldr	r3, [r3, #0]
 80045b2:	681b      	ldr	r3, [r3, #0]
 80045b4:	f003 0302 	and.w	r3, r3, #2
 80045b8:	2b00      	cmp	r3, #0
 80045ba:	d00b      	beq.n	80045d4 <HAL_DMA_IRQHandler+0xd8>
    {
      /* Clear the direct mode error flag */
      regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 80045bc:	687b      	ldr	r3, [r7, #4]
 80045be:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80045c0:	2204      	movs	r2, #4
 80045c2:	409a      	lsls	r2, r3
 80045c4:	693b      	ldr	r3, [r7, #16]
 80045c6:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 80045c8:	687b      	ldr	r3, [r7, #4]
 80045ca:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80045cc:	f043 0204 	orr.w	r2, r3, #4
 80045d0:	687b      	ldr	r3, [r7, #4]
 80045d2:	655a      	str	r2, [r3, #84]	; 0x54
    }
  }
  /* Half Transfer Complete Interrupt management ******************************/
  if ((tmpisr & (DMA_FLAG_HTIF0_4 << hdma->StreamIndex)) != RESET)
 80045d4:	687b      	ldr	r3, [r7, #4]
 80045d6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80045d8:	2210      	movs	r2, #16
 80045da:	409a      	lsls	r2, r3
 80045dc:	68fb      	ldr	r3, [r7, #12]
 80045de:	4013      	ands	r3, r2
 80045e0:	2b00      	cmp	r3, #0
 80045e2:	d043      	beq.n	800466c <HAL_DMA_IRQHandler+0x170>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != RESET)
 80045e4:	687b      	ldr	r3, [r7, #4]
 80045e6:	681b      	ldr	r3, [r3, #0]
 80045e8:	681b      	ldr	r3, [r3, #0]
 80045ea:	f003 0308 	and.w	r3, r3, #8
 80045ee:	2b00      	cmp	r3, #0
 80045f0:	d03c      	beq.n	800466c <HAL_DMA_IRQHandler+0x170>
    {
      /* Clear the half transfer complete flag */
      regs->IFCR = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 80045f2:	687b      	ldr	r3, [r7, #4]
 80045f4:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80045f6:	2210      	movs	r2, #16
 80045f8:	409a      	lsls	r2, r3
 80045fa:	693b      	ldr	r3, [r7, #16]
 80045fc:	609a      	str	r2, [r3, #8]
      
      /* Multi_Buffering mode enabled */
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 80045fe:	687b      	ldr	r3, [r7, #4]
 8004600:	681b      	ldr	r3, [r3, #0]
 8004602:	681b      	ldr	r3, [r3, #0]
 8004604:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8004608:	2b00      	cmp	r3, #0
 800460a:	d018      	beq.n	800463e <HAL_DMA_IRQHandler+0x142>
      {
        /* Current memory buffer used is Memory 0 */
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 800460c:	687b      	ldr	r3, [r7, #4]
 800460e:	681b      	ldr	r3, [r3, #0]
 8004610:	681b      	ldr	r3, [r3, #0]
 8004612:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8004616:	2b00      	cmp	r3, #0
 8004618:	d108      	bne.n	800462c <HAL_DMA_IRQHandler+0x130>
        {
          if(hdma->XferHalfCpltCallback != NULL)
 800461a:	687b      	ldr	r3, [r7, #4]
 800461c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800461e:	2b00      	cmp	r3, #0
 8004620:	d024      	beq.n	800466c <HAL_DMA_IRQHandler+0x170>
          {
            /* Half transfer callback */
            hdma->XferHalfCpltCallback(hdma);
 8004622:	687b      	ldr	r3, [r7, #4]
 8004624:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004626:	6878      	ldr	r0, [r7, #4]
 8004628:	4798      	blx	r3
 800462a:	e01f      	b.n	800466c <HAL_DMA_IRQHandler+0x170>
          }
        }
        /* Current memory buffer used is Memory 1 */
        else
        {
          if(hdma->XferM1HalfCpltCallback != NULL)
 800462c:	687b      	ldr	r3, [r7, #4]
 800462e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8004630:	2b00      	cmp	r3, #0
 8004632:	d01b      	beq.n	800466c <HAL_DMA_IRQHandler+0x170>
          {
            /* Half transfer callback */
            hdma->XferM1HalfCpltCallback(hdma);
 8004634:	687b      	ldr	r3, [r7, #4]
 8004636:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8004638:	6878      	ldr	r0, [r7, #4]
 800463a:	4798      	blx	r3
 800463c:	e016      	b.n	800466c <HAL_DMA_IRQHandler+0x170>
        }
      }
      else
      {
        /* Disable the half transfer interrupt if the DMA mode is not CIRCULAR */
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 800463e:	687b      	ldr	r3, [r7, #4]
 8004640:	681b      	ldr	r3, [r3, #0]
 8004642:	681b      	ldr	r3, [r3, #0]
 8004644:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004648:	2b00      	cmp	r3, #0
 800464a:	d107      	bne.n	800465c <HAL_DMA_IRQHandler+0x160>
        {
          /* Disable the half transfer interrupt */
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 800464c:	687b      	ldr	r3, [r7, #4]
 800464e:	681b      	ldr	r3, [r3, #0]
 8004650:	681a      	ldr	r2, [r3, #0]
 8004652:	687b      	ldr	r3, [r7, #4]
 8004654:	681b      	ldr	r3, [r3, #0]
 8004656:	f022 0208 	bic.w	r2, r2, #8
 800465a:	601a      	str	r2, [r3, #0]
        }
        
        if(hdma->XferHalfCpltCallback != NULL)
 800465c:	687b      	ldr	r3, [r7, #4]
 800465e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004660:	2b00      	cmp	r3, #0
 8004662:	d003      	beq.n	800466c <HAL_DMA_IRQHandler+0x170>
        {
          /* Half transfer callback */
          hdma->XferHalfCpltCallback(hdma);
 8004664:	687b      	ldr	r3, [r7, #4]
 8004666:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004668:	6878      	ldr	r0, [r7, #4]
 800466a:	4798      	blx	r3
        }
      }
    }
  }
  /* Transfer Complete Interrupt management ***********************************/
  if ((tmpisr & (DMA_FLAG_TCIF0_4 << hdma->StreamIndex)) != RESET)
 800466c:	687b      	ldr	r3, [r7, #4]
 800466e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004670:	2220      	movs	r2, #32
 8004672:	409a      	lsls	r2, r3
 8004674:	68fb      	ldr	r3, [r7, #12]
 8004676:	4013      	ands	r3, r2
 8004678:	2b00      	cmp	r3, #0
 800467a:	f000 808f 	beq.w	800479c <HAL_DMA_IRQHandler+0x2a0>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != RESET)
 800467e:	687b      	ldr	r3, [r7, #4]
 8004680:	681b      	ldr	r3, [r3, #0]
 8004682:	681b      	ldr	r3, [r3, #0]
 8004684:	f003 0310 	and.w	r3, r3, #16
 8004688:	2b00      	cmp	r3, #0
 800468a:	f000 8087 	beq.w	800479c <HAL_DMA_IRQHandler+0x2a0>
    {
      /* Clear the transfer complete flag */
      regs->IFCR = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 800468e:	687b      	ldr	r3, [r7, #4]
 8004690:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004692:	2220      	movs	r2, #32
 8004694:	409a      	lsls	r2, r3
 8004696:	693b      	ldr	r3, [r7, #16]
 8004698:	609a      	str	r2, [r3, #8]
      
      if(HAL_DMA_STATE_ABORT == hdma->State)
 800469a:	687b      	ldr	r3, [r7, #4]
 800469c:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80046a0:	b2db      	uxtb	r3, r3
 80046a2:	2b05      	cmp	r3, #5
 80046a4:	d136      	bne.n	8004714 <HAL_DMA_IRQHandler+0x218>
      {
        /* Disable all the transfer interrupts */
        hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 80046a6:	687b      	ldr	r3, [r7, #4]
 80046a8:	681b      	ldr	r3, [r3, #0]
 80046aa:	681a      	ldr	r2, [r3, #0]
 80046ac:	687b      	ldr	r3, [r7, #4]
 80046ae:	681b      	ldr	r3, [r3, #0]
 80046b0:	f022 0216 	bic.w	r2, r2, #22
 80046b4:	601a      	str	r2, [r3, #0]
        hdma->Instance->FCR &= ~(DMA_IT_FE);
 80046b6:	687b      	ldr	r3, [r7, #4]
 80046b8:	681b      	ldr	r3, [r3, #0]
 80046ba:	695a      	ldr	r2, [r3, #20]
 80046bc:	687b      	ldr	r3, [r7, #4]
 80046be:	681b      	ldr	r3, [r3, #0]
 80046c0:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80046c4:	615a      	str	r2, [r3, #20]
        
        if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 80046c6:	687b      	ldr	r3, [r7, #4]
 80046c8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80046ca:	2b00      	cmp	r3, #0
 80046cc:	d103      	bne.n	80046d6 <HAL_DMA_IRQHandler+0x1da>
 80046ce:	687b      	ldr	r3, [r7, #4]
 80046d0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80046d2:	2b00      	cmp	r3, #0
 80046d4:	d007      	beq.n	80046e6 <HAL_DMA_IRQHandler+0x1ea>
        {
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 80046d6:	687b      	ldr	r3, [r7, #4]
 80046d8:	681b      	ldr	r3, [r3, #0]
 80046da:	681a      	ldr	r2, [r3, #0]
 80046dc:	687b      	ldr	r3, [r7, #4]
 80046de:	681b      	ldr	r3, [r3, #0]
 80046e0:	f022 0208 	bic.w	r2, r2, #8
 80046e4:	601a      	str	r2, [r3, #0]
        }

        /* Clear all interrupt flags at correct offset within the register */
        regs->IFCR = 0x3FU << hdma->StreamIndex;
 80046e6:	687b      	ldr	r3, [r7, #4]
 80046e8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80046ea:	223f      	movs	r2, #63	; 0x3f
 80046ec:	409a      	lsls	r2, r3
 80046ee:	693b      	ldr	r3, [r7, #16]
 80046f0:	609a      	str	r2, [r3, #8]

        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_READY;
 80046f2:	687b      	ldr	r3, [r7, #4]
 80046f4:	2201      	movs	r2, #1
 80046f6:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

        /* Process Unlocked */
        __HAL_UNLOCK(hdma);
 80046fa:	687b      	ldr	r3, [r7, #4]
 80046fc:	2200      	movs	r2, #0
 80046fe:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

        if(hdma->XferAbortCallback != NULL)
 8004702:	687b      	ldr	r3, [r7, #4]
 8004704:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8004706:	2b00      	cmp	r3, #0
 8004708:	d07e      	beq.n	8004808 <HAL_DMA_IRQHandler+0x30c>
        {
          hdma->XferAbortCallback(hdma);
 800470a:	687b      	ldr	r3, [r7, #4]
 800470c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800470e:	6878      	ldr	r0, [r7, #4]
 8004710:	4798      	blx	r3
        }
        return;
 8004712:	e079      	b.n	8004808 <HAL_DMA_IRQHandler+0x30c>
      }

      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 8004714:	687b      	ldr	r3, [r7, #4]
 8004716:	681b      	ldr	r3, [r3, #0]
 8004718:	681b      	ldr	r3, [r3, #0]
 800471a:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 800471e:	2b00      	cmp	r3, #0
 8004720:	d01d      	beq.n	800475e <HAL_DMA_IRQHandler+0x262>
      {
        /* Current memory buffer used is Memory 0 */
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 8004722:	687b      	ldr	r3, [r7, #4]
 8004724:	681b      	ldr	r3, [r3, #0]
 8004726:	681b      	ldr	r3, [r3, #0]
 8004728:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 800472c:	2b00      	cmp	r3, #0
 800472e:	d10d      	bne.n	800474c <HAL_DMA_IRQHandler+0x250>
        {
          if(hdma->XferM1CpltCallback != NULL)
 8004730:	687b      	ldr	r3, [r7, #4]
 8004732:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004734:	2b00      	cmp	r3, #0
 8004736:	d031      	beq.n	800479c <HAL_DMA_IRQHandler+0x2a0>
          {
            /* Transfer complete Callback for memory1 */
            hdma->XferM1CpltCallback(hdma);
 8004738:	687b      	ldr	r3, [r7, #4]
 800473a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800473c:	6878      	ldr	r0, [r7, #4]
 800473e:	4798      	blx	r3
 8004740:	e02c      	b.n	800479c <HAL_DMA_IRQHandler+0x2a0>
 8004742:	bf00      	nop
 8004744:	20000004 	.word	0x20000004
 8004748:	1b4e81b5 	.word	0x1b4e81b5
          }
        }
        /* Current memory buffer used is Memory 1 */
        else
        {
          if(hdma->XferCpltCallback != NULL)
 800474c:	687b      	ldr	r3, [r7, #4]
 800474e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004750:	2b00      	cmp	r3, #0
 8004752:	d023      	beq.n	800479c <HAL_DMA_IRQHandler+0x2a0>
          {
            /* Transfer complete Callback for memory0 */
            hdma->XferCpltCallback(hdma);
 8004754:	687b      	ldr	r3, [r7, #4]
 8004756:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004758:	6878      	ldr	r0, [r7, #4]
 800475a:	4798      	blx	r3
 800475c:	e01e      	b.n	800479c <HAL_DMA_IRQHandler+0x2a0>
        }
      }
      /* Disable the transfer complete interrupt if the DMA mode is not CIRCULAR */
      else
      {
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 800475e:	687b      	ldr	r3, [r7, #4]
 8004760:	681b      	ldr	r3, [r3, #0]
 8004762:	681b      	ldr	r3, [r3, #0]
 8004764:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004768:	2b00      	cmp	r3, #0
 800476a:	d10f      	bne.n	800478c <HAL_DMA_IRQHandler+0x290>
        {
          /* Disable the transfer complete interrupt */
          hdma->Instance->CR  &= ~(DMA_IT_TC);
 800476c:	687b      	ldr	r3, [r7, #4]
 800476e:	681b      	ldr	r3, [r3, #0]
 8004770:	681a      	ldr	r2, [r3, #0]
 8004772:	687b      	ldr	r3, [r7, #4]
 8004774:	681b      	ldr	r3, [r3, #0]
 8004776:	f022 0210 	bic.w	r2, r2, #16
 800477a:	601a      	str	r2, [r3, #0]

          /* Change the DMA state */
          hdma->State = HAL_DMA_STATE_READY;
 800477c:	687b      	ldr	r3, [r7, #4]
 800477e:	2201      	movs	r2, #1
 8004780:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

          /* Process Unlocked */
          __HAL_UNLOCK(hdma);
 8004784:	687b      	ldr	r3, [r7, #4]
 8004786:	2200      	movs	r2, #0
 8004788:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
        }

        if(hdma->XferCpltCallback != NULL)
 800478c:	687b      	ldr	r3, [r7, #4]
 800478e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004790:	2b00      	cmp	r3, #0
 8004792:	d003      	beq.n	800479c <HAL_DMA_IRQHandler+0x2a0>
        {
          /* Transfer complete callback */
          hdma->XferCpltCallback(hdma);
 8004794:	687b      	ldr	r3, [r7, #4]
 8004796:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004798:	6878      	ldr	r0, [r7, #4]
 800479a:	4798      	blx	r3
      }
    }
  }
  
  /* manage error case */
  if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 800479c:	687b      	ldr	r3, [r7, #4]
 800479e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80047a0:	2b00      	cmp	r3, #0
 80047a2:	d032      	beq.n	800480a <HAL_DMA_IRQHandler+0x30e>
  {
    if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 80047a4:	687b      	ldr	r3, [r7, #4]
 80047a6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80047a8:	f003 0301 	and.w	r3, r3, #1
 80047ac:	2b00      	cmp	r3, #0
 80047ae:	d022      	beq.n	80047f6 <HAL_DMA_IRQHandler+0x2fa>
    {
      hdma->State = HAL_DMA_STATE_ABORT;
 80047b0:	687b      	ldr	r3, [r7, #4]
 80047b2:	2205      	movs	r2, #5
 80047b4:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

      /* Disable the stream */
      __HAL_DMA_DISABLE(hdma);
 80047b8:	687b      	ldr	r3, [r7, #4]
 80047ba:	681b      	ldr	r3, [r3, #0]
 80047bc:	681a      	ldr	r2, [r3, #0]
 80047be:	687b      	ldr	r3, [r7, #4]
 80047c0:	681b      	ldr	r3, [r3, #0]
 80047c2:	f022 0201 	bic.w	r2, r2, #1
 80047c6:	601a      	str	r2, [r3, #0]

      do
      {
        if (++count > timeout)
 80047c8:	68bb      	ldr	r3, [r7, #8]
 80047ca:	3301      	adds	r3, #1
 80047cc:	60bb      	str	r3, [r7, #8]
 80047ce:	697a      	ldr	r2, [r7, #20]
 80047d0:	429a      	cmp	r2, r3
 80047d2:	d307      	bcc.n	80047e4 <HAL_DMA_IRQHandler+0x2e8>
        {
          break;
        }
      }
      while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
 80047d4:	687b      	ldr	r3, [r7, #4]
 80047d6:	681b      	ldr	r3, [r3, #0]
 80047d8:	681b      	ldr	r3, [r3, #0]
 80047da:	f003 0301 	and.w	r3, r3, #1
 80047de:	2b00      	cmp	r3, #0
 80047e0:	d1f2      	bne.n	80047c8 <HAL_DMA_IRQHandler+0x2cc>
 80047e2:	e000      	b.n	80047e6 <HAL_DMA_IRQHandler+0x2ea>
          break;
 80047e4:	bf00      	nop

      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_READY;
 80047e6:	687b      	ldr	r3, [r7, #4]
 80047e8:	2201      	movs	r2, #1
 80047ea:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

      /* Process Unlocked */
      __HAL_UNLOCK(hdma);
 80047ee:	687b      	ldr	r3, [r7, #4]
 80047f0:	2200      	movs	r2, #0
 80047f2:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    }

    if(hdma->XferErrorCallback != NULL)
 80047f6:	687b      	ldr	r3, [r7, #4]
 80047f8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80047fa:	2b00      	cmp	r3, #0
 80047fc:	d005      	beq.n	800480a <HAL_DMA_IRQHandler+0x30e>
    {
      /* Transfer error callback */
      hdma->XferErrorCallback(hdma);
 80047fe:	687b      	ldr	r3, [r7, #4]
 8004800:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004802:	6878      	ldr	r0, [r7, #4]
 8004804:	4798      	blx	r3
 8004806:	e000      	b.n	800480a <HAL_DMA_IRQHandler+0x30e>
        return;
 8004808:	bf00      	nop
    }
  }
}
 800480a:	3718      	adds	r7, #24
 800480c:	46bd      	mov	sp, r7
 800480e:	bd80      	pop	{r7, pc}

08004810 <DMA_SetConfig>:
  * @param  DstAddress The destination memory Buffer address
  * @param  DataLength The length of data to be transferred from source to destination
  * @retval HAL status
  */
static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
 8004810:	b480      	push	{r7}
 8004812:	b085      	sub	sp, #20
 8004814:	af00      	add	r7, sp, #0
 8004816:	60f8      	str	r0, [r7, #12]
 8004818:	60b9      	str	r1, [r7, #8]
 800481a:	607a      	str	r2, [r7, #4]
 800481c:	603b      	str	r3, [r7, #0]
  /* Clear DBM bit */
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 800481e:	68fb      	ldr	r3, [r7, #12]
 8004820:	681b      	ldr	r3, [r3, #0]
 8004822:	681a      	ldr	r2, [r3, #0]
 8004824:	68fb      	ldr	r3, [r7, #12]
 8004826:	681b      	ldr	r3, [r3, #0]
 8004828:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800482c:	601a      	str	r2, [r3, #0]

  /* Configure DMA Stream data length */
  hdma->Instance->NDTR = DataLength;
 800482e:	68fb      	ldr	r3, [r7, #12]
 8004830:	681b      	ldr	r3, [r3, #0]
 8004832:	683a      	ldr	r2, [r7, #0]
 8004834:	605a      	str	r2, [r3, #4]

  /* Memory to Peripheral */
  if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 8004836:	68fb      	ldr	r3, [r7, #12]
 8004838:	689b      	ldr	r3, [r3, #8]
 800483a:	2b40      	cmp	r3, #64	; 0x40
 800483c:	d108      	bne.n	8004850 <DMA_SetConfig+0x40>
  {
    /* Configure DMA Stream destination address */
    hdma->Instance->PAR = DstAddress;
 800483e:	68fb      	ldr	r3, [r7, #12]
 8004840:	681b      	ldr	r3, [r3, #0]
 8004842:	687a      	ldr	r2, [r7, #4]
 8004844:	609a      	str	r2, [r3, #8]

    /* Configure DMA Stream source address */
    hdma->Instance->M0AR = SrcAddress;
 8004846:	68fb      	ldr	r3, [r7, #12]
 8004848:	681b      	ldr	r3, [r3, #0]
 800484a:	68ba      	ldr	r2, [r7, #8]
 800484c:	60da      	str	r2, [r3, #12]
    hdma->Instance->PAR = SrcAddress;

    /* Configure DMA Stream destination address */
    hdma->Instance->M0AR = DstAddress;
  }
}
 800484e:	e007      	b.n	8004860 <DMA_SetConfig+0x50>
    hdma->Instance->PAR = SrcAddress;
 8004850:	68fb      	ldr	r3, [r7, #12]
 8004852:	681b      	ldr	r3, [r3, #0]
 8004854:	68ba      	ldr	r2, [r7, #8]
 8004856:	609a      	str	r2, [r3, #8]
    hdma->Instance->M0AR = DstAddress;
 8004858:	68fb      	ldr	r3, [r7, #12]
 800485a:	681b      	ldr	r3, [r3, #0]
 800485c:	687a      	ldr	r2, [r7, #4]
 800485e:	60da      	str	r2, [r3, #12]
}
 8004860:	bf00      	nop
 8004862:	3714      	adds	r7, #20
 8004864:	46bd      	mov	sp, r7
 8004866:	f85d 7b04 	ldr.w	r7, [sp], #4
 800486a:	4770      	bx	lr

0800486c <DMA_CalcBaseAndBitshift>:
  * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
 800486c:	b480      	push	{r7}
 800486e:	b085      	sub	sp, #20
 8004870:	af00      	add	r7, sp, #0
 8004872:	6078      	str	r0, [r7, #4]
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8004874:	687b      	ldr	r3, [r7, #4]
 8004876:	681b      	ldr	r3, [r3, #0]
 8004878:	b2db      	uxtb	r3, r3
 800487a:	3b10      	subs	r3, #16
 800487c:	4a14      	ldr	r2, [pc, #80]	; (80048d0 <DMA_CalcBaseAndBitshift+0x64>)
 800487e:	fba2 2303 	umull	r2, r3, r2, r3
 8004882:	091b      	lsrs	r3, r3, #4
 8004884:	60fb      	str	r3, [r7, #12]
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8004886:	4a13      	ldr	r2, [pc, #76]	; (80048d4 <DMA_CalcBaseAndBitshift+0x68>)
 8004888:	68fb      	ldr	r3, [r7, #12]
 800488a:	4413      	add	r3, r2
 800488c:	781b      	ldrb	r3, [r3, #0]
 800488e:	461a      	mov	r2, r3
 8004890:	687b      	ldr	r3, [r7, #4]
 8004892:	65da      	str	r2, [r3, #92]	; 0x5c
  
  if (stream_number > 3U)
 8004894:	68fb      	ldr	r3, [r7, #12]
 8004896:	2b03      	cmp	r3, #3
 8004898:	d909      	bls.n	80048ae <DMA_CalcBaseAndBitshift+0x42>
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 800489a:	687b      	ldr	r3, [r7, #4]
 800489c:	681b      	ldr	r3, [r3, #0]
 800489e:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 80048a2:	f023 0303 	bic.w	r3, r3, #3
 80048a6:	1d1a      	adds	r2, r3, #4
 80048a8:	687b      	ldr	r3, [r7, #4]
 80048aa:	659a      	str	r2, [r3, #88]	; 0x58
 80048ac:	e007      	b.n	80048be <DMA_CalcBaseAndBitshift+0x52>
  }
  else
  {
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
 80048ae:	687b      	ldr	r3, [r7, #4]
 80048b0:	681b      	ldr	r3, [r3, #0]
 80048b2:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 80048b6:	f023 0303 	bic.w	r3, r3, #3
 80048ba:	687a      	ldr	r2, [r7, #4]
 80048bc:	6593      	str	r3, [r2, #88]	; 0x58
  }
  
  return hdma->StreamBaseAddress;
 80048be:	687b      	ldr	r3, [r7, #4]
 80048c0:	6d9b      	ldr	r3, [r3, #88]	; 0x58
}
 80048c2:	4618      	mov	r0, r3
 80048c4:	3714      	adds	r7, #20
 80048c6:	46bd      	mov	sp, r7
 80048c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80048cc:	4770      	bx	lr
 80048ce:	bf00      	nop
 80048d0:	aaaaaaab 	.word	0xaaaaaaab
 80048d4:	0802ddd8 	.word	0x0802ddd8

080048d8 <DMA_CheckFifoParam>:
  * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream. 
  * @retval HAL status
  */
static HAL_StatusTypeDef DMA_CheckFifoParam(DMA_HandleTypeDef *hdma)
{
 80048d8:	b480      	push	{r7}
 80048da:	b085      	sub	sp, #20
 80048dc:	af00      	add	r7, sp, #0
 80048de:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 80048e0:	2300      	movs	r3, #0
 80048e2:	73fb      	strb	r3, [r7, #15]
  uint32_t tmp = hdma->Init.FIFOThreshold;
 80048e4:	687b      	ldr	r3, [r7, #4]
 80048e6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80048e8:	60bb      	str	r3, [r7, #8]
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 80048ea:	687b      	ldr	r3, [r7, #4]
 80048ec:	699b      	ldr	r3, [r3, #24]
 80048ee:	2b00      	cmp	r3, #0
 80048f0:	d11f      	bne.n	8004932 <DMA_CheckFifoParam+0x5a>
  {
    switch (tmp)
 80048f2:	68bb      	ldr	r3, [r7, #8]
 80048f4:	2b03      	cmp	r3, #3
 80048f6:	d856      	bhi.n	80049a6 <DMA_CheckFifoParam+0xce>
 80048f8:	a201      	add	r2, pc, #4	; (adr r2, 8004900 <DMA_CheckFifoParam+0x28>)
 80048fa:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80048fe:	bf00      	nop
 8004900:	08004911 	.word	0x08004911
 8004904:	08004923 	.word	0x08004923
 8004908:	08004911 	.word	0x08004911
 800490c:	080049a7 	.word	0x080049a7
    {
    case DMA_FIFO_THRESHOLD_1QUARTERFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8004910:	687b      	ldr	r3, [r7, #4]
 8004912:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004914:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8004918:	2b00      	cmp	r3, #0
 800491a:	d046      	beq.n	80049aa <DMA_CheckFifoParam+0xd2>
      {
        status = HAL_ERROR;
 800491c:	2301      	movs	r3, #1
 800491e:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8004920:	e043      	b.n	80049aa <DMA_CheckFifoParam+0xd2>
    case DMA_FIFO_THRESHOLD_HALFFULL:
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8004922:	687b      	ldr	r3, [r7, #4]
 8004924:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004926:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 800492a:	d140      	bne.n	80049ae <DMA_CheckFifoParam+0xd6>
      {
        status = HAL_ERROR;
 800492c:	2301      	movs	r3, #1
 800492e:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8004930:	e03d      	b.n	80049ae <DMA_CheckFifoParam+0xd6>
      break;
    }
  }
  
  /* Memory Data size equal to Half-Word */
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 8004932:	687b      	ldr	r3, [r7, #4]
 8004934:	699b      	ldr	r3, [r3, #24]
 8004936:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800493a:	d121      	bne.n	8004980 <DMA_CheckFifoParam+0xa8>
  {
    switch (tmp)
 800493c:	68bb      	ldr	r3, [r7, #8]
 800493e:	2b03      	cmp	r3, #3
 8004940:	d837      	bhi.n	80049b2 <DMA_CheckFifoParam+0xda>
 8004942:	a201      	add	r2, pc, #4	; (adr r2, 8004948 <DMA_CheckFifoParam+0x70>)
 8004944:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004948:	08004959 	.word	0x08004959
 800494c:	0800495f 	.word	0x0800495f
 8004950:	08004959 	.word	0x08004959
 8004954:	08004971 	.word	0x08004971
    {
    case DMA_FIFO_THRESHOLD_1QUARTERFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
 8004958:	2301      	movs	r3, #1
 800495a:	73fb      	strb	r3, [r7, #15]
      break;
 800495c:	e030      	b.n	80049c0 <DMA_CheckFifoParam+0xe8>
    case DMA_FIFO_THRESHOLD_HALFFULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 800495e:	687b      	ldr	r3, [r7, #4]
 8004960:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004962:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8004966:	2b00      	cmp	r3, #0
 8004968:	d025      	beq.n	80049b6 <DMA_CheckFifoParam+0xde>
      {
        status = HAL_ERROR;
 800496a:	2301      	movs	r3, #1
 800496c:	73fb      	strb	r3, [r7, #15]
      }
      break;
 800496e:	e022      	b.n	80049b6 <DMA_CheckFifoParam+0xde>
    case DMA_FIFO_THRESHOLD_FULL:
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8004970:	687b      	ldr	r3, [r7, #4]
 8004972:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004974:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8004978:	d11f      	bne.n	80049ba <DMA_CheckFifoParam+0xe2>
      {
        status = HAL_ERROR;
 800497a:	2301      	movs	r3, #1
 800497c:	73fb      	strb	r3, [r7, #15]
      }
      break;   
 800497e:	e01c      	b.n	80049ba <DMA_CheckFifoParam+0xe2>
  }
  
  /* Memory Data size equal to Word */
  else
  {
    switch (tmp)
 8004980:	68bb      	ldr	r3, [r7, #8]
 8004982:	2b02      	cmp	r3, #2
 8004984:	d903      	bls.n	800498e <DMA_CheckFifoParam+0xb6>
 8004986:	68bb      	ldr	r3, [r7, #8]
 8004988:	2b03      	cmp	r3, #3
 800498a:	d003      	beq.n	8004994 <DMA_CheckFifoParam+0xbc>
      {
        status = HAL_ERROR;
      }
      break;
    default:
      break;
 800498c:	e018      	b.n	80049c0 <DMA_CheckFifoParam+0xe8>
      status = HAL_ERROR;
 800498e:	2301      	movs	r3, #1
 8004990:	73fb      	strb	r3, [r7, #15]
      break;
 8004992:	e015      	b.n	80049c0 <DMA_CheckFifoParam+0xe8>
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8004994:	687b      	ldr	r3, [r7, #4]
 8004996:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004998:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 800499c:	2b00      	cmp	r3, #0
 800499e:	d00e      	beq.n	80049be <DMA_CheckFifoParam+0xe6>
        status = HAL_ERROR;
 80049a0:	2301      	movs	r3, #1
 80049a2:	73fb      	strb	r3, [r7, #15]
      break;
 80049a4:	e00b      	b.n	80049be <DMA_CheckFifoParam+0xe6>
      break;
 80049a6:	bf00      	nop
 80049a8:	e00a      	b.n	80049c0 <DMA_CheckFifoParam+0xe8>
      break;
 80049aa:	bf00      	nop
 80049ac:	e008      	b.n	80049c0 <DMA_CheckFifoParam+0xe8>
      break;
 80049ae:	bf00      	nop
 80049b0:	e006      	b.n	80049c0 <DMA_CheckFifoParam+0xe8>
      break;
 80049b2:	bf00      	nop
 80049b4:	e004      	b.n	80049c0 <DMA_CheckFifoParam+0xe8>
      break;
 80049b6:	bf00      	nop
 80049b8:	e002      	b.n	80049c0 <DMA_CheckFifoParam+0xe8>
      break;   
 80049ba:	bf00      	nop
 80049bc:	e000      	b.n	80049c0 <DMA_CheckFifoParam+0xe8>
      break;
 80049be:	bf00      	nop
    }
  } 
  
  return status; 
 80049c0:	7bfb      	ldrb	r3, [r7, #15]
}
 80049c2:	4618      	mov	r0, r3
 80049c4:	3714      	adds	r7, #20
 80049c6:	46bd      	mov	sp, r7
 80049c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80049cc:	4770      	bx	lr
 80049ce:	bf00      	nop

080049d0 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80049d0:	b480      	push	{r7}
 80049d2:	b089      	sub	sp, #36	; 0x24
 80049d4:	af00      	add	r7, sp, #0
 80049d6:	6078      	str	r0, [r7, #4]
 80049d8:	6039      	str	r1, [r7, #0]
  uint32_t position;
  uint32_t ioposition = 0x00U;
 80049da:	2300      	movs	r3, #0
 80049dc:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
 80049de:	2300      	movs	r3, #0
 80049e0:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00U;
 80049e2:	2300      	movs	r3, #0
 80049e4:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
 80049e6:	2300      	movs	r3, #0
 80049e8:	61fb      	str	r3, [r7, #28]
 80049ea:	e159      	b.n	8004ca0 <HAL_GPIO_Init+0x2d0>
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
 80049ec:	2201      	movs	r2, #1
 80049ee:	69fb      	ldr	r3, [r7, #28]
 80049f0:	fa02 f303 	lsl.w	r3, r2, r3
 80049f4:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80049f6:	683b      	ldr	r3, [r7, #0]
 80049f8:	681b      	ldr	r3, [r3, #0]
 80049fa:	697a      	ldr	r2, [r7, #20]
 80049fc:	4013      	ands	r3, r2
 80049fe:	613b      	str	r3, [r7, #16]

    if(iocurrent == ioposition)
 8004a00:	693a      	ldr	r2, [r7, #16]
 8004a02:	697b      	ldr	r3, [r7, #20]
 8004a04:	429a      	cmp	r2, r3
 8004a06:	f040 8148 	bne.w	8004c9a <HAL_GPIO_Init+0x2ca>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8004a0a:	683b      	ldr	r3, [r7, #0]
 8004a0c:	685b      	ldr	r3, [r3, #4]
 8004a0e:	f003 0303 	and.w	r3, r3, #3
 8004a12:	2b01      	cmp	r3, #1
 8004a14:	d005      	beq.n	8004a22 <HAL_GPIO_Init+0x52>
          (GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8004a16:	683b      	ldr	r3, [r7, #0]
 8004a18:	685b      	ldr	r3, [r3, #4]
 8004a1a:	f003 0303 	and.w	r3, r3, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8004a1e:	2b02      	cmp	r3, #2
 8004a20:	d130      	bne.n	8004a84 <HAL_GPIO_Init+0xb4>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 8004a22:	687b      	ldr	r3, [r7, #4]
 8004a24:	689b      	ldr	r3, [r3, #8]
 8004a26:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004a28:	69fb      	ldr	r3, [r7, #28]
 8004a2a:	005b      	lsls	r3, r3, #1
 8004a2c:	2203      	movs	r2, #3
 8004a2e:	fa02 f303 	lsl.w	r3, r2, r3
 8004a32:	43db      	mvns	r3, r3
 8004a34:	69ba      	ldr	r2, [r7, #24]
 8004a36:	4013      	ands	r3, r2
 8004a38:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8004a3a:	683b      	ldr	r3, [r7, #0]
 8004a3c:	68da      	ldr	r2, [r3, #12]
 8004a3e:	69fb      	ldr	r3, [r7, #28]
 8004a40:	005b      	lsls	r3, r3, #1
 8004a42:	fa02 f303 	lsl.w	r3, r2, r3
 8004a46:	69ba      	ldr	r2, [r7, #24]
 8004a48:	4313      	orrs	r3, r2
 8004a4a:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 8004a4c:	687b      	ldr	r3, [r7, #4]
 8004a4e:	69ba      	ldr	r2, [r7, #24]
 8004a50:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8004a52:	687b      	ldr	r3, [r7, #4]
 8004a54:	685b      	ldr	r3, [r3, #4]
 8004a56:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8004a58:	2201      	movs	r2, #1
 8004a5a:	69fb      	ldr	r3, [r7, #28]
 8004a5c:	fa02 f303 	lsl.w	r3, r2, r3
 8004a60:	43db      	mvns	r3, r3
 8004a62:	69ba      	ldr	r2, [r7, #24]
 8004a64:	4013      	ands	r3, r2
 8004a66:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8004a68:	683b      	ldr	r3, [r7, #0]
 8004a6a:	685b      	ldr	r3, [r3, #4]
 8004a6c:	091b      	lsrs	r3, r3, #4
 8004a6e:	f003 0201 	and.w	r2, r3, #1
 8004a72:	69fb      	ldr	r3, [r7, #28]
 8004a74:	fa02 f303 	lsl.w	r3, r2, r3
 8004a78:	69ba      	ldr	r2, [r7, #24]
 8004a7a:	4313      	orrs	r3, r2
 8004a7c:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 8004a7e:	687b      	ldr	r3, [r7, #4]
 8004a80:	69ba      	ldr	r2, [r7, #24]
 8004a82:	605a      	str	r2, [r3, #4]
       }

      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8004a84:	683b      	ldr	r3, [r7, #0]
 8004a86:	685b      	ldr	r3, [r3, #4]
 8004a88:	f003 0303 	and.w	r3, r3, #3
 8004a8c:	2b03      	cmp	r3, #3
 8004a8e:	d017      	beq.n	8004ac0 <HAL_GPIO_Init+0xf0>
      {
        /* Check the parameters */
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
        
        /* Activate the Pull-up or Pull down resistor for the current IO */
        temp = GPIOx->PUPDR;
 8004a90:	687b      	ldr	r3, [r7, #4]
 8004a92:	68db      	ldr	r3, [r3, #12]
 8004a94:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8004a96:	69fb      	ldr	r3, [r7, #28]
 8004a98:	005b      	lsls	r3, r3, #1
 8004a9a:	2203      	movs	r2, #3
 8004a9c:	fa02 f303 	lsl.w	r3, r2, r3
 8004aa0:	43db      	mvns	r3, r3
 8004aa2:	69ba      	ldr	r2, [r7, #24]
 8004aa4:	4013      	ands	r3, r2
 8004aa6:	61bb      	str	r3, [r7, #24]
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8004aa8:	683b      	ldr	r3, [r7, #0]
 8004aaa:	689a      	ldr	r2, [r3, #8]
 8004aac:	69fb      	ldr	r3, [r7, #28]
 8004aae:	005b      	lsls	r3, r3, #1
 8004ab0:	fa02 f303 	lsl.w	r3, r2, r3
 8004ab4:	69ba      	ldr	r2, [r7, #24]
 8004ab6:	4313      	orrs	r3, r2
 8004ab8:	61bb      	str	r3, [r7, #24]
        GPIOx->PUPDR = temp;
 8004aba:	687b      	ldr	r3, [r7, #4]
 8004abc:	69ba      	ldr	r2, [r7, #24]
 8004abe:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8004ac0:	683b      	ldr	r3, [r7, #0]
 8004ac2:	685b      	ldr	r3, [r3, #4]
 8004ac4:	f003 0303 	and.w	r3, r3, #3
 8004ac8:	2b02      	cmp	r3, #2
 8004aca:	d123      	bne.n	8004b14 <HAL_GPIO_Init+0x144>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 8004acc:	69fb      	ldr	r3, [r7, #28]
 8004ace:	08da      	lsrs	r2, r3, #3
 8004ad0:	687b      	ldr	r3, [r7, #4]
 8004ad2:	3208      	adds	r2, #8
 8004ad4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8004ad8:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8004ada:	69fb      	ldr	r3, [r7, #28]
 8004adc:	f003 0307 	and.w	r3, r3, #7
 8004ae0:	009b      	lsls	r3, r3, #2
 8004ae2:	220f      	movs	r2, #15
 8004ae4:	fa02 f303 	lsl.w	r3, r2, r3
 8004ae8:	43db      	mvns	r3, r3
 8004aea:	69ba      	ldr	r2, [r7, #24]
 8004aec:	4013      	ands	r3, r2
 8004aee:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8004af0:	683b      	ldr	r3, [r7, #0]
 8004af2:	691a      	ldr	r2, [r3, #16]
 8004af4:	69fb      	ldr	r3, [r7, #28]
 8004af6:	f003 0307 	and.w	r3, r3, #7
 8004afa:	009b      	lsls	r3, r3, #2
 8004afc:	fa02 f303 	lsl.w	r3, r2, r3
 8004b00:	69ba      	ldr	r2, [r7, #24]
 8004b02:	4313      	orrs	r3, r2
 8004b04:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
 8004b06:	69fb      	ldr	r3, [r7, #28]
 8004b08:	08da      	lsrs	r2, r3, #3
 8004b0a:	687b      	ldr	r3, [r7, #4]
 8004b0c:	3208      	adds	r2, #8
 8004b0e:	69b9      	ldr	r1, [r7, #24]
 8004b10:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8004b14:	687b      	ldr	r3, [r7, #4]
 8004b16:	681b      	ldr	r3, [r3, #0]
 8004b18:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8004b1a:	69fb      	ldr	r3, [r7, #28]
 8004b1c:	005b      	lsls	r3, r3, #1
 8004b1e:	2203      	movs	r2, #3
 8004b20:	fa02 f303 	lsl.w	r3, r2, r3
 8004b24:	43db      	mvns	r3, r3
 8004b26:	69ba      	ldr	r2, [r7, #24]
 8004b28:	4013      	ands	r3, r2
 8004b2a:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8004b2c:	683b      	ldr	r3, [r7, #0]
 8004b2e:	685b      	ldr	r3, [r3, #4]
 8004b30:	f003 0203 	and.w	r2, r3, #3
 8004b34:	69fb      	ldr	r3, [r7, #28]
 8004b36:	005b      	lsls	r3, r3, #1
 8004b38:	fa02 f303 	lsl.w	r3, r2, r3
 8004b3c:	69ba      	ldr	r2, [r7, #24]
 8004b3e:	4313      	orrs	r3, r2
 8004b40:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 8004b42:	687b      	ldr	r3, [r7, #4]
 8004b44:	69ba      	ldr	r2, [r7, #24]
 8004b46:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8004b48:	683b      	ldr	r3, [r7, #0]
 8004b4a:	685b      	ldr	r3, [r3, #4]
 8004b4c:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8004b50:	2b00      	cmp	r3, #0
 8004b52:	f000 80a2 	beq.w	8004c9a <HAL_GPIO_Init+0x2ca>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004b56:	2300      	movs	r3, #0
 8004b58:	60fb      	str	r3, [r7, #12]
 8004b5a:	4b57      	ldr	r3, [pc, #348]	; (8004cb8 <HAL_GPIO_Init+0x2e8>)
 8004b5c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004b5e:	4a56      	ldr	r2, [pc, #344]	; (8004cb8 <HAL_GPIO_Init+0x2e8>)
 8004b60:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8004b64:	6453      	str	r3, [r2, #68]	; 0x44
 8004b66:	4b54      	ldr	r3, [pc, #336]	; (8004cb8 <HAL_GPIO_Init+0x2e8>)
 8004b68:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004b6a:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8004b6e:	60fb      	str	r3, [r7, #12]
 8004b70:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 8004b72:	4a52      	ldr	r2, [pc, #328]	; (8004cbc <HAL_GPIO_Init+0x2ec>)
 8004b74:	69fb      	ldr	r3, [r7, #28]
 8004b76:	089b      	lsrs	r3, r3, #2
 8004b78:	3302      	adds	r3, #2
 8004b7a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004b7e:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004b80:	69fb      	ldr	r3, [r7, #28]
 8004b82:	f003 0303 	and.w	r3, r3, #3
 8004b86:	009b      	lsls	r3, r3, #2
 8004b88:	220f      	movs	r2, #15
 8004b8a:	fa02 f303 	lsl.w	r3, r2, r3
 8004b8e:	43db      	mvns	r3, r3
 8004b90:	69ba      	ldr	r2, [r7, #24]
 8004b92:	4013      	ands	r3, r2
 8004b94:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004b96:	687b      	ldr	r3, [r7, #4]
 8004b98:	4a49      	ldr	r2, [pc, #292]	; (8004cc0 <HAL_GPIO_Init+0x2f0>)
 8004b9a:	4293      	cmp	r3, r2
 8004b9c:	d019      	beq.n	8004bd2 <HAL_GPIO_Init+0x202>
 8004b9e:	687b      	ldr	r3, [r7, #4]
 8004ba0:	4a48      	ldr	r2, [pc, #288]	; (8004cc4 <HAL_GPIO_Init+0x2f4>)
 8004ba2:	4293      	cmp	r3, r2
 8004ba4:	d013      	beq.n	8004bce <HAL_GPIO_Init+0x1fe>
 8004ba6:	687b      	ldr	r3, [r7, #4]
 8004ba8:	4a47      	ldr	r2, [pc, #284]	; (8004cc8 <HAL_GPIO_Init+0x2f8>)
 8004baa:	4293      	cmp	r3, r2
 8004bac:	d00d      	beq.n	8004bca <HAL_GPIO_Init+0x1fa>
 8004bae:	687b      	ldr	r3, [r7, #4]
 8004bb0:	4a46      	ldr	r2, [pc, #280]	; (8004ccc <HAL_GPIO_Init+0x2fc>)
 8004bb2:	4293      	cmp	r3, r2
 8004bb4:	d007      	beq.n	8004bc6 <HAL_GPIO_Init+0x1f6>
 8004bb6:	687b      	ldr	r3, [r7, #4]
 8004bb8:	4a45      	ldr	r2, [pc, #276]	; (8004cd0 <HAL_GPIO_Init+0x300>)
 8004bba:	4293      	cmp	r3, r2
 8004bbc:	d101      	bne.n	8004bc2 <HAL_GPIO_Init+0x1f2>
 8004bbe:	2304      	movs	r3, #4
 8004bc0:	e008      	b.n	8004bd4 <HAL_GPIO_Init+0x204>
 8004bc2:	2307      	movs	r3, #7
 8004bc4:	e006      	b.n	8004bd4 <HAL_GPIO_Init+0x204>
 8004bc6:	2303      	movs	r3, #3
 8004bc8:	e004      	b.n	8004bd4 <HAL_GPIO_Init+0x204>
 8004bca:	2302      	movs	r3, #2
 8004bcc:	e002      	b.n	8004bd4 <HAL_GPIO_Init+0x204>
 8004bce:	2301      	movs	r3, #1
 8004bd0:	e000      	b.n	8004bd4 <HAL_GPIO_Init+0x204>
 8004bd2:	2300      	movs	r3, #0
 8004bd4:	69fa      	ldr	r2, [r7, #28]
 8004bd6:	f002 0203 	and.w	r2, r2, #3
 8004bda:	0092      	lsls	r2, r2, #2
 8004bdc:	4093      	lsls	r3, r2
 8004bde:	69ba      	ldr	r2, [r7, #24]
 8004be0:	4313      	orrs	r3, r2
 8004be2:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
 8004be4:	4935      	ldr	r1, [pc, #212]	; (8004cbc <HAL_GPIO_Init+0x2ec>)
 8004be6:	69fb      	ldr	r3, [r7, #28]
 8004be8:	089b      	lsrs	r3, r3, #2
 8004bea:	3302      	adds	r3, #2
 8004bec:	69ba      	ldr	r2, [r7, #24]
 8004bee:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8004bf2:	4b38      	ldr	r3, [pc, #224]	; (8004cd4 <HAL_GPIO_Init+0x304>)
 8004bf4:	689b      	ldr	r3, [r3, #8]
 8004bf6:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8004bf8:	693b      	ldr	r3, [r7, #16]
 8004bfa:	43db      	mvns	r3, r3
 8004bfc:	69ba      	ldr	r2, [r7, #24]
 8004bfe:	4013      	ands	r3, r2
 8004c00:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8004c02:	683b      	ldr	r3, [r7, #0]
 8004c04:	685b      	ldr	r3, [r3, #4]
 8004c06:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8004c0a:	2b00      	cmp	r3, #0
 8004c0c:	d003      	beq.n	8004c16 <HAL_GPIO_Init+0x246>
        {
          temp |= iocurrent;
 8004c0e:	69ba      	ldr	r2, [r7, #24]
 8004c10:	693b      	ldr	r3, [r7, #16]
 8004c12:	4313      	orrs	r3, r2
 8004c14:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 8004c16:	4a2f      	ldr	r2, [pc, #188]	; (8004cd4 <HAL_GPIO_Init+0x304>)
 8004c18:	69bb      	ldr	r3, [r7, #24]
 8004c1a:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 8004c1c:	4b2d      	ldr	r3, [pc, #180]	; (8004cd4 <HAL_GPIO_Init+0x304>)
 8004c1e:	68db      	ldr	r3, [r3, #12]
 8004c20:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8004c22:	693b      	ldr	r3, [r7, #16]
 8004c24:	43db      	mvns	r3, r3
 8004c26:	69ba      	ldr	r2, [r7, #24]
 8004c28:	4013      	ands	r3, r2
 8004c2a:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8004c2c:	683b      	ldr	r3, [r7, #0]
 8004c2e:	685b      	ldr	r3, [r3, #4]
 8004c30:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8004c34:	2b00      	cmp	r3, #0
 8004c36:	d003      	beq.n	8004c40 <HAL_GPIO_Init+0x270>
        {
          temp |= iocurrent;
 8004c38:	69ba      	ldr	r2, [r7, #24]
 8004c3a:	693b      	ldr	r3, [r7, #16]
 8004c3c:	4313      	orrs	r3, r2
 8004c3e:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 8004c40:	4a24      	ldr	r2, [pc, #144]	; (8004cd4 <HAL_GPIO_Init+0x304>)
 8004c42:	69bb      	ldr	r3, [r7, #24]
 8004c44:	60d3      	str	r3, [r2, #12]

        temp = EXTI->EMR;
 8004c46:	4b23      	ldr	r3, [pc, #140]	; (8004cd4 <HAL_GPIO_Init+0x304>)
 8004c48:	685b      	ldr	r3, [r3, #4]
 8004c4a:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8004c4c:	693b      	ldr	r3, [r7, #16]
 8004c4e:	43db      	mvns	r3, r3
 8004c50:	69ba      	ldr	r2, [r7, #24]
 8004c52:	4013      	ands	r3, r2
 8004c54:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8004c56:	683b      	ldr	r3, [r7, #0]
 8004c58:	685b      	ldr	r3, [r3, #4]
 8004c5a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004c5e:	2b00      	cmp	r3, #0
 8004c60:	d003      	beq.n	8004c6a <HAL_GPIO_Init+0x29a>
        {
          temp |= iocurrent;
 8004c62:	69ba      	ldr	r2, [r7, #24]
 8004c64:	693b      	ldr	r3, [r7, #16]
 8004c66:	4313      	orrs	r3, r2
 8004c68:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 8004c6a:	4a1a      	ldr	r2, [pc, #104]	; (8004cd4 <HAL_GPIO_Init+0x304>)
 8004c6c:	69bb      	ldr	r3, [r7, #24]
 8004c6e:	6053      	str	r3, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8004c70:	4b18      	ldr	r3, [pc, #96]	; (8004cd4 <HAL_GPIO_Init+0x304>)
 8004c72:	681b      	ldr	r3, [r3, #0]
 8004c74:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8004c76:	693b      	ldr	r3, [r7, #16]
 8004c78:	43db      	mvns	r3, r3
 8004c7a:	69ba      	ldr	r2, [r7, #24]
 8004c7c:	4013      	ands	r3, r2
 8004c7e:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8004c80:	683b      	ldr	r3, [r7, #0]
 8004c82:	685b      	ldr	r3, [r3, #4]
 8004c84:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8004c88:	2b00      	cmp	r3, #0
 8004c8a:	d003      	beq.n	8004c94 <HAL_GPIO_Init+0x2c4>
        {
          temp |= iocurrent;
 8004c8c:	69ba      	ldr	r2, [r7, #24]
 8004c8e:	693b      	ldr	r3, [r7, #16]
 8004c90:	4313      	orrs	r3, r2
 8004c92:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 8004c94:	4a0f      	ldr	r2, [pc, #60]	; (8004cd4 <HAL_GPIO_Init+0x304>)
 8004c96:	69bb      	ldr	r3, [r7, #24]
 8004c98:	6013      	str	r3, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8004c9a:	69fb      	ldr	r3, [r7, #28]
 8004c9c:	3301      	adds	r3, #1
 8004c9e:	61fb      	str	r3, [r7, #28]
 8004ca0:	69fb      	ldr	r3, [r7, #28]
 8004ca2:	2b0f      	cmp	r3, #15
 8004ca4:	f67f aea2 	bls.w	80049ec <HAL_GPIO_Init+0x1c>
      }
    }
  }
}
 8004ca8:	bf00      	nop
 8004caa:	bf00      	nop
 8004cac:	3724      	adds	r7, #36	; 0x24
 8004cae:	46bd      	mov	sp, r7
 8004cb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004cb4:	4770      	bx	lr
 8004cb6:	bf00      	nop
 8004cb8:	40023800 	.word	0x40023800
 8004cbc:	40013800 	.word	0x40013800
 8004cc0:	40020000 	.word	0x40020000
 8004cc4:	40020400 	.word	0x40020400
 8004cc8:	40020800 	.word	0x40020800
 8004ccc:	40020c00 	.word	0x40020c00
 8004cd0:	40021000 	.word	0x40021000
 8004cd4:	40013c00 	.word	0x40013c00

08004cd8 <HAL_GPIO_ReadPin>:
  * @param  GPIO_Pin specifies the port bit to read.
  *         This parameter can be GPIO_PIN_x where x can be (0..15).
  * @retval The input port pin value.
  */
GPIO_PinState HAL_GPIO_ReadPin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
 8004cd8:	b480      	push	{r7}
 8004cda:	b085      	sub	sp, #20
 8004cdc:	af00      	add	r7, sp, #0
 8004cde:	6078      	str	r0, [r7, #4]
 8004ce0:	460b      	mov	r3, r1
 8004ce2:	807b      	strh	r3, [r7, #2]
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8004ce4:	687b      	ldr	r3, [r7, #4]
 8004ce6:	691a      	ldr	r2, [r3, #16]
 8004ce8:	887b      	ldrh	r3, [r7, #2]
 8004cea:	4013      	ands	r3, r2
 8004cec:	2b00      	cmp	r3, #0
 8004cee:	d002      	beq.n	8004cf6 <HAL_GPIO_ReadPin+0x1e>
  {
    bitstatus = GPIO_PIN_SET;
 8004cf0:	2301      	movs	r3, #1
 8004cf2:	73fb      	strb	r3, [r7, #15]
 8004cf4:	e001      	b.n	8004cfa <HAL_GPIO_ReadPin+0x22>
  }
  else
  {
    bitstatus = GPIO_PIN_RESET;
 8004cf6:	2300      	movs	r3, #0
 8004cf8:	73fb      	strb	r3, [r7, #15]
  }
  return bitstatus;
 8004cfa:	7bfb      	ldrb	r3, [r7, #15]
}
 8004cfc:	4618      	mov	r0, r3
 8004cfe:	3714      	adds	r7, #20
 8004d00:	46bd      	mov	sp, r7
 8004d02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d06:	4770      	bx	lr

08004d08 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 8004d08:	b480      	push	{r7}
 8004d0a:	b083      	sub	sp, #12
 8004d0c:	af00      	add	r7, sp, #0
 8004d0e:	6078      	str	r0, [r7, #4]
 8004d10:	460b      	mov	r3, r1
 8004d12:	807b      	strh	r3, [r7, #2]
 8004d14:	4613      	mov	r3, r2
 8004d16:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8004d18:	787b      	ldrb	r3, [r7, #1]
 8004d1a:	2b00      	cmp	r3, #0
 8004d1c:	d003      	beq.n	8004d26 <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 8004d1e:	887a      	ldrh	r2, [r7, #2]
 8004d20:	687b      	ldr	r3, [r7, #4]
 8004d22:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
  }
}
 8004d24:	e003      	b.n	8004d2e <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8004d26:	887b      	ldrh	r3, [r7, #2]
 8004d28:	041a      	lsls	r2, r3, #16
 8004d2a:	687b      	ldr	r3, [r7, #4]
 8004d2c:	619a      	str	r2, [r3, #24]
}
 8004d2e:	bf00      	nop
 8004d30:	370c      	adds	r7, #12
 8004d32:	46bd      	mov	sp, r7
 8004d34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d38:	4770      	bx	lr

08004d3a <HAL_GPIO_TogglePin>:
  *                      x can be (A..I) to select the GPIO peripheral for STM32F40XX and STM32F427X devices.
  * @param  GPIO_Pin Specifies the pins to be toggled.
  * @retval None
  */
void HAL_GPIO_TogglePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
 8004d3a:	b480      	push	{r7}
 8004d3c:	b085      	sub	sp, #20
 8004d3e:	af00      	add	r7, sp, #0
 8004d40:	6078      	str	r0, [r7, #4]
 8004d42:	460b      	mov	r3, r1
 8004d44:	807b      	strh	r3, [r7, #2]

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8004d46:	687b      	ldr	r3, [r7, #4]
 8004d48:	695b      	ldr	r3, [r3, #20]
 8004d4a:	60fb      	str	r3, [r7, #12]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8004d4c:	887a      	ldrh	r2, [r7, #2]
 8004d4e:	68fb      	ldr	r3, [r7, #12]
 8004d50:	4013      	ands	r3, r2
 8004d52:	041a      	lsls	r2, r3, #16
 8004d54:	68fb      	ldr	r3, [r7, #12]
 8004d56:	43d9      	mvns	r1, r3
 8004d58:	887b      	ldrh	r3, [r7, #2]
 8004d5a:	400b      	ands	r3, r1
 8004d5c:	431a      	orrs	r2, r3
 8004d5e:	687b      	ldr	r3, [r7, #4]
 8004d60:	619a      	str	r2, [r3, #24]
}
 8004d62:	bf00      	nop
 8004d64:	3714      	adds	r7, #20
 8004d66:	46bd      	mov	sp, r7
 8004d68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d6c:	4770      	bx	lr
	...

08004d70 <HAL_GPIO_EXTI_IRQHandler>:
  * @brief  This function handles EXTI interrupt request.
  * @param  GPIO_Pin Specifies the pins connected EXTI line
  * @retval None
  */
void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
{
 8004d70:	b580      	push	{r7, lr}
 8004d72:	b082      	sub	sp, #8
 8004d74:	af00      	add	r7, sp, #0
 8004d76:	4603      	mov	r3, r0
 8004d78:	80fb      	strh	r3, [r7, #6]
  /* EXTI line interrupt detected */
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 8004d7a:	4b08      	ldr	r3, [pc, #32]	; (8004d9c <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8004d7c:	695a      	ldr	r2, [r3, #20]
 8004d7e:	88fb      	ldrh	r3, [r7, #6]
 8004d80:	4013      	ands	r3, r2
 8004d82:	2b00      	cmp	r3, #0
 8004d84:	d006      	beq.n	8004d94 <HAL_GPIO_EXTI_IRQHandler+0x24>
  {
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 8004d86:	4a05      	ldr	r2, [pc, #20]	; (8004d9c <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8004d88:	88fb      	ldrh	r3, [r7, #6]
 8004d8a:	6153      	str	r3, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 8004d8c:	88fb      	ldrh	r3, [r7, #6]
 8004d8e:	4618      	mov	r0, r3
 8004d90:	f7fe fe14 	bl	80039bc <HAL_GPIO_EXTI_Callback>
  }
}
 8004d94:	bf00      	nop
 8004d96:	3708      	adds	r7, #8
 8004d98:	46bd      	mov	sp, r7
 8004d9a:	bd80      	pop	{r7, pc}
 8004d9c:	40013c00 	.word	0x40013c00

08004da0 <HAL_I2C_Init>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)
{
 8004da0:	b580      	push	{r7, lr}
 8004da2:	b084      	sub	sp, #16
 8004da4:	af00      	add	r7, sp, #0
 8004da6:	6078      	str	r0, [r7, #4]
  uint32_t freqrange;
  uint32_t pclk1;

  /* Check the I2C handle allocation */
  if (hi2c == NULL)
 8004da8:	687b      	ldr	r3, [r7, #4]
 8004daa:	2b00      	cmp	r3, #0
 8004dac:	d101      	bne.n	8004db2 <HAL_I2C_Init+0x12>
  {
    return HAL_ERROR;
 8004dae:	2301      	movs	r3, #1
 8004db0:	e12b      	b.n	800500a <HAL_I2C_Init+0x26a>
  assert_param(IS_I2C_DUAL_ADDRESS(hi2c->Init.DualAddressMode));
  assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
  assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
  assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));

  if (hi2c->State == HAL_I2C_STATE_RESET)
 8004db2:	687b      	ldr	r3, [r7, #4]
 8004db4:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004db8:	b2db      	uxtb	r3, r3
 8004dba:	2b00      	cmp	r3, #0
 8004dbc:	d106      	bne.n	8004dcc <HAL_I2C_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hi2c->Lock = HAL_UNLOCKED;
 8004dbe:	687b      	ldr	r3, [r7, #4]
 8004dc0:	2200      	movs	r2, #0
 8004dc2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    hi2c->MspInitCallback(hi2c);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_I2C_MspInit(hi2c);
 8004dc6:	6878      	ldr	r0, [r7, #4]
 8004dc8:	f7fd ffa2 	bl	8002d10 <HAL_I2C_MspInit>
#endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
  }

  hi2c->State = HAL_I2C_STATE_BUSY;
 8004dcc:	687b      	ldr	r3, [r7, #4]
 8004dce:	2224      	movs	r2, #36	; 0x24
 8004dd0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Disable the selected I2C peripheral */
  __HAL_I2C_DISABLE(hi2c);
 8004dd4:	687b      	ldr	r3, [r7, #4]
 8004dd6:	681b      	ldr	r3, [r3, #0]
 8004dd8:	681a      	ldr	r2, [r3, #0]
 8004dda:	687b      	ldr	r3, [r7, #4]
 8004ddc:	681b      	ldr	r3, [r3, #0]
 8004dde:	f022 0201 	bic.w	r2, r2, #1
 8004de2:	601a      	str	r2, [r3, #0]

  /*Reset I2C*/
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8004de4:	687b      	ldr	r3, [r7, #4]
 8004de6:	681b      	ldr	r3, [r3, #0]
 8004de8:	681a      	ldr	r2, [r3, #0]
 8004dea:	687b      	ldr	r3, [r7, #4]
 8004dec:	681b      	ldr	r3, [r3, #0]
 8004dee:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8004df2:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8004df4:	687b      	ldr	r3, [r7, #4]
 8004df6:	681b      	ldr	r3, [r3, #0]
 8004df8:	681a      	ldr	r2, [r3, #0]
 8004dfa:	687b      	ldr	r3, [r7, #4]
 8004dfc:	681b      	ldr	r3, [r3, #0]
 8004dfe:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8004e02:	601a      	str	r2, [r3, #0]

  /* Get PCLK1 frequency */
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8004e04:	f002 f8a0 	bl	8006f48 <HAL_RCC_GetPCLK1Freq>
 8004e08:	60f8      	str	r0, [r7, #12]

  /* Check the minimum allowed PCLK1 frequency */
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8004e0a:	687b      	ldr	r3, [r7, #4]
 8004e0c:	685b      	ldr	r3, [r3, #4]
 8004e0e:	4a81      	ldr	r2, [pc, #516]	; (8005014 <HAL_I2C_Init+0x274>)
 8004e10:	4293      	cmp	r3, r2
 8004e12:	d807      	bhi.n	8004e24 <HAL_I2C_Init+0x84>
 8004e14:	68fb      	ldr	r3, [r7, #12]
 8004e16:	4a80      	ldr	r2, [pc, #512]	; (8005018 <HAL_I2C_Init+0x278>)
 8004e18:	4293      	cmp	r3, r2
 8004e1a:	bf94      	ite	ls
 8004e1c:	2301      	movls	r3, #1
 8004e1e:	2300      	movhi	r3, #0
 8004e20:	b2db      	uxtb	r3, r3
 8004e22:	e006      	b.n	8004e32 <HAL_I2C_Init+0x92>
 8004e24:	68fb      	ldr	r3, [r7, #12]
 8004e26:	4a7d      	ldr	r2, [pc, #500]	; (800501c <HAL_I2C_Init+0x27c>)
 8004e28:	4293      	cmp	r3, r2
 8004e2a:	bf94      	ite	ls
 8004e2c:	2301      	movls	r3, #1
 8004e2e:	2300      	movhi	r3, #0
 8004e30:	b2db      	uxtb	r3, r3
 8004e32:	2b00      	cmp	r3, #0
 8004e34:	d001      	beq.n	8004e3a <HAL_I2C_Init+0x9a>
  {
    return HAL_ERROR;
 8004e36:	2301      	movs	r3, #1
 8004e38:	e0e7      	b.n	800500a <HAL_I2C_Init+0x26a>
  }

  /* Calculate frequency range */
  freqrange = I2C_FREQRANGE(pclk1);
 8004e3a:	68fb      	ldr	r3, [r7, #12]
 8004e3c:	4a78      	ldr	r2, [pc, #480]	; (8005020 <HAL_I2C_Init+0x280>)
 8004e3e:	fba2 2303 	umull	r2, r3, r2, r3
 8004e42:	0c9b      	lsrs	r3, r3, #18
 8004e44:	60bb      	str	r3, [r7, #8]

  /*---------------------------- I2Cx CR2 Configuration ----------------------*/
  /* Configure I2Cx: Frequency range */
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004e46:	687b      	ldr	r3, [r7, #4]
 8004e48:	681b      	ldr	r3, [r3, #0]
 8004e4a:	685b      	ldr	r3, [r3, #4]
 8004e4c:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8004e50:	687b      	ldr	r3, [r7, #4]
 8004e52:	681b      	ldr	r3, [r3, #0]
 8004e54:	68ba      	ldr	r2, [r7, #8]
 8004e56:	430a      	orrs	r2, r1
 8004e58:	605a      	str	r2, [r3, #4]

  /*---------------------------- I2Cx TRISE Configuration --------------------*/
  /* Configure I2Cx: Rise Time */
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8004e5a:	687b      	ldr	r3, [r7, #4]
 8004e5c:	681b      	ldr	r3, [r3, #0]
 8004e5e:	6a1b      	ldr	r3, [r3, #32]
 8004e60:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8004e64:	687b      	ldr	r3, [r7, #4]
 8004e66:	685b      	ldr	r3, [r3, #4]
 8004e68:	4a6a      	ldr	r2, [pc, #424]	; (8005014 <HAL_I2C_Init+0x274>)
 8004e6a:	4293      	cmp	r3, r2
 8004e6c:	d802      	bhi.n	8004e74 <HAL_I2C_Init+0xd4>
 8004e6e:	68bb      	ldr	r3, [r7, #8]
 8004e70:	3301      	adds	r3, #1
 8004e72:	e009      	b.n	8004e88 <HAL_I2C_Init+0xe8>
 8004e74:	68bb      	ldr	r3, [r7, #8]
 8004e76:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8004e7a:	fb02 f303 	mul.w	r3, r2, r3
 8004e7e:	4a69      	ldr	r2, [pc, #420]	; (8005024 <HAL_I2C_Init+0x284>)
 8004e80:	fba2 2303 	umull	r2, r3, r2, r3
 8004e84:	099b      	lsrs	r3, r3, #6
 8004e86:	3301      	adds	r3, #1
 8004e88:	687a      	ldr	r2, [r7, #4]
 8004e8a:	6812      	ldr	r2, [r2, #0]
 8004e8c:	430b      	orrs	r3, r1
 8004e8e:	6213      	str	r3, [r2, #32]

  /*---------------------------- I2Cx CCR Configuration ----------------------*/
  /* Configure I2Cx: Speed */
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8004e90:	687b      	ldr	r3, [r7, #4]
 8004e92:	681b      	ldr	r3, [r3, #0]
 8004e94:	69db      	ldr	r3, [r3, #28]
 8004e96:	f423 424f 	bic.w	r2, r3, #52992	; 0xcf00
 8004e9a:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 8004e9e:	687b      	ldr	r3, [r7, #4]
 8004ea0:	685b      	ldr	r3, [r3, #4]
 8004ea2:	495c      	ldr	r1, [pc, #368]	; (8005014 <HAL_I2C_Init+0x274>)
 8004ea4:	428b      	cmp	r3, r1
 8004ea6:	d819      	bhi.n	8004edc <HAL_I2C_Init+0x13c>
 8004ea8:	68fb      	ldr	r3, [r7, #12]
 8004eaa:	1e59      	subs	r1, r3, #1
 8004eac:	687b      	ldr	r3, [r7, #4]
 8004eae:	685b      	ldr	r3, [r3, #4]
 8004eb0:	005b      	lsls	r3, r3, #1
 8004eb2:	fbb1 f3f3 	udiv	r3, r1, r3
 8004eb6:	1c59      	adds	r1, r3, #1
 8004eb8:	f640 73fc 	movw	r3, #4092	; 0xffc
 8004ebc:	400b      	ands	r3, r1
 8004ebe:	2b00      	cmp	r3, #0
 8004ec0:	d00a      	beq.n	8004ed8 <HAL_I2C_Init+0x138>
 8004ec2:	68fb      	ldr	r3, [r7, #12]
 8004ec4:	1e59      	subs	r1, r3, #1
 8004ec6:	687b      	ldr	r3, [r7, #4]
 8004ec8:	685b      	ldr	r3, [r3, #4]
 8004eca:	005b      	lsls	r3, r3, #1
 8004ecc:	fbb1 f3f3 	udiv	r3, r1, r3
 8004ed0:	3301      	adds	r3, #1
 8004ed2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004ed6:	e051      	b.n	8004f7c <HAL_I2C_Init+0x1dc>
 8004ed8:	2304      	movs	r3, #4
 8004eda:	e04f      	b.n	8004f7c <HAL_I2C_Init+0x1dc>
 8004edc:	687b      	ldr	r3, [r7, #4]
 8004ede:	689b      	ldr	r3, [r3, #8]
 8004ee0:	2b00      	cmp	r3, #0
 8004ee2:	d111      	bne.n	8004f08 <HAL_I2C_Init+0x168>
 8004ee4:	68fb      	ldr	r3, [r7, #12]
 8004ee6:	1e58      	subs	r0, r3, #1
 8004ee8:	687b      	ldr	r3, [r7, #4]
 8004eea:	6859      	ldr	r1, [r3, #4]
 8004eec:	460b      	mov	r3, r1
 8004eee:	005b      	lsls	r3, r3, #1
 8004ef0:	440b      	add	r3, r1
 8004ef2:	fbb0 f3f3 	udiv	r3, r0, r3
 8004ef6:	3301      	adds	r3, #1
 8004ef8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004efc:	2b00      	cmp	r3, #0
 8004efe:	bf0c      	ite	eq
 8004f00:	2301      	moveq	r3, #1
 8004f02:	2300      	movne	r3, #0
 8004f04:	b2db      	uxtb	r3, r3
 8004f06:	e012      	b.n	8004f2e <HAL_I2C_Init+0x18e>
 8004f08:	68fb      	ldr	r3, [r7, #12]
 8004f0a:	1e58      	subs	r0, r3, #1
 8004f0c:	687b      	ldr	r3, [r7, #4]
 8004f0e:	6859      	ldr	r1, [r3, #4]
 8004f10:	460b      	mov	r3, r1
 8004f12:	009b      	lsls	r3, r3, #2
 8004f14:	440b      	add	r3, r1
 8004f16:	0099      	lsls	r1, r3, #2
 8004f18:	440b      	add	r3, r1
 8004f1a:	fbb0 f3f3 	udiv	r3, r0, r3
 8004f1e:	3301      	adds	r3, #1
 8004f20:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004f24:	2b00      	cmp	r3, #0
 8004f26:	bf0c      	ite	eq
 8004f28:	2301      	moveq	r3, #1
 8004f2a:	2300      	movne	r3, #0
 8004f2c:	b2db      	uxtb	r3, r3
 8004f2e:	2b00      	cmp	r3, #0
 8004f30:	d001      	beq.n	8004f36 <HAL_I2C_Init+0x196>
 8004f32:	2301      	movs	r3, #1
 8004f34:	e022      	b.n	8004f7c <HAL_I2C_Init+0x1dc>
 8004f36:	687b      	ldr	r3, [r7, #4]
 8004f38:	689b      	ldr	r3, [r3, #8]
 8004f3a:	2b00      	cmp	r3, #0
 8004f3c:	d10e      	bne.n	8004f5c <HAL_I2C_Init+0x1bc>
 8004f3e:	68fb      	ldr	r3, [r7, #12]
 8004f40:	1e58      	subs	r0, r3, #1
 8004f42:	687b      	ldr	r3, [r7, #4]
 8004f44:	6859      	ldr	r1, [r3, #4]
 8004f46:	460b      	mov	r3, r1
 8004f48:	005b      	lsls	r3, r3, #1
 8004f4a:	440b      	add	r3, r1
 8004f4c:	fbb0 f3f3 	udiv	r3, r0, r3
 8004f50:	3301      	adds	r3, #1
 8004f52:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004f56:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8004f5a:	e00f      	b.n	8004f7c <HAL_I2C_Init+0x1dc>
 8004f5c:	68fb      	ldr	r3, [r7, #12]
 8004f5e:	1e58      	subs	r0, r3, #1
 8004f60:	687b      	ldr	r3, [r7, #4]
 8004f62:	6859      	ldr	r1, [r3, #4]
 8004f64:	460b      	mov	r3, r1
 8004f66:	009b      	lsls	r3, r3, #2
 8004f68:	440b      	add	r3, r1
 8004f6a:	0099      	lsls	r1, r3, #2
 8004f6c:	440b      	add	r3, r1
 8004f6e:	fbb0 f3f3 	udiv	r3, r0, r3
 8004f72:	3301      	adds	r3, #1
 8004f74:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004f78:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8004f7c:	6879      	ldr	r1, [r7, #4]
 8004f7e:	6809      	ldr	r1, [r1, #0]
 8004f80:	4313      	orrs	r3, r2
 8004f82:	61cb      	str	r3, [r1, #28]

  /*---------------------------- I2Cx CR1 Configuration ----------------------*/
  /* Configure I2Cx: Generalcall and NoStretch mode */
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8004f84:	687b      	ldr	r3, [r7, #4]
 8004f86:	681b      	ldr	r3, [r3, #0]
 8004f88:	681b      	ldr	r3, [r3, #0]
 8004f8a:	f023 01c0 	bic.w	r1, r3, #192	; 0xc0
 8004f8e:	687b      	ldr	r3, [r7, #4]
 8004f90:	69da      	ldr	r2, [r3, #28]
 8004f92:	687b      	ldr	r3, [r7, #4]
 8004f94:	6a1b      	ldr	r3, [r3, #32]
 8004f96:	431a      	orrs	r2, r3
 8004f98:	687b      	ldr	r3, [r7, #4]
 8004f9a:	681b      	ldr	r3, [r3, #0]
 8004f9c:	430a      	orrs	r2, r1
 8004f9e:	601a      	str	r2, [r3, #0]

  /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
  /* Configure I2Cx: Own Address1 and addressing mode */
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8004fa0:	687b      	ldr	r3, [r7, #4]
 8004fa2:	681b      	ldr	r3, [r3, #0]
 8004fa4:	689b      	ldr	r3, [r3, #8]
 8004fa6:	f423 4303 	bic.w	r3, r3, #33536	; 0x8300
 8004faa:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 8004fae:	687a      	ldr	r2, [r7, #4]
 8004fb0:	6911      	ldr	r1, [r2, #16]
 8004fb2:	687a      	ldr	r2, [r7, #4]
 8004fb4:	68d2      	ldr	r2, [r2, #12]
 8004fb6:	4311      	orrs	r1, r2
 8004fb8:	687a      	ldr	r2, [r7, #4]
 8004fba:	6812      	ldr	r2, [r2, #0]
 8004fbc:	430b      	orrs	r3, r1
 8004fbe:	6093      	str	r3, [r2, #8]

  /*---------------------------- I2Cx OAR2 Configuration ---------------------*/
  /* Configure I2Cx: Dual mode and Own Address2 */
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8004fc0:	687b      	ldr	r3, [r7, #4]
 8004fc2:	681b      	ldr	r3, [r3, #0]
 8004fc4:	68db      	ldr	r3, [r3, #12]
 8004fc6:	f023 01ff 	bic.w	r1, r3, #255	; 0xff
 8004fca:	687b      	ldr	r3, [r7, #4]
 8004fcc:	695a      	ldr	r2, [r3, #20]
 8004fce:	687b      	ldr	r3, [r7, #4]
 8004fd0:	699b      	ldr	r3, [r3, #24]
 8004fd2:	431a      	orrs	r2, r3
 8004fd4:	687b      	ldr	r3, [r7, #4]
 8004fd6:	681b      	ldr	r3, [r3, #0]
 8004fd8:	430a      	orrs	r2, r1
 8004fda:	60da      	str	r2, [r3, #12]

  /* Enable the selected I2C peripheral */
  __HAL_I2C_ENABLE(hi2c);
 8004fdc:	687b      	ldr	r3, [r7, #4]
 8004fde:	681b      	ldr	r3, [r3, #0]
 8004fe0:	681a      	ldr	r2, [r3, #0]
 8004fe2:	687b      	ldr	r3, [r7, #4]
 8004fe4:	681b      	ldr	r3, [r3, #0]
 8004fe6:	f042 0201 	orr.w	r2, r2, #1
 8004fea:	601a      	str	r2, [r3, #0]

  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004fec:	687b      	ldr	r3, [r7, #4]
 8004fee:	2200      	movs	r2, #0
 8004ff0:	641a      	str	r2, [r3, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8004ff2:	687b      	ldr	r3, [r7, #4]
 8004ff4:	2220      	movs	r2, #32
 8004ff6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8004ffa:	687b      	ldr	r3, [r7, #4]
 8004ffc:	2200      	movs	r2, #0
 8004ffe:	631a      	str	r2, [r3, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8005000:	687b      	ldr	r3, [r7, #4]
 8005002:	2200      	movs	r2, #0
 8005004:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

  return HAL_OK;
 8005008:	2300      	movs	r3, #0
}
 800500a:	4618      	mov	r0, r3
 800500c:	3710      	adds	r7, #16
 800500e:	46bd      	mov	sp, r7
 8005010:	bd80      	pop	{r7, pc}
 8005012:	bf00      	nop
 8005014:	000186a0 	.word	0x000186a0
 8005018:	001e847f 	.word	0x001e847f
 800501c:	003d08ff 	.word	0x003d08ff
 8005020:	431bde83 	.word	0x431bde83
 8005024:	10624dd3 	.word	0x10624dd3

08005028 <HAL_I2C_Master_Transmit>:
  * @param  Size Amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Master_Transmit(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8005028:	b580      	push	{r7, lr}
 800502a:	b088      	sub	sp, #32
 800502c:	af02      	add	r7, sp, #8
 800502e:	60f8      	str	r0, [r7, #12]
 8005030:	607a      	str	r2, [r7, #4]
 8005032:	461a      	mov	r2, r3
 8005034:	460b      	mov	r3, r1
 8005036:	817b      	strh	r3, [r7, #10]
 8005038:	4613      	mov	r3, r2
 800503a:	813b      	strh	r3, [r7, #8]
  /* Init tickstart for timeout management*/
  uint32_t tickstart = HAL_GetTick();
 800503c:	f7fe ff7a 	bl	8003f34 <HAL_GetTick>
 8005040:	6178      	str	r0, [r7, #20]

  if (hi2c->State == HAL_I2C_STATE_READY)
 8005042:	68fb      	ldr	r3, [r7, #12]
 8005044:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005048:	b2db      	uxtb	r3, r3
 800504a:	2b20      	cmp	r3, #32
 800504c:	f040 80e0 	bne.w	8005210 <HAL_I2C_Master_Transmit+0x1e8>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8005050:	697b      	ldr	r3, [r7, #20]
 8005052:	9300      	str	r3, [sp, #0]
 8005054:	2319      	movs	r3, #25
 8005056:	2201      	movs	r2, #1
 8005058:	4970      	ldr	r1, [pc, #448]	; (800521c <HAL_I2C_Master_Transmit+0x1f4>)
 800505a:	68f8      	ldr	r0, [r7, #12]
 800505c:	f001 f90e 	bl	800627c <I2C_WaitOnFlagUntilTimeout>
 8005060:	4603      	mov	r3, r0
 8005062:	2b00      	cmp	r3, #0
 8005064:	d001      	beq.n	800506a <HAL_I2C_Master_Transmit+0x42>
    {
      return HAL_BUSY;
 8005066:	2302      	movs	r3, #2
 8005068:	e0d3      	b.n	8005212 <HAL_I2C_Master_Transmit+0x1ea>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 800506a:	68fb      	ldr	r3, [r7, #12]
 800506c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8005070:	2b01      	cmp	r3, #1
 8005072:	d101      	bne.n	8005078 <HAL_I2C_Master_Transmit+0x50>
 8005074:	2302      	movs	r3, #2
 8005076:	e0cc      	b.n	8005212 <HAL_I2C_Master_Transmit+0x1ea>
 8005078:	68fb      	ldr	r3, [r7, #12]
 800507a:	2201      	movs	r2, #1
 800507c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8005080:	68fb      	ldr	r3, [r7, #12]
 8005082:	681b      	ldr	r3, [r3, #0]
 8005084:	681b      	ldr	r3, [r3, #0]
 8005086:	f003 0301 	and.w	r3, r3, #1
 800508a:	2b01      	cmp	r3, #1
 800508c:	d007      	beq.n	800509e <HAL_I2C_Master_Transmit+0x76>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 800508e:	68fb      	ldr	r3, [r7, #12]
 8005090:	681b      	ldr	r3, [r3, #0]
 8005092:	681a      	ldr	r2, [r3, #0]
 8005094:	68fb      	ldr	r3, [r7, #12]
 8005096:	681b      	ldr	r3, [r3, #0]
 8005098:	f042 0201 	orr.w	r2, r2, #1
 800509c:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800509e:	68fb      	ldr	r3, [r7, #12]
 80050a0:	681b      	ldr	r3, [r3, #0]
 80050a2:	681a      	ldr	r2, [r3, #0]
 80050a4:	68fb      	ldr	r3, [r7, #12]
 80050a6:	681b      	ldr	r3, [r3, #0]
 80050a8:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80050ac:	601a      	str	r2, [r3, #0]

    hi2c->State       = HAL_I2C_STATE_BUSY_TX;
 80050ae:	68fb      	ldr	r3, [r7, #12]
 80050b0:	2221      	movs	r2, #33	; 0x21
 80050b2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode        = HAL_I2C_MODE_MASTER;
 80050b6:	68fb      	ldr	r3, [r7, #12]
 80050b8:	2210      	movs	r2, #16
 80050ba:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
    hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 80050be:	68fb      	ldr	r3, [r7, #12]
 80050c0:	2200      	movs	r2, #0
 80050c2:	641a      	str	r2, [r3, #64]	; 0x40

    /* Prepare transfer parameters */
    hi2c->pBuffPtr    = pData;
 80050c4:	68fb      	ldr	r3, [r7, #12]
 80050c6:	687a      	ldr	r2, [r7, #4]
 80050c8:	625a      	str	r2, [r3, #36]	; 0x24
    hi2c->XferCount   = Size;
 80050ca:	68fb      	ldr	r3, [r7, #12]
 80050cc:	893a      	ldrh	r2, [r7, #8]
 80050ce:	855a      	strh	r2, [r3, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80050d0:	68fb      	ldr	r3, [r7, #12]
 80050d2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80050d4:	b29a      	uxth	r2, r3
 80050d6:	68fb      	ldr	r3, [r7, #12]
 80050d8:	851a      	strh	r2, [r3, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80050da:	68fb      	ldr	r3, [r7, #12]
 80050dc:	4a50      	ldr	r2, [pc, #320]	; (8005220 <HAL_I2C_Master_Transmit+0x1f8>)
 80050de:	62da      	str	r2, [r3, #44]	; 0x2c

    /* Send Slave Address */
    if (I2C_MasterRequestWrite(hi2c, DevAddress, Timeout, tickstart) != HAL_OK)
 80050e0:	8979      	ldrh	r1, [r7, #10]
 80050e2:	697b      	ldr	r3, [r7, #20]
 80050e4:	6a3a      	ldr	r2, [r7, #32]
 80050e6:	68f8      	ldr	r0, [r7, #12]
 80050e8:	f000 fdfa 	bl	8005ce0 <I2C_MasterRequestWrite>
 80050ec:	4603      	mov	r3, r0
 80050ee:	2b00      	cmp	r3, #0
 80050f0:	d001      	beq.n	80050f6 <HAL_I2C_Master_Transmit+0xce>
    {
      return HAL_ERROR;
 80050f2:	2301      	movs	r3, #1
 80050f4:	e08d      	b.n	8005212 <HAL_I2C_Master_Transmit+0x1ea>
    }

    /* Clear ADDR flag */
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80050f6:	2300      	movs	r3, #0
 80050f8:	613b      	str	r3, [r7, #16]
 80050fa:	68fb      	ldr	r3, [r7, #12]
 80050fc:	681b      	ldr	r3, [r3, #0]
 80050fe:	695b      	ldr	r3, [r3, #20]
 8005100:	613b      	str	r3, [r7, #16]
 8005102:	68fb      	ldr	r3, [r7, #12]
 8005104:	681b      	ldr	r3, [r3, #0]
 8005106:	699b      	ldr	r3, [r3, #24]
 8005108:	613b      	str	r3, [r7, #16]
 800510a:	693b      	ldr	r3, [r7, #16]

    while (hi2c->XferSize > 0U)
 800510c:	e066      	b.n	80051dc <HAL_I2C_Master_Transmit+0x1b4>
    {
      /* Wait until TXE flag is set */
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800510e:	697a      	ldr	r2, [r7, #20]
 8005110:	6a39      	ldr	r1, [r7, #32]
 8005112:	68f8      	ldr	r0, [r7, #12]
 8005114:	f001 f9cc 	bl	80064b0 <I2C_WaitOnTXEFlagUntilTimeout>
 8005118:	4603      	mov	r3, r0
 800511a:	2b00      	cmp	r3, #0
 800511c:	d00d      	beq.n	800513a <HAL_I2C_Master_Transmit+0x112>
      {
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800511e:	68fb      	ldr	r3, [r7, #12]
 8005120:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005122:	2b04      	cmp	r3, #4
 8005124:	d107      	bne.n	8005136 <HAL_I2C_Master_Transmit+0x10e>
        {
          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005126:	68fb      	ldr	r3, [r7, #12]
 8005128:	681b      	ldr	r3, [r3, #0]
 800512a:	681a      	ldr	r2, [r3, #0]
 800512c:	68fb      	ldr	r3, [r7, #12]
 800512e:	681b      	ldr	r3, [r3, #0]
 8005130:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005134:	601a      	str	r2, [r3, #0]
        }
        return HAL_ERROR;
 8005136:	2301      	movs	r3, #1
 8005138:	e06b      	b.n	8005212 <HAL_I2C_Master_Transmit+0x1ea>
      }

      /* Write data to DR */
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800513a:	68fb      	ldr	r3, [r7, #12]
 800513c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800513e:	781a      	ldrb	r2, [r3, #0]
 8005140:	68fb      	ldr	r3, [r7, #12]
 8005142:	681b      	ldr	r3, [r3, #0]
 8005144:	611a      	str	r2, [r3, #16]

      /* Increment Buffer pointer */
      hi2c->pBuffPtr++;
 8005146:	68fb      	ldr	r3, [r7, #12]
 8005148:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800514a:	1c5a      	adds	r2, r3, #1
 800514c:	68fb      	ldr	r3, [r7, #12]
 800514e:	625a      	str	r2, [r3, #36]	; 0x24

      /* Update counter */
      hi2c->XferCount--;
 8005150:	68fb      	ldr	r3, [r7, #12]
 8005152:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005154:	b29b      	uxth	r3, r3
 8005156:	3b01      	subs	r3, #1
 8005158:	b29a      	uxth	r2, r3
 800515a:	68fb      	ldr	r3, [r7, #12]
 800515c:	855a      	strh	r2, [r3, #42]	; 0x2a
      hi2c->XferSize--;
 800515e:	68fb      	ldr	r3, [r7, #12]
 8005160:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005162:	3b01      	subs	r3, #1
 8005164:	b29a      	uxth	r2, r3
 8005166:	68fb      	ldr	r3, [r7, #12]
 8005168:	851a      	strh	r2, [r3, #40]	; 0x28

      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800516a:	68fb      	ldr	r3, [r7, #12]
 800516c:	681b      	ldr	r3, [r3, #0]
 800516e:	695b      	ldr	r3, [r3, #20]
 8005170:	f003 0304 	and.w	r3, r3, #4
 8005174:	2b04      	cmp	r3, #4
 8005176:	d11b      	bne.n	80051b0 <HAL_I2C_Master_Transmit+0x188>
 8005178:	68fb      	ldr	r3, [r7, #12]
 800517a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800517c:	2b00      	cmp	r3, #0
 800517e:	d017      	beq.n	80051b0 <HAL_I2C_Master_Transmit+0x188>
      {
        /* Write data to DR */
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8005180:	68fb      	ldr	r3, [r7, #12]
 8005182:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005184:	781a      	ldrb	r2, [r3, #0]
 8005186:	68fb      	ldr	r3, [r7, #12]
 8005188:	681b      	ldr	r3, [r3, #0]
 800518a:	611a      	str	r2, [r3, #16]

        /* Increment Buffer pointer */
        hi2c->pBuffPtr++;
 800518c:	68fb      	ldr	r3, [r7, #12]
 800518e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005190:	1c5a      	adds	r2, r3, #1
 8005192:	68fb      	ldr	r3, [r7, #12]
 8005194:	625a      	str	r2, [r3, #36]	; 0x24

        /* Update counter */
        hi2c->XferCount--;
 8005196:	68fb      	ldr	r3, [r7, #12]
 8005198:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800519a:	b29b      	uxth	r3, r3
 800519c:	3b01      	subs	r3, #1
 800519e:	b29a      	uxth	r2, r3
 80051a0:	68fb      	ldr	r3, [r7, #12]
 80051a2:	855a      	strh	r2, [r3, #42]	; 0x2a
        hi2c->XferSize--;
 80051a4:	68fb      	ldr	r3, [r7, #12]
 80051a6:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80051a8:	3b01      	subs	r3, #1
 80051aa:	b29a      	uxth	r2, r3
 80051ac:	68fb      	ldr	r3, [r7, #12]
 80051ae:	851a      	strh	r2, [r3, #40]	; 0x28
      }

      /* Wait until BTF flag is set */
      if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80051b0:	697a      	ldr	r2, [r7, #20]
 80051b2:	6a39      	ldr	r1, [r7, #32]
 80051b4:	68f8      	ldr	r0, [r7, #12]
 80051b6:	f001 f9c3 	bl	8006540 <I2C_WaitOnBTFFlagUntilTimeout>
 80051ba:	4603      	mov	r3, r0
 80051bc:	2b00      	cmp	r3, #0
 80051be:	d00d      	beq.n	80051dc <HAL_I2C_Master_Transmit+0x1b4>
      {
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80051c0:	68fb      	ldr	r3, [r7, #12]
 80051c2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80051c4:	2b04      	cmp	r3, #4
 80051c6:	d107      	bne.n	80051d8 <HAL_I2C_Master_Transmit+0x1b0>
        {
          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80051c8:	68fb      	ldr	r3, [r7, #12]
 80051ca:	681b      	ldr	r3, [r3, #0]
 80051cc:	681a      	ldr	r2, [r3, #0]
 80051ce:	68fb      	ldr	r3, [r7, #12]
 80051d0:	681b      	ldr	r3, [r3, #0]
 80051d2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80051d6:	601a      	str	r2, [r3, #0]
        }
        return HAL_ERROR;
 80051d8:	2301      	movs	r3, #1
 80051da:	e01a      	b.n	8005212 <HAL_I2C_Master_Transmit+0x1ea>
    while (hi2c->XferSize > 0U)
 80051dc:	68fb      	ldr	r3, [r7, #12]
 80051de:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80051e0:	2b00      	cmp	r3, #0
 80051e2:	d194      	bne.n	800510e <HAL_I2C_Master_Transmit+0xe6>
      }
    }

    /* Generate Stop */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80051e4:	68fb      	ldr	r3, [r7, #12]
 80051e6:	681b      	ldr	r3, [r3, #0]
 80051e8:	681a      	ldr	r2, [r3, #0]
 80051ea:	68fb      	ldr	r3, [r7, #12]
 80051ec:	681b      	ldr	r3, [r3, #0]
 80051ee:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80051f2:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 80051f4:	68fb      	ldr	r3, [r7, #12]
 80051f6:	2220      	movs	r2, #32
 80051f8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80051fc:	68fb      	ldr	r3, [r7, #12]
 80051fe:	2200      	movs	r2, #0
 8005200:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8005204:	68fb      	ldr	r3, [r7, #12]
 8005206:	2200      	movs	r2, #0
 8005208:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    return HAL_OK;
 800520c:	2300      	movs	r3, #0
 800520e:	e000      	b.n	8005212 <HAL_I2C_Master_Transmit+0x1ea>
  }
  else
  {
    return HAL_BUSY;
 8005210:	2302      	movs	r3, #2
  }
}
 8005212:	4618      	mov	r0, r3
 8005214:	3718      	adds	r7, #24
 8005216:	46bd      	mov	sp, r7
 8005218:	bd80      	pop	{r7, pc}
 800521a:	bf00      	nop
 800521c:	00100002 	.word	0x00100002
 8005220:	ffff0000 	.word	0xffff0000

08005224 <HAL_I2C_Master_Receive>:
  * @param  Size Amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Master_Receive(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8005224:	b580      	push	{r7, lr}
 8005226:	b08c      	sub	sp, #48	; 0x30
 8005228:	af02      	add	r7, sp, #8
 800522a:	60f8      	str	r0, [r7, #12]
 800522c:	607a      	str	r2, [r7, #4]
 800522e:	461a      	mov	r2, r3
 8005230:	460b      	mov	r3, r1
 8005232:	817b      	strh	r3, [r7, #10]
 8005234:	4613      	mov	r3, r2
 8005236:	813b      	strh	r3, [r7, #8]
  /* Init tickstart for timeout management*/
  uint32_t tickstart = HAL_GetTick();
 8005238:	f7fe fe7c 	bl	8003f34 <HAL_GetTick>
 800523c:	6278      	str	r0, [r7, #36]	; 0x24

  if (hi2c->State == HAL_I2C_STATE_READY)
 800523e:	68fb      	ldr	r3, [r7, #12]
 8005240:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005244:	b2db      	uxtb	r3, r3
 8005246:	2b20      	cmp	r3, #32
 8005248:	f040 8217 	bne.w	800567a <HAL_I2C_Master_Receive+0x456>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800524c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800524e:	9300      	str	r3, [sp, #0]
 8005250:	2319      	movs	r3, #25
 8005252:	2201      	movs	r2, #1
 8005254:	497c      	ldr	r1, [pc, #496]	; (8005448 <HAL_I2C_Master_Receive+0x224>)
 8005256:	68f8      	ldr	r0, [r7, #12]
 8005258:	f001 f810 	bl	800627c <I2C_WaitOnFlagUntilTimeout>
 800525c:	4603      	mov	r3, r0
 800525e:	2b00      	cmp	r3, #0
 8005260:	d001      	beq.n	8005266 <HAL_I2C_Master_Receive+0x42>
    {
      return HAL_BUSY;
 8005262:	2302      	movs	r3, #2
 8005264:	e20a      	b.n	800567c <HAL_I2C_Master_Receive+0x458>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 8005266:	68fb      	ldr	r3, [r7, #12]
 8005268:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800526c:	2b01      	cmp	r3, #1
 800526e:	d101      	bne.n	8005274 <HAL_I2C_Master_Receive+0x50>
 8005270:	2302      	movs	r3, #2
 8005272:	e203      	b.n	800567c <HAL_I2C_Master_Receive+0x458>
 8005274:	68fb      	ldr	r3, [r7, #12]
 8005276:	2201      	movs	r2, #1
 8005278:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800527c:	68fb      	ldr	r3, [r7, #12]
 800527e:	681b      	ldr	r3, [r3, #0]
 8005280:	681b      	ldr	r3, [r3, #0]
 8005282:	f003 0301 	and.w	r3, r3, #1
 8005286:	2b01      	cmp	r3, #1
 8005288:	d007      	beq.n	800529a <HAL_I2C_Master_Receive+0x76>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 800528a:	68fb      	ldr	r3, [r7, #12]
 800528c:	681b      	ldr	r3, [r3, #0]
 800528e:	681a      	ldr	r2, [r3, #0]
 8005290:	68fb      	ldr	r3, [r7, #12]
 8005292:	681b      	ldr	r3, [r3, #0]
 8005294:	f042 0201 	orr.w	r2, r2, #1
 8005298:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800529a:	68fb      	ldr	r3, [r7, #12]
 800529c:	681b      	ldr	r3, [r3, #0]
 800529e:	681a      	ldr	r2, [r3, #0]
 80052a0:	68fb      	ldr	r3, [r7, #12]
 80052a2:	681b      	ldr	r3, [r3, #0]
 80052a4:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80052a8:	601a      	str	r2, [r3, #0]

    hi2c->State       = HAL_I2C_STATE_BUSY_RX;
 80052aa:	68fb      	ldr	r3, [r7, #12]
 80052ac:	2222      	movs	r2, #34	; 0x22
 80052ae:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode        = HAL_I2C_MODE_MASTER;
 80052b2:	68fb      	ldr	r3, [r7, #12]
 80052b4:	2210      	movs	r2, #16
 80052b6:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
    hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 80052ba:	68fb      	ldr	r3, [r7, #12]
 80052bc:	2200      	movs	r2, #0
 80052be:	641a      	str	r2, [r3, #64]	; 0x40

    /* Prepare transfer parameters */
    hi2c->pBuffPtr    = pData;
 80052c0:	68fb      	ldr	r3, [r7, #12]
 80052c2:	687a      	ldr	r2, [r7, #4]
 80052c4:	625a      	str	r2, [r3, #36]	; 0x24
    hi2c->XferCount   = Size;
 80052c6:	68fb      	ldr	r3, [r7, #12]
 80052c8:	893a      	ldrh	r2, [r7, #8]
 80052ca:	855a      	strh	r2, [r3, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80052cc:	68fb      	ldr	r3, [r7, #12]
 80052ce:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80052d0:	b29a      	uxth	r2, r3
 80052d2:	68fb      	ldr	r3, [r7, #12]
 80052d4:	851a      	strh	r2, [r3, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80052d6:	68fb      	ldr	r3, [r7, #12]
 80052d8:	4a5c      	ldr	r2, [pc, #368]	; (800544c <HAL_I2C_Master_Receive+0x228>)
 80052da:	62da      	str	r2, [r3, #44]	; 0x2c

    /* Send Slave Address */
    if (I2C_MasterRequestRead(hi2c, DevAddress, Timeout, tickstart) != HAL_OK)
 80052dc:	8979      	ldrh	r1, [r7, #10]
 80052de:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80052e0:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80052e2:	68f8      	ldr	r0, [r7, #12]
 80052e4:	f000 fd7e 	bl	8005de4 <I2C_MasterRequestRead>
 80052e8:	4603      	mov	r3, r0
 80052ea:	2b00      	cmp	r3, #0
 80052ec:	d001      	beq.n	80052f2 <HAL_I2C_Master_Receive+0xce>
    {
      return HAL_ERROR;
 80052ee:	2301      	movs	r3, #1
 80052f0:	e1c4      	b.n	800567c <HAL_I2C_Master_Receive+0x458>
    }

    if (hi2c->XferSize == 0U)
 80052f2:	68fb      	ldr	r3, [r7, #12]
 80052f4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80052f6:	2b00      	cmp	r3, #0
 80052f8:	d113      	bne.n	8005322 <HAL_I2C_Master_Receive+0xfe>
    {
      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80052fa:	2300      	movs	r3, #0
 80052fc:	623b      	str	r3, [r7, #32]
 80052fe:	68fb      	ldr	r3, [r7, #12]
 8005300:	681b      	ldr	r3, [r3, #0]
 8005302:	695b      	ldr	r3, [r3, #20]
 8005304:	623b      	str	r3, [r7, #32]
 8005306:	68fb      	ldr	r3, [r7, #12]
 8005308:	681b      	ldr	r3, [r3, #0]
 800530a:	699b      	ldr	r3, [r3, #24]
 800530c:	623b      	str	r3, [r7, #32]
 800530e:	6a3b      	ldr	r3, [r7, #32]

      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005310:	68fb      	ldr	r3, [r7, #12]
 8005312:	681b      	ldr	r3, [r3, #0]
 8005314:	681a      	ldr	r2, [r3, #0]
 8005316:	68fb      	ldr	r3, [r7, #12]
 8005318:	681b      	ldr	r3, [r3, #0]
 800531a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800531e:	601a      	str	r2, [r3, #0]
 8005320:	e198      	b.n	8005654 <HAL_I2C_Master_Receive+0x430>
    }
    else if (hi2c->XferSize == 1U)
 8005322:	68fb      	ldr	r3, [r7, #12]
 8005324:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005326:	2b01      	cmp	r3, #1
 8005328:	d11b      	bne.n	8005362 <HAL_I2C_Master_Receive+0x13e>
    {
      /* Disable Acknowledge */
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800532a:	68fb      	ldr	r3, [r7, #12]
 800532c:	681b      	ldr	r3, [r3, #0]
 800532e:	681a      	ldr	r2, [r3, #0]
 8005330:	68fb      	ldr	r3, [r7, #12]
 8005332:	681b      	ldr	r3, [r3, #0]
 8005334:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005338:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800533a:	2300      	movs	r3, #0
 800533c:	61fb      	str	r3, [r7, #28]
 800533e:	68fb      	ldr	r3, [r7, #12]
 8005340:	681b      	ldr	r3, [r3, #0]
 8005342:	695b      	ldr	r3, [r3, #20]
 8005344:	61fb      	str	r3, [r7, #28]
 8005346:	68fb      	ldr	r3, [r7, #12]
 8005348:	681b      	ldr	r3, [r3, #0]
 800534a:	699b      	ldr	r3, [r3, #24]
 800534c:	61fb      	str	r3, [r7, #28]
 800534e:	69fb      	ldr	r3, [r7, #28]

      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005350:	68fb      	ldr	r3, [r7, #12]
 8005352:	681b      	ldr	r3, [r3, #0]
 8005354:	681a      	ldr	r2, [r3, #0]
 8005356:	68fb      	ldr	r3, [r7, #12]
 8005358:	681b      	ldr	r3, [r3, #0]
 800535a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800535e:	601a      	str	r2, [r3, #0]
 8005360:	e178      	b.n	8005654 <HAL_I2C_Master_Receive+0x430>
    }
    else if (hi2c->XferSize == 2U)
 8005362:	68fb      	ldr	r3, [r7, #12]
 8005364:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005366:	2b02      	cmp	r3, #2
 8005368:	d11b      	bne.n	80053a2 <HAL_I2C_Master_Receive+0x17e>
    {
      /* Disable Acknowledge */
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800536a:	68fb      	ldr	r3, [r7, #12]
 800536c:	681b      	ldr	r3, [r3, #0]
 800536e:	681a      	ldr	r2, [r3, #0]
 8005370:	68fb      	ldr	r3, [r7, #12]
 8005372:	681b      	ldr	r3, [r3, #0]
 8005374:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005378:	601a      	str	r2, [r3, #0]

      /* Enable Pos */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800537a:	68fb      	ldr	r3, [r7, #12]
 800537c:	681b      	ldr	r3, [r3, #0]
 800537e:	681a      	ldr	r2, [r3, #0]
 8005380:	68fb      	ldr	r3, [r7, #12]
 8005382:	681b      	ldr	r3, [r3, #0]
 8005384:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8005388:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800538a:	2300      	movs	r3, #0
 800538c:	61bb      	str	r3, [r7, #24]
 800538e:	68fb      	ldr	r3, [r7, #12]
 8005390:	681b      	ldr	r3, [r3, #0]
 8005392:	695b      	ldr	r3, [r3, #20]
 8005394:	61bb      	str	r3, [r7, #24]
 8005396:	68fb      	ldr	r3, [r7, #12]
 8005398:	681b      	ldr	r3, [r3, #0]
 800539a:	699b      	ldr	r3, [r3, #24]
 800539c:	61bb      	str	r3, [r7, #24]
 800539e:	69bb      	ldr	r3, [r7, #24]
 80053a0:	e158      	b.n	8005654 <HAL_I2C_Master_Receive+0x430>
    }
    else
    {
      /* Enable Acknowledge */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80053a2:	68fb      	ldr	r3, [r7, #12]
 80053a4:	681b      	ldr	r3, [r3, #0]
 80053a6:	681a      	ldr	r2, [r3, #0]
 80053a8:	68fb      	ldr	r3, [r7, #12]
 80053aa:	681b      	ldr	r3, [r3, #0]
 80053ac:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80053b0:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80053b2:	2300      	movs	r3, #0
 80053b4:	617b      	str	r3, [r7, #20]
 80053b6:	68fb      	ldr	r3, [r7, #12]
 80053b8:	681b      	ldr	r3, [r3, #0]
 80053ba:	695b      	ldr	r3, [r3, #20]
 80053bc:	617b      	str	r3, [r7, #20]
 80053be:	68fb      	ldr	r3, [r7, #12]
 80053c0:	681b      	ldr	r3, [r3, #0]
 80053c2:	699b      	ldr	r3, [r3, #24]
 80053c4:	617b      	str	r3, [r7, #20]
 80053c6:	697b      	ldr	r3, [r7, #20]
    }

    while (hi2c->XferSize > 0U)
 80053c8:	e144      	b.n	8005654 <HAL_I2C_Master_Receive+0x430>
    {
      if (hi2c->XferSize <= 3U)
 80053ca:	68fb      	ldr	r3, [r7, #12]
 80053cc:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80053ce:	2b03      	cmp	r3, #3
 80053d0:	f200 80f1 	bhi.w	80055b6 <HAL_I2C_Master_Receive+0x392>
      {
        /* One byte */
        if (hi2c->XferSize == 1U)
 80053d4:	68fb      	ldr	r3, [r7, #12]
 80053d6:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80053d8:	2b01      	cmp	r3, #1
 80053da:	d123      	bne.n	8005424 <HAL_I2C_Master_Receive+0x200>
        {
          /* Wait until RXNE flag is set */
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80053dc:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80053de:	6b39      	ldr	r1, [r7, #48]	; 0x30
 80053e0:	68f8      	ldr	r0, [r7, #12]
 80053e2:	f001 f8f5 	bl	80065d0 <I2C_WaitOnRXNEFlagUntilTimeout>
 80053e6:	4603      	mov	r3, r0
 80053e8:	2b00      	cmp	r3, #0
 80053ea:	d001      	beq.n	80053f0 <HAL_I2C_Master_Receive+0x1cc>
          {
            return HAL_ERROR;
 80053ec:	2301      	movs	r3, #1
 80053ee:	e145      	b.n	800567c <HAL_I2C_Master_Receive+0x458>
          }

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80053f0:	68fb      	ldr	r3, [r7, #12]
 80053f2:	681b      	ldr	r3, [r3, #0]
 80053f4:	691a      	ldr	r2, [r3, #16]
 80053f6:	68fb      	ldr	r3, [r7, #12]
 80053f8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80053fa:	b2d2      	uxtb	r2, r2
 80053fc:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 80053fe:	68fb      	ldr	r3, [r7, #12]
 8005400:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005402:	1c5a      	adds	r2, r3, #1
 8005404:	68fb      	ldr	r3, [r7, #12]
 8005406:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8005408:	68fb      	ldr	r3, [r7, #12]
 800540a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800540c:	3b01      	subs	r3, #1
 800540e:	b29a      	uxth	r2, r3
 8005410:	68fb      	ldr	r3, [r7, #12]
 8005412:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8005414:	68fb      	ldr	r3, [r7, #12]
 8005416:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005418:	b29b      	uxth	r3, r3
 800541a:	3b01      	subs	r3, #1
 800541c:	b29a      	uxth	r2, r3
 800541e:	68fb      	ldr	r3, [r7, #12]
 8005420:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005422:	e117      	b.n	8005654 <HAL_I2C_Master_Receive+0x430>
        }
        /* Two bytes */
        else if (hi2c->XferSize == 2U)
 8005424:	68fb      	ldr	r3, [r7, #12]
 8005426:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005428:	2b02      	cmp	r3, #2
 800542a:	d14e      	bne.n	80054ca <HAL_I2C_Master_Receive+0x2a6>
        {
          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800542c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800542e:	9300      	str	r3, [sp, #0]
 8005430:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005432:	2200      	movs	r2, #0
 8005434:	4906      	ldr	r1, [pc, #24]	; (8005450 <HAL_I2C_Master_Receive+0x22c>)
 8005436:	68f8      	ldr	r0, [r7, #12]
 8005438:	f000 ff20 	bl	800627c <I2C_WaitOnFlagUntilTimeout>
 800543c:	4603      	mov	r3, r0
 800543e:	2b00      	cmp	r3, #0
 8005440:	d008      	beq.n	8005454 <HAL_I2C_Master_Receive+0x230>
          {
            return HAL_ERROR;
 8005442:	2301      	movs	r3, #1
 8005444:	e11a      	b.n	800567c <HAL_I2C_Master_Receive+0x458>
 8005446:	bf00      	nop
 8005448:	00100002 	.word	0x00100002
 800544c:	ffff0000 	.word	0xffff0000
 8005450:	00010004 	.word	0x00010004
          }

          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005454:	68fb      	ldr	r3, [r7, #12]
 8005456:	681b      	ldr	r3, [r3, #0]
 8005458:	681a      	ldr	r2, [r3, #0]
 800545a:	68fb      	ldr	r3, [r7, #12]
 800545c:	681b      	ldr	r3, [r3, #0]
 800545e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005462:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005464:	68fb      	ldr	r3, [r7, #12]
 8005466:	681b      	ldr	r3, [r3, #0]
 8005468:	691a      	ldr	r2, [r3, #16]
 800546a:	68fb      	ldr	r3, [r7, #12]
 800546c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800546e:	b2d2      	uxtb	r2, r2
 8005470:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8005472:	68fb      	ldr	r3, [r7, #12]
 8005474:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005476:	1c5a      	adds	r2, r3, #1
 8005478:	68fb      	ldr	r3, [r7, #12]
 800547a:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 800547c:	68fb      	ldr	r3, [r7, #12]
 800547e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005480:	3b01      	subs	r3, #1
 8005482:	b29a      	uxth	r2, r3
 8005484:	68fb      	ldr	r3, [r7, #12]
 8005486:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8005488:	68fb      	ldr	r3, [r7, #12]
 800548a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800548c:	b29b      	uxth	r3, r3
 800548e:	3b01      	subs	r3, #1
 8005490:	b29a      	uxth	r2, r3
 8005492:	68fb      	ldr	r3, [r7, #12]
 8005494:	855a      	strh	r2, [r3, #42]	; 0x2a

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005496:	68fb      	ldr	r3, [r7, #12]
 8005498:	681b      	ldr	r3, [r3, #0]
 800549a:	691a      	ldr	r2, [r3, #16]
 800549c:	68fb      	ldr	r3, [r7, #12]
 800549e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80054a0:	b2d2      	uxtb	r2, r2
 80054a2:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 80054a4:	68fb      	ldr	r3, [r7, #12]
 80054a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80054a8:	1c5a      	adds	r2, r3, #1
 80054aa:	68fb      	ldr	r3, [r7, #12]
 80054ac:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 80054ae:	68fb      	ldr	r3, [r7, #12]
 80054b0:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80054b2:	3b01      	subs	r3, #1
 80054b4:	b29a      	uxth	r2, r3
 80054b6:	68fb      	ldr	r3, [r7, #12]
 80054b8:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 80054ba:	68fb      	ldr	r3, [r7, #12]
 80054bc:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80054be:	b29b      	uxth	r3, r3
 80054c0:	3b01      	subs	r3, #1
 80054c2:	b29a      	uxth	r2, r3
 80054c4:	68fb      	ldr	r3, [r7, #12]
 80054c6:	855a      	strh	r2, [r3, #42]	; 0x2a
 80054c8:	e0c4      	b.n	8005654 <HAL_I2C_Master_Receive+0x430>
        }
        /* 3 Last bytes */
        else
        {
          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80054ca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80054cc:	9300      	str	r3, [sp, #0]
 80054ce:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80054d0:	2200      	movs	r2, #0
 80054d2:	496c      	ldr	r1, [pc, #432]	; (8005684 <HAL_I2C_Master_Receive+0x460>)
 80054d4:	68f8      	ldr	r0, [r7, #12]
 80054d6:	f000 fed1 	bl	800627c <I2C_WaitOnFlagUntilTimeout>
 80054da:	4603      	mov	r3, r0
 80054dc:	2b00      	cmp	r3, #0
 80054de:	d001      	beq.n	80054e4 <HAL_I2C_Master_Receive+0x2c0>
          {
            return HAL_ERROR;
 80054e0:	2301      	movs	r3, #1
 80054e2:	e0cb      	b.n	800567c <HAL_I2C_Master_Receive+0x458>
          }

          /* Disable Acknowledge */
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80054e4:	68fb      	ldr	r3, [r7, #12]
 80054e6:	681b      	ldr	r3, [r3, #0]
 80054e8:	681a      	ldr	r2, [r3, #0]
 80054ea:	68fb      	ldr	r3, [r7, #12]
 80054ec:	681b      	ldr	r3, [r3, #0]
 80054ee:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80054f2:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80054f4:	68fb      	ldr	r3, [r7, #12]
 80054f6:	681b      	ldr	r3, [r3, #0]
 80054f8:	691a      	ldr	r2, [r3, #16]
 80054fa:	68fb      	ldr	r3, [r7, #12]
 80054fc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80054fe:	b2d2      	uxtb	r2, r2
 8005500:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8005502:	68fb      	ldr	r3, [r7, #12]
 8005504:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005506:	1c5a      	adds	r2, r3, #1
 8005508:	68fb      	ldr	r3, [r7, #12]
 800550a:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 800550c:	68fb      	ldr	r3, [r7, #12]
 800550e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005510:	3b01      	subs	r3, #1
 8005512:	b29a      	uxth	r2, r3
 8005514:	68fb      	ldr	r3, [r7, #12]
 8005516:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8005518:	68fb      	ldr	r3, [r7, #12]
 800551a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800551c:	b29b      	uxth	r3, r3
 800551e:	3b01      	subs	r3, #1
 8005520:	b29a      	uxth	r2, r3
 8005522:	68fb      	ldr	r3, [r7, #12]
 8005524:	855a      	strh	r2, [r3, #42]	; 0x2a

          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005526:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005528:	9300      	str	r3, [sp, #0]
 800552a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800552c:	2200      	movs	r2, #0
 800552e:	4955      	ldr	r1, [pc, #340]	; (8005684 <HAL_I2C_Master_Receive+0x460>)
 8005530:	68f8      	ldr	r0, [r7, #12]
 8005532:	f000 fea3 	bl	800627c <I2C_WaitOnFlagUntilTimeout>
 8005536:	4603      	mov	r3, r0
 8005538:	2b00      	cmp	r3, #0
 800553a:	d001      	beq.n	8005540 <HAL_I2C_Master_Receive+0x31c>
          {
            return HAL_ERROR;
 800553c:	2301      	movs	r3, #1
 800553e:	e09d      	b.n	800567c <HAL_I2C_Master_Receive+0x458>
          }

          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005540:	68fb      	ldr	r3, [r7, #12]
 8005542:	681b      	ldr	r3, [r3, #0]
 8005544:	681a      	ldr	r2, [r3, #0]
 8005546:	68fb      	ldr	r3, [r7, #12]
 8005548:	681b      	ldr	r3, [r3, #0]
 800554a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800554e:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005550:	68fb      	ldr	r3, [r7, #12]
 8005552:	681b      	ldr	r3, [r3, #0]
 8005554:	691a      	ldr	r2, [r3, #16]
 8005556:	68fb      	ldr	r3, [r7, #12]
 8005558:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800555a:	b2d2      	uxtb	r2, r2
 800555c:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 800555e:	68fb      	ldr	r3, [r7, #12]
 8005560:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005562:	1c5a      	adds	r2, r3, #1
 8005564:	68fb      	ldr	r3, [r7, #12]
 8005566:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8005568:	68fb      	ldr	r3, [r7, #12]
 800556a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800556c:	3b01      	subs	r3, #1
 800556e:	b29a      	uxth	r2, r3
 8005570:	68fb      	ldr	r3, [r7, #12]
 8005572:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8005574:	68fb      	ldr	r3, [r7, #12]
 8005576:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005578:	b29b      	uxth	r3, r3
 800557a:	3b01      	subs	r3, #1
 800557c:	b29a      	uxth	r2, r3
 800557e:	68fb      	ldr	r3, [r7, #12]
 8005580:	855a      	strh	r2, [r3, #42]	; 0x2a

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005582:	68fb      	ldr	r3, [r7, #12]
 8005584:	681b      	ldr	r3, [r3, #0]
 8005586:	691a      	ldr	r2, [r3, #16]
 8005588:	68fb      	ldr	r3, [r7, #12]
 800558a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800558c:	b2d2      	uxtb	r2, r2
 800558e:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8005590:	68fb      	ldr	r3, [r7, #12]
 8005592:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005594:	1c5a      	adds	r2, r3, #1
 8005596:	68fb      	ldr	r3, [r7, #12]
 8005598:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 800559a:	68fb      	ldr	r3, [r7, #12]
 800559c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800559e:	3b01      	subs	r3, #1
 80055a0:	b29a      	uxth	r2, r3
 80055a2:	68fb      	ldr	r3, [r7, #12]
 80055a4:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 80055a6:	68fb      	ldr	r3, [r7, #12]
 80055a8:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80055aa:	b29b      	uxth	r3, r3
 80055ac:	3b01      	subs	r3, #1
 80055ae:	b29a      	uxth	r2, r3
 80055b0:	68fb      	ldr	r3, [r7, #12]
 80055b2:	855a      	strh	r2, [r3, #42]	; 0x2a
 80055b4:	e04e      	b.n	8005654 <HAL_I2C_Master_Receive+0x430>
        }
      }
      else
      {
        /* Wait until RXNE flag is set */
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80055b6:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80055b8:	6b39      	ldr	r1, [r7, #48]	; 0x30
 80055ba:	68f8      	ldr	r0, [r7, #12]
 80055bc:	f001 f808 	bl	80065d0 <I2C_WaitOnRXNEFlagUntilTimeout>
 80055c0:	4603      	mov	r3, r0
 80055c2:	2b00      	cmp	r3, #0
 80055c4:	d001      	beq.n	80055ca <HAL_I2C_Master_Receive+0x3a6>
        {
          return HAL_ERROR;
 80055c6:	2301      	movs	r3, #1
 80055c8:	e058      	b.n	800567c <HAL_I2C_Master_Receive+0x458>
        }

        /* Read data from DR */
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80055ca:	68fb      	ldr	r3, [r7, #12]
 80055cc:	681b      	ldr	r3, [r3, #0]
 80055ce:	691a      	ldr	r2, [r3, #16]
 80055d0:	68fb      	ldr	r3, [r7, #12]
 80055d2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80055d4:	b2d2      	uxtb	r2, r2
 80055d6:	701a      	strb	r2, [r3, #0]

        /* Increment Buffer pointer */
        hi2c->pBuffPtr++;
 80055d8:	68fb      	ldr	r3, [r7, #12]
 80055da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80055dc:	1c5a      	adds	r2, r3, #1
 80055de:	68fb      	ldr	r3, [r7, #12]
 80055e0:	625a      	str	r2, [r3, #36]	; 0x24

        /* Update counter */
        hi2c->XferSize--;
 80055e2:	68fb      	ldr	r3, [r7, #12]
 80055e4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80055e6:	3b01      	subs	r3, #1
 80055e8:	b29a      	uxth	r2, r3
 80055ea:	68fb      	ldr	r3, [r7, #12]
 80055ec:	851a      	strh	r2, [r3, #40]	; 0x28
        hi2c->XferCount--;
 80055ee:	68fb      	ldr	r3, [r7, #12]
 80055f0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80055f2:	b29b      	uxth	r3, r3
 80055f4:	3b01      	subs	r3, #1
 80055f6:	b29a      	uxth	r2, r3
 80055f8:	68fb      	ldr	r3, [r7, #12]
 80055fa:	855a      	strh	r2, [r3, #42]	; 0x2a

        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80055fc:	68fb      	ldr	r3, [r7, #12]
 80055fe:	681b      	ldr	r3, [r3, #0]
 8005600:	695b      	ldr	r3, [r3, #20]
 8005602:	f003 0304 	and.w	r3, r3, #4
 8005606:	2b04      	cmp	r3, #4
 8005608:	d124      	bne.n	8005654 <HAL_I2C_Master_Receive+0x430>
        {

          if (hi2c->XferSize == 3U)
 800560a:	68fb      	ldr	r3, [r7, #12]
 800560c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800560e:	2b03      	cmp	r3, #3
 8005610:	d107      	bne.n	8005622 <HAL_I2C_Master_Receive+0x3fe>
          {
            /* Disable Acknowledge */
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005612:	68fb      	ldr	r3, [r7, #12]
 8005614:	681b      	ldr	r3, [r3, #0]
 8005616:	681a      	ldr	r2, [r3, #0]
 8005618:	68fb      	ldr	r3, [r7, #12]
 800561a:	681b      	ldr	r3, [r3, #0]
 800561c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005620:	601a      	str	r2, [r3, #0]
          }

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005622:	68fb      	ldr	r3, [r7, #12]
 8005624:	681b      	ldr	r3, [r3, #0]
 8005626:	691a      	ldr	r2, [r3, #16]
 8005628:	68fb      	ldr	r3, [r7, #12]
 800562a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800562c:	b2d2      	uxtb	r2, r2
 800562e:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8005630:	68fb      	ldr	r3, [r7, #12]
 8005632:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005634:	1c5a      	adds	r2, r3, #1
 8005636:	68fb      	ldr	r3, [r7, #12]
 8005638:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 800563a:	68fb      	ldr	r3, [r7, #12]
 800563c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800563e:	3b01      	subs	r3, #1
 8005640:	b29a      	uxth	r2, r3
 8005642:	68fb      	ldr	r3, [r7, #12]
 8005644:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8005646:	68fb      	ldr	r3, [r7, #12]
 8005648:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800564a:	b29b      	uxth	r3, r3
 800564c:	3b01      	subs	r3, #1
 800564e:	b29a      	uxth	r2, r3
 8005650:	68fb      	ldr	r3, [r7, #12]
 8005652:	855a      	strh	r2, [r3, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8005654:	68fb      	ldr	r3, [r7, #12]
 8005656:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005658:	2b00      	cmp	r3, #0
 800565a:	f47f aeb6 	bne.w	80053ca <HAL_I2C_Master_Receive+0x1a6>
        }
      }
    }

    hi2c->State = HAL_I2C_STATE_READY;
 800565e:	68fb      	ldr	r3, [r7, #12]
 8005660:	2220      	movs	r2, #32
 8005662:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8005666:	68fb      	ldr	r3, [r7, #12]
 8005668:	2200      	movs	r2, #0
 800566a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800566e:	68fb      	ldr	r3, [r7, #12]
 8005670:	2200      	movs	r2, #0
 8005672:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    return HAL_OK;
 8005676:	2300      	movs	r3, #0
 8005678:	e000      	b.n	800567c <HAL_I2C_Master_Receive+0x458>
  }
  else
  {
    return HAL_BUSY;
 800567a:	2302      	movs	r3, #2
  }
}
 800567c:	4618      	mov	r0, r3
 800567e:	3728      	adds	r7, #40	; 0x28
 8005680:	46bd      	mov	sp, r7
 8005682:	bd80      	pop	{r7, pc}
 8005684:	00010004 	.word	0x00010004

08005688 <HAL_I2C_Mem_Write>:
  * @param  Size Amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Mem_Write(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8005688:	b580      	push	{r7, lr}
 800568a:	b088      	sub	sp, #32
 800568c:	af02      	add	r7, sp, #8
 800568e:	60f8      	str	r0, [r7, #12]
 8005690:	4608      	mov	r0, r1
 8005692:	4611      	mov	r1, r2
 8005694:	461a      	mov	r2, r3
 8005696:	4603      	mov	r3, r0
 8005698:	817b      	strh	r3, [r7, #10]
 800569a:	460b      	mov	r3, r1
 800569c:	813b      	strh	r3, [r7, #8]
 800569e:	4613      	mov	r3, r2
 80056a0:	80fb      	strh	r3, [r7, #6]
  /* Init tickstart for timeout management*/
  uint32_t tickstart = HAL_GetTick();
 80056a2:	f7fe fc47 	bl	8003f34 <HAL_GetTick>
 80056a6:	6178      	str	r0, [r7, #20]

  /* Check the parameters */
  assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80056a8:	68fb      	ldr	r3, [r7, #12]
 80056aa:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80056ae:	b2db      	uxtb	r3, r3
 80056b0:	2b20      	cmp	r3, #32
 80056b2:	f040 80d9 	bne.w	8005868 <HAL_I2C_Mem_Write+0x1e0>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 80056b6:	697b      	ldr	r3, [r7, #20]
 80056b8:	9300      	str	r3, [sp, #0]
 80056ba:	2319      	movs	r3, #25
 80056bc:	2201      	movs	r2, #1
 80056be:	496d      	ldr	r1, [pc, #436]	; (8005874 <HAL_I2C_Mem_Write+0x1ec>)
 80056c0:	68f8      	ldr	r0, [r7, #12]
 80056c2:	f000 fddb 	bl	800627c <I2C_WaitOnFlagUntilTimeout>
 80056c6:	4603      	mov	r3, r0
 80056c8:	2b00      	cmp	r3, #0
 80056ca:	d001      	beq.n	80056d0 <HAL_I2C_Mem_Write+0x48>
    {
      return HAL_BUSY;
 80056cc:	2302      	movs	r3, #2
 80056ce:	e0cc      	b.n	800586a <HAL_I2C_Mem_Write+0x1e2>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 80056d0:	68fb      	ldr	r3, [r7, #12]
 80056d2:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80056d6:	2b01      	cmp	r3, #1
 80056d8:	d101      	bne.n	80056de <HAL_I2C_Mem_Write+0x56>
 80056da:	2302      	movs	r3, #2
 80056dc:	e0c5      	b.n	800586a <HAL_I2C_Mem_Write+0x1e2>
 80056de:	68fb      	ldr	r3, [r7, #12]
 80056e0:	2201      	movs	r2, #1
 80056e2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80056e6:	68fb      	ldr	r3, [r7, #12]
 80056e8:	681b      	ldr	r3, [r3, #0]
 80056ea:	681b      	ldr	r3, [r3, #0]
 80056ec:	f003 0301 	and.w	r3, r3, #1
 80056f0:	2b01      	cmp	r3, #1
 80056f2:	d007      	beq.n	8005704 <HAL_I2C_Mem_Write+0x7c>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 80056f4:	68fb      	ldr	r3, [r7, #12]
 80056f6:	681b      	ldr	r3, [r3, #0]
 80056f8:	681a      	ldr	r2, [r3, #0]
 80056fa:	68fb      	ldr	r3, [r7, #12]
 80056fc:	681b      	ldr	r3, [r3, #0]
 80056fe:	f042 0201 	orr.w	r2, r2, #1
 8005702:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8005704:	68fb      	ldr	r3, [r7, #12]
 8005706:	681b      	ldr	r3, [r3, #0]
 8005708:	681a      	ldr	r2, [r3, #0]
 800570a:	68fb      	ldr	r3, [r7, #12]
 800570c:	681b      	ldr	r3, [r3, #0]
 800570e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005712:	601a      	str	r2, [r3, #0]

    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8005714:	68fb      	ldr	r3, [r7, #12]
 8005716:	2221      	movs	r2, #33	; 0x21
 8005718:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800571c:	68fb      	ldr	r3, [r7, #12]
 800571e:	2240      	movs	r2, #64	; 0x40
 8005720:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005724:	68fb      	ldr	r3, [r7, #12]
 8005726:	2200      	movs	r2, #0
 8005728:	641a      	str	r2, [r3, #64]	; 0x40

    /* Prepare transfer parameters */
    hi2c->pBuffPtr    = pData;
 800572a:	68fb      	ldr	r3, [r7, #12]
 800572c:	6a3a      	ldr	r2, [r7, #32]
 800572e:	625a      	str	r2, [r3, #36]	; 0x24
    hi2c->XferCount   = Size;
 8005730:	68fb      	ldr	r3, [r7, #12]
 8005732:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 8005734:	855a      	strh	r2, [r3, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8005736:	68fb      	ldr	r3, [r7, #12]
 8005738:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800573a:	b29a      	uxth	r2, r3
 800573c:	68fb      	ldr	r3, [r7, #12]
 800573e:	851a      	strh	r2, [r3, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8005740:	68fb      	ldr	r3, [r7, #12]
 8005742:	4a4d      	ldr	r2, [pc, #308]	; (8005878 <HAL_I2C_Mem_Write+0x1f0>)
 8005744:	62da      	str	r2, [r3, #44]	; 0x2c

    /* Send Slave Address and Memory Address */
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8005746:	88f8      	ldrh	r0, [r7, #6]
 8005748:	893a      	ldrh	r2, [r7, #8]
 800574a:	8979      	ldrh	r1, [r7, #10]
 800574c:	697b      	ldr	r3, [r7, #20]
 800574e:	9301      	str	r3, [sp, #4]
 8005750:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005752:	9300      	str	r3, [sp, #0]
 8005754:	4603      	mov	r3, r0
 8005756:	68f8      	ldr	r0, [r7, #12]
 8005758:	f000 fc12 	bl	8005f80 <I2C_RequestMemoryWrite>
 800575c:	4603      	mov	r3, r0
 800575e:	2b00      	cmp	r3, #0
 8005760:	d052      	beq.n	8005808 <HAL_I2C_Mem_Write+0x180>
    {
      return HAL_ERROR;
 8005762:	2301      	movs	r3, #1
 8005764:	e081      	b.n	800586a <HAL_I2C_Mem_Write+0x1e2>
    }

    while (hi2c->XferSize > 0U)
    {
      /* Wait until TXE flag is set */
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005766:	697a      	ldr	r2, [r7, #20]
 8005768:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800576a:	68f8      	ldr	r0, [r7, #12]
 800576c:	f000 fea0 	bl	80064b0 <I2C_WaitOnTXEFlagUntilTimeout>
 8005770:	4603      	mov	r3, r0
 8005772:	2b00      	cmp	r3, #0
 8005774:	d00d      	beq.n	8005792 <HAL_I2C_Mem_Write+0x10a>
      {
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8005776:	68fb      	ldr	r3, [r7, #12]
 8005778:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800577a:	2b04      	cmp	r3, #4
 800577c:	d107      	bne.n	800578e <HAL_I2C_Mem_Write+0x106>
        {
          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800577e:	68fb      	ldr	r3, [r7, #12]
 8005780:	681b      	ldr	r3, [r3, #0]
 8005782:	681a      	ldr	r2, [r3, #0]
 8005784:	68fb      	ldr	r3, [r7, #12]
 8005786:	681b      	ldr	r3, [r3, #0]
 8005788:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800578c:	601a      	str	r2, [r3, #0]
        }
        return HAL_ERROR;
 800578e:	2301      	movs	r3, #1
 8005790:	e06b      	b.n	800586a <HAL_I2C_Mem_Write+0x1e2>
      }

      /* Write data to DR */
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8005792:	68fb      	ldr	r3, [r7, #12]
 8005794:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005796:	781a      	ldrb	r2, [r3, #0]
 8005798:	68fb      	ldr	r3, [r7, #12]
 800579a:	681b      	ldr	r3, [r3, #0]
 800579c:	611a      	str	r2, [r3, #16]

      /* Increment Buffer pointer */
      hi2c->pBuffPtr++;
 800579e:	68fb      	ldr	r3, [r7, #12]
 80057a0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80057a2:	1c5a      	adds	r2, r3, #1
 80057a4:	68fb      	ldr	r3, [r7, #12]
 80057a6:	625a      	str	r2, [r3, #36]	; 0x24

      /* Update counter */
      hi2c->XferSize--;
 80057a8:	68fb      	ldr	r3, [r7, #12]
 80057aa:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80057ac:	3b01      	subs	r3, #1
 80057ae:	b29a      	uxth	r2, r3
 80057b0:	68fb      	ldr	r3, [r7, #12]
 80057b2:	851a      	strh	r2, [r3, #40]	; 0x28
      hi2c->XferCount--;
 80057b4:	68fb      	ldr	r3, [r7, #12]
 80057b6:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80057b8:	b29b      	uxth	r3, r3
 80057ba:	3b01      	subs	r3, #1
 80057bc:	b29a      	uxth	r2, r3
 80057be:	68fb      	ldr	r3, [r7, #12]
 80057c0:	855a      	strh	r2, [r3, #42]	; 0x2a

      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80057c2:	68fb      	ldr	r3, [r7, #12]
 80057c4:	681b      	ldr	r3, [r3, #0]
 80057c6:	695b      	ldr	r3, [r3, #20]
 80057c8:	f003 0304 	and.w	r3, r3, #4
 80057cc:	2b04      	cmp	r3, #4
 80057ce:	d11b      	bne.n	8005808 <HAL_I2C_Mem_Write+0x180>
 80057d0:	68fb      	ldr	r3, [r7, #12]
 80057d2:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80057d4:	2b00      	cmp	r3, #0
 80057d6:	d017      	beq.n	8005808 <HAL_I2C_Mem_Write+0x180>
      {
        /* Write data to DR */
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 80057d8:	68fb      	ldr	r3, [r7, #12]
 80057da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80057dc:	781a      	ldrb	r2, [r3, #0]
 80057de:	68fb      	ldr	r3, [r7, #12]
 80057e0:	681b      	ldr	r3, [r3, #0]
 80057e2:	611a      	str	r2, [r3, #16]

        /* Increment Buffer pointer */
        hi2c->pBuffPtr++;
 80057e4:	68fb      	ldr	r3, [r7, #12]
 80057e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80057e8:	1c5a      	adds	r2, r3, #1
 80057ea:	68fb      	ldr	r3, [r7, #12]
 80057ec:	625a      	str	r2, [r3, #36]	; 0x24

        /* Update counter */
        hi2c->XferSize--;
 80057ee:	68fb      	ldr	r3, [r7, #12]
 80057f0:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80057f2:	3b01      	subs	r3, #1
 80057f4:	b29a      	uxth	r2, r3
 80057f6:	68fb      	ldr	r3, [r7, #12]
 80057f8:	851a      	strh	r2, [r3, #40]	; 0x28
        hi2c->XferCount--;
 80057fa:	68fb      	ldr	r3, [r7, #12]
 80057fc:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80057fe:	b29b      	uxth	r3, r3
 8005800:	3b01      	subs	r3, #1
 8005802:	b29a      	uxth	r2, r3
 8005804:	68fb      	ldr	r3, [r7, #12]
 8005806:	855a      	strh	r2, [r3, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8005808:	68fb      	ldr	r3, [r7, #12]
 800580a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800580c:	2b00      	cmp	r3, #0
 800580e:	d1aa      	bne.n	8005766 <HAL_I2C_Mem_Write+0xde>
      }
    }

    /* Wait until BTF flag is set */
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005810:	697a      	ldr	r2, [r7, #20]
 8005812:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8005814:	68f8      	ldr	r0, [r7, #12]
 8005816:	f000 fe93 	bl	8006540 <I2C_WaitOnBTFFlagUntilTimeout>
 800581a:	4603      	mov	r3, r0
 800581c:	2b00      	cmp	r3, #0
 800581e:	d00d      	beq.n	800583c <HAL_I2C_Mem_Write+0x1b4>
    {
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8005820:	68fb      	ldr	r3, [r7, #12]
 8005822:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005824:	2b04      	cmp	r3, #4
 8005826:	d107      	bne.n	8005838 <HAL_I2C_Mem_Write+0x1b0>
      {
        /* Generate Stop */
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005828:	68fb      	ldr	r3, [r7, #12]
 800582a:	681b      	ldr	r3, [r3, #0]
 800582c:	681a      	ldr	r2, [r3, #0]
 800582e:	68fb      	ldr	r3, [r7, #12]
 8005830:	681b      	ldr	r3, [r3, #0]
 8005832:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005836:	601a      	str	r2, [r3, #0]
      }
      return HAL_ERROR;
 8005838:	2301      	movs	r3, #1
 800583a:	e016      	b.n	800586a <HAL_I2C_Mem_Write+0x1e2>
    }

    /* Generate Stop */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800583c:	68fb      	ldr	r3, [r7, #12]
 800583e:	681b      	ldr	r3, [r3, #0]
 8005840:	681a      	ldr	r2, [r3, #0]
 8005842:	68fb      	ldr	r3, [r7, #12]
 8005844:	681b      	ldr	r3, [r3, #0]
 8005846:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800584a:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 800584c:	68fb      	ldr	r3, [r7, #12]
 800584e:	2220      	movs	r2, #32
 8005850:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8005854:	68fb      	ldr	r3, [r7, #12]
 8005856:	2200      	movs	r2, #0
 8005858:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800585c:	68fb      	ldr	r3, [r7, #12]
 800585e:	2200      	movs	r2, #0
 8005860:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    return HAL_OK;
 8005864:	2300      	movs	r3, #0
 8005866:	e000      	b.n	800586a <HAL_I2C_Mem_Write+0x1e2>
  }
  else
  {
    return HAL_BUSY;
 8005868:	2302      	movs	r3, #2
  }
}
 800586a:	4618      	mov	r0, r3
 800586c:	3718      	adds	r7, #24
 800586e:	46bd      	mov	sp, r7
 8005870:	bd80      	pop	{r7, pc}
 8005872:	bf00      	nop
 8005874:	00100002 	.word	0x00100002
 8005878:	ffff0000 	.word	0xffff0000

0800587c <HAL_I2C_Mem_Read>:
  * @param  Size Amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Mem_Read(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 800587c:	b580      	push	{r7, lr}
 800587e:	b08c      	sub	sp, #48	; 0x30
 8005880:	af02      	add	r7, sp, #8
 8005882:	60f8      	str	r0, [r7, #12]
 8005884:	4608      	mov	r0, r1
 8005886:	4611      	mov	r1, r2
 8005888:	461a      	mov	r2, r3
 800588a:	4603      	mov	r3, r0
 800588c:	817b      	strh	r3, [r7, #10]
 800588e:	460b      	mov	r3, r1
 8005890:	813b      	strh	r3, [r7, #8]
 8005892:	4613      	mov	r3, r2
 8005894:	80fb      	strh	r3, [r7, #6]
  /* Init tickstart for timeout management*/
  uint32_t tickstart = HAL_GetTick();
 8005896:	f7fe fb4d 	bl	8003f34 <HAL_GetTick>
 800589a:	6278      	str	r0, [r7, #36]	; 0x24

  /* Check the parameters */
  assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800589c:	68fb      	ldr	r3, [r7, #12]
 800589e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80058a2:	b2db      	uxtb	r3, r3
 80058a4:	2b20      	cmp	r3, #32
 80058a6:	f040 8214 	bne.w	8005cd2 <HAL_I2C_Mem_Read+0x456>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 80058aa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80058ac:	9300      	str	r3, [sp, #0]
 80058ae:	2319      	movs	r3, #25
 80058b0:	2201      	movs	r2, #1
 80058b2:	497b      	ldr	r1, [pc, #492]	; (8005aa0 <HAL_I2C_Mem_Read+0x224>)
 80058b4:	68f8      	ldr	r0, [r7, #12]
 80058b6:	f000 fce1 	bl	800627c <I2C_WaitOnFlagUntilTimeout>
 80058ba:	4603      	mov	r3, r0
 80058bc:	2b00      	cmp	r3, #0
 80058be:	d001      	beq.n	80058c4 <HAL_I2C_Mem_Read+0x48>
    {
      return HAL_BUSY;
 80058c0:	2302      	movs	r3, #2
 80058c2:	e207      	b.n	8005cd4 <HAL_I2C_Mem_Read+0x458>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 80058c4:	68fb      	ldr	r3, [r7, #12]
 80058c6:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80058ca:	2b01      	cmp	r3, #1
 80058cc:	d101      	bne.n	80058d2 <HAL_I2C_Mem_Read+0x56>
 80058ce:	2302      	movs	r3, #2
 80058d0:	e200      	b.n	8005cd4 <HAL_I2C_Mem_Read+0x458>
 80058d2:	68fb      	ldr	r3, [r7, #12]
 80058d4:	2201      	movs	r2, #1
 80058d6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80058da:	68fb      	ldr	r3, [r7, #12]
 80058dc:	681b      	ldr	r3, [r3, #0]
 80058de:	681b      	ldr	r3, [r3, #0]
 80058e0:	f003 0301 	and.w	r3, r3, #1
 80058e4:	2b01      	cmp	r3, #1
 80058e6:	d007      	beq.n	80058f8 <HAL_I2C_Mem_Read+0x7c>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 80058e8:	68fb      	ldr	r3, [r7, #12]
 80058ea:	681b      	ldr	r3, [r3, #0]
 80058ec:	681a      	ldr	r2, [r3, #0]
 80058ee:	68fb      	ldr	r3, [r7, #12]
 80058f0:	681b      	ldr	r3, [r3, #0]
 80058f2:	f042 0201 	orr.w	r2, r2, #1
 80058f6:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80058f8:	68fb      	ldr	r3, [r7, #12]
 80058fa:	681b      	ldr	r3, [r3, #0]
 80058fc:	681a      	ldr	r2, [r3, #0]
 80058fe:	68fb      	ldr	r3, [r7, #12]
 8005900:	681b      	ldr	r3, [r3, #0]
 8005902:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005906:	601a      	str	r2, [r3, #0]

    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8005908:	68fb      	ldr	r3, [r7, #12]
 800590a:	2222      	movs	r2, #34	; 0x22
 800590c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8005910:	68fb      	ldr	r3, [r7, #12]
 8005912:	2240      	movs	r2, #64	; 0x40
 8005914:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005918:	68fb      	ldr	r3, [r7, #12]
 800591a:	2200      	movs	r2, #0
 800591c:	641a      	str	r2, [r3, #64]	; 0x40

    /* Prepare transfer parameters */
    hi2c->pBuffPtr    = pData;
 800591e:	68fb      	ldr	r3, [r7, #12]
 8005920:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8005922:	625a      	str	r2, [r3, #36]	; 0x24
    hi2c->XferCount   = Size;
 8005924:	68fb      	ldr	r3, [r7, #12]
 8005926:	8eba      	ldrh	r2, [r7, #52]	; 0x34
 8005928:	855a      	strh	r2, [r3, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800592a:	68fb      	ldr	r3, [r7, #12]
 800592c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800592e:	b29a      	uxth	r2, r3
 8005930:	68fb      	ldr	r3, [r7, #12]
 8005932:	851a      	strh	r2, [r3, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8005934:	68fb      	ldr	r3, [r7, #12]
 8005936:	4a5b      	ldr	r2, [pc, #364]	; (8005aa4 <HAL_I2C_Mem_Read+0x228>)
 8005938:	62da      	str	r2, [r3, #44]	; 0x2c

    /* Send Slave Address and Memory Address */
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800593a:	88f8      	ldrh	r0, [r7, #6]
 800593c:	893a      	ldrh	r2, [r7, #8]
 800593e:	8979      	ldrh	r1, [r7, #10]
 8005940:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005942:	9301      	str	r3, [sp, #4]
 8005944:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8005946:	9300      	str	r3, [sp, #0]
 8005948:	4603      	mov	r3, r0
 800594a:	68f8      	ldr	r0, [r7, #12]
 800594c:	f000 fbae 	bl	80060ac <I2C_RequestMemoryRead>
 8005950:	4603      	mov	r3, r0
 8005952:	2b00      	cmp	r3, #0
 8005954:	d001      	beq.n	800595a <HAL_I2C_Mem_Read+0xde>
    {
      return HAL_ERROR;
 8005956:	2301      	movs	r3, #1
 8005958:	e1bc      	b.n	8005cd4 <HAL_I2C_Mem_Read+0x458>
    }

    if (hi2c->XferSize == 0U)
 800595a:	68fb      	ldr	r3, [r7, #12]
 800595c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800595e:	2b00      	cmp	r3, #0
 8005960:	d113      	bne.n	800598a <HAL_I2C_Mem_Read+0x10e>
    {
      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005962:	2300      	movs	r3, #0
 8005964:	623b      	str	r3, [r7, #32]
 8005966:	68fb      	ldr	r3, [r7, #12]
 8005968:	681b      	ldr	r3, [r3, #0]
 800596a:	695b      	ldr	r3, [r3, #20]
 800596c:	623b      	str	r3, [r7, #32]
 800596e:	68fb      	ldr	r3, [r7, #12]
 8005970:	681b      	ldr	r3, [r3, #0]
 8005972:	699b      	ldr	r3, [r3, #24]
 8005974:	623b      	str	r3, [r7, #32]
 8005976:	6a3b      	ldr	r3, [r7, #32]

      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005978:	68fb      	ldr	r3, [r7, #12]
 800597a:	681b      	ldr	r3, [r3, #0]
 800597c:	681a      	ldr	r2, [r3, #0]
 800597e:	68fb      	ldr	r3, [r7, #12]
 8005980:	681b      	ldr	r3, [r3, #0]
 8005982:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005986:	601a      	str	r2, [r3, #0]
 8005988:	e190      	b.n	8005cac <HAL_I2C_Mem_Read+0x430>
    }
    else if (hi2c->XferSize == 1U)
 800598a:	68fb      	ldr	r3, [r7, #12]
 800598c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800598e:	2b01      	cmp	r3, #1
 8005990:	d11b      	bne.n	80059ca <HAL_I2C_Mem_Read+0x14e>
    {
      /* Disable Acknowledge */
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005992:	68fb      	ldr	r3, [r7, #12]
 8005994:	681b      	ldr	r3, [r3, #0]
 8005996:	681a      	ldr	r2, [r3, #0]
 8005998:	68fb      	ldr	r3, [r7, #12]
 800599a:	681b      	ldr	r3, [r3, #0]
 800599c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80059a0:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80059a2:	2300      	movs	r3, #0
 80059a4:	61fb      	str	r3, [r7, #28]
 80059a6:	68fb      	ldr	r3, [r7, #12]
 80059a8:	681b      	ldr	r3, [r3, #0]
 80059aa:	695b      	ldr	r3, [r3, #20]
 80059ac:	61fb      	str	r3, [r7, #28]
 80059ae:	68fb      	ldr	r3, [r7, #12]
 80059b0:	681b      	ldr	r3, [r3, #0]
 80059b2:	699b      	ldr	r3, [r3, #24]
 80059b4:	61fb      	str	r3, [r7, #28]
 80059b6:	69fb      	ldr	r3, [r7, #28]

      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80059b8:	68fb      	ldr	r3, [r7, #12]
 80059ba:	681b      	ldr	r3, [r3, #0]
 80059bc:	681a      	ldr	r2, [r3, #0]
 80059be:	68fb      	ldr	r3, [r7, #12]
 80059c0:	681b      	ldr	r3, [r3, #0]
 80059c2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80059c6:	601a      	str	r2, [r3, #0]
 80059c8:	e170      	b.n	8005cac <HAL_I2C_Mem_Read+0x430>
    }
    else if (hi2c->XferSize == 2U)
 80059ca:	68fb      	ldr	r3, [r7, #12]
 80059cc:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80059ce:	2b02      	cmp	r3, #2
 80059d0:	d11b      	bne.n	8005a0a <HAL_I2C_Mem_Read+0x18e>
    {
      /* Disable Acknowledge */
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80059d2:	68fb      	ldr	r3, [r7, #12]
 80059d4:	681b      	ldr	r3, [r3, #0]
 80059d6:	681a      	ldr	r2, [r3, #0]
 80059d8:	68fb      	ldr	r3, [r7, #12]
 80059da:	681b      	ldr	r3, [r3, #0]
 80059dc:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80059e0:	601a      	str	r2, [r3, #0]

      /* Enable Pos */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80059e2:	68fb      	ldr	r3, [r7, #12]
 80059e4:	681b      	ldr	r3, [r3, #0]
 80059e6:	681a      	ldr	r2, [r3, #0]
 80059e8:	68fb      	ldr	r3, [r7, #12]
 80059ea:	681b      	ldr	r3, [r3, #0]
 80059ec:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80059f0:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80059f2:	2300      	movs	r3, #0
 80059f4:	61bb      	str	r3, [r7, #24]
 80059f6:	68fb      	ldr	r3, [r7, #12]
 80059f8:	681b      	ldr	r3, [r3, #0]
 80059fa:	695b      	ldr	r3, [r3, #20]
 80059fc:	61bb      	str	r3, [r7, #24]
 80059fe:	68fb      	ldr	r3, [r7, #12]
 8005a00:	681b      	ldr	r3, [r3, #0]
 8005a02:	699b      	ldr	r3, [r3, #24]
 8005a04:	61bb      	str	r3, [r7, #24]
 8005a06:	69bb      	ldr	r3, [r7, #24]
 8005a08:	e150      	b.n	8005cac <HAL_I2C_Mem_Read+0x430>
    }
    else
    {
      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005a0a:	2300      	movs	r3, #0
 8005a0c:	617b      	str	r3, [r7, #20]
 8005a0e:	68fb      	ldr	r3, [r7, #12]
 8005a10:	681b      	ldr	r3, [r3, #0]
 8005a12:	695b      	ldr	r3, [r3, #20]
 8005a14:	617b      	str	r3, [r7, #20]
 8005a16:	68fb      	ldr	r3, [r7, #12]
 8005a18:	681b      	ldr	r3, [r3, #0]
 8005a1a:	699b      	ldr	r3, [r3, #24]
 8005a1c:	617b      	str	r3, [r7, #20]
 8005a1e:	697b      	ldr	r3, [r7, #20]
    }

    while (hi2c->XferSize > 0U)
 8005a20:	e144      	b.n	8005cac <HAL_I2C_Mem_Read+0x430>
    {
      if (hi2c->XferSize <= 3U)
 8005a22:	68fb      	ldr	r3, [r7, #12]
 8005a24:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005a26:	2b03      	cmp	r3, #3
 8005a28:	f200 80f1 	bhi.w	8005c0e <HAL_I2C_Mem_Read+0x392>
      {
        /* One byte */
        if (hi2c->XferSize == 1U)
 8005a2c:	68fb      	ldr	r3, [r7, #12]
 8005a2e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005a30:	2b01      	cmp	r3, #1
 8005a32:	d123      	bne.n	8005a7c <HAL_I2C_Mem_Read+0x200>
        {
          /* Wait until RXNE flag is set */
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005a34:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8005a36:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 8005a38:	68f8      	ldr	r0, [r7, #12]
 8005a3a:	f000 fdc9 	bl	80065d0 <I2C_WaitOnRXNEFlagUntilTimeout>
 8005a3e:	4603      	mov	r3, r0
 8005a40:	2b00      	cmp	r3, #0
 8005a42:	d001      	beq.n	8005a48 <HAL_I2C_Mem_Read+0x1cc>
          {
            return HAL_ERROR;
 8005a44:	2301      	movs	r3, #1
 8005a46:	e145      	b.n	8005cd4 <HAL_I2C_Mem_Read+0x458>
          }

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005a48:	68fb      	ldr	r3, [r7, #12]
 8005a4a:	681b      	ldr	r3, [r3, #0]
 8005a4c:	691a      	ldr	r2, [r3, #16]
 8005a4e:	68fb      	ldr	r3, [r7, #12]
 8005a50:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005a52:	b2d2      	uxtb	r2, r2
 8005a54:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8005a56:	68fb      	ldr	r3, [r7, #12]
 8005a58:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005a5a:	1c5a      	adds	r2, r3, #1
 8005a5c:	68fb      	ldr	r3, [r7, #12]
 8005a5e:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8005a60:	68fb      	ldr	r3, [r7, #12]
 8005a62:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005a64:	3b01      	subs	r3, #1
 8005a66:	b29a      	uxth	r2, r3
 8005a68:	68fb      	ldr	r3, [r7, #12]
 8005a6a:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8005a6c:	68fb      	ldr	r3, [r7, #12]
 8005a6e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005a70:	b29b      	uxth	r3, r3
 8005a72:	3b01      	subs	r3, #1
 8005a74:	b29a      	uxth	r2, r3
 8005a76:	68fb      	ldr	r3, [r7, #12]
 8005a78:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005a7a:	e117      	b.n	8005cac <HAL_I2C_Mem_Read+0x430>
        }
        /* Two bytes */
        else if (hi2c->XferSize == 2U)
 8005a7c:	68fb      	ldr	r3, [r7, #12]
 8005a7e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005a80:	2b02      	cmp	r3, #2
 8005a82:	d14e      	bne.n	8005b22 <HAL_I2C_Mem_Read+0x2a6>
        {
          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005a84:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005a86:	9300      	str	r3, [sp, #0]
 8005a88:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8005a8a:	2200      	movs	r2, #0
 8005a8c:	4906      	ldr	r1, [pc, #24]	; (8005aa8 <HAL_I2C_Mem_Read+0x22c>)
 8005a8e:	68f8      	ldr	r0, [r7, #12]
 8005a90:	f000 fbf4 	bl	800627c <I2C_WaitOnFlagUntilTimeout>
 8005a94:	4603      	mov	r3, r0
 8005a96:	2b00      	cmp	r3, #0
 8005a98:	d008      	beq.n	8005aac <HAL_I2C_Mem_Read+0x230>
          {
            return HAL_ERROR;
 8005a9a:	2301      	movs	r3, #1
 8005a9c:	e11a      	b.n	8005cd4 <HAL_I2C_Mem_Read+0x458>
 8005a9e:	bf00      	nop
 8005aa0:	00100002 	.word	0x00100002
 8005aa4:	ffff0000 	.word	0xffff0000
 8005aa8:	00010004 	.word	0x00010004
          }

          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005aac:	68fb      	ldr	r3, [r7, #12]
 8005aae:	681b      	ldr	r3, [r3, #0]
 8005ab0:	681a      	ldr	r2, [r3, #0]
 8005ab2:	68fb      	ldr	r3, [r7, #12]
 8005ab4:	681b      	ldr	r3, [r3, #0]
 8005ab6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005aba:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005abc:	68fb      	ldr	r3, [r7, #12]
 8005abe:	681b      	ldr	r3, [r3, #0]
 8005ac0:	691a      	ldr	r2, [r3, #16]
 8005ac2:	68fb      	ldr	r3, [r7, #12]
 8005ac4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ac6:	b2d2      	uxtb	r2, r2
 8005ac8:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8005aca:	68fb      	ldr	r3, [r7, #12]
 8005acc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ace:	1c5a      	adds	r2, r3, #1
 8005ad0:	68fb      	ldr	r3, [r7, #12]
 8005ad2:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8005ad4:	68fb      	ldr	r3, [r7, #12]
 8005ad6:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005ad8:	3b01      	subs	r3, #1
 8005ada:	b29a      	uxth	r2, r3
 8005adc:	68fb      	ldr	r3, [r7, #12]
 8005ade:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8005ae0:	68fb      	ldr	r3, [r7, #12]
 8005ae2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005ae4:	b29b      	uxth	r3, r3
 8005ae6:	3b01      	subs	r3, #1
 8005ae8:	b29a      	uxth	r2, r3
 8005aea:	68fb      	ldr	r3, [r7, #12]
 8005aec:	855a      	strh	r2, [r3, #42]	; 0x2a

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005aee:	68fb      	ldr	r3, [r7, #12]
 8005af0:	681b      	ldr	r3, [r3, #0]
 8005af2:	691a      	ldr	r2, [r3, #16]
 8005af4:	68fb      	ldr	r3, [r7, #12]
 8005af6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005af8:	b2d2      	uxtb	r2, r2
 8005afa:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8005afc:	68fb      	ldr	r3, [r7, #12]
 8005afe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005b00:	1c5a      	adds	r2, r3, #1
 8005b02:	68fb      	ldr	r3, [r7, #12]
 8005b04:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8005b06:	68fb      	ldr	r3, [r7, #12]
 8005b08:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005b0a:	3b01      	subs	r3, #1
 8005b0c:	b29a      	uxth	r2, r3
 8005b0e:	68fb      	ldr	r3, [r7, #12]
 8005b10:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8005b12:	68fb      	ldr	r3, [r7, #12]
 8005b14:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005b16:	b29b      	uxth	r3, r3
 8005b18:	3b01      	subs	r3, #1
 8005b1a:	b29a      	uxth	r2, r3
 8005b1c:	68fb      	ldr	r3, [r7, #12]
 8005b1e:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005b20:	e0c4      	b.n	8005cac <HAL_I2C_Mem_Read+0x430>
        }
        /* 3 Last bytes */
        else
        {
          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005b22:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005b24:	9300      	str	r3, [sp, #0]
 8005b26:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8005b28:	2200      	movs	r2, #0
 8005b2a:	496c      	ldr	r1, [pc, #432]	; (8005cdc <HAL_I2C_Mem_Read+0x460>)
 8005b2c:	68f8      	ldr	r0, [r7, #12]
 8005b2e:	f000 fba5 	bl	800627c <I2C_WaitOnFlagUntilTimeout>
 8005b32:	4603      	mov	r3, r0
 8005b34:	2b00      	cmp	r3, #0
 8005b36:	d001      	beq.n	8005b3c <HAL_I2C_Mem_Read+0x2c0>
          {
            return HAL_ERROR;
 8005b38:	2301      	movs	r3, #1
 8005b3a:	e0cb      	b.n	8005cd4 <HAL_I2C_Mem_Read+0x458>
          }

          /* Disable Acknowledge */
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005b3c:	68fb      	ldr	r3, [r7, #12]
 8005b3e:	681b      	ldr	r3, [r3, #0]
 8005b40:	681a      	ldr	r2, [r3, #0]
 8005b42:	68fb      	ldr	r3, [r7, #12]
 8005b44:	681b      	ldr	r3, [r3, #0]
 8005b46:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005b4a:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005b4c:	68fb      	ldr	r3, [r7, #12]
 8005b4e:	681b      	ldr	r3, [r3, #0]
 8005b50:	691a      	ldr	r2, [r3, #16]
 8005b52:	68fb      	ldr	r3, [r7, #12]
 8005b54:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005b56:	b2d2      	uxtb	r2, r2
 8005b58:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8005b5a:	68fb      	ldr	r3, [r7, #12]
 8005b5c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005b5e:	1c5a      	adds	r2, r3, #1
 8005b60:	68fb      	ldr	r3, [r7, #12]
 8005b62:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8005b64:	68fb      	ldr	r3, [r7, #12]
 8005b66:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005b68:	3b01      	subs	r3, #1
 8005b6a:	b29a      	uxth	r2, r3
 8005b6c:	68fb      	ldr	r3, [r7, #12]
 8005b6e:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8005b70:	68fb      	ldr	r3, [r7, #12]
 8005b72:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005b74:	b29b      	uxth	r3, r3
 8005b76:	3b01      	subs	r3, #1
 8005b78:	b29a      	uxth	r2, r3
 8005b7a:	68fb      	ldr	r3, [r7, #12]
 8005b7c:	855a      	strh	r2, [r3, #42]	; 0x2a

          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005b7e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005b80:	9300      	str	r3, [sp, #0]
 8005b82:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8005b84:	2200      	movs	r2, #0
 8005b86:	4955      	ldr	r1, [pc, #340]	; (8005cdc <HAL_I2C_Mem_Read+0x460>)
 8005b88:	68f8      	ldr	r0, [r7, #12]
 8005b8a:	f000 fb77 	bl	800627c <I2C_WaitOnFlagUntilTimeout>
 8005b8e:	4603      	mov	r3, r0
 8005b90:	2b00      	cmp	r3, #0
 8005b92:	d001      	beq.n	8005b98 <HAL_I2C_Mem_Read+0x31c>
          {
            return HAL_ERROR;
 8005b94:	2301      	movs	r3, #1
 8005b96:	e09d      	b.n	8005cd4 <HAL_I2C_Mem_Read+0x458>
          }

          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005b98:	68fb      	ldr	r3, [r7, #12]
 8005b9a:	681b      	ldr	r3, [r3, #0]
 8005b9c:	681a      	ldr	r2, [r3, #0]
 8005b9e:	68fb      	ldr	r3, [r7, #12]
 8005ba0:	681b      	ldr	r3, [r3, #0]
 8005ba2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005ba6:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005ba8:	68fb      	ldr	r3, [r7, #12]
 8005baa:	681b      	ldr	r3, [r3, #0]
 8005bac:	691a      	ldr	r2, [r3, #16]
 8005bae:	68fb      	ldr	r3, [r7, #12]
 8005bb0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005bb2:	b2d2      	uxtb	r2, r2
 8005bb4:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8005bb6:	68fb      	ldr	r3, [r7, #12]
 8005bb8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005bba:	1c5a      	adds	r2, r3, #1
 8005bbc:	68fb      	ldr	r3, [r7, #12]
 8005bbe:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8005bc0:	68fb      	ldr	r3, [r7, #12]
 8005bc2:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005bc4:	3b01      	subs	r3, #1
 8005bc6:	b29a      	uxth	r2, r3
 8005bc8:	68fb      	ldr	r3, [r7, #12]
 8005bca:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8005bcc:	68fb      	ldr	r3, [r7, #12]
 8005bce:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005bd0:	b29b      	uxth	r3, r3
 8005bd2:	3b01      	subs	r3, #1
 8005bd4:	b29a      	uxth	r2, r3
 8005bd6:	68fb      	ldr	r3, [r7, #12]
 8005bd8:	855a      	strh	r2, [r3, #42]	; 0x2a

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005bda:	68fb      	ldr	r3, [r7, #12]
 8005bdc:	681b      	ldr	r3, [r3, #0]
 8005bde:	691a      	ldr	r2, [r3, #16]
 8005be0:	68fb      	ldr	r3, [r7, #12]
 8005be2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005be4:	b2d2      	uxtb	r2, r2
 8005be6:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8005be8:	68fb      	ldr	r3, [r7, #12]
 8005bea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005bec:	1c5a      	adds	r2, r3, #1
 8005bee:	68fb      	ldr	r3, [r7, #12]
 8005bf0:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8005bf2:	68fb      	ldr	r3, [r7, #12]
 8005bf4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005bf6:	3b01      	subs	r3, #1
 8005bf8:	b29a      	uxth	r2, r3
 8005bfa:	68fb      	ldr	r3, [r7, #12]
 8005bfc:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8005bfe:	68fb      	ldr	r3, [r7, #12]
 8005c00:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005c02:	b29b      	uxth	r3, r3
 8005c04:	3b01      	subs	r3, #1
 8005c06:	b29a      	uxth	r2, r3
 8005c08:	68fb      	ldr	r3, [r7, #12]
 8005c0a:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005c0c:	e04e      	b.n	8005cac <HAL_I2C_Mem_Read+0x430>
        }
      }
      else
      {
        /* Wait until RXNE flag is set */
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005c0e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8005c10:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 8005c12:	68f8      	ldr	r0, [r7, #12]
 8005c14:	f000 fcdc 	bl	80065d0 <I2C_WaitOnRXNEFlagUntilTimeout>
 8005c18:	4603      	mov	r3, r0
 8005c1a:	2b00      	cmp	r3, #0
 8005c1c:	d001      	beq.n	8005c22 <HAL_I2C_Mem_Read+0x3a6>
        {
          return HAL_ERROR;
 8005c1e:	2301      	movs	r3, #1
 8005c20:	e058      	b.n	8005cd4 <HAL_I2C_Mem_Read+0x458>
        }

        /* Read data from DR */
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005c22:	68fb      	ldr	r3, [r7, #12]
 8005c24:	681b      	ldr	r3, [r3, #0]
 8005c26:	691a      	ldr	r2, [r3, #16]
 8005c28:	68fb      	ldr	r3, [r7, #12]
 8005c2a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c2c:	b2d2      	uxtb	r2, r2
 8005c2e:	701a      	strb	r2, [r3, #0]

        /* Increment Buffer pointer */
        hi2c->pBuffPtr++;
 8005c30:	68fb      	ldr	r3, [r7, #12]
 8005c32:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c34:	1c5a      	adds	r2, r3, #1
 8005c36:	68fb      	ldr	r3, [r7, #12]
 8005c38:	625a      	str	r2, [r3, #36]	; 0x24

        /* Update counter */
        hi2c->XferSize--;
 8005c3a:	68fb      	ldr	r3, [r7, #12]
 8005c3c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005c3e:	3b01      	subs	r3, #1
 8005c40:	b29a      	uxth	r2, r3
 8005c42:	68fb      	ldr	r3, [r7, #12]
 8005c44:	851a      	strh	r2, [r3, #40]	; 0x28
        hi2c->XferCount--;
 8005c46:	68fb      	ldr	r3, [r7, #12]
 8005c48:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005c4a:	b29b      	uxth	r3, r3
 8005c4c:	3b01      	subs	r3, #1
 8005c4e:	b29a      	uxth	r2, r3
 8005c50:	68fb      	ldr	r3, [r7, #12]
 8005c52:	855a      	strh	r2, [r3, #42]	; 0x2a

        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8005c54:	68fb      	ldr	r3, [r7, #12]
 8005c56:	681b      	ldr	r3, [r3, #0]
 8005c58:	695b      	ldr	r3, [r3, #20]
 8005c5a:	f003 0304 	and.w	r3, r3, #4
 8005c5e:	2b04      	cmp	r3, #4
 8005c60:	d124      	bne.n	8005cac <HAL_I2C_Mem_Read+0x430>
        {
          if (hi2c->XferSize == 3U)
 8005c62:	68fb      	ldr	r3, [r7, #12]
 8005c64:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005c66:	2b03      	cmp	r3, #3
 8005c68:	d107      	bne.n	8005c7a <HAL_I2C_Mem_Read+0x3fe>
          {
            /* Disable Acknowledge */
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005c6a:	68fb      	ldr	r3, [r7, #12]
 8005c6c:	681b      	ldr	r3, [r3, #0]
 8005c6e:	681a      	ldr	r2, [r3, #0]
 8005c70:	68fb      	ldr	r3, [r7, #12]
 8005c72:	681b      	ldr	r3, [r3, #0]
 8005c74:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005c78:	601a      	str	r2, [r3, #0]
          }
          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005c7a:	68fb      	ldr	r3, [r7, #12]
 8005c7c:	681b      	ldr	r3, [r3, #0]
 8005c7e:	691a      	ldr	r2, [r3, #16]
 8005c80:	68fb      	ldr	r3, [r7, #12]
 8005c82:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c84:	b2d2      	uxtb	r2, r2
 8005c86:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8005c88:	68fb      	ldr	r3, [r7, #12]
 8005c8a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c8c:	1c5a      	adds	r2, r3, #1
 8005c8e:	68fb      	ldr	r3, [r7, #12]
 8005c90:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8005c92:	68fb      	ldr	r3, [r7, #12]
 8005c94:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005c96:	3b01      	subs	r3, #1
 8005c98:	b29a      	uxth	r2, r3
 8005c9a:	68fb      	ldr	r3, [r7, #12]
 8005c9c:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8005c9e:	68fb      	ldr	r3, [r7, #12]
 8005ca0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005ca2:	b29b      	uxth	r3, r3
 8005ca4:	3b01      	subs	r3, #1
 8005ca6:	b29a      	uxth	r2, r3
 8005ca8:	68fb      	ldr	r3, [r7, #12]
 8005caa:	855a      	strh	r2, [r3, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8005cac:	68fb      	ldr	r3, [r7, #12]
 8005cae:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005cb0:	2b00      	cmp	r3, #0
 8005cb2:	f47f aeb6 	bne.w	8005a22 <HAL_I2C_Mem_Read+0x1a6>
        }
      }
    }

    hi2c->State = HAL_I2C_STATE_READY;
 8005cb6:	68fb      	ldr	r3, [r7, #12]
 8005cb8:	2220      	movs	r2, #32
 8005cba:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8005cbe:	68fb      	ldr	r3, [r7, #12]
 8005cc0:	2200      	movs	r2, #0
 8005cc2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8005cc6:	68fb      	ldr	r3, [r7, #12]
 8005cc8:	2200      	movs	r2, #0
 8005cca:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    return HAL_OK;
 8005cce:	2300      	movs	r3, #0
 8005cd0:	e000      	b.n	8005cd4 <HAL_I2C_Mem_Read+0x458>
  }
  else
  {
    return HAL_BUSY;
 8005cd2:	2302      	movs	r3, #2
  }
}
 8005cd4:	4618      	mov	r0, r3
 8005cd6:	3728      	adds	r7, #40	; 0x28
 8005cd8:	46bd      	mov	sp, r7
 8005cda:	bd80      	pop	{r7, pc}
 8005cdc:	00010004 	.word	0x00010004

08005ce0 <I2C_MasterRequestWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_MasterRequestWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Timeout, uint32_t Tickstart)
{
 8005ce0:	b580      	push	{r7, lr}
 8005ce2:	b088      	sub	sp, #32
 8005ce4:	af02      	add	r7, sp, #8
 8005ce6:	60f8      	str	r0, [r7, #12]
 8005ce8:	607a      	str	r2, [r7, #4]
 8005cea:	603b      	str	r3, [r7, #0]
 8005cec:	460b      	mov	r3, r1
 8005cee:	817b      	strh	r3, [r7, #10]
  /* Declaration of temporary variable to prevent undefined behavior of volatile usage */
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 8005cf0:	68fb      	ldr	r3, [r7, #12]
 8005cf2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005cf4:	617b      	str	r3, [r7, #20]

  /* Generate Start condition if first transfer */
  if ((CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_NO_OPTION_FRAME))
 8005cf6:	697b      	ldr	r3, [r7, #20]
 8005cf8:	2b08      	cmp	r3, #8
 8005cfa:	d006      	beq.n	8005d0a <I2C_MasterRequestWrite+0x2a>
 8005cfc:	697b      	ldr	r3, [r7, #20]
 8005cfe:	2b01      	cmp	r3, #1
 8005d00:	d003      	beq.n	8005d0a <I2C_MasterRequestWrite+0x2a>
 8005d02:	697b      	ldr	r3, [r7, #20]
 8005d04:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8005d08:	d108      	bne.n	8005d1c <I2C_MasterRequestWrite+0x3c>
  {
    /* Generate Start */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005d0a:	68fb      	ldr	r3, [r7, #12]
 8005d0c:	681b      	ldr	r3, [r3, #0]
 8005d0e:	681a      	ldr	r2, [r3, #0]
 8005d10:	68fb      	ldr	r3, [r7, #12]
 8005d12:	681b      	ldr	r3, [r3, #0]
 8005d14:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005d18:	601a      	str	r2, [r3, #0]
 8005d1a:	e00b      	b.n	8005d34 <I2C_MasterRequestWrite+0x54>
  }
  else if (hi2c->PreviousState == I2C_STATE_MASTER_BUSY_RX)
 8005d1c:	68fb      	ldr	r3, [r7, #12]
 8005d1e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005d20:	2b12      	cmp	r3, #18
 8005d22:	d107      	bne.n	8005d34 <I2C_MasterRequestWrite+0x54>
  {
    /* Generate ReStart */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005d24:	68fb      	ldr	r3, [r7, #12]
 8005d26:	681b      	ldr	r3, [r3, #0]
 8005d28:	681a      	ldr	r2, [r3, #0]
 8005d2a:	68fb      	ldr	r3, [r7, #12]
 8005d2c:	681b      	ldr	r3, [r3, #0]
 8005d2e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005d32:	601a      	str	r2, [r3, #0]
  {
    /* Do nothing */
  }

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005d34:	683b      	ldr	r3, [r7, #0]
 8005d36:	9300      	str	r3, [sp, #0]
 8005d38:	687b      	ldr	r3, [r7, #4]
 8005d3a:	2200      	movs	r2, #0
 8005d3c:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8005d40:	68f8      	ldr	r0, [r7, #12]
 8005d42:	f000 fa9b 	bl	800627c <I2C_WaitOnFlagUntilTimeout>
 8005d46:	4603      	mov	r3, r0
 8005d48:	2b00      	cmp	r3, #0
 8005d4a:	d00d      	beq.n	8005d68 <I2C_MasterRequestWrite+0x88>
  {
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8005d4c:	68fb      	ldr	r3, [r7, #12]
 8005d4e:	681b      	ldr	r3, [r3, #0]
 8005d50:	681b      	ldr	r3, [r3, #0]
 8005d52:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005d56:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8005d5a:	d103      	bne.n	8005d64 <I2C_MasterRequestWrite+0x84>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8005d5c:	68fb      	ldr	r3, [r7, #12]
 8005d5e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8005d62:	641a      	str	r2, [r3, #64]	; 0x40
    }
    return HAL_TIMEOUT;
 8005d64:	2303      	movs	r3, #3
 8005d66:	e035      	b.n	8005dd4 <I2C_MasterRequestWrite+0xf4>
  }

  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8005d68:	68fb      	ldr	r3, [r7, #12]
 8005d6a:	691b      	ldr	r3, [r3, #16]
 8005d6c:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8005d70:	d108      	bne.n	8005d84 <I2C_MasterRequestWrite+0xa4>
  {
    /* Send slave address */
    hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8005d72:	897b      	ldrh	r3, [r7, #10]
 8005d74:	b2db      	uxtb	r3, r3
 8005d76:	461a      	mov	r2, r3
 8005d78:	68fb      	ldr	r3, [r7, #12]
 8005d7a:	681b      	ldr	r3, [r3, #0]
 8005d7c:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8005d80:	611a      	str	r2, [r3, #16]
 8005d82:	e01b      	b.n	8005dbc <I2C_MasterRequestWrite+0xdc>
  }
  else
  {
    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(DevAddress);
 8005d84:	897b      	ldrh	r3, [r7, #10]
 8005d86:	11db      	asrs	r3, r3, #7
 8005d88:	b2db      	uxtb	r3, r3
 8005d8a:	f003 0306 	and.w	r3, r3, #6
 8005d8e:	b2db      	uxtb	r3, r3
 8005d90:	f063 030f 	orn	r3, r3, #15
 8005d94:	b2da      	uxtb	r2, r3
 8005d96:	68fb      	ldr	r3, [r7, #12]
 8005d98:	681b      	ldr	r3, [r3, #0]
 8005d9a:	611a      	str	r2, [r3, #16]

    /* Wait until ADD10 flag is set */
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADD10, Timeout, Tickstart) != HAL_OK)
 8005d9c:	683b      	ldr	r3, [r7, #0]
 8005d9e:	687a      	ldr	r2, [r7, #4]
 8005da0:	490e      	ldr	r1, [pc, #56]	; (8005ddc <I2C_MasterRequestWrite+0xfc>)
 8005da2:	68f8      	ldr	r0, [r7, #12]
 8005da4:	f000 fae4 	bl	8006370 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005da8:	4603      	mov	r3, r0
 8005daa:	2b00      	cmp	r3, #0
 8005dac:	d001      	beq.n	8005db2 <I2C_MasterRequestWrite+0xd2>
    {
      return HAL_ERROR;
 8005dae:	2301      	movs	r3, #1
 8005db0:	e010      	b.n	8005dd4 <I2C_MasterRequestWrite+0xf4>
    }

    /* Send slave address */
    hi2c->Instance->DR = I2C_10BIT_ADDRESS(DevAddress);
 8005db2:	897b      	ldrh	r3, [r7, #10]
 8005db4:	b2da      	uxtb	r2, r3
 8005db6:	68fb      	ldr	r3, [r7, #12]
 8005db8:	681b      	ldr	r3, [r3, #0]
 8005dba:	611a      	str	r2, [r3, #16]
  }

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8005dbc:	683b      	ldr	r3, [r7, #0]
 8005dbe:	687a      	ldr	r2, [r7, #4]
 8005dc0:	4907      	ldr	r1, [pc, #28]	; (8005de0 <I2C_MasterRequestWrite+0x100>)
 8005dc2:	68f8      	ldr	r0, [r7, #12]
 8005dc4:	f000 fad4 	bl	8006370 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005dc8:	4603      	mov	r3, r0
 8005dca:	2b00      	cmp	r3, #0
 8005dcc:	d001      	beq.n	8005dd2 <I2C_MasterRequestWrite+0xf2>
  {
    return HAL_ERROR;
 8005dce:	2301      	movs	r3, #1
 8005dd0:	e000      	b.n	8005dd4 <I2C_MasterRequestWrite+0xf4>
  }

  return HAL_OK;
 8005dd2:	2300      	movs	r3, #0
}
 8005dd4:	4618      	mov	r0, r3
 8005dd6:	3718      	adds	r7, #24
 8005dd8:	46bd      	mov	sp, r7
 8005dda:	bd80      	pop	{r7, pc}
 8005ddc:	00010008 	.word	0x00010008
 8005de0:	00010002 	.word	0x00010002

08005de4 <I2C_MasterRequestRead>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_MasterRequestRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Timeout, uint32_t Tickstart)
{
 8005de4:	b580      	push	{r7, lr}
 8005de6:	b088      	sub	sp, #32
 8005de8:	af02      	add	r7, sp, #8
 8005dea:	60f8      	str	r0, [r7, #12]
 8005dec:	607a      	str	r2, [r7, #4]
 8005dee:	603b      	str	r3, [r7, #0]
 8005df0:	460b      	mov	r3, r1
 8005df2:	817b      	strh	r3, [r7, #10]
  /* Declaration of temporary variable to prevent undefined behavior of volatile usage */
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 8005df4:	68fb      	ldr	r3, [r7, #12]
 8005df6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005df8:	617b      	str	r3, [r7, #20]

  /* Enable Acknowledge */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005dfa:	68fb      	ldr	r3, [r7, #12]
 8005dfc:	681b      	ldr	r3, [r3, #0]
 8005dfe:	681a      	ldr	r2, [r3, #0]
 8005e00:	68fb      	ldr	r3, [r7, #12]
 8005e02:	681b      	ldr	r3, [r3, #0]
 8005e04:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8005e08:	601a      	str	r2, [r3, #0]

  /* Generate Start condition if first transfer */
  if ((CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME)  || (CurrentXferOptions == I2C_NO_OPTION_FRAME))
 8005e0a:	697b      	ldr	r3, [r7, #20]
 8005e0c:	2b08      	cmp	r3, #8
 8005e0e:	d006      	beq.n	8005e1e <I2C_MasterRequestRead+0x3a>
 8005e10:	697b      	ldr	r3, [r7, #20]
 8005e12:	2b01      	cmp	r3, #1
 8005e14:	d003      	beq.n	8005e1e <I2C_MasterRequestRead+0x3a>
 8005e16:	697b      	ldr	r3, [r7, #20]
 8005e18:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8005e1c:	d108      	bne.n	8005e30 <I2C_MasterRequestRead+0x4c>
  {
    /* Generate Start */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005e1e:	68fb      	ldr	r3, [r7, #12]
 8005e20:	681b      	ldr	r3, [r3, #0]
 8005e22:	681a      	ldr	r2, [r3, #0]
 8005e24:	68fb      	ldr	r3, [r7, #12]
 8005e26:	681b      	ldr	r3, [r3, #0]
 8005e28:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005e2c:	601a      	str	r2, [r3, #0]
 8005e2e:	e00b      	b.n	8005e48 <I2C_MasterRequestRead+0x64>
  }
  else if (hi2c->PreviousState == I2C_STATE_MASTER_BUSY_TX)
 8005e30:	68fb      	ldr	r3, [r7, #12]
 8005e32:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005e34:	2b11      	cmp	r3, #17
 8005e36:	d107      	bne.n	8005e48 <I2C_MasterRequestRead+0x64>
  {
    /* Generate ReStart */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005e38:	68fb      	ldr	r3, [r7, #12]
 8005e3a:	681b      	ldr	r3, [r3, #0]
 8005e3c:	681a      	ldr	r2, [r3, #0]
 8005e3e:	68fb      	ldr	r3, [r7, #12]
 8005e40:	681b      	ldr	r3, [r3, #0]
 8005e42:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005e46:	601a      	str	r2, [r3, #0]
  {
    /* Do nothing */
  }

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005e48:	683b      	ldr	r3, [r7, #0]
 8005e4a:	9300      	str	r3, [sp, #0]
 8005e4c:	687b      	ldr	r3, [r7, #4]
 8005e4e:	2200      	movs	r2, #0
 8005e50:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8005e54:	68f8      	ldr	r0, [r7, #12]
 8005e56:	f000 fa11 	bl	800627c <I2C_WaitOnFlagUntilTimeout>
 8005e5a:	4603      	mov	r3, r0
 8005e5c:	2b00      	cmp	r3, #0
 8005e5e:	d00d      	beq.n	8005e7c <I2C_MasterRequestRead+0x98>
  {
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8005e60:	68fb      	ldr	r3, [r7, #12]
 8005e62:	681b      	ldr	r3, [r3, #0]
 8005e64:	681b      	ldr	r3, [r3, #0]
 8005e66:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005e6a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8005e6e:	d103      	bne.n	8005e78 <I2C_MasterRequestRead+0x94>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8005e70:	68fb      	ldr	r3, [r7, #12]
 8005e72:	f44f 7200 	mov.w	r2, #512	; 0x200
 8005e76:	641a      	str	r2, [r3, #64]	; 0x40
    }
    return HAL_TIMEOUT;
 8005e78:	2303      	movs	r3, #3
 8005e7a:	e079      	b.n	8005f70 <I2C_MasterRequestRead+0x18c>
  }

  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8005e7c:	68fb      	ldr	r3, [r7, #12]
 8005e7e:	691b      	ldr	r3, [r3, #16]
 8005e80:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8005e84:	d108      	bne.n	8005e98 <I2C_MasterRequestRead+0xb4>
  {
    /* Send slave address */
    hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8005e86:	897b      	ldrh	r3, [r7, #10]
 8005e88:	b2db      	uxtb	r3, r3
 8005e8a:	f043 0301 	orr.w	r3, r3, #1
 8005e8e:	b2da      	uxtb	r2, r3
 8005e90:	68fb      	ldr	r3, [r7, #12]
 8005e92:	681b      	ldr	r3, [r3, #0]
 8005e94:	611a      	str	r2, [r3, #16]
 8005e96:	e05f      	b.n	8005f58 <I2C_MasterRequestRead+0x174>
  }
  else
  {
    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(DevAddress);
 8005e98:	897b      	ldrh	r3, [r7, #10]
 8005e9a:	11db      	asrs	r3, r3, #7
 8005e9c:	b2db      	uxtb	r3, r3
 8005e9e:	f003 0306 	and.w	r3, r3, #6
 8005ea2:	b2db      	uxtb	r3, r3
 8005ea4:	f063 030f 	orn	r3, r3, #15
 8005ea8:	b2da      	uxtb	r2, r3
 8005eaa:	68fb      	ldr	r3, [r7, #12]
 8005eac:	681b      	ldr	r3, [r3, #0]
 8005eae:	611a      	str	r2, [r3, #16]

    /* Wait until ADD10 flag is set */
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADD10, Timeout, Tickstart) != HAL_OK)
 8005eb0:	683b      	ldr	r3, [r7, #0]
 8005eb2:	687a      	ldr	r2, [r7, #4]
 8005eb4:	4930      	ldr	r1, [pc, #192]	; (8005f78 <I2C_MasterRequestRead+0x194>)
 8005eb6:	68f8      	ldr	r0, [r7, #12]
 8005eb8:	f000 fa5a 	bl	8006370 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005ebc:	4603      	mov	r3, r0
 8005ebe:	2b00      	cmp	r3, #0
 8005ec0:	d001      	beq.n	8005ec6 <I2C_MasterRequestRead+0xe2>
    {
      return HAL_ERROR;
 8005ec2:	2301      	movs	r3, #1
 8005ec4:	e054      	b.n	8005f70 <I2C_MasterRequestRead+0x18c>
    }

    /* Send slave address */
    hi2c->Instance->DR = I2C_10BIT_ADDRESS(DevAddress);
 8005ec6:	897b      	ldrh	r3, [r7, #10]
 8005ec8:	b2da      	uxtb	r2, r3
 8005eca:	68fb      	ldr	r3, [r7, #12]
 8005ecc:	681b      	ldr	r3, [r3, #0]
 8005ece:	611a      	str	r2, [r3, #16]

    /* Wait until ADDR flag is set */
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8005ed0:	683b      	ldr	r3, [r7, #0]
 8005ed2:	687a      	ldr	r2, [r7, #4]
 8005ed4:	4929      	ldr	r1, [pc, #164]	; (8005f7c <I2C_MasterRequestRead+0x198>)
 8005ed6:	68f8      	ldr	r0, [r7, #12]
 8005ed8:	f000 fa4a 	bl	8006370 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005edc:	4603      	mov	r3, r0
 8005ede:	2b00      	cmp	r3, #0
 8005ee0:	d001      	beq.n	8005ee6 <I2C_MasterRequestRead+0x102>
    {
      return HAL_ERROR;
 8005ee2:	2301      	movs	r3, #1
 8005ee4:	e044      	b.n	8005f70 <I2C_MasterRequestRead+0x18c>
    }

    /* Clear ADDR flag */
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005ee6:	2300      	movs	r3, #0
 8005ee8:	613b      	str	r3, [r7, #16]
 8005eea:	68fb      	ldr	r3, [r7, #12]
 8005eec:	681b      	ldr	r3, [r3, #0]
 8005eee:	695b      	ldr	r3, [r3, #20]
 8005ef0:	613b      	str	r3, [r7, #16]
 8005ef2:	68fb      	ldr	r3, [r7, #12]
 8005ef4:	681b      	ldr	r3, [r3, #0]
 8005ef6:	699b      	ldr	r3, [r3, #24]
 8005ef8:	613b      	str	r3, [r7, #16]
 8005efa:	693b      	ldr	r3, [r7, #16]

    /* Generate Restart */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005efc:	68fb      	ldr	r3, [r7, #12]
 8005efe:	681b      	ldr	r3, [r3, #0]
 8005f00:	681a      	ldr	r2, [r3, #0]
 8005f02:	68fb      	ldr	r3, [r7, #12]
 8005f04:	681b      	ldr	r3, [r3, #0]
 8005f06:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005f0a:	601a      	str	r2, [r3, #0]

    /* Wait until SB flag is set */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005f0c:	683b      	ldr	r3, [r7, #0]
 8005f0e:	9300      	str	r3, [sp, #0]
 8005f10:	687b      	ldr	r3, [r7, #4]
 8005f12:	2200      	movs	r2, #0
 8005f14:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8005f18:	68f8      	ldr	r0, [r7, #12]
 8005f1a:	f000 f9af 	bl	800627c <I2C_WaitOnFlagUntilTimeout>
 8005f1e:	4603      	mov	r3, r0
 8005f20:	2b00      	cmp	r3, #0
 8005f22:	d00d      	beq.n	8005f40 <I2C_MasterRequestRead+0x15c>
    {
      if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8005f24:	68fb      	ldr	r3, [r7, #12]
 8005f26:	681b      	ldr	r3, [r3, #0]
 8005f28:	681b      	ldr	r3, [r3, #0]
 8005f2a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005f2e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8005f32:	d103      	bne.n	8005f3c <I2C_MasterRequestRead+0x158>
      {
        hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8005f34:	68fb      	ldr	r3, [r7, #12]
 8005f36:	f44f 7200 	mov.w	r2, #512	; 0x200
 8005f3a:	641a      	str	r2, [r3, #64]	; 0x40
      }
      return HAL_TIMEOUT;
 8005f3c:	2303      	movs	r3, #3
 8005f3e:	e017      	b.n	8005f70 <I2C_MasterRequestRead+0x18c>
    }

    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_READ(DevAddress);
 8005f40:	897b      	ldrh	r3, [r7, #10]
 8005f42:	11db      	asrs	r3, r3, #7
 8005f44:	b2db      	uxtb	r3, r3
 8005f46:	f003 0306 	and.w	r3, r3, #6
 8005f4a:	b2db      	uxtb	r3, r3
 8005f4c:	f063 030e 	orn	r3, r3, #14
 8005f50:	b2da      	uxtb	r2, r3
 8005f52:	68fb      	ldr	r3, [r7, #12]
 8005f54:	681b      	ldr	r3, [r3, #0]
 8005f56:	611a      	str	r2, [r3, #16]
  }

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8005f58:	683b      	ldr	r3, [r7, #0]
 8005f5a:	687a      	ldr	r2, [r7, #4]
 8005f5c:	4907      	ldr	r1, [pc, #28]	; (8005f7c <I2C_MasterRequestRead+0x198>)
 8005f5e:	68f8      	ldr	r0, [r7, #12]
 8005f60:	f000 fa06 	bl	8006370 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005f64:	4603      	mov	r3, r0
 8005f66:	2b00      	cmp	r3, #0
 8005f68:	d001      	beq.n	8005f6e <I2C_MasterRequestRead+0x18a>
  {
    return HAL_ERROR;
 8005f6a:	2301      	movs	r3, #1
 8005f6c:	e000      	b.n	8005f70 <I2C_MasterRequestRead+0x18c>
  }

  return HAL_OK;
 8005f6e:	2300      	movs	r3, #0
}
 8005f70:	4618      	mov	r0, r3
 8005f72:	3718      	adds	r7, #24
 8005f74:	46bd      	mov	sp, r7
 8005f76:	bd80      	pop	{r7, pc}
 8005f78:	00010008 	.word	0x00010008
 8005f7c:	00010002 	.word	0x00010002

08005f80 <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 8005f80:	b580      	push	{r7, lr}
 8005f82:	b088      	sub	sp, #32
 8005f84:	af02      	add	r7, sp, #8
 8005f86:	60f8      	str	r0, [r7, #12]
 8005f88:	4608      	mov	r0, r1
 8005f8a:	4611      	mov	r1, r2
 8005f8c:	461a      	mov	r2, r3
 8005f8e:	4603      	mov	r3, r0
 8005f90:	817b      	strh	r3, [r7, #10]
 8005f92:	460b      	mov	r3, r1
 8005f94:	813b      	strh	r3, [r7, #8]
 8005f96:	4613      	mov	r3, r2
 8005f98:	80fb      	strh	r3, [r7, #6]
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005f9a:	68fb      	ldr	r3, [r7, #12]
 8005f9c:	681b      	ldr	r3, [r3, #0]
 8005f9e:	681a      	ldr	r2, [r3, #0]
 8005fa0:	68fb      	ldr	r3, [r7, #12]
 8005fa2:	681b      	ldr	r3, [r3, #0]
 8005fa4:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005fa8:	601a      	str	r2, [r3, #0]

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005faa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005fac:	9300      	str	r3, [sp, #0]
 8005fae:	6a3b      	ldr	r3, [r7, #32]
 8005fb0:	2200      	movs	r2, #0
 8005fb2:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8005fb6:	68f8      	ldr	r0, [r7, #12]
 8005fb8:	f000 f960 	bl	800627c <I2C_WaitOnFlagUntilTimeout>
 8005fbc:	4603      	mov	r3, r0
 8005fbe:	2b00      	cmp	r3, #0
 8005fc0:	d00d      	beq.n	8005fde <I2C_RequestMemoryWrite+0x5e>
  {
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8005fc2:	68fb      	ldr	r3, [r7, #12]
 8005fc4:	681b      	ldr	r3, [r3, #0]
 8005fc6:	681b      	ldr	r3, [r3, #0]
 8005fc8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005fcc:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8005fd0:	d103      	bne.n	8005fda <I2C_RequestMemoryWrite+0x5a>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8005fd2:	68fb      	ldr	r3, [r7, #12]
 8005fd4:	f44f 7200 	mov.w	r2, #512	; 0x200
 8005fd8:	641a      	str	r2, [r3, #64]	; 0x40
    }
    return HAL_TIMEOUT;
 8005fda:	2303      	movs	r3, #3
 8005fdc:	e05f      	b.n	800609e <I2C_RequestMemoryWrite+0x11e>
  }

  /* Send slave address */
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8005fde:	897b      	ldrh	r3, [r7, #10]
 8005fe0:	b2db      	uxtb	r3, r3
 8005fe2:	461a      	mov	r2, r3
 8005fe4:	68fb      	ldr	r3, [r7, #12]
 8005fe6:	681b      	ldr	r3, [r3, #0]
 8005fe8:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8005fec:	611a      	str	r2, [r3, #16]

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8005fee:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005ff0:	6a3a      	ldr	r2, [r7, #32]
 8005ff2:	492d      	ldr	r1, [pc, #180]	; (80060a8 <I2C_RequestMemoryWrite+0x128>)
 8005ff4:	68f8      	ldr	r0, [r7, #12]
 8005ff6:	f000 f9bb 	bl	8006370 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005ffa:	4603      	mov	r3, r0
 8005ffc:	2b00      	cmp	r3, #0
 8005ffe:	d001      	beq.n	8006004 <I2C_RequestMemoryWrite+0x84>
  {
    return HAL_ERROR;
 8006000:	2301      	movs	r3, #1
 8006002:	e04c      	b.n	800609e <I2C_RequestMemoryWrite+0x11e>
  }

  /* Clear ADDR flag */
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006004:	2300      	movs	r3, #0
 8006006:	617b      	str	r3, [r7, #20]
 8006008:	68fb      	ldr	r3, [r7, #12]
 800600a:	681b      	ldr	r3, [r3, #0]
 800600c:	695b      	ldr	r3, [r3, #20]
 800600e:	617b      	str	r3, [r7, #20]
 8006010:	68fb      	ldr	r3, [r7, #12]
 8006012:	681b      	ldr	r3, [r3, #0]
 8006014:	699b      	ldr	r3, [r3, #24]
 8006016:	617b      	str	r3, [r7, #20]
 8006018:	697b      	ldr	r3, [r7, #20]

  /* Wait until TXE flag is set */
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800601a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800601c:	6a39      	ldr	r1, [r7, #32]
 800601e:	68f8      	ldr	r0, [r7, #12]
 8006020:	f000 fa46 	bl	80064b0 <I2C_WaitOnTXEFlagUntilTimeout>
 8006024:	4603      	mov	r3, r0
 8006026:	2b00      	cmp	r3, #0
 8006028:	d00d      	beq.n	8006046 <I2C_RequestMemoryWrite+0xc6>
  {
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800602a:	68fb      	ldr	r3, [r7, #12]
 800602c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800602e:	2b04      	cmp	r3, #4
 8006030:	d107      	bne.n	8006042 <I2C_RequestMemoryWrite+0xc2>
    {
      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006032:	68fb      	ldr	r3, [r7, #12]
 8006034:	681b      	ldr	r3, [r3, #0]
 8006036:	681a      	ldr	r2, [r3, #0]
 8006038:	68fb      	ldr	r3, [r7, #12]
 800603a:	681b      	ldr	r3, [r3, #0]
 800603c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006040:	601a      	str	r2, [r3, #0]
    }
    return HAL_ERROR;
 8006042:	2301      	movs	r3, #1
 8006044:	e02b      	b.n	800609e <I2C_RequestMemoryWrite+0x11e>
  }

  /* If Memory address size is 8Bit */
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006046:	88fb      	ldrh	r3, [r7, #6]
 8006048:	2b01      	cmp	r3, #1
 800604a:	d105      	bne.n	8006058 <I2C_RequestMemoryWrite+0xd8>
  {
    /* Send Memory Address */
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800604c:	893b      	ldrh	r3, [r7, #8]
 800604e:	b2da      	uxtb	r2, r3
 8006050:	68fb      	ldr	r3, [r7, #12]
 8006052:	681b      	ldr	r3, [r3, #0]
 8006054:	611a      	str	r2, [r3, #16]
 8006056:	e021      	b.n	800609c <I2C_RequestMemoryWrite+0x11c>
  }
  /* If Memory address size is 16Bit */
  else
  {
    /* Send MSB of Memory Address */
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8006058:	893b      	ldrh	r3, [r7, #8]
 800605a:	0a1b      	lsrs	r3, r3, #8
 800605c:	b29b      	uxth	r3, r3
 800605e:	b2da      	uxtb	r2, r3
 8006060:	68fb      	ldr	r3, [r7, #12]
 8006062:	681b      	ldr	r3, [r3, #0]
 8006064:	611a      	str	r2, [r3, #16]

    /* Wait until TXE flag is set */
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006066:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8006068:	6a39      	ldr	r1, [r7, #32]
 800606a:	68f8      	ldr	r0, [r7, #12]
 800606c:	f000 fa20 	bl	80064b0 <I2C_WaitOnTXEFlagUntilTimeout>
 8006070:	4603      	mov	r3, r0
 8006072:	2b00      	cmp	r3, #0
 8006074:	d00d      	beq.n	8006092 <I2C_RequestMemoryWrite+0x112>
    {
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8006076:	68fb      	ldr	r3, [r7, #12]
 8006078:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800607a:	2b04      	cmp	r3, #4
 800607c:	d107      	bne.n	800608e <I2C_RequestMemoryWrite+0x10e>
      {
        /* Generate Stop */
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800607e:	68fb      	ldr	r3, [r7, #12]
 8006080:	681b      	ldr	r3, [r3, #0]
 8006082:	681a      	ldr	r2, [r3, #0]
 8006084:	68fb      	ldr	r3, [r7, #12]
 8006086:	681b      	ldr	r3, [r3, #0]
 8006088:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800608c:	601a      	str	r2, [r3, #0]
      }
      return HAL_ERROR;
 800608e:	2301      	movs	r3, #1
 8006090:	e005      	b.n	800609e <I2C_RequestMemoryWrite+0x11e>
    }

    /* Send LSB of Memory Address */
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8006092:	893b      	ldrh	r3, [r7, #8]
 8006094:	b2da      	uxtb	r2, r3
 8006096:	68fb      	ldr	r3, [r7, #12]
 8006098:	681b      	ldr	r3, [r3, #0]
 800609a:	611a      	str	r2, [r3, #16]
  }

  return HAL_OK;
 800609c:	2300      	movs	r3, #0
}
 800609e:	4618      	mov	r0, r3
 80060a0:	3718      	adds	r7, #24
 80060a2:	46bd      	mov	sp, r7
 80060a4:	bd80      	pop	{r7, pc}
 80060a6:	bf00      	nop
 80060a8:	00010002 	.word	0x00010002

080060ac <I2C_RequestMemoryRead>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 80060ac:	b580      	push	{r7, lr}
 80060ae:	b088      	sub	sp, #32
 80060b0:	af02      	add	r7, sp, #8
 80060b2:	60f8      	str	r0, [r7, #12]
 80060b4:	4608      	mov	r0, r1
 80060b6:	4611      	mov	r1, r2
 80060b8:	461a      	mov	r2, r3
 80060ba:	4603      	mov	r3, r0
 80060bc:	817b      	strh	r3, [r7, #10]
 80060be:	460b      	mov	r3, r1
 80060c0:	813b      	strh	r3, [r7, #8]
 80060c2:	4613      	mov	r3, r2
 80060c4:	80fb      	strh	r3, [r7, #6]
  /* Enable Acknowledge */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80060c6:	68fb      	ldr	r3, [r7, #12]
 80060c8:	681b      	ldr	r3, [r3, #0]
 80060ca:	681a      	ldr	r2, [r3, #0]
 80060cc:	68fb      	ldr	r3, [r7, #12]
 80060ce:	681b      	ldr	r3, [r3, #0]
 80060d0:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80060d4:	601a      	str	r2, [r3, #0]

  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80060d6:	68fb      	ldr	r3, [r7, #12]
 80060d8:	681b      	ldr	r3, [r3, #0]
 80060da:	681a      	ldr	r2, [r3, #0]
 80060dc:	68fb      	ldr	r3, [r7, #12]
 80060de:	681b      	ldr	r3, [r3, #0]
 80060e0:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80060e4:	601a      	str	r2, [r3, #0]

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80060e6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80060e8:	9300      	str	r3, [sp, #0]
 80060ea:	6a3b      	ldr	r3, [r7, #32]
 80060ec:	2200      	movs	r2, #0
 80060ee:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80060f2:	68f8      	ldr	r0, [r7, #12]
 80060f4:	f000 f8c2 	bl	800627c <I2C_WaitOnFlagUntilTimeout>
 80060f8:	4603      	mov	r3, r0
 80060fa:	2b00      	cmp	r3, #0
 80060fc:	d00d      	beq.n	800611a <I2C_RequestMemoryRead+0x6e>
  {
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80060fe:	68fb      	ldr	r3, [r7, #12]
 8006100:	681b      	ldr	r3, [r3, #0]
 8006102:	681b      	ldr	r3, [r3, #0]
 8006104:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006108:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800610c:	d103      	bne.n	8006116 <I2C_RequestMemoryRead+0x6a>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800610e:	68fb      	ldr	r3, [r7, #12]
 8006110:	f44f 7200 	mov.w	r2, #512	; 0x200
 8006114:	641a      	str	r2, [r3, #64]	; 0x40
    }
    return HAL_TIMEOUT;
 8006116:	2303      	movs	r3, #3
 8006118:	e0aa      	b.n	8006270 <I2C_RequestMemoryRead+0x1c4>
  }

  /* Send slave address */
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800611a:	897b      	ldrh	r3, [r7, #10]
 800611c:	b2db      	uxtb	r3, r3
 800611e:	461a      	mov	r2, r3
 8006120:	68fb      	ldr	r3, [r7, #12]
 8006122:	681b      	ldr	r3, [r3, #0]
 8006124:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8006128:	611a      	str	r2, [r3, #16]

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800612a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800612c:	6a3a      	ldr	r2, [r7, #32]
 800612e:	4952      	ldr	r1, [pc, #328]	; (8006278 <I2C_RequestMemoryRead+0x1cc>)
 8006130:	68f8      	ldr	r0, [r7, #12]
 8006132:	f000 f91d 	bl	8006370 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8006136:	4603      	mov	r3, r0
 8006138:	2b00      	cmp	r3, #0
 800613a:	d001      	beq.n	8006140 <I2C_RequestMemoryRead+0x94>
  {
    return HAL_ERROR;
 800613c:	2301      	movs	r3, #1
 800613e:	e097      	b.n	8006270 <I2C_RequestMemoryRead+0x1c4>
  }

  /* Clear ADDR flag */
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006140:	2300      	movs	r3, #0
 8006142:	617b      	str	r3, [r7, #20]
 8006144:	68fb      	ldr	r3, [r7, #12]
 8006146:	681b      	ldr	r3, [r3, #0]
 8006148:	695b      	ldr	r3, [r3, #20]
 800614a:	617b      	str	r3, [r7, #20]
 800614c:	68fb      	ldr	r3, [r7, #12]
 800614e:	681b      	ldr	r3, [r3, #0]
 8006150:	699b      	ldr	r3, [r3, #24]
 8006152:	617b      	str	r3, [r7, #20]
 8006154:	697b      	ldr	r3, [r7, #20]

  /* Wait until TXE flag is set */
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006156:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8006158:	6a39      	ldr	r1, [r7, #32]
 800615a:	68f8      	ldr	r0, [r7, #12]
 800615c:	f000 f9a8 	bl	80064b0 <I2C_WaitOnTXEFlagUntilTimeout>
 8006160:	4603      	mov	r3, r0
 8006162:	2b00      	cmp	r3, #0
 8006164:	d00d      	beq.n	8006182 <I2C_RequestMemoryRead+0xd6>
  {
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8006166:	68fb      	ldr	r3, [r7, #12]
 8006168:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800616a:	2b04      	cmp	r3, #4
 800616c:	d107      	bne.n	800617e <I2C_RequestMemoryRead+0xd2>
    {
      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800616e:	68fb      	ldr	r3, [r7, #12]
 8006170:	681b      	ldr	r3, [r3, #0]
 8006172:	681a      	ldr	r2, [r3, #0]
 8006174:	68fb      	ldr	r3, [r7, #12]
 8006176:	681b      	ldr	r3, [r3, #0]
 8006178:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800617c:	601a      	str	r2, [r3, #0]
    }
    return HAL_ERROR;
 800617e:	2301      	movs	r3, #1
 8006180:	e076      	b.n	8006270 <I2C_RequestMemoryRead+0x1c4>
  }

  /* If Memory address size is 8Bit */
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006182:	88fb      	ldrh	r3, [r7, #6]
 8006184:	2b01      	cmp	r3, #1
 8006186:	d105      	bne.n	8006194 <I2C_RequestMemoryRead+0xe8>
  {
    /* Send Memory Address */
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8006188:	893b      	ldrh	r3, [r7, #8]
 800618a:	b2da      	uxtb	r2, r3
 800618c:	68fb      	ldr	r3, [r7, #12]
 800618e:	681b      	ldr	r3, [r3, #0]
 8006190:	611a      	str	r2, [r3, #16]
 8006192:	e021      	b.n	80061d8 <I2C_RequestMemoryRead+0x12c>
  }
  /* If Memory address size is 16Bit */
  else
  {
    /* Send MSB of Memory Address */
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8006194:	893b      	ldrh	r3, [r7, #8]
 8006196:	0a1b      	lsrs	r3, r3, #8
 8006198:	b29b      	uxth	r3, r3
 800619a:	b2da      	uxtb	r2, r3
 800619c:	68fb      	ldr	r3, [r7, #12]
 800619e:	681b      	ldr	r3, [r3, #0]
 80061a0:	611a      	str	r2, [r3, #16]

    /* Wait until TXE flag is set */
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80061a2:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80061a4:	6a39      	ldr	r1, [r7, #32]
 80061a6:	68f8      	ldr	r0, [r7, #12]
 80061a8:	f000 f982 	bl	80064b0 <I2C_WaitOnTXEFlagUntilTimeout>
 80061ac:	4603      	mov	r3, r0
 80061ae:	2b00      	cmp	r3, #0
 80061b0:	d00d      	beq.n	80061ce <I2C_RequestMemoryRead+0x122>
    {
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80061b2:	68fb      	ldr	r3, [r7, #12]
 80061b4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80061b6:	2b04      	cmp	r3, #4
 80061b8:	d107      	bne.n	80061ca <I2C_RequestMemoryRead+0x11e>
      {
        /* Generate Stop */
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80061ba:	68fb      	ldr	r3, [r7, #12]
 80061bc:	681b      	ldr	r3, [r3, #0]
 80061be:	681a      	ldr	r2, [r3, #0]
 80061c0:	68fb      	ldr	r3, [r7, #12]
 80061c2:	681b      	ldr	r3, [r3, #0]
 80061c4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80061c8:	601a      	str	r2, [r3, #0]
      }
      return HAL_ERROR;
 80061ca:	2301      	movs	r3, #1
 80061cc:	e050      	b.n	8006270 <I2C_RequestMemoryRead+0x1c4>
    }

    /* Send LSB of Memory Address */
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80061ce:	893b      	ldrh	r3, [r7, #8]
 80061d0:	b2da      	uxtb	r2, r3
 80061d2:	68fb      	ldr	r3, [r7, #12]
 80061d4:	681b      	ldr	r3, [r3, #0]
 80061d6:	611a      	str	r2, [r3, #16]
  }

  /* Wait until TXE flag is set */
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80061d8:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80061da:	6a39      	ldr	r1, [r7, #32]
 80061dc:	68f8      	ldr	r0, [r7, #12]
 80061de:	f000 f967 	bl	80064b0 <I2C_WaitOnTXEFlagUntilTimeout>
 80061e2:	4603      	mov	r3, r0
 80061e4:	2b00      	cmp	r3, #0
 80061e6:	d00d      	beq.n	8006204 <I2C_RequestMemoryRead+0x158>
  {
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80061e8:	68fb      	ldr	r3, [r7, #12]
 80061ea:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80061ec:	2b04      	cmp	r3, #4
 80061ee:	d107      	bne.n	8006200 <I2C_RequestMemoryRead+0x154>
    {
      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80061f0:	68fb      	ldr	r3, [r7, #12]
 80061f2:	681b      	ldr	r3, [r3, #0]
 80061f4:	681a      	ldr	r2, [r3, #0]
 80061f6:	68fb      	ldr	r3, [r7, #12]
 80061f8:	681b      	ldr	r3, [r3, #0]
 80061fa:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80061fe:	601a      	str	r2, [r3, #0]
    }
    return HAL_ERROR;
 8006200:	2301      	movs	r3, #1
 8006202:	e035      	b.n	8006270 <I2C_RequestMemoryRead+0x1c4>
  }

  /* Generate Restart */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006204:	68fb      	ldr	r3, [r7, #12]
 8006206:	681b      	ldr	r3, [r3, #0]
 8006208:	681a      	ldr	r2, [r3, #0]
 800620a:	68fb      	ldr	r3, [r7, #12]
 800620c:	681b      	ldr	r3, [r3, #0]
 800620e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8006212:	601a      	str	r2, [r3, #0]

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006214:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006216:	9300      	str	r3, [sp, #0]
 8006218:	6a3b      	ldr	r3, [r7, #32]
 800621a:	2200      	movs	r2, #0
 800621c:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8006220:	68f8      	ldr	r0, [r7, #12]
 8006222:	f000 f82b 	bl	800627c <I2C_WaitOnFlagUntilTimeout>
 8006226:	4603      	mov	r3, r0
 8006228:	2b00      	cmp	r3, #0
 800622a:	d00d      	beq.n	8006248 <I2C_RequestMemoryRead+0x19c>
  {
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800622c:	68fb      	ldr	r3, [r7, #12]
 800622e:	681b      	ldr	r3, [r3, #0]
 8006230:	681b      	ldr	r3, [r3, #0]
 8006232:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006236:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800623a:	d103      	bne.n	8006244 <I2C_RequestMemoryRead+0x198>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800623c:	68fb      	ldr	r3, [r7, #12]
 800623e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8006242:	641a      	str	r2, [r3, #64]	; 0x40
    }
    return HAL_TIMEOUT;
 8006244:	2303      	movs	r3, #3
 8006246:	e013      	b.n	8006270 <I2C_RequestMemoryRead+0x1c4>
  }

  /* Send slave address */
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8006248:	897b      	ldrh	r3, [r7, #10]
 800624a:	b2db      	uxtb	r3, r3
 800624c:	f043 0301 	orr.w	r3, r3, #1
 8006250:	b2da      	uxtb	r2, r3
 8006252:	68fb      	ldr	r3, [r7, #12]
 8006254:	681b      	ldr	r3, [r3, #0]
 8006256:	611a      	str	r2, [r3, #16]

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8006258:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800625a:	6a3a      	ldr	r2, [r7, #32]
 800625c:	4906      	ldr	r1, [pc, #24]	; (8006278 <I2C_RequestMemoryRead+0x1cc>)
 800625e:	68f8      	ldr	r0, [r7, #12]
 8006260:	f000 f886 	bl	8006370 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8006264:	4603      	mov	r3, r0
 8006266:	2b00      	cmp	r3, #0
 8006268:	d001      	beq.n	800626e <I2C_RequestMemoryRead+0x1c2>
  {
    return HAL_ERROR;
 800626a:	2301      	movs	r3, #1
 800626c:	e000      	b.n	8006270 <I2C_RequestMemoryRead+0x1c4>
  }

  return HAL_OK;
 800626e:	2300      	movs	r3, #0
}
 8006270:	4618      	mov	r0, r3
 8006272:	3718      	adds	r7, #24
 8006274:	46bd      	mov	sp, r7
 8006276:	bd80      	pop	{r7, pc}
 8006278:	00010002 	.word	0x00010002

0800627c <I2C_WaitOnFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
{
 800627c:	b580      	push	{r7, lr}
 800627e:	b084      	sub	sp, #16
 8006280:	af00      	add	r7, sp, #0
 8006282:	60f8      	str	r0, [r7, #12]
 8006284:	60b9      	str	r1, [r7, #8]
 8006286:	603b      	str	r3, [r7, #0]
 8006288:	4613      	mov	r3, r2
 800628a:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800628c:	e048      	b.n	8006320 <I2C_WaitOnFlagUntilTimeout+0xa4>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 800628e:	683b      	ldr	r3, [r7, #0]
 8006290:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006294:	d044      	beq.n	8006320 <I2C_WaitOnFlagUntilTimeout+0xa4>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006296:	f7fd fe4d 	bl	8003f34 <HAL_GetTick>
 800629a:	4602      	mov	r2, r0
 800629c:	69bb      	ldr	r3, [r7, #24]
 800629e:	1ad3      	subs	r3, r2, r3
 80062a0:	683a      	ldr	r2, [r7, #0]
 80062a2:	429a      	cmp	r2, r3
 80062a4:	d302      	bcc.n	80062ac <I2C_WaitOnFlagUntilTimeout+0x30>
 80062a6:	683b      	ldr	r3, [r7, #0]
 80062a8:	2b00      	cmp	r3, #0
 80062aa:	d139      	bne.n	8006320 <I2C_WaitOnFlagUntilTimeout+0xa4>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 80062ac:	68bb      	ldr	r3, [r7, #8]
 80062ae:	0c1b      	lsrs	r3, r3, #16
 80062b0:	b2db      	uxtb	r3, r3
 80062b2:	2b01      	cmp	r3, #1
 80062b4:	d10d      	bne.n	80062d2 <I2C_WaitOnFlagUntilTimeout+0x56>
 80062b6:	68fb      	ldr	r3, [r7, #12]
 80062b8:	681b      	ldr	r3, [r3, #0]
 80062ba:	695b      	ldr	r3, [r3, #20]
 80062bc:	43da      	mvns	r2, r3
 80062be:	68bb      	ldr	r3, [r7, #8]
 80062c0:	4013      	ands	r3, r2
 80062c2:	b29b      	uxth	r3, r3
 80062c4:	2b00      	cmp	r3, #0
 80062c6:	bf0c      	ite	eq
 80062c8:	2301      	moveq	r3, #1
 80062ca:	2300      	movne	r3, #0
 80062cc:	b2db      	uxtb	r3, r3
 80062ce:	461a      	mov	r2, r3
 80062d0:	e00c      	b.n	80062ec <I2C_WaitOnFlagUntilTimeout+0x70>
 80062d2:	68fb      	ldr	r3, [r7, #12]
 80062d4:	681b      	ldr	r3, [r3, #0]
 80062d6:	699b      	ldr	r3, [r3, #24]
 80062d8:	43da      	mvns	r2, r3
 80062da:	68bb      	ldr	r3, [r7, #8]
 80062dc:	4013      	ands	r3, r2
 80062de:	b29b      	uxth	r3, r3
 80062e0:	2b00      	cmp	r3, #0
 80062e2:	bf0c      	ite	eq
 80062e4:	2301      	moveq	r3, #1
 80062e6:	2300      	movne	r3, #0
 80062e8:	b2db      	uxtb	r3, r3
 80062ea:	461a      	mov	r2, r3
 80062ec:	79fb      	ldrb	r3, [r7, #7]
 80062ee:	429a      	cmp	r2, r3
 80062f0:	d116      	bne.n	8006320 <I2C_WaitOnFlagUntilTimeout+0xa4>
        {
          hi2c->PreviousState     = I2C_STATE_NONE;
 80062f2:	68fb      	ldr	r3, [r7, #12]
 80062f4:	2200      	movs	r2, #0
 80062f6:	631a      	str	r2, [r3, #48]	; 0x30
          hi2c->State             = HAL_I2C_STATE_READY;
 80062f8:	68fb      	ldr	r3, [r7, #12]
 80062fa:	2220      	movs	r2, #32
 80062fc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
          hi2c->Mode              = HAL_I2C_MODE_NONE;
 8006300:	68fb      	ldr	r3, [r7, #12]
 8006302:	2200      	movs	r2, #0
 8006304:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8006308:	68fb      	ldr	r3, [r7, #12]
 800630a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800630c:	f043 0220 	orr.w	r2, r3, #32
 8006310:	68fb      	ldr	r3, [r7, #12]
 8006312:	641a      	str	r2, [r3, #64]	; 0x40

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 8006314:	68fb      	ldr	r3, [r7, #12]
 8006316:	2200      	movs	r2, #0
 8006318:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

          return HAL_ERROR;
 800631c:	2301      	movs	r3, #1
 800631e:	e023      	b.n	8006368 <I2C_WaitOnFlagUntilTimeout+0xec>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8006320:	68bb      	ldr	r3, [r7, #8]
 8006322:	0c1b      	lsrs	r3, r3, #16
 8006324:	b2db      	uxtb	r3, r3
 8006326:	2b01      	cmp	r3, #1
 8006328:	d10d      	bne.n	8006346 <I2C_WaitOnFlagUntilTimeout+0xca>
 800632a:	68fb      	ldr	r3, [r7, #12]
 800632c:	681b      	ldr	r3, [r3, #0]
 800632e:	695b      	ldr	r3, [r3, #20]
 8006330:	43da      	mvns	r2, r3
 8006332:	68bb      	ldr	r3, [r7, #8]
 8006334:	4013      	ands	r3, r2
 8006336:	b29b      	uxth	r3, r3
 8006338:	2b00      	cmp	r3, #0
 800633a:	bf0c      	ite	eq
 800633c:	2301      	moveq	r3, #1
 800633e:	2300      	movne	r3, #0
 8006340:	b2db      	uxtb	r3, r3
 8006342:	461a      	mov	r2, r3
 8006344:	e00c      	b.n	8006360 <I2C_WaitOnFlagUntilTimeout+0xe4>
 8006346:	68fb      	ldr	r3, [r7, #12]
 8006348:	681b      	ldr	r3, [r3, #0]
 800634a:	699b      	ldr	r3, [r3, #24]
 800634c:	43da      	mvns	r2, r3
 800634e:	68bb      	ldr	r3, [r7, #8]
 8006350:	4013      	ands	r3, r2
 8006352:	b29b      	uxth	r3, r3
 8006354:	2b00      	cmp	r3, #0
 8006356:	bf0c      	ite	eq
 8006358:	2301      	moveq	r3, #1
 800635a:	2300      	movne	r3, #0
 800635c:	b2db      	uxtb	r3, r3
 800635e:	461a      	mov	r2, r3
 8006360:	79fb      	ldrb	r3, [r7, #7]
 8006362:	429a      	cmp	r2, r3
 8006364:	d093      	beq.n	800628e <I2C_WaitOnFlagUntilTimeout+0x12>
        }
      }
    }
  }
  return HAL_OK;
 8006366:	2300      	movs	r3, #0
}
 8006368:	4618      	mov	r0, r3
 800636a:	3710      	adds	r7, #16
 800636c:	46bd      	mov	sp, r7
 800636e:	bd80      	pop	{r7, pc}

08006370 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
{
 8006370:	b580      	push	{r7, lr}
 8006372:	b084      	sub	sp, #16
 8006374:	af00      	add	r7, sp, #0
 8006376:	60f8      	str	r0, [r7, #12]
 8006378:	60b9      	str	r1, [r7, #8]
 800637a:	607a      	str	r2, [r7, #4]
 800637c:	603b      	str	r3, [r7, #0]
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800637e:	e071      	b.n	8006464 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8006380:	68fb      	ldr	r3, [r7, #12]
 8006382:	681b      	ldr	r3, [r3, #0]
 8006384:	695b      	ldr	r3, [r3, #20]
 8006386:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800638a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800638e:	d123      	bne.n	80063d8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
    {
      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006390:	68fb      	ldr	r3, [r7, #12]
 8006392:	681b      	ldr	r3, [r3, #0]
 8006394:	681a      	ldr	r2, [r3, #0]
 8006396:	68fb      	ldr	r3, [r7, #12]
 8006398:	681b      	ldr	r3, [r3, #0]
 800639a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800639e:	601a      	str	r2, [r3, #0]

      /* Clear AF Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80063a0:	68fb      	ldr	r3, [r7, #12]
 80063a2:	681b      	ldr	r3, [r3, #0]
 80063a4:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 80063a8:	615a      	str	r2, [r3, #20]

      hi2c->PreviousState       = I2C_STATE_NONE;
 80063aa:	68fb      	ldr	r3, [r7, #12]
 80063ac:	2200      	movs	r2, #0
 80063ae:	631a      	str	r2, [r3, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80063b0:	68fb      	ldr	r3, [r7, #12]
 80063b2:	2220      	movs	r2, #32
 80063b4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80063b8:	68fb      	ldr	r3, [r7, #12]
 80063ba:	2200      	movs	r2, #0
 80063bc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80063c0:	68fb      	ldr	r3, [r7, #12]
 80063c2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80063c4:	f043 0204 	orr.w	r2, r3, #4
 80063c8:	68fb      	ldr	r3, [r7, #12]
 80063ca:	641a      	str	r2, [r3, #64]	; 0x40

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 80063cc:	68fb      	ldr	r3, [r7, #12]
 80063ce:	2200      	movs	r2, #0
 80063d0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

      return HAL_ERROR;
 80063d4:	2301      	movs	r3, #1
 80063d6:	e067      	b.n	80064a8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 80063d8:	687b      	ldr	r3, [r7, #4]
 80063da:	f1b3 3fff 	cmp.w	r3, #4294967295
 80063de:	d041      	beq.n	8006464 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80063e0:	f7fd fda8 	bl	8003f34 <HAL_GetTick>
 80063e4:	4602      	mov	r2, r0
 80063e6:	683b      	ldr	r3, [r7, #0]
 80063e8:	1ad3      	subs	r3, r2, r3
 80063ea:	687a      	ldr	r2, [r7, #4]
 80063ec:	429a      	cmp	r2, r3
 80063ee:	d302      	bcc.n	80063f6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 80063f0:	687b      	ldr	r3, [r7, #4]
 80063f2:	2b00      	cmp	r3, #0
 80063f4:	d136      	bne.n	8006464 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET))
 80063f6:	68bb      	ldr	r3, [r7, #8]
 80063f8:	0c1b      	lsrs	r3, r3, #16
 80063fa:	b2db      	uxtb	r3, r3
 80063fc:	2b01      	cmp	r3, #1
 80063fe:	d10c      	bne.n	800641a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xaa>
 8006400:	68fb      	ldr	r3, [r7, #12]
 8006402:	681b      	ldr	r3, [r3, #0]
 8006404:	695b      	ldr	r3, [r3, #20]
 8006406:	43da      	mvns	r2, r3
 8006408:	68bb      	ldr	r3, [r7, #8]
 800640a:	4013      	ands	r3, r2
 800640c:	b29b      	uxth	r3, r3
 800640e:	2b00      	cmp	r3, #0
 8006410:	bf14      	ite	ne
 8006412:	2301      	movne	r3, #1
 8006414:	2300      	moveq	r3, #0
 8006416:	b2db      	uxtb	r3, r3
 8006418:	e00b      	b.n	8006432 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc2>
 800641a:	68fb      	ldr	r3, [r7, #12]
 800641c:	681b      	ldr	r3, [r3, #0]
 800641e:	699b      	ldr	r3, [r3, #24]
 8006420:	43da      	mvns	r2, r3
 8006422:	68bb      	ldr	r3, [r7, #8]
 8006424:	4013      	ands	r3, r2
 8006426:	b29b      	uxth	r3, r3
 8006428:	2b00      	cmp	r3, #0
 800642a:	bf14      	ite	ne
 800642c:	2301      	movne	r3, #1
 800642e:	2300      	moveq	r3, #0
 8006430:	b2db      	uxtb	r3, r3
 8006432:	2b00      	cmp	r3, #0
 8006434:	d016      	beq.n	8006464 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
        {
          hi2c->PreviousState       = I2C_STATE_NONE;
 8006436:	68fb      	ldr	r3, [r7, #12]
 8006438:	2200      	movs	r2, #0
 800643a:	631a      	str	r2, [r3, #48]	; 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 800643c:	68fb      	ldr	r3, [r7, #12]
 800643e:	2220      	movs	r2, #32
 8006440:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006444:	68fb      	ldr	r3, [r7, #12]
 8006446:	2200      	movs	r2, #0
 8006448:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800644c:	68fb      	ldr	r3, [r7, #12]
 800644e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006450:	f043 0220 	orr.w	r2, r3, #32
 8006454:	68fb      	ldr	r3, [r7, #12]
 8006456:	641a      	str	r2, [r3, #64]	; 0x40

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 8006458:	68fb      	ldr	r3, [r7, #12]
 800645a:	2200      	movs	r2, #0
 800645c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

          return HAL_ERROR;
 8006460:	2301      	movs	r3, #1
 8006462:	e021      	b.n	80064a8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8006464:	68bb      	ldr	r3, [r7, #8]
 8006466:	0c1b      	lsrs	r3, r3, #16
 8006468:	b2db      	uxtb	r3, r3
 800646a:	2b01      	cmp	r3, #1
 800646c:	d10c      	bne.n	8006488 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x118>
 800646e:	68fb      	ldr	r3, [r7, #12]
 8006470:	681b      	ldr	r3, [r3, #0]
 8006472:	695b      	ldr	r3, [r3, #20]
 8006474:	43da      	mvns	r2, r3
 8006476:	68bb      	ldr	r3, [r7, #8]
 8006478:	4013      	ands	r3, r2
 800647a:	b29b      	uxth	r3, r3
 800647c:	2b00      	cmp	r3, #0
 800647e:	bf14      	ite	ne
 8006480:	2301      	movne	r3, #1
 8006482:	2300      	moveq	r3, #0
 8006484:	b2db      	uxtb	r3, r3
 8006486:	e00b      	b.n	80064a0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x130>
 8006488:	68fb      	ldr	r3, [r7, #12]
 800648a:	681b      	ldr	r3, [r3, #0]
 800648c:	699b      	ldr	r3, [r3, #24]
 800648e:	43da      	mvns	r2, r3
 8006490:	68bb      	ldr	r3, [r7, #8]
 8006492:	4013      	ands	r3, r2
 8006494:	b29b      	uxth	r3, r3
 8006496:	2b00      	cmp	r3, #0
 8006498:	bf14      	ite	ne
 800649a:	2301      	movne	r3, #1
 800649c:	2300      	moveq	r3, #0
 800649e:	b2db      	uxtb	r3, r3
 80064a0:	2b00      	cmp	r3, #0
 80064a2:	f47f af6d 	bne.w	8006380 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
        }
      }
    }
  }
  return HAL_OK;
 80064a6:	2300      	movs	r3, #0
}
 80064a8:	4618      	mov	r0, r3
 80064aa:	3710      	adds	r7, #16
 80064ac:	46bd      	mov	sp, r7
 80064ae:	bd80      	pop	{r7, pc}

080064b0 <I2C_WaitOnTXEFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 80064b0:	b580      	push	{r7, lr}
 80064b2:	b084      	sub	sp, #16
 80064b4:	af00      	add	r7, sp, #0
 80064b6:	60f8      	str	r0, [r7, #12]
 80064b8:	60b9      	str	r1, [r7, #8]
 80064ba:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80064bc:	e034      	b.n	8006528 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
  {
    /* Check if a NACK is detected */
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80064be:	68f8      	ldr	r0, [r7, #12]
 80064c0:	f000 f8e3 	bl	800668a <I2C_IsAcknowledgeFailed>
 80064c4:	4603      	mov	r3, r0
 80064c6:	2b00      	cmp	r3, #0
 80064c8:	d001      	beq.n	80064ce <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
    {
      return HAL_ERROR;
 80064ca:	2301      	movs	r3, #1
 80064cc:	e034      	b.n	8006538 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 80064ce:	68bb      	ldr	r3, [r7, #8]
 80064d0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80064d4:	d028      	beq.n	8006528 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80064d6:	f7fd fd2d 	bl	8003f34 <HAL_GetTick>
 80064da:	4602      	mov	r2, r0
 80064dc:	687b      	ldr	r3, [r7, #4]
 80064de:	1ad3      	subs	r3, r2, r3
 80064e0:	68ba      	ldr	r2, [r7, #8]
 80064e2:	429a      	cmp	r2, r3
 80064e4:	d302      	bcc.n	80064ec <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 80064e6:	68bb      	ldr	r3, [r7, #8]
 80064e8:	2b00      	cmp	r3, #0
 80064ea:	d11d      	bne.n	8006528 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET))
 80064ec:	68fb      	ldr	r3, [r7, #12]
 80064ee:	681b      	ldr	r3, [r3, #0]
 80064f0:	695b      	ldr	r3, [r3, #20]
 80064f2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80064f6:	2b80      	cmp	r3, #128	; 0x80
 80064f8:	d016      	beq.n	8006528 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
        {
          hi2c->PreviousState       = I2C_STATE_NONE;
 80064fa:	68fb      	ldr	r3, [r7, #12]
 80064fc:	2200      	movs	r2, #0
 80064fe:	631a      	str	r2, [r3, #48]	; 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8006500:	68fb      	ldr	r3, [r7, #12]
 8006502:	2220      	movs	r2, #32
 8006504:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006508:	68fb      	ldr	r3, [r7, #12]
 800650a:	2200      	movs	r2, #0
 800650c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006510:	68fb      	ldr	r3, [r7, #12]
 8006512:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006514:	f043 0220 	orr.w	r2, r3, #32
 8006518:	68fb      	ldr	r3, [r7, #12]
 800651a:	641a      	str	r2, [r3, #64]	; 0x40

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 800651c:	68fb      	ldr	r3, [r7, #12]
 800651e:	2200      	movs	r2, #0
 8006520:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

          return HAL_ERROR;
 8006524:	2301      	movs	r3, #1
 8006526:	e007      	b.n	8006538 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8006528:	68fb      	ldr	r3, [r7, #12]
 800652a:	681b      	ldr	r3, [r3, #0]
 800652c:	695b      	ldr	r3, [r3, #20]
 800652e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006532:	2b80      	cmp	r3, #128	; 0x80
 8006534:	d1c3      	bne.n	80064be <I2C_WaitOnTXEFlagUntilTimeout+0xe>
        }
      }
    }
  }
  return HAL_OK;
 8006536:	2300      	movs	r3, #0
}
 8006538:	4618      	mov	r0, r3
 800653a:	3710      	adds	r7, #16
 800653c:	46bd      	mov	sp, r7
 800653e:	bd80      	pop	{r7, pc}

08006540 <I2C_WaitOnBTFFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnBTFFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 8006540:	b580      	push	{r7, lr}
 8006542:	b084      	sub	sp, #16
 8006544:	af00      	add	r7, sp, #0
 8006546:	60f8      	str	r0, [r7, #12]
 8006548:	60b9      	str	r1, [r7, #8]
 800654a:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800654c:	e034      	b.n	80065b8 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
  {
    /* Check if a NACK is detected */
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800654e:	68f8      	ldr	r0, [r7, #12]
 8006550:	f000 f89b 	bl	800668a <I2C_IsAcknowledgeFailed>
 8006554:	4603      	mov	r3, r0
 8006556:	2b00      	cmp	r3, #0
 8006558:	d001      	beq.n	800655e <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
    {
      return HAL_ERROR;
 800655a:	2301      	movs	r3, #1
 800655c:	e034      	b.n	80065c8 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 800655e:	68bb      	ldr	r3, [r7, #8]
 8006560:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006564:	d028      	beq.n	80065b8 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006566:	f7fd fce5 	bl	8003f34 <HAL_GetTick>
 800656a:	4602      	mov	r2, r0
 800656c:	687b      	ldr	r3, [r7, #4]
 800656e:	1ad3      	subs	r3, r2, r3
 8006570:	68ba      	ldr	r2, [r7, #8]
 8006572:	429a      	cmp	r2, r3
 8006574:	d302      	bcc.n	800657c <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 8006576:	68bb      	ldr	r3, [r7, #8]
 8006578:	2b00      	cmp	r3, #0
 800657a:	d11d      	bne.n	80065b8 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET))
 800657c:	68fb      	ldr	r3, [r7, #12]
 800657e:	681b      	ldr	r3, [r3, #0]
 8006580:	695b      	ldr	r3, [r3, #20]
 8006582:	f003 0304 	and.w	r3, r3, #4
 8006586:	2b04      	cmp	r3, #4
 8006588:	d016      	beq.n	80065b8 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
        {
          hi2c->PreviousState       = I2C_STATE_NONE;
 800658a:	68fb      	ldr	r3, [r7, #12]
 800658c:	2200      	movs	r2, #0
 800658e:	631a      	str	r2, [r3, #48]	; 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8006590:	68fb      	ldr	r3, [r7, #12]
 8006592:	2220      	movs	r2, #32
 8006594:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006598:	68fb      	ldr	r3, [r7, #12]
 800659a:	2200      	movs	r2, #0
 800659c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80065a0:	68fb      	ldr	r3, [r7, #12]
 80065a2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80065a4:	f043 0220 	orr.w	r2, r3, #32
 80065a8:	68fb      	ldr	r3, [r7, #12]
 80065aa:	641a      	str	r2, [r3, #64]	; 0x40

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 80065ac:	68fb      	ldr	r3, [r7, #12]
 80065ae:	2200      	movs	r2, #0
 80065b0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

          return HAL_ERROR;
 80065b4:	2301      	movs	r3, #1
 80065b6:	e007      	b.n	80065c8 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 80065b8:	68fb      	ldr	r3, [r7, #12]
 80065ba:	681b      	ldr	r3, [r3, #0]
 80065bc:	695b      	ldr	r3, [r3, #20]
 80065be:	f003 0304 	and.w	r3, r3, #4
 80065c2:	2b04      	cmp	r3, #4
 80065c4:	d1c3      	bne.n	800654e <I2C_WaitOnBTFFlagUntilTimeout+0xe>
        }
      }
    }
  }
  return HAL_OK;
 80065c6:	2300      	movs	r3, #0
}
 80065c8:	4618      	mov	r0, r3
 80065ca:	3710      	adds	r7, #16
 80065cc:	46bd      	mov	sp, r7
 80065ce:	bd80      	pop	{r7, pc}

080065d0 <I2C_WaitOnRXNEFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnRXNEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 80065d0:	b580      	push	{r7, lr}
 80065d2:	b084      	sub	sp, #16
 80065d4:	af00      	add	r7, sp, #0
 80065d6:	60f8      	str	r0, [r7, #12]
 80065d8:	60b9      	str	r1, [r7, #8]
 80065da:	607a      	str	r2, [r7, #4]

  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 80065dc:	e049      	b.n	8006672 <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
  {
    /* Check if a STOPF is detected */
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 80065de:	68fb      	ldr	r3, [r7, #12]
 80065e0:	681b      	ldr	r3, [r3, #0]
 80065e2:	695b      	ldr	r3, [r3, #20]
 80065e4:	f003 0310 	and.w	r3, r3, #16
 80065e8:	2b10      	cmp	r3, #16
 80065ea:	d119      	bne.n	8006620 <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80065ec:	68fb      	ldr	r3, [r7, #12]
 80065ee:	681b      	ldr	r3, [r3, #0]
 80065f0:	f06f 0210 	mvn.w	r2, #16
 80065f4:	615a      	str	r2, [r3, #20]

      hi2c->PreviousState       = I2C_STATE_NONE;
 80065f6:	68fb      	ldr	r3, [r7, #12]
 80065f8:	2200      	movs	r2, #0
 80065fa:	631a      	str	r2, [r3, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80065fc:	68fb      	ldr	r3, [r7, #12]
 80065fe:	2220      	movs	r2, #32
 8006600:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006604:	68fb      	ldr	r3, [r7, #12]
 8006606:	2200      	movs	r2, #0
 8006608:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800660c:	68fb      	ldr	r3, [r7, #12]
 800660e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8006610:	68fb      	ldr	r3, [r7, #12]
 8006612:	641a      	str	r2, [r3, #64]	; 0x40

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 8006614:	68fb      	ldr	r3, [r7, #12]
 8006616:	2200      	movs	r2, #0
 8006618:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

      return HAL_ERROR;
 800661c:	2301      	movs	r3, #1
 800661e:	e030      	b.n	8006682 <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
    }

    /* Check for the Timeout */
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006620:	f7fd fc88 	bl	8003f34 <HAL_GetTick>
 8006624:	4602      	mov	r2, r0
 8006626:	687b      	ldr	r3, [r7, #4]
 8006628:	1ad3      	subs	r3, r2, r3
 800662a:	68ba      	ldr	r2, [r7, #8]
 800662c:	429a      	cmp	r2, r3
 800662e:	d302      	bcc.n	8006636 <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 8006630:	68bb      	ldr	r3, [r7, #8]
 8006632:	2b00      	cmp	r3, #0
 8006634:	d11d      	bne.n	8006672 <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
    {
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET))
 8006636:	68fb      	ldr	r3, [r7, #12]
 8006638:	681b      	ldr	r3, [r3, #0]
 800663a:	695b      	ldr	r3, [r3, #20]
 800663c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006640:	2b40      	cmp	r3, #64	; 0x40
 8006642:	d016      	beq.n	8006672 <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
      {
        hi2c->PreviousState       = I2C_STATE_NONE;
 8006644:	68fb      	ldr	r3, [r7, #12]
 8006646:	2200      	movs	r2, #0
 8006648:	631a      	str	r2, [r3, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800664a:	68fb      	ldr	r3, [r7, #12]
 800664c:	2220      	movs	r2, #32
 800664e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006652:	68fb      	ldr	r3, [r7, #12]
 8006654:	2200      	movs	r2, #0
 8006656:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800665a:	68fb      	ldr	r3, [r7, #12]
 800665c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800665e:	f043 0220 	orr.w	r2, r3, #32
 8006662:	68fb      	ldr	r3, [r7, #12]
 8006664:	641a      	str	r2, [r3, #64]	; 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 8006666:	68fb      	ldr	r3, [r7, #12]
 8006668:	2200      	movs	r2, #0
 800666a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_ERROR;
 800666e:	2301      	movs	r3, #1
 8006670:	e007      	b.n	8006682 <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8006672:	68fb      	ldr	r3, [r7, #12]
 8006674:	681b      	ldr	r3, [r3, #0]
 8006676:	695b      	ldr	r3, [r3, #20]
 8006678:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800667c:	2b40      	cmp	r3, #64	; 0x40
 800667e:	d1ae      	bne.n	80065de <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
      }
    }
  }
  return HAL_OK;
 8006680:	2300      	movs	r3, #0
}
 8006682:	4618      	mov	r0, r3
 8006684:	3710      	adds	r7, #16
 8006686:	46bd      	mov	sp, r7
 8006688:	bd80      	pop	{r7, pc}

0800668a <I2C_IsAcknowledgeFailed>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
 800668a:	b480      	push	{r7}
 800668c:	b083      	sub	sp, #12
 800668e:	af00      	add	r7, sp, #0
 8006690:	6078      	str	r0, [r7, #4]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8006692:	687b      	ldr	r3, [r7, #4]
 8006694:	681b      	ldr	r3, [r3, #0]
 8006696:	695b      	ldr	r3, [r3, #20]
 8006698:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800669c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80066a0:	d11b      	bne.n	80066da <I2C_IsAcknowledgeFailed+0x50>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80066a2:	687b      	ldr	r3, [r7, #4]
 80066a4:	681b      	ldr	r3, [r3, #0]
 80066a6:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 80066aa:	615a      	str	r2, [r3, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
 80066ac:	687b      	ldr	r3, [r7, #4]
 80066ae:	2200      	movs	r2, #0
 80066b0:	631a      	str	r2, [r3, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 80066b2:	687b      	ldr	r3, [r7, #4]
 80066b4:	2220      	movs	r2, #32
 80066b6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 80066ba:	687b      	ldr	r3, [r7, #4]
 80066bc:	2200      	movs	r2, #0
 80066be:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80066c2:	687b      	ldr	r3, [r7, #4]
 80066c4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80066c6:	f043 0204 	orr.w	r2, r3, #4
 80066ca:	687b      	ldr	r3, [r7, #4]
 80066cc:	641a      	str	r2, [r3, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80066ce:	687b      	ldr	r3, [r7, #4]
 80066d0:	2200      	movs	r2, #0
 80066d2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    return HAL_ERROR;
 80066d6:	2301      	movs	r3, #1
 80066d8:	e000      	b.n	80066dc <I2C_IsAcknowledgeFailed+0x52>
  }
  return HAL_OK;
 80066da:	2300      	movs	r3, #0
}
 80066dc:	4618      	mov	r0, r3
 80066de:	370c      	adds	r7, #12
 80066e0:	46bd      	mov	sp, r7
 80066e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80066e6:	4770      	bx	lr

080066e8 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 80066e8:	b580      	push	{r7, lr}
 80066ea:	b086      	sub	sp, #24
 80066ec:	af00      	add	r7, sp, #0
 80066ee:	6078      	str	r0, [r7, #4]
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 80066f0:	687b      	ldr	r3, [r7, #4]
 80066f2:	2b00      	cmp	r3, #0
 80066f4:	d101      	bne.n	80066fa <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 80066f6:	2301      	movs	r3, #1
 80066f8:	e267      	b.n	8006bca <HAL_RCC_OscConfig+0x4e2>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80066fa:	687b      	ldr	r3, [r7, #4]
 80066fc:	681b      	ldr	r3, [r3, #0]
 80066fe:	f003 0301 	and.w	r3, r3, #1
 8006702:	2b00      	cmp	r3, #0
 8006704:	d075      	beq.n	80067f2 <HAL_RCC_OscConfig+0x10a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8006706:	4b88      	ldr	r3, [pc, #544]	; (8006928 <HAL_RCC_OscConfig+0x240>)
 8006708:	689b      	ldr	r3, [r3, #8]
 800670a:	f003 030c 	and.w	r3, r3, #12
 800670e:	2b04      	cmp	r3, #4
 8006710:	d00c      	beq.n	800672c <HAL_RCC_OscConfig+0x44>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8006712:	4b85      	ldr	r3, [pc, #532]	; (8006928 <HAL_RCC_OscConfig+0x240>)
 8006714:	689b      	ldr	r3, [r3, #8]
 8006716:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800671a:	2b08      	cmp	r3, #8
 800671c:	d112      	bne.n	8006744 <HAL_RCC_OscConfig+0x5c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800671e:	4b82      	ldr	r3, [pc, #520]	; (8006928 <HAL_RCC_OscConfig+0x240>)
 8006720:	685b      	ldr	r3, [r3, #4]
 8006722:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8006726:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800672a:	d10b      	bne.n	8006744 <HAL_RCC_OscConfig+0x5c>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800672c:	4b7e      	ldr	r3, [pc, #504]	; (8006928 <HAL_RCC_OscConfig+0x240>)
 800672e:	681b      	ldr	r3, [r3, #0]
 8006730:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8006734:	2b00      	cmp	r3, #0
 8006736:	d05b      	beq.n	80067f0 <HAL_RCC_OscConfig+0x108>
 8006738:	687b      	ldr	r3, [r7, #4]
 800673a:	685b      	ldr	r3, [r3, #4]
 800673c:	2b00      	cmp	r3, #0
 800673e:	d157      	bne.n	80067f0 <HAL_RCC_OscConfig+0x108>
      {
        return HAL_ERROR;
 8006740:	2301      	movs	r3, #1
 8006742:	e242      	b.n	8006bca <HAL_RCC_OscConfig+0x4e2>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006744:	687b      	ldr	r3, [r7, #4]
 8006746:	685b      	ldr	r3, [r3, #4]
 8006748:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800674c:	d106      	bne.n	800675c <HAL_RCC_OscConfig+0x74>
 800674e:	4b76      	ldr	r3, [pc, #472]	; (8006928 <HAL_RCC_OscConfig+0x240>)
 8006750:	681b      	ldr	r3, [r3, #0]
 8006752:	4a75      	ldr	r2, [pc, #468]	; (8006928 <HAL_RCC_OscConfig+0x240>)
 8006754:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8006758:	6013      	str	r3, [r2, #0]
 800675a:	e01d      	b.n	8006798 <HAL_RCC_OscConfig+0xb0>
 800675c:	687b      	ldr	r3, [r7, #4]
 800675e:	685b      	ldr	r3, [r3, #4]
 8006760:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8006764:	d10c      	bne.n	8006780 <HAL_RCC_OscConfig+0x98>
 8006766:	4b70      	ldr	r3, [pc, #448]	; (8006928 <HAL_RCC_OscConfig+0x240>)
 8006768:	681b      	ldr	r3, [r3, #0]
 800676a:	4a6f      	ldr	r2, [pc, #444]	; (8006928 <HAL_RCC_OscConfig+0x240>)
 800676c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8006770:	6013      	str	r3, [r2, #0]
 8006772:	4b6d      	ldr	r3, [pc, #436]	; (8006928 <HAL_RCC_OscConfig+0x240>)
 8006774:	681b      	ldr	r3, [r3, #0]
 8006776:	4a6c      	ldr	r2, [pc, #432]	; (8006928 <HAL_RCC_OscConfig+0x240>)
 8006778:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800677c:	6013      	str	r3, [r2, #0]
 800677e:	e00b      	b.n	8006798 <HAL_RCC_OscConfig+0xb0>
 8006780:	4b69      	ldr	r3, [pc, #420]	; (8006928 <HAL_RCC_OscConfig+0x240>)
 8006782:	681b      	ldr	r3, [r3, #0]
 8006784:	4a68      	ldr	r2, [pc, #416]	; (8006928 <HAL_RCC_OscConfig+0x240>)
 8006786:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800678a:	6013      	str	r3, [r2, #0]
 800678c:	4b66      	ldr	r3, [pc, #408]	; (8006928 <HAL_RCC_OscConfig+0x240>)
 800678e:	681b      	ldr	r3, [r3, #0]
 8006790:	4a65      	ldr	r2, [pc, #404]	; (8006928 <HAL_RCC_OscConfig+0x240>)
 8006792:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8006796:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8006798:	687b      	ldr	r3, [r7, #4]
 800679a:	685b      	ldr	r3, [r3, #4]
 800679c:	2b00      	cmp	r3, #0
 800679e:	d013      	beq.n	80067c8 <HAL_RCC_OscConfig+0xe0>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80067a0:	f7fd fbc8 	bl	8003f34 <HAL_GetTick>
 80067a4:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80067a6:	e008      	b.n	80067ba <HAL_RCC_OscConfig+0xd2>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80067a8:	f7fd fbc4 	bl	8003f34 <HAL_GetTick>
 80067ac:	4602      	mov	r2, r0
 80067ae:	693b      	ldr	r3, [r7, #16]
 80067b0:	1ad3      	subs	r3, r2, r3
 80067b2:	2b64      	cmp	r3, #100	; 0x64
 80067b4:	d901      	bls.n	80067ba <HAL_RCC_OscConfig+0xd2>
          {
            return HAL_TIMEOUT;
 80067b6:	2303      	movs	r3, #3
 80067b8:	e207      	b.n	8006bca <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80067ba:	4b5b      	ldr	r3, [pc, #364]	; (8006928 <HAL_RCC_OscConfig+0x240>)
 80067bc:	681b      	ldr	r3, [r3, #0]
 80067be:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80067c2:	2b00      	cmp	r3, #0
 80067c4:	d0f0      	beq.n	80067a8 <HAL_RCC_OscConfig+0xc0>
 80067c6:	e014      	b.n	80067f2 <HAL_RCC_OscConfig+0x10a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80067c8:	f7fd fbb4 	bl	8003f34 <HAL_GetTick>
 80067cc:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80067ce:	e008      	b.n	80067e2 <HAL_RCC_OscConfig+0xfa>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80067d0:	f7fd fbb0 	bl	8003f34 <HAL_GetTick>
 80067d4:	4602      	mov	r2, r0
 80067d6:	693b      	ldr	r3, [r7, #16]
 80067d8:	1ad3      	subs	r3, r2, r3
 80067da:	2b64      	cmp	r3, #100	; 0x64
 80067dc:	d901      	bls.n	80067e2 <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
 80067de:	2303      	movs	r3, #3
 80067e0:	e1f3      	b.n	8006bca <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80067e2:	4b51      	ldr	r3, [pc, #324]	; (8006928 <HAL_RCC_OscConfig+0x240>)
 80067e4:	681b      	ldr	r3, [r3, #0]
 80067e6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80067ea:	2b00      	cmp	r3, #0
 80067ec:	d1f0      	bne.n	80067d0 <HAL_RCC_OscConfig+0xe8>
 80067ee:	e000      	b.n	80067f2 <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80067f0:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80067f2:	687b      	ldr	r3, [r7, #4]
 80067f4:	681b      	ldr	r3, [r3, #0]
 80067f6:	f003 0302 	and.w	r3, r3, #2
 80067fa:	2b00      	cmp	r3, #0
 80067fc:	d063      	beq.n	80068c6 <HAL_RCC_OscConfig+0x1de>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 80067fe:	4b4a      	ldr	r3, [pc, #296]	; (8006928 <HAL_RCC_OscConfig+0x240>)
 8006800:	689b      	ldr	r3, [r3, #8]
 8006802:	f003 030c 	and.w	r3, r3, #12
 8006806:	2b00      	cmp	r3, #0
 8006808:	d00b      	beq.n	8006822 <HAL_RCC_OscConfig+0x13a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800680a:	4b47      	ldr	r3, [pc, #284]	; (8006928 <HAL_RCC_OscConfig+0x240>)
 800680c:	689b      	ldr	r3, [r3, #8]
 800680e:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8006812:	2b08      	cmp	r3, #8
 8006814:	d11c      	bne.n	8006850 <HAL_RCC_OscConfig+0x168>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8006816:	4b44      	ldr	r3, [pc, #272]	; (8006928 <HAL_RCC_OscConfig+0x240>)
 8006818:	685b      	ldr	r3, [r3, #4]
 800681a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800681e:	2b00      	cmp	r3, #0
 8006820:	d116      	bne.n	8006850 <HAL_RCC_OscConfig+0x168>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8006822:	4b41      	ldr	r3, [pc, #260]	; (8006928 <HAL_RCC_OscConfig+0x240>)
 8006824:	681b      	ldr	r3, [r3, #0]
 8006826:	f003 0302 	and.w	r3, r3, #2
 800682a:	2b00      	cmp	r3, #0
 800682c:	d005      	beq.n	800683a <HAL_RCC_OscConfig+0x152>
 800682e:	687b      	ldr	r3, [r7, #4]
 8006830:	68db      	ldr	r3, [r3, #12]
 8006832:	2b01      	cmp	r3, #1
 8006834:	d001      	beq.n	800683a <HAL_RCC_OscConfig+0x152>
      {
        return HAL_ERROR;
 8006836:	2301      	movs	r3, #1
 8006838:	e1c7      	b.n	8006bca <HAL_RCC_OscConfig+0x4e2>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800683a:	4b3b      	ldr	r3, [pc, #236]	; (8006928 <HAL_RCC_OscConfig+0x240>)
 800683c:	681b      	ldr	r3, [r3, #0]
 800683e:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8006842:	687b      	ldr	r3, [r7, #4]
 8006844:	691b      	ldr	r3, [r3, #16]
 8006846:	00db      	lsls	r3, r3, #3
 8006848:	4937      	ldr	r1, [pc, #220]	; (8006928 <HAL_RCC_OscConfig+0x240>)
 800684a:	4313      	orrs	r3, r2
 800684c:	600b      	str	r3, [r1, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800684e:	e03a      	b.n	80068c6 <HAL_RCC_OscConfig+0x1de>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8006850:	687b      	ldr	r3, [r7, #4]
 8006852:	68db      	ldr	r3, [r3, #12]
 8006854:	2b00      	cmp	r3, #0
 8006856:	d020      	beq.n	800689a <HAL_RCC_OscConfig+0x1b2>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8006858:	4b34      	ldr	r3, [pc, #208]	; (800692c <HAL_RCC_OscConfig+0x244>)
 800685a:	2201      	movs	r2, #1
 800685c:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800685e:	f7fd fb69 	bl	8003f34 <HAL_GetTick>
 8006862:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006864:	e008      	b.n	8006878 <HAL_RCC_OscConfig+0x190>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8006866:	f7fd fb65 	bl	8003f34 <HAL_GetTick>
 800686a:	4602      	mov	r2, r0
 800686c:	693b      	ldr	r3, [r7, #16]
 800686e:	1ad3      	subs	r3, r2, r3
 8006870:	2b02      	cmp	r3, #2
 8006872:	d901      	bls.n	8006878 <HAL_RCC_OscConfig+0x190>
          {
            return HAL_TIMEOUT;
 8006874:	2303      	movs	r3, #3
 8006876:	e1a8      	b.n	8006bca <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006878:	4b2b      	ldr	r3, [pc, #172]	; (8006928 <HAL_RCC_OscConfig+0x240>)
 800687a:	681b      	ldr	r3, [r3, #0]
 800687c:	f003 0302 	and.w	r3, r3, #2
 8006880:	2b00      	cmp	r3, #0
 8006882:	d0f0      	beq.n	8006866 <HAL_RCC_OscConfig+0x17e>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8006884:	4b28      	ldr	r3, [pc, #160]	; (8006928 <HAL_RCC_OscConfig+0x240>)
 8006886:	681b      	ldr	r3, [r3, #0]
 8006888:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800688c:	687b      	ldr	r3, [r7, #4]
 800688e:	691b      	ldr	r3, [r3, #16]
 8006890:	00db      	lsls	r3, r3, #3
 8006892:	4925      	ldr	r1, [pc, #148]	; (8006928 <HAL_RCC_OscConfig+0x240>)
 8006894:	4313      	orrs	r3, r2
 8006896:	600b      	str	r3, [r1, #0]
 8006898:	e015      	b.n	80068c6 <HAL_RCC_OscConfig+0x1de>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 800689a:	4b24      	ldr	r3, [pc, #144]	; (800692c <HAL_RCC_OscConfig+0x244>)
 800689c:	2200      	movs	r2, #0
 800689e:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80068a0:	f7fd fb48 	bl	8003f34 <HAL_GetTick>
 80068a4:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80068a6:	e008      	b.n	80068ba <HAL_RCC_OscConfig+0x1d2>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80068a8:	f7fd fb44 	bl	8003f34 <HAL_GetTick>
 80068ac:	4602      	mov	r2, r0
 80068ae:	693b      	ldr	r3, [r7, #16]
 80068b0:	1ad3      	subs	r3, r2, r3
 80068b2:	2b02      	cmp	r3, #2
 80068b4:	d901      	bls.n	80068ba <HAL_RCC_OscConfig+0x1d2>
          {
            return HAL_TIMEOUT;
 80068b6:	2303      	movs	r3, #3
 80068b8:	e187      	b.n	8006bca <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80068ba:	4b1b      	ldr	r3, [pc, #108]	; (8006928 <HAL_RCC_OscConfig+0x240>)
 80068bc:	681b      	ldr	r3, [r3, #0]
 80068be:	f003 0302 	and.w	r3, r3, #2
 80068c2:	2b00      	cmp	r3, #0
 80068c4:	d1f0      	bne.n	80068a8 <HAL_RCC_OscConfig+0x1c0>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80068c6:	687b      	ldr	r3, [r7, #4]
 80068c8:	681b      	ldr	r3, [r3, #0]
 80068ca:	f003 0308 	and.w	r3, r3, #8
 80068ce:	2b00      	cmp	r3, #0
 80068d0:	d036      	beq.n	8006940 <HAL_RCC_OscConfig+0x258>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 80068d2:	687b      	ldr	r3, [r7, #4]
 80068d4:	695b      	ldr	r3, [r3, #20]
 80068d6:	2b00      	cmp	r3, #0
 80068d8:	d016      	beq.n	8006908 <HAL_RCC_OscConfig+0x220>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 80068da:	4b15      	ldr	r3, [pc, #84]	; (8006930 <HAL_RCC_OscConfig+0x248>)
 80068dc:	2201      	movs	r2, #1
 80068de:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 80068e0:	f7fd fb28 	bl	8003f34 <HAL_GetTick>
 80068e4:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80068e6:	e008      	b.n	80068fa <HAL_RCC_OscConfig+0x212>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80068e8:	f7fd fb24 	bl	8003f34 <HAL_GetTick>
 80068ec:	4602      	mov	r2, r0
 80068ee:	693b      	ldr	r3, [r7, #16]
 80068f0:	1ad3      	subs	r3, r2, r3
 80068f2:	2b02      	cmp	r3, #2
 80068f4:	d901      	bls.n	80068fa <HAL_RCC_OscConfig+0x212>
        {
          return HAL_TIMEOUT;
 80068f6:	2303      	movs	r3, #3
 80068f8:	e167      	b.n	8006bca <HAL_RCC_OscConfig+0x4e2>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80068fa:	4b0b      	ldr	r3, [pc, #44]	; (8006928 <HAL_RCC_OscConfig+0x240>)
 80068fc:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80068fe:	f003 0302 	and.w	r3, r3, #2
 8006902:	2b00      	cmp	r3, #0
 8006904:	d0f0      	beq.n	80068e8 <HAL_RCC_OscConfig+0x200>
 8006906:	e01b      	b.n	8006940 <HAL_RCC_OscConfig+0x258>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8006908:	4b09      	ldr	r3, [pc, #36]	; (8006930 <HAL_RCC_OscConfig+0x248>)
 800690a:	2200      	movs	r2, #0
 800690c:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800690e:	f7fd fb11 	bl	8003f34 <HAL_GetTick>
 8006912:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8006914:	e00e      	b.n	8006934 <HAL_RCC_OscConfig+0x24c>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8006916:	f7fd fb0d 	bl	8003f34 <HAL_GetTick>
 800691a:	4602      	mov	r2, r0
 800691c:	693b      	ldr	r3, [r7, #16]
 800691e:	1ad3      	subs	r3, r2, r3
 8006920:	2b02      	cmp	r3, #2
 8006922:	d907      	bls.n	8006934 <HAL_RCC_OscConfig+0x24c>
        {
          return HAL_TIMEOUT;
 8006924:	2303      	movs	r3, #3
 8006926:	e150      	b.n	8006bca <HAL_RCC_OscConfig+0x4e2>
 8006928:	40023800 	.word	0x40023800
 800692c:	42470000 	.word	0x42470000
 8006930:	42470e80 	.word	0x42470e80
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8006934:	4b88      	ldr	r3, [pc, #544]	; (8006b58 <HAL_RCC_OscConfig+0x470>)
 8006936:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8006938:	f003 0302 	and.w	r3, r3, #2
 800693c:	2b00      	cmp	r3, #0
 800693e:	d1ea      	bne.n	8006916 <HAL_RCC_OscConfig+0x22e>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8006940:	687b      	ldr	r3, [r7, #4]
 8006942:	681b      	ldr	r3, [r3, #0]
 8006944:	f003 0304 	and.w	r3, r3, #4
 8006948:	2b00      	cmp	r3, #0
 800694a:	f000 8097 	beq.w	8006a7c <HAL_RCC_OscConfig+0x394>
  {
    FlagStatus       pwrclkchanged = RESET;
 800694e:	2300      	movs	r3, #0
 8006950:	75fb      	strb	r3, [r7, #23]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8006952:	4b81      	ldr	r3, [pc, #516]	; (8006b58 <HAL_RCC_OscConfig+0x470>)
 8006954:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006956:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800695a:	2b00      	cmp	r3, #0
 800695c:	d10f      	bne.n	800697e <HAL_RCC_OscConfig+0x296>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 800695e:	2300      	movs	r3, #0
 8006960:	60bb      	str	r3, [r7, #8]
 8006962:	4b7d      	ldr	r3, [pc, #500]	; (8006b58 <HAL_RCC_OscConfig+0x470>)
 8006964:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006966:	4a7c      	ldr	r2, [pc, #496]	; (8006b58 <HAL_RCC_OscConfig+0x470>)
 8006968:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800696c:	6413      	str	r3, [r2, #64]	; 0x40
 800696e:	4b7a      	ldr	r3, [pc, #488]	; (8006b58 <HAL_RCC_OscConfig+0x470>)
 8006970:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006972:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8006976:	60bb      	str	r3, [r7, #8]
 8006978:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 800697a:	2301      	movs	r3, #1
 800697c:	75fb      	strb	r3, [r7, #23]
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800697e:	4b77      	ldr	r3, [pc, #476]	; (8006b5c <HAL_RCC_OscConfig+0x474>)
 8006980:	681b      	ldr	r3, [r3, #0]
 8006982:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006986:	2b00      	cmp	r3, #0
 8006988:	d118      	bne.n	80069bc <HAL_RCC_OscConfig+0x2d4>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800698a:	4b74      	ldr	r3, [pc, #464]	; (8006b5c <HAL_RCC_OscConfig+0x474>)
 800698c:	681b      	ldr	r3, [r3, #0]
 800698e:	4a73      	ldr	r2, [pc, #460]	; (8006b5c <HAL_RCC_OscConfig+0x474>)
 8006990:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006994:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8006996:	f7fd facd 	bl	8003f34 <HAL_GetTick>
 800699a:	6138      	str	r0, [r7, #16]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800699c:	e008      	b.n	80069b0 <HAL_RCC_OscConfig+0x2c8>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800699e:	f7fd fac9 	bl	8003f34 <HAL_GetTick>
 80069a2:	4602      	mov	r2, r0
 80069a4:	693b      	ldr	r3, [r7, #16]
 80069a6:	1ad3      	subs	r3, r2, r3
 80069a8:	2b02      	cmp	r3, #2
 80069aa:	d901      	bls.n	80069b0 <HAL_RCC_OscConfig+0x2c8>
        {
          return HAL_TIMEOUT;
 80069ac:	2303      	movs	r3, #3
 80069ae:	e10c      	b.n	8006bca <HAL_RCC_OscConfig+0x4e2>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80069b0:	4b6a      	ldr	r3, [pc, #424]	; (8006b5c <HAL_RCC_OscConfig+0x474>)
 80069b2:	681b      	ldr	r3, [r3, #0]
 80069b4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80069b8:	2b00      	cmp	r3, #0
 80069ba:	d0f0      	beq.n	800699e <HAL_RCC_OscConfig+0x2b6>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80069bc:	687b      	ldr	r3, [r7, #4]
 80069be:	689b      	ldr	r3, [r3, #8]
 80069c0:	2b01      	cmp	r3, #1
 80069c2:	d106      	bne.n	80069d2 <HAL_RCC_OscConfig+0x2ea>
 80069c4:	4b64      	ldr	r3, [pc, #400]	; (8006b58 <HAL_RCC_OscConfig+0x470>)
 80069c6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80069c8:	4a63      	ldr	r2, [pc, #396]	; (8006b58 <HAL_RCC_OscConfig+0x470>)
 80069ca:	f043 0301 	orr.w	r3, r3, #1
 80069ce:	6713      	str	r3, [r2, #112]	; 0x70
 80069d0:	e01c      	b.n	8006a0c <HAL_RCC_OscConfig+0x324>
 80069d2:	687b      	ldr	r3, [r7, #4]
 80069d4:	689b      	ldr	r3, [r3, #8]
 80069d6:	2b05      	cmp	r3, #5
 80069d8:	d10c      	bne.n	80069f4 <HAL_RCC_OscConfig+0x30c>
 80069da:	4b5f      	ldr	r3, [pc, #380]	; (8006b58 <HAL_RCC_OscConfig+0x470>)
 80069dc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80069de:	4a5e      	ldr	r2, [pc, #376]	; (8006b58 <HAL_RCC_OscConfig+0x470>)
 80069e0:	f043 0304 	orr.w	r3, r3, #4
 80069e4:	6713      	str	r3, [r2, #112]	; 0x70
 80069e6:	4b5c      	ldr	r3, [pc, #368]	; (8006b58 <HAL_RCC_OscConfig+0x470>)
 80069e8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80069ea:	4a5b      	ldr	r2, [pc, #364]	; (8006b58 <HAL_RCC_OscConfig+0x470>)
 80069ec:	f043 0301 	orr.w	r3, r3, #1
 80069f0:	6713      	str	r3, [r2, #112]	; 0x70
 80069f2:	e00b      	b.n	8006a0c <HAL_RCC_OscConfig+0x324>
 80069f4:	4b58      	ldr	r3, [pc, #352]	; (8006b58 <HAL_RCC_OscConfig+0x470>)
 80069f6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80069f8:	4a57      	ldr	r2, [pc, #348]	; (8006b58 <HAL_RCC_OscConfig+0x470>)
 80069fa:	f023 0301 	bic.w	r3, r3, #1
 80069fe:	6713      	str	r3, [r2, #112]	; 0x70
 8006a00:	4b55      	ldr	r3, [pc, #340]	; (8006b58 <HAL_RCC_OscConfig+0x470>)
 8006a02:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006a04:	4a54      	ldr	r2, [pc, #336]	; (8006b58 <HAL_RCC_OscConfig+0x470>)
 8006a06:	f023 0304 	bic.w	r3, r3, #4
 8006a0a:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8006a0c:	687b      	ldr	r3, [r7, #4]
 8006a0e:	689b      	ldr	r3, [r3, #8]
 8006a10:	2b00      	cmp	r3, #0
 8006a12:	d015      	beq.n	8006a40 <HAL_RCC_OscConfig+0x358>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8006a14:	f7fd fa8e 	bl	8003f34 <HAL_GetTick>
 8006a18:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006a1a:	e00a      	b.n	8006a32 <HAL_RCC_OscConfig+0x34a>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006a1c:	f7fd fa8a 	bl	8003f34 <HAL_GetTick>
 8006a20:	4602      	mov	r2, r0
 8006a22:	693b      	ldr	r3, [r7, #16]
 8006a24:	1ad3      	subs	r3, r2, r3
 8006a26:	f241 3288 	movw	r2, #5000	; 0x1388
 8006a2a:	4293      	cmp	r3, r2
 8006a2c:	d901      	bls.n	8006a32 <HAL_RCC_OscConfig+0x34a>
        {
          return HAL_TIMEOUT;
 8006a2e:	2303      	movs	r3, #3
 8006a30:	e0cb      	b.n	8006bca <HAL_RCC_OscConfig+0x4e2>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006a32:	4b49      	ldr	r3, [pc, #292]	; (8006b58 <HAL_RCC_OscConfig+0x470>)
 8006a34:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006a36:	f003 0302 	and.w	r3, r3, #2
 8006a3a:	2b00      	cmp	r3, #0
 8006a3c:	d0ee      	beq.n	8006a1c <HAL_RCC_OscConfig+0x334>
 8006a3e:	e014      	b.n	8006a6a <HAL_RCC_OscConfig+0x382>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8006a40:	f7fd fa78 	bl	8003f34 <HAL_GetTick>
 8006a44:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8006a46:	e00a      	b.n	8006a5e <HAL_RCC_OscConfig+0x376>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006a48:	f7fd fa74 	bl	8003f34 <HAL_GetTick>
 8006a4c:	4602      	mov	r2, r0
 8006a4e:	693b      	ldr	r3, [r7, #16]
 8006a50:	1ad3      	subs	r3, r2, r3
 8006a52:	f241 3288 	movw	r2, #5000	; 0x1388
 8006a56:	4293      	cmp	r3, r2
 8006a58:	d901      	bls.n	8006a5e <HAL_RCC_OscConfig+0x376>
        {
          return HAL_TIMEOUT;
 8006a5a:	2303      	movs	r3, #3
 8006a5c:	e0b5      	b.n	8006bca <HAL_RCC_OscConfig+0x4e2>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8006a5e:	4b3e      	ldr	r3, [pc, #248]	; (8006b58 <HAL_RCC_OscConfig+0x470>)
 8006a60:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006a62:	f003 0302 	and.w	r3, r3, #2
 8006a66:	2b00      	cmp	r3, #0
 8006a68:	d1ee      	bne.n	8006a48 <HAL_RCC_OscConfig+0x360>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 8006a6a:	7dfb      	ldrb	r3, [r7, #23]
 8006a6c:	2b01      	cmp	r3, #1
 8006a6e:	d105      	bne.n	8006a7c <HAL_RCC_OscConfig+0x394>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8006a70:	4b39      	ldr	r3, [pc, #228]	; (8006b58 <HAL_RCC_OscConfig+0x470>)
 8006a72:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006a74:	4a38      	ldr	r2, [pc, #224]	; (8006b58 <HAL_RCC_OscConfig+0x470>)
 8006a76:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8006a7a:	6413      	str	r3, [r2, #64]	; 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8006a7c:	687b      	ldr	r3, [r7, #4]
 8006a7e:	699b      	ldr	r3, [r3, #24]
 8006a80:	2b00      	cmp	r3, #0
 8006a82:	f000 80a1 	beq.w	8006bc8 <HAL_RCC_OscConfig+0x4e0>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8006a86:	4b34      	ldr	r3, [pc, #208]	; (8006b58 <HAL_RCC_OscConfig+0x470>)
 8006a88:	689b      	ldr	r3, [r3, #8]
 8006a8a:	f003 030c 	and.w	r3, r3, #12
 8006a8e:	2b08      	cmp	r3, #8
 8006a90:	d05c      	beq.n	8006b4c <HAL_RCC_OscConfig+0x464>
    {
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8006a92:	687b      	ldr	r3, [r7, #4]
 8006a94:	699b      	ldr	r3, [r3, #24]
 8006a96:	2b02      	cmp	r3, #2
 8006a98:	d141      	bne.n	8006b1e <HAL_RCC_OscConfig+0x436>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8006a9a:	4b31      	ldr	r3, [pc, #196]	; (8006b60 <HAL_RCC_OscConfig+0x478>)
 8006a9c:	2200      	movs	r2, #0
 8006a9e:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8006aa0:	f7fd fa48 	bl	8003f34 <HAL_GetTick>
 8006aa4:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8006aa6:	e008      	b.n	8006aba <HAL_RCC_OscConfig+0x3d2>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8006aa8:	f7fd fa44 	bl	8003f34 <HAL_GetTick>
 8006aac:	4602      	mov	r2, r0
 8006aae:	693b      	ldr	r3, [r7, #16]
 8006ab0:	1ad3      	subs	r3, r2, r3
 8006ab2:	2b02      	cmp	r3, #2
 8006ab4:	d901      	bls.n	8006aba <HAL_RCC_OscConfig+0x3d2>
          {
            return HAL_TIMEOUT;
 8006ab6:	2303      	movs	r3, #3
 8006ab8:	e087      	b.n	8006bca <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8006aba:	4b27      	ldr	r3, [pc, #156]	; (8006b58 <HAL_RCC_OscConfig+0x470>)
 8006abc:	681b      	ldr	r3, [r3, #0]
 8006abe:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8006ac2:	2b00      	cmp	r3, #0
 8006ac4:	d1f0      	bne.n	8006aa8 <HAL_RCC_OscConfig+0x3c0>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8006ac6:	687b      	ldr	r3, [r7, #4]
 8006ac8:	69da      	ldr	r2, [r3, #28]
 8006aca:	687b      	ldr	r3, [r7, #4]
 8006acc:	6a1b      	ldr	r3, [r3, #32]
 8006ace:	431a      	orrs	r2, r3
 8006ad0:	687b      	ldr	r3, [r7, #4]
 8006ad2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006ad4:	019b      	lsls	r3, r3, #6
 8006ad6:	431a      	orrs	r2, r3
 8006ad8:	687b      	ldr	r3, [r7, #4]
 8006ada:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006adc:	085b      	lsrs	r3, r3, #1
 8006ade:	3b01      	subs	r3, #1
 8006ae0:	041b      	lsls	r3, r3, #16
 8006ae2:	431a      	orrs	r2, r3
 8006ae4:	687b      	ldr	r3, [r7, #4]
 8006ae6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006ae8:	061b      	lsls	r3, r3, #24
 8006aea:	491b      	ldr	r1, [pc, #108]	; (8006b58 <HAL_RCC_OscConfig+0x470>)
 8006aec:	4313      	orrs	r3, r2
 8006aee:	604b      	str	r3, [r1, #4]
                                 RCC_OscInitStruct->PLL.PLLM                                                 | \
                                 (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)             | \
                                 (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos) | \
                                 (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)));
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8006af0:	4b1b      	ldr	r3, [pc, #108]	; (8006b60 <HAL_RCC_OscConfig+0x478>)
 8006af2:	2201      	movs	r2, #1
 8006af4:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8006af6:	f7fd fa1d 	bl	8003f34 <HAL_GetTick>
 8006afa:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006afc:	e008      	b.n	8006b10 <HAL_RCC_OscConfig+0x428>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8006afe:	f7fd fa19 	bl	8003f34 <HAL_GetTick>
 8006b02:	4602      	mov	r2, r0
 8006b04:	693b      	ldr	r3, [r7, #16]
 8006b06:	1ad3      	subs	r3, r2, r3
 8006b08:	2b02      	cmp	r3, #2
 8006b0a:	d901      	bls.n	8006b10 <HAL_RCC_OscConfig+0x428>
          {
            return HAL_TIMEOUT;
 8006b0c:	2303      	movs	r3, #3
 8006b0e:	e05c      	b.n	8006bca <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006b10:	4b11      	ldr	r3, [pc, #68]	; (8006b58 <HAL_RCC_OscConfig+0x470>)
 8006b12:	681b      	ldr	r3, [r3, #0]
 8006b14:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8006b18:	2b00      	cmp	r3, #0
 8006b1a:	d0f0      	beq.n	8006afe <HAL_RCC_OscConfig+0x416>
 8006b1c:	e054      	b.n	8006bc8 <HAL_RCC_OscConfig+0x4e0>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8006b1e:	4b10      	ldr	r3, [pc, #64]	; (8006b60 <HAL_RCC_OscConfig+0x478>)
 8006b20:	2200      	movs	r2, #0
 8006b22:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8006b24:	f7fd fa06 	bl	8003f34 <HAL_GetTick>
 8006b28:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8006b2a:	e008      	b.n	8006b3e <HAL_RCC_OscConfig+0x456>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8006b2c:	f7fd fa02 	bl	8003f34 <HAL_GetTick>
 8006b30:	4602      	mov	r2, r0
 8006b32:	693b      	ldr	r3, [r7, #16]
 8006b34:	1ad3      	subs	r3, r2, r3
 8006b36:	2b02      	cmp	r3, #2
 8006b38:	d901      	bls.n	8006b3e <HAL_RCC_OscConfig+0x456>
          {
            return HAL_TIMEOUT;
 8006b3a:	2303      	movs	r3, #3
 8006b3c:	e045      	b.n	8006bca <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8006b3e:	4b06      	ldr	r3, [pc, #24]	; (8006b58 <HAL_RCC_OscConfig+0x470>)
 8006b40:	681b      	ldr	r3, [r3, #0]
 8006b42:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8006b46:	2b00      	cmp	r3, #0
 8006b48:	d1f0      	bne.n	8006b2c <HAL_RCC_OscConfig+0x444>
 8006b4a:	e03d      	b.n	8006bc8 <HAL_RCC_OscConfig+0x4e0>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8006b4c:	687b      	ldr	r3, [r7, #4]
 8006b4e:	699b      	ldr	r3, [r3, #24]
 8006b50:	2b01      	cmp	r3, #1
 8006b52:	d107      	bne.n	8006b64 <HAL_RCC_OscConfig+0x47c>
      {
        return HAL_ERROR;
 8006b54:	2301      	movs	r3, #1
 8006b56:	e038      	b.n	8006bca <HAL_RCC_OscConfig+0x4e2>
 8006b58:	40023800 	.word	0x40023800
 8006b5c:	40007000 	.word	0x40007000
 8006b60:	42470060 	.word	0x42470060
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->PLLCFGR;
 8006b64:	4b1b      	ldr	r3, [pc, #108]	; (8006bd4 <HAL_RCC_OscConfig+0x4ec>)
 8006b66:	685b      	ldr	r3, [r3, #4]
 8006b68:	60fb      	str	r3, [r7, #12]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
#else
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8006b6a:	687b      	ldr	r3, [r7, #4]
 8006b6c:	699b      	ldr	r3, [r3, #24]
 8006b6e:	2b01      	cmp	r3, #1
 8006b70:	d028      	beq.n	8006bc4 <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006b72:	68fb      	ldr	r3, [r7, #12]
 8006b74:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8006b78:	687b      	ldr	r3, [r7, #4]
 8006b7a:	69db      	ldr	r3, [r3, #28]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8006b7c:	429a      	cmp	r2, r3
 8006b7e:	d121      	bne.n	8006bc4 <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8006b80:	68fb      	ldr	r3, [r7, #12]
 8006b82:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8006b86:	687b      	ldr	r3, [r7, #4]
 8006b88:	6a1b      	ldr	r3, [r3, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006b8a:	429a      	cmp	r2, r3
 8006b8c:	d11a      	bne.n	8006bc4 <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8006b8e:	68fa      	ldr	r2, [r7, #12]
 8006b90:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8006b94:	4013      	ands	r3, r2
 8006b96:	687a      	ldr	r2, [r7, #4]
 8006b98:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8006b9a:	0192      	lsls	r2, r2, #6
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8006b9c:	4293      	cmp	r3, r2
 8006b9e:	d111      	bne.n	8006bc4 <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8006ba0:	68fb      	ldr	r3, [r7, #12]
 8006ba2:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8006ba6:	687b      	ldr	r3, [r7, #4]
 8006ba8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006baa:	085b      	lsrs	r3, r3, #1
 8006bac:	3b01      	subs	r3, #1
 8006bae:	041b      	lsls	r3, r3, #16
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8006bb0:	429a      	cmp	r2, r3
 8006bb2:	d107      	bne.n	8006bc4 <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 8006bb4:	68fb      	ldr	r3, [r7, #12]
 8006bb6:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8006bba:	687b      	ldr	r3, [r7, #4]
 8006bbc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006bbe:	061b      	lsls	r3, r3, #24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8006bc0:	429a      	cmp	r2, r3
 8006bc2:	d001      	beq.n	8006bc8 <HAL_RCC_OscConfig+0x4e0>
#endif
        {
          return HAL_ERROR;
 8006bc4:	2301      	movs	r3, #1
 8006bc6:	e000      	b.n	8006bca <HAL_RCC_OscConfig+0x4e2>
        }
      }
    }
  }
  return HAL_OK;
 8006bc8:	2300      	movs	r3, #0
}
 8006bca:	4618      	mov	r0, r3
 8006bcc:	3718      	adds	r7, #24
 8006bce:	46bd      	mov	sp, r7
 8006bd0:	bd80      	pop	{r7, pc}
 8006bd2:	bf00      	nop
 8006bd4:	40023800 	.word	0x40023800

08006bd8 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8006bd8:	b580      	push	{r7, lr}
 8006bda:	b084      	sub	sp, #16
 8006bdc:	af00      	add	r7, sp, #0
 8006bde:	6078      	str	r0, [r7, #4]
 8006be0:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 8006be2:	687b      	ldr	r3, [r7, #4]
 8006be4:	2b00      	cmp	r3, #0
 8006be6:	d101      	bne.n	8006bec <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8006be8:	2301      	movs	r3, #1
 8006bea:	e0cc      	b.n	8006d86 <HAL_RCC_ClockConfig+0x1ae>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8006bec:	4b68      	ldr	r3, [pc, #416]	; (8006d90 <HAL_RCC_ClockConfig+0x1b8>)
 8006bee:	681b      	ldr	r3, [r3, #0]
 8006bf0:	f003 0307 	and.w	r3, r3, #7
 8006bf4:	683a      	ldr	r2, [r7, #0]
 8006bf6:	429a      	cmp	r2, r3
 8006bf8:	d90c      	bls.n	8006c14 <HAL_RCC_ClockConfig+0x3c>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006bfa:	4b65      	ldr	r3, [pc, #404]	; (8006d90 <HAL_RCC_ClockConfig+0x1b8>)
 8006bfc:	683a      	ldr	r2, [r7, #0]
 8006bfe:	b2d2      	uxtb	r2, r2
 8006c00:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8006c02:	4b63      	ldr	r3, [pc, #396]	; (8006d90 <HAL_RCC_ClockConfig+0x1b8>)
 8006c04:	681b      	ldr	r3, [r3, #0]
 8006c06:	f003 0307 	and.w	r3, r3, #7
 8006c0a:	683a      	ldr	r2, [r7, #0]
 8006c0c:	429a      	cmp	r2, r3
 8006c0e:	d001      	beq.n	8006c14 <HAL_RCC_ClockConfig+0x3c>
    {
      return HAL_ERROR;
 8006c10:	2301      	movs	r3, #1
 8006c12:	e0b8      	b.n	8006d86 <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8006c14:	687b      	ldr	r3, [r7, #4]
 8006c16:	681b      	ldr	r3, [r3, #0]
 8006c18:	f003 0302 	and.w	r3, r3, #2
 8006c1c:	2b00      	cmp	r3, #0
 8006c1e:	d020      	beq.n	8006c62 <HAL_RCC_ClockConfig+0x8a>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8006c20:	687b      	ldr	r3, [r7, #4]
 8006c22:	681b      	ldr	r3, [r3, #0]
 8006c24:	f003 0304 	and.w	r3, r3, #4
 8006c28:	2b00      	cmp	r3, #0
 8006c2a:	d005      	beq.n	8006c38 <HAL_RCC_ClockConfig+0x60>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8006c2c:	4b59      	ldr	r3, [pc, #356]	; (8006d94 <HAL_RCC_ClockConfig+0x1bc>)
 8006c2e:	689b      	ldr	r3, [r3, #8]
 8006c30:	4a58      	ldr	r2, [pc, #352]	; (8006d94 <HAL_RCC_ClockConfig+0x1bc>)
 8006c32:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8006c36:	6093      	str	r3, [r2, #8]
    }

    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8006c38:	687b      	ldr	r3, [r7, #4]
 8006c3a:	681b      	ldr	r3, [r3, #0]
 8006c3c:	f003 0308 	and.w	r3, r3, #8
 8006c40:	2b00      	cmp	r3, #0
 8006c42:	d005      	beq.n	8006c50 <HAL_RCC_ClockConfig+0x78>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8006c44:	4b53      	ldr	r3, [pc, #332]	; (8006d94 <HAL_RCC_ClockConfig+0x1bc>)
 8006c46:	689b      	ldr	r3, [r3, #8]
 8006c48:	4a52      	ldr	r2, [pc, #328]	; (8006d94 <HAL_RCC_ClockConfig+0x1bc>)
 8006c4a:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8006c4e:	6093      	str	r3, [r2, #8]
    }

    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8006c50:	4b50      	ldr	r3, [pc, #320]	; (8006d94 <HAL_RCC_ClockConfig+0x1bc>)
 8006c52:	689b      	ldr	r3, [r3, #8]
 8006c54:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8006c58:	687b      	ldr	r3, [r7, #4]
 8006c5a:	689b      	ldr	r3, [r3, #8]
 8006c5c:	494d      	ldr	r1, [pc, #308]	; (8006d94 <HAL_RCC_ClockConfig+0x1bc>)
 8006c5e:	4313      	orrs	r3, r2
 8006c60:	608b      	str	r3, [r1, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8006c62:	687b      	ldr	r3, [r7, #4]
 8006c64:	681b      	ldr	r3, [r3, #0]
 8006c66:	f003 0301 	and.w	r3, r3, #1
 8006c6a:	2b00      	cmp	r3, #0
 8006c6c:	d044      	beq.n	8006cf8 <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8006c6e:	687b      	ldr	r3, [r7, #4]
 8006c70:	685b      	ldr	r3, [r3, #4]
 8006c72:	2b01      	cmp	r3, #1
 8006c74:	d107      	bne.n	8006c86 <HAL_RCC_ClockConfig+0xae>
    {
      /* Check the HSE ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006c76:	4b47      	ldr	r3, [pc, #284]	; (8006d94 <HAL_RCC_ClockConfig+0x1bc>)
 8006c78:	681b      	ldr	r3, [r3, #0]
 8006c7a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8006c7e:	2b00      	cmp	r3, #0
 8006c80:	d119      	bne.n	8006cb6 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8006c82:	2301      	movs	r3, #1
 8006c84:	e07f      	b.n	8006d86 <HAL_RCC_ClockConfig+0x1ae>
      }
    }
    /* PLL is selected as System Clock Source */
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8006c86:	687b      	ldr	r3, [r7, #4]
 8006c88:	685b      	ldr	r3, [r3, #4]
 8006c8a:	2b02      	cmp	r3, #2
 8006c8c:	d003      	beq.n	8006c96 <HAL_RCC_ClockConfig+0xbe>
            (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 8006c8e:	687b      	ldr	r3, [r7, #4]
 8006c90:	685b      	ldr	r3, [r3, #4]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8006c92:	2b03      	cmp	r3, #3
 8006c94:	d107      	bne.n	8006ca6 <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the PLL ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006c96:	4b3f      	ldr	r3, [pc, #252]	; (8006d94 <HAL_RCC_ClockConfig+0x1bc>)
 8006c98:	681b      	ldr	r3, [r3, #0]
 8006c9a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8006c9e:	2b00      	cmp	r3, #0
 8006ca0:	d109      	bne.n	8006cb6 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8006ca2:	2301      	movs	r3, #1
 8006ca4:	e06f      	b.n	8006d86 <HAL_RCC_ClockConfig+0x1ae>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006ca6:	4b3b      	ldr	r3, [pc, #236]	; (8006d94 <HAL_RCC_ClockConfig+0x1bc>)
 8006ca8:	681b      	ldr	r3, [r3, #0]
 8006caa:	f003 0302 	and.w	r3, r3, #2
 8006cae:	2b00      	cmp	r3, #0
 8006cb0:	d101      	bne.n	8006cb6 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8006cb2:	2301      	movs	r3, #1
 8006cb4:	e067      	b.n	8006d86 <HAL_RCC_ClockConfig+0x1ae>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8006cb6:	4b37      	ldr	r3, [pc, #220]	; (8006d94 <HAL_RCC_ClockConfig+0x1bc>)
 8006cb8:	689b      	ldr	r3, [r3, #8]
 8006cba:	f023 0203 	bic.w	r2, r3, #3
 8006cbe:	687b      	ldr	r3, [r7, #4]
 8006cc0:	685b      	ldr	r3, [r3, #4]
 8006cc2:	4934      	ldr	r1, [pc, #208]	; (8006d94 <HAL_RCC_ClockConfig+0x1bc>)
 8006cc4:	4313      	orrs	r3, r2
 8006cc6:	608b      	str	r3, [r1, #8]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8006cc8:	f7fd f934 	bl	8003f34 <HAL_GetTick>
 8006ccc:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8006cce:	e00a      	b.n	8006ce6 <HAL_RCC_ClockConfig+0x10e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006cd0:	f7fd f930 	bl	8003f34 <HAL_GetTick>
 8006cd4:	4602      	mov	r2, r0
 8006cd6:	68fb      	ldr	r3, [r7, #12]
 8006cd8:	1ad3      	subs	r3, r2, r3
 8006cda:	f241 3288 	movw	r2, #5000	; 0x1388
 8006cde:	4293      	cmp	r3, r2
 8006ce0:	d901      	bls.n	8006ce6 <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
 8006ce2:	2303      	movs	r3, #3
 8006ce4:	e04f      	b.n	8006d86 <HAL_RCC_ClockConfig+0x1ae>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8006ce6:	4b2b      	ldr	r3, [pc, #172]	; (8006d94 <HAL_RCC_ClockConfig+0x1bc>)
 8006ce8:	689b      	ldr	r3, [r3, #8]
 8006cea:	f003 020c 	and.w	r2, r3, #12
 8006cee:	687b      	ldr	r3, [r7, #4]
 8006cf0:	685b      	ldr	r3, [r3, #4]
 8006cf2:	009b      	lsls	r3, r3, #2
 8006cf4:	429a      	cmp	r2, r3
 8006cf6:	d1eb      	bne.n	8006cd0 <HAL_RCC_ClockConfig+0xf8>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8006cf8:	4b25      	ldr	r3, [pc, #148]	; (8006d90 <HAL_RCC_ClockConfig+0x1b8>)
 8006cfa:	681b      	ldr	r3, [r3, #0]
 8006cfc:	f003 0307 	and.w	r3, r3, #7
 8006d00:	683a      	ldr	r2, [r7, #0]
 8006d02:	429a      	cmp	r2, r3
 8006d04:	d20c      	bcs.n	8006d20 <HAL_RCC_ClockConfig+0x148>
  {
     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006d06:	4b22      	ldr	r3, [pc, #136]	; (8006d90 <HAL_RCC_ClockConfig+0x1b8>)
 8006d08:	683a      	ldr	r2, [r7, #0]
 8006d0a:	b2d2      	uxtb	r2, r2
 8006d0c:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8006d0e:	4b20      	ldr	r3, [pc, #128]	; (8006d90 <HAL_RCC_ClockConfig+0x1b8>)
 8006d10:	681b      	ldr	r3, [r3, #0]
 8006d12:	f003 0307 	and.w	r3, r3, #7
 8006d16:	683a      	ldr	r2, [r7, #0]
 8006d18:	429a      	cmp	r2, r3
 8006d1a:	d001      	beq.n	8006d20 <HAL_RCC_ClockConfig+0x148>
    {
      return HAL_ERROR;
 8006d1c:	2301      	movs	r3, #1
 8006d1e:	e032      	b.n	8006d86 <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8006d20:	687b      	ldr	r3, [r7, #4]
 8006d22:	681b      	ldr	r3, [r3, #0]
 8006d24:	f003 0304 	and.w	r3, r3, #4
 8006d28:	2b00      	cmp	r3, #0
 8006d2a:	d008      	beq.n	8006d3e <HAL_RCC_ClockConfig+0x166>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8006d2c:	4b19      	ldr	r3, [pc, #100]	; (8006d94 <HAL_RCC_ClockConfig+0x1bc>)
 8006d2e:	689b      	ldr	r3, [r3, #8]
 8006d30:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8006d34:	687b      	ldr	r3, [r7, #4]
 8006d36:	68db      	ldr	r3, [r3, #12]
 8006d38:	4916      	ldr	r1, [pc, #88]	; (8006d94 <HAL_RCC_ClockConfig+0x1bc>)
 8006d3a:	4313      	orrs	r3, r2
 8006d3c:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8006d3e:	687b      	ldr	r3, [r7, #4]
 8006d40:	681b      	ldr	r3, [r3, #0]
 8006d42:	f003 0308 	and.w	r3, r3, #8
 8006d46:	2b00      	cmp	r3, #0
 8006d48:	d009      	beq.n	8006d5e <HAL_RCC_ClockConfig+0x186>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8006d4a:	4b12      	ldr	r3, [pc, #72]	; (8006d94 <HAL_RCC_ClockConfig+0x1bc>)
 8006d4c:	689b      	ldr	r3, [r3, #8]
 8006d4e:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8006d52:	687b      	ldr	r3, [r7, #4]
 8006d54:	691b      	ldr	r3, [r3, #16]
 8006d56:	00db      	lsls	r3, r3, #3
 8006d58:	490e      	ldr	r1, [pc, #56]	; (8006d94 <HAL_RCC_ClockConfig+0x1bc>)
 8006d5a:	4313      	orrs	r3, r2
 8006d5c:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8006d5e:	f000 f821 	bl	8006da4 <HAL_RCC_GetSysClockFreq>
 8006d62:	4602      	mov	r2, r0
 8006d64:	4b0b      	ldr	r3, [pc, #44]	; (8006d94 <HAL_RCC_ClockConfig+0x1bc>)
 8006d66:	689b      	ldr	r3, [r3, #8]
 8006d68:	091b      	lsrs	r3, r3, #4
 8006d6a:	f003 030f 	and.w	r3, r3, #15
 8006d6e:	490a      	ldr	r1, [pc, #40]	; (8006d98 <HAL_RCC_ClockConfig+0x1c0>)
 8006d70:	5ccb      	ldrb	r3, [r1, r3]
 8006d72:	fa22 f303 	lsr.w	r3, r2, r3
 8006d76:	4a09      	ldr	r2, [pc, #36]	; (8006d9c <HAL_RCC_ClockConfig+0x1c4>)
 8006d78:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings */
  HAL_InitTick (uwTickPrio);
 8006d7a:	4b09      	ldr	r3, [pc, #36]	; (8006da0 <HAL_RCC_ClockConfig+0x1c8>)
 8006d7c:	681b      	ldr	r3, [r3, #0]
 8006d7e:	4618      	mov	r0, r3
 8006d80:	f7fd f894 	bl	8003eac <HAL_InitTick>

  return HAL_OK;
 8006d84:	2300      	movs	r3, #0
}
 8006d86:	4618      	mov	r0, r3
 8006d88:	3710      	adds	r7, #16
 8006d8a:	46bd      	mov	sp, r7
 8006d8c:	bd80      	pop	{r7, pc}
 8006d8e:	bf00      	nop
 8006d90:	40023c00 	.word	0x40023c00
 8006d94:	40023800 	.word	0x40023800
 8006d98:	0802ddc0 	.word	0x0802ddc0
 8006d9c:	20000004 	.word	0x20000004
 8006da0:	20000010 	.word	0x20000010

08006da4 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
__weak uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8006da4:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8006da8:	b090      	sub	sp, #64	; 0x40
 8006daa:	af00      	add	r7, sp, #0
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
 8006dac:	2300      	movs	r3, #0
 8006dae:	637b      	str	r3, [r7, #52]	; 0x34
 8006db0:	2300      	movs	r3, #0
 8006db2:	63fb      	str	r3, [r7, #60]	; 0x3c
 8006db4:	2300      	movs	r3, #0
 8006db6:	633b      	str	r3, [r7, #48]	; 0x30
  uint32_t sysclockfreq = 0U;
 8006db8:	2300      	movs	r3, #0
 8006dba:	63bb      	str	r3, [r7, #56]	; 0x38

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006dbc:	4b59      	ldr	r3, [pc, #356]	; (8006f24 <HAL_RCC_GetSysClockFreq+0x180>)
 8006dbe:	689b      	ldr	r3, [r3, #8]
 8006dc0:	f003 030c 	and.w	r3, r3, #12
 8006dc4:	2b08      	cmp	r3, #8
 8006dc6:	d00d      	beq.n	8006de4 <HAL_RCC_GetSysClockFreq+0x40>
 8006dc8:	2b08      	cmp	r3, #8
 8006dca:	f200 80a1 	bhi.w	8006f10 <HAL_RCC_GetSysClockFreq+0x16c>
 8006dce:	2b00      	cmp	r3, #0
 8006dd0:	d002      	beq.n	8006dd8 <HAL_RCC_GetSysClockFreq+0x34>
 8006dd2:	2b04      	cmp	r3, #4
 8006dd4:	d003      	beq.n	8006dde <HAL_RCC_GetSysClockFreq+0x3a>
 8006dd6:	e09b      	b.n	8006f10 <HAL_RCC_GetSysClockFreq+0x16c>
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 8006dd8:	4b53      	ldr	r3, [pc, #332]	; (8006f28 <HAL_RCC_GetSysClockFreq+0x184>)
 8006dda:	63bb      	str	r3, [r7, #56]	; 0x38
       break;
 8006ddc:	e09b      	b.n	8006f16 <HAL_RCC_GetSysClockFreq+0x172>
    }
    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 8006dde:	4b53      	ldr	r3, [pc, #332]	; (8006f2c <HAL_RCC_GetSysClockFreq+0x188>)
 8006de0:	63bb      	str	r3, [r7, #56]	; 0x38
      break;
 8006de2:	e098      	b.n	8006f16 <HAL_RCC_GetSysClockFreq+0x172>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8006de4:	4b4f      	ldr	r3, [pc, #316]	; (8006f24 <HAL_RCC_GetSysClockFreq+0x180>)
 8006de6:	685b      	ldr	r3, [r3, #4]
 8006de8:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8006dec:	637b      	str	r3, [r7, #52]	; 0x34
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8006dee:	4b4d      	ldr	r3, [pc, #308]	; (8006f24 <HAL_RCC_GetSysClockFreq+0x180>)
 8006df0:	685b      	ldr	r3, [r3, #4]
 8006df2:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8006df6:	2b00      	cmp	r3, #0
 8006df8:	d028      	beq.n	8006e4c <HAL_RCC_GetSysClockFreq+0xa8>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006dfa:	4b4a      	ldr	r3, [pc, #296]	; (8006f24 <HAL_RCC_GetSysClockFreq+0x180>)
 8006dfc:	685b      	ldr	r3, [r3, #4]
 8006dfe:	099b      	lsrs	r3, r3, #6
 8006e00:	2200      	movs	r2, #0
 8006e02:	623b      	str	r3, [r7, #32]
 8006e04:	627a      	str	r2, [r7, #36]	; 0x24
 8006e06:	6a3b      	ldr	r3, [r7, #32]
 8006e08:	f3c3 0008 	ubfx	r0, r3, #0, #9
 8006e0c:	2100      	movs	r1, #0
 8006e0e:	4b47      	ldr	r3, [pc, #284]	; (8006f2c <HAL_RCC_GetSysClockFreq+0x188>)
 8006e10:	fb03 f201 	mul.w	r2, r3, r1
 8006e14:	2300      	movs	r3, #0
 8006e16:	fb00 f303 	mul.w	r3, r0, r3
 8006e1a:	4413      	add	r3, r2
 8006e1c:	4a43      	ldr	r2, [pc, #268]	; (8006f2c <HAL_RCC_GetSysClockFreq+0x188>)
 8006e1e:	fba0 1202 	umull	r1, r2, r0, r2
 8006e22:	62fa      	str	r2, [r7, #44]	; 0x2c
 8006e24:	460a      	mov	r2, r1
 8006e26:	62ba      	str	r2, [r7, #40]	; 0x28
 8006e28:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8006e2a:	4413      	add	r3, r2
 8006e2c:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006e2e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8006e30:	2200      	movs	r2, #0
 8006e32:	61bb      	str	r3, [r7, #24]
 8006e34:	61fa      	str	r2, [r7, #28]
 8006e36:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8006e3a:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 8006e3e:	f7f9 fe8d 	bl	8000b5c <__aeabi_uldivmod>
 8006e42:	4602      	mov	r2, r0
 8006e44:	460b      	mov	r3, r1
 8006e46:	4613      	mov	r3, r2
 8006e48:	63fb      	str	r3, [r7, #60]	; 0x3c
 8006e4a:	e053      	b.n	8006ef4 <HAL_RCC_GetSysClockFreq+0x150>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006e4c:	4b35      	ldr	r3, [pc, #212]	; (8006f24 <HAL_RCC_GetSysClockFreq+0x180>)
 8006e4e:	685b      	ldr	r3, [r3, #4]
 8006e50:	099b      	lsrs	r3, r3, #6
 8006e52:	2200      	movs	r2, #0
 8006e54:	613b      	str	r3, [r7, #16]
 8006e56:	617a      	str	r2, [r7, #20]
 8006e58:	693b      	ldr	r3, [r7, #16]
 8006e5a:	f3c3 0a08 	ubfx	sl, r3, #0, #9
 8006e5e:	f04f 0b00 	mov.w	fp, #0
 8006e62:	4652      	mov	r2, sl
 8006e64:	465b      	mov	r3, fp
 8006e66:	f04f 0000 	mov.w	r0, #0
 8006e6a:	f04f 0100 	mov.w	r1, #0
 8006e6e:	0159      	lsls	r1, r3, #5
 8006e70:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8006e74:	0150      	lsls	r0, r2, #5
 8006e76:	4602      	mov	r2, r0
 8006e78:	460b      	mov	r3, r1
 8006e7a:	ebb2 080a 	subs.w	r8, r2, sl
 8006e7e:	eb63 090b 	sbc.w	r9, r3, fp
 8006e82:	f04f 0200 	mov.w	r2, #0
 8006e86:	f04f 0300 	mov.w	r3, #0
 8006e8a:	ea4f 1389 	mov.w	r3, r9, lsl #6
 8006e8e:	ea43 6398 	orr.w	r3, r3, r8, lsr #26
 8006e92:	ea4f 1288 	mov.w	r2, r8, lsl #6
 8006e96:	ebb2 0408 	subs.w	r4, r2, r8
 8006e9a:	eb63 0509 	sbc.w	r5, r3, r9
 8006e9e:	f04f 0200 	mov.w	r2, #0
 8006ea2:	f04f 0300 	mov.w	r3, #0
 8006ea6:	00eb      	lsls	r3, r5, #3
 8006ea8:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8006eac:	00e2      	lsls	r2, r4, #3
 8006eae:	4614      	mov	r4, r2
 8006eb0:	461d      	mov	r5, r3
 8006eb2:	eb14 030a 	adds.w	r3, r4, sl
 8006eb6:	603b      	str	r3, [r7, #0]
 8006eb8:	eb45 030b 	adc.w	r3, r5, fp
 8006ebc:	607b      	str	r3, [r7, #4]
 8006ebe:	f04f 0200 	mov.w	r2, #0
 8006ec2:	f04f 0300 	mov.w	r3, #0
 8006ec6:	e9d7 4500 	ldrd	r4, r5, [r7]
 8006eca:	4629      	mov	r1, r5
 8006ecc:	028b      	lsls	r3, r1, #10
 8006ece:	4621      	mov	r1, r4
 8006ed0:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8006ed4:	4621      	mov	r1, r4
 8006ed6:	028a      	lsls	r2, r1, #10
 8006ed8:	4610      	mov	r0, r2
 8006eda:	4619      	mov	r1, r3
 8006edc:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8006ede:	2200      	movs	r2, #0
 8006ee0:	60bb      	str	r3, [r7, #8]
 8006ee2:	60fa      	str	r2, [r7, #12]
 8006ee4:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8006ee8:	f7f9 fe38 	bl	8000b5c <__aeabi_uldivmod>
 8006eec:	4602      	mov	r2, r0
 8006eee:	460b      	mov	r3, r1
 8006ef0:	4613      	mov	r3, r2
 8006ef2:	63fb      	str	r3, [r7, #60]	; 0x3c
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8006ef4:	4b0b      	ldr	r3, [pc, #44]	; (8006f24 <HAL_RCC_GetSysClockFreq+0x180>)
 8006ef6:	685b      	ldr	r3, [r3, #4]
 8006ef8:	0c1b      	lsrs	r3, r3, #16
 8006efa:	f003 0303 	and.w	r3, r3, #3
 8006efe:	3301      	adds	r3, #1
 8006f00:	005b      	lsls	r3, r3, #1
 8006f02:	633b      	str	r3, [r7, #48]	; 0x30

      sysclockfreq = pllvco/pllp;
 8006f04:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8006f06:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006f08:	fbb2 f3f3 	udiv	r3, r2, r3
 8006f0c:	63bb      	str	r3, [r7, #56]	; 0x38
      break;
 8006f0e:	e002      	b.n	8006f16 <HAL_RCC_GetSysClockFreq+0x172>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
 8006f10:	4b05      	ldr	r3, [pc, #20]	; (8006f28 <HAL_RCC_GetSysClockFreq+0x184>)
 8006f12:	63bb      	str	r3, [r7, #56]	; 0x38
      break;
 8006f14:	bf00      	nop
    }
  }
  return sysclockfreq;
 8006f16:	6bbb      	ldr	r3, [r7, #56]	; 0x38
}
 8006f18:	4618      	mov	r0, r3
 8006f1a:	3740      	adds	r7, #64	; 0x40
 8006f1c:	46bd      	mov	sp, r7
 8006f1e:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8006f22:	bf00      	nop
 8006f24:	40023800 	.word	0x40023800
 8006f28:	00f42400 	.word	0x00f42400
 8006f2c:	017d7840 	.word	0x017d7840

08006f30 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8006f30:	b480      	push	{r7}
 8006f32:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 8006f34:	4b03      	ldr	r3, [pc, #12]	; (8006f44 <HAL_RCC_GetHCLKFreq+0x14>)
 8006f36:	681b      	ldr	r3, [r3, #0]
}
 8006f38:	4618      	mov	r0, r3
 8006f3a:	46bd      	mov	sp, r7
 8006f3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f40:	4770      	bx	lr
 8006f42:	bf00      	nop
 8006f44:	20000004 	.word	0x20000004

08006f48 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8006f48:	b580      	push	{r7, lr}
 8006f4a:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8006f4c:	f7ff fff0 	bl	8006f30 <HAL_RCC_GetHCLKFreq>
 8006f50:	4602      	mov	r2, r0
 8006f52:	4b05      	ldr	r3, [pc, #20]	; (8006f68 <HAL_RCC_GetPCLK1Freq+0x20>)
 8006f54:	689b      	ldr	r3, [r3, #8]
 8006f56:	0a9b      	lsrs	r3, r3, #10
 8006f58:	f003 0307 	and.w	r3, r3, #7
 8006f5c:	4903      	ldr	r1, [pc, #12]	; (8006f6c <HAL_RCC_GetPCLK1Freq+0x24>)
 8006f5e:	5ccb      	ldrb	r3, [r1, r3]
 8006f60:	fa22 f303 	lsr.w	r3, r2, r3
}
 8006f64:	4618      	mov	r0, r3
 8006f66:	bd80      	pop	{r7, pc}
 8006f68:	40023800 	.word	0x40023800
 8006f6c:	0802ddd0 	.word	0x0802ddd0

08006f70 <HAL_SPI_Init>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 8006f70:	b580      	push	{r7, lr}
 8006f72:	b082      	sub	sp, #8
 8006f74:	af00      	add	r7, sp, #0
 8006f76:	6078      	str	r0, [r7, #4]
  /* Check the SPI handle allocation */
  if (hspi == NULL)
 8006f78:	687b      	ldr	r3, [r7, #4]
 8006f7a:	2b00      	cmp	r3, #0
 8006f7c:	d101      	bne.n	8006f82 <HAL_SPI_Init+0x12>
  {
    return HAL_ERROR;
 8006f7e:	2301      	movs	r3, #1
 8006f80:	e07b      	b.n	800707a <HAL_SPI_Init+0x10a>
  assert_param(IS_SPI_DATASIZE(hspi->Init.DataSize));
  assert_param(IS_SPI_NSS(hspi->Init.NSS));
  assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
  assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
  assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 8006f82:	687b      	ldr	r3, [r7, #4]
 8006f84:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006f86:	2b00      	cmp	r3, #0
 8006f88:	d108      	bne.n	8006f9c <HAL_SPI_Init+0x2c>
  {
    assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
    assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));

    if (hspi->Init.Mode == SPI_MODE_MASTER)
 8006f8a:	687b      	ldr	r3, [r7, #4]
 8006f8c:	685b      	ldr	r3, [r3, #4]
 8006f8e:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8006f92:	d009      	beq.n	8006fa8 <HAL_SPI_Init+0x38>
      assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
    }
    else
    {
      /* Baudrate prescaler not use in Motoraola Slave mode. force to default value */
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8006f94:	687b      	ldr	r3, [r7, #4]
 8006f96:	2200      	movs	r2, #0
 8006f98:	61da      	str	r2, [r3, #28]
 8006f9a:	e005      	b.n	8006fa8 <HAL_SPI_Init+0x38>
  else
  {
    assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));

    /* Force polarity and phase to TI protocaol requirements */
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 8006f9c:	687b      	ldr	r3, [r7, #4]
 8006f9e:	2200      	movs	r2, #0
 8006fa0:	611a      	str	r2, [r3, #16]
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 8006fa2:	687b      	ldr	r3, [r7, #4]
 8006fa4:	2200      	movs	r2, #0
 8006fa6:	615a      	str	r2, [r3, #20]
  if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
  {
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8006fa8:	687b      	ldr	r3, [r7, #4]
 8006faa:	2200      	movs	r2, #0
 8006fac:	629a      	str	r2, [r3, #40]	; 0x28
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 8006fae:	687b      	ldr	r3, [r7, #4]
 8006fb0:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8006fb4:	b2db      	uxtb	r3, r3
 8006fb6:	2b00      	cmp	r3, #0
 8006fb8:	d106      	bne.n	8006fc8 <HAL_SPI_Init+0x58>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 8006fba:	687b      	ldr	r3, [r7, #4]
 8006fbc:	2200      	movs	r2, #0
 8006fbe:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 8006fc2:	6878      	ldr	r0, [r7, #4]
 8006fc4:	f7fb feec 	bl	8002da0 <HAL_SPI_MspInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }

  hspi->State = HAL_SPI_STATE_BUSY;
 8006fc8:	687b      	ldr	r3, [r7, #4]
 8006fca:	2202      	movs	r2, #2
 8006fcc:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 8006fd0:	687b      	ldr	r3, [r7, #4]
 8006fd2:	681b      	ldr	r3, [r3, #0]
 8006fd4:	681a      	ldr	r2, [r3, #0]
 8006fd6:	687b      	ldr	r3, [r7, #4]
 8006fd8:	681b      	ldr	r3, [r3, #0]
 8006fda:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8006fde:	601a      	str	r2, [r3, #0]

  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Data size, Clock polarity and phase, NSS management,
  Communication speed, First bit and CRC calculation state */
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8006fe0:	687b      	ldr	r3, [r7, #4]
 8006fe2:	685b      	ldr	r3, [r3, #4]
 8006fe4:	f403 7282 	and.w	r2, r3, #260	; 0x104
 8006fe8:	687b      	ldr	r3, [r7, #4]
 8006fea:	689b      	ldr	r3, [r3, #8]
 8006fec:	f403 4304 	and.w	r3, r3, #33792	; 0x8400
 8006ff0:	431a      	orrs	r2, r3
 8006ff2:	687b      	ldr	r3, [r7, #4]
 8006ff4:	68db      	ldr	r3, [r3, #12]
 8006ff6:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8006ffa:	431a      	orrs	r2, r3
 8006ffc:	687b      	ldr	r3, [r7, #4]
 8006ffe:	691b      	ldr	r3, [r3, #16]
 8007000:	f003 0302 	and.w	r3, r3, #2
 8007004:	431a      	orrs	r2, r3
 8007006:	687b      	ldr	r3, [r7, #4]
 8007008:	695b      	ldr	r3, [r3, #20]
 800700a:	f003 0301 	and.w	r3, r3, #1
 800700e:	431a      	orrs	r2, r3
 8007010:	687b      	ldr	r3, [r7, #4]
 8007012:	699b      	ldr	r3, [r3, #24]
 8007014:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8007018:	431a      	orrs	r2, r3
 800701a:	687b      	ldr	r3, [r7, #4]
 800701c:	69db      	ldr	r3, [r3, #28]
 800701e:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8007022:	431a      	orrs	r2, r3
 8007024:	687b      	ldr	r3, [r7, #4]
 8007026:	6a1b      	ldr	r3, [r3, #32]
 8007028:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800702c:	ea42 0103 	orr.w	r1, r2, r3
 8007030:	687b      	ldr	r3, [r7, #4]
 8007032:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007034:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 8007038:	687b      	ldr	r3, [r7, #4]
 800703a:	681b      	ldr	r3, [r3, #0]
 800703c:	430a      	orrs	r2, r1
 800703e:	601a      	str	r2, [r3, #0]
                                  (hspi->Init.BaudRatePrescaler & SPI_CR1_BR_Msk) |
                                  (hspi->Init.FirstBit  & SPI_CR1_LSBFIRST) |
                                  (hspi->Init.CRCCalculation & SPI_CR1_CRCEN)));

  /* Configure : NSS management, TI Mode */
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 8007040:	687b      	ldr	r3, [r7, #4]
 8007042:	699b      	ldr	r3, [r3, #24]
 8007044:	0c1b      	lsrs	r3, r3, #16
 8007046:	f003 0104 	and.w	r1, r3, #4
 800704a:	687b      	ldr	r3, [r7, #4]
 800704c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800704e:	f003 0210 	and.w	r2, r3, #16
 8007052:	687b      	ldr	r3, [r7, #4]
 8007054:	681b      	ldr	r3, [r3, #0]
 8007056:	430a      	orrs	r2, r1
 8007058:	605a      	str	r2, [r3, #4]
  }
#endif /* USE_SPI_CRC */

#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800705a:	687b      	ldr	r3, [r7, #4]
 800705c:	681b      	ldr	r3, [r3, #0]
 800705e:	69da      	ldr	r2, [r3, #28]
 8007060:	687b      	ldr	r3, [r7, #4]
 8007062:	681b      	ldr	r3, [r3, #0]
 8007064:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8007068:	61da      	str	r2, [r3, #28]
#endif /* SPI_I2SCFGR_I2SMOD */

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800706a:	687b      	ldr	r3, [r7, #4]
 800706c:	2200      	movs	r2, #0
 800706e:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8007070:	687b      	ldr	r3, [r7, #4]
 8007072:	2201      	movs	r2, #1
 8007074:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

  return HAL_OK;
 8007078:	2300      	movs	r3, #0
}
 800707a:	4618      	mov	r0, r3
 800707c:	3708      	adds	r7, #8
 800707e:	46bd      	mov	sp, r7
 8007080:	bd80      	pop	{r7, pc}

08007082 <HAL_SPI_Transmit>:
  * @param  Size amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8007082:	b580      	push	{r7, lr}
 8007084:	b088      	sub	sp, #32
 8007086:	af00      	add	r7, sp, #0
 8007088:	60f8      	str	r0, [r7, #12]
 800708a:	60b9      	str	r1, [r7, #8]
 800708c:	603b      	str	r3, [r7, #0]
 800708e:	4613      	mov	r3, r2
 8007090:	80fb      	strh	r3, [r7, #6]
  uint32_t tickstart;
  HAL_StatusTypeDef errorcode = HAL_OK;
 8007092:	2300      	movs	r3, #0
 8007094:	77fb      	strb	r3, [r7, #31]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));

  /* Process Locked */
  __HAL_LOCK(hspi);
 8007096:	68fb      	ldr	r3, [r7, #12]
 8007098:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 800709c:	2b01      	cmp	r3, #1
 800709e:	d101      	bne.n	80070a4 <HAL_SPI_Transmit+0x22>
 80070a0:	2302      	movs	r3, #2
 80070a2:	e12d      	b.n	8007300 <HAL_SPI_Transmit+0x27e>
 80070a4:	68fb      	ldr	r3, [r7, #12]
 80070a6:	2201      	movs	r2, #1
 80070a8:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 80070ac:	f7fc ff42 	bl	8003f34 <HAL_GetTick>
 80070b0:	61b8      	str	r0, [r7, #24]
  initial_TxXferCount = Size;
 80070b2:	88fb      	ldrh	r3, [r7, #6]
 80070b4:	82fb      	strh	r3, [r7, #22]

  if (hspi->State != HAL_SPI_STATE_READY)
 80070b6:	68fb      	ldr	r3, [r7, #12]
 80070b8:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 80070bc:	b2db      	uxtb	r3, r3
 80070be:	2b01      	cmp	r3, #1
 80070c0:	d002      	beq.n	80070c8 <HAL_SPI_Transmit+0x46>
  {
    errorcode = HAL_BUSY;
 80070c2:	2302      	movs	r3, #2
 80070c4:	77fb      	strb	r3, [r7, #31]
    goto error;
 80070c6:	e116      	b.n	80072f6 <HAL_SPI_Transmit+0x274>
  }

  if ((pData == NULL) || (Size == 0U))
 80070c8:	68bb      	ldr	r3, [r7, #8]
 80070ca:	2b00      	cmp	r3, #0
 80070cc:	d002      	beq.n	80070d4 <HAL_SPI_Transmit+0x52>
 80070ce:	88fb      	ldrh	r3, [r7, #6]
 80070d0:	2b00      	cmp	r3, #0
 80070d2:	d102      	bne.n	80070da <HAL_SPI_Transmit+0x58>
  {
    errorcode = HAL_ERROR;
 80070d4:	2301      	movs	r3, #1
 80070d6:	77fb      	strb	r3, [r7, #31]
    goto error;
 80070d8:	e10d      	b.n	80072f6 <HAL_SPI_Transmit+0x274>
  }

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 80070da:	68fb      	ldr	r3, [r7, #12]
 80070dc:	2203      	movs	r2, #3
 80070de:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80070e2:	68fb      	ldr	r3, [r7, #12]
 80070e4:	2200      	movs	r2, #0
 80070e6:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 80070e8:	68fb      	ldr	r3, [r7, #12]
 80070ea:	68ba      	ldr	r2, [r7, #8]
 80070ec:	631a      	str	r2, [r3, #48]	; 0x30
  hspi->TxXferSize  = Size;
 80070ee:	68fb      	ldr	r3, [r7, #12]
 80070f0:	88fa      	ldrh	r2, [r7, #6]
 80070f2:	869a      	strh	r2, [r3, #52]	; 0x34
  hspi->TxXferCount = Size;
 80070f4:	68fb      	ldr	r3, [r7, #12]
 80070f6:	88fa      	ldrh	r2, [r7, #6]
 80070f8:	86da      	strh	r2, [r3, #54]	; 0x36

  /*Init field not used in handle to zero */
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 80070fa:	68fb      	ldr	r3, [r7, #12]
 80070fc:	2200      	movs	r2, #0
 80070fe:	639a      	str	r2, [r3, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 8007100:	68fb      	ldr	r3, [r7, #12]
 8007102:	2200      	movs	r2, #0
 8007104:	879a      	strh	r2, [r3, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 8007106:	68fb      	ldr	r3, [r7, #12]
 8007108:	2200      	movs	r2, #0
 800710a:	87da      	strh	r2, [r3, #62]	; 0x3e
  hspi->TxISR       = NULL;
 800710c:	68fb      	ldr	r3, [r7, #12]
 800710e:	2200      	movs	r2, #0
 8007110:	645a      	str	r2, [r3, #68]	; 0x44
  hspi->RxISR       = NULL;
 8007112:	68fb      	ldr	r3, [r7, #12]
 8007114:	2200      	movs	r2, #0
 8007116:	641a      	str	r2, [r3, #64]	; 0x40

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007118:	68fb      	ldr	r3, [r7, #12]
 800711a:	689b      	ldr	r3, [r3, #8]
 800711c:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8007120:	d10f      	bne.n	8007142 <HAL_SPI_Transmit+0xc0>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 8007122:	68fb      	ldr	r3, [r7, #12]
 8007124:	681b      	ldr	r3, [r3, #0]
 8007126:	681a      	ldr	r2, [r3, #0]
 8007128:	68fb      	ldr	r3, [r7, #12]
 800712a:	681b      	ldr	r3, [r3, #0]
 800712c:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8007130:	601a      	str	r2, [r3, #0]
    SPI_1LINE_TX(hspi);
 8007132:	68fb      	ldr	r3, [r7, #12]
 8007134:	681b      	ldr	r3, [r3, #0]
 8007136:	681a      	ldr	r2, [r3, #0]
 8007138:	68fb      	ldr	r3, [r7, #12]
 800713a:	681b      	ldr	r3, [r3, #0]
 800713c:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8007140:	601a      	str	r2, [r3, #0]
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007142:	68fb      	ldr	r3, [r7, #12]
 8007144:	681b      	ldr	r3, [r3, #0]
 8007146:	681b      	ldr	r3, [r3, #0]
 8007148:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800714c:	2b40      	cmp	r3, #64	; 0x40
 800714e:	d007      	beq.n	8007160 <HAL_SPI_Transmit+0xde>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 8007150:	68fb      	ldr	r3, [r7, #12]
 8007152:	681b      	ldr	r3, [r3, #0]
 8007154:	681a      	ldr	r2, [r3, #0]
 8007156:	68fb      	ldr	r3, [r7, #12]
 8007158:	681b      	ldr	r3, [r3, #0]
 800715a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800715e:	601a      	str	r2, [r3, #0]
  }

  /* Transmit data in 16 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007160:	68fb      	ldr	r3, [r7, #12]
 8007162:	68db      	ldr	r3, [r3, #12]
 8007164:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8007168:	d14f      	bne.n	800720a <HAL_SPI_Transmit+0x188>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800716a:	68fb      	ldr	r3, [r7, #12]
 800716c:	685b      	ldr	r3, [r3, #4]
 800716e:	2b00      	cmp	r3, #0
 8007170:	d002      	beq.n	8007178 <HAL_SPI_Transmit+0xf6>
 8007172:	8afb      	ldrh	r3, [r7, #22]
 8007174:	2b01      	cmp	r3, #1
 8007176:	d142      	bne.n	80071fe <HAL_SPI_Transmit+0x17c>
    {
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007178:	68fb      	ldr	r3, [r7, #12]
 800717a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800717c:	881a      	ldrh	r2, [r3, #0]
 800717e:	68fb      	ldr	r3, [r7, #12]
 8007180:	681b      	ldr	r3, [r3, #0]
 8007182:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8007184:	68fb      	ldr	r3, [r7, #12]
 8007186:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007188:	1c9a      	adds	r2, r3, #2
 800718a:	68fb      	ldr	r3, [r7, #12]
 800718c:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 800718e:	68fb      	ldr	r3, [r7, #12]
 8007190:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8007192:	b29b      	uxth	r3, r3
 8007194:	3b01      	subs	r3, #1
 8007196:	b29a      	uxth	r2, r3
 8007198:	68fb      	ldr	r3, [r7, #12]
 800719a:	86da      	strh	r2, [r3, #54]	; 0x36
    }
    /* Transmit data in 16 Bit mode */
    while (hspi->TxXferCount > 0U)
 800719c:	e02f      	b.n	80071fe <HAL_SPI_Transmit+0x17c>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800719e:	68fb      	ldr	r3, [r7, #12]
 80071a0:	681b      	ldr	r3, [r3, #0]
 80071a2:	689b      	ldr	r3, [r3, #8]
 80071a4:	f003 0302 	and.w	r3, r3, #2
 80071a8:	2b02      	cmp	r3, #2
 80071aa:	d112      	bne.n	80071d2 <HAL_SPI_Transmit+0x150>
      {
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 80071ac:	68fb      	ldr	r3, [r7, #12]
 80071ae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80071b0:	881a      	ldrh	r2, [r3, #0]
 80071b2:	68fb      	ldr	r3, [r7, #12]
 80071b4:	681b      	ldr	r3, [r3, #0]
 80071b6:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 80071b8:	68fb      	ldr	r3, [r7, #12]
 80071ba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80071bc:	1c9a      	adds	r2, r3, #2
 80071be:	68fb      	ldr	r3, [r7, #12]
 80071c0:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 80071c2:	68fb      	ldr	r3, [r7, #12]
 80071c4:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80071c6:	b29b      	uxth	r3, r3
 80071c8:	3b01      	subs	r3, #1
 80071ca:	b29a      	uxth	r2, r3
 80071cc:	68fb      	ldr	r3, [r7, #12]
 80071ce:	86da      	strh	r2, [r3, #54]	; 0x36
 80071d0:	e015      	b.n	80071fe <HAL_SPI_Transmit+0x17c>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80071d2:	f7fc feaf 	bl	8003f34 <HAL_GetTick>
 80071d6:	4602      	mov	r2, r0
 80071d8:	69bb      	ldr	r3, [r7, #24]
 80071da:	1ad3      	subs	r3, r2, r3
 80071dc:	683a      	ldr	r2, [r7, #0]
 80071de:	429a      	cmp	r2, r3
 80071e0:	d803      	bhi.n	80071ea <HAL_SPI_Transmit+0x168>
 80071e2:	683b      	ldr	r3, [r7, #0]
 80071e4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80071e8:	d102      	bne.n	80071f0 <HAL_SPI_Transmit+0x16e>
 80071ea:	683b      	ldr	r3, [r7, #0]
 80071ec:	2b00      	cmp	r3, #0
 80071ee:	d106      	bne.n	80071fe <HAL_SPI_Transmit+0x17c>
        {
          errorcode = HAL_TIMEOUT;
 80071f0:	2303      	movs	r3, #3
 80071f2:	77fb      	strb	r3, [r7, #31]
          hspi->State = HAL_SPI_STATE_READY;
 80071f4:	68fb      	ldr	r3, [r7, #12]
 80071f6:	2201      	movs	r2, #1
 80071f8:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
          goto error;
 80071fc:	e07b      	b.n	80072f6 <HAL_SPI_Transmit+0x274>
    while (hspi->TxXferCount > 0U)
 80071fe:	68fb      	ldr	r3, [r7, #12]
 8007200:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8007202:	b29b      	uxth	r3, r3
 8007204:	2b00      	cmp	r3, #0
 8007206:	d1ca      	bne.n	800719e <HAL_SPI_Transmit+0x11c>
 8007208:	e050      	b.n	80072ac <HAL_SPI_Transmit+0x22a>
    }
  }
  /* Transmit data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800720a:	68fb      	ldr	r3, [r7, #12]
 800720c:	685b      	ldr	r3, [r3, #4]
 800720e:	2b00      	cmp	r3, #0
 8007210:	d002      	beq.n	8007218 <HAL_SPI_Transmit+0x196>
 8007212:	8afb      	ldrh	r3, [r7, #22]
 8007214:	2b01      	cmp	r3, #1
 8007216:	d144      	bne.n	80072a2 <HAL_SPI_Transmit+0x220>
    {
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007218:	68fb      	ldr	r3, [r7, #12]
 800721a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800721c:	68fb      	ldr	r3, [r7, #12]
 800721e:	681b      	ldr	r3, [r3, #0]
 8007220:	330c      	adds	r3, #12
 8007222:	7812      	ldrb	r2, [r2, #0]
 8007224:	701a      	strb	r2, [r3, #0]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8007226:	68fb      	ldr	r3, [r7, #12]
 8007228:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800722a:	1c5a      	adds	r2, r3, #1
 800722c:	68fb      	ldr	r3, [r7, #12]
 800722e:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 8007230:	68fb      	ldr	r3, [r7, #12]
 8007232:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8007234:	b29b      	uxth	r3, r3
 8007236:	3b01      	subs	r3, #1
 8007238:	b29a      	uxth	r2, r3
 800723a:	68fb      	ldr	r3, [r7, #12]
 800723c:	86da      	strh	r2, [r3, #54]	; 0x36
    }
    while (hspi->TxXferCount > 0U)
 800723e:	e030      	b.n	80072a2 <HAL_SPI_Transmit+0x220>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8007240:	68fb      	ldr	r3, [r7, #12]
 8007242:	681b      	ldr	r3, [r3, #0]
 8007244:	689b      	ldr	r3, [r3, #8]
 8007246:	f003 0302 	and.w	r3, r3, #2
 800724a:	2b02      	cmp	r3, #2
 800724c:	d113      	bne.n	8007276 <HAL_SPI_Transmit+0x1f4>
      {
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800724e:	68fb      	ldr	r3, [r7, #12]
 8007250:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8007252:	68fb      	ldr	r3, [r7, #12]
 8007254:	681b      	ldr	r3, [r3, #0]
 8007256:	330c      	adds	r3, #12
 8007258:	7812      	ldrb	r2, [r2, #0]
 800725a:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800725c:	68fb      	ldr	r3, [r7, #12]
 800725e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007260:	1c5a      	adds	r2, r3, #1
 8007262:	68fb      	ldr	r3, [r7, #12]
 8007264:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 8007266:	68fb      	ldr	r3, [r7, #12]
 8007268:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800726a:	b29b      	uxth	r3, r3
 800726c:	3b01      	subs	r3, #1
 800726e:	b29a      	uxth	r2, r3
 8007270:	68fb      	ldr	r3, [r7, #12]
 8007272:	86da      	strh	r2, [r3, #54]	; 0x36
 8007274:	e015      	b.n	80072a2 <HAL_SPI_Transmit+0x220>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007276:	f7fc fe5d 	bl	8003f34 <HAL_GetTick>
 800727a:	4602      	mov	r2, r0
 800727c:	69bb      	ldr	r3, [r7, #24]
 800727e:	1ad3      	subs	r3, r2, r3
 8007280:	683a      	ldr	r2, [r7, #0]
 8007282:	429a      	cmp	r2, r3
 8007284:	d803      	bhi.n	800728e <HAL_SPI_Transmit+0x20c>
 8007286:	683b      	ldr	r3, [r7, #0]
 8007288:	f1b3 3fff 	cmp.w	r3, #4294967295
 800728c:	d102      	bne.n	8007294 <HAL_SPI_Transmit+0x212>
 800728e:	683b      	ldr	r3, [r7, #0]
 8007290:	2b00      	cmp	r3, #0
 8007292:	d106      	bne.n	80072a2 <HAL_SPI_Transmit+0x220>
        {
          errorcode = HAL_TIMEOUT;
 8007294:	2303      	movs	r3, #3
 8007296:	77fb      	strb	r3, [r7, #31]
          hspi->State = HAL_SPI_STATE_READY;
 8007298:	68fb      	ldr	r3, [r7, #12]
 800729a:	2201      	movs	r2, #1
 800729c:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
          goto error;
 80072a0:	e029      	b.n	80072f6 <HAL_SPI_Transmit+0x274>
    while (hspi->TxXferCount > 0U)
 80072a2:	68fb      	ldr	r3, [r7, #12]
 80072a4:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80072a6:	b29b      	uxth	r3, r3
 80072a8:	2b00      	cmp	r3, #0
 80072aa:	d1c9      	bne.n	8007240 <HAL_SPI_Transmit+0x1be>
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80072ac:	69ba      	ldr	r2, [r7, #24]
 80072ae:	6839      	ldr	r1, [r7, #0]
 80072b0:	68f8      	ldr	r0, [r7, #12]
 80072b2:	f000 fe25 	bl	8007f00 <SPI_EndRxTxTransaction>
 80072b6:	4603      	mov	r3, r0
 80072b8:	2b00      	cmp	r3, #0
 80072ba:	d002      	beq.n	80072c2 <HAL_SPI_Transmit+0x240>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80072bc:	68fb      	ldr	r3, [r7, #12]
 80072be:	2220      	movs	r2, #32
 80072c0:	655a      	str	r2, [r3, #84]	; 0x54
  }

  /* Clear overrun flag in 2 Lines communication mode because received is not read */
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 80072c2:	68fb      	ldr	r3, [r7, #12]
 80072c4:	689b      	ldr	r3, [r3, #8]
 80072c6:	2b00      	cmp	r3, #0
 80072c8:	d10a      	bne.n	80072e0 <HAL_SPI_Transmit+0x25e>
  {
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 80072ca:	2300      	movs	r3, #0
 80072cc:	613b      	str	r3, [r7, #16]
 80072ce:	68fb      	ldr	r3, [r7, #12]
 80072d0:	681b      	ldr	r3, [r3, #0]
 80072d2:	68db      	ldr	r3, [r3, #12]
 80072d4:	613b      	str	r3, [r7, #16]
 80072d6:	68fb      	ldr	r3, [r7, #12]
 80072d8:	681b      	ldr	r3, [r3, #0]
 80072da:	689b      	ldr	r3, [r3, #8]
 80072dc:	613b      	str	r3, [r7, #16]
 80072de:	693b      	ldr	r3, [r7, #16]
  }

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80072e0:	68fb      	ldr	r3, [r7, #12]
 80072e2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80072e4:	2b00      	cmp	r3, #0
 80072e6:	d002      	beq.n	80072ee <HAL_SPI_Transmit+0x26c>
  {
    errorcode = HAL_ERROR;
 80072e8:	2301      	movs	r3, #1
 80072ea:	77fb      	strb	r3, [r7, #31]
 80072ec:	e003      	b.n	80072f6 <HAL_SPI_Transmit+0x274>
  }
  else
  {
    hspi->State = HAL_SPI_STATE_READY;
 80072ee:	68fb      	ldr	r3, [r7, #12]
 80072f0:	2201      	movs	r2, #1
 80072f2:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  }

error:
  /* Process Unlocked */
  __HAL_UNLOCK(hspi);
 80072f6:	68fb      	ldr	r3, [r7, #12]
 80072f8:	2200      	movs	r2, #0
 80072fa:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
  return errorcode;
 80072fe:	7ffb      	ldrb	r3, [r7, #31]
}
 8007300:	4618      	mov	r0, r3
 8007302:	3720      	adds	r7, #32
 8007304:	46bd      	mov	sp, r7
 8007306:	bd80      	pop	{r7, pc}

08007308 <HAL_SPI_Receive>:
  * @param  Size amount of data to be received
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Receive(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8007308:	b580      	push	{r7, lr}
 800730a:	b088      	sub	sp, #32
 800730c:	af02      	add	r7, sp, #8
 800730e:	60f8      	str	r0, [r7, #12]
 8007310:	60b9      	str	r1, [r7, #8]
 8007312:	603b      	str	r3, [r7, #0]
 8007314:	4613      	mov	r3, r2
 8007316:	80fb      	strh	r3, [r7, #6]
#if (USE_SPI_CRC != 0U)
  __IO uint32_t tmpreg = 0U;
#endif /* USE_SPI_CRC */
  uint32_t tickstart;
  HAL_StatusTypeDef errorcode = HAL_OK;
 8007318:	2300      	movs	r3, #0
 800731a:	75fb      	strb	r3, [r7, #23]

  if (hspi->State != HAL_SPI_STATE_READY)
 800731c:	68fb      	ldr	r3, [r7, #12]
 800731e:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8007322:	b2db      	uxtb	r3, r3
 8007324:	2b01      	cmp	r3, #1
 8007326:	d002      	beq.n	800732e <HAL_SPI_Receive+0x26>
  {
    errorcode = HAL_BUSY;
 8007328:	2302      	movs	r3, #2
 800732a:	75fb      	strb	r3, [r7, #23]
    goto error;
 800732c:	e0fb      	b.n	8007526 <HAL_SPI_Receive+0x21e>
  }

  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800732e:	68fb      	ldr	r3, [r7, #12]
 8007330:	685b      	ldr	r3, [r3, #4]
 8007332:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8007336:	d112      	bne.n	800735e <HAL_SPI_Receive+0x56>
 8007338:	68fb      	ldr	r3, [r7, #12]
 800733a:	689b      	ldr	r3, [r3, #8]
 800733c:	2b00      	cmp	r3, #0
 800733e:	d10e      	bne.n	800735e <HAL_SPI_Receive+0x56>
  {
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 8007340:	68fb      	ldr	r3, [r7, #12]
 8007342:	2204      	movs	r2, #4
 8007344:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
    /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line */
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 8007348:	88fa      	ldrh	r2, [r7, #6]
 800734a:	683b      	ldr	r3, [r7, #0]
 800734c:	9300      	str	r3, [sp, #0]
 800734e:	4613      	mov	r3, r2
 8007350:	68ba      	ldr	r2, [r7, #8]
 8007352:	68b9      	ldr	r1, [r7, #8]
 8007354:	68f8      	ldr	r0, [r7, #12]
 8007356:	f000 f8ef 	bl	8007538 <HAL_SPI_TransmitReceive>
 800735a:	4603      	mov	r3, r0
 800735c:	e0e8      	b.n	8007530 <HAL_SPI_Receive+0x228>
  }

  /* Process Locked */
  __HAL_LOCK(hspi);
 800735e:	68fb      	ldr	r3, [r7, #12]
 8007360:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8007364:	2b01      	cmp	r3, #1
 8007366:	d101      	bne.n	800736c <HAL_SPI_Receive+0x64>
 8007368:	2302      	movs	r3, #2
 800736a:	e0e1      	b.n	8007530 <HAL_SPI_Receive+0x228>
 800736c:	68fb      	ldr	r3, [r7, #12]
 800736e:	2201      	movs	r2, #1
 8007370:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8007374:	f7fc fdde 	bl	8003f34 <HAL_GetTick>
 8007378:	6138      	str	r0, [r7, #16]

  if ((pData == NULL) || (Size == 0U))
 800737a:	68bb      	ldr	r3, [r7, #8]
 800737c:	2b00      	cmp	r3, #0
 800737e:	d002      	beq.n	8007386 <HAL_SPI_Receive+0x7e>
 8007380:	88fb      	ldrh	r3, [r7, #6]
 8007382:	2b00      	cmp	r3, #0
 8007384:	d102      	bne.n	800738c <HAL_SPI_Receive+0x84>
  {
    errorcode = HAL_ERROR;
 8007386:	2301      	movs	r3, #1
 8007388:	75fb      	strb	r3, [r7, #23]
    goto error;
 800738a:	e0cc      	b.n	8007526 <HAL_SPI_Receive+0x21e>
  }

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800738c:	68fb      	ldr	r3, [r7, #12]
 800738e:	2204      	movs	r2, #4
 8007390:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007394:	68fb      	ldr	r3, [r7, #12]
 8007396:	2200      	movs	r2, #0
 8007398:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800739a:	68fb      	ldr	r3, [r7, #12]
 800739c:	68ba      	ldr	r2, [r7, #8]
 800739e:	639a      	str	r2, [r3, #56]	; 0x38
  hspi->RxXferSize  = Size;
 80073a0:	68fb      	ldr	r3, [r7, #12]
 80073a2:	88fa      	ldrh	r2, [r7, #6]
 80073a4:	879a      	strh	r2, [r3, #60]	; 0x3c
  hspi->RxXferCount = Size;
 80073a6:	68fb      	ldr	r3, [r7, #12]
 80073a8:	88fa      	ldrh	r2, [r7, #6]
 80073aa:	87da      	strh	r2, [r3, #62]	; 0x3e

  /*Init field not used in handle to zero */
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 80073ac:	68fb      	ldr	r3, [r7, #12]
 80073ae:	2200      	movs	r2, #0
 80073b0:	631a      	str	r2, [r3, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 80073b2:	68fb      	ldr	r3, [r7, #12]
 80073b4:	2200      	movs	r2, #0
 80073b6:	869a      	strh	r2, [r3, #52]	; 0x34
  hspi->TxXferCount = 0U;
 80073b8:	68fb      	ldr	r3, [r7, #12]
 80073ba:	2200      	movs	r2, #0
 80073bc:	86da      	strh	r2, [r3, #54]	; 0x36
  hspi->RxISR       = NULL;
 80073be:	68fb      	ldr	r3, [r7, #12]
 80073c0:	2200      	movs	r2, #0
 80073c2:	641a      	str	r2, [r3, #64]	; 0x40
  hspi->TxISR       = NULL;
 80073c4:	68fb      	ldr	r3, [r7, #12]
 80073c6:	2200      	movs	r2, #0
 80073c8:	645a      	str	r2, [r3, #68]	; 0x44
    hspi->RxXferCount--;
  }
#endif /* USE_SPI_CRC */

  /* Configure communication direction: 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80073ca:	68fb      	ldr	r3, [r7, #12]
 80073cc:	689b      	ldr	r3, [r3, #8]
 80073ce:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80073d2:	d10f      	bne.n	80073f4 <HAL_SPI_Receive+0xec>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 80073d4:	68fb      	ldr	r3, [r7, #12]
 80073d6:	681b      	ldr	r3, [r3, #0]
 80073d8:	681a      	ldr	r2, [r3, #0]
 80073da:	68fb      	ldr	r3, [r7, #12]
 80073dc:	681b      	ldr	r3, [r3, #0]
 80073de:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80073e2:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 80073e4:	68fb      	ldr	r3, [r7, #12]
 80073e6:	681b      	ldr	r3, [r3, #0]
 80073e8:	681a      	ldr	r2, [r3, #0]
 80073ea:	68fb      	ldr	r3, [r7, #12]
 80073ec:	681b      	ldr	r3, [r3, #0]
 80073ee:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 80073f2:	601a      	str	r2, [r3, #0]
  }

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80073f4:	68fb      	ldr	r3, [r7, #12]
 80073f6:	681b      	ldr	r3, [r3, #0]
 80073f8:	681b      	ldr	r3, [r3, #0]
 80073fa:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80073fe:	2b40      	cmp	r3, #64	; 0x40
 8007400:	d007      	beq.n	8007412 <HAL_SPI_Receive+0x10a>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 8007402:	68fb      	ldr	r3, [r7, #12]
 8007404:	681b      	ldr	r3, [r3, #0]
 8007406:	681a      	ldr	r2, [r3, #0]
 8007408:	68fb      	ldr	r3, [r7, #12]
 800740a:	681b      	ldr	r3, [r3, #0]
 800740c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8007410:	601a      	str	r2, [r3, #0]
  }

  /* Receive data in 8 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 8007412:	68fb      	ldr	r3, [r7, #12]
 8007414:	68db      	ldr	r3, [r3, #12]
 8007416:	2b00      	cmp	r3, #0
 8007418:	d16a      	bne.n	80074f0 <HAL_SPI_Receive+0x1e8>
  {
    /* Transfer loop */
    while (hspi->RxXferCount > 0U)
 800741a:	e032      	b.n	8007482 <HAL_SPI_Receive+0x17a>
    {
      /* Check the RXNE flag */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800741c:	68fb      	ldr	r3, [r7, #12]
 800741e:	681b      	ldr	r3, [r3, #0]
 8007420:	689b      	ldr	r3, [r3, #8]
 8007422:	f003 0301 	and.w	r3, r3, #1
 8007426:	2b01      	cmp	r3, #1
 8007428:	d115      	bne.n	8007456 <HAL_SPI_Receive+0x14e>
      {
        /* read the received data */
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800742a:	68fb      	ldr	r3, [r7, #12]
 800742c:	681b      	ldr	r3, [r3, #0]
 800742e:	f103 020c 	add.w	r2, r3, #12
 8007432:	68fb      	ldr	r3, [r7, #12]
 8007434:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007436:	7812      	ldrb	r2, [r2, #0]
 8007438:	b2d2      	uxtb	r2, r2
 800743a:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800743c:	68fb      	ldr	r3, [r7, #12]
 800743e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007440:	1c5a      	adds	r2, r3, #1
 8007442:	68fb      	ldr	r3, [r7, #12]
 8007444:	639a      	str	r2, [r3, #56]	; 0x38
        hspi->RxXferCount--;
 8007446:	68fb      	ldr	r3, [r7, #12]
 8007448:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800744a:	b29b      	uxth	r3, r3
 800744c:	3b01      	subs	r3, #1
 800744e:	b29a      	uxth	r2, r3
 8007450:	68fb      	ldr	r3, [r7, #12]
 8007452:	87da      	strh	r2, [r3, #62]	; 0x3e
 8007454:	e015      	b.n	8007482 <HAL_SPI_Receive+0x17a>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007456:	f7fc fd6d 	bl	8003f34 <HAL_GetTick>
 800745a:	4602      	mov	r2, r0
 800745c:	693b      	ldr	r3, [r7, #16]
 800745e:	1ad3      	subs	r3, r2, r3
 8007460:	683a      	ldr	r2, [r7, #0]
 8007462:	429a      	cmp	r2, r3
 8007464:	d803      	bhi.n	800746e <HAL_SPI_Receive+0x166>
 8007466:	683b      	ldr	r3, [r7, #0]
 8007468:	f1b3 3fff 	cmp.w	r3, #4294967295
 800746c:	d102      	bne.n	8007474 <HAL_SPI_Receive+0x16c>
 800746e:	683b      	ldr	r3, [r7, #0]
 8007470:	2b00      	cmp	r3, #0
 8007472:	d106      	bne.n	8007482 <HAL_SPI_Receive+0x17a>
        {
          errorcode = HAL_TIMEOUT;
 8007474:	2303      	movs	r3, #3
 8007476:	75fb      	strb	r3, [r7, #23]
          hspi->State = HAL_SPI_STATE_READY;
 8007478:	68fb      	ldr	r3, [r7, #12]
 800747a:	2201      	movs	r2, #1
 800747c:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
          goto error;
 8007480:	e051      	b.n	8007526 <HAL_SPI_Receive+0x21e>
    while (hspi->RxXferCount > 0U)
 8007482:	68fb      	ldr	r3, [r7, #12]
 8007484:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8007486:	b29b      	uxth	r3, r3
 8007488:	2b00      	cmp	r3, #0
 800748a:	d1c7      	bne.n	800741c <HAL_SPI_Receive+0x114>
 800748c:	e035      	b.n	80074fa <HAL_SPI_Receive+0x1f2>
  {
    /* Transfer loop */
    while (hspi->RxXferCount > 0U)
    {
      /* Check the RXNE flag */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800748e:	68fb      	ldr	r3, [r7, #12]
 8007490:	681b      	ldr	r3, [r3, #0]
 8007492:	689b      	ldr	r3, [r3, #8]
 8007494:	f003 0301 	and.w	r3, r3, #1
 8007498:	2b01      	cmp	r3, #1
 800749a:	d113      	bne.n	80074c4 <HAL_SPI_Receive+0x1bc>
      {
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800749c:	68fb      	ldr	r3, [r7, #12]
 800749e:	681b      	ldr	r3, [r3, #0]
 80074a0:	68da      	ldr	r2, [r3, #12]
 80074a2:	68fb      	ldr	r3, [r7, #12]
 80074a4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80074a6:	b292      	uxth	r2, r2
 80074a8:	801a      	strh	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint16_t);
 80074aa:	68fb      	ldr	r3, [r7, #12]
 80074ac:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80074ae:	1c9a      	adds	r2, r3, #2
 80074b0:	68fb      	ldr	r3, [r7, #12]
 80074b2:	639a      	str	r2, [r3, #56]	; 0x38
        hspi->RxXferCount--;
 80074b4:	68fb      	ldr	r3, [r7, #12]
 80074b6:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80074b8:	b29b      	uxth	r3, r3
 80074ba:	3b01      	subs	r3, #1
 80074bc:	b29a      	uxth	r2, r3
 80074be:	68fb      	ldr	r3, [r7, #12]
 80074c0:	87da      	strh	r2, [r3, #62]	; 0x3e
 80074c2:	e015      	b.n	80074f0 <HAL_SPI_Receive+0x1e8>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80074c4:	f7fc fd36 	bl	8003f34 <HAL_GetTick>
 80074c8:	4602      	mov	r2, r0
 80074ca:	693b      	ldr	r3, [r7, #16]
 80074cc:	1ad3      	subs	r3, r2, r3
 80074ce:	683a      	ldr	r2, [r7, #0]
 80074d0:	429a      	cmp	r2, r3
 80074d2:	d803      	bhi.n	80074dc <HAL_SPI_Receive+0x1d4>
 80074d4:	683b      	ldr	r3, [r7, #0]
 80074d6:	f1b3 3fff 	cmp.w	r3, #4294967295
 80074da:	d102      	bne.n	80074e2 <HAL_SPI_Receive+0x1da>
 80074dc:	683b      	ldr	r3, [r7, #0]
 80074de:	2b00      	cmp	r3, #0
 80074e0:	d106      	bne.n	80074f0 <HAL_SPI_Receive+0x1e8>
        {
          errorcode = HAL_TIMEOUT;
 80074e2:	2303      	movs	r3, #3
 80074e4:	75fb      	strb	r3, [r7, #23]
          hspi->State = HAL_SPI_STATE_READY;
 80074e6:	68fb      	ldr	r3, [r7, #12]
 80074e8:	2201      	movs	r2, #1
 80074ea:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
          goto error;
 80074ee:	e01a      	b.n	8007526 <HAL_SPI_Receive+0x21e>
    while (hspi->RxXferCount > 0U)
 80074f0:	68fb      	ldr	r3, [r7, #12]
 80074f2:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80074f4:	b29b      	uxth	r3, r3
 80074f6:	2b00      	cmp	r3, #0
 80074f8:	d1c9      	bne.n	800748e <HAL_SPI_Receive+0x186>
    UNUSED(tmpreg);
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80074fa:	693a      	ldr	r2, [r7, #16]
 80074fc:	6839      	ldr	r1, [r7, #0]
 80074fe:	68f8      	ldr	r0, [r7, #12]
 8007500:	f000 fc98 	bl	8007e34 <SPI_EndRxTransaction>
 8007504:	4603      	mov	r3, r0
 8007506:	2b00      	cmp	r3, #0
 8007508:	d002      	beq.n	8007510 <HAL_SPI_Receive+0x208>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800750a:	68fb      	ldr	r3, [r7, #12]
 800750c:	2220      	movs	r2, #32
 800750e:	655a      	str	r2, [r3, #84]	; 0x54
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
    __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
  }
#endif /* USE_SPI_CRC */

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8007510:	68fb      	ldr	r3, [r7, #12]
 8007512:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007514:	2b00      	cmp	r3, #0
 8007516:	d002      	beq.n	800751e <HAL_SPI_Receive+0x216>
  {
    errorcode = HAL_ERROR;
 8007518:	2301      	movs	r3, #1
 800751a:	75fb      	strb	r3, [r7, #23]
 800751c:	e003      	b.n	8007526 <HAL_SPI_Receive+0x21e>
  }
  else
  {
    hspi->State = HAL_SPI_STATE_READY;
 800751e:	68fb      	ldr	r3, [r7, #12]
 8007520:	2201      	movs	r2, #1
 8007522:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  }

error :
  __HAL_UNLOCK(hspi);
 8007526:	68fb      	ldr	r3, [r7, #12]
 8007528:	2200      	movs	r2, #0
 800752a:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
  return errorcode;
 800752e:	7dfb      	ldrb	r3, [r7, #23]
}
 8007530:	4618      	mov	r0, r3
 8007532:	3718      	adds	r7, #24
 8007534:	46bd      	mov	sp, r7
 8007536:	bd80      	pop	{r7, pc}

08007538 <HAL_SPI_TransmitReceive>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_TransmitReceive(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pRxData, uint16_t Size,
                                          uint32_t Timeout)
{
 8007538:	b580      	push	{r7, lr}
 800753a:	b08c      	sub	sp, #48	; 0x30
 800753c:	af00      	add	r7, sp, #0
 800753e:	60f8      	str	r0, [r7, #12]
 8007540:	60b9      	str	r1, [r7, #8]
 8007542:	607a      	str	r2, [r7, #4]
 8007544:	807b      	strh	r3, [r7, #2]
#if (USE_SPI_CRC != 0U)
  __IO uint32_t tmpreg = 0U;
#endif /* USE_SPI_CRC */

  /* Variable used to alternate Rx and Tx during transfer */
  uint32_t             txallowed = 1U;
 8007546:	2301      	movs	r3, #1
 8007548:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_StatusTypeDef    errorcode = HAL_OK;
 800754a:	2300      	movs	r3, #0
 800754c:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));

  /* Process Locked */
  __HAL_LOCK(hspi);
 8007550:	68fb      	ldr	r3, [r7, #12]
 8007552:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8007556:	2b01      	cmp	r3, #1
 8007558:	d101      	bne.n	800755e <HAL_SPI_TransmitReceive+0x26>
 800755a:	2302      	movs	r3, #2
 800755c:	e198      	b.n	8007890 <HAL_SPI_TransmitReceive+0x358>
 800755e:	68fb      	ldr	r3, [r7, #12]
 8007560:	2201      	movs	r2, #1
 8007562:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8007566:	f7fc fce5 	bl	8003f34 <HAL_GetTick>
 800756a:	6278      	str	r0, [r7, #36]	; 0x24

  /* Init temporary variables */
  tmp_state           = hspi->State;
 800756c:	68fb      	ldr	r3, [r7, #12]
 800756e:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8007572:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
  tmp_mode            = hspi->Init.Mode;
 8007576:	68fb      	ldr	r3, [r7, #12]
 8007578:	685b      	ldr	r3, [r3, #4]
 800757a:	61fb      	str	r3, [r7, #28]
  initial_TxXferCount = Size;
 800757c:	887b      	ldrh	r3, [r7, #2]
 800757e:	837b      	strh	r3, [r7, #26]

  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8007580:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8007584:	2b01      	cmp	r3, #1
 8007586:	d00f      	beq.n	80075a8 <HAL_SPI_TransmitReceive+0x70>
 8007588:	69fb      	ldr	r3, [r7, #28]
 800758a:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800758e:	d107      	bne.n	80075a0 <HAL_SPI_TransmitReceive+0x68>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 8007590:	68fb      	ldr	r3, [r7, #12]
 8007592:	689b      	ldr	r3, [r3, #8]
 8007594:	2b00      	cmp	r3, #0
 8007596:	d103      	bne.n	80075a0 <HAL_SPI_TransmitReceive+0x68>
 8007598:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 800759c:	2b04      	cmp	r3, #4
 800759e:	d003      	beq.n	80075a8 <HAL_SPI_TransmitReceive+0x70>
  {
    errorcode = HAL_BUSY;
 80075a0:	2302      	movs	r3, #2
 80075a2:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
    goto error;
 80075a6:	e16d      	b.n	8007884 <HAL_SPI_TransmitReceive+0x34c>
  }

  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 80075a8:	68bb      	ldr	r3, [r7, #8]
 80075aa:	2b00      	cmp	r3, #0
 80075ac:	d005      	beq.n	80075ba <HAL_SPI_TransmitReceive+0x82>
 80075ae:	687b      	ldr	r3, [r7, #4]
 80075b0:	2b00      	cmp	r3, #0
 80075b2:	d002      	beq.n	80075ba <HAL_SPI_TransmitReceive+0x82>
 80075b4:	887b      	ldrh	r3, [r7, #2]
 80075b6:	2b00      	cmp	r3, #0
 80075b8:	d103      	bne.n	80075c2 <HAL_SPI_TransmitReceive+0x8a>
  {
    errorcode = HAL_ERROR;
 80075ba:	2301      	movs	r3, #1
 80075bc:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
    goto error;
 80075c0:	e160      	b.n	8007884 <HAL_SPI_TransmitReceive+0x34c>
  }

  /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 80075c2:	68fb      	ldr	r3, [r7, #12]
 80075c4:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 80075c8:	b2db      	uxtb	r3, r3
 80075ca:	2b04      	cmp	r3, #4
 80075cc:	d003      	beq.n	80075d6 <HAL_SPI_TransmitReceive+0x9e>
  {
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 80075ce:	68fb      	ldr	r3, [r7, #12]
 80075d0:	2205      	movs	r2, #5
 80075d2:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  }

  /* Set the transaction information */
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80075d6:	68fb      	ldr	r3, [r7, #12]
 80075d8:	2200      	movs	r2, #0
 80075da:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 80075dc:	68fb      	ldr	r3, [r7, #12]
 80075de:	687a      	ldr	r2, [r7, #4]
 80075e0:	639a      	str	r2, [r3, #56]	; 0x38
  hspi->RxXferCount = Size;
 80075e2:	68fb      	ldr	r3, [r7, #12]
 80075e4:	887a      	ldrh	r2, [r7, #2]
 80075e6:	87da      	strh	r2, [r3, #62]	; 0x3e
  hspi->RxXferSize  = Size;
 80075e8:	68fb      	ldr	r3, [r7, #12]
 80075ea:	887a      	ldrh	r2, [r7, #2]
 80075ec:	879a      	strh	r2, [r3, #60]	; 0x3c
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 80075ee:	68fb      	ldr	r3, [r7, #12]
 80075f0:	68ba      	ldr	r2, [r7, #8]
 80075f2:	631a      	str	r2, [r3, #48]	; 0x30
  hspi->TxXferCount = Size;
 80075f4:	68fb      	ldr	r3, [r7, #12]
 80075f6:	887a      	ldrh	r2, [r7, #2]
 80075f8:	86da      	strh	r2, [r3, #54]	; 0x36
  hspi->TxXferSize  = Size;
 80075fa:	68fb      	ldr	r3, [r7, #12]
 80075fc:	887a      	ldrh	r2, [r7, #2]
 80075fe:	869a      	strh	r2, [r3, #52]	; 0x34

  /*Init field not used in handle to zero */
  hspi->RxISR       = NULL;
 8007600:	68fb      	ldr	r3, [r7, #12]
 8007602:	2200      	movs	r2, #0
 8007604:	641a      	str	r2, [r3, #64]	; 0x40
  hspi->TxISR       = NULL;
 8007606:	68fb      	ldr	r3, [r7, #12]
 8007608:	2200      	movs	r2, #0
 800760a:	645a      	str	r2, [r3, #68]	; 0x44
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800760c:	68fb      	ldr	r3, [r7, #12]
 800760e:	681b      	ldr	r3, [r3, #0]
 8007610:	681b      	ldr	r3, [r3, #0]
 8007612:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007616:	2b40      	cmp	r3, #64	; 0x40
 8007618:	d007      	beq.n	800762a <HAL_SPI_TransmitReceive+0xf2>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 800761a:	68fb      	ldr	r3, [r7, #12]
 800761c:	681b      	ldr	r3, [r3, #0]
 800761e:	681a      	ldr	r2, [r3, #0]
 8007620:	68fb      	ldr	r3, [r7, #12]
 8007622:	681b      	ldr	r3, [r3, #0]
 8007624:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8007628:	601a      	str	r2, [r3, #0]
  }

  /* Transmit and Receive data in 16 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800762a:	68fb      	ldr	r3, [r7, #12]
 800762c:	68db      	ldr	r3, [r3, #12]
 800762e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8007632:	d17c      	bne.n	800772e <HAL_SPI_TransmitReceive+0x1f6>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007634:	68fb      	ldr	r3, [r7, #12]
 8007636:	685b      	ldr	r3, [r3, #4]
 8007638:	2b00      	cmp	r3, #0
 800763a:	d002      	beq.n	8007642 <HAL_SPI_TransmitReceive+0x10a>
 800763c:	8b7b      	ldrh	r3, [r7, #26]
 800763e:	2b01      	cmp	r3, #1
 8007640:	d16a      	bne.n	8007718 <HAL_SPI_TransmitReceive+0x1e0>
    {
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007642:	68fb      	ldr	r3, [r7, #12]
 8007644:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007646:	881a      	ldrh	r2, [r3, #0]
 8007648:	68fb      	ldr	r3, [r7, #12]
 800764a:	681b      	ldr	r3, [r3, #0]
 800764c:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800764e:	68fb      	ldr	r3, [r7, #12]
 8007650:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007652:	1c9a      	adds	r2, r3, #2
 8007654:	68fb      	ldr	r3, [r7, #12]
 8007656:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 8007658:	68fb      	ldr	r3, [r7, #12]
 800765a:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800765c:	b29b      	uxth	r3, r3
 800765e:	3b01      	subs	r3, #1
 8007660:	b29a      	uxth	r2, r3
 8007662:	68fb      	ldr	r3, [r7, #12]
 8007664:	86da      	strh	r2, [r3, #54]	; 0x36
        SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
      }
#endif /* USE_SPI_CRC */

    }
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8007666:	e057      	b.n	8007718 <HAL_SPI_TransmitReceive+0x1e0>
    {
      /* Check TXE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8007668:	68fb      	ldr	r3, [r7, #12]
 800766a:	681b      	ldr	r3, [r3, #0]
 800766c:	689b      	ldr	r3, [r3, #8]
 800766e:	f003 0302 	and.w	r3, r3, #2
 8007672:	2b02      	cmp	r3, #2
 8007674:	d11b      	bne.n	80076ae <HAL_SPI_TransmitReceive+0x176>
 8007676:	68fb      	ldr	r3, [r7, #12]
 8007678:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800767a:	b29b      	uxth	r3, r3
 800767c:	2b00      	cmp	r3, #0
 800767e:	d016      	beq.n	80076ae <HAL_SPI_TransmitReceive+0x176>
 8007680:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007682:	2b01      	cmp	r3, #1
 8007684:	d113      	bne.n	80076ae <HAL_SPI_TransmitReceive+0x176>
      {
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007686:	68fb      	ldr	r3, [r7, #12]
 8007688:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800768a:	881a      	ldrh	r2, [r3, #0]
 800768c:	68fb      	ldr	r3, [r7, #12]
 800768e:	681b      	ldr	r3, [r3, #0]
 8007690:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8007692:	68fb      	ldr	r3, [r7, #12]
 8007694:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007696:	1c9a      	adds	r2, r3, #2
 8007698:	68fb      	ldr	r3, [r7, #12]
 800769a:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 800769c:	68fb      	ldr	r3, [r7, #12]
 800769e:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80076a0:	b29b      	uxth	r3, r3
 80076a2:	3b01      	subs	r3, #1
 80076a4:	b29a      	uxth	r2, r3
 80076a6:	68fb      	ldr	r3, [r7, #12]
 80076a8:	86da      	strh	r2, [r3, #54]	; 0x36
        /* Next Data is a reception (Rx). Tx not allowed */
        txallowed = 0U;
 80076aa:	2300      	movs	r3, #0
 80076ac:	62fb      	str	r3, [r7, #44]	; 0x2c
        }
#endif /* USE_SPI_CRC */
      }

      /* Check RXNE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 80076ae:	68fb      	ldr	r3, [r7, #12]
 80076b0:	681b      	ldr	r3, [r3, #0]
 80076b2:	689b      	ldr	r3, [r3, #8]
 80076b4:	f003 0301 	and.w	r3, r3, #1
 80076b8:	2b01      	cmp	r3, #1
 80076ba:	d119      	bne.n	80076f0 <HAL_SPI_TransmitReceive+0x1b8>
 80076bc:	68fb      	ldr	r3, [r7, #12]
 80076be:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80076c0:	b29b      	uxth	r3, r3
 80076c2:	2b00      	cmp	r3, #0
 80076c4:	d014      	beq.n	80076f0 <HAL_SPI_TransmitReceive+0x1b8>
      {
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 80076c6:	68fb      	ldr	r3, [r7, #12]
 80076c8:	681b      	ldr	r3, [r3, #0]
 80076ca:	68da      	ldr	r2, [r3, #12]
 80076cc:	68fb      	ldr	r3, [r7, #12]
 80076ce:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80076d0:	b292      	uxth	r2, r2
 80076d2:	801a      	strh	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint16_t);
 80076d4:	68fb      	ldr	r3, [r7, #12]
 80076d6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80076d8:	1c9a      	adds	r2, r3, #2
 80076da:	68fb      	ldr	r3, [r7, #12]
 80076dc:	639a      	str	r2, [r3, #56]	; 0x38
        hspi->RxXferCount--;
 80076de:	68fb      	ldr	r3, [r7, #12]
 80076e0:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80076e2:	b29b      	uxth	r3, r3
 80076e4:	3b01      	subs	r3, #1
 80076e6:	b29a      	uxth	r2, r3
 80076e8:	68fb      	ldr	r3, [r7, #12]
 80076ea:	87da      	strh	r2, [r3, #62]	; 0x3e
        /* Next Data is a Transmission (Tx). Tx is allowed */
        txallowed = 1U;
 80076ec:	2301      	movs	r3, #1
 80076ee:	62fb      	str	r3, [r7, #44]	; 0x2c
      }
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 80076f0:	f7fc fc20 	bl	8003f34 <HAL_GetTick>
 80076f4:	4602      	mov	r2, r0
 80076f6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80076f8:	1ad3      	subs	r3, r2, r3
 80076fa:	6bba      	ldr	r2, [r7, #56]	; 0x38
 80076fc:	429a      	cmp	r2, r3
 80076fe:	d80b      	bhi.n	8007718 <HAL_SPI_TransmitReceive+0x1e0>
 8007700:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007702:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007706:	d007      	beq.n	8007718 <HAL_SPI_TransmitReceive+0x1e0>
      {
        errorcode = HAL_TIMEOUT;
 8007708:	2303      	movs	r3, #3
 800770a:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
        hspi->State = HAL_SPI_STATE_READY;
 800770e:	68fb      	ldr	r3, [r7, #12]
 8007710:	2201      	movs	r2, #1
 8007712:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
        goto error;
 8007716:	e0b5      	b.n	8007884 <HAL_SPI_TransmitReceive+0x34c>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8007718:	68fb      	ldr	r3, [r7, #12]
 800771a:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800771c:	b29b      	uxth	r3, r3
 800771e:	2b00      	cmp	r3, #0
 8007720:	d1a2      	bne.n	8007668 <HAL_SPI_TransmitReceive+0x130>
 8007722:	68fb      	ldr	r3, [r7, #12]
 8007724:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8007726:	b29b      	uxth	r3, r3
 8007728:	2b00      	cmp	r3, #0
 800772a:	d19d      	bne.n	8007668 <HAL_SPI_TransmitReceive+0x130>
 800772c:	e080      	b.n	8007830 <HAL_SPI_TransmitReceive+0x2f8>
    }
  }
  /* Transmit and Receive data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800772e:	68fb      	ldr	r3, [r7, #12]
 8007730:	685b      	ldr	r3, [r3, #4]
 8007732:	2b00      	cmp	r3, #0
 8007734:	d002      	beq.n	800773c <HAL_SPI_TransmitReceive+0x204>
 8007736:	8b7b      	ldrh	r3, [r7, #26]
 8007738:	2b01      	cmp	r3, #1
 800773a:	d16f      	bne.n	800781c <HAL_SPI_TransmitReceive+0x2e4>
    {
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800773c:	68fb      	ldr	r3, [r7, #12]
 800773e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8007740:	68fb      	ldr	r3, [r7, #12]
 8007742:	681b      	ldr	r3, [r3, #0]
 8007744:	330c      	adds	r3, #12
 8007746:	7812      	ldrb	r2, [r2, #0]
 8007748:	701a      	strb	r2, [r3, #0]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800774a:	68fb      	ldr	r3, [r7, #12]
 800774c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800774e:	1c5a      	adds	r2, r3, #1
 8007750:	68fb      	ldr	r3, [r7, #12]
 8007752:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 8007754:	68fb      	ldr	r3, [r7, #12]
 8007756:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8007758:	b29b      	uxth	r3, r3
 800775a:	3b01      	subs	r3, #1
 800775c:	b29a      	uxth	r2, r3
 800775e:	68fb      	ldr	r3, [r7, #12]
 8007760:	86da      	strh	r2, [r3, #54]	; 0x36
      {
        SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
      }
#endif /* USE_SPI_CRC */
    }
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8007762:	e05b      	b.n	800781c <HAL_SPI_TransmitReceive+0x2e4>
    {
      /* Check TXE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8007764:	68fb      	ldr	r3, [r7, #12]
 8007766:	681b      	ldr	r3, [r3, #0]
 8007768:	689b      	ldr	r3, [r3, #8]
 800776a:	f003 0302 	and.w	r3, r3, #2
 800776e:	2b02      	cmp	r3, #2
 8007770:	d11c      	bne.n	80077ac <HAL_SPI_TransmitReceive+0x274>
 8007772:	68fb      	ldr	r3, [r7, #12]
 8007774:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8007776:	b29b      	uxth	r3, r3
 8007778:	2b00      	cmp	r3, #0
 800777a:	d017      	beq.n	80077ac <HAL_SPI_TransmitReceive+0x274>
 800777c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800777e:	2b01      	cmp	r3, #1
 8007780:	d114      	bne.n	80077ac <HAL_SPI_TransmitReceive+0x274>
      {
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 8007782:	68fb      	ldr	r3, [r7, #12]
 8007784:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8007786:	68fb      	ldr	r3, [r7, #12]
 8007788:	681b      	ldr	r3, [r3, #0]
 800778a:	330c      	adds	r3, #12
 800778c:	7812      	ldrb	r2, [r2, #0]
 800778e:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr++;
 8007790:	68fb      	ldr	r3, [r7, #12]
 8007792:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007794:	1c5a      	adds	r2, r3, #1
 8007796:	68fb      	ldr	r3, [r7, #12]
 8007798:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 800779a:	68fb      	ldr	r3, [r7, #12]
 800779c:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800779e:	b29b      	uxth	r3, r3
 80077a0:	3b01      	subs	r3, #1
 80077a2:	b29a      	uxth	r2, r3
 80077a4:	68fb      	ldr	r3, [r7, #12]
 80077a6:	86da      	strh	r2, [r3, #54]	; 0x36
        /* Next Data is a reception (Rx). Tx not allowed */
        txallowed = 0U;
 80077a8:	2300      	movs	r3, #0
 80077aa:	62fb      	str	r3, [r7, #44]	; 0x2c
        }
#endif /* USE_SPI_CRC */
      }

      /* Wait until RXNE flag is reset */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 80077ac:	68fb      	ldr	r3, [r7, #12]
 80077ae:	681b      	ldr	r3, [r3, #0]
 80077b0:	689b      	ldr	r3, [r3, #8]
 80077b2:	f003 0301 	and.w	r3, r3, #1
 80077b6:	2b01      	cmp	r3, #1
 80077b8:	d119      	bne.n	80077ee <HAL_SPI_TransmitReceive+0x2b6>
 80077ba:	68fb      	ldr	r3, [r7, #12]
 80077bc:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80077be:	b29b      	uxth	r3, r3
 80077c0:	2b00      	cmp	r3, #0
 80077c2:	d014      	beq.n	80077ee <HAL_SPI_TransmitReceive+0x2b6>
      {
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 80077c4:	68fb      	ldr	r3, [r7, #12]
 80077c6:	681b      	ldr	r3, [r3, #0]
 80077c8:	68da      	ldr	r2, [r3, #12]
 80077ca:	68fb      	ldr	r3, [r7, #12]
 80077cc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80077ce:	b2d2      	uxtb	r2, r2
 80077d0:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 80077d2:	68fb      	ldr	r3, [r7, #12]
 80077d4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80077d6:	1c5a      	adds	r2, r3, #1
 80077d8:	68fb      	ldr	r3, [r7, #12]
 80077da:	639a      	str	r2, [r3, #56]	; 0x38
        hspi->RxXferCount--;
 80077dc:	68fb      	ldr	r3, [r7, #12]
 80077de:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80077e0:	b29b      	uxth	r3, r3
 80077e2:	3b01      	subs	r3, #1
 80077e4:	b29a      	uxth	r2, r3
 80077e6:	68fb      	ldr	r3, [r7, #12]
 80077e8:	87da      	strh	r2, [r3, #62]	; 0x3e
        /* Next Data is a Transmission (Tx). Tx is allowed */
        txallowed = 1U;
 80077ea:	2301      	movs	r3, #1
 80077ec:	62fb      	str	r3, [r7, #44]	; 0x2c
      }
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 80077ee:	f7fc fba1 	bl	8003f34 <HAL_GetTick>
 80077f2:	4602      	mov	r2, r0
 80077f4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80077f6:	1ad3      	subs	r3, r2, r3
 80077f8:	6bba      	ldr	r2, [r7, #56]	; 0x38
 80077fa:	429a      	cmp	r2, r3
 80077fc:	d803      	bhi.n	8007806 <HAL_SPI_TransmitReceive+0x2ce>
 80077fe:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007800:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007804:	d102      	bne.n	800780c <HAL_SPI_TransmitReceive+0x2d4>
 8007806:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007808:	2b00      	cmp	r3, #0
 800780a:	d107      	bne.n	800781c <HAL_SPI_TransmitReceive+0x2e4>
      {
        errorcode = HAL_TIMEOUT;
 800780c:	2303      	movs	r3, #3
 800780e:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
        hspi->State = HAL_SPI_STATE_READY;
 8007812:	68fb      	ldr	r3, [r7, #12]
 8007814:	2201      	movs	r2, #1
 8007816:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
        goto error;
 800781a:	e033      	b.n	8007884 <HAL_SPI_TransmitReceive+0x34c>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800781c:	68fb      	ldr	r3, [r7, #12]
 800781e:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8007820:	b29b      	uxth	r3, r3
 8007822:	2b00      	cmp	r3, #0
 8007824:	d19e      	bne.n	8007764 <HAL_SPI_TransmitReceive+0x22c>
 8007826:	68fb      	ldr	r3, [r7, #12]
 8007828:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800782a:	b29b      	uxth	r3, r3
 800782c:	2b00      	cmp	r3, #0
 800782e:	d199      	bne.n	8007764 <HAL_SPI_TransmitReceive+0x22c>
    errorcode = HAL_ERROR;
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8007830:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8007832:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 8007834:	68f8      	ldr	r0, [r7, #12]
 8007836:	f000 fb63 	bl	8007f00 <SPI_EndRxTxTransaction>
 800783a:	4603      	mov	r3, r0
 800783c:	2b00      	cmp	r3, #0
 800783e:	d006      	beq.n	800784e <HAL_SPI_TransmitReceive+0x316>
  {
    errorcode = HAL_ERROR;
 8007840:	2301      	movs	r3, #1
 8007842:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8007846:	68fb      	ldr	r3, [r7, #12]
 8007848:	2220      	movs	r2, #32
 800784a:	655a      	str	r2, [r3, #84]	; 0x54
    goto error;
 800784c:	e01a      	b.n	8007884 <HAL_SPI_TransmitReceive+0x34c>
  }

  /* Clear overrun flag in 2 Lines communication mode because received is not read */
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800784e:	68fb      	ldr	r3, [r7, #12]
 8007850:	689b      	ldr	r3, [r3, #8]
 8007852:	2b00      	cmp	r3, #0
 8007854:	d10a      	bne.n	800786c <HAL_SPI_TransmitReceive+0x334>
  {
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8007856:	2300      	movs	r3, #0
 8007858:	617b      	str	r3, [r7, #20]
 800785a:	68fb      	ldr	r3, [r7, #12]
 800785c:	681b      	ldr	r3, [r3, #0]
 800785e:	68db      	ldr	r3, [r3, #12]
 8007860:	617b      	str	r3, [r7, #20]
 8007862:	68fb      	ldr	r3, [r7, #12]
 8007864:	681b      	ldr	r3, [r3, #0]
 8007866:	689b      	ldr	r3, [r3, #8]
 8007868:	617b      	str	r3, [r7, #20]
 800786a:	697b      	ldr	r3, [r7, #20]
  }

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800786c:	68fb      	ldr	r3, [r7, #12]
 800786e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007870:	2b00      	cmp	r3, #0
 8007872:	d003      	beq.n	800787c <HAL_SPI_TransmitReceive+0x344>
  {
    errorcode = HAL_ERROR;
 8007874:	2301      	movs	r3, #1
 8007876:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800787a:	e003      	b.n	8007884 <HAL_SPI_TransmitReceive+0x34c>
  }
  else
  {
    hspi->State = HAL_SPI_STATE_READY;
 800787c:	68fb      	ldr	r3, [r7, #12]
 800787e:	2201      	movs	r2, #1
 8007880:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  }
  
error :
  __HAL_UNLOCK(hspi);
 8007884:	68fb      	ldr	r3, [r7, #12]
 8007886:	2200      	movs	r2, #0
 8007888:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
  return errorcode;
 800788c:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
}
 8007890:	4618      	mov	r0, r3
 8007892:	3730      	adds	r7, #48	; 0x30
 8007894:	46bd      	mov	sp, r7
 8007896:	bd80      	pop	{r7, pc}

08007898 <HAL_SPI_Transmit_DMA>:
  * @param  pData pointer to data buffer
  * @param  Size amount of data to be sent
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
{
 8007898:	b580      	push	{r7, lr}
 800789a:	b086      	sub	sp, #24
 800789c:	af00      	add	r7, sp, #0
 800789e:	60f8      	str	r0, [r7, #12]
 80078a0:	60b9      	str	r1, [r7, #8]
 80078a2:	4613      	mov	r3, r2
 80078a4:	80fb      	strh	r3, [r7, #6]
  HAL_StatusTypeDef errorcode = HAL_OK;
 80078a6:	2300      	movs	r3, #0
 80078a8:	75fb      	strb	r3, [r7, #23]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));

  /* Process Locked */
  __HAL_LOCK(hspi);
 80078aa:	68fb      	ldr	r3, [r7, #12]
 80078ac:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 80078b0:	2b01      	cmp	r3, #1
 80078b2:	d101      	bne.n	80078b8 <HAL_SPI_Transmit_DMA+0x20>
 80078b4:	2302      	movs	r3, #2
 80078b6:	e097      	b.n	80079e8 <HAL_SPI_Transmit_DMA+0x150>
 80078b8:	68fb      	ldr	r3, [r7, #12]
 80078ba:	2201      	movs	r2, #1
 80078bc:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

  if (hspi->State != HAL_SPI_STATE_READY)
 80078c0:	68fb      	ldr	r3, [r7, #12]
 80078c2:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 80078c6:	b2db      	uxtb	r3, r3
 80078c8:	2b01      	cmp	r3, #1
 80078ca:	d002      	beq.n	80078d2 <HAL_SPI_Transmit_DMA+0x3a>
  {
    errorcode = HAL_BUSY;
 80078cc:	2302      	movs	r3, #2
 80078ce:	75fb      	strb	r3, [r7, #23]
    goto error;
 80078d0:	e085      	b.n	80079de <HAL_SPI_Transmit_DMA+0x146>
  }

  if ((pData == NULL) || (Size == 0U))
 80078d2:	68bb      	ldr	r3, [r7, #8]
 80078d4:	2b00      	cmp	r3, #0
 80078d6:	d002      	beq.n	80078de <HAL_SPI_Transmit_DMA+0x46>
 80078d8:	88fb      	ldrh	r3, [r7, #6]
 80078da:	2b00      	cmp	r3, #0
 80078dc:	d102      	bne.n	80078e4 <HAL_SPI_Transmit_DMA+0x4c>
  {
    errorcode = HAL_ERROR;
 80078de:	2301      	movs	r3, #1
 80078e0:	75fb      	strb	r3, [r7, #23]
    goto error;
 80078e2:	e07c      	b.n	80079de <HAL_SPI_Transmit_DMA+0x146>
  }

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 80078e4:	68fb      	ldr	r3, [r7, #12]
 80078e6:	2203      	movs	r2, #3
 80078e8:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80078ec:	68fb      	ldr	r3, [r7, #12]
 80078ee:	2200      	movs	r2, #0
 80078f0:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 80078f2:	68fb      	ldr	r3, [r7, #12]
 80078f4:	68ba      	ldr	r2, [r7, #8]
 80078f6:	631a      	str	r2, [r3, #48]	; 0x30
  hspi->TxXferSize  = Size;
 80078f8:	68fb      	ldr	r3, [r7, #12]
 80078fa:	88fa      	ldrh	r2, [r7, #6]
 80078fc:	869a      	strh	r2, [r3, #52]	; 0x34
  hspi->TxXferCount = Size;
 80078fe:	68fb      	ldr	r3, [r7, #12]
 8007900:	88fa      	ldrh	r2, [r7, #6]
 8007902:	86da      	strh	r2, [r3, #54]	; 0x36

  /* Init field not used in handle to zero */
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8007904:	68fb      	ldr	r3, [r7, #12]
 8007906:	2200      	movs	r2, #0
 8007908:	639a      	str	r2, [r3, #56]	; 0x38
  hspi->TxISR       = NULL;
 800790a:	68fb      	ldr	r3, [r7, #12]
 800790c:	2200      	movs	r2, #0
 800790e:	645a      	str	r2, [r3, #68]	; 0x44
  hspi->RxISR       = NULL;
 8007910:	68fb      	ldr	r3, [r7, #12]
 8007912:	2200      	movs	r2, #0
 8007914:	641a      	str	r2, [r3, #64]	; 0x40
  hspi->RxXferSize  = 0U;
 8007916:	68fb      	ldr	r3, [r7, #12]
 8007918:	2200      	movs	r2, #0
 800791a:	879a      	strh	r2, [r3, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800791c:	68fb      	ldr	r3, [r7, #12]
 800791e:	2200      	movs	r2, #0
 8007920:	87da      	strh	r2, [r3, #62]	; 0x3e

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007922:	68fb      	ldr	r3, [r7, #12]
 8007924:	689b      	ldr	r3, [r3, #8]
 8007926:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800792a:	d10f      	bne.n	800794c <HAL_SPI_Transmit_DMA+0xb4>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 800792c:	68fb      	ldr	r3, [r7, #12]
 800792e:	681b      	ldr	r3, [r3, #0]
 8007930:	681a      	ldr	r2, [r3, #0]
 8007932:	68fb      	ldr	r3, [r7, #12]
 8007934:	681b      	ldr	r3, [r3, #0]
 8007936:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800793a:	601a      	str	r2, [r3, #0]
    SPI_1LINE_TX(hspi);
 800793c:	68fb      	ldr	r3, [r7, #12]
 800793e:	681b      	ldr	r3, [r3, #0]
 8007940:	681a      	ldr	r2, [r3, #0]
 8007942:	68fb      	ldr	r3, [r7, #12]
 8007944:	681b      	ldr	r3, [r3, #0]
 8007946:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800794a:	601a      	str	r2, [r3, #0]
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Set the SPI TxDMA Half transfer complete callback */
  hspi->hdmatx->XferHalfCpltCallback = SPI_DMAHalfTransmitCplt;
 800794c:	68fb      	ldr	r3, [r7, #12]
 800794e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8007950:	4a27      	ldr	r2, [pc, #156]	; (80079f0 <HAL_SPI_Transmit_DMA+0x158>)
 8007952:	641a      	str	r2, [r3, #64]	; 0x40

  /* Set the SPI TxDMA transfer complete callback */
  hspi->hdmatx->XferCpltCallback = SPI_DMATransmitCplt;
 8007954:	68fb      	ldr	r3, [r7, #12]
 8007956:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8007958:	4a26      	ldr	r2, [pc, #152]	; (80079f4 <HAL_SPI_Transmit_DMA+0x15c>)
 800795a:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Set the DMA error callback */
  hspi->hdmatx->XferErrorCallback = SPI_DMAError;
 800795c:	68fb      	ldr	r3, [r7, #12]
 800795e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8007960:	4a25      	ldr	r2, [pc, #148]	; (80079f8 <HAL_SPI_Transmit_DMA+0x160>)
 8007962:	64da      	str	r2, [r3, #76]	; 0x4c

  /* Set the DMA AbortCpltCallback */
  hspi->hdmatx->XferAbortCallback = NULL;
 8007964:	68fb      	ldr	r3, [r7, #12]
 8007966:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8007968:	2200      	movs	r2, #0
 800796a:	651a      	str	r2, [r3, #80]	; 0x50

  /* Enable the Tx DMA Stream/Channel */
  if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->DR,
 800796c:	68fb      	ldr	r3, [r7, #12]
 800796e:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8007970:	68fb      	ldr	r3, [r7, #12]
 8007972:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007974:	4619      	mov	r1, r3
 8007976:	68fb      	ldr	r3, [r7, #12]
 8007978:	681b      	ldr	r3, [r3, #0]
 800797a:	330c      	adds	r3, #12
 800797c:	461a      	mov	r2, r3
                                 hspi->TxXferCount))
 800797e:	68fb      	ldr	r3, [r7, #12]
 8007980:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8007982:	b29b      	uxth	r3, r3
  if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->DR,
 8007984:	f7fc fd40 	bl	8004408 <HAL_DMA_Start_IT>
 8007988:	4603      	mov	r3, r0
 800798a:	2b00      	cmp	r3, #0
 800798c:	d008      	beq.n	80079a0 <HAL_SPI_Transmit_DMA+0x108>
  {
    /* Update SPI error code */
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 800798e:	68fb      	ldr	r3, [r7, #12]
 8007990:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007992:	f043 0210 	orr.w	r2, r3, #16
 8007996:	68fb      	ldr	r3, [r7, #12]
 8007998:	655a      	str	r2, [r3, #84]	; 0x54
    errorcode = HAL_ERROR;
 800799a:	2301      	movs	r3, #1
 800799c:	75fb      	strb	r3, [r7, #23]

    goto error;
 800799e:	e01e      	b.n	80079de <HAL_SPI_Transmit_DMA+0x146>
  }

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80079a0:	68fb      	ldr	r3, [r7, #12]
 80079a2:	681b      	ldr	r3, [r3, #0]
 80079a4:	681b      	ldr	r3, [r3, #0]
 80079a6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80079aa:	2b40      	cmp	r3, #64	; 0x40
 80079ac:	d007      	beq.n	80079be <HAL_SPI_Transmit_DMA+0x126>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 80079ae:	68fb      	ldr	r3, [r7, #12]
 80079b0:	681b      	ldr	r3, [r3, #0]
 80079b2:	681a      	ldr	r2, [r3, #0]
 80079b4:	68fb      	ldr	r3, [r7, #12]
 80079b6:	681b      	ldr	r3, [r3, #0]
 80079b8:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80079bc:	601a      	str	r2, [r3, #0]
  }

  /* Enable the SPI Error Interrupt Bit */
  __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
 80079be:	68fb      	ldr	r3, [r7, #12]
 80079c0:	681b      	ldr	r3, [r3, #0]
 80079c2:	685a      	ldr	r2, [r3, #4]
 80079c4:	68fb      	ldr	r3, [r7, #12]
 80079c6:	681b      	ldr	r3, [r3, #0]
 80079c8:	f042 0220 	orr.w	r2, r2, #32
 80079cc:	605a      	str	r2, [r3, #4]

  /* Enable Tx DMA Request */
  SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 80079ce:	68fb      	ldr	r3, [r7, #12]
 80079d0:	681b      	ldr	r3, [r3, #0]
 80079d2:	685a      	ldr	r2, [r3, #4]
 80079d4:	68fb      	ldr	r3, [r7, #12]
 80079d6:	681b      	ldr	r3, [r3, #0]
 80079d8:	f042 0202 	orr.w	r2, r2, #2
 80079dc:	605a      	str	r2, [r3, #4]

error :
  /* Process Unlocked */
  __HAL_UNLOCK(hspi);
 80079de:	68fb      	ldr	r3, [r7, #12]
 80079e0:	2200      	movs	r2, #0
 80079e2:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
  return errorcode;
 80079e6:	7dfb      	ldrb	r3, [r7, #23]
}
 80079e8:	4618      	mov	r0, r3
 80079ea:	3718      	adds	r7, #24
 80079ec:	46bd      	mov	sp, r7
 80079ee:	bd80      	pop	{r7, pc}
 80079f0:	08007ca1 	.word	0x08007ca1
 80079f4:	08007bf9 	.word	0x08007bf9
 80079f8:	08007cbd 	.word	0x08007cbd

080079fc <HAL_SPI_IRQHandler>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for the specified SPI module.
  * @retval None
  */
void HAL_SPI_IRQHandler(SPI_HandleTypeDef *hspi)
{
 80079fc:	b580      	push	{r7, lr}
 80079fe:	b088      	sub	sp, #32
 8007a00:	af00      	add	r7, sp, #0
 8007a02:	6078      	str	r0, [r7, #4]
  uint32_t itsource = hspi->Instance->CR2;
 8007a04:	687b      	ldr	r3, [r7, #4]
 8007a06:	681b      	ldr	r3, [r3, #0]
 8007a08:	685b      	ldr	r3, [r3, #4]
 8007a0a:	61fb      	str	r3, [r7, #28]
  uint32_t itflag   = hspi->Instance->SR;
 8007a0c:	687b      	ldr	r3, [r7, #4]
 8007a0e:	681b      	ldr	r3, [r3, #0]
 8007a10:	689b      	ldr	r3, [r3, #8]
 8007a12:	61bb      	str	r3, [r7, #24]

  /* SPI in mode Receiver ----------------------------------------------------*/
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
 8007a14:	69bb      	ldr	r3, [r7, #24]
 8007a16:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007a1a:	2b00      	cmp	r3, #0
 8007a1c:	d10e      	bne.n	8007a3c <HAL_SPI_IRQHandler+0x40>
      (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXNE) != RESET))
 8007a1e:	69bb      	ldr	r3, [r7, #24]
 8007a20:	f003 0301 	and.w	r3, r3, #1
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
 8007a24:	2b00      	cmp	r3, #0
 8007a26:	d009      	beq.n	8007a3c <HAL_SPI_IRQHandler+0x40>
      (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXNE) != RESET))
 8007a28:	69fb      	ldr	r3, [r7, #28]
 8007a2a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007a2e:	2b00      	cmp	r3, #0
 8007a30:	d004      	beq.n	8007a3c <HAL_SPI_IRQHandler+0x40>
  {
    hspi->RxISR(hspi);
 8007a32:	687b      	ldr	r3, [r7, #4]
 8007a34:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007a36:	6878      	ldr	r0, [r7, #4]
 8007a38:	4798      	blx	r3
    return;
 8007a3a:	e0ce      	b.n	8007bda <HAL_SPI_IRQHandler+0x1de>
  }

  /* SPI in mode Transmitter -------------------------------------------------*/
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_TXE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_TXE) != RESET))
 8007a3c:	69bb      	ldr	r3, [r7, #24]
 8007a3e:	f003 0302 	and.w	r3, r3, #2
 8007a42:	2b00      	cmp	r3, #0
 8007a44:	d009      	beq.n	8007a5a <HAL_SPI_IRQHandler+0x5e>
 8007a46:	69fb      	ldr	r3, [r7, #28]
 8007a48:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8007a4c:	2b00      	cmp	r3, #0
 8007a4e:	d004      	beq.n	8007a5a <HAL_SPI_IRQHandler+0x5e>
  {
    hspi->TxISR(hspi);
 8007a50:	687b      	ldr	r3, [r7, #4]
 8007a52:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8007a54:	6878      	ldr	r0, [r7, #4]
 8007a56:	4798      	blx	r3
    return;
 8007a58:	e0bf      	b.n	8007bda <HAL_SPI_IRQHandler+0x1de>
  }

  /* SPI in Error Treatment --------------------------------------------------*/
  if (((SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET) || (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
 8007a5a:	69bb      	ldr	r3, [r7, #24]
 8007a5c:	f003 0320 	and.w	r3, r3, #32
 8007a60:	2b00      	cmp	r3, #0
 8007a62:	d10a      	bne.n	8007a7a <HAL_SPI_IRQHandler+0x7e>
 8007a64:	69bb      	ldr	r3, [r7, #24]
 8007a66:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007a6a:	2b00      	cmp	r3, #0
 8007a6c:	d105      	bne.n	8007a7a <HAL_SPI_IRQHandler+0x7e>
       || (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_ERR) != RESET))
 8007a6e:	69bb      	ldr	r3, [r7, #24]
 8007a70:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007a74:	2b00      	cmp	r3, #0
 8007a76:	f000 80b0 	beq.w	8007bda <HAL_SPI_IRQHandler+0x1de>
 8007a7a:	69fb      	ldr	r3, [r7, #28]
 8007a7c:	f003 0320 	and.w	r3, r3, #32
 8007a80:	2b00      	cmp	r3, #0
 8007a82:	f000 80aa 	beq.w	8007bda <HAL_SPI_IRQHandler+0x1de>
  {
    /* SPI Overrun error interrupt occurred ----------------------------------*/
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
 8007a86:	69bb      	ldr	r3, [r7, #24]
 8007a88:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007a8c:	2b00      	cmp	r3, #0
 8007a8e:	d023      	beq.n	8007ad8 <HAL_SPI_IRQHandler+0xdc>
    {
      if (hspi->State != HAL_SPI_STATE_BUSY_TX)
 8007a90:	687b      	ldr	r3, [r7, #4]
 8007a92:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8007a96:	b2db      	uxtb	r3, r3
 8007a98:	2b03      	cmp	r3, #3
 8007a9a:	d011      	beq.n	8007ac0 <HAL_SPI_IRQHandler+0xc4>
      {
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
 8007a9c:	687b      	ldr	r3, [r7, #4]
 8007a9e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007aa0:	f043 0204 	orr.w	r2, r3, #4
 8007aa4:	687b      	ldr	r3, [r7, #4]
 8007aa6:	655a      	str	r2, [r3, #84]	; 0x54
        __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8007aa8:	2300      	movs	r3, #0
 8007aaa:	617b      	str	r3, [r7, #20]
 8007aac:	687b      	ldr	r3, [r7, #4]
 8007aae:	681b      	ldr	r3, [r3, #0]
 8007ab0:	68db      	ldr	r3, [r3, #12]
 8007ab2:	617b      	str	r3, [r7, #20]
 8007ab4:	687b      	ldr	r3, [r7, #4]
 8007ab6:	681b      	ldr	r3, [r3, #0]
 8007ab8:	689b      	ldr	r3, [r3, #8]
 8007aba:	617b      	str	r3, [r7, #20]
 8007abc:	697b      	ldr	r3, [r7, #20]
 8007abe:	e00b      	b.n	8007ad8 <HAL_SPI_IRQHandler+0xdc>
      }
      else
      {
        __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8007ac0:	2300      	movs	r3, #0
 8007ac2:	613b      	str	r3, [r7, #16]
 8007ac4:	687b      	ldr	r3, [r7, #4]
 8007ac6:	681b      	ldr	r3, [r3, #0]
 8007ac8:	68db      	ldr	r3, [r3, #12]
 8007aca:	613b      	str	r3, [r7, #16]
 8007acc:	687b      	ldr	r3, [r7, #4]
 8007ace:	681b      	ldr	r3, [r3, #0]
 8007ad0:	689b      	ldr	r3, [r3, #8]
 8007ad2:	613b      	str	r3, [r7, #16]
 8007ad4:	693b      	ldr	r3, [r7, #16]
        return;
 8007ad6:	e080      	b.n	8007bda <HAL_SPI_IRQHandler+0x1de>
      }
    }

    /* SPI Mode Fault error interrupt occurred -------------------------------*/
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET)
 8007ad8:	69bb      	ldr	r3, [r7, #24]
 8007ada:	f003 0320 	and.w	r3, r3, #32
 8007ade:	2b00      	cmp	r3, #0
 8007ae0:	d014      	beq.n	8007b0c <HAL_SPI_IRQHandler+0x110>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
 8007ae2:	687b      	ldr	r3, [r7, #4]
 8007ae4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007ae6:	f043 0201 	orr.w	r2, r3, #1
 8007aea:	687b      	ldr	r3, [r7, #4]
 8007aec:	655a      	str	r2, [r3, #84]	; 0x54
      __HAL_SPI_CLEAR_MODFFLAG(hspi);
 8007aee:	2300      	movs	r3, #0
 8007af0:	60fb      	str	r3, [r7, #12]
 8007af2:	687b      	ldr	r3, [r7, #4]
 8007af4:	681b      	ldr	r3, [r3, #0]
 8007af6:	689b      	ldr	r3, [r3, #8]
 8007af8:	60fb      	str	r3, [r7, #12]
 8007afa:	687b      	ldr	r3, [r7, #4]
 8007afc:	681b      	ldr	r3, [r3, #0]
 8007afe:	681a      	ldr	r2, [r3, #0]
 8007b00:	687b      	ldr	r3, [r7, #4]
 8007b02:	681b      	ldr	r3, [r3, #0]
 8007b04:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8007b08:	601a      	str	r2, [r3, #0]
 8007b0a:	68fb      	ldr	r3, [r7, #12]
    }

    /* SPI Frame error interrupt occurred ------------------------------------*/
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)
 8007b0c:	69bb      	ldr	r3, [r7, #24]
 8007b0e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007b12:	2b00      	cmp	r3, #0
 8007b14:	d00c      	beq.n	8007b30 <HAL_SPI_IRQHandler+0x134>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
 8007b16:	687b      	ldr	r3, [r7, #4]
 8007b18:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007b1a:	f043 0208 	orr.w	r2, r3, #8
 8007b1e:	687b      	ldr	r3, [r7, #4]
 8007b20:	655a      	str	r2, [r3, #84]	; 0x54
      __HAL_SPI_CLEAR_FREFLAG(hspi);
 8007b22:	2300      	movs	r3, #0
 8007b24:	60bb      	str	r3, [r7, #8]
 8007b26:	687b      	ldr	r3, [r7, #4]
 8007b28:	681b      	ldr	r3, [r3, #0]
 8007b2a:	689b      	ldr	r3, [r3, #8]
 8007b2c:	60bb      	str	r3, [r7, #8]
 8007b2e:	68bb      	ldr	r3, [r7, #8]
    }

    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8007b30:	687b      	ldr	r3, [r7, #4]
 8007b32:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007b34:	2b00      	cmp	r3, #0
 8007b36:	d04f      	beq.n	8007bd8 <HAL_SPI_IRQHandler+0x1dc>
    {
      /* Disable all interrupts */
      __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE | SPI_IT_TXE | SPI_IT_ERR);
 8007b38:	687b      	ldr	r3, [r7, #4]
 8007b3a:	681b      	ldr	r3, [r3, #0]
 8007b3c:	685a      	ldr	r2, [r3, #4]
 8007b3e:	687b      	ldr	r3, [r7, #4]
 8007b40:	681b      	ldr	r3, [r3, #0]
 8007b42:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8007b46:	605a      	str	r2, [r3, #4]

      hspi->State = HAL_SPI_STATE_READY;
 8007b48:	687b      	ldr	r3, [r7, #4]
 8007b4a:	2201      	movs	r2, #1
 8007b4c:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
      /* Disable the SPI DMA requests if enabled */
      if ((HAL_IS_BIT_SET(itsource, SPI_CR2_TXDMAEN)) || (HAL_IS_BIT_SET(itsource, SPI_CR2_RXDMAEN)))
 8007b50:	69fb      	ldr	r3, [r7, #28]
 8007b52:	f003 0302 	and.w	r3, r3, #2
 8007b56:	2b00      	cmp	r3, #0
 8007b58:	d104      	bne.n	8007b64 <HAL_SPI_IRQHandler+0x168>
 8007b5a:	69fb      	ldr	r3, [r7, #28]
 8007b5c:	f003 0301 	and.w	r3, r3, #1
 8007b60:	2b00      	cmp	r3, #0
 8007b62:	d034      	beq.n	8007bce <HAL_SPI_IRQHandler+0x1d2>
      {
        CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN));
 8007b64:	687b      	ldr	r3, [r7, #4]
 8007b66:	681b      	ldr	r3, [r3, #0]
 8007b68:	685a      	ldr	r2, [r3, #4]
 8007b6a:	687b      	ldr	r3, [r7, #4]
 8007b6c:	681b      	ldr	r3, [r3, #0]
 8007b6e:	f022 0203 	bic.w	r2, r2, #3
 8007b72:	605a      	str	r2, [r3, #4]

        /* Abort the SPI DMA Rx channel */
        if (hspi->hdmarx != NULL)
 8007b74:	687b      	ldr	r3, [r7, #4]
 8007b76:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007b78:	2b00      	cmp	r3, #0
 8007b7a:	d011      	beq.n	8007ba0 <HAL_SPI_IRQHandler+0x1a4>
        {
          /* Set the SPI DMA Abort callback :
          will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
          hspi->hdmarx->XferAbortCallback = SPI_DMAAbortOnError;
 8007b7c:	687b      	ldr	r3, [r7, #4]
 8007b7e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007b80:	4a17      	ldr	r2, [pc, #92]	; (8007be0 <HAL_SPI_IRQHandler+0x1e4>)
 8007b82:	651a      	str	r2, [r3, #80]	; 0x50
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
 8007b84:	687b      	ldr	r3, [r7, #4]
 8007b86:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007b88:	4618      	mov	r0, r3
 8007b8a:	f7fc fc95 	bl	80044b8 <HAL_DMA_Abort_IT>
 8007b8e:	4603      	mov	r3, r0
 8007b90:	2b00      	cmp	r3, #0
 8007b92:	d005      	beq.n	8007ba0 <HAL_SPI_IRQHandler+0x1a4>
          {
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 8007b94:	687b      	ldr	r3, [r7, #4]
 8007b96:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007b98:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8007b9c:	687b      	ldr	r3, [r7, #4]
 8007b9e:	655a      	str	r2, [r3, #84]	; 0x54
          }
        }
        /* Abort the SPI DMA Tx channel */
        if (hspi->hdmatx != NULL)
 8007ba0:	687b      	ldr	r3, [r7, #4]
 8007ba2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8007ba4:	2b00      	cmp	r3, #0
 8007ba6:	d016      	beq.n	8007bd6 <HAL_SPI_IRQHandler+0x1da>
        {
          /* Set the SPI DMA Abort callback :
          will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
          hspi->hdmatx->XferAbortCallback = SPI_DMAAbortOnError;
 8007ba8:	687b      	ldr	r3, [r7, #4]
 8007baa:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8007bac:	4a0c      	ldr	r2, [pc, #48]	; (8007be0 <HAL_SPI_IRQHandler+0x1e4>)
 8007bae:	651a      	str	r2, [r3, #80]	; 0x50
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
 8007bb0:	687b      	ldr	r3, [r7, #4]
 8007bb2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8007bb4:	4618      	mov	r0, r3
 8007bb6:	f7fc fc7f 	bl	80044b8 <HAL_DMA_Abort_IT>
 8007bba:	4603      	mov	r3, r0
 8007bbc:	2b00      	cmp	r3, #0
 8007bbe:	d00a      	beq.n	8007bd6 <HAL_SPI_IRQHandler+0x1da>
          {
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 8007bc0:	687b      	ldr	r3, [r7, #4]
 8007bc2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007bc4:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8007bc8:	687b      	ldr	r3, [r7, #4]
 8007bca:	655a      	str	r2, [r3, #84]	; 0x54
        if (hspi->hdmatx != NULL)
 8007bcc:	e003      	b.n	8007bd6 <HAL_SPI_IRQHandler+0x1da>
      {
        /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
        hspi->ErrorCallback(hspi);
#else
        HAL_SPI_ErrorCallback(hspi);
 8007bce:	6878      	ldr	r0, [r7, #4]
 8007bd0:	f7fb fd9e 	bl	8003710 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
      }
    }
    return;
 8007bd4:	e000      	b.n	8007bd8 <HAL_SPI_IRQHandler+0x1dc>
        if (hspi->hdmatx != NULL)
 8007bd6:	bf00      	nop
    return;
 8007bd8:	bf00      	nop
  }
}
 8007bda:	3720      	adds	r7, #32
 8007bdc:	46bd      	mov	sp, r7
 8007bde:	bd80      	pop	{r7, pc}
 8007be0:	08007cfd 	.word	0x08007cfd

08007be4 <HAL_SPI_TxHalfCpltCallback>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_TxHalfCpltCallback(SPI_HandleTypeDef *hspi)
{
 8007be4:	b480      	push	{r7}
 8007be6:	b083      	sub	sp, #12
 8007be8:	af00      	add	r7, sp, #0
 8007bea:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_TxHalfCpltCallback should be implemented in the user file
   */
}
 8007bec:	bf00      	nop
 8007bee:	370c      	adds	r7, #12
 8007bf0:	46bd      	mov	sp, r7
 8007bf2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007bf6:	4770      	bx	lr

08007bf8 <SPI_DMATransmitCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma)
{
 8007bf8:	b580      	push	{r7, lr}
 8007bfa:	b086      	sub	sp, #24
 8007bfc:	af00      	add	r7, sp, #0
 8007bfe:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 8007c00:	687b      	ldr	r3, [r7, #4]
 8007c02:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007c04:	617b      	str	r3, [r7, #20]
  uint32_t tickstart;

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8007c06:	f7fc f995 	bl	8003f34 <HAL_GetTick>
 8007c0a:	6138      	str	r0, [r7, #16]

  /* DMA Normal Mode */
  if ((hdma->Instance->CR & DMA_SxCR_CIRC) != DMA_SxCR_CIRC)
 8007c0c:	687b      	ldr	r3, [r7, #4]
 8007c0e:	681b      	ldr	r3, [r3, #0]
 8007c10:	681b      	ldr	r3, [r3, #0]
 8007c12:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007c16:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8007c1a:	d03b      	beq.n	8007c94 <SPI_DMATransmitCplt+0x9c>
  {
    /* Disable ERR interrupt */
    __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
 8007c1c:	697b      	ldr	r3, [r7, #20]
 8007c1e:	681b      	ldr	r3, [r3, #0]
 8007c20:	685a      	ldr	r2, [r3, #4]
 8007c22:	697b      	ldr	r3, [r7, #20]
 8007c24:	681b      	ldr	r3, [r3, #0]
 8007c26:	f022 0220 	bic.w	r2, r2, #32
 8007c2a:	605a      	str	r2, [r3, #4]

    /* Disable Tx DMA Request */
    CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 8007c2c:	697b      	ldr	r3, [r7, #20]
 8007c2e:	681b      	ldr	r3, [r3, #0]
 8007c30:	685a      	ldr	r2, [r3, #4]
 8007c32:	697b      	ldr	r3, [r7, #20]
 8007c34:	681b      	ldr	r3, [r3, #0]
 8007c36:	f022 0202 	bic.w	r2, r2, #2
 8007c3a:	605a      	str	r2, [r3, #4]

    /* Check the end of the transaction */
    if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
 8007c3c:	693a      	ldr	r2, [r7, #16]
 8007c3e:	2164      	movs	r1, #100	; 0x64
 8007c40:	6978      	ldr	r0, [r7, #20]
 8007c42:	f000 f95d 	bl	8007f00 <SPI_EndRxTxTransaction>
 8007c46:	4603      	mov	r3, r0
 8007c48:	2b00      	cmp	r3, #0
 8007c4a:	d005      	beq.n	8007c58 <SPI_DMATransmitCplt+0x60>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007c4c:	697b      	ldr	r3, [r7, #20]
 8007c4e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007c50:	f043 0220 	orr.w	r2, r3, #32
 8007c54:	697b      	ldr	r3, [r7, #20]
 8007c56:	655a      	str	r2, [r3, #84]	; 0x54
    }

    /* Clear overrun flag in 2 Lines communication mode because received data is not read */
    if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8007c58:	697b      	ldr	r3, [r7, #20]
 8007c5a:	689b      	ldr	r3, [r3, #8]
 8007c5c:	2b00      	cmp	r3, #0
 8007c5e:	d10a      	bne.n	8007c76 <SPI_DMATransmitCplt+0x7e>
    {
      __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8007c60:	2300      	movs	r3, #0
 8007c62:	60fb      	str	r3, [r7, #12]
 8007c64:	697b      	ldr	r3, [r7, #20]
 8007c66:	681b      	ldr	r3, [r3, #0]
 8007c68:	68db      	ldr	r3, [r3, #12]
 8007c6a:	60fb      	str	r3, [r7, #12]
 8007c6c:	697b      	ldr	r3, [r7, #20]
 8007c6e:	681b      	ldr	r3, [r3, #0]
 8007c70:	689b      	ldr	r3, [r3, #8]
 8007c72:	60fb      	str	r3, [r7, #12]
 8007c74:	68fb      	ldr	r3, [r7, #12]
    }

    hspi->TxXferCount = 0U;
 8007c76:	697b      	ldr	r3, [r7, #20]
 8007c78:	2200      	movs	r2, #0
 8007c7a:	86da      	strh	r2, [r3, #54]	; 0x36
    hspi->State = HAL_SPI_STATE_READY;
 8007c7c:	697b      	ldr	r3, [r7, #20]
 8007c7e:	2201      	movs	r2, #1
 8007c80:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8007c84:	697b      	ldr	r3, [r7, #20]
 8007c86:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007c88:	2b00      	cmp	r3, #0
 8007c8a:	d003      	beq.n	8007c94 <SPI_DMATransmitCplt+0x9c>
    {
      /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
      hspi->ErrorCallback(hspi);
#else
      HAL_SPI_ErrorCallback(hspi);
 8007c8c:	6978      	ldr	r0, [r7, #20]
 8007c8e:	f7fb fd3f 	bl	8003710 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
      return;
 8007c92:	e002      	b.n	8007c9a <SPI_DMATransmitCplt+0xa2>
  }
  /* Call user Tx complete callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->TxCpltCallback(hspi);
#else
  HAL_SPI_TxCpltCallback(hspi);
 8007c94:	6978      	ldr	r0, [r7, #20]
 8007c96:	f7fb fd51 	bl	800373c <HAL_SPI_TxCpltCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8007c9a:	3718      	adds	r7, #24
 8007c9c:	46bd      	mov	sp, r7
 8007c9e:	bd80      	pop	{r7, pc}

08007ca0 <SPI_DMAHalfTransmitCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma)
{
 8007ca0:	b580      	push	{r7, lr}
 8007ca2:	b084      	sub	sp, #16
 8007ca4:	af00      	add	r7, sp, #0
 8007ca6:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 8007ca8:	687b      	ldr	r3, [r7, #4]
 8007caa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007cac:	60fb      	str	r3, [r7, #12]

  /* Call user Tx half complete callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->TxHalfCpltCallback(hspi);
#else
  HAL_SPI_TxHalfCpltCallback(hspi);
 8007cae:	68f8      	ldr	r0, [r7, #12]
 8007cb0:	f7ff ff98 	bl	8007be4 <HAL_SPI_TxHalfCpltCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8007cb4:	bf00      	nop
 8007cb6:	3710      	adds	r7, #16
 8007cb8:	46bd      	mov	sp, r7
 8007cba:	bd80      	pop	{r7, pc}

08007cbc <SPI_DMAError>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMAError(DMA_HandleTypeDef *hdma)
{
 8007cbc:	b580      	push	{r7, lr}
 8007cbe:	b084      	sub	sp, #16
 8007cc0:	af00      	add	r7, sp, #0
 8007cc2:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 8007cc4:	687b      	ldr	r3, [r7, #4]
 8007cc6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007cc8:	60fb      	str	r3, [r7, #12]

  /* Stop the disable DMA transfer on SPI side */
  CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 8007cca:	68fb      	ldr	r3, [r7, #12]
 8007ccc:	681b      	ldr	r3, [r3, #0]
 8007cce:	685a      	ldr	r2, [r3, #4]
 8007cd0:	68fb      	ldr	r3, [r7, #12]
 8007cd2:	681b      	ldr	r3, [r3, #0]
 8007cd4:	f022 0203 	bic.w	r2, r2, #3
 8007cd8:	605a      	str	r2, [r3, #4]

  SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 8007cda:	68fb      	ldr	r3, [r7, #12]
 8007cdc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007cde:	f043 0210 	orr.w	r2, r3, #16
 8007ce2:	68fb      	ldr	r3, [r7, #12]
 8007ce4:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->State = HAL_SPI_STATE_READY;
 8007ce6:	68fb      	ldr	r3, [r7, #12]
 8007ce8:	2201      	movs	r2, #1
 8007cea:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->ErrorCallback(hspi);
#else
  HAL_SPI_ErrorCallback(hspi);
 8007cee:	68f8      	ldr	r0, [r7, #12]
 8007cf0:	f7fb fd0e 	bl	8003710 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8007cf4:	bf00      	nop
 8007cf6:	3710      	adds	r7, #16
 8007cf8:	46bd      	mov	sp, r7
 8007cfa:	bd80      	pop	{r7, pc}

08007cfc <SPI_DMAAbortOnError>:
  *         (To be called at end of DMA Abort procedure following error occurrence).
  * @param  hdma DMA handle.
  * @retval None
  */
static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
 8007cfc:	b580      	push	{r7, lr}
 8007cfe:	b084      	sub	sp, #16
 8007d00:	af00      	add	r7, sp, #0
 8007d02:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 8007d04:	687b      	ldr	r3, [r7, #4]
 8007d06:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007d08:	60fb      	str	r3, [r7, #12]
  hspi->RxXferCount = 0U;
 8007d0a:	68fb      	ldr	r3, [r7, #12]
 8007d0c:	2200      	movs	r2, #0
 8007d0e:	87da      	strh	r2, [r3, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 8007d10:	68fb      	ldr	r3, [r7, #12]
 8007d12:	2200      	movs	r2, #0
 8007d14:	86da      	strh	r2, [r3, #54]	; 0x36

  /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->ErrorCallback(hspi);
#else
  HAL_SPI_ErrorCallback(hspi);
 8007d16:	68f8      	ldr	r0, [r7, #12]
 8007d18:	f7fb fcfa 	bl	8003710 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8007d1c:	bf00      	nop
 8007d1e:	3710      	adds	r7, #16
 8007d20:	46bd      	mov	sp, r7
 8007d22:	bd80      	pop	{r7, pc}

08007d24 <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 8007d24:	b580      	push	{r7, lr}
 8007d26:	b088      	sub	sp, #32
 8007d28:	af00      	add	r7, sp, #0
 8007d2a:	60f8      	str	r0, [r7, #12]
 8007d2c:	60b9      	str	r1, [r7, #8]
 8007d2e:	603b      	str	r3, [r7, #0]
 8007d30:	4613      	mov	r3, r2
 8007d32:	71fb      	strb	r3, [r7, #7]
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 8007d34:	f7fc f8fe 	bl	8003f34 <HAL_GetTick>
 8007d38:	4602      	mov	r2, r0
 8007d3a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8007d3c:	1a9b      	subs	r3, r3, r2
 8007d3e:	683a      	ldr	r2, [r7, #0]
 8007d40:	4413      	add	r3, r2
 8007d42:	61fb      	str	r3, [r7, #28]
  tmp_tickstart = HAL_GetTick();
 8007d44:	f7fc f8f6 	bl	8003f34 <HAL_GetTick>
 8007d48:	61b8      	str	r0, [r7, #24]

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8007d4a:	4b39      	ldr	r3, [pc, #228]	; (8007e30 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 8007d4c:	681b      	ldr	r3, [r3, #0]
 8007d4e:	015b      	lsls	r3, r3, #5
 8007d50:	0d1b      	lsrs	r3, r3, #20
 8007d52:	69fa      	ldr	r2, [r7, #28]
 8007d54:	fb02 f303 	mul.w	r3, r2, r3
 8007d58:	617b      	str	r3, [r7, #20]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8007d5a:	e054      	b.n	8007e06 <SPI_WaitFlagStateUntilTimeout+0xe2>
  {
    if (Timeout != HAL_MAX_DELAY)
 8007d5c:	683b      	ldr	r3, [r7, #0]
 8007d5e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007d62:	d050      	beq.n	8007e06 <SPI_WaitFlagStateUntilTimeout+0xe2>
    {
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 8007d64:	f7fc f8e6 	bl	8003f34 <HAL_GetTick>
 8007d68:	4602      	mov	r2, r0
 8007d6a:	69bb      	ldr	r3, [r7, #24]
 8007d6c:	1ad3      	subs	r3, r2, r3
 8007d6e:	69fa      	ldr	r2, [r7, #28]
 8007d70:	429a      	cmp	r2, r3
 8007d72:	d902      	bls.n	8007d7a <SPI_WaitFlagStateUntilTimeout+0x56>
 8007d74:	69fb      	ldr	r3, [r7, #28]
 8007d76:	2b00      	cmp	r3, #0
 8007d78:	d13d      	bne.n	8007df6 <SPI_WaitFlagStateUntilTimeout+0xd2>
        /* Disable the SPI and reset the CRC: the CRC value should be cleared
           on both master and slave sides in order to resynchronize the master
           and slave for their respective CRC calculation */

        /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8007d7a:	68fb      	ldr	r3, [r7, #12]
 8007d7c:	681b      	ldr	r3, [r3, #0]
 8007d7e:	685a      	ldr	r2, [r3, #4]
 8007d80:	68fb      	ldr	r3, [r7, #12]
 8007d82:	681b      	ldr	r3, [r3, #0]
 8007d84:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8007d88:	605a      	str	r2, [r3, #4]

        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007d8a:	68fb      	ldr	r3, [r7, #12]
 8007d8c:	685b      	ldr	r3, [r3, #4]
 8007d8e:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8007d92:	d111      	bne.n	8007db8 <SPI_WaitFlagStateUntilTimeout+0x94>
 8007d94:	68fb      	ldr	r3, [r7, #12]
 8007d96:	689b      	ldr	r3, [r3, #8]
 8007d98:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8007d9c:	d004      	beq.n	8007da8 <SPI_WaitFlagStateUntilTimeout+0x84>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8007d9e:	68fb      	ldr	r3, [r7, #12]
 8007da0:	689b      	ldr	r3, [r3, #8]
 8007da2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8007da6:	d107      	bne.n	8007db8 <SPI_WaitFlagStateUntilTimeout+0x94>
        {
          /* Disable SPI peripheral */
          __HAL_SPI_DISABLE(hspi);
 8007da8:	68fb      	ldr	r3, [r7, #12]
 8007daa:	681b      	ldr	r3, [r3, #0]
 8007dac:	681a      	ldr	r2, [r3, #0]
 8007dae:	68fb      	ldr	r3, [r7, #12]
 8007db0:	681b      	ldr	r3, [r3, #0]
 8007db2:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8007db6:	601a      	str	r2, [r3, #0]
        }

        /* Reset CRC Calculation */
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8007db8:	68fb      	ldr	r3, [r7, #12]
 8007dba:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007dbc:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8007dc0:	d10f      	bne.n	8007de2 <SPI_WaitFlagStateUntilTimeout+0xbe>
        {
          SPI_RESET_CRC(hspi);
 8007dc2:	68fb      	ldr	r3, [r7, #12]
 8007dc4:	681b      	ldr	r3, [r3, #0]
 8007dc6:	681a      	ldr	r2, [r3, #0]
 8007dc8:	68fb      	ldr	r3, [r7, #12]
 8007dca:	681b      	ldr	r3, [r3, #0]
 8007dcc:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8007dd0:	601a      	str	r2, [r3, #0]
 8007dd2:	68fb      	ldr	r3, [r7, #12]
 8007dd4:	681b      	ldr	r3, [r3, #0]
 8007dd6:	681a      	ldr	r2, [r3, #0]
 8007dd8:	68fb      	ldr	r3, [r7, #12]
 8007dda:	681b      	ldr	r3, [r3, #0]
 8007ddc:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8007de0:	601a      	str	r2, [r3, #0]
        }

        hspi->State = HAL_SPI_STATE_READY;
 8007de2:	68fb      	ldr	r3, [r7, #12]
 8007de4:	2201      	movs	r2, #1
 8007de6:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

        /* Process Unlocked */
        __HAL_UNLOCK(hspi);
 8007dea:	68fb      	ldr	r3, [r7, #12]
 8007dec:	2200      	movs	r2, #0
 8007dee:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

        return HAL_TIMEOUT;
 8007df2:	2303      	movs	r3, #3
 8007df4:	e017      	b.n	8007e26 <SPI_WaitFlagStateUntilTimeout+0x102>
      }
      /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop procedure */
      if (count == 0U)
 8007df6:	697b      	ldr	r3, [r7, #20]
 8007df8:	2b00      	cmp	r3, #0
 8007dfa:	d101      	bne.n	8007e00 <SPI_WaitFlagStateUntilTimeout+0xdc>
      {
        tmp_timeout = 0U;
 8007dfc:	2300      	movs	r3, #0
 8007dfe:	61fb      	str	r3, [r7, #28]
      }
      count--;
 8007e00:	697b      	ldr	r3, [r7, #20]
 8007e02:	3b01      	subs	r3, #1
 8007e04:	617b      	str	r3, [r7, #20]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8007e06:	68fb      	ldr	r3, [r7, #12]
 8007e08:	681b      	ldr	r3, [r3, #0]
 8007e0a:	689a      	ldr	r2, [r3, #8]
 8007e0c:	68bb      	ldr	r3, [r7, #8]
 8007e0e:	4013      	ands	r3, r2
 8007e10:	68ba      	ldr	r2, [r7, #8]
 8007e12:	429a      	cmp	r2, r3
 8007e14:	bf0c      	ite	eq
 8007e16:	2301      	moveq	r3, #1
 8007e18:	2300      	movne	r3, #0
 8007e1a:	b2db      	uxtb	r3, r3
 8007e1c:	461a      	mov	r2, r3
 8007e1e:	79fb      	ldrb	r3, [r7, #7]
 8007e20:	429a      	cmp	r2, r3
 8007e22:	d19b      	bne.n	8007d5c <SPI_WaitFlagStateUntilTimeout+0x38>
    }
  }

  return HAL_OK;
 8007e24:	2300      	movs	r3, #0
}
 8007e26:	4618      	mov	r0, r3
 8007e28:	3720      	adds	r7, #32
 8007e2a:	46bd      	mov	sp, r7
 8007e2c:	bd80      	pop	{r7, pc}
 8007e2e:	bf00      	nop
 8007e30:	20000004 	.word	0x20000004

08007e34 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 8007e34:	b580      	push	{r7, lr}
 8007e36:	b086      	sub	sp, #24
 8007e38:	af02      	add	r7, sp, #8
 8007e3a:	60f8      	str	r0, [r7, #12]
 8007e3c:	60b9      	str	r1, [r7, #8]
 8007e3e:	607a      	str	r2, [r7, #4]
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007e40:	68fb      	ldr	r3, [r7, #12]
 8007e42:	685b      	ldr	r3, [r3, #4]
 8007e44:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8007e48:	d111      	bne.n	8007e6e <SPI_EndRxTransaction+0x3a>
 8007e4a:	68fb      	ldr	r3, [r7, #12]
 8007e4c:	689b      	ldr	r3, [r3, #8]
 8007e4e:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8007e52:	d004      	beq.n	8007e5e <SPI_EndRxTransaction+0x2a>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8007e54:	68fb      	ldr	r3, [r7, #12]
 8007e56:	689b      	ldr	r3, [r3, #8]
 8007e58:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8007e5c:	d107      	bne.n	8007e6e <SPI_EndRxTransaction+0x3a>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 8007e5e:	68fb      	ldr	r3, [r7, #12]
 8007e60:	681b      	ldr	r3, [r3, #0]
 8007e62:	681a      	ldr	r2, [r3, #0]
 8007e64:	68fb      	ldr	r3, [r7, #12]
 8007e66:	681b      	ldr	r3, [r3, #0]
 8007e68:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8007e6c:	601a      	str	r2, [r3, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8007e6e:	68fb      	ldr	r3, [r7, #12]
 8007e70:	685b      	ldr	r3, [r3, #4]
 8007e72:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8007e76:	d12a      	bne.n	8007ece <SPI_EndRxTransaction+0x9a>
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8007e78:	68fb      	ldr	r3, [r7, #12]
 8007e7a:	689b      	ldr	r3, [r3, #8]
 8007e7c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8007e80:	d012      	beq.n	8007ea8 <SPI_EndRxTransaction+0x74>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8007e82:	687b      	ldr	r3, [r7, #4]
 8007e84:	9300      	str	r3, [sp, #0]
 8007e86:	68bb      	ldr	r3, [r7, #8]
 8007e88:	2200      	movs	r2, #0
 8007e8a:	2180      	movs	r1, #128	; 0x80
 8007e8c:	68f8      	ldr	r0, [r7, #12]
 8007e8e:	f7ff ff49 	bl	8007d24 <SPI_WaitFlagStateUntilTimeout>
 8007e92:	4603      	mov	r3, r0
 8007e94:	2b00      	cmp	r3, #0
 8007e96:	d02d      	beq.n	8007ef4 <SPI_EndRxTransaction+0xc0>
      {
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007e98:	68fb      	ldr	r3, [r7, #12]
 8007e9a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007e9c:	f043 0220 	orr.w	r2, r3, #32
 8007ea0:	68fb      	ldr	r3, [r7, #12]
 8007ea2:	655a      	str	r2, [r3, #84]	; 0x54
        return HAL_TIMEOUT;
 8007ea4:	2303      	movs	r3, #3
 8007ea6:	e026      	b.n	8007ef6 <SPI_EndRxTransaction+0xc2>
      }
    }
    else
    {
      /* Wait the RXNE reset */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8007ea8:	687b      	ldr	r3, [r7, #4]
 8007eaa:	9300      	str	r3, [sp, #0]
 8007eac:	68bb      	ldr	r3, [r7, #8]
 8007eae:	2200      	movs	r2, #0
 8007eb0:	2101      	movs	r1, #1
 8007eb2:	68f8      	ldr	r0, [r7, #12]
 8007eb4:	f7ff ff36 	bl	8007d24 <SPI_WaitFlagStateUntilTimeout>
 8007eb8:	4603      	mov	r3, r0
 8007eba:	2b00      	cmp	r3, #0
 8007ebc:	d01a      	beq.n	8007ef4 <SPI_EndRxTransaction+0xc0>
      {
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007ebe:	68fb      	ldr	r3, [r7, #12]
 8007ec0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007ec2:	f043 0220 	orr.w	r2, r3, #32
 8007ec6:	68fb      	ldr	r3, [r7, #12]
 8007ec8:	655a      	str	r2, [r3, #84]	; 0x54
        return HAL_TIMEOUT;
 8007eca:	2303      	movs	r3, #3
 8007ecc:	e013      	b.n	8007ef6 <SPI_EndRxTransaction+0xc2>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8007ece:	687b      	ldr	r3, [r7, #4]
 8007ed0:	9300      	str	r3, [sp, #0]
 8007ed2:	68bb      	ldr	r3, [r7, #8]
 8007ed4:	2200      	movs	r2, #0
 8007ed6:	2101      	movs	r1, #1
 8007ed8:	68f8      	ldr	r0, [r7, #12]
 8007eda:	f7ff ff23 	bl	8007d24 <SPI_WaitFlagStateUntilTimeout>
 8007ede:	4603      	mov	r3, r0
 8007ee0:	2b00      	cmp	r3, #0
 8007ee2:	d007      	beq.n	8007ef4 <SPI_EndRxTransaction+0xc0>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007ee4:	68fb      	ldr	r3, [r7, #12]
 8007ee6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007ee8:	f043 0220 	orr.w	r2, r3, #32
 8007eec:	68fb      	ldr	r3, [r7, #12]
 8007eee:	655a      	str	r2, [r3, #84]	; 0x54
      return HAL_TIMEOUT;
 8007ef0:	2303      	movs	r3, #3
 8007ef2:	e000      	b.n	8007ef6 <SPI_EndRxTransaction+0xc2>
    }
  }
  return HAL_OK;
 8007ef4:	2300      	movs	r3, #0
}
 8007ef6:	4618      	mov	r0, r3
 8007ef8:	3710      	adds	r7, #16
 8007efa:	46bd      	mov	sp, r7
 8007efc:	bd80      	pop	{r7, pc}
	...

08007f00 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8007f00:	b580      	push	{r7, lr}
 8007f02:	b088      	sub	sp, #32
 8007f04:	af02      	add	r7, sp, #8
 8007f06:	60f8      	str	r0, [r7, #12]
 8007f08:	60b9      	str	r1, [r7, #8]
 8007f0a:	607a      	str	r2, [r7, #4]
  /* Wait until TXE flag */
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 8007f0c:	687b      	ldr	r3, [r7, #4]
 8007f0e:	9300      	str	r3, [sp, #0]
 8007f10:	68bb      	ldr	r3, [r7, #8]
 8007f12:	2201      	movs	r2, #1
 8007f14:	2102      	movs	r1, #2
 8007f16:	68f8      	ldr	r0, [r7, #12]
 8007f18:	f7ff ff04 	bl	8007d24 <SPI_WaitFlagStateUntilTimeout>
 8007f1c:	4603      	mov	r3, r0
 8007f1e:	2b00      	cmp	r3, #0
 8007f20:	d007      	beq.n	8007f32 <SPI_EndRxTxTransaction+0x32>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007f22:	68fb      	ldr	r3, [r7, #12]
 8007f24:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007f26:	f043 0220 	orr.w	r2, r3, #32
 8007f2a:	68fb      	ldr	r3, [r7, #12]
 8007f2c:	655a      	str	r2, [r3, #84]	; 0x54
    return HAL_TIMEOUT;
 8007f2e:	2303      	movs	r3, #3
 8007f30:	e032      	b.n	8007f98 <SPI_EndRxTxTransaction+0x98>
  }

  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8007f32:	4b1b      	ldr	r3, [pc, #108]	; (8007fa0 <SPI_EndRxTxTransaction+0xa0>)
 8007f34:	681b      	ldr	r3, [r3, #0]
 8007f36:	4a1b      	ldr	r2, [pc, #108]	; (8007fa4 <SPI_EndRxTxTransaction+0xa4>)
 8007f38:	fba2 2303 	umull	r2, r3, r2, r3
 8007f3c:	0d5b      	lsrs	r3, r3, #21
 8007f3e:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8007f42:	fb02 f303 	mul.w	r3, r2, r3
 8007f46:	617b      	str	r3, [r7, #20]
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8007f48:	68fb      	ldr	r3, [r7, #12]
 8007f4a:	685b      	ldr	r3, [r3, #4]
 8007f4c:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8007f50:	d112      	bne.n	8007f78 <SPI_EndRxTxTransaction+0x78>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8007f52:	687b      	ldr	r3, [r7, #4]
 8007f54:	9300      	str	r3, [sp, #0]
 8007f56:	68bb      	ldr	r3, [r7, #8]
 8007f58:	2200      	movs	r2, #0
 8007f5a:	2180      	movs	r1, #128	; 0x80
 8007f5c:	68f8      	ldr	r0, [r7, #12]
 8007f5e:	f7ff fee1 	bl	8007d24 <SPI_WaitFlagStateUntilTimeout>
 8007f62:	4603      	mov	r3, r0
 8007f64:	2b00      	cmp	r3, #0
 8007f66:	d016      	beq.n	8007f96 <SPI_EndRxTxTransaction+0x96>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007f68:	68fb      	ldr	r3, [r7, #12]
 8007f6a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007f6c:	f043 0220 	orr.w	r2, r3, #32
 8007f70:	68fb      	ldr	r3, [r7, #12]
 8007f72:	655a      	str	r2, [r3, #84]	; 0x54
      return HAL_TIMEOUT;
 8007f74:	2303      	movs	r3, #3
 8007f76:	e00f      	b.n	8007f98 <SPI_EndRxTxTransaction+0x98>
    * User have to calculate the timeout value to fit with the time of 1 byte transfer.
    * This time is directly link with the SPI clock from Master device.
    */
    do
    {
      if (count == 0U)
 8007f78:	697b      	ldr	r3, [r7, #20]
 8007f7a:	2b00      	cmp	r3, #0
 8007f7c:	d00a      	beq.n	8007f94 <SPI_EndRxTxTransaction+0x94>
      {
        break;
      }
      count--;
 8007f7e:	697b      	ldr	r3, [r7, #20]
 8007f80:	3b01      	subs	r3, #1
 8007f82:	617b      	str	r3, [r7, #20]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8007f84:	68fb      	ldr	r3, [r7, #12]
 8007f86:	681b      	ldr	r3, [r3, #0]
 8007f88:	689b      	ldr	r3, [r3, #8]
 8007f8a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8007f8e:	2b80      	cmp	r3, #128	; 0x80
 8007f90:	d0f2      	beq.n	8007f78 <SPI_EndRxTxTransaction+0x78>
 8007f92:	e000      	b.n	8007f96 <SPI_EndRxTxTransaction+0x96>
        break;
 8007f94:	bf00      	nop
  }

  return HAL_OK;
 8007f96:	2300      	movs	r3, #0
}
 8007f98:	4618      	mov	r0, r3
 8007f9a:	3718      	adds	r7, #24
 8007f9c:	46bd      	mov	sp, r7
 8007f9e:	bd80      	pop	{r7, pc}
 8007fa0:	20000004 	.word	0x20000004
 8007fa4:	165e9f81 	.word	0x165e9f81

08007fa8 <HAL_TIM_Base_Init>:
  *         Ex: call @ref HAL_TIM_Base_DeInit() before HAL_TIM_Base_Init()
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
 8007fa8:	b580      	push	{r7, lr}
 8007faa:	b082      	sub	sp, #8
 8007fac:	af00      	add	r7, sp, #0
 8007fae:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 8007fb0:	687b      	ldr	r3, [r7, #4]
 8007fb2:	2b00      	cmp	r3, #0
 8007fb4:	d101      	bne.n	8007fba <HAL_TIM_Base_Init+0x12>
  {
    return HAL_ERROR;
 8007fb6:	2301      	movs	r3, #1
 8007fb8:	e041      	b.n	800803e <HAL_TIM_Base_Init+0x96>
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8007fba:	687b      	ldr	r3, [r7, #4]
 8007fbc:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007fc0:	b2db      	uxtb	r3, r3
 8007fc2:	2b00      	cmp	r3, #0
 8007fc4:	d106      	bne.n	8007fd4 <HAL_TIM_Base_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8007fc6:	687b      	ldr	r3, [r7, #4]
 8007fc8:	2200      	movs	r2, #0
 8007fca:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->Base_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_TIM_Base_MspInit(htim);
 8007fce:	6878      	ldr	r0, [r7, #4]
 8007fd0:	f7fa ff88 	bl	8002ee4 <HAL_TIM_Base_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8007fd4:	687b      	ldr	r3, [r7, #4]
 8007fd6:	2202      	movs	r2, #2
 8007fd8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8007fdc:	687b      	ldr	r3, [r7, #4]
 8007fde:	681a      	ldr	r2, [r3, #0]
 8007fe0:	687b      	ldr	r3, [r7, #4]
 8007fe2:	3304      	adds	r3, #4
 8007fe4:	4619      	mov	r1, r3
 8007fe6:	4610      	mov	r0, r2
 8007fe8:	f000 fce2 	bl	80089b0 <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8007fec:	687b      	ldr	r3, [r7, #4]
 8007fee:	2201      	movs	r2, #1
 8007ff0:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8007ff4:	687b      	ldr	r3, [r7, #4]
 8007ff6:	2201      	movs	r2, #1
 8007ff8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007ffc:	687b      	ldr	r3, [r7, #4]
 8007ffe:	2201      	movs	r2, #1
 8008000:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8008004:	687b      	ldr	r3, [r7, #4]
 8008006:	2201      	movs	r2, #1
 8008008:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800800c:	687b      	ldr	r3, [r7, #4]
 800800e:	2201      	movs	r2, #1
 8008010:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8008014:	687b      	ldr	r3, [r7, #4]
 8008016:	2201      	movs	r2, #1
 8008018:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800801c:	687b      	ldr	r3, [r7, #4]
 800801e:	2201      	movs	r2, #1
 8008020:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8008024:	687b      	ldr	r3, [r7, #4]
 8008026:	2201      	movs	r2, #1
 8008028:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800802c:	687b      	ldr	r3, [r7, #4]
 800802e:	2201      	movs	r2, #1
 8008030:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 8008034:	687b      	ldr	r3, [r7, #4]
 8008036:	2201      	movs	r2, #1
 8008038:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  return HAL_OK;
 800803c:	2300      	movs	r3, #0
}
 800803e:	4618      	mov	r0, r3
 8008040:	3708      	adds	r7, #8
 8008042:	46bd      	mov	sp, r7
 8008044:	bd80      	pop	{r7, pc}
	...

08008048 <HAL_TIM_Base_Start_IT>:
  * @brief  Starts the TIM Base generation in interrupt mode.
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Start_IT(TIM_HandleTypeDef *htim)
{
 8008048:	b480      	push	{r7}
 800804a:	b085      	sub	sp, #20
 800804c:	af00      	add	r7, sp, #0
 800804e:	6078      	str	r0, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 8008050:	687b      	ldr	r3, [r7, #4]
 8008052:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8008056:	b2db      	uxtb	r3, r3
 8008058:	2b01      	cmp	r3, #1
 800805a:	d001      	beq.n	8008060 <HAL_TIM_Base_Start_IT+0x18>
  {
    return HAL_ERROR;
 800805c:	2301      	movs	r3, #1
 800805e:	e044      	b.n	80080ea <HAL_TIM_Base_Start_IT+0xa2>
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8008060:	687b      	ldr	r3, [r7, #4]
 8008062:	2202      	movs	r2, #2
 8008064:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8008068:	687b      	ldr	r3, [r7, #4]
 800806a:	681b      	ldr	r3, [r3, #0]
 800806c:	68da      	ldr	r2, [r3, #12]
 800806e:	687b      	ldr	r3, [r7, #4]
 8008070:	681b      	ldr	r3, [r3, #0]
 8008072:	f042 0201 	orr.w	r2, r2, #1
 8008076:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8008078:	687b      	ldr	r3, [r7, #4]
 800807a:	681b      	ldr	r3, [r3, #0]
 800807c:	4a1e      	ldr	r2, [pc, #120]	; (80080f8 <HAL_TIM_Base_Start_IT+0xb0>)
 800807e:	4293      	cmp	r3, r2
 8008080:	d018      	beq.n	80080b4 <HAL_TIM_Base_Start_IT+0x6c>
 8008082:	687b      	ldr	r3, [r7, #4]
 8008084:	681b      	ldr	r3, [r3, #0]
 8008086:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800808a:	d013      	beq.n	80080b4 <HAL_TIM_Base_Start_IT+0x6c>
 800808c:	687b      	ldr	r3, [r7, #4]
 800808e:	681b      	ldr	r3, [r3, #0]
 8008090:	4a1a      	ldr	r2, [pc, #104]	; (80080fc <HAL_TIM_Base_Start_IT+0xb4>)
 8008092:	4293      	cmp	r3, r2
 8008094:	d00e      	beq.n	80080b4 <HAL_TIM_Base_Start_IT+0x6c>
 8008096:	687b      	ldr	r3, [r7, #4]
 8008098:	681b      	ldr	r3, [r3, #0]
 800809a:	4a19      	ldr	r2, [pc, #100]	; (8008100 <HAL_TIM_Base_Start_IT+0xb8>)
 800809c:	4293      	cmp	r3, r2
 800809e:	d009      	beq.n	80080b4 <HAL_TIM_Base_Start_IT+0x6c>
 80080a0:	687b      	ldr	r3, [r7, #4]
 80080a2:	681b      	ldr	r3, [r3, #0]
 80080a4:	4a17      	ldr	r2, [pc, #92]	; (8008104 <HAL_TIM_Base_Start_IT+0xbc>)
 80080a6:	4293      	cmp	r3, r2
 80080a8:	d004      	beq.n	80080b4 <HAL_TIM_Base_Start_IT+0x6c>
 80080aa:	687b      	ldr	r3, [r7, #4]
 80080ac:	681b      	ldr	r3, [r3, #0]
 80080ae:	4a16      	ldr	r2, [pc, #88]	; (8008108 <HAL_TIM_Base_Start_IT+0xc0>)
 80080b0:	4293      	cmp	r3, r2
 80080b2:	d111      	bne.n	80080d8 <HAL_TIM_Base_Start_IT+0x90>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 80080b4:	687b      	ldr	r3, [r7, #4]
 80080b6:	681b      	ldr	r3, [r3, #0]
 80080b8:	689b      	ldr	r3, [r3, #8]
 80080ba:	f003 0307 	and.w	r3, r3, #7
 80080be:	60fb      	str	r3, [r7, #12]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80080c0:	68fb      	ldr	r3, [r7, #12]
 80080c2:	2b06      	cmp	r3, #6
 80080c4:	d010      	beq.n	80080e8 <HAL_TIM_Base_Start_IT+0xa0>
    {
      __HAL_TIM_ENABLE(htim);
 80080c6:	687b      	ldr	r3, [r7, #4]
 80080c8:	681b      	ldr	r3, [r3, #0]
 80080ca:	681a      	ldr	r2, [r3, #0]
 80080cc:	687b      	ldr	r3, [r7, #4]
 80080ce:	681b      	ldr	r3, [r3, #0]
 80080d0:	f042 0201 	orr.w	r2, r2, #1
 80080d4:	601a      	str	r2, [r3, #0]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80080d6:	e007      	b.n	80080e8 <HAL_TIM_Base_Start_IT+0xa0>
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 80080d8:	687b      	ldr	r3, [r7, #4]
 80080da:	681b      	ldr	r3, [r3, #0]
 80080dc:	681a      	ldr	r2, [r3, #0]
 80080de:	687b      	ldr	r3, [r7, #4]
 80080e0:	681b      	ldr	r3, [r3, #0]
 80080e2:	f042 0201 	orr.w	r2, r2, #1
 80080e6:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 80080e8:	2300      	movs	r3, #0
}
 80080ea:	4618      	mov	r0, r3
 80080ec:	3714      	adds	r7, #20
 80080ee:	46bd      	mov	sp, r7
 80080f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80080f4:	4770      	bx	lr
 80080f6:	bf00      	nop
 80080f8:	40010000 	.word	0x40010000
 80080fc:	40000400 	.word	0x40000400
 8008100:	40000800 	.word	0x40000800
 8008104:	40000c00 	.word	0x40000c00
 8008108:	40014000 	.word	0x40014000

0800810c <HAL_TIM_OC_Start>:
  *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
  *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_OC_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
{
 800810c:	b580      	push	{r7, lr}
 800810e:	b084      	sub	sp, #16
 8008110:	af00      	add	r7, sp, #0
 8008112:	6078      	str	r0, [r7, #4]
 8008114:	6039      	str	r1, [r7, #0]

  /* Check the parameters */
  assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));

  /* Check the TIM channel state */
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 8008116:	683b      	ldr	r3, [r7, #0]
 8008118:	2b00      	cmp	r3, #0
 800811a:	d109      	bne.n	8008130 <HAL_TIM_OC_Start+0x24>
 800811c:	687b      	ldr	r3, [r7, #4]
 800811e:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8008122:	b2db      	uxtb	r3, r3
 8008124:	2b01      	cmp	r3, #1
 8008126:	bf14      	ite	ne
 8008128:	2301      	movne	r3, #1
 800812a:	2300      	moveq	r3, #0
 800812c:	b2db      	uxtb	r3, r3
 800812e:	e022      	b.n	8008176 <HAL_TIM_OC_Start+0x6a>
 8008130:	683b      	ldr	r3, [r7, #0]
 8008132:	2b04      	cmp	r3, #4
 8008134:	d109      	bne.n	800814a <HAL_TIM_OC_Start+0x3e>
 8008136:	687b      	ldr	r3, [r7, #4]
 8008138:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 800813c:	b2db      	uxtb	r3, r3
 800813e:	2b01      	cmp	r3, #1
 8008140:	bf14      	ite	ne
 8008142:	2301      	movne	r3, #1
 8008144:	2300      	moveq	r3, #0
 8008146:	b2db      	uxtb	r3, r3
 8008148:	e015      	b.n	8008176 <HAL_TIM_OC_Start+0x6a>
 800814a:	683b      	ldr	r3, [r7, #0]
 800814c:	2b08      	cmp	r3, #8
 800814e:	d109      	bne.n	8008164 <HAL_TIM_OC_Start+0x58>
 8008150:	687b      	ldr	r3, [r7, #4]
 8008152:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8008156:	b2db      	uxtb	r3, r3
 8008158:	2b01      	cmp	r3, #1
 800815a:	bf14      	ite	ne
 800815c:	2301      	movne	r3, #1
 800815e:	2300      	moveq	r3, #0
 8008160:	b2db      	uxtb	r3, r3
 8008162:	e008      	b.n	8008176 <HAL_TIM_OC_Start+0x6a>
 8008164:	687b      	ldr	r3, [r7, #4]
 8008166:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800816a:	b2db      	uxtb	r3, r3
 800816c:	2b01      	cmp	r3, #1
 800816e:	bf14      	ite	ne
 8008170:	2301      	movne	r3, #1
 8008172:	2300      	moveq	r3, #0
 8008174:	b2db      	uxtb	r3, r3
 8008176:	2b00      	cmp	r3, #0
 8008178:	d001      	beq.n	800817e <HAL_TIM_OC_Start+0x72>
  {
    return HAL_ERROR;
 800817a:	2301      	movs	r3, #1
 800817c:	e068      	b.n	8008250 <HAL_TIM_OC_Start+0x144>
  }

  /* Set the TIM channel state */
  TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 800817e:	683b      	ldr	r3, [r7, #0]
 8008180:	2b00      	cmp	r3, #0
 8008182:	d104      	bne.n	800818e <HAL_TIM_OC_Start+0x82>
 8008184:	687b      	ldr	r3, [r7, #4]
 8008186:	2202      	movs	r2, #2
 8008188:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800818c:	e013      	b.n	80081b6 <HAL_TIM_OC_Start+0xaa>
 800818e:	683b      	ldr	r3, [r7, #0]
 8008190:	2b04      	cmp	r3, #4
 8008192:	d104      	bne.n	800819e <HAL_TIM_OC_Start+0x92>
 8008194:	687b      	ldr	r3, [r7, #4]
 8008196:	2202      	movs	r2, #2
 8008198:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800819c:	e00b      	b.n	80081b6 <HAL_TIM_OC_Start+0xaa>
 800819e:	683b      	ldr	r3, [r7, #0]
 80081a0:	2b08      	cmp	r3, #8
 80081a2:	d104      	bne.n	80081ae <HAL_TIM_OC_Start+0xa2>
 80081a4:	687b      	ldr	r3, [r7, #4]
 80081a6:	2202      	movs	r2, #2
 80081a8:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80081ac:	e003      	b.n	80081b6 <HAL_TIM_OC_Start+0xaa>
 80081ae:	687b      	ldr	r3, [r7, #4]
 80081b0:	2202      	movs	r2, #2
 80081b2:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

  /* Enable the Output compare channel */
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 80081b6:	687b      	ldr	r3, [r7, #4]
 80081b8:	681b      	ldr	r3, [r3, #0]
 80081ba:	2201      	movs	r2, #1
 80081bc:	6839      	ldr	r1, [r7, #0]
 80081be:	4618      	mov	r0, r3
 80081c0:	f000 fea8 	bl	8008f14 <TIM_CCxChannelCmd>

  if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 80081c4:	687b      	ldr	r3, [r7, #4]
 80081c6:	681b      	ldr	r3, [r3, #0]
 80081c8:	4a23      	ldr	r2, [pc, #140]	; (8008258 <HAL_TIM_OC_Start+0x14c>)
 80081ca:	4293      	cmp	r3, r2
 80081cc:	d107      	bne.n	80081de <HAL_TIM_OC_Start+0xd2>
  {
    /* Enable the main output */
    __HAL_TIM_MOE_ENABLE(htim);
 80081ce:	687b      	ldr	r3, [r7, #4]
 80081d0:	681b      	ldr	r3, [r3, #0]
 80081d2:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80081d4:	687b      	ldr	r3, [r7, #4]
 80081d6:	681b      	ldr	r3, [r3, #0]
 80081d8:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80081dc:	645a      	str	r2, [r3, #68]	; 0x44
  }

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80081de:	687b      	ldr	r3, [r7, #4]
 80081e0:	681b      	ldr	r3, [r3, #0]
 80081e2:	4a1d      	ldr	r2, [pc, #116]	; (8008258 <HAL_TIM_OC_Start+0x14c>)
 80081e4:	4293      	cmp	r3, r2
 80081e6:	d018      	beq.n	800821a <HAL_TIM_OC_Start+0x10e>
 80081e8:	687b      	ldr	r3, [r7, #4]
 80081ea:	681b      	ldr	r3, [r3, #0]
 80081ec:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80081f0:	d013      	beq.n	800821a <HAL_TIM_OC_Start+0x10e>
 80081f2:	687b      	ldr	r3, [r7, #4]
 80081f4:	681b      	ldr	r3, [r3, #0]
 80081f6:	4a19      	ldr	r2, [pc, #100]	; (800825c <HAL_TIM_OC_Start+0x150>)
 80081f8:	4293      	cmp	r3, r2
 80081fa:	d00e      	beq.n	800821a <HAL_TIM_OC_Start+0x10e>
 80081fc:	687b      	ldr	r3, [r7, #4]
 80081fe:	681b      	ldr	r3, [r3, #0]
 8008200:	4a17      	ldr	r2, [pc, #92]	; (8008260 <HAL_TIM_OC_Start+0x154>)
 8008202:	4293      	cmp	r3, r2
 8008204:	d009      	beq.n	800821a <HAL_TIM_OC_Start+0x10e>
 8008206:	687b      	ldr	r3, [r7, #4]
 8008208:	681b      	ldr	r3, [r3, #0]
 800820a:	4a16      	ldr	r2, [pc, #88]	; (8008264 <HAL_TIM_OC_Start+0x158>)
 800820c:	4293      	cmp	r3, r2
 800820e:	d004      	beq.n	800821a <HAL_TIM_OC_Start+0x10e>
 8008210:	687b      	ldr	r3, [r7, #4]
 8008212:	681b      	ldr	r3, [r3, #0]
 8008214:	4a14      	ldr	r2, [pc, #80]	; (8008268 <HAL_TIM_OC_Start+0x15c>)
 8008216:	4293      	cmp	r3, r2
 8008218:	d111      	bne.n	800823e <HAL_TIM_OC_Start+0x132>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800821a:	687b      	ldr	r3, [r7, #4]
 800821c:	681b      	ldr	r3, [r3, #0]
 800821e:	689b      	ldr	r3, [r3, #8]
 8008220:	f003 0307 	and.w	r3, r3, #7
 8008224:	60fb      	str	r3, [r7, #12]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8008226:	68fb      	ldr	r3, [r7, #12]
 8008228:	2b06      	cmp	r3, #6
 800822a:	d010      	beq.n	800824e <HAL_TIM_OC_Start+0x142>
    {
      __HAL_TIM_ENABLE(htim);
 800822c:	687b      	ldr	r3, [r7, #4]
 800822e:	681b      	ldr	r3, [r3, #0]
 8008230:	681a      	ldr	r2, [r3, #0]
 8008232:	687b      	ldr	r3, [r7, #4]
 8008234:	681b      	ldr	r3, [r3, #0]
 8008236:	f042 0201 	orr.w	r2, r2, #1
 800823a:	601a      	str	r2, [r3, #0]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800823c:	e007      	b.n	800824e <HAL_TIM_OC_Start+0x142>
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 800823e:	687b      	ldr	r3, [r7, #4]
 8008240:	681b      	ldr	r3, [r3, #0]
 8008242:	681a      	ldr	r2, [r3, #0]
 8008244:	687b      	ldr	r3, [r7, #4]
 8008246:	681b      	ldr	r3, [r3, #0]
 8008248:	f042 0201 	orr.w	r2, r2, #1
 800824c:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 800824e:	2300      	movs	r3, #0
}
 8008250:	4618      	mov	r0, r3
 8008252:	3710      	adds	r7, #16
 8008254:	46bd      	mov	sp, r7
 8008256:	bd80      	pop	{r7, pc}
 8008258:	40010000 	.word	0x40010000
 800825c:	40000400 	.word	0x40000400
 8008260:	40000800 	.word	0x40000800
 8008264:	40000c00 	.word	0x40000c00
 8008268:	40014000 	.word	0x40014000

0800826c <HAL_TIM_PWM_Init>:
  *         Ex: call @ref HAL_TIM_PWM_DeInit() before HAL_TIM_PWM_Init()
  * @param  htim TIM PWM handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Init(TIM_HandleTypeDef *htim)
{
 800826c:	b580      	push	{r7, lr}
 800826e:	b082      	sub	sp, #8
 8008270:	af00      	add	r7, sp, #0
 8008272:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 8008274:	687b      	ldr	r3, [r7, #4]
 8008276:	2b00      	cmp	r3, #0
 8008278:	d101      	bne.n	800827e <HAL_TIM_PWM_Init+0x12>
  {
    return HAL_ERROR;
 800827a:	2301      	movs	r3, #1
 800827c:	e041      	b.n	8008302 <HAL_TIM_PWM_Init+0x96>
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800827e:	687b      	ldr	r3, [r7, #4]
 8008280:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8008284:	b2db      	uxtb	r3, r3
 8008286:	2b00      	cmp	r3, #0
 8008288:	d106      	bne.n	8008298 <HAL_TIM_PWM_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 800828a:	687b      	ldr	r3, [r7, #4]
 800828c:	2200      	movs	r2, #0
 800828e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->PWM_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
    HAL_TIM_PWM_MspInit(htim);
 8008292:	6878      	ldr	r0, [r7, #4]
 8008294:	f7fa fe06 	bl	8002ea4 <HAL_TIM_PWM_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8008298:	687b      	ldr	r3, [r7, #4]
 800829a:	2202      	movs	r2, #2
 800829c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Init the base time for the PWM */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80082a0:	687b      	ldr	r3, [r7, #4]
 80082a2:	681a      	ldr	r2, [r3, #0]
 80082a4:	687b      	ldr	r3, [r7, #4]
 80082a6:	3304      	adds	r3, #4
 80082a8:	4619      	mov	r1, r3
 80082aa:	4610      	mov	r0, r2
 80082ac:	f000 fb80 	bl	80089b0 <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 80082b0:	687b      	ldr	r3, [r7, #4]
 80082b2:	2201      	movs	r2, #1
 80082b4:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80082b8:	687b      	ldr	r3, [r7, #4]
 80082ba:	2201      	movs	r2, #1
 80082bc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80082c0:	687b      	ldr	r3, [r7, #4]
 80082c2:	2201      	movs	r2, #1
 80082c4:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80082c8:	687b      	ldr	r3, [r7, #4]
 80082ca:	2201      	movs	r2, #1
 80082cc:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80082d0:	687b      	ldr	r3, [r7, #4]
 80082d2:	2201      	movs	r2, #1
 80082d4:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80082d8:	687b      	ldr	r3, [r7, #4]
 80082da:	2201      	movs	r2, #1
 80082dc:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80082e0:	687b      	ldr	r3, [r7, #4]
 80082e2:	2201      	movs	r2, #1
 80082e4:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80082e8:	687b      	ldr	r3, [r7, #4]
 80082ea:	2201      	movs	r2, #1
 80082ec:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80082f0:	687b      	ldr	r3, [r7, #4]
 80082f2:	2201      	movs	r2, #1
 80082f4:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 80082f8:	687b      	ldr	r3, [r7, #4]
 80082fa:	2201      	movs	r2, #1
 80082fc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  return HAL_OK;
 8008300:	2300      	movs	r3, #0
}
 8008302:	4618      	mov	r0, r3
 8008304:	3708      	adds	r7, #8
 8008306:	46bd      	mov	sp, r7
 8008308:	bd80      	pop	{r7, pc}
	...

0800830c <HAL_TIM_PWM_Start>:
  *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
  *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
{
 800830c:	b580      	push	{r7, lr}
 800830e:	b084      	sub	sp, #16
 8008310:	af00      	add	r7, sp, #0
 8008312:	6078      	str	r0, [r7, #4]
 8008314:	6039      	str	r1, [r7, #0]

  /* Check the parameters */
  assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));

  /* Check the TIM channel state */
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 8008316:	683b      	ldr	r3, [r7, #0]
 8008318:	2b00      	cmp	r3, #0
 800831a:	d109      	bne.n	8008330 <HAL_TIM_PWM_Start+0x24>
 800831c:	687b      	ldr	r3, [r7, #4]
 800831e:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8008322:	b2db      	uxtb	r3, r3
 8008324:	2b01      	cmp	r3, #1
 8008326:	bf14      	ite	ne
 8008328:	2301      	movne	r3, #1
 800832a:	2300      	moveq	r3, #0
 800832c:	b2db      	uxtb	r3, r3
 800832e:	e022      	b.n	8008376 <HAL_TIM_PWM_Start+0x6a>
 8008330:	683b      	ldr	r3, [r7, #0]
 8008332:	2b04      	cmp	r3, #4
 8008334:	d109      	bne.n	800834a <HAL_TIM_PWM_Start+0x3e>
 8008336:	687b      	ldr	r3, [r7, #4]
 8008338:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 800833c:	b2db      	uxtb	r3, r3
 800833e:	2b01      	cmp	r3, #1
 8008340:	bf14      	ite	ne
 8008342:	2301      	movne	r3, #1
 8008344:	2300      	moveq	r3, #0
 8008346:	b2db      	uxtb	r3, r3
 8008348:	e015      	b.n	8008376 <HAL_TIM_PWM_Start+0x6a>
 800834a:	683b      	ldr	r3, [r7, #0]
 800834c:	2b08      	cmp	r3, #8
 800834e:	d109      	bne.n	8008364 <HAL_TIM_PWM_Start+0x58>
 8008350:	687b      	ldr	r3, [r7, #4]
 8008352:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8008356:	b2db      	uxtb	r3, r3
 8008358:	2b01      	cmp	r3, #1
 800835a:	bf14      	ite	ne
 800835c:	2301      	movne	r3, #1
 800835e:	2300      	moveq	r3, #0
 8008360:	b2db      	uxtb	r3, r3
 8008362:	e008      	b.n	8008376 <HAL_TIM_PWM_Start+0x6a>
 8008364:	687b      	ldr	r3, [r7, #4]
 8008366:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800836a:	b2db      	uxtb	r3, r3
 800836c:	2b01      	cmp	r3, #1
 800836e:	bf14      	ite	ne
 8008370:	2301      	movne	r3, #1
 8008372:	2300      	moveq	r3, #0
 8008374:	b2db      	uxtb	r3, r3
 8008376:	2b00      	cmp	r3, #0
 8008378:	d001      	beq.n	800837e <HAL_TIM_PWM_Start+0x72>
  {
    return HAL_ERROR;
 800837a:	2301      	movs	r3, #1
 800837c:	e068      	b.n	8008450 <HAL_TIM_PWM_Start+0x144>
  }

  /* Set the TIM channel state */
  TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 800837e:	683b      	ldr	r3, [r7, #0]
 8008380:	2b00      	cmp	r3, #0
 8008382:	d104      	bne.n	800838e <HAL_TIM_PWM_Start+0x82>
 8008384:	687b      	ldr	r3, [r7, #4]
 8008386:	2202      	movs	r2, #2
 8008388:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800838c:	e013      	b.n	80083b6 <HAL_TIM_PWM_Start+0xaa>
 800838e:	683b      	ldr	r3, [r7, #0]
 8008390:	2b04      	cmp	r3, #4
 8008392:	d104      	bne.n	800839e <HAL_TIM_PWM_Start+0x92>
 8008394:	687b      	ldr	r3, [r7, #4]
 8008396:	2202      	movs	r2, #2
 8008398:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800839c:	e00b      	b.n	80083b6 <HAL_TIM_PWM_Start+0xaa>
 800839e:	683b      	ldr	r3, [r7, #0]
 80083a0:	2b08      	cmp	r3, #8
 80083a2:	d104      	bne.n	80083ae <HAL_TIM_PWM_Start+0xa2>
 80083a4:	687b      	ldr	r3, [r7, #4]
 80083a6:	2202      	movs	r2, #2
 80083a8:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80083ac:	e003      	b.n	80083b6 <HAL_TIM_PWM_Start+0xaa>
 80083ae:	687b      	ldr	r3, [r7, #4]
 80083b0:	2202      	movs	r2, #2
 80083b2:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

  /* Enable the Capture compare channel */
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 80083b6:	687b      	ldr	r3, [r7, #4]
 80083b8:	681b      	ldr	r3, [r3, #0]
 80083ba:	2201      	movs	r2, #1
 80083bc:	6839      	ldr	r1, [r7, #0]
 80083be:	4618      	mov	r0, r3
 80083c0:	f000 fda8 	bl	8008f14 <TIM_CCxChannelCmd>

  if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 80083c4:	687b      	ldr	r3, [r7, #4]
 80083c6:	681b      	ldr	r3, [r3, #0]
 80083c8:	4a23      	ldr	r2, [pc, #140]	; (8008458 <HAL_TIM_PWM_Start+0x14c>)
 80083ca:	4293      	cmp	r3, r2
 80083cc:	d107      	bne.n	80083de <HAL_TIM_PWM_Start+0xd2>
  {
    /* Enable the main output */
    __HAL_TIM_MOE_ENABLE(htim);
 80083ce:	687b      	ldr	r3, [r7, #4]
 80083d0:	681b      	ldr	r3, [r3, #0]
 80083d2:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80083d4:	687b      	ldr	r3, [r7, #4]
 80083d6:	681b      	ldr	r3, [r3, #0]
 80083d8:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80083dc:	645a      	str	r2, [r3, #68]	; 0x44
  }

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80083de:	687b      	ldr	r3, [r7, #4]
 80083e0:	681b      	ldr	r3, [r3, #0]
 80083e2:	4a1d      	ldr	r2, [pc, #116]	; (8008458 <HAL_TIM_PWM_Start+0x14c>)
 80083e4:	4293      	cmp	r3, r2
 80083e6:	d018      	beq.n	800841a <HAL_TIM_PWM_Start+0x10e>
 80083e8:	687b      	ldr	r3, [r7, #4]
 80083ea:	681b      	ldr	r3, [r3, #0]
 80083ec:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80083f0:	d013      	beq.n	800841a <HAL_TIM_PWM_Start+0x10e>
 80083f2:	687b      	ldr	r3, [r7, #4]
 80083f4:	681b      	ldr	r3, [r3, #0]
 80083f6:	4a19      	ldr	r2, [pc, #100]	; (800845c <HAL_TIM_PWM_Start+0x150>)
 80083f8:	4293      	cmp	r3, r2
 80083fa:	d00e      	beq.n	800841a <HAL_TIM_PWM_Start+0x10e>
 80083fc:	687b      	ldr	r3, [r7, #4]
 80083fe:	681b      	ldr	r3, [r3, #0]
 8008400:	4a17      	ldr	r2, [pc, #92]	; (8008460 <HAL_TIM_PWM_Start+0x154>)
 8008402:	4293      	cmp	r3, r2
 8008404:	d009      	beq.n	800841a <HAL_TIM_PWM_Start+0x10e>
 8008406:	687b      	ldr	r3, [r7, #4]
 8008408:	681b      	ldr	r3, [r3, #0]
 800840a:	4a16      	ldr	r2, [pc, #88]	; (8008464 <HAL_TIM_PWM_Start+0x158>)
 800840c:	4293      	cmp	r3, r2
 800840e:	d004      	beq.n	800841a <HAL_TIM_PWM_Start+0x10e>
 8008410:	687b      	ldr	r3, [r7, #4]
 8008412:	681b      	ldr	r3, [r3, #0]
 8008414:	4a14      	ldr	r2, [pc, #80]	; (8008468 <HAL_TIM_PWM_Start+0x15c>)
 8008416:	4293      	cmp	r3, r2
 8008418:	d111      	bne.n	800843e <HAL_TIM_PWM_Start+0x132>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800841a:	687b      	ldr	r3, [r7, #4]
 800841c:	681b      	ldr	r3, [r3, #0]
 800841e:	689b      	ldr	r3, [r3, #8]
 8008420:	f003 0307 	and.w	r3, r3, #7
 8008424:	60fb      	str	r3, [r7, #12]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8008426:	68fb      	ldr	r3, [r7, #12]
 8008428:	2b06      	cmp	r3, #6
 800842a:	d010      	beq.n	800844e <HAL_TIM_PWM_Start+0x142>
    {
      __HAL_TIM_ENABLE(htim);
 800842c:	687b      	ldr	r3, [r7, #4]
 800842e:	681b      	ldr	r3, [r3, #0]
 8008430:	681a      	ldr	r2, [r3, #0]
 8008432:	687b      	ldr	r3, [r7, #4]
 8008434:	681b      	ldr	r3, [r3, #0]
 8008436:	f042 0201 	orr.w	r2, r2, #1
 800843a:	601a      	str	r2, [r3, #0]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800843c:	e007      	b.n	800844e <HAL_TIM_PWM_Start+0x142>
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 800843e:	687b      	ldr	r3, [r7, #4]
 8008440:	681b      	ldr	r3, [r3, #0]
 8008442:	681a      	ldr	r2, [r3, #0]
 8008444:	687b      	ldr	r3, [r7, #4]
 8008446:	681b      	ldr	r3, [r3, #0]
 8008448:	f042 0201 	orr.w	r2, r2, #1
 800844c:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 800844e:	2300      	movs	r3, #0
}
 8008450:	4618      	mov	r0, r3
 8008452:	3710      	adds	r7, #16
 8008454:	46bd      	mov	sp, r7
 8008456:	bd80      	pop	{r7, pc}
 8008458:	40010000 	.word	0x40010000
 800845c:	40000400 	.word	0x40000400
 8008460:	40000800 	.word	0x40000800
 8008464:	40000c00 	.word	0x40000c00
 8008468:	40014000 	.word	0x40014000

0800846c <HAL_TIM_IRQHandler>:
  * @brief  This function handles TIM interrupts requests.
  * @param  htim TIM  handle
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
 800846c:	b580      	push	{r7, lr}
 800846e:	b084      	sub	sp, #16
 8008470:	af00      	add	r7, sp, #0
 8008472:	6078      	str	r0, [r7, #4]
  uint32_t itsource = htim->Instance->DIER;
 8008474:	687b      	ldr	r3, [r7, #4]
 8008476:	681b      	ldr	r3, [r3, #0]
 8008478:	68db      	ldr	r3, [r3, #12]
 800847a:	60fb      	str	r3, [r7, #12]
  uint32_t itflag   = htim->Instance->SR;
 800847c:	687b      	ldr	r3, [r7, #4]
 800847e:	681b      	ldr	r3, [r3, #0]
 8008480:	691b      	ldr	r3, [r3, #16]
 8008482:	60bb      	str	r3, [r7, #8]

  /* Capture compare 1 event */
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 8008484:	68bb      	ldr	r3, [r7, #8]
 8008486:	f003 0302 	and.w	r3, r3, #2
 800848a:	2b00      	cmp	r3, #0
 800848c:	d020      	beq.n	80084d0 <HAL_TIM_IRQHandler+0x64>
  {
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
 800848e:	68fb      	ldr	r3, [r7, #12]
 8008490:	f003 0302 	and.w	r3, r3, #2
 8008494:	2b00      	cmp	r3, #0
 8008496:	d01b      	beq.n	80084d0 <HAL_TIM_IRQHandler+0x64>
    {
      {
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
 8008498:	687b      	ldr	r3, [r7, #4]
 800849a:	681b      	ldr	r3, [r3, #0]
 800849c:	f06f 0202 	mvn.w	r2, #2
 80084a0:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 80084a2:	687b      	ldr	r3, [r7, #4]
 80084a4:	2201      	movs	r2, #1
 80084a6:	771a      	strb	r2, [r3, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 80084a8:	687b      	ldr	r3, [r7, #4]
 80084aa:	681b      	ldr	r3, [r3, #0]
 80084ac:	699b      	ldr	r3, [r3, #24]
 80084ae:	f003 0303 	and.w	r3, r3, #3
 80084b2:	2b00      	cmp	r3, #0
 80084b4:	d003      	beq.n	80084be <HAL_TIM_IRQHandler+0x52>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 80084b6:	6878      	ldr	r0, [r7, #4]
 80084b8:	f000 fa5b 	bl	8008972 <HAL_TIM_IC_CaptureCallback>
 80084bc:	e005      	b.n	80084ca <HAL_TIM_IRQHandler+0x5e>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->OC_DelayElapsedCallback(htim);
          htim->PWM_PulseFinishedCallback(htim);
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
 80084be:	6878      	ldr	r0, [r7, #4]
 80084c0:	f000 fa4d 	bl	800895e <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 80084c4:	6878      	ldr	r0, [r7, #4]
 80084c6:	f000 fa5e 	bl	8008986 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80084ca:	687b      	ldr	r3, [r7, #4]
 80084cc:	2200      	movs	r2, #0
 80084ce:	771a      	strb	r2, [r3, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
 80084d0:	68bb      	ldr	r3, [r7, #8]
 80084d2:	f003 0304 	and.w	r3, r3, #4
 80084d6:	2b00      	cmp	r3, #0
 80084d8:	d020      	beq.n	800851c <HAL_TIM_IRQHandler+0xb0>
  {
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
 80084da:	68fb      	ldr	r3, [r7, #12]
 80084dc:	f003 0304 	and.w	r3, r3, #4
 80084e0:	2b00      	cmp	r3, #0
 80084e2:	d01b      	beq.n	800851c <HAL_TIM_IRQHandler+0xb0>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 80084e4:	687b      	ldr	r3, [r7, #4]
 80084e6:	681b      	ldr	r3, [r3, #0]
 80084e8:	f06f 0204 	mvn.w	r2, #4
 80084ec:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80084ee:	687b      	ldr	r3, [r7, #4]
 80084f0:	2202      	movs	r2, #2
 80084f2:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80084f4:	687b      	ldr	r3, [r7, #4]
 80084f6:	681b      	ldr	r3, [r3, #0]
 80084f8:	699b      	ldr	r3, [r3, #24]
 80084fa:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80084fe:	2b00      	cmp	r3, #0
 8008500:	d003      	beq.n	800850a <HAL_TIM_IRQHandler+0x9e>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8008502:	6878      	ldr	r0, [r7, #4]
 8008504:	f000 fa35 	bl	8008972 <HAL_TIM_IC_CaptureCallback>
 8008508:	e005      	b.n	8008516 <HAL_TIM_IRQHandler+0xaa>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800850a:	6878      	ldr	r0, [r7, #4]
 800850c:	f000 fa27 	bl	800895e <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8008510:	6878      	ldr	r0, [r7, #4]
 8008512:	f000 fa38 	bl	8008986 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8008516:	687b      	ldr	r3, [r7, #4]
 8008518:	2200      	movs	r2, #0
 800851a:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 3 event */
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
 800851c:	68bb      	ldr	r3, [r7, #8]
 800851e:	f003 0308 	and.w	r3, r3, #8
 8008522:	2b00      	cmp	r3, #0
 8008524:	d020      	beq.n	8008568 <HAL_TIM_IRQHandler+0xfc>
  {
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
 8008526:	68fb      	ldr	r3, [r7, #12]
 8008528:	f003 0308 	and.w	r3, r3, #8
 800852c:	2b00      	cmp	r3, #0
 800852e:	d01b      	beq.n	8008568 <HAL_TIM_IRQHandler+0xfc>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 8008530:	687b      	ldr	r3, [r7, #4]
 8008532:	681b      	ldr	r3, [r3, #0]
 8008534:	f06f 0208 	mvn.w	r2, #8
 8008538:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800853a:	687b      	ldr	r3, [r7, #4]
 800853c:	2204      	movs	r2, #4
 800853e:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8008540:	687b      	ldr	r3, [r7, #4]
 8008542:	681b      	ldr	r3, [r3, #0]
 8008544:	69db      	ldr	r3, [r3, #28]
 8008546:	f003 0303 	and.w	r3, r3, #3
 800854a:	2b00      	cmp	r3, #0
 800854c:	d003      	beq.n	8008556 <HAL_TIM_IRQHandler+0xea>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800854e:	6878      	ldr	r0, [r7, #4]
 8008550:	f000 fa0f 	bl	8008972 <HAL_TIM_IC_CaptureCallback>
 8008554:	e005      	b.n	8008562 <HAL_TIM_IRQHandler+0xf6>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8008556:	6878      	ldr	r0, [r7, #4]
 8008558:	f000 fa01 	bl	800895e <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800855c:	6878      	ldr	r0, [r7, #4]
 800855e:	f000 fa12 	bl	8008986 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8008562:	687b      	ldr	r3, [r7, #4]
 8008564:	2200      	movs	r2, #0
 8008566:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 4 event */
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
 8008568:	68bb      	ldr	r3, [r7, #8]
 800856a:	f003 0310 	and.w	r3, r3, #16
 800856e:	2b00      	cmp	r3, #0
 8008570:	d020      	beq.n	80085b4 <HAL_TIM_IRQHandler+0x148>
  {
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
 8008572:	68fb      	ldr	r3, [r7, #12]
 8008574:	f003 0310 	and.w	r3, r3, #16
 8008578:	2b00      	cmp	r3, #0
 800857a:	d01b      	beq.n	80085b4 <HAL_TIM_IRQHandler+0x148>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 800857c:	687b      	ldr	r3, [r7, #4]
 800857e:	681b      	ldr	r3, [r3, #0]
 8008580:	f06f 0210 	mvn.w	r2, #16
 8008584:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8008586:	687b      	ldr	r3, [r7, #4]
 8008588:	2208      	movs	r2, #8
 800858a:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800858c:	687b      	ldr	r3, [r7, #4]
 800858e:	681b      	ldr	r3, [r3, #0]
 8008590:	69db      	ldr	r3, [r3, #28]
 8008592:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8008596:	2b00      	cmp	r3, #0
 8008598:	d003      	beq.n	80085a2 <HAL_TIM_IRQHandler+0x136>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800859a:	6878      	ldr	r0, [r7, #4]
 800859c:	f000 f9e9 	bl	8008972 <HAL_TIM_IC_CaptureCallback>
 80085a0:	e005      	b.n	80085ae <HAL_TIM_IRQHandler+0x142>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80085a2:	6878      	ldr	r0, [r7, #4]
 80085a4:	f000 f9db 	bl	800895e <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80085a8:	6878      	ldr	r0, [r7, #4]
 80085aa:	f000 f9ec 	bl	8008986 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80085ae:	687b      	ldr	r3, [r7, #4]
 80085b0:	2200      	movs	r2, #0
 80085b2:	771a      	strb	r2, [r3, #28]
    }
  }
  /* TIM Update event */
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
 80085b4:	68bb      	ldr	r3, [r7, #8]
 80085b6:	f003 0301 	and.w	r3, r3, #1
 80085ba:	2b00      	cmp	r3, #0
 80085bc:	d00c      	beq.n	80085d8 <HAL_TIM_IRQHandler+0x16c>
  {
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
 80085be:	68fb      	ldr	r3, [r7, #12]
 80085c0:	f003 0301 	and.w	r3, r3, #1
 80085c4:	2b00      	cmp	r3, #0
 80085c6:	d007      	beq.n	80085d8 <HAL_TIM_IRQHandler+0x16c>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 80085c8:	687b      	ldr	r3, [r7, #4]
 80085ca:	681b      	ldr	r3, [r3, #0]
 80085cc:	f06f 0201 	mvn.w	r2, #1
 80085d0:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 80085d2:	6878      	ldr	r0, [r7, #4]
 80085d4:	f7fb f9ce 	bl	8003974 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if ((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK))
 80085d8:	68bb      	ldr	r3, [r7, #8]
 80085da:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80085de:	2b00      	cmp	r3, #0
 80085e0:	d00c      	beq.n	80085fc <HAL_TIM_IRQHandler+0x190>
  {
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 80085e2:	68fb      	ldr	r3, [r7, #12]
 80085e4:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80085e8:	2b00      	cmp	r3, #0
 80085ea:	d007      	beq.n	80085fc <HAL_TIM_IRQHandler+0x190>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK);
 80085ec:	687b      	ldr	r3, [r7, #4]
 80085ee:	681b      	ldr	r3, [r3, #0]
 80085f0:	f06f 0280 	mvn.w	r2, #128	; 0x80
 80085f4:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 80085f6:	6878      	ldr	r0, [r7, #4]
 80085f8:	f000 fd2a 	bl	8009050 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
 80085fc:	68bb      	ldr	r3, [r7, #8]
 80085fe:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8008602:	2b00      	cmp	r3, #0
 8008604:	d00c      	beq.n	8008620 <HAL_TIM_IRQHandler+0x1b4>
  {
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
 8008606:	68fb      	ldr	r3, [r7, #12]
 8008608:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800860c:	2b00      	cmp	r3, #0
 800860e:	d007      	beq.n	8008620 <HAL_TIM_IRQHandler+0x1b4>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 8008610:	687b      	ldr	r3, [r7, #4]
 8008612:	681b      	ldr	r3, [r3, #0]
 8008614:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8008618:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 800861a:	6878      	ldr	r0, [r7, #4]
 800861c:	f000 f9bd 	bl	800899a <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
 8008620:	68bb      	ldr	r3, [r7, #8]
 8008622:	f003 0320 	and.w	r3, r3, #32
 8008626:	2b00      	cmp	r3, #0
 8008628:	d00c      	beq.n	8008644 <HAL_TIM_IRQHandler+0x1d8>
  {
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
 800862a:	68fb      	ldr	r3, [r7, #12]
 800862c:	f003 0320 	and.w	r3, r3, #32
 8008630:	2b00      	cmp	r3, #0
 8008632:	d007      	beq.n	8008644 <HAL_TIM_IRQHandler+0x1d8>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 8008634:	687b      	ldr	r3, [r7, #4]
 8008636:	681b      	ldr	r3, [r3, #0]
 8008638:	f06f 0220 	mvn.w	r2, #32
 800863c:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 800863e:	6878      	ldr	r0, [r7, #4]
 8008640:	f000 fcfc 	bl	800903c <HAL_TIMEx_CommutCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8008644:	bf00      	nop
 8008646:	3710      	adds	r7, #16
 8008648:	46bd      	mov	sp, r7
 800864a:	bd80      	pop	{r7, pc}

0800864c <HAL_TIM_PWM_ConfigChannel>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_ConfigChannel(TIM_HandleTypeDef *htim,
                                            const TIM_OC_InitTypeDef *sConfig,
                                            uint32_t Channel)
{
 800864c:	b580      	push	{r7, lr}
 800864e:	b086      	sub	sp, #24
 8008650:	af00      	add	r7, sp, #0
 8008652:	60f8      	str	r0, [r7, #12]
 8008654:	60b9      	str	r1, [r7, #8]
 8008656:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8008658:	2300      	movs	r3, #0
 800865a:	75fb      	strb	r3, [r7, #23]
  assert_param(IS_TIM_PWM_MODE(sConfig->OCMode));
  assert_param(IS_TIM_OC_POLARITY(sConfig->OCPolarity));
  assert_param(IS_TIM_FAST_STATE(sConfig->OCFastMode));

  /* Process Locked */
  __HAL_LOCK(htim);
 800865c:	68fb      	ldr	r3, [r7, #12]
 800865e:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8008662:	2b01      	cmp	r3, #1
 8008664:	d101      	bne.n	800866a <HAL_TIM_PWM_ConfigChannel+0x1e>
 8008666:	2302      	movs	r3, #2
 8008668:	e0ae      	b.n	80087c8 <HAL_TIM_PWM_ConfigChannel+0x17c>
 800866a:	68fb      	ldr	r3, [r7, #12]
 800866c:	2201      	movs	r2, #1
 800866e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  switch (Channel)
 8008672:	687b      	ldr	r3, [r7, #4]
 8008674:	2b0c      	cmp	r3, #12
 8008676:	f200 809f 	bhi.w	80087b8 <HAL_TIM_PWM_ConfigChannel+0x16c>
 800867a:	a201      	add	r2, pc, #4	; (adr r2, 8008680 <HAL_TIM_PWM_ConfigChannel+0x34>)
 800867c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008680:	080086b5 	.word	0x080086b5
 8008684:	080087b9 	.word	0x080087b9
 8008688:	080087b9 	.word	0x080087b9
 800868c:	080087b9 	.word	0x080087b9
 8008690:	080086f5 	.word	0x080086f5
 8008694:	080087b9 	.word	0x080087b9
 8008698:	080087b9 	.word	0x080087b9
 800869c:	080087b9 	.word	0x080087b9
 80086a0:	08008737 	.word	0x08008737
 80086a4:	080087b9 	.word	0x080087b9
 80086a8:	080087b9 	.word	0x080087b9
 80086ac:	080087b9 	.word	0x080087b9
 80086b0:	08008777 	.word	0x08008777
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));

      /* Configure the Channel 1 in PWM mode */
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 80086b4:	68fb      	ldr	r3, [r7, #12]
 80086b6:	681b      	ldr	r3, [r3, #0]
 80086b8:	68b9      	ldr	r1, [r7, #8]
 80086ba:	4618      	mov	r0, r3
 80086bc:	f000 fa04 	bl	8008ac8 <TIM_OC1_SetConfig>

      /* Set the Preload enable bit for channel1 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 80086c0:	68fb      	ldr	r3, [r7, #12]
 80086c2:	681b      	ldr	r3, [r3, #0]
 80086c4:	699a      	ldr	r2, [r3, #24]
 80086c6:	68fb      	ldr	r3, [r7, #12]
 80086c8:	681b      	ldr	r3, [r3, #0]
 80086ca:	f042 0208 	orr.w	r2, r2, #8
 80086ce:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 80086d0:	68fb      	ldr	r3, [r7, #12]
 80086d2:	681b      	ldr	r3, [r3, #0]
 80086d4:	699a      	ldr	r2, [r3, #24]
 80086d6:	68fb      	ldr	r3, [r7, #12]
 80086d8:	681b      	ldr	r3, [r3, #0]
 80086da:	f022 0204 	bic.w	r2, r2, #4
 80086de:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 80086e0:	68fb      	ldr	r3, [r7, #12]
 80086e2:	681b      	ldr	r3, [r3, #0]
 80086e4:	6999      	ldr	r1, [r3, #24]
 80086e6:	68bb      	ldr	r3, [r7, #8]
 80086e8:	691a      	ldr	r2, [r3, #16]
 80086ea:	68fb      	ldr	r3, [r7, #12]
 80086ec:	681b      	ldr	r3, [r3, #0]
 80086ee:	430a      	orrs	r2, r1
 80086f0:	619a      	str	r2, [r3, #24]
      break;
 80086f2:	e064      	b.n	80087be <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));

      /* Configure the Channel 2 in PWM mode */
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 80086f4:	68fb      	ldr	r3, [r7, #12]
 80086f6:	681b      	ldr	r3, [r3, #0]
 80086f8:	68b9      	ldr	r1, [r7, #8]
 80086fa:	4618      	mov	r0, r3
 80086fc:	f000 fa4a 	bl	8008b94 <TIM_OC2_SetConfig>

      /* Set the Preload enable bit for channel2 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 8008700:	68fb      	ldr	r3, [r7, #12]
 8008702:	681b      	ldr	r3, [r3, #0]
 8008704:	699a      	ldr	r2, [r3, #24]
 8008706:	68fb      	ldr	r3, [r7, #12]
 8008708:	681b      	ldr	r3, [r3, #0]
 800870a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800870e:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 8008710:	68fb      	ldr	r3, [r7, #12]
 8008712:	681b      	ldr	r3, [r3, #0]
 8008714:	699a      	ldr	r2, [r3, #24]
 8008716:	68fb      	ldr	r3, [r7, #12]
 8008718:	681b      	ldr	r3, [r3, #0]
 800871a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800871e:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 8008720:	68fb      	ldr	r3, [r7, #12]
 8008722:	681b      	ldr	r3, [r3, #0]
 8008724:	6999      	ldr	r1, [r3, #24]
 8008726:	68bb      	ldr	r3, [r7, #8]
 8008728:	691b      	ldr	r3, [r3, #16]
 800872a:	021a      	lsls	r2, r3, #8
 800872c:	68fb      	ldr	r3, [r7, #12]
 800872e:	681b      	ldr	r3, [r3, #0]
 8008730:	430a      	orrs	r2, r1
 8008732:	619a      	str	r2, [r3, #24]
      break;
 8008734:	e043      	b.n	80087be <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));

      /* Configure the Channel 3 in PWM mode */
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 8008736:	68fb      	ldr	r3, [r7, #12]
 8008738:	681b      	ldr	r3, [r3, #0]
 800873a:	68b9      	ldr	r1, [r7, #8]
 800873c:	4618      	mov	r0, r3
 800873e:	f000 fa95 	bl	8008c6c <TIM_OC3_SetConfig>

      /* Set the Preload enable bit for channel3 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 8008742:	68fb      	ldr	r3, [r7, #12]
 8008744:	681b      	ldr	r3, [r3, #0]
 8008746:	69da      	ldr	r2, [r3, #28]
 8008748:	68fb      	ldr	r3, [r7, #12]
 800874a:	681b      	ldr	r3, [r3, #0]
 800874c:	f042 0208 	orr.w	r2, r2, #8
 8008750:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 8008752:	68fb      	ldr	r3, [r7, #12]
 8008754:	681b      	ldr	r3, [r3, #0]
 8008756:	69da      	ldr	r2, [r3, #28]
 8008758:	68fb      	ldr	r3, [r7, #12]
 800875a:	681b      	ldr	r3, [r3, #0]
 800875c:	f022 0204 	bic.w	r2, r2, #4
 8008760:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 8008762:	68fb      	ldr	r3, [r7, #12]
 8008764:	681b      	ldr	r3, [r3, #0]
 8008766:	69d9      	ldr	r1, [r3, #28]
 8008768:	68bb      	ldr	r3, [r7, #8]
 800876a:	691a      	ldr	r2, [r3, #16]
 800876c:	68fb      	ldr	r3, [r7, #12]
 800876e:	681b      	ldr	r3, [r3, #0]
 8008770:	430a      	orrs	r2, r1
 8008772:	61da      	str	r2, [r3, #28]
      break;
 8008774:	e023      	b.n	80087be <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));

      /* Configure the Channel 4 in PWM mode */
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 8008776:	68fb      	ldr	r3, [r7, #12]
 8008778:	681b      	ldr	r3, [r3, #0]
 800877a:	68b9      	ldr	r1, [r7, #8]
 800877c:	4618      	mov	r0, r3
 800877e:	f000 fadf 	bl	8008d40 <TIM_OC4_SetConfig>

      /* Set the Preload enable bit for channel4 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 8008782:	68fb      	ldr	r3, [r7, #12]
 8008784:	681b      	ldr	r3, [r3, #0]
 8008786:	69da      	ldr	r2, [r3, #28]
 8008788:	68fb      	ldr	r3, [r7, #12]
 800878a:	681b      	ldr	r3, [r3, #0]
 800878c:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8008790:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 8008792:	68fb      	ldr	r3, [r7, #12]
 8008794:	681b      	ldr	r3, [r3, #0]
 8008796:	69da      	ldr	r2, [r3, #28]
 8008798:	68fb      	ldr	r3, [r7, #12]
 800879a:	681b      	ldr	r3, [r3, #0]
 800879c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80087a0:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 80087a2:	68fb      	ldr	r3, [r7, #12]
 80087a4:	681b      	ldr	r3, [r3, #0]
 80087a6:	69d9      	ldr	r1, [r3, #28]
 80087a8:	68bb      	ldr	r3, [r7, #8]
 80087aa:	691b      	ldr	r3, [r3, #16]
 80087ac:	021a      	lsls	r2, r3, #8
 80087ae:	68fb      	ldr	r3, [r7, #12]
 80087b0:	681b      	ldr	r3, [r3, #0]
 80087b2:	430a      	orrs	r2, r1
 80087b4:	61da      	str	r2, [r3, #28]
      break;
 80087b6:	e002      	b.n	80087be <HAL_TIM_PWM_ConfigChannel+0x172>
    }

    default:
      status = HAL_ERROR;
 80087b8:	2301      	movs	r3, #1
 80087ba:	75fb      	strb	r3, [r7, #23]
      break;
 80087bc:	bf00      	nop
  }

  __HAL_UNLOCK(htim);
 80087be:	68fb      	ldr	r3, [r7, #12]
 80087c0:	2200      	movs	r2, #0
 80087c2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return status;
 80087c6:	7dfb      	ldrb	r3, [r7, #23]
}
 80087c8:	4618      	mov	r0, r3
 80087ca:	3718      	adds	r7, #24
 80087cc:	46bd      	mov	sp, r7
 80087ce:	bd80      	pop	{r7, pc}

080087d0 <HAL_TIM_ConfigClockSource>:
  * @param  sClockSourceConfig pointer to a TIM_ClockConfigTypeDef structure that
  *         contains the clock source information for the TIM peripheral.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_ConfigClockSource(TIM_HandleTypeDef *htim, const TIM_ClockConfigTypeDef *sClockSourceConfig)
{
 80087d0:	b580      	push	{r7, lr}
 80087d2:	b084      	sub	sp, #16
 80087d4:	af00      	add	r7, sp, #0
 80087d6:	6078      	str	r0, [r7, #4]
 80087d8:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 80087da:	2300      	movs	r3, #0
 80087dc:	73fb      	strb	r3, [r7, #15]
  uint32_t tmpsmcr;

  /* Process Locked */
  __HAL_LOCK(htim);
 80087de:	687b      	ldr	r3, [r7, #4]
 80087e0:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80087e4:	2b01      	cmp	r3, #1
 80087e6:	d101      	bne.n	80087ec <HAL_TIM_ConfigClockSource+0x1c>
 80087e8:	2302      	movs	r3, #2
 80087ea:	e0b4      	b.n	8008956 <HAL_TIM_ConfigClockSource+0x186>
 80087ec:	687b      	ldr	r3, [r7, #4]
 80087ee:	2201      	movs	r2, #1
 80087f0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  htim->State = HAL_TIM_STATE_BUSY;
 80087f4:	687b      	ldr	r3, [r7, #4]
 80087f6:	2202      	movs	r2, #2
 80087f8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Check the parameters */
  assert_param(IS_TIM_CLOCKSOURCE(sClockSourceConfig->ClockSource));

  /* Reset the SMS, TS, ECE, ETPS and ETRF bits */
  tmpsmcr = htim->Instance->SMCR;
 80087fc:	687b      	ldr	r3, [r7, #4]
 80087fe:	681b      	ldr	r3, [r3, #0]
 8008800:	689b      	ldr	r3, [r3, #8]
 8008802:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
 8008804:	68bb      	ldr	r3, [r7, #8]
 8008806:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 800880a:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800880c:	68bb      	ldr	r3, [r7, #8]
 800880e:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8008812:	60bb      	str	r3, [r7, #8]
  htim->Instance->SMCR = tmpsmcr;
 8008814:	687b      	ldr	r3, [r7, #4]
 8008816:	681b      	ldr	r3, [r3, #0]
 8008818:	68ba      	ldr	r2, [r7, #8]
 800881a:	609a      	str	r2, [r3, #8]

  switch (sClockSourceConfig->ClockSource)
 800881c:	683b      	ldr	r3, [r7, #0]
 800881e:	681b      	ldr	r3, [r3, #0]
 8008820:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8008824:	d03e      	beq.n	80088a4 <HAL_TIM_ConfigClockSource+0xd4>
 8008826:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800882a:	f200 8087 	bhi.w	800893c <HAL_TIM_ConfigClockSource+0x16c>
 800882e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8008832:	f000 8086 	beq.w	8008942 <HAL_TIM_ConfigClockSource+0x172>
 8008836:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800883a:	d87f      	bhi.n	800893c <HAL_TIM_ConfigClockSource+0x16c>
 800883c:	2b70      	cmp	r3, #112	; 0x70
 800883e:	d01a      	beq.n	8008876 <HAL_TIM_ConfigClockSource+0xa6>
 8008840:	2b70      	cmp	r3, #112	; 0x70
 8008842:	d87b      	bhi.n	800893c <HAL_TIM_ConfigClockSource+0x16c>
 8008844:	2b60      	cmp	r3, #96	; 0x60
 8008846:	d050      	beq.n	80088ea <HAL_TIM_ConfigClockSource+0x11a>
 8008848:	2b60      	cmp	r3, #96	; 0x60
 800884a:	d877      	bhi.n	800893c <HAL_TIM_ConfigClockSource+0x16c>
 800884c:	2b50      	cmp	r3, #80	; 0x50
 800884e:	d03c      	beq.n	80088ca <HAL_TIM_ConfigClockSource+0xfa>
 8008850:	2b50      	cmp	r3, #80	; 0x50
 8008852:	d873      	bhi.n	800893c <HAL_TIM_ConfigClockSource+0x16c>
 8008854:	2b40      	cmp	r3, #64	; 0x40
 8008856:	d058      	beq.n	800890a <HAL_TIM_ConfigClockSource+0x13a>
 8008858:	2b40      	cmp	r3, #64	; 0x40
 800885a:	d86f      	bhi.n	800893c <HAL_TIM_ConfigClockSource+0x16c>
 800885c:	2b30      	cmp	r3, #48	; 0x30
 800885e:	d064      	beq.n	800892a <HAL_TIM_ConfigClockSource+0x15a>
 8008860:	2b30      	cmp	r3, #48	; 0x30
 8008862:	d86b      	bhi.n	800893c <HAL_TIM_ConfigClockSource+0x16c>
 8008864:	2b20      	cmp	r3, #32
 8008866:	d060      	beq.n	800892a <HAL_TIM_ConfigClockSource+0x15a>
 8008868:	2b20      	cmp	r3, #32
 800886a:	d867      	bhi.n	800893c <HAL_TIM_ConfigClockSource+0x16c>
 800886c:	2b00      	cmp	r3, #0
 800886e:	d05c      	beq.n	800892a <HAL_TIM_ConfigClockSource+0x15a>
 8008870:	2b10      	cmp	r3, #16
 8008872:	d05a      	beq.n	800892a <HAL_TIM_ConfigClockSource+0x15a>
 8008874:	e062      	b.n	800893c <HAL_TIM_ConfigClockSource+0x16c>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 8008876:	687b      	ldr	r3, [r7, #4]
 8008878:	6818      	ldr	r0, [r3, #0]
                        sClockSourceConfig->ClockPrescaler,
 800887a:	683b      	ldr	r3, [r7, #0]
 800887c:	6899      	ldr	r1, [r3, #8]
                        sClockSourceConfig->ClockPolarity,
 800887e:	683b      	ldr	r3, [r7, #0]
 8008880:	685a      	ldr	r2, [r3, #4]
                        sClockSourceConfig->ClockFilter);
 8008882:	683b      	ldr	r3, [r7, #0]
 8008884:	68db      	ldr	r3, [r3, #12]
      TIM_ETR_SetConfig(htim->Instance,
 8008886:	f000 fb25 	bl	8008ed4 <TIM_ETR_SetConfig>

      /* Select the External clock mode1 and the ETRF trigger */
      tmpsmcr = htim->Instance->SMCR;
 800888a:	687b      	ldr	r3, [r7, #4]
 800888c:	681b      	ldr	r3, [r3, #0]
 800888e:	689b      	ldr	r3, [r3, #8]
 8008890:	60bb      	str	r3, [r7, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 8008892:	68bb      	ldr	r3, [r7, #8]
 8008894:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8008898:	60bb      	str	r3, [r7, #8]
      /* Write to TIMx SMCR */
      htim->Instance->SMCR = tmpsmcr;
 800889a:	687b      	ldr	r3, [r7, #4]
 800889c:	681b      	ldr	r3, [r3, #0]
 800889e:	68ba      	ldr	r2, [r7, #8]
 80088a0:	609a      	str	r2, [r3, #8]
      break;
 80088a2:	e04f      	b.n	8008944 <HAL_TIM_ConfigClockSource+0x174>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 80088a4:	687b      	ldr	r3, [r7, #4]
 80088a6:	6818      	ldr	r0, [r3, #0]
                        sClockSourceConfig->ClockPrescaler,
 80088a8:	683b      	ldr	r3, [r7, #0]
 80088aa:	6899      	ldr	r1, [r3, #8]
                        sClockSourceConfig->ClockPolarity,
 80088ac:	683b      	ldr	r3, [r7, #0]
 80088ae:	685a      	ldr	r2, [r3, #4]
                        sClockSourceConfig->ClockFilter);
 80088b0:	683b      	ldr	r3, [r7, #0]
 80088b2:	68db      	ldr	r3, [r3, #12]
      TIM_ETR_SetConfig(htim->Instance,
 80088b4:	f000 fb0e 	bl	8008ed4 <TIM_ETR_SetConfig>
      /* Enable the External clock mode2 */
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 80088b8:	687b      	ldr	r3, [r7, #4]
 80088ba:	681b      	ldr	r3, [r3, #0]
 80088bc:	689a      	ldr	r2, [r3, #8]
 80088be:	687b      	ldr	r3, [r7, #4]
 80088c0:	681b      	ldr	r3, [r3, #0]
 80088c2:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80088c6:	609a      	str	r2, [r3, #8]
      break;
 80088c8:	e03c      	b.n	8008944 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 80088ca:	687b      	ldr	r3, [r7, #4]
 80088cc:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 80088ce:	683b      	ldr	r3, [r7, #0]
 80088d0:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 80088d2:	683b      	ldr	r3, [r7, #0]
 80088d4:	68db      	ldr	r3, [r3, #12]
      TIM_TI1_ConfigInputStage(htim->Instance,
 80088d6:	461a      	mov	r2, r3
 80088d8:	f000 fa82 	bl	8008de0 <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1);
 80088dc:	687b      	ldr	r3, [r7, #4]
 80088de:	681b      	ldr	r3, [r3, #0]
 80088e0:	2150      	movs	r1, #80	; 0x50
 80088e2:	4618      	mov	r0, r3
 80088e4:	f000 fadb 	bl	8008e9e <TIM_ITRx_SetConfig>
      break;
 80088e8:	e02c      	b.n	8008944 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI2 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI2_ConfigInputStage(htim->Instance,
 80088ea:	687b      	ldr	r3, [r7, #4]
 80088ec:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 80088ee:	683b      	ldr	r3, [r7, #0]
 80088f0:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 80088f2:	683b      	ldr	r3, [r7, #0]
 80088f4:	68db      	ldr	r3, [r3, #12]
      TIM_TI2_ConfigInputStage(htim->Instance,
 80088f6:	461a      	mov	r2, r3
 80088f8:	f000 faa1 	bl	8008e3e <TIM_TI2_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI2);
 80088fc:	687b      	ldr	r3, [r7, #4]
 80088fe:	681b      	ldr	r3, [r3, #0]
 8008900:	2160      	movs	r1, #96	; 0x60
 8008902:	4618      	mov	r0, r3
 8008904:	f000 facb 	bl	8008e9e <TIM_ITRx_SetConfig>
      break;
 8008908:	e01c      	b.n	8008944 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 800890a:	687b      	ldr	r3, [r7, #4]
 800890c:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 800890e:	683b      	ldr	r3, [r7, #0]
 8008910:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 8008912:	683b      	ldr	r3, [r7, #0]
 8008914:	68db      	ldr	r3, [r3, #12]
      TIM_TI1_ConfigInputStage(htim->Instance,
 8008916:	461a      	mov	r2, r3
 8008918:	f000 fa62 	bl	8008de0 <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1ED);
 800891c:	687b      	ldr	r3, [r7, #4]
 800891e:	681b      	ldr	r3, [r3, #0]
 8008920:	2140      	movs	r1, #64	; 0x40
 8008922:	4618      	mov	r0, r3
 8008924:	f000 fabb 	bl	8008e9e <TIM_ITRx_SetConfig>
      break;
 8008928:	e00c      	b.n	8008944 <HAL_TIM_ConfigClockSource+0x174>
    case TIM_CLOCKSOURCE_ITR3:
    {
      /* Check whether or not the timer instance supports internal trigger input */
      assert_param(IS_TIM_CLOCKSOURCE_ITRX_INSTANCE(htim->Instance));

      TIM_ITRx_SetConfig(htim->Instance, sClockSourceConfig->ClockSource);
 800892a:	687b      	ldr	r3, [r7, #4]
 800892c:	681a      	ldr	r2, [r3, #0]
 800892e:	683b      	ldr	r3, [r7, #0]
 8008930:	681b      	ldr	r3, [r3, #0]
 8008932:	4619      	mov	r1, r3
 8008934:	4610      	mov	r0, r2
 8008936:	f000 fab2 	bl	8008e9e <TIM_ITRx_SetConfig>
      break;
 800893a:	e003      	b.n	8008944 <HAL_TIM_ConfigClockSource+0x174>
    }

    default:
      status = HAL_ERROR;
 800893c:	2301      	movs	r3, #1
 800893e:	73fb      	strb	r3, [r7, #15]
      break;
 8008940:	e000      	b.n	8008944 <HAL_TIM_ConfigClockSource+0x174>
      break;
 8008942:	bf00      	nop
  }
  htim->State = HAL_TIM_STATE_READY;
 8008944:	687b      	ldr	r3, [r7, #4]
 8008946:	2201      	movs	r2, #1
 8008948:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 800894c:	687b      	ldr	r3, [r7, #4]
 800894e:	2200      	movs	r2, #0
 8008950:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return status;
 8008954:	7bfb      	ldrb	r3, [r7, #15]
}
 8008956:	4618      	mov	r0, r3
 8008958:	3710      	adds	r7, #16
 800895a:	46bd      	mov	sp, r7
 800895c:	bd80      	pop	{r7, pc}

0800895e <HAL_TIM_OC_DelayElapsedCallback>:
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
{
 800895e:	b480      	push	{r7}
 8008960:	b083      	sub	sp, #12
 8008962:	af00      	add	r7, sp, #0
 8008964:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_OC_DelayElapsedCallback could be implemented in the user file
   */
}
 8008966:	bf00      	nop
 8008968:	370c      	adds	r7, #12
 800896a:	46bd      	mov	sp, r7
 800896c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008970:	4770      	bx	lr

08008972 <HAL_TIM_IC_CaptureCallback>:
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
{
 8008972:	b480      	push	{r7}
 8008974:	b083      	sub	sp, #12
 8008976:	af00      	add	r7, sp, #0
 8008978:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_IC_CaptureCallback could be implemented in the user file
   */
}
 800897a:	bf00      	nop
 800897c:	370c      	adds	r7, #12
 800897e:	46bd      	mov	sp, r7
 8008980:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008984:	4770      	bx	lr

08008986 <HAL_TIM_PWM_PulseFinishedCallback>:
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
{
 8008986:	b480      	push	{r7}
 8008988:	b083      	sub	sp, #12
 800898a:	af00      	add	r7, sp, #0
 800898c:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_PulseFinishedCallback could be implemented in the user file
   */
}
 800898e:	bf00      	nop
 8008990:	370c      	adds	r7, #12
 8008992:	46bd      	mov	sp, r7
 8008994:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008998:	4770      	bx	lr

0800899a <HAL_TIM_TriggerCallback>:
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
{
 800899a:	b480      	push	{r7}
 800899c:	b083      	sub	sp, #12
 800899e:	af00      	add	r7, sp, #0
 80089a0:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_TriggerCallback could be implemented in the user file
   */
}
 80089a2:	bf00      	nop
 80089a4:	370c      	adds	r7, #12
 80089a6:	46bd      	mov	sp, r7
 80089a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80089ac:	4770      	bx	lr
	...

080089b0 <TIM_Base_SetConfig>:
  * @param  TIMx TIM peripheral
  * @param  Structure TIM Base configuration structure
  * @retval None
  */
void TIM_Base_SetConfig(TIM_TypeDef *TIMx, const TIM_Base_InitTypeDef *Structure)
{
 80089b0:	b480      	push	{r7}
 80089b2:	b085      	sub	sp, #20
 80089b4:	af00      	add	r7, sp, #0
 80089b6:	6078      	str	r0, [r7, #4]
 80089b8:	6039      	str	r1, [r7, #0]
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;
 80089ba:	687b      	ldr	r3, [r7, #4]
 80089bc:	681b      	ldr	r3, [r3, #0]
 80089be:	60fb      	str	r3, [r7, #12]

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80089c0:	687b      	ldr	r3, [r7, #4]
 80089c2:	4a3a      	ldr	r2, [pc, #232]	; (8008aac <TIM_Base_SetConfig+0xfc>)
 80089c4:	4293      	cmp	r3, r2
 80089c6:	d00f      	beq.n	80089e8 <TIM_Base_SetConfig+0x38>
 80089c8:	687b      	ldr	r3, [r7, #4]
 80089ca:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80089ce:	d00b      	beq.n	80089e8 <TIM_Base_SetConfig+0x38>
 80089d0:	687b      	ldr	r3, [r7, #4]
 80089d2:	4a37      	ldr	r2, [pc, #220]	; (8008ab0 <TIM_Base_SetConfig+0x100>)
 80089d4:	4293      	cmp	r3, r2
 80089d6:	d007      	beq.n	80089e8 <TIM_Base_SetConfig+0x38>
 80089d8:	687b      	ldr	r3, [r7, #4]
 80089da:	4a36      	ldr	r2, [pc, #216]	; (8008ab4 <TIM_Base_SetConfig+0x104>)
 80089dc:	4293      	cmp	r3, r2
 80089de:	d003      	beq.n	80089e8 <TIM_Base_SetConfig+0x38>
 80089e0:	687b      	ldr	r3, [r7, #4]
 80089e2:	4a35      	ldr	r2, [pc, #212]	; (8008ab8 <TIM_Base_SetConfig+0x108>)
 80089e4:	4293      	cmp	r3, r2
 80089e6:	d108      	bne.n	80089fa <TIM_Base_SetConfig+0x4a>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80089e8:	68fb      	ldr	r3, [r7, #12]
 80089ea:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80089ee:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= Structure->CounterMode;
 80089f0:	683b      	ldr	r3, [r7, #0]
 80089f2:	685b      	ldr	r3, [r3, #4]
 80089f4:	68fa      	ldr	r2, [r7, #12]
 80089f6:	4313      	orrs	r3, r2
 80089f8:	60fb      	str	r3, [r7, #12]
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80089fa:	687b      	ldr	r3, [r7, #4]
 80089fc:	4a2b      	ldr	r2, [pc, #172]	; (8008aac <TIM_Base_SetConfig+0xfc>)
 80089fe:	4293      	cmp	r3, r2
 8008a00:	d01b      	beq.n	8008a3a <TIM_Base_SetConfig+0x8a>
 8008a02:	687b      	ldr	r3, [r7, #4]
 8008a04:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8008a08:	d017      	beq.n	8008a3a <TIM_Base_SetConfig+0x8a>
 8008a0a:	687b      	ldr	r3, [r7, #4]
 8008a0c:	4a28      	ldr	r2, [pc, #160]	; (8008ab0 <TIM_Base_SetConfig+0x100>)
 8008a0e:	4293      	cmp	r3, r2
 8008a10:	d013      	beq.n	8008a3a <TIM_Base_SetConfig+0x8a>
 8008a12:	687b      	ldr	r3, [r7, #4]
 8008a14:	4a27      	ldr	r2, [pc, #156]	; (8008ab4 <TIM_Base_SetConfig+0x104>)
 8008a16:	4293      	cmp	r3, r2
 8008a18:	d00f      	beq.n	8008a3a <TIM_Base_SetConfig+0x8a>
 8008a1a:	687b      	ldr	r3, [r7, #4]
 8008a1c:	4a26      	ldr	r2, [pc, #152]	; (8008ab8 <TIM_Base_SetConfig+0x108>)
 8008a1e:	4293      	cmp	r3, r2
 8008a20:	d00b      	beq.n	8008a3a <TIM_Base_SetConfig+0x8a>
 8008a22:	687b      	ldr	r3, [r7, #4]
 8008a24:	4a25      	ldr	r2, [pc, #148]	; (8008abc <TIM_Base_SetConfig+0x10c>)
 8008a26:	4293      	cmp	r3, r2
 8008a28:	d007      	beq.n	8008a3a <TIM_Base_SetConfig+0x8a>
 8008a2a:	687b      	ldr	r3, [r7, #4]
 8008a2c:	4a24      	ldr	r2, [pc, #144]	; (8008ac0 <TIM_Base_SetConfig+0x110>)
 8008a2e:	4293      	cmp	r3, r2
 8008a30:	d003      	beq.n	8008a3a <TIM_Base_SetConfig+0x8a>
 8008a32:	687b      	ldr	r3, [r7, #4]
 8008a34:	4a23      	ldr	r2, [pc, #140]	; (8008ac4 <TIM_Base_SetConfig+0x114>)
 8008a36:	4293      	cmp	r3, r2
 8008a38:	d108      	bne.n	8008a4c <TIM_Base_SetConfig+0x9c>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 8008a3a:	68fb      	ldr	r3, [r7, #12]
 8008a3c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8008a40:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8008a42:	683b      	ldr	r3, [r7, #0]
 8008a44:	68db      	ldr	r3, [r3, #12]
 8008a46:	68fa      	ldr	r2, [r7, #12]
 8008a48:	4313      	orrs	r3, r2
 8008a4a:	60fb      	str	r3, [r7, #12]
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8008a4c:	68fb      	ldr	r3, [r7, #12]
 8008a4e:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8008a52:	683b      	ldr	r3, [r7, #0]
 8008a54:	695b      	ldr	r3, [r3, #20]
 8008a56:	4313      	orrs	r3, r2
 8008a58:	60fb      	str	r3, [r7, #12]

  TIMx->CR1 = tmpcr1;
 8008a5a:	687b      	ldr	r3, [r7, #4]
 8008a5c:	68fa      	ldr	r2, [r7, #12]
 8008a5e:	601a      	str	r2, [r3, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8008a60:	683b      	ldr	r3, [r7, #0]
 8008a62:	689a      	ldr	r2, [r3, #8]
 8008a64:	687b      	ldr	r3, [r7, #4]
 8008a66:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8008a68:	683b      	ldr	r3, [r7, #0]
 8008a6a:	681a      	ldr	r2, [r3, #0]
 8008a6c:	687b      	ldr	r3, [r7, #4]
 8008a6e:	629a      	str	r2, [r3, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8008a70:	687b      	ldr	r3, [r7, #4]
 8008a72:	4a0e      	ldr	r2, [pc, #56]	; (8008aac <TIM_Base_SetConfig+0xfc>)
 8008a74:	4293      	cmp	r3, r2
 8008a76:	d103      	bne.n	8008a80 <TIM_Base_SetConfig+0xd0>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8008a78:	683b      	ldr	r3, [r7, #0]
 8008a7a:	691a      	ldr	r2, [r3, #16]
 8008a7c:	687b      	ldr	r3, [r7, #4]
 8008a7e:	631a      	str	r2, [r3, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8008a80:	687b      	ldr	r3, [r7, #4]
 8008a82:	2201      	movs	r2, #1
 8008a84:	615a      	str	r2, [r3, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
 8008a86:	687b      	ldr	r3, [r7, #4]
 8008a88:	691b      	ldr	r3, [r3, #16]
 8008a8a:	f003 0301 	and.w	r3, r3, #1
 8008a8e:	2b01      	cmp	r3, #1
 8008a90:	d105      	bne.n	8008a9e <TIM_Base_SetConfig+0xee>
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
 8008a92:	687b      	ldr	r3, [r7, #4]
 8008a94:	691b      	ldr	r3, [r3, #16]
 8008a96:	f023 0201 	bic.w	r2, r3, #1
 8008a9a:	687b      	ldr	r3, [r7, #4]
 8008a9c:	611a      	str	r2, [r3, #16]
  }
}
 8008a9e:	bf00      	nop
 8008aa0:	3714      	adds	r7, #20
 8008aa2:	46bd      	mov	sp, r7
 8008aa4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008aa8:	4770      	bx	lr
 8008aaa:	bf00      	nop
 8008aac:	40010000 	.word	0x40010000
 8008ab0:	40000400 	.word	0x40000400
 8008ab4:	40000800 	.word	0x40000800
 8008ab8:	40000c00 	.word	0x40000c00
 8008abc:	40014000 	.word	0x40014000
 8008ac0:	40014400 	.word	0x40014400
 8008ac4:	40014800 	.word	0x40014800

08008ac8 <TIM_OC1_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC1_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 8008ac8:	b480      	push	{r7}
 8008aca:	b087      	sub	sp, #28
 8008acc:	af00      	add	r7, sp, #0
 8008ace:	6078      	str	r0, [r7, #4]
 8008ad0:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8008ad2:	687b      	ldr	r3, [r7, #4]
 8008ad4:	6a1b      	ldr	r3, [r3, #32]
 8008ad6:	617b      	str	r3, [r7, #20]

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8008ad8:	687b      	ldr	r3, [r7, #4]
 8008ada:	6a1b      	ldr	r3, [r3, #32]
 8008adc:	f023 0201 	bic.w	r2, r3, #1
 8008ae0:	687b      	ldr	r3, [r7, #4]
 8008ae2:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8008ae4:	687b      	ldr	r3, [r7, #4]
 8008ae6:	685b      	ldr	r3, [r3, #4]
 8008ae8:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 8008aea:	687b      	ldr	r3, [r7, #4]
 8008aec:	699b      	ldr	r3, [r3, #24]
 8008aee:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
 8008af0:	68fb      	ldr	r3, [r7, #12]
 8008af2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8008af6:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 8008af8:	68fb      	ldr	r3, [r7, #12]
 8008afa:	f023 0303 	bic.w	r3, r3, #3
 8008afe:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8008b00:	683b      	ldr	r3, [r7, #0]
 8008b02:	681b      	ldr	r3, [r3, #0]
 8008b04:	68fa      	ldr	r2, [r7, #12]
 8008b06:	4313      	orrs	r3, r2
 8008b08:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
 8008b0a:	697b      	ldr	r3, [r7, #20]
 8008b0c:	f023 0302 	bic.w	r3, r3, #2
 8008b10:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 8008b12:	683b      	ldr	r3, [r7, #0]
 8008b14:	689b      	ldr	r3, [r3, #8]
 8008b16:	697a      	ldr	r2, [r7, #20]
 8008b18:	4313      	orrs	r3, r2
 8008b1a:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 8008b1c:	687b      	ldr	r3, [r7, #4]
 8008b1e:	4a1c      	ldr	r2, [pc, #112]	; (8008b90 <TIM_OC1_SetConfig+0xc8>)
 8008b20:	4293      	cmp	r3, r2
 8008b22:	d10c      	bne.n	8008b3e <TIM_OC1_SetConfig+0x76>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
 8008b24:	697b      	ldr	r3, [r7, #20]
 8008b26:	f023 0308 	bic.w	r3, r3, #8
 8008b2a:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
 8008b2c:	683b      	ldr	r3, [r7, #0]
 8008b2e:	68db      	ldr	r3, [r3, #12]
 8008b30:	697a      	ldr	r2, [r7, #20]
 8008b32:	4313      	orrs	r3, r2
 8008b34:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC1NE;
 8008b36:	697b      	ldr	r3, [r7, #20]
 8008b38:	f023 0304 	bic.w	r3, r3, #4
 8008b3c:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8008b3e:	687b      	ldr	r3, [r7, #4]
 8008b40:	4a13      	ldr	r2, [pc, #76]	; (8008b90 <TIM_OC1_SetConfig+0xc8>)
 8008b42:	4293      	cmp	r3, r2
 8008b44:	d111      	bne.n	8008b6a <TIM_OC1_SetConfig+0xa2>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS1;
 8008b46:	693b      	ldr	r3, [r7, #16]
 8008b48:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8008b4c:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 8008b4e:	693b      	ldr	r3, [r7, #16]
 8008b50:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8008b54:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
 8008b56:	683b      	ldr	r3, [r7, #0]
 8008b58:	695b      	ldr	r3, [r3, #20]
 8008b5a:	693a      	ldr	r2, [r7, #16]
 8008b5c:	4313      	orrs	r3, r2
 8008b5e:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 8008b60:	683b      	ldr	r3, [r7, #0]
 8008b62:	699b      	ldr	r3, [r3, #24]
 8008b64:	693a      	ldr	r2, [r7, #16]
 8008b66:	4313      	orrs	r3, r2
 8008b68:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8008b6a:	687b      	ldr	r3, [r7, #4]
 8008b6c:	693a      	ldr	r2, [r7, #16]
 8008b6e:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 8008b70:	687b      	ldr	r3, [r7, #4]
 8008b72:	68fa      	ldr	r2, [r7, #12]
 8008b74:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 8008b76:	683b      	ldr	r3, [r7, #0]
 8008b78:	685a      	ldr	r2, [r3, #4]
 8008b7a:	687b      	ldr	r3, [r7, #4]
 8008b7c:	635a      	str	r2, [r3, #52]	; 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8008b7e:	687b      	ldr	r3, [r7, #4]
 8008b80:	697a      	ldr	r2, [r7, #20]
 8008b82:	621a      	str	r2, [r3, #32]
}
 8008b84:	bf00      	nop
 8008b86:	371c      	adds	r7, #28
 8008b88:	46bd      	mov	sp, r7
 8008b8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b8e:	4770      	bx	lr
 8008b90:	40010000 	.word	0x40010000

08008b94 <TIM_OC2_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
void TIM_OC2_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 8008b94:	b480      	push	{r7}
 8008b96:	b087      	sub	sp, #28
 8008b98:	af00      	add	r7, sp, #0
 8008b9a:	6078      	str	r0, [r7, #4]
 8008b9c:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8008b9e:	687b      	ldr	r3, [r7, #4]
 8008ba0:	6a1b      	ldr	r3, [r3, #32]
 8008ba2:	617b      	str	r3, [r7, #20]

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8008ba4:	687b      	ldr	r3, [r7, #4]
 8008ba6:	6a1b      	ldr	r3, [r3, #32]
 8008ba8:	f023 0210 	bic.w	r2, r3, #16
 8008bac:	687b      	ldr	r3, [r7, #4]
 8008bae:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8008bb0:	687b      	ldr	r3, [r7, #4]
 8008bb2:	685b      	ldr	r3, [r3, #4]
 8008bb4:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 8008bb6:	687b      	ldr	r3, [r7, #4]
 8008bb8:	699b      	ldr	r3, [r3, #24]
 8008bba:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR1_OC2M;
 8008bbc:	68fb      	ldr	r3, [r7, #12]
 8008bbe:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8008bc2:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 8008bc4:	68fb      	ldr	r3, [r7, #12]
 8008bc6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8008bca:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8008bcc:	683b      	ldr	r3, [r7, #0]
 8008bce:	681b      	ldr	r3, [r3, #0]
 8008bd0:	021b      	lsls	r3, r3, #8
 8008bd2:	68fa      	ldr	r2, [r7, #12]
 8008bd4:	4313      	orrs	r3, r2
 8008bd6:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC2P;
 8008bd8:	697b      	ldr	r3, [r7, #20]
 8008bda:	f023 0320 	bic.w	r3, r3, #32
 8008bde:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 4U);
 8008be0:	683b      	ldr	r3, [r7, #0]
 8008be2:	689b      	ldr	r3, [r3, #8]
 8008be4:	011b      	lsls	r3, r3, #4
 8008be6:	697a      	ldr	r2, [r7, #20]
 8008be8:	4313      	orrs	r3, r2
 8008bea:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 8008bec:	687b      	ldr	r3, [r7, #4]
 8008bee:	4a1e      	ldr	r2, [pc, #120]	; (8008c68 <TIM_OC2_SetConfig+0xd4>)
 8008bf0:	4293      	cmp	r3, r2
 8008bf2:	d10d      	bne.n	8008c10 <TIM_OC2_SetConfig+0x7c>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC2NP;
 8008bf4:	697b      	ldr	r3, [r7, #20]
 8008bf6:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8008bfa:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 8008bfc:	683b      	ldr	r3, [r7, #0]
 8008bfe:	68db      	ldr	r3, [r3, #12]
 8008c00:	011b      	lsls	r3, r3, #4
 8008c02:	697a      	ldr	r2, [r7, #20]
 8008c04:	4313      	orrs	r3, r2
 8008c06:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC2NE;
 8008c08:	697b      	ldr	r3, [r7, #20]
 8008c0a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8008c0e:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8008c10:	687b      	ldr	r3, [r7, #4]
 8008c12:	4a15      	ldr	r2, [pc, #84]	; (8008c68 <TIM_OC2_SetConfig+0xd4>)
 8008c14:	4293      	cmp	r3, r2
 8008c16:	d113      	bne.n	8008c40 <TIM_OC2_SetConfig+0xac>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS2;
 8008c18:	693b      	ldr	r3, [r7, #16]
 8008c1a:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8008c1e:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 8008c20:	693b      	ldr	r3, [r7, #16]
 8008c22:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8008c26:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 2U);
 8008c28:	683b      	ldr	r3, [r7, #0]
 8008c2a:	695b      	ldr	r3, [r3, #20]
 8008c2c:	009b      	lsls	r3, r3, #2
 8008c2e:	693a      	ldr	r2, [r7, #16]
 8008c30:	4313      	orrs	r3, r2
 8008c32:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 8008c34:	683b      	ldr	r3, [r7, #0]
 8008c36:	699b      	ldr	r3, [r3, #24]
 8008c38:	009b      	lsls	r3, r3, #2
 8008c3a:	693a      	ldr	r2, [r7, #16]
 8008c3c:	4313      	orrs	r3, r2
 8008c3e:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8008c40:	687b      	ldr	r3, [r7, #4]
 8008c42:	693a      	ldr	r2, [r7, #16]
 8008c44:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 8008c46:	687b      	ldr	r3, [r7, #4]
 8008c48:	68fa      	ldr	r2, [r7, #12]
 8008c4a:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR2 = OC_Config->Pulse;
 8008c4c:	683b      	ldr	r3, [r7, #0]
 8008c4e:	685a      	ldr	r2, [r3, #4]
 8008c50:	687b      	ldr	r3, [r7, #4]
 8008c52:	639a      	str	r2, [r3, #56]	; 0x38

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8008c54:	687b      	ldr	r3, [r7, #4]
 8008c56:	697a      	ldr	r2, [r7, #20]
 8008c58:	621a      	str	r2, [r3, #32]
}
 8008c5a:	bf00      	nop
 8008c5c:	371c      	adds	r7, #28
 8008c5e:	46bd      	mov	sp, r7
 8008c60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008c64:	4770      	bx	lr
 8008c66:	bf00      	nop
 8008c68:	40010000 	.word	0x40010000

08008c6c <TIM_OC3_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC3_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 8008c6c:	b480      	push	{r7}
 8008c6e:	b087      	sub	sp, #28
 8008c70:	af00      	add	r7, sp, #0
 8008c72:	6078      	str	r0, [r7, #4]
 8008c74:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8008c76:	687b      	ldr	r3, [r7, #4]
 8008c78:	6a1b      	ldr	r3, [r3, #32]
 8008c7a:	617b      	str	r3, [r7, #20]

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 8008c7c:	687b      	ldr	r3, [r7, #4]
 8008c7e:	6a1b      	ldr	r3, [r3, #32]
 8008c80:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8008c84:	687b      	ldr	r3, [r7, #4]
 8008c86:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8008c88:	687b      	ldr	r3, [r7, #4]
 8008c8a:	685b      	ldr	r3, [r3, #4]
 8008c8c:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 8008c8e:	687b      	ldr	r3, [r7, #4]
 8008c90:	69db      	ldr	r3, [r3, #28]
 8008c92:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
 8008c94:	68fb      	ldr	r3, [r7, #12]
 8008c96:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8008c9a:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 8008c9c:	68fb      	ldr	r3, [r7, #12]
 8008c9e:	f023 0303 	bic.w	r3, r3, #3
 8008ca2:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8008ca4:	683b      	ldr	r3, [r7, #0]
 8008ca6:	681b      	ldr	r3, [r3, #0]
 8008ca8:	68fa      	ldr	r2, [r7, #12]
 8008caa:	4313      	orrs	r3, r2
 8008cac:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
 8008cae:	697b      	ldr	r3, [r7, #20]
 8008cb0:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8008cb4:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 8008cb6:	683b      	ldr	r3, [r7, #0]
 8008cb8:	689b      	ldr	r3, [r3, #8]
 8008cba:	021b      	lsls	r3, r3, #8
 8008cbc:	697a      	ldr	r2, [r7, #20]
 8008cbe:	4313      	orrs	r3, r2
 8008cc0:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 8008cc2:	687b      	ldr	r3, [r7, #4]
 8008cc4:	4a1d      	ldr	r2, [pc, #116]	; (8008d3c <TIM_OC3_SetConfig+0xd0>)
 8008cc6:	4293      	cmp	r3, r2
 8008cc8:	d10d      	bne.n	8008ce6 <TIM_OC3_SetConfig+0x7a>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
 8008cca:	697b      	ldr	r3, [r7, #20]
 8008ccc:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8008cd0:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 8008cd2:	683b      	ldr	r3, [r7, #0]
 8008cd4:	68db      	ldr	r3, [r3, #12]
 8008cd6:	021b      	lsls	r3, r3, #8
 8008cd8:	697a      	ldr	r2, [r7, #20]
 8008cda:	4313      	orrs	r3, r2
 8008cdc:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC3NE;
 8008cde:	697b      	ldr	r3, [r7, #20]
 8008ce0:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8008ce4:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8008ce6:	687b      	ldr	r3, [r7, #4]
 8008ce8:	4a14      	ldr	r2, [pc, #80]	; (8008d3c <TIM_OC3_SetConfig+0xd0>)
 8008cea:	4293      	cmp	r3, r2
 8008cec:	d113      	bne.n	8008d16 <TIM_OC3_SetConfig+0xaa>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS3;
 8008cee:	693b      	ldr	r3, [r7, #16]
 8008cf0:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8008cf4:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 8008cf6:	693b      	ldr	r3, [r7, #16]
 8008cf8:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8008cfc:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
 8008cfe:	683b      	ldr	r3, [r7, #0]
 8008d00:	695b      	ldr	r3, [r3, #20]
 8008d02:	011b      	lsls	r3, r3, #4
 8008d04:	693a      	ldr	r2, [r7, #16]
 8008d06:	4313      	orrs	r3, r2
 8008d08:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 8008d0a:	683b      	ldr	r3, [r7, #0]
 8008d0c:	699b      	ldr	r3, [r3, #24]
 8008d0e:	011b      	lsls	r3, r3, #4
 8008d10:	693a      	ldr	r2, [r7, #16]
 8008d12:	4313      	orrs	r3, r2
 8008d14:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8008d16:	687b      	ldr	r3, [r7, #4]
 8008d18:	693a      	ldr	r2, [r7, #16]
 8008d1a:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8008d1c:	687b      	ldr	r3, [r7, #4]
 8008d1e:	68fa      	ldr	r2, [r7, #12]
 8008d20:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 8008d22:	683b      	ldr	r3, [r7, #0]
 8008d24:	685a      	ldr	r2, [r3, #4]
 8008d26:	687b      	ldr	r3, [r7, #4]
 8008d28:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8008d2a:	687b      	ldr	r3, [r7, #4]
 8008d2c:	697a      	ldr	r2, [r7, #20]
 8008d2e:	621a      	str	r2, [r3, #32]
}
 8008d30:	bf00      	nop
 8008d32:	371c      	adds	r7, #28
 8008d34:	46bd      	mov	sp, r7
 8008d36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d3a:	4770      	bx	lr
 8008d3c:	40010000 	.word	0x40010000

08008d40 <TIM_OC4_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC4_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 8008d40:	b480      	push	{r7}
 8008d42:	b087      	sub	sp, #28
 8008d44:	af00      	add	r7, sp, #0
 8008d46:	6078      	str	r0, [r7, #4]
 8008d48:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8008d4a:	687b      	ldr	r3, [r7, #4]
 8008d4c:	6a1b      	ldr	r3, [r3, #32]
 8008d4e:	613b      	str	r3, [r7, #16]

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 8008d50:	687b      	ldr	r3, [r7, #4]
 8008d52:	6a1b      	ldr	r3, [r3, #32]
 8008d54:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8008d58:	687b      	ldr	r3, [r7, #4]
 8008d5a:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8008d5c:	687b      	ldr	r3, [r7, #4]
 8008d5e:	685b      	ldr	r3, [r3, #4]
 8008d60:	617b      	str	r3, [r7, #20]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 8008d62:	687b      	ldr	r3, [r7, #4]
 8008d64:	69db      	ldr	r3, [r3, #28]
 8008d66:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
 8008d68:	68fb      	ldr	r3, [r7, #12]
 8008d6a:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8008d6e:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 8008d70:	68fb      	ldr	r3, [r7, #12]
 8008d72:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8008d76:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8008d78:	683b      	ldr	r3, [r7, #0]
 8008d7a:	681b      	ldr	r3, [r3, #0]
 8008d7c:	021b      	lsls	r3, r3, #8
 8008d7e:	68fa      	ldr	r2, [r7, #12]
 8008d80:	4313      	orrs	r3, r2
 8008d82:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
 8008d84:	693b      	ldr	r3, [r7, #16]
 8008d86:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8008d8a:	613b      	str	r3, [r7, #16]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 8008d8c:	683b      	ldr	r3, [r7, #0]
 8008d8e:	689b      	ldr	r3, [r3, #8]
 8008d90:	031b      	lsls	r3, r3, #12
 8008d92:	693a      	ldr	r2, [r7, #16]
 8008d94:	4313      	orrs	r3, r2
 8008d96:	613b      	str	r3, [r7, #16]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8008d98:	687b      	ldr	r3, [r7, #4]
 8008d9a:	4a10      	ldr	r2, [pc, #64]	; (8008ddc <TIM_OC4_SetConfig+0x9c>)
 8008d9c:	4293      	cmp	r3, r2
 8008d9e:	d109      	bne.n	8008db4 <TIM_OC4_SetConfig+0x74>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;
 8008da0:	697b      	ldr	r3, [r7, #20]
 8008da2:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8008da6:	617b      	str	r3, [r7, #20]

    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 8008da8:	683b      	ldr	r3, [r7, #0]
 8008daa:	695b      	ldr	r3, [r3, #20]
 8008dac:	019b      	lsls	r3, r3, #6
 8008dae:	697a      	ldr	r2, [r7, #20]
 8008db0:	4313      	orrs	r3, r2
 8008db2:	617b      	str	r3, [r7, #20]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8008db4:	687b      	ldr	r3, [r7, #4]
 8008db6:	697a      	ldr	r2, [r7, #20]
 8008db8:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8008dba:	687b      	ldr	r3, [r7, #4]
 8008dbc:	68fa      	ldr	r2, [r7, #12]
 8008dbe:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 8008dc0:	683b      	ldr	r3, [r7, #0]
 8008dc2:	685a      	ldr	r2, [r3, #4]
 8008dc4:	687b      	ldr	r3, [r7, #4]
 8008dc6:	641a      	str	r2, [r3, #64]	; 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8008dc8:	687b      	ldr	r3, [r7, #4]
 8008dca:	693a      	ldr	r2, [r7, #16]
 8008dcc:	621a      	str	r2, [r3, #32]
}
 8008dce:	bf00      	nop
 8008dd0:	371c      	adds	r7, #28
 8008dd2:	46bd      	mov	sp, r7
 8008dd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008dd8:	4770      	bx	lr
 8008dda:	bf00      	nop
 8008ddc:	40010000 	.word	0x40010000

08008de0 <TIM_TI1_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI1_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 8008de0:	b480      	push	{r7}
 8008de2:	b087      	sub	sp, #28
 8008de4:	af00      	add	r7, sp, #0
 8008de6:	60f8      	str	r0, [r7, #12]
 8008de8:	60b9      	str	r1, [r7, #8]
 8008dea:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 8008dec:	68fb      	ldr	r3, [r7, #12]
 8008dee:	6a1b      	ldr	r3, [r3, #32]
 8008df0:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8008df2:	68fb      	ldr	r3, [r7, #12]
 8008df4:	6a1b      	ldr	r3, [r3, #32]
 8008df6:	f023 0201 	bic.w	r2, r3, #1
 8008dfa:	68fb      	ldr	r3, [r7, #12]
 8008dfc:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8008dfe:	68fb      	ldr	r3, [r7, #12]
 8008e00:	699b      	ldr	r3, [r3, #24]
 8008e02:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8008e04:	693b      	ldr	r3, [r7, #16]
 8008e06:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8008e0a:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 4U);
 8008e0c:	687b      	ldr	r3, [r7, #4]
 8008e0e:	011b      	lsls	r3, r3, #4
 8008e10:	693a      	ldr	r2, [r7, #16]
 8008e12:	4313      	orrs	r3, r2
 8008e14:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 8008e16:	697b      	ldr	r3, [r7, #20]
 8008e18:	f023 030a 	bic.w	r3, r3, #10
 8008e1c:	617b      	str	r3, [r7, #20]
  tmpccer |= TIM_ICPolarity;
 8008e1e:	697a      	ldr	r2, [r7, #20]
 8008e20:	68bb      	ldr	r3, [r7, #8]
 8008e22:	4313      	orrs	r3, r2
 8008e24:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 8008e26:	68fb      	ldr	r3, [r7, #12]
 8008e28:	693a      	ldr	r2, [r7, #16]
 8008e2a:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8008e2c:	68fb      	ldr	r3, [r7, #12]
 8008e2e:	697a      	ldr	r2, [r7, #20]
 8008e30:	621a      	str	r2, [r3, #32]
}
 8008e32:	bf00      	nop
 8008e34:	371c      	adds	r7, #28
 8008e36:	46bd      	mov	sp, r7
 8008e38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008e3c:	4770      	bx	lr

08008e3e <TIM_TI2_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI2_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 8008e3e:	b480      	push	{r7}
 8008e40:	b087      	sub	sp, #28
 8008e42:	af00      	add	r7, sp, #0
 8008e44:	60f8      	str	r0, [r7, #12]
 8008e46:	60b9      	str	r1, [r7, #8]
 8008e48:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 2: Reset the CC2E Bit */
  tmpccer = TIMx->CCER;
 8008e4a:	68fb      	ldr	r3, [r7, #12]
 8008e4c:	6a1b      	ldr	r3, [r3, #32]
 8008e4e:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8008e50:	68fb      	ldr	r3, [r7, #12]
 8008e52:	6a1b      	ldr	r3, [r3, #32]
 8008e54:	f023 0210 	bic.w	r2, r3, #16
 8008e58:	68fb      	ldr	r3, [r7, #12]
 8008e5a:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8008e5c:	68fb      	ldr	r3, [r7, #12]
 8008e5e:	699b      	ldr	r3, [r3, #24]
 8008e60:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 8008e62:	693b      	ldr	r3, [r7, #16]
 8008e64:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8008e68:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 12U);
 8008e6a:	687b      	ldr	r3, [r7, #4]
 8008e6c:	031b      	lsls	r3, r3, #12
 8008e6e:	693a      	ldr	r2, [r7, #16]
 8008e70:	4313      	orrs	r3, r2
 8008e72:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 8008e74:	697b      	ldr	r3, [r7, #20]
 8008e76:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8008e7a:	617b      	str	r3, [r7, #20]
  tmpccer |= (TIM_ICPolarity << 4U);
 8008e7c:	68bb      	ldr	r3, [r7, #8]
 8008e7e:	011b      	lsls	r3, r3, #4
 8008e80:	697a      	ldr	r2, [r7, #20]
 8008e82:	4313      	orrs	r3, r2
 8008e84:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1 ;
 8008e86:	68fb      	ldr	r3, [r7, #12]
 8008e88:	693a      	ldr	r2, [r7, #16]
 8008e8a:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8008e8c:	68fb      	ldr	r3, [r7, #12]
 8008e8e:	697a      	ldr	r2, [r7, #20]
 8008e90:	621a      	str	r2, [r3, #32]
}
 8008e92:	bf00      	nop
 8008e94:	371c      	adds	r7, #28
 8008e96:	46bd      	mov	sp, r7
 8008e98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008e9c:	4770      	bx	lr

08008e9e <TIM_ITRx_SetConfig>:
  *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
  *            @arg TIM_TS_ETRF: External Trigger input
  * @retval None
  */
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
 8008e9e:	b480      	push	{r7}
 8008ea0:	b085      	sub	sp, #20
 8008ea2:	af00      	add	r7, sp, #0
 8008ea4:	6078      	str	r0, [r7, #4]
 8008ea6:	6039      	str	r1, [r7, #0]
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 8008ea8:	687b      	ldr	r3, [r7, #4]
 8008eaa:	689b      	ldr	r3, [r3, #8]
 8008eac:	60fb      	str	r3, [r7, #12]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 8008eae:	68fb      	ldr	r3, [r7, #12]
 8008eb0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8008eb4:	60fb      	str	r3, [r7, #12]
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8008eb6:	683a      	ldr	r2, [r7, #0]
 8008eb8:	68fb      	ldr	r3, [r7, #12]
 8008eba:	4313      	orrs	r3, r2
 8008ebc:	f043 0307 	orr.w	r3, r3, #7
 8008ec0:	60fb      	str	r3, [r7, #12]
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8008ec2:	687b      	ldr	r3, [r7, #4]
 8008ec4:	68fa      	ldr	r2, [r7, #12]
 8008ec6:	609a      	str	r2, [r3, #8]
}
 8008ec8:	bf00      	nop
 8008eca:	3714      	adds	r7, #20
 8008ecc:	46bd      	mov	sp, r7
 8008ece:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ed2:	4770      	bx	lr

08008ed4 <TIM_ETR_SetConfig>:
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
 8008ed4:	b480      	push	{r7}
 8008ed6:	b087      	sub	sp, #28
 8008ed8:	af00      	add	r7, sp, #0
 8008eda:	60f8      	str	r0, [r7, #12]
 8008edc:	60b9      	str	r1, [r7, #8]
 8008ede:	607a      	str	r2, [r7, #4]
 8008ee0:	603b      	str	r3, [r7, #0]
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 8008ee2:	68fb      	ldr	r3, [r7, #12]
 8008ee4:	689b      	ldr	r3, [r3, #8]
 8008ee6:	617b      	str	r3, [r7, #20]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8008ee8:	697b      	ldr	r3, [r7, #20]
 8008eea:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8008eee:	617b      	str	r3, [r7, #20]

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8008ef0:	683b      	ldr	r3, [r7, #0]
 8008ef2:	021a      	lsls	r2, r3, #8
 8008ef4:	687b      	ldr	r3, [r7, #4]
 8008ef6:	431a      	orrs	r2, r3
 8008ef8:	68bb      	ldr	r3, [r7, #8]
 8008efa:	4313      	orrs	r3, r2
 8008efc:	697a      	ldr	r2, [r7, #20]
 8008efe:	4313      	orrs	r3, r2
 8008f00:	617b      	str	r3, [r7, #20]

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8008f02:	68fb      	ldr	r3, [r7, #12]
 8008f04:	697a      	ldr	r2, [r7, #20]
 8008f06:	609a      	str	r2, [r3, #8]
}
 8008f08:	bf00      	nop
 8008f0a:	371c      	adds	r7, #28
 8008f0c:	46bd      	mov	sp, r7
 8008f0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f12:	4770      	bx	lr

08008f14 <TIM_CCxChannelCmd>:
  * @param  ChannelState specifies the TIM Channel CCxE bit new state.
  *          This parameter can be: TIM_CCx_ENABLE or TIM_CCx_DISABLE.
  * @retval None
  */
void TIM_CCxChannelCmd(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ChannelState)
{
 8008f14:	b480      	push	{r7}
 8008f16:	b087      	sub	sp, #28
 8008f18:	af00      	add	r7, sp, #0
 8008f1a:	60f8      	str	r0, [r7, #12]
 8008f1c:	60b9      	str	r1, [r7, #8]
 8008f1e:	607a      	str	r2, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_CC1_INSTANCE(TIMx));
  assert_param(IS_TIM_CHANNELS(Channel));

  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 8008f20:	68bb      	ldr	r3, [r7, #8]
 8008f22:	f003 031f 	and.w	r3, r3, #31
 8008f26:	2201      	movs	r2, #1
 8008f28:	fa02 f303 	lsl.w	r3, r2, r3
 8008f2c:	617b      	str	r3, [r7, #20]

  /* Reset the CCxE Bit */
  TIMx->CCER &= ~tmp;
 8008f2e:	68fb      	ldr	r3, [r7, #12]
 8008f30:	6a1a      	ldr	r2, [r3, #32]
 8008f32:	697b      	ldr	r3, [r7, #20]
 8008f34:	43db      	mvns	r3, r3
 8008f36:	401a      	ands	r2, r3
 8008f38:	68fb      	ldr	r3, [r7, #12]
 8008f3a:	621a      	str	r2, [r3, #32]

  /* Set or reset the CCxE Bit */
  TIMx->CCER |= (uint32_t)(ChannelState << (Channel & 0x1FU)); /* 0x1FU = 31 bits max shift */
 8008f3c:	68fb      	ldr	r3, [r7, #12]
 8008f3e:	6a1a      	ldr	r2, [r3, #32]
 8008f40:	68bb      	ldr	r3, [r7, #8]
 8008f42:	f003 031f 	and.w	r3, r3, #31
 8008f46:	6879      	ldr	r1, [r7, #4]
 8008f48:	fa01 f303 	lsl.w	r3, r1, r3
 8008f4c:	431a      	orrs	r2, r3
 8008f4e:	68fb      	ldr	r3, [r7, #12]
 8008f50:	621a      	str	r2, [r3, #32]
}
 8008f52:	bf00      	nop
 8008f54:	371c      	adds	r7, #28
 8008f56:	46bd      	mov	sp, r7
 8008f58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f5c:	4770      	bx	lr
	...

08008f60 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        const TIM_MasterConfigTypeDef *sMasterConfig)
{
 8008f60:	b480      	push	{r7}
 8008f62:	b085      	sub	sp, #20
 8008f64:	af00      	add	r7, sp, #0
 8008f66:	6078      	str	r0, [r7, #4]
 8008f68:	6039      	str	r1, [r7, #0]
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 8008f6a:	687b      	ldr	r3, [r7, #4]
 8008f6c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8008f70:	2b01      	cmp	r3, #1
 8008f72:	d101      	bne.n	8008f78 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8008f74:	2302      	movs	r3, #2
 8008f76:	e050      	b.n	800901a <HAL_TIMEx_MasterConfigSynchronization+0xba>
 8008f78:	687b      	ldr	r3, [r7, #4]
 8008f7a:	2201      	movs	r2, #1
 8008f7c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 8008f80:	687b      	ldr	r3, [r7, #4]
 8008f82:	2202      	movs	r2, #2
 8008f84:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 8008f88:	687b      	ldr	r3, [r7, #4]
 8008f8a:	681b      	ldr	r3, [r3, #0]
 8008f8c:	685b      	ldr	r3, [r3, #4]
 8008f8e:	60fb      	str	r3, [r7, #12]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;
 8008f90:	687b      	ldr	r3, [r7, #4]
 8008f92:	681b      	ldr	r3, [r3, #0]
 8008f94:	689b      	ldr	r3, [r3, #8]
 8008f96:	60bb      	str	r3, [r7, #8]

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
 8008f98:	68fb      	ldr	r3, [r7, #12]
 8008f9a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8008f9e:	60fb      	str	r3, [r7, #12]
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8008fa0:	683b      	ldr	r3, [r7, #0]
 8008fa2:	681b      	ldr	r3, [r3, #0]
 8008fa4:	68fa      	ldr	r2, [r7, #12]
 8008fa6:	4313      	orrs	r3, r2
 8008fa8:	60fb      	str	r3, [r7, #12]

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 8008faa:	687b      	ldr	r3, [r7, #4]
 8008fac:	681b      	ldr	r3, [r3, #0]
 8008fae:	68fa      	ldr	r2, [r7, #12]
 8008fb0:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8008fb2:	687b      	ldr	r3, [r7, #4]
 8008fb4:	681b      	ldr	r3, [r3, #0]
 8008fb6:	4a1c      	ldr	r2, [pc, #112]	; (8009028 <HAL_TIMEx_MasterConfigSynchronization+0xc8>)
 8008fb8:	4293      	cmp	r3, r2
 8008fba:	d018      	beq.n	8008fee <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8008fbc:	687b      	ldr	r3, [r7, #4]
 8008fbe:	681b      	ldr	r3, [r3, #0]
 8008fc0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8008fc4:	d013      	beq.n	8008fee <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8008fc6:	687b      	ldr	r3, [r7, #4]
 8008fc8:	681b      	ldr	r3, [r3, #0]
 8008fca:	4a18      	ldr	r2, [pc, #96]	; (800902c <HAL_TIMEx_MasterConfigSynchronization+0xcc>)
 8008fcc:	4293      	cmp	r3, r2
 8008fce:	d00e      	beq.n	8008fee <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8008fd0:	687b      	ldr	r3, [r7, #4]
 8008fd2:	681b      	ldr	r3, [r3, #0]
 8008fd4:	4a16      	ldr	r2, [pc, #88]	; (8009030 <HAL_TIMEx_MasterConfigSynchronization+0xd0>)
 8008fd6:	4293      	cmp	r3, r2
 8008fd8:	d009      	beq.n	8008fee <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8008fda:	687b      	ldr	r3, [r7, #4]
 8008fdc:	681b      	ldr	r3, [r3, #0]
 8008fde:	4a15      	ldr	r2, [pc, #84]	; (8009034 <HAL_TIMEx_MasterConfigSynchronization+0xd4>)
 8008fe0:	4293      	cmp	r3, r2
 8008fe2:	d004      	beq.n	8008fee <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8008fe4:	687b      	ldr	r3, [r7, #4]
 8008fe6:	681b      	ldr	r3, [r3, #0]
 8008fe8:	4a13      	ldr	r2, [pc, #76]	; (8009038 <HAL_TIMEx_MasterConfigSynchronization+0xd8>)
 8008fea:	4293      	cmp	r3, r2
 8008fec:	d10c      	bne.n	8009008 <HAL_TIMEx_MasterConfigSynchronization+0xa8>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
 8008fee:	68bb      	ldr	r3, [r7, #8]
 8008ff0:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8008ff4:	60bb      	str	r3, [r7, #8]
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8008ff6:	683b      	ldr	r3, [r7, #0]
 8008ff8:	685b      	ldr	r3, [r3, #4]
 8008ffa:	68ba      	ldr	r2, [r7, #8]
 8008ffc:	4313      	orrs	r3, r2
 8008ffe:	60bb      	str	r3, [r7, #8]

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8009000:	687b      	ldr	r3, [r7, #4]
 8009002:	681b      	ldr	r3, [r3, #0]
 8009004:	68ba      	ldr	r2, [r7, #8]
 8009006:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8009008:	687b      	ldr	r3, [r7, #4]
 800900a:	2201      	movs	r2, #1
 800900c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 8009010:	687b      	ldr	r3, [r7, #4]
 8009012:	2200      	movs	r2, #0
 8009014:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return HAL_OK;
 8009018:	2300      	movs	r3, #0
}
 800901a:	4618      	mov	r0, r3
 800901c:	3714      	adds	r7, #20
 800901e:	46bd      	mov	sp, r7
 8009020:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009024:	4770      	bx	lr
 8009026:	bf00      	nop
 8009028:	40010000 	.word	0x40010000
 800902c:	40000400 	.word	0x40000400
 8009030:	40000800 	.word	0x40000800
 8009034:	40000c00 	.word	0x40000c00
 8009038:	40014000 	.word	0x40014000

0800903c <HAL_TIMEx_CommutCallback>:
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
{
 800903c:	b480      	push	{r7}
 800903e:	b083      	sub	sp, #12
 8009040:	af00      	add	r7, sp, #0
 8009042:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_CommutCallback could be implemented in the user file
   */
}
 8009044:	bf00      	nop
 8009046:	370c      	adds	r7, #12
 8009048:	46bd      	mov	sp, r7
 800904a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800904e:	4770      	bx	lr

08009050 <HAL_TIMEx_BreakCallback>:
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
{
 8009050:	b480      	push	{r7}
 8009052:	b083      	sub	sp, #12
 8009054:	af00      	add	r7, sp, #0
 8009056:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_BreakCallback could be implemented in the user file
   */
}
 8009058:	bf00      	nop
 800905a:	370c      	adds	r7, #12
 800905c:	46bd      	mov	sp, r7
 800905e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009062:	4770      	bx	lr

08009064 <LL_ADC_SetCommonClock>:
{
 8009064:	b480      	push	{r7}
 8009066:	b083      	sub	sp, #12
 8009068:	af00      	add	r7, sp, #0
 800906a:	6078      	str	r0, [r7, #4]
 800906c:	6039      	str	r1, [r7, #0]
  MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_ADCPRE, CommonClock);
 800906e:	687b      	ldr	r3, [r7, #4]
 8009070:	685b      	ldr	r3, [r3, #4]
 8009072:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8009076:	683b      	ldr	r3, [r7, #0]
 8009078:	431a      	orrs	r2, r3
 800907a:	687b      	ldr	r3, [r7, #4]
 800907c:	605a      	str	r2, [r3, #4]
}
 800907e:	bf00      	nop
 8009080:	370c      	adds	r7, #12
 8009082:	46bd      	mov	sp, r7
 8009084:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009088:	4770      	bx	lr

0800908a <LL_ADC_REG_SetSequencerLength>:
{
 800908a:	b480      	push	{r7}
 800908c:	b083      	sub	sp, #12
 800908e:	af00      	add	r7, sp, #0
 8009090:	6078      	str	r0, [r7, #4]
 8009092:	6039      	str	r1, [r7, #0]
  MODIFY_REG(ADCx->SQR1, ADC_SQR1_L, SequencerNbRanks);
 8009094:	687b      	ldr	r3, [r7, #4]
 8009096:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009098:	f423 0270 	bic.w	r2, r3, #15728640	; 0xf00000
 800909c:	683b      	ldr	r3, [r7, #0]
 800909e:	431a      	orrs	r2, r3
 80090a0:	687b      	ldr	r3, [r7, #4]
 80090a2:	62da      	str	r2, [r3, #44]	; 0x2c
}
 80090a4:	bf00      	nop
 80090a6:	370c      	adds	r7, #12
 80090a8:	46bd      	mov	sp, r7
 80090aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090ae:	4770      	bx	lr

080090b0 <LL_ADC_IsEnabled>:
{
 80090b0:	b480      	push	{r7}
 80090b2:	b083      	sub	sp, #12
 80090b4:	af00      	add	r7, sp, #0
 80090b6:	6078      	str	r0, [r7, #4]
  return (READ_BIT(ADCx->CR2, ADC_CR2_ADON) == (ADC_CR2_ADON));
 80090b8:	687b      	ldr	r3, [r7, #4]
 80090ba:	689b      	ldr	r3, [r3, #8]
 80090bc:	f003 0301 	and.w	r3, r3, #1
 80090c0:	2b01      	cmp	r3, #1
 80090c2:	bf0c      	ite	eq
 80090c4:	2301      	moveq	r3, #1
 80090c6:	2300      	movne	r3, #0
 80090c8:	b2db      	uxtb	r3, r3
}
 80090ca:	4618      	mov	r0, r3
 80090cc:	370c      	adds	r7, #12
 80090ce:	46bd      	mov	sp, r7
 80090d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090d4:	4770      	bx	lr
	...

080090d8 <LL_ADC_CommonInit>:
  * @retval An ErrorStatus enumeration value:
  *          - SUCCESS: ADC common registers are initialized
  *          - ERROR: ADC common registers are not initialized
  */
ErrorStatus LL_ADC_CommonInit(ADC_Common_TypeDef *ADCxy_COMMON, LL_ADC_CommonInitTypeDef *ADC_CommonInitStruct)
{
 80090d8:	b580      	push	{r7, lr}
 80090da:	b084      	sub	sp, #16
 80090dc:	af00      	add	r7, sp, #0
 80090de:	6078      	str	r0, [r7, #4]
 80090e0:	6039      	str	r1, [r7, #0]
  ErrorStatus status = SUCCESS;
 80090e2:	2300      	movs	r3, #0
 80090e4:	73fb      	strb	r3, [r7, #15]
  /* Note: Hardware constraint (refer to description of functions             */
  /*       "LL_ADC_SetCommonXXX()" and "LL_ADC_SetMultiXXX()"):               */
  /*       On this STM32 series, setting of these features is conditioned to  */
  /*       ADC state:                                                         */
  /*       All ADC instances of the ADC common group must be disabled.        */
  if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(ADCxy_COMMON) == 0UL)
 80090e6:	480a      	ldr	r0, [pc, #40]	; (8009110 <LL_ADC_CommonInit+0x38>)
 80090e8:	f7ff ffe2 	bl	80090b0 <LL_ADC_IsEnabled>
 80090ec:	4603      	mov	r3, r0
 80090ee:	2b00      	cmp	r3, #0
 80090f0:	d106      	bne.n	8009100 <LL_ADC_CommonInit+0x28>
                 ADC_CommonInitStruct->CommonClock
                 | LL_ADC_MULTI_INDEPENDENT
                );
    }
#else
    LL_ADC_SetCommonClock(ADCxy_COMMON, ADC_CommonInitStruct->CommonClock);
 80090f2:	683b      	ldr	r3, [r7, #0]
 80090f4:	681b      	ldr	r3, [r3, #0]
 80090f6:	4619      	mov	r1, r3
 80090f8:	6878      	ldr	r0, [r7, #4]
 80090fa:	f7ff ffb3 	bl	8009064 <LL_ADC_SetCommonClock>
 80090fe:	e001      	b.n	8009104 <LL_ADC_CommonInit+0x2c>
  }
  else
  {
    /* Initialization error: One or several ADC instances belonging to        */
    /* the same ADC common instance are not disabled.                         */
    status = ERROR;
 8009100:	2301      	movs	r3, #1
 8009102:	73fb      	strb	r3, [r7, #15]
  }

  return status;
 8009104:	7bfb      	ldrb	r3, [r7, #15]
}
 8009106:	4618      	mov	r0, r3
 8009108:	3710      	adds	r7, #16
 800910a:	46bd      	mov	sp, r7
 800910c:	bd80      	pop	{r7, pc}
 800910e:	bf00      	nop
 8009110:	40012000 	.word	0x40012000

08009114 <LL_ADC_Init>:
  * @retval An ErrorStatus enumeration value:
  *          - SUCCESS: ADC registers are initialized
  *          - ERROR: ADC registers are not initialized
  */
ErrorStatus LL_ADC_Init(ADC_TypeDef *ADCx, LL_ADC_InitTypeDef *ADC_InitStruct)
{
 8009114:	b580      	push	{r7, lr}
 8009116:	b084      	sub	sp, #16
 8009118:	af00      	add	r7, sp, #0
 800911a:	6078      	str	r0, [r7, #4]
 800911c:	6039      	str	r1, [r7, #0]
  ErrorStatus status = SUCCESS;
 800911e:	2300      	movs	r3, #0
 8009120:	73fb      	strb	r3, [r7, #15]
  assert_param(IS_LL_ADC_DATA_ALIGN(ADC_InitStruct->DataAlignment));
  assert_param(IS_LL_ADC_SCAN_SELECTION(ADC_InitStruct->SequencersScanMode));

  /* Note: Hardware constraint (refer to description of this function):       */
  /*       ADC instance must be disabled.                                     */
  if (LL_ADC_IsEnabled(ADCx) == 0UL)
 8009122:	6878      	ldr	r0, [r7, #4]
 8009124:	f7ff ffc4 	bl	80090b0 <LL_ADC_IsEnabled>
 8009128:	4603      	mov	r3, r0
 800912a:	2b00      	cmp	r3, #0
 800912c:	d117      	bne.n	800915e <LL_ADC_Init+0x4a>
  {
    /* Configuration of ADC hierarchical scope:                               */
    /*  - ADC instance                                                        */
    /*    - Set ADC data resolution                                           */
    /*    - Set ADC conversion data alignment                                 */
    MODIFY_REG(ADCx->CR1,
 800912e:	687b      	ldr	r3, [r7, #4]
 8009130:	685b      	ldr	r3, [r3, #4]
 8009132:	f023 7340 	bic.w	r3, r3, #50331648	; 0x3000000
 8009136:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800913a:	683a      	ldr	r2, [r7, #0]
 800913c:	6811      	ldr	r1, [r2, #0]
 800913e:	683a      	ldr	r2, [r7, #0]
 8009140:	6892      	ldr	r2, [r2, #8]
 8009142:	430a      	orrs	r2, r1
 8009144:	431a      	orrs	r2, r3
 8009146:	687b      	ldr	r3, [r7, #4]
 8009148:	605a      	str	r2, [r3, #4]
               ,
               ADC_InitStruct->Resolution
               | ADC_InitStruct->SequencersScanMode
              );

    MODIFY_REG(ADCx->CR2,
 800914a:	687b      	ldr	r3, [r7, #4]
 800914c:	689b      	ldr	r3, [r3, #8]
 800914e:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 8009152:	683b      	ldr	r3, [r7, #0]
 8009154:	685b      	ldr	r3, [r3, #4]
 8009156:	431a      	orrs	r2, r3
 8009158:	687b      	ldr	r3, [r7, #4]
 800915a:	609a      	str	r2, [r3, #8]
 800915c:	e001      	b.n	8009162 <LL_ADC_Init+0x4e>

  }
  else
  {
    /* Initialization error: ADC instance is not disabled. */
    status = ERROR;
 800915e:	2301      	movs	r3, #1
 8009160:	73fb      	strb	r3, [r7, #15]
  }
  return status;
 8009162:	7bfb      	ldrb	r3, [r7, #15]
}
 8009164:	4618      	mov	r0, r3
 8009166:	3710      	adds	r7, #16
 8009168:	46bd      	mov	sp, r7
 800916a:	bd80      	pop	{r7, pc}

0800916c <LL_ADC_REG_Init>:
  * @retval An ErrorStatus enumeration value:
  *          - SUCCESS: ADC registers are initialized
  *          - ERROR: ADC registers are not initialized
  */
ErrorStatus LL_ADC_REG_Init(ADC_TypeDef *ADCx, LL_ADC_REG_InitTypeDef *ADC_REG_InitStruct)
{
 800916c:	b580      	push	{r7, lr}
 800916e:	b084      	sub	sp, #16
 8009170:	af00      	add	r7, sp, #0
 8009172:	6078      	str	r0, [r7, #4]
 8009174:	6039      	str	r1, [r7, #0]
  ErrorStatus status = SUCCESS;
 8009176:	2300      	movs	r3, #0
 8009178:	73fb      	strb	r3, [r7, #15]
  assert_param((ADC_REG_InitStruct->ContinuousMode == LL_ADC_REG_CONV_SINGLE)
               || (ADC_REG_InitStruct->SequencerDiscont == LL_ADC_REG_SEQ_DISCONT_DISABLE));

  /* Note: Hardware constraint (refer to description of this function):       */
  /*       ADC instance must be disabled.                                     */
  if (LL_ADC_IsEnabled(ADCx) == 0UL)
 800917a:	6878      	ldr	r0, [r7, #4]
 800917c:	f7ff ff98 	bl	80090b0 <LL_ADC_IsEnabled>
 8009180:	4603      	mov	r3, r0
 8009182:	2b00      	cmp	r3, #0
 8009184:	d12b      	bne.n	80091de <LL_ADC_REG_Init+0x72>
    /*    - Set ADC group regular conversion data transfer: no transfer or    */
    /*      transfer by DMA, and DMA requests mode                            */
    /* Note: On this STM32 series, ADC trigger edge is set when starting      */
    /*       ADC conversion.                                                  */
    /*       Refer to function @ref LL_ADC_REG_StartConversionExtTrig().      */
    if (ADC_REG_InitStruct->SequencerLength != LL_ADC_REG_SEQ_SCAN_DISABLE)
 8009186:	683b      	ldr	r3, [r7, #0]
 8009188:	685b      	ldr	r3, [r3, #4]
 800918a:	2b00      	cmp	r3, #0
 800918c:	d009      	beq.n	80091a2 <LL_ADC_REG_Init+0x36>
    {
      MODIFY_REG(ADCx->CR1,
 800918e:	687b      	ldr	r3, [r7, #4]
 8009190:	685b      	ldr	r3, [r3, #4]
 8009192:	f423 4268 	bic.w	r2, r3, #59392	; 0xe800
 8009196:	683b      	ldr	r3, [r7, #0]
 8009198:	689b      	ldr	r3, [r3, #8]
 800919a:	431a      	orrs	r2, r3
 800919c:	687b      	ldr	r3, [r7, #4]
 800919e:	605a      	str	r2, [r3, #4]
 80091a0:	e005      	b.n	80091ae <LL_ADC_REG_Init+0x42>
                 ADC_REG_InitStruct->SequencerDiscont
                );
    }
    else
    {
      MODIFY_REG(ADCx->CR1,
 80091a2:	687b      	ldr	r3, [r7, #4]
 80091a4:	685b      	ldr	r3, [r3, #4]
 80091a6:	f423 4268 	bic.w	r2, r3, #59392	; 0xe800
 80091aa:	687b      	ldr	r3, [r7, #4]
 80091ac:	605a      	str	r2, [r3, #4]
                 ,
                 LL_ADC_REG_SEQ_DISCONT_DISABLE
                );
    }

    MODIFY_REG(ADCx->CR2,
 80091ae:	687b      	ldr	r3, [r7, #4]
 80091b0:	689a      	ldr	r2, [r3, #8]
 80091b2:	4b0e      	ldr	r3, [pc, #56]	; (80091ec <LL_ADC_REG_Init+0x80>)
 80091b4:	4013      	ands	r3, r2
 80091b6:	683a      	ldr	r2, [r7, #0]
 80091b8:	6812      	ldr	r2, [r2, #0]
 80091ba:	f002 6170 	and.w	r1, r2, #251658240	; 0xf000000
 80091be:	683a      	ldr	r2, [r7, #0]
 80091c0:	68d2      	ldr	r2, [r2, #12]
 80091c2:	4311      	orrs	r1, r2
 80091c4:	683a      	ldr	r2, [r7, #0]
 80091c6:	6912      	ldr	r2, [r2, #16]
 80091c8:	430a      	orrs	r2, r1
 80091ca:	431a      	orrs	r2, r3
 80091cc:	687b      	ldr	r3, [r7, #4]
 80091ce:	609a      	str	r2, [r3, #8]
    /* Note: If ADC instance feature scan mode is disabled                    */
    /*       (refer to  ADC instance initialization structure                 */
    /*       parameter @ref SequencersScanMode                                */
    /*       or function @ref LL_ADC_SetSequencersScanMode() ),               */
    /*       this parameter is discarded.                                     */
    LL_ADC_REG_SetSequencerLength(ADCx, ADC_REG_InitStruct->SequencerLength);
 80091d0:	683b      	ldr	r3, [r7, #0]
 80091d2:	685b      	ldr	r3, [r3, #4]
 80091d4:	4619      	mov	r1, r3
 80091d6:	6878      	ldr	r0, [r7, #4]
 80091d8:	f7ff ff57 	bl	800908a <LL_ADC_REG_SetSequencerLength>
 80091dc:	e001      	b.n	80091e2 <LL_ADC_REG_Init+0x76>
  }
  else
  {
    /* Initialization error: ADC instance is not disabled. */
    status = ERROR;
 80091de:	2301      	movs	r3, #1
 80091e0:	73fb      	strb	r3, [r7, #15]
  }
  return status;
 80091e2:	7bfb      	ldrb	r3, [r7, #15]
}
 80091e4:	4618      	mov	r0, r3
 80091e6:	3710      	adds	r7, #16
 80091e8:	46bd      	mov	sp, r7
 80091ea:	bd80      	pop	{r7, pc}
 80091ec:	c0fffcfd 	.word	0xc0fffcfd

080091f0 <LL_GPIO_SetPinMode>:
  *         @arg @ref LL_GPIO_MODE_ALTERNATE
  *         @arg @ref LL_GPIO_MODE_ANALOG
  * @retval None
  */
__STATIC_INLINE void LL_GPIO_SetPinMode(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Mode)
{
 80091f0:	b480      	push	{r7}
 80091f2:	b08b      	sub	sp, #44	; 0x2c
 80091f4:	af00      	add	r7, sp, #0
 80091f6:	60f8      	str	r0, [r7, #12]
 80091f8:	60b9      	str	r1, [r7, #8]
 80091fa:	607a      	str	r2, [r7, #4]
  MODIFY_REG(GPIOx->MODER, (GPIO_MODER_MODER0 << (POSITION_VAL(Pin) * 2U)), (Mode << (POSITION_VAL(Pin) * 2U)));
 80091fc:	68fb      	ldr	r3, [r7, #12]
 80091fe:	681a      	ldr	r2, [r3, #0]
 8009200:	68bb      	ldr	r3, [r7, #8]
 8009202:	617b      	str	r3, [r7, #20]
   __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8009204:	697b      	ldr	r3, [r7, #20]
 8009206:	fa93 f3a3 	rbit	r3, r3
 800920a:	613b      	str	r3, [r7, #16]
  return result;
 800920c:	693b      	ldr	r3, [r7, #16]
 800920e:	61bb      	str	r3, [r7, #24]
  if (value == 0U)
 8009210:	69bb      	ldr	r3, [r7, #24]
 8009212:	2b00      	cmp	r3, #0
 8009214:	d101      	bne.n	800921a <LL_GPIO_SetPinMode+0x2a>
    return 32U;
 8009216:	2320      	movs	r3, #32
 8009218:	e003      	b.n	8009222 <LL_GPIO_SetPinMode+0x32>
  return __builtin_clz(value);
 800921a:	69bb      	ldr	r3, [r7, #24]
 800921c:	fab3 f383 	clz	r3, r3
 8009220:	b2db      	uxtb	r3, r3
 8009222:	005b      	lsls	r3, r3, #1
 8009224:	2103      	movs	r1, #3
 8009226:	fa01 f303 	lsl.w	r3, r1, r3
 800922a:	43db      	mvns	r3, r3
 800922c:	401a      	ands	r2, r3
 800922e:	68bb      	ldr	r3, [r7, #8]
 8009230:	623b      	str	r3, [r7, #32]
   __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8009232:	6a3b      	ldr	r3, [r7, #32]
 8009234:	fa93 f3a3 	rbit	r3, r3
 8009238:	61fb      	str	r3, [r7, #28]
  return result;
 800923a:	69fb      	ldr	r3, [r7, #28]
 800923c:	627b      	str	r3, [r7, #36]	; 0x24
  if (value == 0U)
 800923e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009240:	2b00      	cmp	r3, #0
 8009242:	d101      	bne.n	8009248 <LL_GPIO_SetPinMode+0x58>
    return 32U;
 8009244:	2320      	movs	r3, #32
 8009246:	e003      	b.n	8009250 <LL_GPIO_SetPinMode+0x60>
  return __builtin_clz(value);
 8009248:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800924a:	fab3 f383 	clz	r3, r3
 800924e:	b2db      	uxtb	r3, r3
 8009250:	005b      	lsls	r3, r3, #1
 8009252:	6879      	ldr	r1, [r7, #4]
 8009254:	fa01 f303 	lsl.w	r3, r1, r3
 8009258:	431a      	orrs	r2, r3
 800925a:	68fb      	ldr	r3, [r7, #12]
 800925c:	601a      	str	r2, [r3, #0]
}
 800925e:	bf00      	nop
 8009260:	372c      	adds	r7, #44	; 0x2c
 8009262:	46bd      	mov	sp, r7
 8009264:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009268:	4770      	bx	lr

0800926a <LL_GPIO_SetPinOutputType>:
  *         @arg @ref LL_GPIO_OUTPUT_PUSHPULL
  *         @arg @ref LL_GPIO_OUTPUT_OPENDRAIN
  * @retval None
  */
__STATIC_INLINE void LL_GPIO_SetPinOutputType(GPIO_TypeDef *GPIOx, uint32_t PinMask, uint32_t OutputType)
{
 800926a:	b480      	push	{r7}
 800926c:	b085      	sub	sp, #20
 800926e:	af00      	add	r7, sp, #0
 8009270:	60f8      	str	r0, [r7, #12]
 8009272:	60b9      	str	r1, [r7, #8]
 8009274:	607a      	str	r2, [r7, #4]
  MODIFY_REG(GPIOx->OTYPER, PinMask, (PinMask * OutputType));
 8009276:	68fb      	ldr	r3, [r7, #12]
 8009278:	685a      	ldr	r2, [r3, #4]
 800927a:	68bb      	ldr	r3, [r7, #8]
 800927c:	43db      	mvns	r3, r3
 800927e:	401a      	ands	r2, r3
 8009280:	68bb      	ldr	r3, [r7, #8]
 8009282:	6879      	ldr	r1, [r7, #4]
 8009284:	fb01 f303 	mul.w	r3, r1, r3
 8009288:	431a      	orrs	r2, r3
 800928a:	68fb      	ldr	r3, [r7, #12]
 800928c:	605a      	str	r2, [r3, #4]
}
 800928e:	bf00      	nop
 8009290:	3714      	adds	r7, #20
 8009292:	46bd      	mov	sp, r7
 8009294:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009298:	4770      	bx	lr

0800929a <LL_GPIO_SetPinSpeed>:
  *         @arg @ref LL_GPIO_SPEED_FREQ_HIGH
  *         @arg @ref LL_GPIO_SPEED_FREQ_VERY_HIGH
  * @retval None
  */
__STATIC_INLINE void LL_GPIO_SetPinSpeed(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t  Speed)
{
 800929a:	b480      	push	{r7}
 800929c:	b08b      	sub	sp, #44	; 0x2c
 800929e:	af00      	add	r7, sp, #0
 80092a0:	60f8      	str	r0, [r7, #12]
 80092a2:	60b9      	str	r1, [r7, #8]
 80092a4:	607a      	str	r2, [r7, #4]
  MODIFY_REG(GPIOx->OSPEEDR, (GPIO_OSPEEDER_OSPEEDR0 << (POSITION_VAL(Pin) * 2U)),
 80092a6:	68fb      	ldr	r3, [r7, #12]
 80092a8:	689a      	ldr	r2, [r3, #8]
 80092aa:	68bb      	ldr	r3, [r7, #8]
 80092ac:	617b      	str	r3, [r7, #20]
   __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80092ae:	697b      	ldr	r3, [r7, #20]
 80092b0:	fa93 f3a3 	rbit	r3, r3
 80092b4:	613b      	str	r3, [r7, #16]
  return result;
 80092b6:	693b      	ldr	r3, [r7, #16]
 80092b8:	61bb      	str	r3, [r7, #24]
  if (value == 0U)
 80092ba:	69bb      	ldr	r3, [r7, #24]
 80092bc:	2b00      	cmp	r3, #0
 80092be:	d101      	bne.n	80092c4 <LL_GPIO_SetPinSpeed+0x2a>
    return 32U;
 80092c0:	2320      	movs	r3, #32
 80092c2:	e003      	b.n	80092cc <LL_GPIO_SetPinSpeed+0x32>
  return __builtin_clz(value);
 80092c4:	69bb      	ldr	r3, [r7, #24]
 80092c6:	fab3 f383 	clz	r3, r3
 80092ca:	b2db      	uxtb	r3, r3
 80092cc:	005b      	lsls	r3, r3, #1
 80092ce:	2103      	movs	r1, #3
 80092d0:	fa01 f303 	lsl.w	r3, r1, r3
 80092d4:	43db      	mvns	r3, r3
 80092d6:	401a      	ands	r2, r3
 80092d8:	68bb      	ldr	r3, [r7, #8]
 80092da:	623b      	str	r3, [r7, #32]
   __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80092dc:	6a3b      	ldr	r3, [r7, #32]
 80092de:	fa93 f3a3 	rbit	r3, r3
 80092e2:	61fb      	str	r3, [r7, #28]
  return result;
 80092e4:	69fb      	ldr	r3, [r7, #28]
 80092e6:	627b      	str	r3, [r7, #36]	; 0x24
  if (value == 0U)
 80092e8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80092ea:	2b00      	cmp	r3, #0
 80092ec:	d101      	bne.n	80092f2 <LL_GPIO_SetPinSpeed+0x58>
    return 32U;
 80092ee:	2320      	movs	r3, #32
 80092f0:	e003      	b.n	80092fa <LL_GPIO_SetPinSpeed+0x60>
  return __builtin_clz(value);
 80092f2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80092f4:	fab3 f383 	clz	r3, r3
 80092f8:	b2db      	uxtb	r3, r3
 80092fa:	005b      	lsls	r3, r3, #1
 80092fc:	6879      	ldr	r1, [r7, #4]
 80092fe:	fa01 f303 	lsl.w	r3, r1, r3
 8009302:	431a      	orrs	r2, r3
 8009304:	68fb      	ldr	r3, [r7, #12]
 8009306:	609a      	str	r2, [r3, #8]
             (Speed << (POSITION_VAL(Pin) * 2U)));
}
 8009308:	bf00      	nop
 800930a:	372c      	adds	r7, #44	; 0x2c
 800930c:	46bd      	mov	sp, r7
 800930e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009312:	4770      	bx	lr

08009314 <LL_GPIO_SetPinPull>:
  *         @arg @ref LL_GPIO_PULL_UP
  *         @arg @ref LL_GPIO_PULL_DOWN
  * @retval None
  */
__STATIC_INLINE void LL_GPIO_SetPinPull(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Pull)
{
 8009314:	b480      	push	{r7}
 8009316:	b08b      	sub	sp, #44	; 0x2c
 8009318:	af00      	add	r7, sp, #0
 800931a:	60f8      	str	r0, [r7, #12]
 800931c:	60b9      	str	r1, [r7, #8]
 800931e:	607a      	str	r2, [r7, #4]
  MODIFY_REG(GPIOx->PUPDR, (GPIO_PUPDR_PUPDR0 << (POSITION_VAL(Pin) * 2U)), (Pull << (POSITION_VAL(Pin) * 2U)));
 8009320:	68fb      	ldr	r3, [r7, #12]
 8009322:	68da      	ldr	r2, [r3, #12]
 8009324:	68bb      	ldr	r3, [r7, #8]
 8009326:	617b      	str	r3, [r7, #20]
   __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8009328:	697b      	ldr	r3, [r7, #20]
 800932a:	fa93 f3a3 	rbit	r3, r3
 800932e:	613b      	str	r3, [r7, #16]
  return result;
 8009330:	693b      	ldr	r3, [r7, #16]
 8009332:	61bb      	str	r3, [r7, #24]
  if (value == 0U)
 8009334:	69bb      	ldr	r3, [r7, #24]
 8009336:	2b00      	cmp	r3, #0
 8009338:	d101      	bne.n	800933e <LL_GPIO_SetPinPull+0x2a>
    return 32U;
 800933a:	2320      	movs	r3, #32
 800933c:	e003      	b.n	8009346 <LL_GPIO_SetPinPull+0x32>
  return __builtin_clz(value);
 800933e:	69bb      	ldr	r3, [r7, #24]
 8009340:	fab3 f383 	clz	r3, r3
 8009344:	b2db      	uxtb	r3, r3
 8009346:	005b      	lsls	r3, r3, #1
 8009348:	2103      	movs	r1, #3
 800934a:	fa01 f303 	lsl.w	r3, r1, r3
 800934e:	43db      	mvns	r3, r3
 8009350:	401a      	ands	r2, r3
 8009352:	68bb      	ldr	r3, [r7, #8]
 8009354:	623b      	str	r3, [r7, #32]
   __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8009356:	6a3b      	ldr	r3, [r7, #32]
 8009358:	fa93 f3a3 	rbit	r3, r3
 800935c:	61fb      	str	r3, [r7, #28]
  return result;
 800935e:	69fb      	ldr	r3, [r7, #28]
 8009360:	627b      	str	r3, [r7, #36]	; 0x24
  if (value == 0U)
 8009362:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009364:	2b00      	cmp	r3, #0
 8009366:	d101      	bne.n	800936c <LL_GPIO_SetPinPull+0x58>
    return 32U;
 8009368:	2320      	movs	r3, #32
 800936a:	e003      	b.n	8009374 <LL_GPIO_SetPinPull+0x60>
  return __builtin_clz(value);
 800936c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800936e:	fab3 f383 	clz	r3, r3
 8009372:	b2db      	uxtb	r3, r3
 8009374:	005b      	lsls	r3, r3, #1
 8009376:	6879      	ldr	r1, [r7, #4]
 8009378:	fa01 f303 	lsl.w	r3, r1, r3
 800937c:	431a      	orrs	r2, r3
 800937e:	68fb      	ldr	r3, [r7, #12]
 8009380:	60da      	str	r2, [r3, #12]
}
 8009382:	bf00      	nop
 8009384:	372c      	adds	r7, #44	; 0x2c
 8009386:	46bd      	mov	sp, r7
 8009388:	f85d 7b04 	ldr.w	r7, [sp], #4
 800938c:	4770      	bx	lr

0800938e <LL_GPIO_SetAFPin_0_7>:
  *         @arg @ref LL_GPIO_AF_14
  *         @arg @ref LL_GPIO_AF_15
  * @retval None
  */
__STATIC_INLINE void LL_GPIO_SetAFPin_0_7(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Alternate)
{
 800938e:	b480      	push	{r7}
 8009390:	b08b      	sub	sp, #44	; 0x2c
 8009392:	af00      	add	r7, sp, #0
 8009394:	60f8      	str	r0, [r7, #12]
 8009396:	60b9      	str	r1, [r7, #8]
 8009398:	607a      	str	r2, [r7, #4]
  MODIFY_REG(GPIOx->AFR[0], (GPIO_AFRL_AFSEL0 << (POSITION_VAL(Pin) * 4U)),
 800939a:	68fb      	ldr	r3, [r7, #12]
 800939c:	6a1a      	ldr	r2, [r3, #32]
 800939e:	68bb      	ldr	r3, [r7, #8]
 80093a0:	617b      	str	r3, [r7, #20]
   __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80093a2:	697b      	ldr	r3, [r7, #20]
 80093a4:	fa93 f3a3 	rbit	r3, r3
 80093a8:	613b      	str	r3, [r7, #16]
  return result;
 80093aa:	693b      	ldr	r3, [r7, #16]
 80093ac:	61bb      	str	r3, [r7, #24]
  if (value == 0U)
 80093ae:	69bb      	ldr	r3, [r7, #24]
 80093b0:	2b00      	cmp	r3, #0
 80093b2:	d101      	bne.n	80093b8 <LL_GPIO_SetAFPin_0_7+0x2a>
    return 32U;
 80093b4:	2320      	movs	r3, #32
 80093b6:	e003      	b.n	80093c0 <LL_GPIO_SetAFPin_0_7+0x32>
  return __builtin_clz(value);
 80093b8:	69bb      	ldr	r3, [r7, #24]
 80093ba:	fab3 f383 	clz	r3, r3
 80093be:	b2db      	uxtb	r3, r3
 80093c0:	009b      	lsls	r3, r3, #2
 80093c2:	210f      	movs	r1, #15
 80093c4:	fa01 f303 	lsl.w	r3, r1, r3
 80093c8:	43db      	mvns	r3, r3
 80093ca:	401a      	ands	r2, r3
 80093cc:	68bb      	ldr	r3, [r7, #8]
 80093ce:	623b      	str	r3, [r7, #32]
   __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80093d0:	6a3b      	ldr	r3, [r7, #32]
 80093d2:	fa93 f3a3 	rbit	r3, r3
 80093d6:	61fb      	str	r3, [r7, #28]
  return result;
 80093d8:	69fb      	ldr	r3, [r7, #28]
 80093da:	627b      	str	r3, [r7, #36]	; 0x24
  if (value == 0U)
 80093dc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80093de:	2b00      	cmp	r3, #0
 80093e0:	d101      	bne.n	80093e6 <LL_GPIO_SetAFPin_0_7+0x58>
    return 32U;
 80093e2:	2320      	movs	r3, #32
 80093e4:	e003      	b.n	80093ee <LL_GPIO_SetAFPin_0_7+0x60>
  return __builtin_clz(value);
 80093e6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80093e8:	fab3 f383 	clz	r3, r3
 80093ec:	b2db      	uxtb	r3, r3
 80093ee:	009b      	lsls	r3, r3, #2
 80093f0:	6879      	ldr	r1, [r7, #4]
 80093f2:	fa01 f303 	lsl.w	r3, r1, r3
 80093f6:	431a      	orrs	r2, r3
 80093f8:	68fb      	ldr	r3, [r7, #12]
 80093fa:	621a      	str	r2, [r3, #32]
             (Alternate << (POSITION_VAL(Pin) * 4U)));
}
 80093fc:	bf00      	nop
 80093fe:	372c      	adds	r7, #44	; 0x2c
 8009400:	46bd      	mov	sp, r7
 8009402:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009406:	4770      	bx	lr

08009408 <LL_GPIO_SetAFPin_8_15>:
  *         @arg @ref LL_GPIO_AF_14
  *         @arg @ref LL_GPIO_AF_15
  * @retval None
  */
__STATIC_INLINE void LL_GPIO_SetAFPin_8_15(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Alternate)
{
 8009408:	b480      	push	{r7}
 800940a:	b08b      	sub	sp, #44	; 0x2c
 800940c:	af00      	add	r7, sp, #0
 800940e:	60f8      	str	r0, [r7, #12]
 8009410:	60b9      	str	r1, [r7, #8]
 8009412:	607a      	str	r2, [r7, #4]
  MODIFY_REG(GPIOx->AFR[1], (GPIO_AFRH_AFSEL8 << (POSITION_VAL(Pin >> 8U) * 4U)),
 8009414:	68fb      	ldr	r3, [r7, #12]
 8009416:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8009418:	68bb      	ldr	r3, [r7, #8]
 800941a:	0a1b      	lsrs	r3, r3, #8
 800941c:	617b      	str	r3, [r7, #20]
   __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800941e:	697b      	ldr	r3, [r7, #20]
 8009420:	fa93 f3a3 	rbit	r3, r3
 8009424:	613b      	str	r3, [r7, #16]
  return result;
 8009426:	693b      	ldr	r3, [r7, #16]
 8009428:	61bb      	str	r3, [r7, #24]
  if (value == 0U)
 800942a:	69bb      	ldr	r3, [r7, #24]
 800942c:	2b00      	cmp	r3, #0
 800942e:	d101      	bne.n	8009434 <LL_GPIO_SetAFPin_8_15+0x2c>
    return 32U;
 8009430:	2320      	movs	r3, #32
 8009432:	e003      	b.n	800943c <LL_GPIO_SetAFPin_8_15+0x34>
  return __builtin_clz(value);
 8009434:	69bb      	ldr	r3, [r7, #24]
 8009436:	fab3 f383 	clz	r3, r3
 800943a:	b2db      	uxtb	r3, r3
 800943c:	009b      	lsls	r3, r3, #2
 800943e:	210f      	movs	r1, #15
 8009440:	fa01 f303 	lsl.w	r3, r1, r3
 8009444:	43db      	mvns	r3, r3
 8009446:	401a      	ands	r2, r3
 8009448:	68bb      	ldr	r3, [r7, #8]
 800944a:	0a1b      	lsrs	r3, r3, #8
 800944c:	623b      	str	r3, [r7, #32]
   __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800944e:	6a3b      	ldr	r3, [r7, #32]
 8009450:	fa93 f3a3 	rbit	r3, r3
 8009454:	61fb      	str	r3, [r7, #28]
  return result;
 8009456:	69fb      	ldr	r3, [r7, #28]
 8009458:	627b      	str	r3, [r7, #36]	; 0x24
  if (value == 0U)
 800945a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800945c:	2b00      	cmp	r3, #0
 800945e:	d101      	bne.n	8009464 <LL_GPIO_SetAFPin_8_15+0x5c>
    return 32U;
 8009460:	2320      	movs	r3, #32
 8009462:	e003      	b.n	800946c <LL_GPIO_SetAFPin_8_15+0x64>
  return __builtin_clz(value);
 8009464:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009466:	fab3 f383 	clz	r3, r3
 800946a:	b2db      	uxtb	r3, r3
 800946c:	009b      	lsls	r3, r3, #2
 800946e:	6879      	ldr	r1, [r7, #4]
 8009470:	fa01 f303 	lsl.w	r3, r1, r3
 8009474:	431a      	orrs	r2, r3
 8009476:	68fb      	ldr	r3, [r7, #12]
 8009478:	625a      	str	r2, [r3, #36]	; 0x24
             (Alternate << (POSITION_VAL(Pin >> 8U) * 4U)));
}
 800947a:	bf00      	nop
 800947c:	372c      	adds	r7, #44	; 0x2c
 800947e:	46bd      	mov	sp, r7
 8009480:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009484:	4770      	bx	lr

08009486 <LL_GPIO_Init>:
  * @retval An ErrorStatus enumeration value:
  *          - SUCCESS: GPIO registers are initialized according to GPIO_InitStruct content
  *          - ERROR:   Not applicable
  */
ErrorStatus LL_GPIO_Init(GPIO_TypeDef *GPIOx, LL_GPIO_InitTypeDef *GPIO_InitStruct)
{
 8009486:	b580      	push	{r7, lr}
 8009488:	b08a      	sub	sp, #40	; 0x28
 800948a:	af00      	add	r7, sp, #0
 800948c:	6078      	str	r0, [r7, #4]
 800948e:	6039      	str	r1, [r7, #0]
  uint32_t pinpos     = 0x00000000U;
 8009490:	2300      	movs	r3, #0
 8009492:	627b      	str	r3, [r7, #36]	; 0x24
  uint32_t currentpin = 0x00000000U;
 8009494:	2300      	movs	r3, #0
 8009496:	623b      	str	r3, [r7, #32]
  assert_param(IS_LL_GPIO_MODE(GPIO_InitStruct->Mode));
  assert_param(IS_LL_GPIO_PULL(GPIO_InitStruct->Pull));

  /* ------------------------- Configure the port pins ---------------- */
  /* Initialize  pinpos on first pin set */
  pinpos = POSITION_VAL(GPIO_InitStruct->Pin);
 8009498:	683b      	ldr	r3, [r7, #0]
 800949a:	681b      	ldr	r3, [r3, #0]
 800949c:	61bb      	str	r3, [r7, #24]
   __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800949e:	69bb      	ldr	r3, [r7, #24]
 80094a0:	fa93 f3a3 	rbit	r3, r3
 80094a4:	617b      	str	r3, [r7, #20]
  return result;
 80094a6:	697b      	ldr	r3, [r7, #20]
 80094a8:	61fb      	str	r3, [r7, #28]
  if (value == 0U)
 80094aa:	69fb      	ldr	r3, [r7, #28]
 80094ac:	2b00      	cmp	r3, #0
 80094ae:	d101      	bne.n	80094b4 <LL_GPIO_Init+0x2e>
    return 32U;
 80094b0:	2320      	movs	r3, #32
 80094b2:	e003      	b.n	80094bc <LL_GPIO_Init+0x36>
  return __builtin_clz(value);
 80094b4:	69fb      	ldr	r3, [r7, #28]
 80094b6:	fab3 f383 	clz	r3, r3
 80094ba:	b2db      	uxtb	r3, r3
 80094bc:	627b      	str	r3, [r7, #36]	; 0x24
  
  /* Configure the port pins */
  while (((GPIO_InitStruct->Pin) >> pinpos) != 0x00000000U)
 80094be:	e057      	b.n	8009570 <LL_GPIO_Init+0xea>
  {
    /* Get current io position */
    currentpin = (GPIO_InitStruct->Pin) & (0x00000001U << pinpos);
 80094c0:	683b      	ldr	r3, [r7, #0]
 80094c2:	681a      	ldr	r2, [r3, #0]
 80094c4:	2101      	movs	r1, #1
 80094c6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80094c8:	fa01 f303 	lsl.w	r3, r1, r3
 80094cc:	4013      	ands	r3, r2
 80094ce:	623b      	str	r3, [r7, #32]
    
    if (currentpin)
 80094d0:	6a3b      	ldr	r3, [r7, #32]
 80094d2:	2b00      	cmp	r3, #0
 80094d4:	d049      	beq.n	800956a <LL_GPIO_Init+0xe4>
    {
      
      if ((GPIO_InitStruct->Mode == LL_GPIO_MODE_OUTPUT) || (GPIO_InitStruct->Mode == LL_GPIO_MODE_ALTERNATE))
 80094d6:	683b      	ldr	r3, [r7, #0]
 80094d8:	685b      	ldr	r3, [r3, #4]
 80094da:	2b01      	cmp	r3, #1
 80094dc:	d003      	beq.n	80094e6 <LL_GPIO_Init+0x60>
 80094de:	683b      	ldr	r3, [r7, #0]
 80094e0:	685b      	ldr	r3, [r3, #4]
 80094e2:	2b02      	cmp	r3, #2
 80094e4:	d10d      	bne.n	8009502 <LL_GPIO_Init+0x7c>
      {
        /* Check Speed mode parameters */
        assert_param(IS_LL_GPIO_SPEED(GPIO_InitStruct->Speed));
        
        /* Speed mode configuration */
        LL_GPIO_SetPinSpeed(GPIOx, currentpin, GPIO_InitStruct->Speed);
 80094e6:	683b      	ldr	r3, [r7, #0]
 80094e8:	689b      	ldr	r3, [r3, #8]
 80094ea:	461a      	mov	r2, r3
 80094ec:	6a39      	ldr	r1, [r7, #32]
 80094ee:	6878      	ldr	r0, [r7, #4]
 80094f0:	f7ff fed3 	bl	800929a <LL_GPIO_SetPinSpeed>
        
        /* Check Output mode parameters */
        assert_param(IS_LL_GPIO_OUTPUT_TYPE(GPIO_InitStruct->OutputType));
        
        /* Output mode configuration*/
        LL_GPIO_SetPinOutputType(GPIOx, currentpin, GPIO_InitStruct->OutputType);
 80094f4:	683b      	ldr	r3, [r7, #0]
 80094f6:	68db      	ldr	r3, [r3, #12]
 80094f8:	461a      	mov	r2, r3
 80094fa:	6a39      	ldr	r1, [r7, #32]
 80094fc:	6878      	ldr	r0, [r7, #4]
 80094fe:	f7ff feb4 	bl	800926a <LL_GPIO_SetPinOutputType>
      }
      
      /* Pull-up Pull down resistor configuration*/
      LL_GPIO_SetPinPull(GPIOx, currentpin, GPIO_InitStruct->Pull);
 8009502:	683b      	ldr	r3, [r7, #0]
 8009504:	691b      	ldr	r3, [r3, #16]
 8009506:	461a      	mov	r2, r3
 8009508:	6a39      	ldr	r1, [r7, #32]
 800950a:	6878      	ldr	r0, [r7, #4]
 800950c:	f7ff ff02 	bl	8009314 <LL_GPIO_SetPinPull>
      
      if (GPIO_InitStruct->Mode == LL_GPIO_MODE_ALTERNATE)
 8009510:	683b      	ldr	r3, [r7, #0]
 8009512:	685b      	ldr	r3, [r3, #4]
 8009514:	2b02      	cmp	r3, #2
 8009516:	d121      	bne.n	800955c <LL_GPIO_Init+0xd6>
 8009518:	6a3b      	ldr	r3, [r7, #32]
 800951a:	60fb      	str	r3, [r7, #12]
   __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800951c:	68fb      	ldr	r3, [r7, #12]
 800951e:	fa93 f3a3 	rbit	r3, r3
 8009522:	60bb      	str	r3, [r7, #8]
  return result;
 8009524:	68bb      	ldr	r3, [r7, #8]
 8009526:	613b      	str	r3, [r7, #16]
  if (value == 0U)
 8009528:	693b      	ldr	r3, [r7, #16]
 800952a:	2b00      	cmp	r3, #0
 800952c:	d101      	bne.n	8009532 <LL_GPIO_Init+0xac>
    return 32U;
 800952e:	2320      	movs	r3, #32
 8009530:	e003      	b.n	800953a <LL_GPIO_Init+0xb4>
  return __builtin_clz(value);
 8009532:	693b      	ldr	r3, [r7, #16]
 8009534:	fab3 f383 	clz	r3, r3
 8009538:	b2db      	uxtb	r3, r3
      {
        /* Check Alternate parameter */
        assert_param(IS_LL_GPIO_ALTERNATE(GPIO_InitStruct->Alternate));
        
        /* Speed mode configuration */
        if (POSITION_VAL(currentpin) < 0x00000008U)
 800953a:	2b07      	cmp	r3, #7
 800953c:	d807      	bhi.n	800954e <LL_GPIO_Init+0xc8>
        {
          LL_GPIO_SetAFPin_0_7(GPIOx, currentpin, GPIO_InitStruct->Alternate);
 800953e:	683b      	ldr	r3, [r7, #0]
 8009540:	695b      	ldr	r3, [r3, #20]
 8009542:	461a      	mov	r2, r3
 8009544:	6a39      	ldr	r1, [r7, #32]
 8009546:	6878      	ldr	r0, [r7, #4]
 8009548:	f7ff ff21 	bl	800938e <LL_GPIO_SetAFPin_0_7>
 800954c:	e006      	b.n	800955c <LL_GPIO_Init+0xd6>
        }
        else
        {
          LL_GPIO_SetAFPin_8_15(GPIOx, currentpin, GPIO_InitStruct->Alternate);
 800954e:	683b      	ldr	r3, [r7, #0]
 8009550:	695b      	ldr	r3, [r3, #20]
 8009552:	461a      	mov	r2, r3
 8009554:	6a39      	ldr	r1, [r7, #32]
 8009556:	6878      	ldr	r0, [r7, #4]
 8009558:	f7ff ff56 	bl	8009408 <LL_GPIO_SetAFPin_8_15>
        }
      }
      
      /* Pin Mode configuration */
      LL_GPIO_SetPinMode(GPIOx, currentpin, GPIO_InitStruct->Mode);
 800955c:	683b      	ldr	r3, [r7, #0]
 800955e:	685b      	ldr	r3, [r3, #4]
 8009560:	461a      	mov	r2, r3
 8009562:	6a39      	ldr	r1, [r7, #32]
 8009564:	6878      	ldr	r0, [r7, #4]
 8009566:	f7ff fe43 	bl	80091f0 <LL_GPIO_SetPinMode>
    }
    pinpos++;
 800956a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800956c:	3301      	adds	r3, #1
 800956e:	627b      	str	r3, [r7, #36]	; 0x24
  while (((GPIO_InitStruct->Pin) >> pinpos) != 0x00000000U)
 8009570:	683b      	ldr	r3, [r7, #0]
 8009572:	681a      	ldr	r2, [r3, #0]
 8009574:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009576:	fa22 f303 	lsr.w	r3, r2, r3
 800957a:	2b00      	cmp	r3, #0
 800957c:	d1a0      	bne.n	80094c0 <LL_GPIO_Init+0x3a>
  }

  return (SUCCESS);
 800957e:	2300      	movs	r3, #0
}
 8009580:	4618      	mov	r0, r3
 8009582:	3728      	adds	r7, #40	; 0x28
 8009584:	46bd      	mov	sp, r7
 8009586:	bd80      	pop	{r7, pc}

08009588 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8009588:	b580      	push	{r7, lr}
 800958a:	af00      	add	r7, sp, #0
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 800958c:	f008 fb4c 	bl	8011c28 <touchgfx_components_init>
  touchgfx_init();
 8009590:	f008 fb20 	bl	8011bd4 <touchgfx_init>
}
 8009594:	bf00      	nop
 8009596:	bd80      	pop	{r7, pc}

08009598 <MX_TouchGFX_Process>:

/**
 * TouchGFX application entry function
 */
void MX_TouchGFX_Process(void)
{
 8009598:	b580      	push	{r7, lr}
 800959a:	af00      	add	r7, sp, #0
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 800959c:	f008 fb4c 	bl	8011c38 <touchgfx_taskEntry>
}
 80095a0:	bf00      	nop
 80095a2:	bd80      	pop	{r7, pc}

080095a4 <_ZN8touchgfx12FontProviderD1Ev>:
     * @return The font with a font id of fontId.
     */
    virtual Font* getFont(FontId fontId) = 0;

    /** Finalizes an instance of the FontProvider class. */
    virtual ~FontProvider()
 80095a4:	b480      	push	{r7}
 80095a6:	b083      	sub	sp, #12
 80095a8:	af00      	add	r7, sp, #0
 80095aa:	6078      	str	r0, [r7, #4]
    {
 80095ac:	4a04      	ldr	r2, [pc, #16]	; (80095c0 <_ZN8touchgfx12FontProviderD1Ev+0x1c>)
 80095ae:	687b      	ldr	r3, [r7, #4]
 80095b0:	601a      	str	r2, [r3, #0]
    }
 80095b2:	687b      	ldr	r3, [r7, #4]
 80095b4:	4618      	mov	r0, r3
 80095b6:	370c      	adds	r7, #12
 80095b8:	46bd      	mov	sp, r7
 80095ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80095be:	4770      	bx	lr
 80095c0:	0802ddfc 	.word	0x0802ddfc

080095c4 <_ZN8touchgfx12FontProviderD0Ev>:
    virtual ~FontProvider()
 80095c4:	b580      	push	{r7, lr}
 80095c6:	b082      	sub	sp, #8
 80095c8:	af00      	add	r7, sp, #0
 80095ca:	6078      	str	r0, [r7, #4]
    }
 80095cc:	6878      	ldr	r0, [r7, #4]
 80095ce:	f7ff ffe9 	bl	80095a4 <_ZN8touchgfx12FontProviderD1Ev>
 80095d2:	2104      	movs	r1, #4
 80095d4:	6878      	ldr	r0, [r7, #4]
 80095d6:	f021 f8c4 	bl	802a762 <_ZdlPvj>
 80095da:	687b      	ldr	r3, [r7, #4]
 80095dc:	4618      	mov	r0, r3
 80095de:	3708      	adds	r7, #8
 80095e0:	46bd      	mov	sp, r7
 80095e2:	bd80      	pop	{r7, pc}

080095e4 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 80095e4:	b580      	push	{r7, lr}
 80095e6:	b082      	sub	sp, #8
 80095e8:	af00      	add	r7, sp, #0
 80095ea:	6078      	str	r0, [r7, #4]
 80095ec:	460b      	mov	r3, r1
 80095ee:	807b      	strh	r3, [r7, #2]
    switch (typography)
 80095f0:	887b      	ldrh	r3, [r7, #2]
 80095f2:	2b02      	cmp	r3, #2
 80095f4:	d010      	beq.n	8009618 <_ZN23ApplicationFontProvider7getFontEt+0x34>
 80095f6:	2b02      	cmp	r3, #2
 80095f8:	dc13      	bgt.n	8009622 <_ZN23ApplicationFontProvider7getFontEt+0x3e>
 80095fa:	2b00      	cmp	r3, #0
 80095fc:	d002      	beq.n	8009604 <_ZN23ApplicationFontProvider7getFontEt+0x20>
 80095fe:	2b01      	cmp	r3, #1
 8009600:	d005      	beq.n	800960e <_ZN23ApplicationFontProvider7getFontEt+0x2a>
 8009602:	e00e      	b.n	8009622 <_ZN23ApplicationFontProvider7getFontEt+0x3e>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8009604:	f006 fd52 	bl	80100ac <_ZN17TypedTextDatabase8getFontsEv>
 8009608:	4603      	mov	r3, r0
 800960a:	681b      	ldr	r3, [r3, #0]
 800960c:	e00a      	b.n	8009624 <_ZN23ApplicationFontProvider7getFontEt+0x40>
    case Typography::LARGE:
        // verdana_40_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 800960e:	f006 fd4d 	bl	80100ac <_ZN17TypedTextDatabase8getFontsEv>
 8009612:	4603      	mov	r3, r0
 8009614:	685b      	ldr	r3, [r3, #4]
 8009616:	e005      	b.n	8009624 <_ZN23ApplicationFontProvider7getFontEt+0x40>
    case Typography::SMALL:
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8009618:	f006 fd48 	bl	80100ac <_ZN17TypedTextDatabase8getFontsEv>
 800961c:	4603      	mov	r3, r0
 800961e:	689b      	ldr	r3, [r3, #8]
 8009620:	e000      	b.n	8009624 <_ZN23ApplicationFontProvider7getFontEt+0x40>
    default:
        return 0;
 8009622:	2300      	movs	r3, #0
    }
}
 8009624:	4618      	mov	r0, r3
 8009626:	3708      	adds	r7, #8
 8009628:	46bd      	mov	sp, r7
 800962a:	bd80      	pop	{r7, pc}

0800962c <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 800962c:	b580      	push	{r7, lr}
 800962e:	b082      	sub	sp, #8
 8009630:	af00      	add	r7, sp, #0
 8009632:	6078      	str	r0, [r7, #4]
 8009634:	4a05      	ldr	r2, [pc, #20]	; (800964c <_ZN23ApplicationFontProviderD1Ev+0x20>)
 8009636:	687b      	ldr	r3, [r7, #4]
 8009638:	601a      	str	r2, [r3, #0]
 800963a:	687b      	ldr	r3, [r7, #4]
 800963c:	4618      	mov	r0, r3
 800963e:	f7ff ffb1 	bl	80095a4 <_ZN8touchgfx12FontProviderD1Ev>
 8009642:	687b      	ldr	r3, [r7, #4]
 8009644:	4618      	mov	r0, r3
 8009646:	3708      	adds	r7, #8
 8009648:	46bd      	mov	sp, r7
 800964a:	bd80      	pop	{r7, pc}
 800964c:	0802dde8 	.word	0x0802dde8

08009650 <_ZN23ApplicationFontProviderD0Ev>:
 8009650:	b580      	push	{r7, lr}
 8009652:	b082      	sub	sp, #8
 8009654:	af00      	add	r7, sp, #0
 8009656:	6078      	str	r0, [r7, #4]
 8009658:	6878      	ldr	r0, [r7, #4]
 800965a:	f7ff ffe7 	bl	800962c <_ZN23ApplicationFontProviderD1Ev>
 800965e:	2104      	movs	r1, #4
 8009660:	6878      	ldr	r0, [r7, #4]
 8009662:	f021 f87e 	bl	802a762 <_ZdlPvj>
 8009666:	687b      	ldr	r3, [r7, #4]
 8009668:	4618      	mov	r0, r3
 800966a:	3708      	adds	r7, #8
 800966c:	46bd      	mov	sp, r7
 800966e:	bd80      	pop	{r7, pc}

08009670 <_ZN8touchgfx4FontD1Ev>:
 */
class Font
{
public:
    /** Finalizes an instance of the Font class. */
    virtual ~Font()
 8009670:	b480      	push	{r7}
 8009672:	b083      	sub	sp, #12
 8009674:	af00      	add	r7, sp, #0
 8009676:	6078      	str	r0, [r7, #4]
    {
 8009678:	4a04      	ldr	r2, [pc, #16]	; (800968c <_ZN8touchgfx4FontD1Ev+0x1c>)
 800967a:	687b      	ldr	r3, [r7, #4]
 800967c:	601a      	str	r2, [r3, #0]
    }
 800967e:	687b      	ldr	r3, [r7, #4]
 8009680:	4618      	mov	r0, r3
 8009682:	370c      	adds	r7, #12
 8009684:	46bd      	mov	sp, r7
 8009686:	f85d 7b04 	ldr.w	r7, [sp], #4
 800968a:	4770      	bx	lr
 800968c:	0802e5f0 	.word	0x0802e5f0

08009690 <_ZN8touchgfx4FontD0Ev>:
    virtual ~Font()
 8009690:	b580      	push	{r7, lr}
 8009692:	b082      	sub	sp, #8
 8009694:	af00      	add	r7, sp, #0
 8009696:	6078      	str	r0, [r7, #4]
    }
 8009698:	6878      	ldr	r0, [r7, #4]
 800969a:	f7ff ffe9 	bl	8009670 <_ZN8touchgfx4FontD1Ev>
 800969e:	2114      	movs	r1, #20
 80096a0:	6878      	ldr	r0, [r7, #4]
 80096a2:	f021 f85e 	bl	802a762 <_ZdlPvj>
 80096a6:	687b      	ldr	r3, [r7, #4]
 80096a8:	4618      	mov	r0, r3
 80096aa:	3708      	adds	r7, #8
 80096ac:	46bd      	mov	sp, r7
 80096ae:	bd80      	pop	{r7, pc}

080096b0 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 80096b0:	b590      	push	{r4, r7, lr}
 80096b2:	b087      	sub	sp, #28
 80096b4:	af00      	add	r7, sp, #0
 80096b6:	6078      	str	r0, [r7, #4]
 80096b8:	460b      	mov	r3, r1
 80096ba:	807b      	strh	r3, [r7, #2]
    {
        if (unicode == 0)
 80096bc:	887b      	ldrh	r3, [r7, #2]
 80096be:	2b00      	cmp	r3, #0
 80096c0:	d101      	bne.n	80096c6 <_ZNK8touchgfx4Font8getGlyphEt+0x16>
        {
            return 0;
 80096c2:	2300      	movs	r3, #0
 80096c4:	e010      	b.n	80096e8 <_ZNK8touchgfx4Font8getGlyphEt+0x38>
        }
        const uint8_t* dummyPixelDataPointer = 0;
 80096c6:	2300      	movs	r3, #0
 80096c8:	613b      	str	r3, [r7, #16]
        uint8_t bitsPerPixelDummy = 0;
 80096ca:	2300      	movs	r3, #0
 80096cc:	73fb      	strb	r3, [r7, #15]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80096ce:	687b      	ldr	r3, [r7, #4]
 80096d0:	681b      	ldr	r3, [r3, #0]
 80096d2:	3308      	adds	r3, #8
 80096d4:	681c      	ldr	r4, [r3, #0]
 80096d6:	f107 030f 	add.w	r3, r7, #15
 80096da:	f107 0210 	add.w	r2, r7, #16
 80096de:	8879      	ldrh	r1, [r7, #2]
 80096e0:	6878      	ldr	r0, [r7, #4]
 80096e2:	47a0      	blx	r4
 80096e4:	6178      	str	r0, [r7, #20]
        return glyph;
 80096e6:	697b      	ldr	r3, [r7, #20]
    }
 80096e8:	4618      	mov	r0, r3
 80096ea:	371c      	adds	r7, #28
 80096ec:	46bd      	mov	sp, r7
 80096ee:	bd90      	pop	{r4, r7, pc}

080096f0 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * used when no glyph is available for some character. If 0 (zero) is returned, there is
     * no default character.
     *
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
 80096f0:	b480      	push	{r7}
 80096f2:	b083      	sub	sp, #12
 80096f4:	af00      	add	r7, sp, #0
 80096f6:	6078      	str	r0, [r7, #4]
    {
        return fallbackCharacter;
 80096f8:	687b      	ldr	r3, [r7, #4]
 80096fa:	89db      	ldrh	r3, [r3, #14]
    }
 80096fc:	4618      	mov	r0, r3
 80096fe:	370c      	adds	r7, #12
 8009700:	46bd      	mov	sp, r7
 8009702:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009706:	4770      	bx	lr

08009708 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     *
     * @return The ellipsis character for the typography.
     *
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
 8009708:	b480      	push	{r7}
 800970a:	b083      	sub	sp, #12
 800970c:	af00      	add	r7, sp, #0
 800970e:	6078      	str	r0, [r7, #4]
    {
        return ellipsisCharacter;
 8009710:	687b      	ldr	r3, [r7, #4]
 8009712:	8a1b      	ldrh	r3, [r3, #16]
    }
 8009714:	4618      	mov	r0, r3
 8009716:	370c      	adds	r7, #12
 8009718:	46bd      	mov	sp, r7
 800971a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800971e:	4770      	bx	lr

08009720 <_ZNK8touchgfx4Font11getBaselineEv>:
     * @return The baseline position.
     *
     * @note It is not sufficient to allocate text areas with this height. Use
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
 8009720:	b480      	push	{r7}
 8009722:	b083      	sub	sp, #12
 8009724:	af00      	add	r7, sp, #0
 8009726:	6078      	str	r0, [r7, #4]
    {
        return baselineHeight;
 8009728:	687b      	ldr	r3, [r7, #4]
 800972a:	88db      	ldrh	r3, [r3, #6]
    }
 800972c:	4618      	mov	r0, r3
 800972e:	370c      	adds	r7, #12
 8009730:	46bd      	mov	sp, r7
 8009732:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009736:	4770      	bx	lr

08009738 <_ZNK8touchgfx4Font9getHeightEv>:
     * Returns the height of a font. The font may exceed the top by getPixelsAboveTop() or the
     * bottom by getPixelsBelowBottom.
     *
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
 8009738:	b480      	push	{r7}
 800973a:	b083      	sub	sp, #12
 800973c:	af00      	add	r7, sp, #0
 800973e:	6078      	str	r0, [r7, #4]
    {
        return fontHeight;
 8009740:	687b      	ldr	r3, [r7, #4]
 8009742:	889b      	ldrh	r3, [r3, #4]
    }
 8009744:	4618      	mov	r0, r3
 8009746:	370c      	adds	r7, #12
 8009748:	46bd      	mov	sp, r7
 800974a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800974e:	4770      	bx	lr

08009750 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
    /**
     * Gets bits per pixel for this font.
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
 8009750:	b480      	push	{r7}
 8009752:	b083      	sub	sp, #12
 8009754:	af00      	add	r7, sp, #0
 8009756:	6078      	str	r0, [r7, #4]
    {
        return bPerPixel;
 8009758:	687b      	ldr	r3, [r7, #4]
 800975a:	7a9b      	ldrb	r3, [r3, #10]
 800975c:	f3c3 0306 	ubfx	r3, r3, #0, #7
 8009760:	b2db      	uxtb	r3, r3
    }
 8009762:	4618      	mov	r0, r3
 8009764:	370c      	adds	r7, #12
 8009766:	46bd      	mov	sp, r7
 8009768:	f85d 7b04 	ldr.w	r7, [sp], #4
 800976c:	4770      	bx	lr

0800976e <_ZNK8touchgfx4Font15getByteAlignRowEv>:
    /**
     * Are the glyphs saved with each glyph row byte aligned?
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
 800976e:	b480      	push	{r7}
 8009770:	b083      	sub	sp, #12
 8009772:	af00      	add	r7, sp, #0
 8009774:	6078      	str	r0, [r7, #4]
    {
        return bAlignRow;
 8009776:	687b      	ldr	r3, [r7, #4]
 8009778:	7a9b      	ldrb	r3, [r3, #10]
 800977a:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 800977e:	b2db      	uxtb	r3, r3
    }
 8009780:	4618      	mov	r0, r3
 8009782:	370c      	adds	r7, #12
 8009784:	46bd      	mov	sp, r7
 8009786:	f85d 7b04 	ldr.w	r7, [sp], #4
 800978a:	4770      	bx	lr

0800978c <_ZN8touchgfx9ConstFontD1Ev>:
 *
 * @see Font
 *
 * @note Pure virtual class. Create an application-specific implementation of getPixelData().
 */
class ConstFont : public Font
 800978c:	b580      	push	{r7, lr}
 800978e:	b082      	sub	sp, #8
 8009790:	af00      	add	r7, sp, #0
 8009792:	6078      	str	r0, [r7, #4]
 8009794:	4a05      	ldr	r2, [pc, #20]	; (80097ac <_ZN8touchgfx9ConstFontD1Ev+0x20>)
 8009796:	687b      	ldr	r3, [r7, #4]
 8009798:	601a      	str	r2, [r3, #0]
 800979a:	687b      	ldr	r3, [r7, #4]
 800979c:	4618      	mov	r0, r3
 800979e:	f7ff ff67 	bl	8009670 <_ZN8touchgfx4FontD1Ev>
 80097a2:	687b      	ldr	r3, [r7, #4]
 80097a4:	4618      	mov	r0, r3
 80097a6:	3708      	adds	r7, #8
 80097a8:	46bd      	mov	sp, r7
 80097aa:	bd80      	pop	{r7, pc}
 80097ac:	0802fa24 	.word	0x0802fa24

080097b0 <_ZN8touchgfx9ConstFontD0Ev>:
 80097b0:	b580      	push	{r7, lr}
 80097b2:	b082      	sub	sp, #8
 80097b4:	af00      	add	r7, sp, #0
 80097b6:	6078      	str	r0, [r7, #4]
 80097b8:	6878      	ldr	r0, [r7, #4]
 80097ba:	f7ff ffe7 	bl	800978c <_ZN8touchgfx9ConstFontD1Ev>
 80097be:	211c      	movs	r1, #28
 80097c0:	6878      	ldr	r0, [r7, #4]
 80097c2:	f020 ffce 	bl	802a762 <_ZdlPvj>
 80097c6:	687b      	ldr	r3, [r7, #4]
 80097c8:	4618      	mov	r0, r3
 80097ca:	3708      	adds	r7, #8
 80097cc:	46bd      	mov	sp, r7
 80097ce:	bd80      	pop	{r7, pc}

080097d0 <_ZN8touchgfx13GeneratedFontD1Ev>:

#include <touchgfx/ConstFont.hpp>

namespace touchgfx
{
class GeneratedFont : public ConstFont
 80097d0:	b580      	push	{r7, lr}
 80097d2:	b082      	sub	sp, #8
 80097d4:	af00      	add	r7, sp, #0
 80097d6:	6078      	str	r0, [r7, #4]
 80097d8:	4a05      	ldr	r2, [pc, #20]	; (80097f0 <_ZN8touchgfx13GeneratedFontD1Ev+0x20>)
 80097da:	687b      	ldr	r3, [r7, #4]
 80097dc:	601a      	str	r2, [r3, #0]
 80097de:	687b      	ldr	r3, [r7, #4]
 80097e0:	4618      	mov	r0, r3
 80097e2:	f7ff ffd3 	bl	800978c <_ZN8touchgfx9ConstFontD1Ev>
 80097e6:	687b      	ldr	r3, [r7, #4]
 80097e8:	4618      	mov	r0, r3
 80097ea:	3708      	adds	r7, #8
 80097ec:	46bd      	mov	sp, r7
 80097ee:	bd80      	pop	{r7, pc}
 80097f0:	0802de20 	.word	0x0802de20

080097f4 <_ZN8touchgfx13GeneratedFontD0Ev>:
 80097f4:	b580      	push	{r7, lr}
 80097f6:	b082      	sub	sp, #8
 80097f8:	af00      	add	r7, sp, #0
 80097fa:	6078      	str	r0, [r7, #4]
 80097fc:	6878      	ldr	r0, [r7, #4]
 80097fe:	f7ff ffe7 	bl	80097d0 <_ZN8touchgfx13GeneratedFontD1Ev>
 8009802:	212c      	movs	r1, #44	; 0x2c
 8009804:	6878      	ldr	r0, [r7, #4]
 8009806:	f020 ffac 	bl	802a762 <_ZdlPvj>
 800980a:	687b      	ldr	r3, [r7, #4]
 800980c:	4618      	mov	r0, r3
 800980e:	3708      	adds	r7, #8
 8009810:	46bd      	mov	sp, r7
 8009812:	bd80      	pop	{r7, pc}

08009814 <_ZN8touchgfx9TypedTextD1Ev>:
        : typedTextId(id)
    {
    }

    /** Finalizes an instance of the TypedText class. */
    virtual ~TypedText()
 8009814:	b480      	push	{r7}
 8009816:	b083      	sub	sp, #12
 8009818:	af00      	add	r7, sp, #0
 800981a:	6078      	str	r0, [r7, #4]
    {
 800981c:	4a04      	ldr	r2, [pc, #16]	; (8009830 <_ZN8touchgfx9TypedTextD1Ev+0x1c>)
 800981e:	687b      	ldr	r3, [r7, #4]
 8009820:	601a      	str	r2, [r3, #0]
    }
 8009822:	687b      	ldr	r3, [r7, #4]
 8009824:	4618      	mov	r0, r3
 8009826:	370c      	adds	r7, #12
 8009828:	46bd      	mov	sp, r7
 800982a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800982e:	4770      	bx	lr
 8009830:	0802de10 	.word	0x0802de10

08009834 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8009834:	b580      	push	{r7, lr}
 8009836:	b082      	sub	sp, #8
 8009838:	af00      	add	r7, sp, #0
 800983a:	6078      	str	r0, [r7, #4]
    }
 800983c:	6878      	ldr	r0, [r7, #4]
 800983e:	f7ff ffe9 	bl	8009814 <_ZN8touchgfx9TypedTextD1Ev>
 8009842:	2108      	movs	r1, #8
 8009844:	6878      	ldr	r0, [r7, #4]
 8009846:	f020 ff8c 	bl	802a762 <_ZdlPvj>
 800984a:	687b      	ldr	r3, [r7, #4]
 800984c:	4618      	mov	r0, r3
 800984e:	3708      	adds	r7, #8
 8009850:	46bd      	mov	sp, r7
 8009852:	bd80      	pop	{r7, pc}

08009854 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:

    virtual const uint8_t* getPixelData(const GlyphNode* glyph) const;

    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
 8009854:	b480      	push	{r7}
 8009856:	b083      	sub	sp, #12
 8009858:	af00      	add	r7, sp, #0
 800985a:	6078      	str	r0, [r7, #4]
    {
        return gsubTable;
 800985c:	687b      	ldr	r3, [r7, #4]
 800985e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    }
 8009860:	4618      	mov	r0, r3
 8009862:	370c      	adds	r7, #12
 8009864:	46bd      	mov	sp, r7
 8009866:	f85d 7b04 	ldr.w	r7, [sp], #4
 800986a:	4770      	bx	lr

0800986c <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
 800986c:	b480      	push	{r7}
 800986e:	b083      	sub	sp, #12
 8009870:	af00      	add	r7, sp, #0
 8009872:	6078      	str	r0, [r7, #4]
    {
        return arabicTable;
 8009874:	687b      	ldr	r3, [r7, #4]
 8009876:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    }
 8009878:	4618      	mov	r0, r3
 800987a:	370c      	adds	r7, #12
 800987c:	46bd      	mov	sp, r7
 800987e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009882:	4770      	bx	lr

08009884 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:

#include <fonts/GeneratedFont.hpp>

namespace touchgfx
{
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8009884:	b580      	push	{r7, lr}
 8009886:	b08e      	sub	sp, #56	; 0x38
 8009888:	af0a      	add	r7, sp, #40	; 0x28
 800988a:	60f8      	str	r0, [r7, #12]
 800988c:	60b9      	str	r1, [r7, #8]
 800988e:	4611      	mov	r1, r2
 8009890:	461a      	mov	r2, r3
 8009892:	460b      	mov	r3, r1
 8009894:	80fb      	strh	r3, [r7, #6]
 8009896:	4613      	mov	r3, r2
 8009898:	80bb      	strh	r3, [r7, #4]
    : ConstFont(glyphs, numGlyphs, height, baseline, pixAboveTop, pixBelowBottom, bitsPerPixel, byteAlignRow, maxLeft, maxRight, fallbackChar, ellipsisChar),
      glyphData(glyphDataInternalFlash),
      kerningData(kerningList),
      gsubTable(gsubData),
      arabicTable(formsTable)
 800989a:	68f8      	ldr	r0, [r7, #12]
 800989c:	88b9      	ldrh	r1, [r7, #4]
 800989e:	88fa      	ldrh	r2, [r7, #6]
 80098a0:	f8b7 3040 	ldrh.w	r3, [r7, #64]	; 0x40
 80098a4:	9308      	str	r3, [sp, #32]
 80098a6:	8fbb      	ldrh	r3, [r7, #60]	; 0x3c
 80098a8:	9307      	str	r3, [sp, #28]
 80098aa:	f897 3030 	ldrb.w	r3, [r7, #48]	; 0x30
 80098ae:	9306      	str	r3, [sp, #24]
 80098b0:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 80098b4:	9305      	str	r3, [sp, #20]
 80098b6:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 80098ba:	9304      	str	r3, [sp, #16]
 80098bc:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 80098c0:	9303      	str	r3, [sp, #12]
 80098c2:	f897 3020 	ldrb.w	r3, [r7, #32]
 80098c6:	9302      	str	r3, [sp, #8]
 80098c8:	7f3b      	ldrb	r3, [r7, #28]
 80098ca:	9301      	str	r3, [sp, #4]
 80098cc:	8b3b      	ldrh	r3, [r7, #24]
 80098ce:	9300      	str	r3, [sp, #0]
 80098d0:	460b      	mov	r3, r1
 80098d2:	68b9      	ldr	r1, [r7, #8]
 80098d4:	f010 fe56 	bl	801a584 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 80098d8:	4a09      	ldr	r2, [pc, #36]	; (8009900 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x7c>)
 80098da:	68fb      	ldr	r3, [r7, #12]
 80098dc:	601a      	str	r2, [r3, #0]
      glyphData(glyphDataInternalFlash),
 80098de:	68fb      	ldr	r3, [r7, #12]
 80098e0:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80098e2:	61da      	str	r2, [r3, #28]
      kerningData(kerningList),
 80098e4:	68fb      	ldr	r3, [r7, #12]
 80098e6:	6bba      	ldr	r2, [r7, #56]	; 0x38
 80098e8:	621a      	str	r2, [r3, #32]
      gsubTable(gsubData),
 80098ea:	68fb      	ldr	r3, [r7, #12]
 80098ec:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 80098ee:	625a      	str	r2, [r3, #36]	; 0x24
      arabicTable(formsTable)
 80098f0:	68fb      	ldr	r3, [r7, #12]
 80098f2:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80098f4:	629a      	str	r2, [r3, #40]	; 0x28
{
}
 80098f6:	68fb      	ldr	r3, [r7, #12]
 80098f8:	4618      	mov	r0, r3
 80098fa:	3710      	adds	r7, #16
 80098fc:	46bd      	mov	sp, r7
 80098fe:	bd80      	pop	{r7, pc}
 8009900:	0802de20 	.word	0x0802de20

08009904 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
 8009904:	b480      	push	{r7}
 8009906:	b085      	sub	sp, #20
 8009908:	af00      	add	r7, sp, #0
 800990a:	6078      	str	r0, [r7, #4]
 800990c:	6039      	str	r1, [r7, #0]
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
 800990e:	687b      	ldr	r3, [r7, #4]
 8009910:	69db      	ldr	r3, [r3, #28]
 8009912:	60fb      	str	r3, [r7, #12]
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8009914:	683b      	ldr	r3, [r7, #0]
 8009916:	889b      	ldrh	r3, [r3, #4]
 8009918:	0adb      	lsrs	r3, r3, #11
 800991a:	b29b      	uxth	r3, r3
 800991c:	009b      	lsls	r3, r3, #2
 800991e:	68fa      	ldr	r2, [r7, #12]
 8009920:	4413      	add	r3, r2
 8009922:	681a      	ldr	r2, [r3, #0]
 8009924:	683b      	ldr	r3, [r7, #0]
 8009926:	681b      	ldr	r3, [r3, #0]
 8009928:	4413      	add	r3, r2
}
 800992a:	4618      	mov	r0, r3
 800992c:	3714      	adds	r7, #20
 800992e:	46bd      	mov	sp, r7
 8009930:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009934:	4770      	bx	lr

08009936 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8009936:	b480      	push	{r7}
 8009938:	b089      	sub	sp, #36	; 0x24
 800993a:	af00      	add	r7, sp, #0
 800993c:	60f8      	str	r0, [r7, #12]
 800993e:	460b      	mov	r3, r1
 8009940:	607a      	str	r2, [r7, #4]
 8009942:	817b      	strh	r3, [r7, #10]
    if (!glyph || glyph->kerningTableSize == 0)
 8009944:	687b      	ldr	r3, [r7, #4]
 8009946:	2b00      	cmp	r3, #0
 8009948:	d003      	beq.n	8009952 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800994a:	687b      	ldr	r3, [r7, #4]
 800994c:	7b1b      	ldrb	r3, [r3, #12]
 800994e:	2b00      	cmp	r3, #0
 8009950:	d101      	bne.n	8009956 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x20>
    {
        return 0;
 8009952:	2300      	movs	r3, #0
 8009954:	e031      	b.n	80099ba <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8009956:	68fb      	ldr	r3, [r7, #12]
 8009958:	6a1a      	ldr	r2, [r3, #32]
 800995a:	687b      	ldr	r3, [r7, #4]
 800995c:	617b      	str	r3, [r7, #20]
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800995e:	697b      	ldr	r3, [r7, #20]
 8009960:	7b5b      	ldrb	r3, [r3, #13]
 8009962:	021b      	lsls	r3, r3, #8
 8009964:	b21b      	sxth	r3, r3
 8009966:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800996a:	b219      	sxth	r1, r3
 800996c:	697b      	ldr	r3, [r7, #20]
 800996e:	7adb      	ldrb	r3, [r3, #11]
 8009970:	b21b      	sxth	r3, r3
 8009972:	430b      	orrs	r3, r1
 8009974:	b21b      	sxth	r3, r3
 8009976:	b29b      	uxth	r3, r3
 8009978:	009b      	lsls	r3, r3, #2
 800997a:	4413      	add	r3, r2
 800997c:	61fb      	str	r3, [r7, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800997e:	687b      	ldr	r3, [r7, #4]
 8009980:	7b1b      	ldrb	r3, [r3, #12]
 8009982:	837b      	strh	r3, [r7, #26]
 8009984:	e013      	b.n	80099ae <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x78>
    {
        if (prevChar == kerndata->unicodePrevChar)
 8009986:	69fb      	ldr	r3, [r7, #28]
 8009988:	881b      	ldrh	r3, [r3, #0]
 800998a:	897a      	ldrh	r2, [r7, #10]
 800998c:	429a      	cmp	r2, r3
 800998e:	d103      	bne.n	8009998 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x62>
        {
            return kerndata->distance;
 8009990:	69fb      	ldr	r3, [r7, #28]
 8009992:	f993 3002 	ldrsb.w	r3, [r3, #2]
 8009996:	e010      	b.n	80099ba <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
        }
        if (prevChar < kerndata->unicodePrevChar)
 8009998:	69fb      	ldr	r3, [r7, #28]
 800999a:	881b      	ldrh	r3, [r3, #0]
 800999c:	897a      	ldrh	r2, [r7, #10]
 800999e:	429a      	cmp	r2, r3
 80099a0:	d309      	bcc.n	80099b6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x80>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80099a2:	8b7b      	ldrh	r3, [r7, #26]
 80099a4:	3b01      	subs	r3, #1
 80099a6:	837b      	strh	r3, [r7, #26]
 80099a8:	69fb      	ldr	r3, [r7, #28]
 80099aa:	3304      	adds	r3, #4
 80099ac:	61fb      	str	r3, [r7, #28]
 80099ae:	8b7b      	ldrh	r3, [r7, #26]
 80099b0:	2b00      	cmp	r3, #0
 80099b2:	d1e8      	bne.n	8009986 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x50>
 80099b4:	e000      	b.n	80099b8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x82>
        {
            break;
 80099b6:	bf00      	nop
        }
    }
    return 0;
 80099b8:	2300      	movs	r3, #0
}
 80099ba:	4618      	mov	r0, r3
 80099bc:	3724      	adds	r7, #36	; 0x24
 80099be:	46bd      	mov	sp, r7
 80099c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80099c4:	4770      	bx	lr
	...

080099c8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80099c8:	b580      	push	{r7, lr}
 80099ca:	af00      	add	r7, sp, #0
 80099cc:	4801      	ldr	r0, [pc, #4]	; (80099d4 <__tcf_0+0xc>)
 80099ce:	f7ff feff 	bl	80097d0 <_ZN8touchgfx13GeneratedFontD1Ev>
 80099d2:	bd80      	pop	{r7, pc}
 80099d4:	20000394 	.word	0x20000394

080099d8 <_Z23getFont_verdana_10_4bppv>:
{
 80099d8:	b580      	push	{r7, lr}
 80099da:	b08e      	sub	sp, #56	; 0x38
 80099dc:	af0e      	add	r7, sp, #56	; 0x38
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80099de:	4b21      	ldr	r3, [pc, #132]	; (8009a64 <_Z23getFont_verdana_10_4bppv+0x8c>)
 80099e0:	681b      	ldr	r3, [r3, #0]
 80099e2:	f3bf 8f5b 	dmb	ish
 80099e6:	f003 0301 	and.w	r3, r3, #1
 80099ea:	2b00      	cmp	r3, #0
 80099ec:	bf0c      	ite	eq
 80099ee:	2301      	moveq	r3, #1
 80099f0:	2300      	movne	r3, #0
 80099f2:	b2db      	uxtb	r3, r3
 80099f4:	2b00      	cmp	r3, #0
 80099f6:	d030      	beq.n	8009a5a <_Z23getFont_verdana_10_4bppv+0x82>
 80099f8:	481a      	ldr	r0, [pc, #104]	; (8009a64 <_Z23getFont_verdana_10_4bppv+0x8c>)
 80099fa:	f020 feb4 	bl	802a766 <__cxa_guard_acquire>
 80099fe:	4603      	mov	r3, r0
 8009a00:	2b00      	cmp	r3, #0
 8009a02:	bf14      	ite	ne
 8009a04:	2301      	movne	r3, #1
 8009a06:	2300      	moveq	r3, #0
 8009a08:	b2db      	uxtb	r3, r3
 8009a0a:	2b00      	cmp	r3, #0
 8009a0c:	d025      	beq.n	8009a5a <_Z23getFont_verdana_10_4bppv+0x82>
 8009a0e:	2300      	movs	r3, #0
 8009a10:	930c      	str	r3, [sp, #48]	; 0x30
 8009a12:	2300      	movs	r3, #0
 8009a14:	930b      	str	r3, [sp, #44]	; 0x2c
 8009a16:	2300      	movs	r3, #0
 8009a18:	930a      	str	r3, [sp, #40]	; 0x28
 8009a1a:	233f      	movs	r3, #63	; 0x3f
 8009a1c:	9309      	str	r3, [sp, #36]	; 0x24
 8009a1e:	4b12      	ldr	r3, [pc, #72]	; (8009a68 <_Z23getFont_verdana_10_4bppv+0x90>)
 8009a20:	9308      	str	r3, [sp, #32]
 8009a22:	4b12      	ldr	r3, [pc, #72]	; (8009a6c <_Z23getFont_verdana_10_4bppv+0x94>)
 8009a24:	9307      	str	r3, [sp, #28]
 8009a26:	2300      	movs	r3, #0
 8009a28:	9306      	str	r3, [sp, #24]
 8009a2a:	2300      	movs	r3, #0
 8009a2c:	9305      	str	r3, [sp, #20]
 8009a2e:	2301      	movs	r3, #1
 8009a30:	9304      	str	r3, [sp, #16]
 8009a32:	2304      	movs	r3, #4
 8009a34:	9303      	str	r3, [sp, #12]
 8009a36:	2300      	movs	r3, #0
 8009a38:	9302      	str	r3, [sp, #8]
 8009a3a:	2300      	movs	r3, #0
 8009a3c:	9301      	str	r3, [sp, #4]
 8009a3e:	230a      	movs	r3, #10
 8009a40:	9300      	str	r3, [sp, #0]
 8009a42:	230a      	movs	r3, #10
 8009a44:	2201      	movs	r2, #1
 8009a46:	490a      	ldr	r1, [pc, #40]	; (8009a70 <_Z23getFont_verdana_10_4bppv+0x98>)
 8009a48:	480a      	ldr	r0, [pc, #40]	; (8009a74 <_Z23getFont_verdana_10_4bppv+0x9c>)
 8009a4a:	f7ff ff1b 	bl	8009884 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8009a4e:	480a      	ldr	r0, [pc, #40]	; (8009a78 <_Z23getFont_verdana_10_4bppv+0xa0>)
 8009a50:	f021 fc96 	bl	802b380 <atexit>
 8009a54:	4803      	ldr	r0, [pc, #12]	; (8009a64 <_Z23getFont_verdana_10_4bppv+0x8c>)
 8009a56:	f020 fe92 	bl	802a77e <__cxa_guard_release>
    return verdana_10_4bpp;
 8009a5a:	4b06      	ldr	r3, [pc, #24]	; (8009a74 <_Z23getFont_verdana_10_4bppv+0x9c>)
}
 8009a5c:	4618      	mov	r0, r3
 8009a5e:	46bd      	mov	sp, r7
 8009a60:	bd80      	pop	{r7, pc}
 8009a62:	bf00      	nop
 8009a64:	200003c0 	.word	0x200003c0
 8009a68:	08034cb4 	.word	0x08034cb4
 8009a6c:	08034ed0 	.word	0x08034ed0
 8009a70:	08034584 	.word	0x08034584
 8009a74:	20000394 	.word	0x20000394
 8009a78:	080099c9 	.word	0x080099c9

08009a7c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 95, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 0, 0, 0, 0);
 8009a7c:	b580      	push	{r7, lr}
 8009a7e:	af00      	add	r7, sp, #0
 8009a80:	4801      	ldr	r0, [pc, #4]	; (8009a88 <__tcf_0+0xc>)
 8009a82:	f7ff fea5 	bl	80097d0 <_ZN8touchgfx13GeneratedFontD1Ev>
 8009a86:	bd80      	pop	{r7, pc}
 8009a88:	200003c4 	.word	0x200003c4

08009a8c <_Z23getFont_verdana_20_4bppv>:
{
 8009a8c:	b580      	push	{r7, lr}
 8009a8e:	b08e      	sub	sp, #56	; 0x38
 8009a90:	af0e      	add	r7, sp, #56	; 0x38
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 95, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 0, 0, 0, 0);
 8009a92:	4b21      	ldr	r3, [pc, #132]	; (8009b18 <_Z23getFont_verdana_20_4bppv+0x8c>)
 8009a94:	681b      	ldr	r3, [r3, #0]
 8009a96:	f3bf 8f5b 	dmb	ish
 8009a9a:	f003 0301 	and.w	r3, r3, #1
 8009a9e:	2b00      	cmp	r3, #0
 8009aa0:	bf0c      	ite	eq
 8009aa2:	2301      	moveq	r3, #1
 8009aa4:	2300      	movne	r3, #0
 8009aa6:	b2db      	uxtb	r3, r3
 8009aa8:	2b00      	cmp	r3, #0
 8009aaa:	d030      	beq.n	8009b0e <_Z23getFont_verdana_20_4bppv+0x82>
 8009aac:	481a      	ldr	r0, [pc, #104]	; (8009b18 <_Z23getFont_verdana_20_4bppv+0x8c>)
 8009aae:	f020 fe5a 	bl	802a766 <__cxa_guard_acquire>
 8009ab2:	4603      	mov	r3, r0
 8009ab4:	2b00      	cmp	r3, #0
 8009ab6:	bf14      	ite	ne
 8009ab8:	2301      	movne	r3, #1
 8009aba:	2300      	moveq	r3, #0
 8009abc:	b2db      	uxtb	r3, r3
 8009abe:	2b00      	cmp	r3, #0
 8009ac0:	d025      	beq.n	8009b0e <_Z23getFont_verdana_20_4bppv+0x82>
 8009ac2:	2300      	movs	r3, #0
 8009ac4:	930c      	str	r3, [sp, #48]	; 0x30
 8009ac6:	2300      	movs	r3, #0
 8009ac8:	930b      	str	r3, [sp, #44]	; 0x2c
 8009aca:	2300      	movs	r3, #0
 8009acc:	930a      	str	r3, [sp, #40]	; 0x28
 8009ace:	2300      	movs	r3, #0
 8009ad0:	9309      	str	r3, [sp, #36]	; 0x24
 8009ad2:	4b12      	ldr	r3, [pc, #72]	; (8009b1c <_Z23getFont_verdana_20_4bppv+0x90>)
 8009ad4:	9308      	str	r3, [sp, #32]
 8009ad6:	4b12      	ldr	r3, [pc, #72]	; (8009b20 <_Z23getFont_verdana_20_4bppv+0x94>)
 8009ad8:	9307      	str	r3, [sp, #28]
 8009ada:	2301      	movs	r3, #1
 8009adc:	9306      	str	r3, [sp, #24]
 8009ade:	2301      	movs	r3, #1
 8009ae0:	9305      	str	r3, [sp, #20]
 8009ae2:	2301      	movs	r3, #1
 8009ae4:	9304      	str	r3, [sp, #16]
 8009ae6:	2304      	movs	r3, #4
 8009ae8:	9303      	str	r3, [sp, #12]
 8009aea:	2300      	movs	r3, #0
 8009aec:	9302      	str	r3, [sp, #8]
 8009aee:	2300      	movs	r3, #0
 8009af0:	9301      	str	r3, [sp, #4]
 8009af2:	2314      	movs	r3, #20
 8009af4:	9300      	str	r3, [sp, #0]
 8009af6:	2318      	movs	r3, #24
 8009af8:	225f      	movs	r2, #95	; 0x5f
 8009afa:	490a      	ldr	r1, [pc, #40]	; (8009b24 <_Z23getFont_verdana_20_4bppv+0x98>)
 8009afc:	480a      	ldr	r0, [pc, #40]	; (8009b28 <_Z23getFont_verdana_20_4bppv+0x9c>)
 8009afe:	f7ff fec1 	bl	8009884 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8009b02:	480a      	ldr	r0, [pc, #40]	; (8009b2c <_Z23getFont_verdana_20_4bppv+0xa0>)
 8009b04:	f021 fc3c 	bl	802b380 <atexit>
 8009b08:	4803      	ldr	r0, [pc, #12]	; (8009b18 <_Z23getFont_verdana_20_4bppv+0x8c>)
 8009b0a:	f020 fe38 	bl	802a77e <__cxa_guard_release>
    return verdana_20_4bpp;
 8009b0e:	4b06      	ldr	r3, [pc, #24]	; (8009b28 <_Z23getFont_verdana_20_4bppv+0x9c>)
}
 8009b10:	4618      	mov	r0, r3
 8009b12:	46bd      	mov	sp, r7
 8009b14:	bd80      	pop	{r7, pc}
 8009b16:	bf00      	nop
 8009b18:	200003f0 	.word	0x200003f0
 8009b1c:	08034cb8 	.word	0x08034cb8
 8009b20:	08034ed4 	.word	0x08034ed4
 8009b24:	08034594 	.word	0x08034594
 8009b28:	200003c4 	.word	0x200003c4
 8009b2c:	08009a7d 	.word	0x08009a7d

08009b30 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 35, 48, 40, 0, 0, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8009b30:	b580      	push	{r7, lr}
 8009b32:	af00      	add	r7, sp, #0
 8009b34:	4801      	ldr	r0, [pc, #4]	; (8009b3c <__tcf_0+0xc>)
 8009b36:	f7ff fe4b 	bl	80097d0 <_ZN8touchgfx13GeneratedFontD1Ev>
 8009b3a:	bd80      	pop	{r7, pc}
 8009b3c:	200003f4 	.word	0x200003f4

08009b40 <_Z23getFont_verdana_40_4bppv>:
{
 8009b40:	b580      	push	{r7, lr}
 8009b42:	b08e      	sub	sp, #56	; 0x38
 8009b44:	af0e      	add	r7, sp, #56	; 0x38
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 35, 48, 40, 0, 0, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8009b46:	4b21      	ldr	r3, [pc, #132]	; (8009bcc <_Z23getFont_verdana_40_4bppv+0x8c>)
 8009b48:	681b      	ldr	r3, [r3, #0]
 8009b4a:	f3bf 8f5b 	dmb	ish
 8009b4e:	f003 0301 	and.w	r3, r3, #1
 8009b52:	2b00      	cmp	r3, #0
 8009b54:	bf0c      	ite	eq
 8009b56:	2301      	moveq	r3, #1
 8009b58:	2300      	movne	r3, #0
 8009b5a:	b2db      	uxtb	r3, r3
 8009b5c:	2b00      	cmp	r3, #0
 8009b5e:	d030      	beq.n	8009bc2 <_Z23getFont_verdana_40_4bppv+0x82>
 8009b60:	481a      	ldr	r0, [pc, #104]	; (8009bcc <_Z23getFont_verdana_40_4bppv+0x8c>)
 8009b62:	f020 fe00 	bl	802a766 <__cxa_guard_acquire>
 8009b66:	4603      	mov	r3, r0
 8009b68:	2b00      	cmp	r3, #0
 8009b6a:	bf14      	ite	ne
 8009b6c:	2301      	movne	r3, #1
 8009b6e:	2300      	moveq	r3, #0
 8009b70:	b2db      	uxtb	r3, r3
 8009b72:	2b00      	cmp	r3, #0
 8009b74:	d025      	beq.n	8009bc2 <_Z23getFont_verdana_40_4bppv+0x82>
 8009b76:	2300      	movs	r3, #0
 8009b78:	930c      	str	r3, [sp, #48]	; 0x30
 8009b7a:	2300      	movs	r3, #0
 8009b7c:	930b      	str	r3, [sp, #44]	; 0x2c
 8009b7e:	2300      	movs	r3, #0
 8009b80:	930a      	str	r3, [sp, #40]	; 0x28
 8009b82:	233f      	movs	r3, #63	; 0x3f
 8009b84:	9309      	str	r3, [sp, #36]	; 0x24
 8009b86:	4b12      	ldr	r3, [pc, #72]	; (8009bd0 <_Z23getFont_verdana_40_4bppv+0x90>)
 8009b88:	9308      	str	r3, [sp, #32]
 8009b8a:	4b12      	ldr	r3, [pc, #72]	; (8009bd4 <_Z23getFont_verdana_40_4bppv+0x94>)
 8009b8c:	9307      	str	r3, [sp, #28]
 8009b8e:	2301      	movs	r3, #1
 8009b90:	9306      	str	r3, [sp, #24]
 8009b92:	2300      	movs	r3, #0
 8009b94:	9305      	str	r3, [sp, #20]
 8009b96:	2301      	movs	r3, #1
 8009b98:	9304      	str	r3, [sp, #16]
 8009b9a:	2304      	movs	r3, #4
 8009b9c:	9303      	str	r3, [sp, #12]
 8009b9e:	2300      	movs	r3, #0
 8009ba0:	9302      	str	r3, [sp, #8]
 8009ba2:	2300      	movs	r3, #0
 8009ba4:	9301      	str	r3, [sp, #4]
 8009ba6:	2328      	movs	r3, #40	; 0x28
 8009ba8:	9300      	str	r3, [sp, #0]
 8009baa:	2330      	movs	r3, #48	; 0x30
 8009bac:	2223      	movs	r2, #35	; 0x23
 8009bae:	490a      	ldr	r1, [pc, #40]	; (8009bd8 <_Z23getFont_verdana_40_4bppv+0x98>)
 8009bb0:	480a      	ldr	r0, [pc, #40]	; (8009bdc <_Z23getFont_verdana_40_4bppv+0x9c>)
 8009bb2:	f7ff fe67 	bl	8009884 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8009bb6:	480a      	ldr	r0, [pc, #40]	; (8009be0 <_Z23getFont_verdana_40_4bppv+0xa0>)
 8009bb8:	f021 fbe2 	bl	802b380 <atexit>
 8009bbc:	4803      	ldr	r0, [pc, #12]	; (8009bcc <_Z23getFont_verdana_40_4bppv+0x8c>)
 8009bbe:	f020 fdde 	bl	802a77e <__cxa_guard_release>
    return verdana_40_4bpp;
 8009bc2:	4b06      	ldr	r3, [pc, #24]	; (8009bdc <_Z23getFont_verdana_40_4bppv+0x9c>)
}
 8009bc4:	4618      	mov	r0, r3
 8009bc6:	46bd      	mov	sp, r7
 8009bc8:	bd80      	pop	{r7, pc}
 8009bca:	bf00      	nop
 8009bcc:	20000420 	.word	0x20000420
 8009bd0:	08034e5c 	.word	0x08034e5c
 8009bd4:	08034ed8 	.word	0x08034ed8
 8009bd8:	08034ac8 	.word	0x08034ac8
 8009bdc:	200003f4 	.word	0x200003f4
 8009be0:	08009b31 	.word	0x08009b31

08009be4 <_ZN8touchgfx9colortypeC1Em>:
     *
     * @param  col The color.
     *
     * @see Color::getColorFromRGB
     */
    colortype(uint32_t col)
 8009be4:	b480      	push	{r7}
 8009be6:	b083      	sub	sp, #12
 8009be8:	af00      	add	r7, sp, #0
 8009bea:	6078      	str	r0, [r7, #4]
 8009bec:	6039      	str	r1, [r7, #0]
        : color(col)
 8009bee:	687b      	ldr	r3, [r7, #4]
 8009bf0:	683a      	ldr	r2, [r7, #0]
 8009bf2:	601a      	str	r2, [r3, #0]
    {
    }
 8009bf4:	687b      	ldr	r3, [r7, #4]
 8009bf6:	4618      	mov	r0, r3
 8009bf8:	370c      	adds	r7, #12
 8009bfa:	46bd      	mov	sp, r7
 8009bfc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c00:	4770      	bx	lr

08009c02 <_ZN8touchgfx4RectC1Ev>:
/** Class representing a Rectangle with a few convenient methods. */
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
 8009c02:	b480      	push	{r7}
 8009c04:	b083      	sub	sp, #12
 8009c06:	af00      	add	r7, sp, #0
 8009c08:	6078      	str	r0, [r7, #4]
        : x(0), y(0), width(0), height(0)
 8009c0a:	687b      	ldr	r3, [r7, #4]
 8009c0c:	2200      	movs	r2, #0
 8009c0e:	801a      	strh	r2, [r3, #0]
 8009c10:	687b      	ldr	r3, [r7, #4]
 8009c12:	2200      	movs	r2, #0
 8009c14:	805a      	strh	r2, [r3, #2]
 8009c16:	687b      	ldr	r3, [r7, #4]
 8009c18:	2200      	movs	r2, #0
 8009c1a:	809a      	strh	r2, [r3, #4]
 8009c1c:	687b      	ldr	r3, [r7, #4]
 8009c1e:	2200      	movs	r2, #0
 8009c20:	80da      	strh	r2, [r3, #6]
    {
    }
 8009c22:	687b      	ldr	r3, [r7, #4]
 8009c24:	4618      	mov	r0, r3
 8009c26:	370c      	adds	r7, #12
 8009c28:	46bd      	mov	sp, r7
 8009c2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c2e:	4770      	bx	lr

08009c30 <_ZN8touchgfx4RectC1Essss>:
     * @param  rectX      The x coordinate.
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
 8009c30:	b480      	push	{r7}
 8009c32:	b085      	sub	sp, #20
 8009c34:	af00      	add	r7, sp, #0
 8009c36:	60f8      	str	r0, [r7, #12]
 8009c38:	4608      	mov	r0, r1
 8009c3a:	4611      	mov	r1, r2
 8009c3c:	461a      	mov	r2, r3
 8009c3e:	4603      	mov	r3, r0
 8009c40:	817b      	strh	r3, [r7, #10]
 8009c42:	460b      	mov	r3, r1
 8009c44:	813b      	strh	r3, [r7, #8]
 8009c46:	4613      	mov	r3, r2
 8009c48:	80fb      	strh	r3, [r7, #6]
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8009c4a:	68fb      	ldr	r3, [r7, #12]
 8009c4c:	897a      	ldrh	r2, [r7, #10]
 8009c4e:	801a      	strh	r2, [r3, #0]
 8009c50:	68fb      	ldr	r3, [r7, #12]
 8009c52:	893a      	ldrh	r2, [r7, #8]
 8009c54:	805a      	strh	r2, [r3, #2]
 8009c56:	68fb      	ldr	r3, [r7, #12]
 8009c58:	88fa      	ldrh	r2, [r7, #6]
 8009c5a:	809a      	strh	r2, [r3, #4]
 8009c5c:	68fb      	ldr	r3, [r7, #12]
 8009c5e:	8b3a      	ldrh	r2, [r7, #24]
 8009c60:	80da      	strh	r2, [r3, #6]
    {
    }
 8009c62:	68fb      	ldr	r3, [r7, #12]
 8009c64:	4618      	mov	r0, r3
 8009c66:	3714      	adds	r7, #20
 8009c68:	46bd      	mov	sp, r7
 8009c6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c6e:	4770      	bx	lr

08009c70 <_ZN8touchgfx6BitmapC1Et>:
     * Creates and binds a Bitmap instance to the corresponding entry in the BitmapData
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
 8009c70:	b480      	push	{r7}
 8009c72:	b083      	sub	sp, #12
 8009c74:	af00      	add	r7, sp, #0
 8009c76:	6078      	str	r0, [r7, #4]
 8009c78:	460b      	mov	r3, r1
 8009c7a:	807b      	strh	r3, [r7, #2]
        : bitmapId(id)
 8009c7c:	687b      	ldr	r3, [r7, #4]
 8009c7e:	887a      	ldrh	r2, [r7, #2]
 8009c80:	801a      	strh	r2, [r3, #0]
    {
    }
 8009c82:	687b      	ldr	r3, [r7, #4]
 8009c84:	4618      	mov	r0, r3
 8009c86:	370c      	adds	r7, #12
 8009c88:	46bd      	mov	sp, r7
 8009c8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c8e:	4770      	bx	lr

08009c90 <_ZN8touchgfx8DrawableC1Ev>:
 */
class Drawable
{
public:
    /** Initializes a new instance of the Drawable class. */
    Drawable()
 8009c90:	b580      	push	{r7, lr}
 8009c92:	b082      	sub	sp, #8
 8009c94:	af00      	add	r7, sp, #0
 8009c96:	6078      	str	r0, [r7, #4]
          nextSibling(0),
          nextDrawChainElement(0),
          cachedAbsX(0),
          cachedAbsY(0),
          touchable(false),
          visible(true)
 8009c98:	4a14      	ldr	r2, [pc, #80]	; (8009cec <_ZN8touchgfx8DrawableC1Ev+0x5c>)
 8009c9a:	687b      	ldr	r3, [r7, #4]
 8009c9c:	601a      	str	r2, [r3, #0]
        : rect(),
 8009c9e:	687b      	ldr	r3, [r7, #4]
 8009ca0:	3304      	adds	r3, #4
 8009ca2:	4618      	mov	r0, r3
 8009ca4:	f7ff ffad 	bl	8009c02 <_ZN8touchgfx4RectC1Ev>
          cachedVisibleRect(),
 8009ca8:	687b      	ldr	r3, [r7, #4]
 8009caa:	330c      	adds	r3, #12
 8009cac:	4618      	mov	r0, r3
 8009cae:	f7ff ffa8 	bl	8009c02 <_ZN8touchgfx4RectC1Ev>
          parent(0),
 8009cb2:	687b      	ldr	r3, [r7, #4]
 8009cb4:	2200      	movs	r2, #0
 8009cb6:	615a      	str	r2, [r3, #20]
          nextSibling(0),
 8009cb8:	687b      	ldr	r3, [r7, #4]
 8009cba:	2200      	movs	r2, #0
 8009cbc:	619a      	str	r2, [r3, #24]
          nextDrawChainElement(0),
 8009cbe:	687b      	ldr	r3, [r7, #4]
 8009cc0:	2200      	movs	r2, #0
 8009cc2:	61da      	str	r2, [r3, #28]
          cachedAbsX(0),
 8009cc4:	687b      	ldr	r3, [r7, #4]
 8009cc6:	2200      	movs	r2, #0
 8009cc8:	841a      	strh	r2, [r3, #32]
          cachedAbsY(0),
 8009cca:	687b      	ldr	r3, [r7, #4]
 8009ccc:	2200      	movs	r2, #0
 8009cce:	845a      	strh	r2, [r3, #34]	; 0x22
          touchable(false),
 8009cd0:	687b      	ldr	r3, [r7, #4]
 8009cd2:	2200      	movs	r2, #0
 8009cd4:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
          visible(true)
 8009cd8:	687b      	ldr	r3, [r7, #4]
 8009cda:	2201      	movs	r2, #1
 8009cdc:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
    {
    }
 8009ce0:	687b      	ldr	r3, [r7, #4]
 8009ce2:	4618      	mov	r0, r3
 8009ce4:	3708      	adds	r7, #8
 8009ce6:	46bd      	mov	sp, r7
 8009ce8:	bd80      	pop	{r7, pc}
 8009cea:	bf00      	nop
 8009cec:	0802f9bc 	.word	0x0802f9bc

08009cf0 <_ZN8touchgfx8DrawableD1Ev>:

    /** Finalizes an instance of the Drawable class. */
    virtual ~Drawable()
 8009cf0:	b480      	push	{r7}
 8009cf2:	b083      	sub	sp, #12
 8009cf4:	af00      	add	r7, sp, #0
 8009cf6:	6078      	str	r0, [r7, #4]
    {
 8009cf8:	4a04      	ldr	r2, [pc, #16]	; (8009d0c <_ZN8touchgfx8DrawableD1Ev+0x1c>)
 8009cfa:	687b      	ldr	r3, [r7, #4]
 8009cfc:	601a      	str	r2, [r3, #0]
    }
 8009cfe:	687b      	ldr	r3, [r7, #4]
 8009d00:	4618      	mov	r0, r3
 8009d02:	370c      	adds	r7, #12
 8009d04:	46bd      	mov	sp, r7
 8009d06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d0a:	4770      	bx	lr
 8009d0c:	0802f9bc 	.word	0x0802f9bc

08009d10 <_ZN8touchgfx8DrawableD0Ev>:
    virtual ~Drawable()
 8009d10:	b580      	push	{r7, lr}
 8009d12:	b082      	sub	sp, #8
 8009d14:	af00      	add	r7, sp, #0
 8009d16:	6078      	str	r0, [r7, #4]
    }
 8009d18:	6878      	ldr	r0, [r7, #4]
 8009d1a:	f7ff ffe9 	bl	8009cf0 <_ZN8touchgfx8DrawableD1Ev>
 8009d1e:	2128      	movs	r1, #40	; 0x28
 8009d20:	6878      	ldr	r0, [r7, #4]
 8009d22:	f020 fd1e 	bl	802a762 <_ZdlPvj>
 8009d26:	687b      	ldr	r3, [r7, #4]
 8009d28:	4618      	mov	r0, r3
 8009d2a:	3708      	adds	r7, #8
 8009d2c:	46bd      	mov	sp, r7
 8009d2e:	bd80      	pop	{r7, pc}

08009d30 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * Tell the framework that the contents of the Drawable needs to be redrawn. If the Drawable is
     * invisible, nothing happens. Subclasses of Drawable are encouraged to implement this function
     * and invalidate as little as possible, i.e. the smallest rectangle covering the visual element(s)
     * drawn by the widget.
     */
    virtual void invalidateContent() const
 8009d30:	b580      	push	{r7, lr}
 8009d32:	b082      	sub	sp, #8
 8009d34:	af00      	add	r7, sp, #0
 8009d36:	6078      	str	r0, [r7, #4]
    {
        // Consider checking if *this is in the draw chain
        if (visible)
 8009d38:	687b      	ldr	r3, [r7, #4]
 8009d3a:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
 8009d3e:	2b00      	cmp	r3, #0
 8009d40:	d005      	beq.n	8009d4e <_ZNK8touchgfx8Drawable17invalidateContentEv+0x1e>
        {
            invalidate();
 8009d42:	687b      	ldr	r3, [r7, #4]
 8009d44:	681b      	ldr	r3, [r3, #0]
 8009d46:	3314      	adds	r3, #20
 8009d48:	681b      	ldr	r3, [r3, #0]
 8009d4a:	6878      	ldr	r0, [r7, #4]
 8009d4c:	4798      	blx	r3
        }
    }
 8009d4e:	bf00      	nop
 8009d50:	3708      	adds	r7, #8
 8009d52:	46bd      	mov	sp, r7
 8009d54:	bd80      	pop	{r7, pc}

08009d56 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * Function for obtaining the first child of this drawable if any.
     *
     * @return A pointer on the first child drawable if any.
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
 8009d56:	b480      	push	{r7}
 8009d58:	b083      	sub	sp, #12
 8009d5a:	af00      	add	r7, sp, #0
 8009d5c:	6078      	str	r0, [r7, #4]
    {
        return 0;
 8009d5e:	2300      	movs	r3, #0
    }
 8009d60:	4618      	mov	r0, r3
 8009d62:	370c      	adds	r7, #12
 8009d64:	46bd      	mov	sp, r7
 8009d66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d6a:	4770      	bx	lr

08009d6c <_ZN8touchgfx8Drawable11setPositionEssss>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     *
     * @see setXY,setWidthHeight,setPosition(const Drawable&)
     */
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8009d6c:	b580      	push	{r7, lr}
 8009d6e:	b084      	sub	sp, #16
 8009d70:	af00      	add	r7, sp, #0
 8009d72:	60f8      	str	r0, [r7, #12]
 8009d74:	4608      	mov	r0, r1
 8009d76:	4611      	mov	r1, r2
 8009d78:	461a      	mov	r2, r3
 8009d7a:	4603      	mov	r3, r0
 8009d7c:	817b      	strh	r3, [r7, #10]
 8009d7e:	460b      	mov	r3, r1
 8009d80:	813b      	strh	r3, [r7, #8]
 8009d82:	4613      	mov	r3, r2
 8009d84:	80fb      	strh	r3, [r7, #6]
    {
        setXY(x, y);
 8009d86:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 8009d8a:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8009d8e:	4619      	mov	r1, r3
 8009d90:	68f8      	ldr	r0, [r7, #12]
 8009d92:	f000 f82a 	bl	8009dea <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 8009d96:	f9b7 2018 	ldrsh.w	r2, [r7, #24]
 8009d9a:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8009d9e:	4619      	mov	r1, r3
 8009da0:	68f8      	ldr	r0, [r7, #12]
 8009da2:	f000 f87e 	bl	8009ea2 <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 8009da6:	bf00      	nop
 8009da8:	3710      	adds	r7, #16
 8009daa:	46bd      	mov	sp, r7
 8009dac:	bd80      	pop	{r7, pc}

08009dae <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @param  x The new x value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
 8009dae:	b480      	push	{r7}
 8009db0:	b083      	sub	sp, #12
 8009db2:	af00      	add	r7, sp, #0
 8009db4:	6078      	str	r0, [r7, #4]
 8009db6:	460b      	mov	r3, r1
 8009db8:	807b      	strh	r3, [r7, #2]
    {
        rect.x = x;
 8009dba:	687b      	ldr	r3, [r7, #4]
 8009dbc:	887a      	ldrh	r2, [r7, #2]
 8009dbe:	809a      	strh	r2, [r3, #4]
    }
 8009dc0:	bf00      	nop
 8009dc2:	370c      	adds	r7, #12
 8009dc4:	46bd      	mov	sp, r7
 8009dc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009dca:	4770      	bx	lr

08009dcc <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @param  y The new y value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
 8009dcc:	b480      	push	{r7}
 8009dce:	b083      	sub	sp, #12
 8009dd0:	af00      	add	r7, sp, #0
 8009dd2:	6078      	str	r0, [r7, #4]
 8009dd4:	460b      	mov	r3, r1
 8009dd6:	807b      	strh	r3, [r7, #2]
    {
        rect.y = y;
 8009dd8:	687b      	ldr	r3, [r7, #4]
 8009dda:	887a      	ldrh	r2, [r7, #2]
 8009ddc:	80da      	strh	r2, [r3, #6]
    }
 8009dde:	bf00      	nop
 8009de0:	370c      	adds	r7, #12
 8009de2:	46bd      	mov	sp, r7
 8009de4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009de8:	4770      	bx	lr

08009dea <_ZN8touchgfx8Drawable5setXYEss>:
     *
     * @see moveTo
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    void setXY(int16_t x, int16_t y)
 8009dea:	b580      	push	{r7, lr}
 8009dec:	b082      	sub	sp, #8
 8009dee:	af00      	add	r7, sp, #0
 8009df0:	6078      	str	r0, [r7, #4]
 8009df2:	460b      	mov	r3, r1
 8009df4:	807b      	strh	r3, [r7, #2]
 8009df6:	4613      	mov	r3, r2
 8009df8:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 8009dfa:	687b      	ldr	r3, [r7, #4]
 8009dfc:	681b      	ldr	r3, [r3, #0]
 8009dfe:	3330      	adds	r3, #48	; 0x30
 8009e00:	681b      	ldr	r3, [r3, #0]
 8009e02:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8009e06:	4611      	mov	r1, r2
 8009e08:	6878      	ldr	r0, [r7, #4]
 8009e0a:	4798      	blx	r3
        setY(y);
 8009e0c:	687b      	ldr	r3, [r7, #4]
 8009e0e:	681b      	ldr	r3, [r3, #0]
 8009e10:	3334      	adds	r3, #52	; 0x34
 8009e12:	681b      	ldr	r3, [r3, #0]
 8009e14:	f9b7 2000 	ldrsh.w	r2, [r7]
 8009e18:	4611      	mov	r1, r2
 8009e1a:	6878      	ldr	r0, [r7, #4]
 8009e1c:	4798      	blx	r3
    }
 8009e1e:	bf00      	nop
 8009e20:	3708      	adds	r7, #8
 8009e22:	46bd      	mov	sp, r7
 8009e24:	bd80      	pop	{r7, pc}

08009e26 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @param  width The new width.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
 8009e26:	b480      	push	{r7}
 8009e28:	b083      	sub	sp, #12
 8009e2a:	af00      	add	r7, sp, #0
 8009e2c:	6078      	str	r0, [r7, #4]
 8009e2e:	460b      	mov	r3, r1
 8009e30:	807b      	strh	r3, [r7, #2]
    {
        rect.width = width;
 8009e32:	687b      	ldr	r3, [r7, #4]
 8009e34:	887a      	ldrh	r2, [r7, #2]
 8009e36:	811a      	strh	r2, [r3, #8]
    }
 8009e38:	bf00      	nop
 8009e3a:	370c      	adds	r7, #12
 8009e3c:	46bd      	mov	sp, r7
 8009e3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e42:	4770      	bx	lr

08009e44 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @param  height The new height.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
 8009e44:	b480      	push	{r7}
 8009e46:	b083      	sub	sp, #12
 8009e48:	af00      	add	r7, sp, #0
 8009e4a:	6078      	str	r0, [r7, #4]
 8009e4c:	460b      	mov	r3, r1
 8009e4e:	807b      	strh	r3, [r7, #2]
    {
        rect.height = height;
 8009e50:	687b      	ldr	r3, [r7, #4]
 8009e52:	887a      	ldrh	r2, [r7, #2]
 8009e54:	815a      	strh	r2, [r3, #10]
    }
 8009e56:	bf00      	nop
 8009e58:	370c      	adds	r7, #12
 8009e5a:	46bd      	mov	sp, r7
 8009e5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e60:	4770      	bx	lr

08009e62 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
    /**
     * This function can be called on parent nodes to signal that the size or position of
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
 8009e62:	b480      	push	{r7}
 8009e64:	b083      	sub	sp, #12
 8009e66:	af00      	add	r7, sp, #0
 8009e68:	6078      	str	r0, [r7, #4]
    {
    }
 8009e6a:	bf00      	nop
 8009e6c:	370c      	adds	r7, #12
 8009e6e:	46bd      	mov	sp, r7
 8009e70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e74:	4770      	bx	lr

08009e76 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8009e76:	b480      	push	{r7}
 8009e78:	b083      	sub	sp, #12
 8009e7a:	af00      	add	r7, sp, #0
 8009e7c:	6078      	str	r0, [r7, #4]
 8009e7e:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8009e80:	bf00      	nop
 8009e82:	370c      	adds	r7, #12
 8009e84:	46bd      	mov	sp, r7
 8009e86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e8a:	4770      	bx	lr

08009e8c <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 8009e8c:	b480      	push	{r7}
 8009e8e:	b083      	sub	sp, #12
 8009e90:	af00      	add	r7, sp, #0
 8009e92:	6078      	str	r0, [r7, #4]
 8009e94:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8009e96:	bf00      	nop
 8009e98:	370c      	adds	r7, #12
 8009e9a:	46bd      	mov	sp, r7
 8009e9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ea0:	4770      	bx	lr

08009ea2 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
     * coordinates).
     *
     * @param  width  The width.
     * @param  height The height.
     */
    void setWidthHeight(int16_t width, int16_t height)
 8009ea2:	b580      	push	{r7, lr}
 8009ea4:	b082      	sub	sp, #8
 8009ea6:	af00      	add	r7, sp, #0
 8009ea8:	6078      	str	r0, [r7, #4]
 8009eaa:	460b      	mov	r3, r1
 8009eac:	807b      	strh	r3, [r7, #2]
 8009eae:	4613      	mov	r3, r2
 8009eb0:	803b      	strh	r3, [r7, #0]
    {
        setWidth(width);
 8009eb2:	687b      	ldr	r3, [r7, #4]
 8009eb4:	681b      	ldr	r3, [r3, #0]
 8009eb6:	3338      	adds	r3, #56	; 0x38
 8009eb8:	681b      	ldr	r3, [r3, #0]
 8009eba:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8009ebe:	4611      	mov	r1, r2
 8009ec0:	6878      	ldr	r0, [r7, #4]
 8009ec2:	4798      	blx	r3
        setHeight(height);
 8009ec4:	687b      	ldr	r3, [r7, #4]
 8009ec6:	681b      	ldr	r3, [r3, #0]
 8009ec8:	333c      	adds	r3, #60	; 0x3c
 8009eca:	681b      	ldr	r3, [r3, #0]
 8009ecc:	f9b7 2000 	ldrsh.w	r2, [r7]
 8009ed0:	4611      	mov	r1, r2
 8009ed2:	6878      	ldr	r0, [r7, #4]
 8009ed4:	4798      	blx	r3
    }
 8009ed6:	bf00      	nop
 8009ed8:	3708      	adds	r7, #8
 8009eda:	46bd      	mov	sp, r7
 8009edc:	bd80      	pop	{r7, pc}

08009ede <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * ignores the event. The event is only received if the drawable is touchable and
     * visible.
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
 8009ede:	b480      	push	{r7}
 8009ee0:	b083      	sub	sp, #12
 8009ee2:	af00      	add	r7, sp, #0
 8009ee4:	6078      	str	r0, [r7, #4]
 8009ee6:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8009ee8:	bf00      	nop
 8009eea:	370c      	adds	r7, #12
 8009eec:	46bd      	mov	sp, r7
 8009eee:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ef2:	4770      	bx	lr

08009ef4 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     * Called periodically by the framework if the Drawable instance has subscribed to timer
     * ticks.
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
 8009ef4:	b480      	push	{r7}
 8009ef6:	b083      	sub	sp, #12
 8009ef8:	af00      	add	r7, sp, #0
 8009efa:	6078      	str	r0, [r7, #4]
    {
    }
 8009efc:	bf00      	nop
 8009efe:	370c      	adds	r7, #12
 8009f00:	46bd      	mov	sp, r7
 8009f02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f06:	4770      	bx	lr

08009f08 <_ZNK8touchgfx8Drawable9isVisibleEv>:
     *
     * @return true if the Drawable is visible.
     *
     * @see setVisible
     */
    bool isVisible() const
 8009f08:	b480      	push	{r7}
 8009f0a:	b083      	sub	sp, #12
 8009f0c:	af00      	add	r7, sp, #0
 8009f0e:	6078      	str	r0, [r7, #4]
    {
        return visible;
 8009f10:	687b      	ldr	r3, [r7, #4]
 8009f12:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
    }
 8009f16:	4618      	mov	r0, r3
 8009f18:	370c      	adds	r7, #12
 8009f1a:	46bd      	mov	sp, r7
 8009f1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f20:	4770      	bx	lr

08009f22 <_ZNK8touchgfx8Drawable11isTouchableEv>:
     *
     * @return True if touch events are received.
     *
     * @see setTouchable
     */
    bool isTouchable() const
 8009f22:	b480      	push	{r7}
 8009f24:	b083      	sub	sp, #12
 8009f26:	af00      	add	r7, sp, #0
 8009f28:	6078      	str	r0, [r7, #4]
    {
        return touchable;
 8009f2a:	687b      	ldr	r3, [r7, #4]
 8009f2c:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
    }
 8009f30:	4618      	mov	r0, r3
 8009f32:	370c      	adds	r7, #12
 8009f34:	46bd      	mov	sp, r7
 8009f36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f3a:	4770      	bx	lr

08009f3c <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8009f3c:	b580      	push	{r7, lr}
 8009f3e:	b082      	sub	sp, #8
 8009f40:	af00      	add	r7, sp, #0
 8009f42:	6078      	str	r0, [r7, #4]
 8009f44:	460b      	mov	r3, r1
 8009f46:	807b      	strh	r3, [r7, #2]
 8009f48:	4613      	mov	r3, r2
 8009f4a:	803b      	strh	r3, [r7, #0]
    {
        moveRelative(x - rect.x, y - rect.y);
 8009f4c:	687b      	ldr	r3, [r7, #4]
 8009f4e:	681b      	ldr	r3, [r3, #0]
 8009f50:	3354      	adds	r3, #84	; 0x54
 8009f52:	681b      	ldr	r3, [r3, #0]
 8009f54:	8879      	ldrh	r1, [r7, #2]
 8009f56:	687a      	ldr	r2, [r7, #4]
 8009f58:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
 8009f5c:	b292      	uxth	r2, r2
 8009f5e:	1a8a      	subs	r2, r1, r2
 8009f60:	b292      	uxth	r2, r2
 8009f62:	b210      	sxth	r0, r2
 8009f64:	8839      	ldrh	r1, [r7, #0]
 8009f66:	687a      	ldr	r2, [r7, #4]
 8009f68:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 8009f6c:	b292      	uxth	r2, r2
 8009f6e:	1a8a      	subs	r2, r1, r2
 8009f70:	b292      	uxth	r2, r2
 8009f72:	b212      	sxth	r2, r2
 8009f74:	4601      	mov	r1, r0
 8009f76:	6878      	ldr	r0, [r7, #4]
 8009f78:	4798      	blx	r3
    }
 8009f7a:	bf00      	nop
 8009f7c:	3708      	adds	r7, #8
 8009f7e:	46bd      	mov	sp, r7
 8009f80:	bd80      	pop	{r7, pc}

08009f82 <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>:
     *
     * Reset cached coordinate data.
     *
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
 8009f82:	b480      	push	{r7}
 8009f84:	b083      	sub	sp, #12
 8009f86:	af00      	add	r7, sp, #0
 8009f88:	6078      	str	r0, [r7, #4]
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8009f8a:	687b      	ldr	r3, [r7, #4]
 8009f8c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8009f90:	819a      	strh	r2, [r3, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8009f92:	687b      	ldr	r3, [r7, #4]
 8009f94:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8009f98:	841a      	strh	r2, [r3, #32]
        cachedAbsY = UNCACHED_INDICATOR;
 8009f9a:	687b      	ldr	r3, [r7, #4]
 8009f9c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8009fa0:	845a      	strh	r2, [r3, #34]	; 0x22
    }
 8009fa2:	bf00      	nop
 8009fa4:	370c      	adds	r7, #12
 8009fa6:	46bd      	mov	sp, r7
 8009fa8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009fac:	4770      	bx	lr

08009fae <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @param          invalidatedArea     Include drawables that intersect with this area only.
     * @param [in,out] nextPreviousElement Modifiable element in linked list.
     *
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
 8009fae:	b580      	push	{r7, lr}
 8009fb0:	b084      	sub	sp, #16
 8009fb2:	af00      	add	r7, sp, #0
 8009fb4:	60f8      	str	r0, [r7, #12]
 8009fb6:	60b9      	str	r1, [r7, #8]
 8009fb8:	607a      	str	r2, [r7, #4]
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
 8009fba:	68f8      	ldr	r0, [r7, #12]
 8009fbc:	f7ff ffe1 	bl	8009f82 <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>
        nextDrawChainElement = *nextPreviousElement;
 8009fc0:	687b      	ldr	r3, [r7, #4]
 8009fc2:	681a      	ldr	r2, [r3, #0]
 8009fc4:	68fb      	ldr	r3, [r7, #12]
 8009fc6:	61da      	str	r2, [r3, #28]
        *nextPreviousElement = this;
 8009fc8:	687b      	ldr	r3, [r7, #4]
 8009fca:	68fa      	ldr	r2, [r7, #12]
 8009fcc:	601a      	str	r2, [r3, #0]
    }
 8009fce:	bf00      	nop
 8009fd0:	3710      	adds	r7, #16
 8009fd2:	46bd      	mov	sp, r7
 8009fd4:	bd80      	pop	{r7, pc}
	...

08009fd8 <_ZN8touchgfx6ScreenD1Ev>:
public:
    /** Initializes a new instance of the Screen class. */
    Screen();

    /** Finalizes an instance of the Screen class. */
    virtual ~Screen()
 8009fd8:	b580      	push	{r7, lr}
 8009fda:	b082      	sub	sp, #8
 8009fdc:	af00      	add	r7, sp, #0
 8009fde:	6078      	str	r0, [r7, #4]
    {
 8009fe0:	4a06      	ldr	r2, [pc, #24]	; (8009ffc <_ZN8touchgfx6ScreenD1Ev+0x24>)
 8009fe2:	687b      	ldr	r3, [r7, #4]
 8009fe4:	601a      	str	r2, [r3, #0]
 8009fe6:	687b      	ldr	r3, [r7, #4]
 8009fe8:	3304      	adds	r3, #4
 8009fea:	4618      	mov	r0, r3
 8009fec:	f000 fdca 	bl	800ab84 <_ZN8touchgfx9ContainerD1Ev>
    }
 8009ff0:	687b      	ldr	r3, [r7, #4]
 8009ff2:	4618      	mov	r0, r3
 8009ff4:	3708      	adds	r7, #8
 8009ff6:	46bd      	mov	sp, r7
 8009ff8:	bd80      	pop	{r7, pc}
 8009ffa:	bf00      	nop
 8009ffc:	0802fac0 	.word	0x0802fac0

0800a000 <_ZN8touchgfx6ScreenD0Ev>:
    virtual ~Screen()
 800a000:	b580      	push	{r7, lr}
 800a002:	b082      	sub	sp, #8
 800a004:	af00      	add	r7, sp, #0
 800a006:	6078      	str	r0, [r7, #4]
    }
 800a008:	6878      	ldr	r0, [r7, #4]
 800a00a:	f7ff ffe5 	bl	8009fd8 <_ZN8touchgfx6ScreenD1Ev>
 800a00e:	213c      	movs	r1, #60	; 0x3c
 800a010:	6878      	ldr	r0, [r7, #4]
 800a012:	f020 fba6 	bl	802a762 <_ZdlPvj>
 800a016:	687b      	ldr	r3, [r7, #4]
 800a018:	4618      	mov	r0, r3
 800a01a:	3708      	adds	r7, #8
 800a01c:	46bd      	mov	sp, r7
 800a01e:	bd80      	pop	{r7, pc}

0800a020 <_ZN8touchgfx6Screen11setupScreenEv>:
     * version does nothing, but place any screen specific initialization code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
 800a020:	b480      	push	{r7}
 800a022:	b083      	sub	sp, #12
 800a024:	af00      	add	r7, sp, #0
 800a026:	6078      	str	r0, [r7, #4]
    {
    }
 800a028:	bf00      	nop
 800a02a:	370c      	adds	r7, #12
 800a02c:	46bd      	mov	sp, r7
 800a02e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a032:	4770      	bx	lr

0800a034 <_ZN8touchgfx6Screen15afterTransitionEv>:
     * version does nothing, but override to do screen specific initialization code that has
     * to be done after the transition to the screen.
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
 800a034:	b480      	push	{r7}
 800a036:	b083      	sub	sp, #12
 800a038:	af00      	add	r7, sp, #0
 800a03a:	6078      	str	r0, [r7, #4]
    {
    }
 800a03c:	bf00      	nop
 800a03e:	370c      	adds	r7, #12
 800a040:	46bd      	mov	sp, r7
 800a042:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a046:	4770      	bx	lr

0800a048 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     * Base version does nothing, but place any screen specific cleanup code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
 800a048:	b480      	push	{r7}
 800a04a:	b083      	sub	sp, #12
 800a04c:	af00      	add	r7, sp, #0
 800a04e:	6078      	str	r0, [r7, #4]
    {
    }
 800a050:	bf00      	nop
 800a052:	370c      	adds	r7, #12
 800a054:	46bd      	mov	sp, r7
 800a056:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a05a:	4770      	bx	lr

0800a05c <_ZN8touchgfx6Screen15handleTickEventEv>:

    /**
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
 800a05c:	b480      	push	{r7}
 800a05e:	b083      	sub	sp, #12
 800a060:	af00      	add	r7, sp, #0
 800a062:	6078      	str	r0, [r7, #4]
    {
    }
 800a064:	bf00      	nop
 800a066:	370c      	adds	r7, #12
 800a068:	46bd      	mov	sp, r7
 800a06a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a06e:	4770      	bx	lr

0800a070 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * Called by the Application on the reception of a "key", the meaning of which is
     * platform/application specific. Default implementation does nothing.
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
 800a070:	b480      	push	{r7}
 800a072:	b083      	sub	sp, #12
 800a074:	af00      	add	r7, sp, #0
 800a076:	6078      	str	r0, [r7, #4]
 800a078:	460b      	mov	r3, r1
 800a07a:	70fb      	strb	r3, [r7, #3]
    {
        (void)key; // Unused variable
    }
 800a07c:	bf00      	nop
 800a07e:	370c      	adds	r7, #12
 800a080:	46bd      	mov	sp, r7
 800a082:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a086:	4770      	bx	lr

0800a088 <_ZN8touchgfx6Screen3addERNS_8DrawableE>:
     * @param [in] d The Drawable to add.
     *
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
 800a088:	b580      	push	{r7, lr}
 800a08a:	b082      	sub	sp, #8
 800a08c:	af00      	add	r7, sp, #0
 800a08e:	6078      	str	r0, [r7, #4]
 800a090:	6039      	str	r1, [r7, #0]
    {
        container.add(d);
 800a092:	687b      	ldr	r3, [r7, #4]
 800a094:	3304      	adds	r3, #4
 800a096:	6839      	ldr	r1, [r7, #0]
 800a098:	4618      	mov	r0, r3
 800a09a:	f008 ff8d 	bl	8012fb8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800a09e:	bf00      	nop
 800a0a0:	3708      	adds	r7, #8
 800a0a2:	46bd      	mov	sp, r7
 800a0a4:	bd80      	pop	{r7, pc}

0800a0a6 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     * Since a Widget is only one Drawable, Widget::getLastChild simply yields itself as
     * result, but only if the Widget isVisible and isTouchable.
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
 800a0a6:	b580      	push	{r7, lr}
 800a0a8:	b084      	sub	sp, #16
 800a0aa:	af00      	add	r7, sp, #0
 800a0ac:	60f8      	str	r0, [r7, #12]
 800a0ae:	607b      	str	r3, [r7, #4]
 800a0b0:	460b      	mov	r3, r1
 800a0b2:	817b      	strh	r3, [r7, #10]
 800a0b4:	4613      	mov	r3, r2
 800a0b6:	813b      	strh	r3, [r7, #8]
    {
        if (isVisible() && isTouchable())
 800a0b8:	68fb      	ldr	r3, [r7, #12]
 800a0ba:	4618      	mov	r0, r3
 800a0bc:	f7ff ff24 	bl	8009f08 <_ZNK8touchgfx8Drawable9isVisibleEv>
 800a0c0:	4603      	mov	r3, r0
 800a0c2:	2b00      	cmp	r3, #0
 800a0c4:	d008      	beq.n	800a0d8 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 800a0c6:	68fb      	ldr	r3, [r7, #12]
 800a0c8:	4618      	mov	r0, r3
 800a0ca:	f7ff ff2a 	bl	8009f22 <_ZNK8touchgfx8Drawable11isTouchableEv>
 800a0ce:	4603      	mov	r3, r0
 800a0d0:	2b00      	cmp	r3, #0
 800a0d2:	d001      	beq.n	800a0d8 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 800a0d4:	2301      	movs	r3, #1
 800a0d6:	e000      	b.n	800a0da <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x34>
 800a0d8:	2300      	movs	r3, #0
 800a0da:	2b00      	cmp	r3, #0
 800a0dc:	d002      	beq.n	800a0e4 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x3e>
        {
            *last = this;
 800a0de:	68fa      	ldr	r2, [r7, #12]
 800a0e0:	687b      	ldr	r3, [r7, #4]
 800a0e2:	601a      	str	r2, [r3, #0]
        }
    }
 800a0e4:	bf00      	nop
 800a0e6:	3710      	adds	r7, #16
 800a0e8:	46bd      	mov	sp, r7
 800a0ea:	bd80      	pop	{r7, pc}

0800a0ec <_ZN8touchgfx6WidgetC1Ev>:
class Widget : public Drawable
 800a0ec:	b580      	push	{r7, lr}
 800a0ee:	b082      	sub	sp, #8
 800a0f0:	af00      	add	r7, sp, #0
 800a0f2:	6078      	str	r0, [r7, #4]
 800a0f4:	687b      	ldr	r3, [r7, #4]
 800a0f6:	4618      	mov	r0, r3
 800a0f8:	f7ff fdca 	bl	8009c90 <_ZN8touchgfx8DrawableC1Ev>
 800a0fc:	4a03      	ldr	r2, [pc, #12]	; (800a10c <_ZN8touchgfx6WidgetC1Ev+0x20>)
 800a0fe:	687b      	ldr	r3, [r7, #4]
 800a100:	601a      	str	r2, [r3, #0]
 800a102:	687b      	ldr	r3, [r7, #4]
 800a104:	4618      	mov	r0, r3
 800a106:	3708      	adds	r7, #8
 800a108:	46bd      	mov	sp, r7
 800a10a:	bd80      	pop	{r7, pc}
 800a10c:	0802dfa8 	.word	0x0802dfa8

0800a110 <_ZN8touchgfx6WidgetD1Ev>:
 800a110:	b580      	push	{r7, lr}
 800a112:	b082      	sub	sp, #8
 800a114:	af00      	add	r7, sp, #0
 800a116:	6078      	str	r0, [r7, #4]
 800a118:	4a05      	ldr	r2, [pc, #20]	; (800a130 <_ZN8touchgfx6WidgetD1Ev+0x20>)
 800a11a:	687b      	ldr	r3, [r7, #4]
 800a11c:	601a      	str	r2, [r3, #0]
 800a11e:	687b      	ldr	r3, [r7, #4]
 800a120:	4618      	mov	r0, r3
 800a122:	f7ff fde5 	bl	8009cf0 <_ZN8touchgfx8DrawableD1Ev>
 800a126:	687b      	ldr	r3, [r7, #4]
 800a128:	4618      	mov	r0, r3
 800a12a:	3708      	adds	r7, #8
 800a12c:	46bd      	mov	sp, r7
 800a12e:	bd80      	pop	{r7, pc}
 800a130:	0802dfa8 	.word	0x0802dfa8

0800a134 <_ZN8touchgfx6WidgetD0Ev>:
 800a134:	b580      	push	{r7, lr}
 800a136:	b082      	sub	sp, #8
 800a138:	af00      	add	r7, sp, #0
 800a13a:	6078      	str	r0, [r7, #4]
 800a13c:	6878      	ldr	r0, [r7, #4]
 800a13e:	f7ff ffe7 	bl	800a110 <_ZN8touchgfx6WidgetD1Ev>
 800a142:	2128      	movs	r1, #40	; 0x28
 800a144:	6878      	ldr	r0, [r7, #4]
 800a146:	f020 fb0c 	bl	802a762 <_ZdlPvj>
 800a14a:	687b      	ldr	r3, [r7, #4]
 800a14c:	4618      	mov	r0, r3
 800a14e:	3708      	adds	r7, #8
 800a150:	46bd      	mov	sp, r7
 800a152:	bd80      	pop	{r7, pc}

0800a154 <_ZN8touchgfx3BoxC1Ev>:
 */
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
 800a154:	b580      	push	{r7, lr}
 800a156:	b082      	sub	sp, #8
 800a158:	af00      	add	r7, sp, #0
 800a15a:	6078      	str	r0, [r7, #4]
        : Widget(), alpha(255), color(0)
 800a15c:	687b      	ldr	r3, [r7, #4]
 800a15e:	4618      	mov	r0, r3
 800a160:	2326      	movs	r3, #38	; 0x26
 800a162:	461a      	mov	r2, r3
 800a164:	2100      	movs	r1, #0
 800a166:	f021 faf2 	bl	802b74e <memset>
 800a16a:	687b      	ldr	r3, [r7, #4]
 800a16c:	4618      	mov	r0, r3
 800a16e:	f7ff ffbd 	bl	800a0ec <_ZN8touchgfx6WidgetC1Ev>
 800a172:	4a09      	ldr	r2, [pc, #36]	; (800a198 <_ZN8touchgfx3BoxC1Ev+0x44>)
 800a174:	687b      	ldr	r3, [r7, #4]
 800a176:	601a      	str	r2, [r3, #0]
 800a178:	687b      	ldr	r3, [r7, #4]
 800a17a:	22ff      	movs	r2, #255	; 0xff
 800a17c:	f883 2026 	strb.w	r2, [r3, #38]	; 0x26
 800a180:	687b      	ldr	r3, [r7, #4]
 800a182:	3328      	adds	r3, #40	; 0x28
 800a184:	2100      	movs	r1, #0
 800a186:	4618      	mov	r0, r3
 800a188:	f7ff fd2c 	bl	8009be4 <_ZN8touchgfx9colortypeC1Em>
    {
    }
 800a18c:	687b      	ldr	r3, [r7, #4]
 800a18e:	4618      	mov	r0, r3
 800a190:	3708      	adds	r7, #8
 800a192:	46bd      	mov	sp, r7
 800a194:	bd80      	pop	{r7, pc}
 800a196:	bf00      	nop
 800a198:	0802f560 	.word	0x0802f560

0800a19c <_ZN8touchgfx3Box8setColorENS_9colortypeE>:
     *
     * @param  newColor The color of the box.
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
 800a19c:	b480      	push	{r7}
 800a19e:	b083      	sub	sp, #12
 800a1a0:	af00      	add	r7, sp, #0
 800a1a2:	6078      	str	r0, [r7, #4]
 800a1a4:	6039      	str	r1, [r7, #0]
    {
        color = newColor;
 800a1a6:	687b      	ldr	r3, [r7, #4]
 800a1a8:	683a      	ldr	r2, [r7, #0]
 800a1aa:	629a      	str	r2, [r3, #40]	; 0x28
    }
 800a1ac:	bf00      	nop
 800a1ae:	370c      	adds	r7, #12
 800a1b0:	46bd      	mov	sp, r7
 800a1b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a1b6:	4770      	bx	lr

0800a1b8 <_ZN8touchgfx9TypedTextC1Et>:
    TypedText(const TypedTextId id = TYPED_TEXT_INVALID)
 800a1b8:	b480      	push	{r7}
 800a1ba:	b083      	sub	sp, #12
 800a1bc:	af00      	add	r7, sp, #0
 800a1be:	6078      	str	r0, [r7, #4]
 800a1c0:	460b      	mov	r3, r1
 800a1c2:	807b      	strh	r3, [r7, #2]
        : typedTextId(id)
 800a1c4:	4a06      	ldr	r2, [pc, #24]	; (800a1e0 <_ZN8touchgfx9TypedTextC1Et+0x28>)
 800a1c6:	687b      	ldr	r3, [r7, #4]
 800a1c8:	601a      	str	r2, [r3, #0]
 800a1ca:	687b      	ldr	r3, [r7, #4]
 800a1cc:	887a      	ldrh	r2, [r7, #2]
 800a1ce:	809a      	strh	r2, [r3, #4]
    }
 800a1d0:	687b      	ldr	r3, [r7, #4]
 800a1d2:	4618      	mov	r0, r3
 800a1d4:	370c      	adds	r7, #12
 800a1d6:	46bd      	mov	sp, r7
 800a1d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a1dc:	4770      	bx	lr
 800a1de:	bf00      	nop
 800a1e0:	0802de10 	.word	0x0802de10

0800a1e4 <_ZN8touchgfx8TextAreaC1Ev>:
 *       the pointer remains valid when drawing.
 */
class TextArea : public Widget
{
public:
    TextArea()
 800a1e4:	b580      	push	{r7, lr}
 800a1e6:	b082      	sub	sp, #8
 800a1e8:	af00      	add	r7, sp, #0
 800a1ea:	6078      	str	r0, [r7, #4]
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800a1ec:	687b      	ldr	r3, [r7, #4]
 800a1ee:	4618      	mov	r0, r3
 800a1f0:	2326      	movs	r3, #38	; 0x26
 800a1f2:	461a      	mov	r2, r3
 800a1f4:	2100      	movs	r1, #0
 800a1f6:	f021 faaa 	bl	802b74e <memset>
 800a1fa:	687b      	ldr	r3, [r7, #4]
 800a1fc:	4618      	mov	r0, r3
 800a1fe:	f7ff ff75 	bl	800a0ec <_ZN8touchgfx6WidgetC1Ev>
 800a202:	4a16      	ldr	r2, [pc, #88]	; (800a25c <_ZN8touchgfx8TextAreaC1Ev+0x78>)
 800a204:	687b      	ldr	r3, [r7, #4]
 800a206:	601a      	str	r2, [r3, #0]
 800a208:	687b      	ldr	r3, [r7, #4]
 800a20a:	3328      	adds	r3, #40	; 0x28
 800a20c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800a210:	4618      	mov	r0, r3
 800a212:	f7ff ffd1 	bl	800a1b8 <_ZN8touchgfx9TypedTextC1Et>
 800a216:	687b      	ldr	r3, [r7, #4]
 800a218:	3330      	adds	r3, #48	; 0x30
 800a21a:	2100      	movs	r1, #0
 800a21c:	4618      	mov	r0, r3
 800a21e:	f7ff fce1 	bl	8009be4 <_ZN8touchgfx9colortypeC1Em>
 800a222:	687b      	ldr	r3, [r7, #4]
 800a224:	2200      	movs	r2, #0
 800a226:	869a      	strh	r2, [r3, #52]	; 0x34
 800a228:	687b      	ldr	r3, [r7, #4]
 800a22a:	22ff      	movs	r2, #255	; 0xff
 800a22c:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
 800a230:	687b      	ldr	r3, [r7, #4]
 800a232:	2200      	movs	r2, #0
 800a234:	f883 2037 	strb.w	r2, [r3, #55]	; 0x37
 800a238:	687b      	ldr	r3, [r7, #4]
 800a23a:	2200      	movs	r2, #0
 800a23c:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800a240:	687b      	ldr	r3, [r7, #4]
 800a242:	2200      	movs	r2, #0
 800a244:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 800a248:	687b      	ldr	r3, [r7, #4]
 800a24a:	333c      	adds	r3, #60	; 0x3c
 800a24c:	4618      	mov	r0, r3
 800a24e:	f000 f8f0 	bl	800a432 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    {
    }
 800a252:	687b      	ldr	r3, [r7, #4]
 800a254:	4618      	mov	r0, r3
 800a256:	3708      	adds	r7, #8
 800a258:	46bd      	mov	sp, r7
 800a25a:	bd80      	pop	{r7, pc}
 800a25c:	0802f4d0 	.word	0x0802f4d0

0800a260 <_ZN8touchgfx8TextArea8setWidthEs>:

    virtual void setWidth(int16_t width)
 800a260:	b590      	push	{r4, r7, lr}
 800a262:	b087      	sub	sp, #28
 800a264:	af00      	add	r7, sp, #0
 800a266:	6178      	str	r0, [r7, #20]
 800a268:	460b      	mov	r3, r1
 800a26a:	827b      	strh	r3, [r7, #18]
    {
        Widget::setWidth(width);
 800a26c:	697b      	ldr	r3, [r7, #20]
 800a26e:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 800a272:	4611      	mov	r1, r2
 800a274:	4618      	mov	r0, r3
 800a276:	f7ff fdd6 	bl	8009e26 <_ZN8touchgfx8Drawable8setWidthEs>
        boundingArea = calculateBoundingArea();
 800a27a:	697b      	ldr	r3, [r7, #20]
 800a27c:	681b      	ldr	r3, [r3, #0]
 800a27e:	3384      	adds	r3, #132	; 0x84
 800a280:	681b      	ldr	r3, [r3, #0]
 800a282:	697c      	ldr	r4, [r7, #20]
 800a284:	463a      	mov	r2, r7
 800a286:	6979      	ldr	r1, [r7, #20]
 800a288:	4610      	mov	r0, r2
 800a28a:	4798      	blx	r3
 800a28c:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800a290:	463a      	mov	r2, r7
 800a292:	ca07      	ldmia	r2, {r0, r1, r2}
 800a294:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800a298:	bf00      	nop
 800a29a:	371c      	adds	r7, #28
 800a29c:	46bd      	mov	sp, r7
 800a29e:	bd90      	pop	{r4, r7, pc}

0800a2a0 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 800a2a0:	b590      	push	{r4, r7, lr}
 800a2a2:	b087      	sub	sp, #28
 800a2a4:	af00      	add	r7, sp, #0
 800a2a6:	6178      	str	r0, [r7, #20]
 800a2a8:	460b      	mov	r3, r1
 800a2aa:	827b      	strh	r3, [r7, #18]
    {
        Widget::setHeight(height);
 800a2ac:	697b      	ldr	r3, [r7, #20]
 800a2ae:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 800a2b2:	4611      	mov	r1, r2
 800a2b4:	4618      	mov	r0, r3
 800a2b6:	f7ff fdc5 	bl	8009e44 <_ZN8touchgfx8Drawable9setHeightEs>
        boundingArea = calculateBoundingArea();
 800a2ba:	697b      	ldr	r3, [r7, #20]
 800a2bc:	681b      	ldr	r3, [r3, #0]
 800a2be:	3384      	adds	r3, #132	; 0x84
 800a2c0:	681b      	ldr	r3, [r3, #0]
 800a2c2:	697c      	ldr	r4, [r7, #20]
 800a2c4:	463a      	mov	r2, r7
 800a2c6:	6979      	ldr	r1, [r7, #20]
 800a2c8:	4610      	mov	r0, r2
 800a2ca:	4798      	blx	r3
 800a2cc:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800a2d0:	463a      	mov	r2, r7
 800a2d2:	ca07      	ldmia	r2, {r0, r1, r2}
 800a2d4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800a2d8:	bf00      	nop
 800a2da:	371c      	adds	r7, #28
 800a2dc:	46bd      	mov	sp, r7
 800a2de:	bd90      	pop	{r4, r7, pc}

0800a2e0 <_ZNK8touchgfx8TextArea12getSolidRectEv>:

    virtual Rect getSolidRect() const
 800a2e0:	b580      	push	{r7, lr}
 800a2e2:	b082      	sub	sp, #8
 800a2e4:	af00      	add	r7, sp, #0
 800a2e6:	6078      	str	r0, [r7, #4]
 800a2e8:	6039      	str	r1, [r7, #0]
    {
        return Rect();
 800a2ea:	6878      	ldr	r0, [r7, #4]
 800a2ec:	f7ff fc89 	bl	8009c02 <_ZN8touchgfx4RectC1Ev>
    }
 800a2f0:	6878      	ldr	r0, [r7, #4]
 800a2f2:	3708      	adds	r7, #8
 800a2f4:	46bd      	mov	sp, r7
 800a2f6:	bd80      	pop	{r7, pc}

0800a2f8 <_ZN8touchgfx8TextArea8setAlphaEh>:
    }

    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
 800a2f8:	b480      	push	{r7}
 800a2fa:	b083      	sub	sp, #12
 800a2fc:	af00      	add	r7, sp, #0
 800a2fe:	6078      	str	r0, [r7, #4]
 800a300:	460b      	mov	r3, r1
 800a302:	70fb      	strb	r3, [r7, #3]
    {
        alpha = newAlpha;
 800a304:	687b      	ldr	r3, [r7, #4]
 800a306:	78fa      	ldrb	r2, [r7, #3]
 800a308:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
    }
 800a30c:	bf00      	nop
 800a30e:	370c      	adds	r7, #12
 800a310:	46bd      	mov	sp, r7
 800a312:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a316:	4770      	bx	lr

0800a318 <_ZN8touchgfx8TextArea12setBaselineYEs>:
     *
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setBaselineY(int16_t baselineY)
 800a318:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a31a:	b085      	sub	sp, #20
 800a31c:	af00      	add	r7, sp, #0
 800a31e:	6078      	str	r0, [r7, #4]
 800a320:	460b      	mov	r3, r1
 800a322:	807b      	strh	r3, [r7, #2]
    {
        setY(baselineY - getTypedText().getFont()->getBaseline());
 800a324:	687e      	ldr	r6, [r7, #4]
 800a326:	687b      	ldr	r3, [r7, #4]
 800a328:	681b      	ldr	r3, [r3, #0]
 800a32a:	3334      	adds	r3, #52	; 0x34
 800a32c:	681c      	ldr	r4, [r3, #0]
 800a32e:	887d      	ldrh	r5, [r7, #2]
 800a330:	6878      	ldr	r0, [r7, #4]
 800a332:	f000 f867 	bl	800a404 <_ZNK8touchgfx8TextArea12getTypedTextEv>
 800a336:	4603      	mov	r3, r0
 800a338:	60fb      	str	r3, [r7, #12]
     *
     * @return The font.
     */
    FORCE_INLINE_FUNCTION const Font* getFont() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800a33a:	4b1c      	ldr	r3, [pc, #112]	; (800a3ac <_ZN8touchgfx8TextArea12setBaselineYEs+0x94>)
 800a33c:	681b      	ldr	r3, [r3, #0]
 800a33e:	2b00      	cmp	r3, #0
 800a340:	d105      	bne.n	800a34e <_ZN8touchgfx8TextArea12setBaselineYEs+0x36>
 800a342:	4b1b      	ldr	r3, [pc, #108]	; (800a3b0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x98>)
 800a344:	4a1b      	ldr	r2, [pc, #108]	; (800a3b4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x9c>)
 800a346:	216c      	movs	r1, #108	; 0x6c
 800a348:	481b      	ldr	r0, [pc, #108]	; (800a3b8 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa0>)
 800a34a:	f020 fffb 	bl	802b344 <__assert_func>
 800a34e:	68fb      	ldr	r3, [r7, #12]
 800a350:	60bb      	str	r3, [r7, #8]
        return typedTextId < numberOfTypedTexts;
 800a352:	68bb      	ldr	r3, [r7, #8]
 800a354:	889a      	ldrh	r2, [r3, #4]
 800a356:	4b19      	ldr	r3, [pc, #100]	; (800a3bc <_ZN8touchgfx8TextArea12setBaselineYEs+0xa4>)
 800a358:	881b      	ldrh	r3, [r3, #0]
 800a35a:	429a      	cmp	r2, r3
 800a35c:	bf34      	ite	cc
 800a35e:	2301      	movcc	r3, #1
 800a360:	2300      	movcs	r3, #0
 800a362:	b2db      	uxtb	r3, r3
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800a364:	2b00      	cmp	r3, #0
 800a366:	d105      	bne.n	800a374 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>
 800a368:	4b15      	ldr	r3, [pc, #84]	; (800a3c0 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa8>)
 800a36a:	4a12      	ldr	r2, [pc, #72]	; (800a3b4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x9c>)
 800a36c:	216d      	movs	r1, #109	; 0x6d
 800a36e:	4812      	ldr	r0, [pc, #72]	; (800a3b8 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa0>)
 800a370:	f020 ffe8 	bl	802b344 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 800a374:	4b13      	ldr	r3, [pc, #76]	; (800a3c4 <_ZN8touchgfx8TextArea12setBaselineYEs+0xac>)
 800a376:	681a      	ldr	r2, [r3, #0]
 800a378:	4b0c      	ldr	r3, [pc, #48]	; (800a3ac <_ZN8touchgfx8TextArea12setBaselineYEs+0x94>)
 800a37a:	6819      	ldr	r1, [r3, #0]
 800a37c:	68fb      	ldr	r3, [r7, #12]
 800a37e:	889b      	ldrh	r3, [r3, #4]
 800a380:	005b      	lsls	r3, r3, #1
 800a382:	440b      	add	r3, r1
 800a384:	781b      	ldrb	r3, [r3, #0]
 800a386:	009b      	lsls	r3, r3, #2
 800a388:	4413      	add	r3, r2
 800a38a:	681b      	ldr	r3, [r3, #0]
 800a38c:	681a      	ldr	r2, [r3, #0]
 800a38e:	3230      	adds	r2, #48	; 0x30
 800a390:	6812      	ldr	r2, [r2, #0]
 800a392:	4618      	mov	r0, r3
 800a394:	4790      	blx	r2
 800a396:	4603      	mov	r3, r0
 800a398:	1aeb      	subs	r3, r5, r3
 800a39a:	b29b      	uxth	r3, r3
 800a39c:	b21b      	sxth	r3, r3
 800a39e:	4619      	mov	r1, r3
 800a3a0:	4630      	mov	r0, r6
 800a3a2:	47a0      	blx	r4
    }
 800a3a4:	bf00      	nop
 800a3a6:	3714      	adds	r7, #20
 800a3a8:	46bd      	mov	sp, r7
 800a3aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a3ac:	200022a4 	.word	0x200022a4
 800a3b0:	0802c3b8 	.word	0x0802c3b8
 800a3b4:	0802c3fc 	.word	0x0802c3fc
 800a3b8:	0802c438 	.word	0x0802c438
 800a3bc:	200022a8 	.word	0x200022a8
 800a3c0:	0802c47c 	.word	0x0802c47c
 800a3c4:	200022ac 	.word	0x200022ac

0800a3c8 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 800a3c8:	b580      	push	{r7, lr}
 800a3ca:	b082      	sub	sp, #8
 800a3cc:	af00      	add	r7, sp, #0
 800a3ce:	6078      	str	r0, [r7, #4]
 800a3d0:	460b      	mov	r3, r1
 800a3d2:	807b      	strh	r3, [r7, #2]
 800a3d4:	4613      	mov	r3, r2
 800a3d6:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 800a3d8:	687a      	ldr	r2, [r7, #4]
 800a3da:	687b      	ldr	r3, [r7, #4]
 800a3dc:	681b      	ldr	r3, [r3, #0]
 800a3de:	3330      	adds	r3, #48	; 0x30
 800a3e0:	681b      	ldr	r3, [r3, #0]
 800a3e2:	f9b7 1002 	ldrsh.w	r1, [r7, #2]
 800a3e6:	4610      	mov	r0, r2
 800a3e8:	4798      	blx	r3
        setBaselineY(baselineY);
 800a3ea:	687b      	ldr	r3, [r7, #4]
 800a3ec:	681b      	ldr	r3, [r3, #0]
 800a3ee:	3364      	adds	r3, #100	; 0x64
 800a3f0:	681b      	ldr	r3, [r3, #0]
 800a3f2:	f9b7 2000 	ldrsh.w	r2, [r7]
 800a3f6:	4611      	mov	r1, r2
 800a3f8:	6878      	ldr	r0, [r7, #4]
 800a3fa:	4798      	blx	r3
    }
 800a3fc:	bf00      	nop
 800a3fe:	3708      	adds	r7, #8
 800a400:	46bd      	mov	sp, r7
 800a402:	bd80      	pop	{r7, pc}

0800a404 <_ZNK8touchgfx8TextArea12getTypedTextEv>:
    /**
     * Gets the TypedText of the text area.
     *
     * @return The currently used TypedText.
     */
    const TypedText& getTypedText() const
 800a404:	b480      	push	{r7}
 800a406:	b083      	sub	sp, #12
 800a408:	af00      	add	r7, sp, #0
 800a40a:	6078      	str	r0, [r7, #4]
    {
        return typedText;
 800a40c:	687b      	ldr	r3, [r7, #4]
 800a40e:	3328      	adds	r3, #40	; 0x28
    }
 800a410:	4618      	mov	r0, r3
 800a412:	370c      	adds	r7, #12
 800a414:	46bd      	mov	sp, r7
 800a416:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a41a:	4770      	bx	lr

0800a41c <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     *
     * @return A pointer to the second wildcard, if this text area has two wildcards, otherwise 0.
     *
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
 800a41c:	b480      	push	{r7}
 800a41e:	b083      	sub	sp, #12
 800a420:	af00      	add	r7, sp, #0
 800a422:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800a424:	2300      	movs	r3, #0
    }
 800a426:	4618      	mov	r0, r3
 800a428:	370c      	adds	r7, #12
 800a42a:	46bd      	mov	sp, r7
 800a42c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a430:	4770      	bx	lr

0800a432 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>:
        }

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
 800a432:	b580      	push	{r7, lr}
 800a434:	b084      	sub	sp, #16
 800a436:	af02      	add	r7, sp, #8
 800a438:	6078      	str	r0, [r7, #4]
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 800a43a:	6878      	ldr	r0, [r7, #4]
 800a43c:	f04f 33ff 	mov.w	r3, #4294967295
 800a440:	9300      	str	r3, [sp, #0]
 800a442:	f04f 33ff 	mov.w	r3, #4294967295
 800a446:	2200      	movs	r2, #0
 800a448:	2100      	movs	r1, #0
 800a44a:	f7ff fbf1 	bl	8009c30 <_ZN8touchgfx4RectC1Essss>
              text(0)
 800a44e:	687b      	ldr	r3, [r7, #4]
 800a450:	2200      	movs	r2, #0
 800a452:	609a      	str	r2, [r3, #8]
        {
        }
 800a454:	687b      	ldr	r3, [r7, #4]
 800a456:	4618      	mov	r0, r3
 800a458:	3708      	adds	r7, #8
 800a45a:	46bd      	mov	sp, r7
 800a45c:	bd80      	pop	{r7, pc}
	...

0800a460 <_ZN8touchgfx8TextAreaD1Ev>:
class TextArea : public Widget
 800a460:	b580      	push	{r7, lr}
 800a462:	b082      	sub	sp, #8
 800a464:	af00      	add	r7, sp, #0
 800a466:	6078      	str	r0, [r7, #4]
 800a468:	4a08      	ldr	r2, [pc, #32]	; (800a48c <_ZN8touchgfx8TextAreaD1Ev+0x2c>)
 800a46a:	687b      	ldr	r3, [r7, #4]
 800a46c:	601a      	str	r2, [r3, #0]
 800a46e:	687b      	ldr	r3, [r7, #4]
 800a470:	3328      	adds	r3, #40	; 0x28
 800a472:	4618      	mov	r0, r3
 800a474:	f7ff f9ce 	bl	8009814 <_ZN8touchgfx9TypedTextD1Ev>
 800a478:	687b      	ldr	r3, [r7, #4]
 800a47a:	4618      	mov	r0, r3
 800a47c:	f7ff fe48 	bl	800a110 <_ZN8touchgfx6WidgetD1Ev>
 800a480:	687b      	ldr	r3, [r7, #4]
 800a482:	4618      	mov	r0, r3
 800a484:	3708      	adds	r7, #8
 800a486:	46bd      	mov	sp, r7
 800a488:	bd80      	pop	{r7, pc}
 800a48a:	bf00      	nop
 800a48c:	0802f4d0 	.word	0x0802f4d0

0800a490 <_ZN8touchgfx8TextAreaD0Ev>:
 800a490:	b580      	push	{r7, lr}
 800a492:	b082      	sub	sp, #8
 800a494:	af00      	add	r7, sp, #0
 800a496:	6078      	str	r0, [r7, #4]
 800a498:	6878      	ldr	r0, [r7, #4]
 800a49a:	f7ff ffe1 	bl	800a460 <_ZN8touchgfx8TextAreaD1Ev>
 800a49e:	2148      	movs	r1, #72	; 0x48
 800a4a0:	6878      	ldr	r0, [r7, #4]
 800a4a2:	f020 f95e 	bl	802a762 <_ZdlPvj>
 800a4a6:	687b      	ldr	r3, [r7, #4]
 800a4a8:	4618      	mov	r0, r3
 800a4aa:	3708      	adds	r7, #8
 800a4ac:	46bd      	mov	sp, r7
 800a4ae:	bd80      	pop	{r7, pc}

0800a4b0 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    {
    }

    virtual void draw(const Rect& area) const;

    virtual void invalidateContent() const
 800a4b0:	b580      	push	{r7, lr}
 800a4b2:	b082      	sub	sp, #8
 800a4b4:	af00      	add	r7, sp, #0
 800a4b6:	6078      	str	r0, [r7, #4]
    {
        Widget::invalidateContent();
 800a4b8:	687b      	ldr	r3, [r7, #4]
 800a4ba:	4618      	mov	r0, r3
 800a4bc:	f7ff fc38 	bl	8009d30 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 800a4c0:	bf00      	nop
 800a4c2:	3708      	adds	r7, #8
 800a4c4:	46bd      	mov	sp, r7
 800a4c6:	bd80      	pop	{r7, pc}

0800a4c8 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

protected:
    virtual TextArea::BoundingArea calculateBoundingArea() const
 800a4c8:	b580      	push	{r7, lr}
 800a4ca:	b082      	sub	sp, #8
 800a4cc:	af00      	add	r7, sp, #0
 800a4ce:	6078      	str	r0, [r7, #4]
 800a4d0:	6039      	str	r1, [r7, #0]
    {
        return TextArea::BoundingArea();
 800a4d2:	6878      	ldr	r0, [r7, #4]
 800a4d4:	f7ff ffad 	bl	800a432 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 800a4d8:	6878      	ldr	r0, [r7, #4]
 800a4da:	3708      	adds	r7, #8
 800a4dc:	46bd      	mov	sp, r7
 800a4de:	bd80      	pop	{r7, pc}

0800a4e0 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>:
class TextAreaWithWildcardBase : public TextArea
 800a4e0:	b580      	push	{r7, lr}
 800a4e2:	b082      	sub	sp, #8
 800a4e4:	af00      	add	r7, sp, #0
 800a4e6:	6078      	str	r0, [r7, #4]
 800a4e8:	4a05      	ldr	r2, [pc, #20]	; (800a500 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev+0x20>)
 800a4ea:	687b      	ldr	r3, [r7, #4]
 800a4ec:	601a      	str	r2, [r3, #0]
 800a4ee:	687b      	ldr	r3, [r7, #4]
 800a4f0:	4618      	mov	r0, r3
 800a4f2:	f7ff ffb5 	bl	800a460 <_ZN8touchgfx8TextAreaD1Ev>
 800a4f6:	687b      	ldr	r3, [r7, #4]
 800a4f8:	4618      	mov	r0, r3
 800a4fa:	3708      	adds	r7, #8
 800a4fc:	46bd      	mov	sp, r7
 800a4fe:	bd80      	pop	{r7, pc}
 800a500:	0802f724 	.word	0x0802f724

0800a504 <_ZN8touchgfx24TextAreaWithWildcardBaseD0Ev>:
 800a504:	b580      	push	{r7, lr}
 800a506:	b082      	sub	sp, #8
 800a508:	af00      	add	r7, sp, #0
 800a50a:	6078      	str	r0, [r7, #4]
 800a50c:	6878      	ldr	r0, [r7, #4]
 800a50e:	f7ff ffe7 	bl	800a4e0 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>
 800a512:	2148      	movs	r1, #72	; 0x48
 800a514:	6878      	ldr	r0, [r7, #4]
 800a516:	f020 f924 	bl	802a762 <_ZdlPvj>
 800a51a:	687b      	ldr	r3, [r7, #4]
 800a51c:	4618      	mov	r0, r3
 800a51e:	3708      	adds	r7, #8
 800a520:	46bd      	mov	sp, r7
 800a522:	bd80      	pop	{r7, pc}

0800a524 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    void setWildcard1(const Unicode::UnicodeChar* value)
    {
        wc1 = value;
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
 800a524:	b480      	push	{r7}
 800a526:	b083      	sub	sp, #12
 800a528:	af00      	add	r7, sp, #0
 800a52a:	6078      	str	r0, [r7, #4]
    {
        return wc1;
 800a52c:	687b      	ldr	r3, [r7, #4]
 800a52e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
    }
 800a530:	4618      	mov	r0, r3
 800a532:	370c      	adds	r7, #12
 800a534:	46bd      	mov	sp, r7
 800a536:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a53a:	4770      	bx	lr

0800a53c <_ZN8touchgfx12DigitalClock14setDisplayModeENS0_11DisplayModeE>:
     *
     * @param  dm The new display mode.
     *
     * @see DisplayMode, getDisplayMode
     */
    virtual void setDisplayMode(DisplayMode dm)
 800a53c:	b480      	push	{r7}
 800a53e:	b083      	sub	sp, #12
 800a540:	af00      	add	r7, sp, #0
 800a542:	6078      	str	r0, [r7, #4]
 800a544:	460b      	mov	r3, r1
 800a546:	70fb      	strb	r3, [r7, #3]
    {
        displayMode = dm;
 800a548:	687b      	ldr	r3, [r7, #4]
 800a54a:	78fa      	ldrb	r2, [r7, #3]
 800a54c:	f883 202f 	strb.w	r2, [r3, #47]	; 0x2f
    }
 800a550:	bf00      	nop
 800a552:	370c      	adds	r7, #12
 800a554:	46bd      	mov	sp, r7
 800a556:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a55a:	4770      	bx	lr

0800a55c <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>:
     * @param  callback The callback to be executed. The callback will be executed with a
     *                  reference to the AbstractButton.
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
 800a55c:	b480      	push	{r7}
 800a55e:	b083      	sub	sp, #12
 800a560:	af00      	add	r7, sp, #0
 800a562:	6078      	str	r0, [r7, #4]
 800a564:	6039      	str	r1, [r7, #0]
    {
        action = &callback;
 800a566:	687b      	ldr	r3, [r7, #4]
 800a568:	683a      	ldr	r2, [r7, #0]
 800a56a:	629a      	str	r2, [r3, #40]	; 0x28
    }
 800a56c:	bf00      	nop
 800a56e:	370c      	adds	r7, #12
 800a570:	46bd      	mov	sp, r7
 800a572:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a576:	4770      	bx	lr

0800a578 <_ZN8touchgfx14AbstractButtonD1Ev>:
class AbstractButton : public Widget
 800a578:	b580      	push	{r7, lr}
 800a57a:	b082      	sub	sp, #8
 800a57c:	af00      	add	r7, sp, #0
 800a57e:	6078      	str	r0, [r7, #4]
 800a580:	4a05      	ldr	r2, [pc, #20]	; (800a598 <_ZN8touchgfx14AbstractButtonD1Ev+0x20>)
 800a582:	687b      	ldr	r3, [r7, #4]
 800a584:	601a      	str	r2, [r3, #0]
 800a586:	687b      	ldr	r3, [r7, #4]
 800a588:	4618      	mov	r0, r3
 800a58a:	f7ff fdc1 	bl	800a110 <_ZN8touchgfx6WidgetD1Ev>
 800a58e:	687b      	ldr	r3, [r7, #4]
 800a590:	4618      	mov	r0, r3
 800a592:	3708      	adds	r7, #8
 800a594:	46bd      	mov	sp, r7
 800a596:	bd80      	pop	{r7, pc}
 800a598:	0802f2dc 	.word	0x0802f2dc

0800a59c <_ZN8touchgfx14AbstractButtonD0Ev>:
 800a59c:	b580      	push	{r7, lr}
 800a59e:	b082      	sub	sp, #8
 800a5a0:	af00      	add	r7, sp, #0
 800a5a2:	6078      	str	r0, [r7, #4]
 800a5a4:	6878      	ldr	r0, [r7, #4]
 800a5a6:	f7ff ffe7 	bl	800a578 <_ZN8touchgfx14AbstractButtonD1Ev>
 800a5aa:	2130      	movs	r1, #48	; 0x30
 800a5ac:	6878      	ldr	r0, [r7, #4]
 800a5ae:	f020 f8d8 	bl	802a762 <_ZdlPvj>
 800a5b2:	687b      	ldr	r3, [r7, #4]
 800a5b4:	4618      	mov	r0, r3
 800a5b6:	3708      	adds	r7, #8
 800a5b8:	46bd      	mov	sp, r7
 800a5ba:	bd80      	pop	{r7, pc}

0800a5bc <_ZN8touchgfx14ButtonWithIcon8setIconXEs>:
     *           allowed.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
 800a5bc:	b480      	push	{r7}
 800a5be:	b083      	sub	sp, #12
 800a5c0:	af00      	add	r7, sp, #0
 800a5c2:	6078      	str	r0, [r7, #4]
 800a5c4:	460b      	mov	r3, r1
 800a5c6:	807b      	strh	r3, [r7, #2]
    {
        iconX = x;
 800a5c8:	687b      	ldr	r3, [r7, #4]
 800a5ca:	887a      	ldrh	r2, [r7, #2]
 800a5cc:	871a      	strh	r2, [r3, #56]	; 0x38
    }
 800a5ce:	bf00      	nop
 800a5d0:	370c      	adds	r7, #12
 800a5d2:	46bd      	mov	sp, r7
 800a5d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a5d8:	4770      	bx	lr

0800a5da <_ZN8touchgfx14ButtonWithIcon8setIconYEs>:
     *           allowed.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconY(int16_t y)
 800a5da:	b480      	push	{r7}
 800a5dc:	b083      	sub	sp, #12
 800a5de:	af00      	add	r7, sp, #0
 800a5e0:	6078      	str	r0, [r7, #4]
 800a5e2:	460b      	mov	r3, r1
 800a5e4:	807b      	strh	r3, [r7, #2]
    {
        iconY = y;
 800a5e6:	687b      	ldr	r3, [r7, #4]
 800a5e8:	887a      	ldrh	r2, [r7, #2]
 800a5ea:	875a      	strh	r2, [r3, #58]	; 0x3a
    }
 800a5ec:	bf00      	nop
 800a5ee:	370c      	adds	r7, #12
 800a5f0:	46bd      	mov	sp, r7
 800a5f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a5f6:	4770      	bx	lr

0800a5f8 <_ZN8touchgfx14ButtonWithIcon9setIconXYEss>:
     *           allowed.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The values set are overwritten on a subsequent call to setBitmaps.
     */
    void setIconXY(int16_t x, int16_t y)
 800a5f8:	b580      	push	{r7, lr}
 800a5fa:	b082      	sub	sp, #8
 800a5fc:	af00      	add	r7, sp, #0
 800a5fe:	6078      	str	r0, [r7, #4]
 800a600:	460b      	mov	r3, r1
 800a602:	807b      	strh	r3, [r7, #2]
 800a604:	4613      	mov	r3, r2
 800a606:	803b      	strh	r3, [r7, #0]
    {
        setIconX(x);
 800a608:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800a60c:	4619      	mov	r1, r3
 800a60e:	6878      	ldr	r0, [r7, #4]
 800a610:	f7ff ffd4 	bl	800a5bc <_ZN8touchgfx14ButtonWithIcon8setIconXEs>
        setIconY(y);
 800a614:	f9b7 3000 	ldrsh.w	r3, [r7]
 800a618:	4619      	mov	r1, r3
 800a61a:	6878      	ldr	r0, [r7, #4]
 800a61c:	f7ff ffdd 	bl	800a5da <_ZN8touchgfx14ButtonWithIcon8setIconYEs>
    }
 800a620:	bf00      	nop
 800a622:	3708      	adds	r7, #8
 800a624:	46bd      	mov	sp, r7
 800a626:	bd80      	pop	{r7, pc}

0800a628 <_ZN19ClockScreenViewBase11applicationEv>:
    ClockScreenViewBase();
    virtual ~ClockScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
 800a628:	b580      	push	{r7, lr}
 800a62a:	b082      	sub	sp, #8
 800a62c:	af00      	add	r7, sp, #0
 800a62e:	6078      	str	r0, [r7, #4]
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800a630:	f00e fe3a 	bl	80192a8 <_ZN8touchgfx11Application11getInstanceEv>
 800a634:	4603      	mov	r3, r0
    }
 800a636:	4618      	mov	r0, r3
 800a638:	3708      	adds	r7, #8
 800a63a:	46bd      	mov	sp, r7
 800a63c:	bd80      	pop	{r7, pc}
	...

0800a640 <_ZN8touchgfx4ViewI20ClockScreenPresenterED1Ev>:
 * @see Screen
 *
 * @note All views in the application must be a subclass of this type.
 */
template <class T>
class View : public Screen
 800a640:	b580      	push	{r7, lr}
 800a642:	b082      	sub	sp, #8
 800a644:	af00      	add	r7, sp, #0
 800a646:	6078      	str	r0, [r7, #4]
 800a648:	4a05      	ldr	r2, [pc, #20]	; (800a660 <_ZN8touchgfx4ViewI20ClockScreenPresenterED1Ev+0x20>)
 800a64a:	687b      	ldr	r3, [r7, #4]
 800a64c:	601a      	str	r2, [r3, #0]
 800a64e:	687b      	ldr	r3, [r7, #4]
 800a650:	4618      	mov	r0, r3
 800a652:	f7ff fcc1 	bl	8009fd8 <_ZN8touchgfx6ScreenD1Ev>
 800a656:	687b      	ldr	r3, [r7, #4]
 800a658:	4618      	mov	r0, r3
 800a65a:	3708      	adds	r7, #8
 800a65c:	46bd      	mov	sp, r7
 800a65e:	bd80      	pop	{r7, pc}
 800a660:	0802decc 	.word	0x0802decc

0800a664 <_ZN8touchgfx4ViewI20ClockScreenPresenterED0Ev>:
 800a664:	b580      	push	{r7, lr}
 800a666:	b082      	sub	sp, #8
 800a668:	af00      	add	r7, sp, #0
 800a66a:	6078      	str	r0, [r7, #4]
 800a66c:	6878      	ldr	r0, [r7, #4]
 800a66e:	f7ff ffe7 	bl	800a640 <_ZN8touchgfx4ViewI20ClockScreenPresenterED1Ev>
 800a672:	2140      	movs	r1, #64	; 0x40
 800a674:	6878      	ldr	r0, [r7, #4]
 800a676:	f020 f874 	bl	802a762 <_ZdlPvj>
 800a67a:	687b      	ldr	r3, [r7, #4]
 800a67c:	4618      	mov	r0, r3
 800a67e:	3708      	adds	r7, #8
 800a680:	46bd      	mov	sp, r7
 800a682:	bd80      	pop	{r7, pc}

0800a684 <_ZN19ClockScreenViewBaseC1Ev>:
#include <gui_generated/clockscreen_screen/ClockScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

ClockScreenViewBase::ClockScreenViewBase() :
 800a684:	b590      	push	{r4, r7, lr}
 800a686:	b09d      	sub	sp, #116	; 0x74
 800a688:	af02      	add	r7, sp, #8
 800a68a:	6178      	str	r0, [r7, #20]
    buttonCallback(this, &ClockScreenViewBase::buttonCallbackHandler)
 800a68c:	697b      	ldr	r3, [r7, #20]
 800a68e:	4618      	mov	r0, r3
 800a690:	f000 f9ce 	bl	800aa30 <_ZN8touchgfx4ViewI20ClockScreenPresenterEC1Ev>
 800a694:	4ab4      	ldr	r2, [pc, #720]	; (800a968 <_ZN19ClockScreenViewBaseC1Ev+0x2e4>)
 800a696:	697b      	ldr	r3, [r7, #20]
 800a698:	601a      	str	r2, [r3, #0]
 800a69a:	697b      	ldr	r3, [r7, #20]
 800a69c:	3340      	adds	r3, #64	; 0x40
 800a69e:	4618      	mov	r0, r3
 800a6a0:	f7ff fd58 	bl	800a154 <_ZN8touchgfx3BoxC1Ev>
 800a6a4:	697b      	ldr	r3, [r7, #20]
 800a6a6:	336c      	adds	r3, #108	; 0x6c
 800a6a8:	4618      	mov	r0, r3
 800a6aa:	f7ff fd9b 	bl	800a1e4 <_ZN8touchgfx8TextAreaC1Ev>
 800a6ae:	697b      	ldr	r3, [r7, #20]
 800a6b0:	33b4      	adds	r3, #180	; 0xb4
 800a6b2:	4618      	mov	r0, r3
 800a6b4:	f008 fbbe 	bl	8012e34 <_ZN8touchgfx12DigitalClockC1Ev>
 800a6b8:	697b      	ldr	r3, [r7, #20]
 800a6ba:	f503 73a6 	add.w	r3, r3, #332	; 0x14c
 800a6be:	4618      	mov	r0, r3
 800a6c0:	f00c f9d8 	bl	8016a74 <_ZN8touchgfx14ButtonWithIconC1Ev>
 800a6c4:	697b      	ldr	r3, [r7, #20]
 800a6c6:	f503 70c4 	add.w	r0, r3, #392	; 0x188
 800a6ca:	4ba8      	ldr	r3, [pc, #672]	; (800a96c <_ZN19ClockScreenViewBaseC1Ev+0x2e8>)
 800a6cc:	61fb      	str	r3, [r7, #28]
 800a6ce:	2300      	movs	r3, #0
 800a6d0:	623b      	str	r3, [r7, #32]
 800a6d2:	f107 031c 	add.w	r3, r7, #28
 800a6d6:	cb0c      	ldmia	r3, {r2, r3}
 800a6d8:	6979      	ldr	r1, [r7, #20]
 800a6da:	f000 f9cf 	bl	800aa7c <_ZN8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>
{
    __background.setPosition(0, 0, 320, 240);
 800a6de:	697b      	ldr	r3, [r7, #20]
 800a6e0:	f103 0040 	add.w	r0, r3, #64	; 0x40
 800a6e4:	23f0      	movs	r3, #240	; 0xf0
 800a6e6:	9300      	str	r3, [sp, #0]
 800a6e8:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800a6ec:	2200      	movs	r2, #0
 800a6ee:	2100      	movs	r1, #0
 800a6f0:	f7ff fb3c 	bl	8009d6c <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800a6f4:	697b      	ldr	r3, [r7, #20]
 800a6f6:	f103 0440 	add.w	r4, r3, #64	; 0x40
 800a6fa:	2300      	movs	r3, #0
 800a6fc:	f887 3054 	strb.w	r3, [r7, #84]	; 0x54
 800a700:	2300      	movs	r3, #0
 800a702:	f887 3053 	strb.w	r3, [r7, #83]	; 0x53
 800a706:	2300      	movs	r3, #0
 800a708:	f887 3052 	strb.w	r3, [r7, #82]	; 0x52
     *
     * @return The color representation depending on LCD color format.
     */
    FORCE_INLINE_FUNCTION static colortype getColorFromRGB(uint8_t red, uint8_t green, uint8_t blue)
    {
        return 0xFF000000 | (red << 16) | (green << 8) | (blue);
 800a70c:	f897 3054 	ldrb.w	r3, [r7, #84]	; 0x54
 800a710:	041b      	lsls	r3, r3, #16
 800a712:	461a      	mov	r2, r3
 800a714:	f897 3053 	ldrb.w	r3, [r7, #83]	; 0x53
 800a718:	021b      	lsls	r3, r3, #8
 800a71a:	431a      	orrs	r2, r3
 800a71c:	f897 3052 	ldrb.w	r3, [r7, #82]	; 0x52
 800a720:	4313      	orrs	r3, r2
 800a722:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800a726:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800a72a:	4611      	mov	r1, r2
 800a72c:	4618      	mov	r0, r3
 800a72e:	f7ff fa59 	bl	8009be4 <_ZN8touchgfx9colortypeC1Em>
 800a732:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800a734:	4619      	mov	r1, r3
 800a736:	4620      	mov	r0, r4
 800a738:	f7ff fd30 	bl	800a19c <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800a73c:	697a      	ldr	r2, [r7, #20]
 800a73e:	697b      	ldr	r3, [r7, #20]
 800a740:	3340      	adds	r3, #64	; 0x40
 800a742:	4619      	mov	r1, r3
 800a744:	4610      	mov	r0, r2
 800a746:	f7ff fc9f 	bl	800a088 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    Clock_text.setXY(106, 10);
 800a74a:	697b      	ldr	r3, [r7, #20]
 800a74c:	336c      	adds	r3, #108	; 0x6c
 800a74e:	220a      	movs	r2, #10
 800a750:	216a      	movs	r1, #106	; 0x6a
 800a752:	4618      	mov	r0, r3
 800a754:	f7ff fb49 	bl	8009dea <_ZN8touchgfx8Drawable5setXYEss>
    Clock_text.setColor(touchgfx::Color::getColorFromRGB(242, 174, 174));
 800a758:	697b      	ldr	r3, [r7, #20]
 800a75a:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 800a75e:	23f2      	movs	r3, #242	; 0xf2
 800a760:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57
 800a764:	23ae      	movs	r3, #174	; 0xae
 800a766:	f887 3056 	strb.w	r3, [r7, #86]	; 0x56
 800a76a:	23ae      	movs	r3, #174	; 0xae
 800a76c:	f887 3055 	strb.w	r3, [r7, #85]	; 0x55
 800a770:	f897 3057 	ldrb.w	r3, [r7, #87]	; 0x57
 800a774:	041b      	lsls	r3, r3, #16
 800a776:	461a      	mov	r2, r3
 800a778:	f897 3056 	ldrb.w	r3, [r7, #86]	; 0x56
 800a77c:	021b      	lsls	r3, r3, #8
 800a77e:	431a      	orrs	r2, r3
 800a780:	f897 3055 	ldrb.w	r3, [r7, #85]	; 0x55
 800a784:	4313      	orrs	r3, r2
 800a786:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800a78a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800a78e:	4611      	mov	r1, r2
 800a790:	4618      	mov	r0, r3
 800a792:	f7ff fa27 	bl	8009be4 <_ZN8touchgfx9colortypeC1Em>
 800a796:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800a798:	65bc      	str	r4, [r7, #88]	; 0x58
 800a79a:	61bb      	str	r3, [r7, #24]
        color = newColor;
 800a79c:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 800a79e:	69ba      	ldr	r2, [r7, #24]
 800a7a0:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800a7a2:	bf00      	nop
    Clock_text.setLinespacing(0);
 800a7a4:	697b      	ldr	r3, [r7, #20]
 800a7a6:	336c      	adds	r3, #108	; 0x6c
 800a7a8:	663b      	str	r3, [r7, #96]	; 0x60
 800a7aa:	2300      	movs	r3, #0
 800a7ac:	f8a7 305e 	strh.w	r3, [r7, #94]	; 0x5e
        linespace = space;
 800a7b0:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800a7b2:	f8b7 205e 	ldrh.w	r2, [r7, #94]	; 0x5e
 800a7b6:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800a7b8:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800a7ba:	681b      	ldr	r3, [r3, #0]
 800a7bc:	3384      	adds	r3, #132	; 0x84
 800a7be:	681b      	ldr	r3, [r3, #0]
 800a7c0:	6e3c      	ldr	r4, [r7, #96]	; 0x60
 800a7c2:	463a      	mov	r2, r7
 800a7c4:	6e39      	ldr	r1, [r7, #96]	; 0x60
 800a7c6:	4610      	mov	r0, r2
 800a7c8:	4798      	blx	r3
 800a7ca:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800a7ce:	463a      	mov	r2, r7
 800a7d0:	ca07      	ldmia	r2, {r0, r1, r2}
 800a7d2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800a7d6:	bf00      	nop
    Clock_text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_XHQB));
 800a7d8:	697b      	ldr	r3, [r7, #20]
 800a7da:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 800a7de:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800a7e2:	210b      	movs	r1, #11
 800a7e4:	4618      	mov	r0, r3
 800a7e6:	f7ff fce7 	bl	800a1b8 <_ZN8touchgfx9TypedTextC1Et>
 800a7ea:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800a7ee:	4619      	mov	r1, r3
 800a7f0:	4620      	mov	r0, r4
 800a7f2:	f00b fd29 	bl	8016248 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800a7f6:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800a7fa:	4618      	mov	r0, r3
 800a7fc:	f7ff f80a 	bl	8009814 <_ZN8touchgfx9TypedTextD1Ev>
    add(Clock_text);
 800a800:	697a      	ldr	r2, [r7, #20]
 800a802:	697b      	ldr	r3, [r7, #20]
 800a804:	336c      	adds	r3, #108	; 0x6c
 800a806:	4619      	mov	r1, r3
 800a808:	4610      	mov	r0, r2
 800a80a:	f7ff fc3d 	bl	800a088 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    Clock.setPosition(89, 93, 196, 55);
 800a80e:	697b      	ldr	r3, [r7, #20]
 800a810:	f103 00b4 	add.w	r0, r3, #180	; 0xb4
 800a814:	2337      	movs	r3, #55	; 0x37
 800a816:	9300      	str	r3, [sp, #0]
 800a818:	23c4      	movs	r3, #196	; 0xc4
 800a81a:	225d      	movs	r2, #93	; 0x5d
 800a81c:	2159      	movs	r1, #89	; 0x59
 800a81e:	f7ff faa5 	bl	8009d6c <_ZN8touchgfx8Drawable11setPositionEssss>
    Clock.setColor(touchgfx::Color::getColorFromRGB(237, 157, 157));
 800a822:	697b      	ldr	r3, [r7, #20]
 800a824:	f103 04b4 	add.w	r4, r3, #180	; 0xb4
 800a828:	23ed      	movs	r3, #237	; 0xed
 800a82a:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
 800a82e:	239d      	movs	r3, #157	; 0x9d
 800a830:	f887 3066 	strb.w	r3, [r7, #102]	; 0x66
 800a834:	239d      	movs	r3, #157	; 0x9d
 800a836:	f887 3065 	strb.w	r3, [r7, #101]	; 0x65
 800a83a:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 800a83e:	041b      	lsls	r3, r3, #16
 800a840:	461a      	mov	r2, r3
 800a842:	f897 3066 	ldrb.w	r3, [r7, #102]	; 0x66
 800a846:	021b      	lsls	r3, r3, #8
 800a848:	431a      	orrs	r2, r3
 800a84a:	f897 3065 	ldrb.w	r3, [r7, #101]	; 0x65
 800a84e:	4313      	orrs	r3, r2
 800a850:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800a854:	f107 0344 	add.w	r3, r7, #68	; 0x44
 800a858:	4611      	mov	r1, r2
 800a85a:	4618      	mov	r0, r3
 800a85c:	f7ff f9c2 	bl	8009be4 <_ZN8touchgfx9colortypeC1Em>
 800a860:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800a862:	4619      	mov	r1, r3
 800a864:	4620      	mov	r0, r4
 800a866:	f008 fa2b 	bl	8012cc0 <_ZN8touchgfx12DigitalClock8setColorENS_9colortypeE>
    Clock.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8RXH));
 800a86a:	697b      	ldr	r3, [r7, #20]
 800a86c:	f103 04b4 	add.w	r4, r3, #180	; 0xb4
 800a870:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800a874:	210a      	movs	r1, #10
 800a876:	4618      	mov	r0, r3
 800a878:	f7ff fc9e 	bl	800a1b8 <_ZN8touchgfx9TypedTextC1Et>
 800a87c:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800a880:	4619      	mov	r1, r3
 800a882:	4620      	mov	r0, r4
 800a884:	f008 fa27 	bl	8012cd6 <_ZN8touchgfx12DigitalClock12setTypedTextENS_9TypedTextE>
 800a888:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800a88c:	4618      	mov	r0, r3
 800a88e:	f7fe ffc1 	bl	8009814 <_ZN8touchgfx9TypedTextD1Ev>
    Clock.displayLeadingZeroForHourIndicator(true);
 800a892:	697b      	ldr	r3, [r7, #20]
 800a894:	33b4      	adds	r3, #180	; 0xb4
 800a896:	2101      	movs	r1, #1
 800a898:	4618      	mov	r0, r3
 800a89a:	f008 fb19 	bl	8012ed0 <_ZN8touchgfx12DigitalClock34displayLeadingZeroForHourIndicatorEb>
    Clock.setDisplayMode(touchgfx::DigitalClock::DISPLAY_24_HOUR);
 800a89e:	697b      	ldr	r3, [r7, #20]
 800a8a0:	33b4      	adds	r3, #180	; 0xb4
 800a8a2:	2103      	movs	r1, #3
 800a8a4:	4618      	mov	r0, r3
 800a8a6:	f7ff fe49 	bl	800a53c <_ZN8touchgfx12DigitalClock14setDisplayModeENS0_11DisplayModeE>
    Clock.setTime24Hour(10, 10, 0);
 800a8aa:	697b      	ldr	r3, [r7, #20]
 800a8ac:	f103 00b4 	add.w	r0, r3, #180	; 0xb4
 800a8b0:	2300      	movs	r3, #0
 800a8b2:	220a      	movs	r2, #10
 800a8b4:	210a      	movs	r1, #10
 800a8b6:	f008 fb0e 	bl	8012ed6 <_ZN8touchgfx13AbstractClock13setTime24HourEhhh>
    add(Clock);
 800a8ba:	697a      	ldr	r2, [r7, #20]
 800a8bc:	697b      	ldr	r3, [r7, #20]
 800a8be:	33b4      	adds	r3, #180	; 0xb4
 800a8c0:	4619      	mov	r1, r3
 800a8c2:	4610      	mov	r0, r2
 800a8c4:	f7ff fbe0 	bl	800a088 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    Back_button.setXY(12, 90);
 800a8c8:	697b      	ldr	r3, [r7, #20]
 800a8ca:	f503 73a6 	add.w	r3, r3, #332	; 0x14c
 800a8ce:	225a      	movs	r2, #90	; 0x5a
 800a8d0:	210c      	movs	r1, #12
 800a8d2:	4618      	mov	r0, r3
 800a8d4:	f7ff fa89 	bl	8009dea <_ZN8touchgfx8Drawable5setXYEss>
    Back_button.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID));
 800a8d8:	697b      	ldr	r3, [r7, #20]
 800a8da:	f503 74a6 	add.w	r4, r3, #332	; 0x14c
 800a8de:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800a8e2:	2100      	movs	r1, #0
 800a8e4:	4618      	mov	r0, r3
 800a8e6:	f7ff f9c3 	bl	8009c70 <_ZN8touchgfx6BitmapC1Et>
 800a8ea:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800a8ee:	2101      	movs	r1, #1
 800a8f0:	4618      	mov	r0, r3
 800a8f2:	f7ff f9bd 	bl	8009c70 <_ZN8touchgfx6BitmapC1Et>
 800a8f6:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800a8fa:	2104      	movs	r1, #4
 800a8fc:	4618      	mov	r0, r3
 800a8fe:	f7ff f9b7 	bl	8009c70 <_ZN8touchgfx6BitmapC1Et>
 800a902:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800a906:	2104      	movs	r1, #4
 800a908:	4618      	mov	r0, r3
 800a90a:	f7ff f9b1 	bl	8009c70 <_ZN8touchgfx6BitmapC1Et>
 800a90e:	f107 003c 	add.w	r0, r7, #60	; 0x3c
 800a912:	f107 0238 	add.w	r2, r7, #56	; 0x38
 800a916:	f107 0134 	add.w	r1, r7, #52	; 0x34
 800a91a:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800a91e:	9300      	str	r3, [sp, #0]
 800a920:	4603      	mov	r3, r0
 800a922:	4620      	mov	r0, r4
 800a924:	f00c f810 	bl	8016948 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    Back_button.setIconXY(5, 5);
 800a928:	697b      	ldr	r3, [r7, #20]
 800a92a:	f503 73a6 	add.w	r3, r3, #332	; 0x14c
 800a92e:	2205      	movs	r2, #5
 800a930:	2105      	movs	r1, #5
 800a932:	4618      	mov	r0, r3
 800a934:	f7ff fe60 	bl	800a5f8 <_ZN8touchgfx14ButtonWithIcon9setIconXYEss>
    Back_button.setAction(buttonCallback);
 800a938:	697b      	ldr	r3, [r7, #20]
 800a93a:	f503 72a6 	add.w	r2, r3, #332	; 0x14c
 800a93e:	697b      	ldr	r3, [r7, #20]
 800a940:	f503 73c4 	add.w	r3, r3, #392	; 0x188
 800a944:	4619      	mov	r1, r3
 800a946:	4610      	mov	r0, r2
 800a948:	f7ff fe08 	bl	800a55c <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
    add(Back_button);
 800a94c:	697a      	ldr	r2, [r7, #20]
 800a94e:	697b      	ldr	r3, [r7, #20]
 800a950:	f503 73a6 	add.w	r3, r3, #332	; 0x14c
 800a954:	4619      	mov	r1, r3
 800a956:	4610      	mov	r0, r2
 800a958:	f7ff fb96 	bl	800a088 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800a95c:	697b      	ldr	r3, [r7, #20]
 800a95e:	4618      	mov	r0, r3
 800a960:	376c      	adds	r7, #108	; 0x6c
 800a962:	46bd      	mov	sp, r7
 800a964:	bd90      	pop	{r4, r7, pc}
 800a966:	bf00      	nop
 800a968:	0802de80 	.word	0x0802de80
 800a96c:	0800aa03 	.word	0x0800aa03

0800a970 <_ZN19ClockScreenViewBaseD1Ev>:

ClockScreenViewBase::~ClockScreenViewBase()
 800a970:	b580      	push	{r7, lr}
 800a972:	b082      	sub	sp, #8
 800a974:	af00      	add	r7, sp, #0
 800a976:	6078      	str	r0, [r7, #4]
 800a978:	4a13      	ldr	r2, [pc, #76]	; (800a9c8 <_ZN19ClockScreenViewBaseD1Ev+0x58>)
 800a97a:	687b      	ldr	r3, [r7, #4]
 800a97c:	601a      	str	r2, [r3, #0]
 800a97e:	687b      	ldr	r3, [r7, #4]
 800a980:	f503 73c4 	add.w	r3, r3, #392	; 0x188
 800a984:	4618      	mov	r0, r3
 800a986:	f000 f8b9 	bl	800aafc <_ZN8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800a98a:	687b      	ldr	r3, [r7, #4]
 800a98c:	f503 73a6 	add.w	r3, r3, #332	; 0x14c
 800a990:	4618      	mov	r0, r3
 800a992:	f000 f9a7 	bl	800ace4 <_ZN8touchgfx14ButtonWithIconD1Ev>
 800a996:	687b      	ldr	r3, [r7, #4]
 800a998:	33b4      	adds	r3, #180	; 0xb4
 800a99a:	4618      	mov	r0, r3
 800a99c:	f000 f958 	bl	800ac50 <_ZN8touchgfx12DigitalClockD1Ev>
 800a9a0:	687b      	ldr	r3, [r7, #4]
 800a9a2:	336c      	adds	r3, #108	; 0x6c
 800a9a4:	4618      	mov	r0, r3
 800a9a6:	f7ff fd5b 	bl	800a460 <_ZN8touchgfx8TextAreaD1Ev>
 800a9aa:	687b      	ldr	r3, [r7, #4]
 800a9ac:	3340      	adds	r3, #64	; 0x40
 800a9ae:	4618      	mov	r0, r3
 800a9b0:	f000 f90a 	bl	800abc8 <_ZN8touchgfx3BoxD1Ev>
 800a9b4:	687b      	ldr	r3, [r7, #4]
 800a9b6:	4618      	mov	r0, r3
 800a9b8:	f7ff fe42 	bl	800a640 <_ZN8touchgfx4ViewI20ClockScreenPresenterED1Ev>
{

}
 800a9bc:	687b      	ldr	r3, [r7, #4]
 800a9be:	4618      	mov	r0, r3
 800a9c0:	3708      	adds	r7, #8
 800a9c2:	46bd      	mov	sp, r7
 800a9c4:	bd80      	pop	{r7, pc}
 800a9c6:	bf00      	nop
 800a9c8:	0802de80 	.word	0x0802de80

0800a9cc <_ZN19ClockScreenViewBaseD0Ev>:
ClockScreenViewBase::~ClockScreenViewBase()
 800a9cc:	b580      	push	{r7, lr}
 800a9ce:	b082      	sub	sp, #8
 800a9d0:	af00      	add	r7, sp, #0
 800a9d2:	6078      	str	r0, [r7, #4]
}
 800a9d4:	6878      	ldr	r0, [r7, #4]
 800a9d6:	f7ff ffcb 	bl	800a970 <_ZN19ClockScreenViewBaseD1Ev>
 800a9da:	f44f 71cc 	mov.w	r1, #408	; 0x198
 800a9de:	6878      	ldr	r0, [r7, #4]
 800a9e0:	f01f febf 	bl	802a762 <_ZdlPvj>
 800a9e4:	687b      	ldr	r3, [r7, #4]
 800a9e6:	4618      	mov	r0, r3
 800a9e8:	3708      	adds	r7, #8
 800a9ea:	46bd      	mov	sp, r7
 800a9ec:	bd80      	pop	{r7, pc}

0800a9ee <_ZN19ClockScreenViewBase11setupScreenEv>:

void ClockScreenViewBase::setupScreen()
{
 800a9ee:	b480      	push	{r7}
 800a9f0:	b083      	sub	sp, #12
 800a9f2:	af00      	add	r7, sp, #0
 800a9f4:	6078      	str	r0, [r7, #4]

}
 800a9f6:	bf00      	nop
 800a9f8:	370c      	adds	r7, #12
 800a9fa:	46bd      	mov	sp, r7
 800a9fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa00:	4770      	bx	lr

0800aa02 <_ZN19ClockScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void ClockScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800aa02:	b580      	push	{r7, lr}
 800aa04:	b082      	sub	sp, #8
 800aa06:	af00      	add	r7, sp, #0
 800aa08:	6078      	str	r0, [r7, #4]
 800aa0a:	6039      	str	r1, [r7, #0]
    if (&src == &Back_button)
 800aa0c:	687b      	ldr	r3, [r7, #4]
 800aa0e:	f503 73a6 	add.w	r3, r3, #332	; 0x14c
 800aa12:	683a      	ldr	r2, [r7, #0]
 800aa14:	429a      	cmp	r2, r3
 800aa16:	d106      	bne.n	800aa26 <_ZN19ClockScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x24>
    {
        //ClockToMain
        //When Back_button clicked change screen to MainScreen
        //Go to MainScreen with screen transition towards West
        application().gotoMainScreenScreenSlideTransitionWest();
 800aa18:	6878      	ldr	r0, [r7, #4]
 800aa1a:	f7ff fe05 	bl	800a628 <_ZN19ClockScreenViewBase11applicationEv>
 800aa1e:	4603      	mov	r3, r0
 800aa20:	4618      	mov	r0, r3
 800aa22:	f000 fc9f 	bl	800b364 <_ZN23FrontendApplicationBase39gotoMainScreenScreenSlideTransitionWestEv>
    }
}
 800aa26:	bf00      	nop
 800aa28:	3708      	adds	r7, #8
 800aa2a:	46bd      	mov	sp, r7
 800aa2c:	bd80      	pop	{r7, pc}
	...

0800aa30 <_ZN8touchgfx4ViewI20ClockScreenPresenterEC1Ev>:
{
public:
    View()
 800aa30:	b580      	push	{r7, lr}
 800aa32:	b082      	sub	sp, #8
 800aa34:	af00      	add	r7, sp, #0
 800aa36:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800aa38:	687b      	ldr	r3, [r7, #4]
 800aa3a:	4618      	mov	r0, r3
 800aa3c:	f010 f842 	bl	801aac4 <_ZN8touchgfx6ScreenC1Ev>
 800aa40:	4a05      	ldr	r2, [pc, #20]	; (800aa58 <_ZN8touchgfx4ViewI20ClockScreenPresenterEC1Ev+0x28>)
 800aa42:	687b      	ldr	r3, [r7, #4]
 800aa44:	601a      	str	r2, [r3, #0]
 800aa46:	687b      	ldr	r3, [r7, #4]
 800aa48:	2200      	movs	r2, #0
 800aa4a:	63da      	str	r2, [r3, #60]	; 0x3c
    {
    }
 800aa4c:	687b      	ldr	r3, [r7, #4]
 800aa4e:	4618      	mov	r0, r3
 800aa50:	3708      	adds	r7, #8
 800aa52:	46bd      	mov	sp, r7
 800aa54:	bd80      	pop	{r7, pc}
 800aa56:	bf00      	nop
 800aa58:	0802decc 	.word	0x0802decc

0800aa5c <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>:
 *
 * @note As with Callback, this class exists in four versions to support callback functions
 *       taking zero, one, two or three arguments.
 */
template <class T1>
class GenericCallback<T1, void, void>
 800aa5c:	b480      	push	{r7}
 800aa5e:	b083      	sub	sp, #12
 800aa60:	af00      	add	r7, sp, #0
 800aa62:	6078      	str	r0, [r7, #4]
 800aa64:	4a04      	ldr	r2, [pc, #16]	; (800aa78 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev+0x1c>)
 800aa66:	687b      	ldr	r3, [r7, #4]
 800aa68:	601a      	str	r2, [r3, #0]
 800aa6a:	687b      	ldr	r3, [r7, #4]
 800aa6c:	4618      	mov	r0, r3
 800aa6e:	370c      	adds	r7, #12
 800aa70:	46bd      	mov	sp, r7
 800aa72:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa76:	4770      	bx	lr
 800aa78:	0802df00 	.word	0x0802df00

0800aa7c <_ZN8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>:
     *
     * @param [in] pObject   Pointer to the object on which the function should be called.
     * @param [in] pmemfun_1 Address of member function. This is the version where function takes one
     *                       argument.
     */
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800aa7c:	b580      	push	{r7, lr}
 800aa7e:	b084      	sub	sp, #16
 800aa80:	af00      	add	r7, sp, #0
 800aa82:	60f8      	str	r0, [r7, #12]
 800aa84:	60b9      	str	r1, [r7, #8]
 800aa86:	4639      	mov	r1, r7
 800aa88:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800aa8c:	68fb      	ldr	r3, [r7, #12]
 800aa8e:	4618      	mov	r0, r3
 800aa90:	f7ff ffe4 	bl	800aa5c <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>
 800aa94:	4a08      	ldr	r2, [pc, #32]	; (800aab8 <_ZN8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800aa96:	68fb      	ldr	r3, [r7, #12]
 800aa98:	601a      	str	r2, [r3, #0]
 800aa9a:	68fb      	ldr	r3, [r7, #12]
 800aa9c:	68ba      	ldr	r2, [r7, #8]
 800aa9e:	605a      	str	r2, [r3, #4]
 800aaa0:	68fb      	ldr	r3, [r7, #12]
 800aaa2:	3308      	adds	r3, #8
 800aaa4:	463a      	mov	r2, r7
 800aaa6:	e892 0003 	ldmia.w	r2, {r0, r1}
 800aaaa:	e883 0003 	stmia.w	r3, {r0, r1}
    {
    }
 800aaae:	68fb      	ldr	r3, [r7, #12]
 800aab0:	4618      	mov	r0, r3
 800aab2:	3710      	adds	r7, #16
 800aab4:	46bd      	mov	sp, r7
 800aab6:	bd80      	pop	{r7, pc}
 800aab8:	0802deb4 	.word	0x0802deb4

0800aabc <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>:
    virtual ~GenericCallback()
 800aabc:	b480      	push	{r7}
 800aabe:	b083      	sub	sp, #12
 800aac0:	af00      	add	r7, sp, #0
 800aac2:	6078      	str	r0, [r7, #4]
    }
 800aac4:	4a04      	ldr	r2, [pc, #16]	; (800aad8 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev+0x1c>)
 800aac6:	687b      	ldr	r3, [r7, #4]
 800aac8:	601a      	str	r2, [r3, #0]
 800aaca:	687b      	ldr	r3, [r7, #4]
 800aacc:	4618      	mov	r0, r3
 800aace:	370c      	adds	r7, #12
 800aad0:	46bd      	mov	sp, r7
 800aad2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aad6:	4770      	bx	lr
 800aad8:	0802df00 	.word	0x0802df00

0800aadc <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED0Ev>:
    virtual ~GenericCallback()
 800aadc:	b580      	push	{r7, lr}
 800aade:	b082      	sub	sp, #8
 800aae0:	af00      	add	r7, sp, #0
 800aae2:	6078      	str	r0, [r7, #4]
    }
 800aae4:	6878      	ldr	r0, [r7, #4]
 800aae6:	f7ff ffe9 	bl	800aabc <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800aaea:	2104      	movs	r1, #4
 800aaec:	6878      	ldr	r0, [r7, #4]
 800aaee:	f01f fe38 	bl	802a762 <_ZdlPvj>
 800aaf2:	687b      	ldr	r3, [r7, #4]
 800aaf4:	4618      	mov	r0, r3
 800aaf6:	3708      	adds	r7, #8
 800aaf8:	46bd      	mov	sp, r7
 800aafa:	bd80      	pop	{r7, pc}

0800aafc <_ZN8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800aafc:	b580      	push	{r7, lr}
 800aafe:	b082      	sub	sp, #8
 800ab00:	af00      	add	r7, sp, #0
 800ab02:	6078      	str	r0, [r7, #4]
 800ab04:	4a05      	ldr	r2, [pc, #20]	; (800ab1c <_ZN8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvED1Ev+0x20>)
 800ab06:	687b      	ldr	r3, [r7, #4]
 800ab08:	601a      	str	r2, [r3, #0]
 800ab0a:	687b      	ldr	r3, [r7, #4]
 800ab0c:	4618      	mov	r0, r3
 800ab0e:	f7ff ffd5 	bl	800aabc <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800ab12:	687b      	ldr	r3, [r7, #4]
 800ab14:	4618      	mov	r0, r3
 800ab16:	3708      	adds	r7, #8
 800ab18:	46bd      	mov	sp, r7
 800ab1a:	bd80      	pop	{r7, pc}
 800ab1c:	0802deb4 	.word	0x0802deb4

0800ab20 <_ZN8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
 800ab20:	b580      	push	{r7, lr}
 800ab22:	b082      	sub	sp, #8
 800ab24:	af00      	add	r7, sp, #0
 800ab26:	6078      	str	r0, [r7, #4]
 800ab28:	6878      	ldr	r0, [r7, #4]
 800ab2a:	f7ff ffe7 	bl	800aafc <_ZN8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800ab2e:	2110      	movs	r1, #16
 800ab30:	6878      	ldr	r0, [r7, #4]
 800ab32:	f01f fe16 	bl	802a762 <_ZdlPvj>
 800ab36:	687b      	ldr	r3, [r7, #4]
 800ab38:	4618      	mov	r0, r3
 800ab3a:	3708      	adds	r7, #8
 800ab3c:	46bd      	mov	sp, r7
 800ab3e:	bd80      	pop	{r7, pc}

0800ab40 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 800ab40:	b580      	push	{r7, lr}
 800ab42:	b082      	sub	sp, #8
 800ab44:	af00      	add	r7, sp, #0
 800ab46:	6078      	str	r0, [r7, #4]
 800ab48:	4a05      	ldr	r2, [pc, #20]	; (800ab60 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev+0x20>)
 800ab4a:	687b      	ldr	r3, [r7, #4]
 800ab4c:	601a      	str	r2, [r3, #0]
 800ab4e:	687b      	ldr	r3, [r7, #4]
 800ab50:	4618      	mov	r0, r3
 800ab52:	f7ff fcc5 	bl	800a4e0 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>
 800ab56:	687b      	ldr	r3, [r7, #4]
 800ab58:	4618      	mov	r0, r3
 800ab5a:	3708      	adds	r7, #8
 800ab5c:	46bd      	mov	sp, r7
 800ab5e:	bd80      	pop	{r7, pc}
 800ab60:	0802df18 	.word	0x0802df18

0800ab64 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 800ab64:	b580      	push	{r7, lr}
 800ab66:	b082      	sub	sp, #8
 800ab68:	af00      	add	r7, sp, #0
 800ab6a:	6078      	str	r0, [r7, #4]
 800ab6c:	6878      	ldr	r0, [r7, #4]
 800ab6e:	f7ff ffe7 	bl	800ab40 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800ab72:	214c      	movs	r1, #76	; 0x4c
 800ab74:	6878      	ldr	r0, [r7, #4]
 800ab76:	f01f fdf4 	bl	802a762 <_ZdlPvj>
 800ab7a:	687b      	ldr	r3, [r7, #4]
 800ab7c:	4618      	mov	r0, r3
 800ab7e:	3708      	adds	r7, #8
 800ab80:	46bd      	mov	sp, r7
 800ab82:	bd80      	pop	{r7, pc}

0800ab84 <_ZN8touchgfx9ContainerD1Ev>:
 * intersect with the geometry of the container will be visible (e.g. setting a
 * container's width to 0 will render all children invisible).
 *
 * @see Drawable
 */
class Container : public Drawable
 800ab84:	b580      	push	{r7, lr}
 800ab86:	b082      	sub	sp, #8
 800ab88:	af00      	add	r7, sp, #0
 800ab8a:	6078      	str	r0, [r7, #4]
 800ab8c:	4a05      	ldr	r2, [pc, #20]	; (800aba4 <_ZN8touchgfx9ContainerD1Ev+0x20>)
 800ab8e:	687b      	ldr	r3, [r7, #4]
 800ab90:	601a      	str	r2, [r3, #0]
 800ab92:	687b      	ldr	r3, [r7, #4]
 800ab94:	4618      	mov	r0, r3
 800ab96:	f7ff f8ab 	bl	8009cf0 <_ZN8touchgfx8DrawableD1Ev>
 800ab9a:	687b      	ldr	r3, [r7, #4]
 800ab9c:	4618      	mov	r0, r3
 800ab9e:	3708      	adds	r7, #8
 800aba0:	46bd      	mov	sp, r7
 800aba2:	bd80      	pop	{r7, pc}
 800aba4:	0802ef4c 	.word	0x0802ef4c

0800aba8 <_ZN8touchgfx9ContainerD0Ev>:
 800aba8:	b580      	push	{r7, lr}
 800abaa:	b082      	sub	sp, #8
 800abac:	af00      	add	r7, sp, #0
 800abae:	6078      	str	r0, [r7, #4]
 800abb0:	6878      	ldr	r0, [r7, #4]
 800abb2:	f7ff ffe7 	bl	800ab84 <_ZN8touchgfx9ContainerD1Ev>
 800abb6:	212c      	movs	r1, #44	; 0x2c
 800abb8:	6878      	ldr	r0, [r7, #4]
 800abba:	f01f fdd2 	bl	802a762 <_ZdlPvj>
 800abbe:	687b      	ldr	r3, [r7, #4]
 800abc0:	4618      	mov	r0, r3
 800abc2:	3708      	adds	r7, #8
 800abc4:	46bd      	mov	sp, r7
 800abc6:	bd80      	pop	{r7, pc}

0800abc8 <_ZN8touchgfx3BoxD1Ev>:
class Box : public Widget
 800abc8:	b580      	push	{r7, lr}
 800abca:	b082      	sub	sp, #8
 800abcc:	af00      	add	r7, sp, #0
 800abce:	6078      	str	r0, [r7, #4]
 800abd0:	4a05      	ldr	r2, [pc, #20]	; (800abe8 <_ZN8touchgfx3BoxD1Ev+0x20>)
 800abd2:	687b      	ldr	r3, [r7, #4]
 800abd4:	601a      	str	r2, [r3, #0]
 800abd6:	687b      	ldr	r3, [r7, #4]
 800abd8:	4618      	mov	r0, r3
 800abda:	f7ff fa99 	bl	800a110 <_ZN8touchgfx6WidgetD1Ev>
 800abde:	687b      	ldr	r3, [r7, #4]
 800abe0:	4618      	mov	r0, r3
 800abe2:	3708      	adds	r7, #8
 800abe4:	46bd      	mov	sp, r7
 800abe6:	bd80      	pop	{r7, pc}
 800abe8:	0802f560 	.word	0x0802f560

0800abec <_ZN8touchgfx3BoxD0Ev>:
 800abec:	b580      	push	{r7, lr}
 800abee:	b082      	sub	sp, #8
 800abf0:	af00      	add	r7, sp, #0
 800abf2:	6078      	str	r0, [r7, #4]
 800abf4:	6878      	ldr	r0, [r7, #4]
 800abf6:	f7ff ffe7 	bl	800abc8 <_ZN8touchgfx3BoxD1Ev>
 800abfa:	212c      	movs	r1, #44	; 0x2c
 800abfc:	6878      	ldr	r0, [r7, #4]
 800abfe:	f01f fdb0 	bl	802a762 <_ZdlPvj>
 800ac02:	687b      	ldr	r3, [r7, #4]
 800ac04:	4618      	mov	r0, r3
 800ac06:	3708      	adds	r7, #8
 800ac08:	46bd      	mov	sp, r7
 800ac0a:	bd80      	pop	{r7, pc}

0800ac0c <_ZN8touchgfx13AbstractClockD1Ev>:
 * Superclass of clock widgets. Allows the hour, minute and second of the clock to be set and
 * read.
 *
 * @see AnalogClock, DigitalClock
 */
class AbstractClock : public Container
 800ac0c:	b580      	push	{r7, lr}
 800ac0e:	b082      	sub	sp, #8
 800ac10:	af00      	add	r7, sp, #0
 800ac12:	6078      	str	r0, [r7, #4]
 800ac14:	4a05      	ldr	r2, [pc, #20]	; (800ac2c <_ZN8touchgfx13AbstractClockD1Ev+0x20>)
 800ac16:	687b      	ldr	r3, [r7, #4]
 800ac18:	601a      	str	r2, [r3, #0]
 800ac1a:	687b      	ldr	r3, [r7, #4]
 800ac1c:	4618      	mov	r0, r3
 800ac1e:	f7ff ffb1 	bl	800ab84 <_ZN8touchgfx9ContainerD1Ev>
 800ac22:	687b      	ldr	r3, [r7, #4]
 800ac24:	4618      	mov	r0, r3
 800ac26:	3708      	adds	r7, #8
 800ac28:	46bd      	mov	sp, r7
 800ac2a:	bd80      	pop	{r7, pc}
 800ac2c:	0802eeb0 	.word	0x0802eeb0

0800ac30 <_ZN8touchgfx13AbstractClockD0Ev>:
 800ac30:	b580      	push	{r7, lr}
 800ac32:	b082      	sub	sp, #8
 800ac34:	af00      	add	r7, sp, #0
 800ac36:	6078      	str	r0, [r7, #4]
 800ac38:	6878      	ldr	r0, [r7, #4]
 800ac3a:	f7ff ffe7 	bl	800ac0c <_ZN8touchgfx13AbstractClockD1Ev>
 800ac3e:	2130      	movs	r1, #48	; 0x30
 800ac40:	6878      	ldr	r0, [r7, #4]
 800ac42:	f01f fd8e 	bl	802a762 <_ZdlPvj>
 800ac46:	687b      	ldr	r3, [r7, #4]
 800ac48:	4618      	mov	r0, r3
 800ac4a:	3708      	adds	r7, #8
 800ac4c:	46bd      	mov	sp, r7
 800ac4e:	bd80      	pop	{r7, pc}

0800ac50 <_ZN8touchgfx12DigitalClockD1Ev>:
class DigitalClock : public AbstractClock
 800ac50:	b580      	push	{r7, lr}
 800ac52:	b082      	sub	sp, #8
 800ac54:	af00      	add	r7, sp, #0
 800ac56:	6078      	str	r0, [r7, #4]
 800ac58:	4a08      	ldr	r2, [pc, #32]	; (800ac7c <_ZN8touchgfx12DigitalClockD1Ev+0x2c>)
 800ac5a:	687b      	ldr	r3, [r7, #4]
 800ac5c:	601a      	str	r2, [r3, #0]
 800ac5e:	687b      	ldr	r3, [r7, #4]
 800ac60:	3334      	adds	r3, #52	; 0x34
 800ac62:	4618      	mov	r0, r3
 800ac64:	f7ff ff6c 	bl	800ab40 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800ac68:	687b      	ldr	r3, [r7, #4]
 800ac6a:	4618      	mov	r0, r3
 800ac6c:	f7ff ffce 	bl	800ac0c <_ZN8touchgfx13AbstractClockD1Ev>
 800ac70:	687b      	ldr	r3, [r7, #4]
 800ac72:	4618      	mov	r0, r3
 800ac74:	3708      	adds	r7, #8
 800ac76:	46bd      	mov	sp, r7
 800ac78:	bd80      	pop	{r7, pc}
 800ac7a:	bf00      	nop
 800ac7c:	0802edf0 	.word	0x0802edf0

0800ac80 <_ZN8touchgfx12DigitalClockD0Ev>:
 800ac80:	b580      	push	{r7, lr}
 800ac82:	b082      	sub	sp, #8
 800ac84:	af00      	add	r7, sp, #0
 800ac86:	6078      	str	r0, [r7, #4]
 800ac88:	6878      	ldr	r0, [r7, #4]
 800ac8a:	f7ff ffe1 	bl	800ac50 <_ZN8touchgfx12DigitalClockD1Ev>
 800ac8e:	2198      	movs	r1, #152	; 0x98
 800ac90:	6878      	ldr	r0, [r7, #4]
 800ac92:	f01f fd66 	bl	802a762 <_ZdlPvj>
 800ac96:	687b      	ldr	r3, [r7, #4]
 800ac98:	4618      	mov	r0, r3
 800ac9a:	3708      	adds	r7, #8
 800ac9c:	46bd      	mov	sp, r7
 800ac9e:	bd80      	pop	{r7, pc}

0800aca0 <_ZN8touchgfx6ButtonD1Ev>:
{
/**
 * A button with two images. One image showing the unpressed button and one image showing the
 * pressed state.
 */
class Button : public AbstractButton
 800aca0:	b580      	push	{r7, lr}
 800aca2:	b082      	sub	sp, #8
 800aca4:	af00      	add	r7, sp, #0
 800aca6:	6078      	str	r0, [r7, #4]
 800aca8:	4a05      	ldr	r2, [pc, #20]	; (800acc0 <_ZN8touchgfx6ButtonD1Ev+0x20>)
 800acaa:	687b      	ldr	r3, [r7, #4]
 800acac:	601a      	str	r2, [r3, #0]
 800acae:	687b      	ldr	r3, [r7, #4]
 800acb0:	4618      	mov	r0, r3
 800acb2:	f7ff fc61 	bl	800a578 <_ZN8touchgfx14AbstractButtonD1Ev>
 800acb6:	687b      	ldr	r3, [r7, #4]
 800acb8:	4618      	mov	r0, r3
 800acba:	3708      	adds	r7, #8
 800acbc:	46bd      	mov	sp, r7
 800acbe:	bd80      	pop	{r7, pc}
 800acc0:	0802f6b0 	.word	0x0802f6b0

0800acc4 <_ZN8touchgfx6ButtonD0Ev>:
 800acc4:	b580      	push	{r7, lr}
 800acc6:	b082      	sub	sp, #8
 800acc8:	af00      	add	r7, sp, #0
 800acca:	6078      	str	r0, [r7, #4]
 800accc:	6878      	ldr	r0, [r7, #4]
 800acce:	f7ff ffe7 	bl	800aca0 <_ZN8touchgfx6ButtonD1Ev>
 800acd2:	2134      	movs	r1, #52	; 0x34
 800acd4:	6878      	ldr	r0, [r7, #4]
 800acd6:	f01f fd44 	bl	802a762 <_ZdlPvj>
 800acda:	687b      	ldr	r3, [r7, #4]
 800acdc:	4618      	mov	r0, r3
 800acde:	3708      	adds	r7, #8
 800ace0:	46bd      	mov	sp, r7
 800ace2:	bd80      	pop	{r7, pc}

0800ace4 <_ZN8touchgfx14ButtonWithIconD1Ev>:
class ButtonWithIcon : public Button
 800ace4:	b580      	push	{r7, lr}
 800ace6:	b082      	sub	sp, #8
 800ace8:	af00      	add	r7, sp, #0
 800acea:	6078      	str	r0, [r7, #4]
 800acec:	4a05      	ldr	r2, [pc, #20]	; (800ad04 <_ZN8touchgfx14ButtonWithIconD1Ev+0x20>)
 800acee:	687b      	ldr	r3, [r7, #4]
 800acf0:	601a      	str	r2, [r3, #0]
 800acf2:	687b      	ldr	r3, [r7, #4]
 800acf4:	4618      	mov	r0, r3
 800acf6:	f7ff ffd3 	bl	800aca0 <_ZN8touchgfx6ButtonD1Ev>
 800acfa:	687b      	ldr	r3, [r7, #4]
 800acfc:	4618      	mov	r0, r3
 800acfe:	3708      	adds	r7, #8
 800ad00:	46bd      	mov	sp, r7
 800ad02:	bd80      	pop	{r7, pc}
 800ad04:	0802f81c 	.word	0x0802f81c

0800ad08 <_ZN8touchgfx14ButtonWithIconD0Ev>:
 800ad08:	b580      	push	{r7, lr}
 800ad0a:	b082      	sub	sp, #8
 800ad0c:	af00      	add	r7, sp, #0
 800ad0e:	6078      	str	r0, [r7, #4]
 800ad10:	6878      	ldr	r0, [r7, #4]
 800ad12:	f7ff ffe7 	bl	800ace4 <_ZN8touchgfx14ButtonWithIconD1Ev>
 800ad16:	213c      	movs	r1, #60	; 0x3c
 800ad18:	6878      	ldr	r0, [r7, #4]
 800ad1a:	f01f fd22 	bl	802a762 <_ZdlPvj>
 800ad1e:	687b      	ldr	r3, [r7, #4]
 800ad20:	4618      	mov	r0, r3
 800ad22:	3708      	adds	r7, #8
 800ad24:	46bd      	mov	sp, r7
 800ad26:	bd80      	pop	{r7, pc}

0800ad28 <_ZN8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 800ad28:	b580      	push	{r7, lr}
 800ad2a:	b082      	sub	sp, #8
 800ad2c:	af00      	add	r7, sp, #0
 800ad2e:	6078      	str	r0, [r7, #4]
 800ad30:	6039      	str	r1, [r7, #0]
    {
        (pobject->*pmemfun)(t1);
 800ad32:	687b      	ldr	r3, [r7, #4]
 800ad34:	685b      	ldr	r3, [r3, #4]
 800ad36:	687a      	ldr	r2, [r7, #4]
 800ad38:	68d2      	ldr	r2, [r2, #12]
 800ad3a:	1052      	asrs	r2, r2, #1
 800ad3c:	1898      	adds	r0, r3, r2
 800ad3e:	687b      	ldr	r3, [r7, #4]
 800ad40:	68db      	ldr	r3, [r3, #12]
 800ad42:	f003 0301 	and.w	r3, r3, #1
 800ad46:	2b00      	cmp	r3, #0
 800ad48:	d102      	bne.n	800ad50 <_ZN8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x28>
 800ad4a:	687b      	ldr	r3, [r7, #4]
 800ad4c:	689b      	ldr	r3, [r3, #8]
 800ad4e:	e00a      	b.n	800ad66 <_ZN8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x3e>
 800ad50:	687b      	ldr	r3, [r7, #4]
 800ad52:	685b      	ldr	r3, [r3, #4]
 800ad54:	687a      	ldr	r2, [r7, #4]
 800ad56:	68d2      	ldr	r2, [r2, #12]
 800ad58:	1052      	asrs	r2, r2, #1
 800ad5a:	4413      	add	r3, r2
 800ad5c:	681b      	ldr	r3, [r3, #0]
 800ad5e:	687a      	ldr	r2, [r7, #4]
 800ad60:	6892      	ldr	r2, [r2, #8]
 800ad62:	4413      	add	r3, r2
 800ad64:	681b      	ldr	r3, [r3, #0]
 800ad66:	6839      	ldr	r1, [r7, #0]
 800ad68:	4798      	blx	r3
    }
 800ad6a:	bf00      	nop
 800ad6c:	3708      	adds	r7, #8
 800ad6e:	46bd      	mov	sp, r7
 800ad70:	bd80      	pop	{r7, pc}

0800ad72 <_ZNK8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    /**
     * Query if this object is valid.
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
 800ad72:	b480      	push	{r7}
 800ad74:	b083      	sub	sp, #12
 800ad76:	af00      	add	r7, sp, #0
 800ad78:	6078      	str	r0, [r7, #4]
    {
        return (pobject != 0) && (pmemfun != 0);
 800ad7a:	687b      	ldr	r3, [r7, #4]
 800ad7c:	685b      	ldr	r3, [r3, #4]
 800ad7e:	2b00      	cmp	r3, #0
 800ad80:	d010      	beq.n	800ada4 <_ZNK8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800ad82:	687b      	ldr	r3, [r7, #4]
 800ad84:	689b      	ldr	r3, [r3, #8]
 800ad86:	2b00      	cmp	r3, #0
 800ad88:	d107      	bne.n	800ad9a <_ZNK8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800ad8a:	687b      	ldr	r3, [r7, #4]
 800ad8c:	68db      	ldr	r3, [r3, #12]
 800ad8e:	f003 0301 	and.w	r3, r3, #1
 800ad92:	2b00      	cmp	r3, #0
 800ad94:	d101      	bne.n	800ad9a <_ZNK8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800ad96:	2301      	movs	r3, #1
 800ad98:	e000      	b.n	800ad9c <_ZNK8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x2a>
 800ad9a:	2300      	movs	r3, #0
 800ad9c:	2b01      	cmp	r3, #1
 800ad9e:	d001      	beq.n	800ada4 <_ZNK8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800ada0:	2301      	movs	r3, #1
 800ada2:	e000      	b.n	800ada6 <_ZNK8touchgfx8CallbackI19ClockScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x34>
 800ada4:	2300      	movs	r3, #0
    }
 800ada6:	4618      	mov	r0, r3
 800ada8:	370c      	adds	r7, #12
 800adaa:	46bd      	mov	sp, r7
 800adac:	f85d 7b04 	ldr.w	r7, [sp], #4
 800adb0:	4770      	bx	lr

0800adb2 <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
 800adb2:	b480      	push	{r7}
 800adb4:	b083      	sub	sp, #12
 800adb6:	af00      	add	r7, sp, #0
 800adb8:	6078      	str	r0, [r7, #4]
 800adba:	6039      	str	r1, [r7, #0]
 800adbc:	683b      	ldr	r3, [r7, #0]
 800adbe:	4618      	mov	r0, r3
 800adc0:	370c      	adds	r7, #12
 800adc2:	46bd      	mov	sp, r7
 800adc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800adc8:	4770      	bx	lr

0800adca <_ZN8touchgfx8Drawable14getNextSiblingEv>:
    Drawable* getNextSibling()
 800adca:	b480      	push	{r7}
 800adcc:	b083      	sub	sp, #12
 800adce:	af00      	add	r7, sp, #0
 800add0:	6078      	str	r0, [r7, #4]
        return nextSibling;
 800add2:	687b      	ldr	r3, [r7, #4]
 800add4:	699b      	ldr	r3, [r3, #24]
    }
 800add6:	4618      	mov	r0, r3
 800add8:	370c      	adds	r7, #12
 800adda:	46bd      	mov	sp, r7
 800addc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ade0:	4770      	bx	lr

0800ade2 <_ZNK8touchgfx8Drawable4getXEv>:
    int16_t getX() const
 800ade2:	b480      	push	{r7}
 800ade4:	b083      	sub	sp, #12
 800ade6:	af00      	add	r7, sp, #0
 800ade8:	6078      	str	r0, [r7, #4]
        return rect.x;
 800adea:	687b      	ldr	r3, [r7, #4]
 800adec:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
    }
 800adf0:	4618      	mov	r0, r3
 800adf2:	370c      	adds	r7, #12
 800adf4:	46bd      	mov	sp, r7
 800adf6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800adfa:	4770      	bx	lr

0800adfc <_ZN8touchgfx15UIEventListener16handleClickEventERKNS_10ClickEventE>:
     * This handler is invoked when a mouse click or display touch event has been detected
     * by the system.
     *
     * @param  event The event data.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800adfc:	b480      	push	{r7}
 800adfe:	b083      	sub	sp, #12
 800ae00:	af00      	add	r7, sp, #0
 800ae02:	6078      	str	r0, [r7, #4]
 800ae04:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800ae06:	bf00      	nop
 800ae08:	370c      	adds	r7, #12
 800ae0a:	46bd      	mov	sp, r7
 800ae0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae10:	4770      	bx	lr

0800ae12 <_ZN8touchgfx15UIEventListener15handleDragEventERKNS_9DragEventE>:
    /**
     * This handler is invoked when a drag event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleDragEvent(const DragEvent& event)
 800ae12:	b480      	push	{r7}
 800ae14:	b083      	sub	sp, #12
 800ae16:	af00      	add	r7, sp, #0
 800ae18:	6078      	str	r0, [r7, #4]
 800ae1a:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800ae1c:	bf00      	nop
 800ae1e:	370c      	adds	r7, #12
 800ae20:	46bd      	mov	sp, r7
 800ae22:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae26:	4770      	bx	lr

0800ae28 <_ZN8touchgfx15UIEventListener18handleGestureEventERKNS_12GestureEventE>:
    /**
     * This handler is invoked when a gesture event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 800ae28:	b480      	push	{r7}
 800ae2a:	b083      	sub	sp, #12
 800ae2c:	af00      	add	r7, sp, #0
 800ae2e:	6078      	str	r0, [r7, #4]
 800ae30:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800ae32:	bf00      	nop
 800ae34:	370c      	adds	r7, #12
 800ae36:	46bd      	mov	sp, r7
 800ae38:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae3c:	4770      	bx	lr

0800ae3e <_ZN8touchgfx15UIEventListener14handleKeyEventEh>:
    /**
     * This handler is invoked when a key (or button) event has been detected by the system.
     *
     * @param  c The key or button pressed.
     */
    virtual void handleKeyEvent(uint8_t c)
 800ae3e:	b480      	push	{r7}
 800ae40:	b083      	sub	sp, #12
 800ae42:	af00      	add	r7, sp, #0
 800ae44:	6078      	str	r0, [r7, #4]
 800ae46:	460b      	mov	r3, r1
 800ae48:	70fb      	strb	r3, [r7, #3]
    {
        (void)c; // Unused variable
    }
 800ae4a:	bf00      	nop
 800ae4c:	370c      	adds	r7, #12
 800ae4e:	46bd      	mov	sp, r7
 800ae50:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae54:	4770      	bx	lr

0800ae56 <_ZN8touchgfx15UIEventListener15handleTickEventEv>:

    /**
     * This handler is invoked when a system tick event has been generated. The system tick
     * period is configured in the HAL.
     */
    virtual void handleTickEvent()
 800ae56:	b480      	push	{r7}
 800ae58:	b083      	sub	sp, #12
 800ae5a:	af00      	add	r7, sp, #0
 800ae5c:	6078      	str	r0, [r7, #4]
    {
    }
 800ae5e:	bf00      	nop
 800ae60:	370c      	adds	r7, #12
 800ae62:	46bd      	mov	sp, r7
 800ae64:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae68:	4770      	bx	lr

0800ae6a <_ZN8touchgfx15UIEventListener29handlePendingScreenTransitionEv>:

    /** This handler is invoked when a change screen event is pending. */
    virtual void handlePendingScreenTransition()
 800ae6a:	b480      	push	{r7}
 800ae6c:	b083      	sub	sp, #12
 800ae6e:	af00      	add	r7, sp, #0
 800ae70:	6078      	str	r0, [r7, #4]
    {
    }
 800ae72:	bf00      	nop
 800ae74:	370c      	adds	r7, #12
 800ae76:	46bd      	mov	sp, r7
 800ae78:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae7c:	4770      	bx	lr
	...

0800ae80 <_ZN8touchgfx15UIEventListenerD1Ev>:

    /** Finalizes an instance of the UIEventListener class. */
    virtual ~UIEventListener()
 800ae80:	b480      	push	{r7}
 800ae82:	b083      	sub	sp, #12
 800ae84:	af00      	add	r7, sp, #0
 800ae86:	6078      	str	r0, [r7, #4]
    {
 800ae88:	4a04      	ldr	r2, [pc, #16]	; (800ae9c <_ZN8touchgfx15UIEventListenerD1Ev+0x1c>)
 800ae8a:	687b      	ldr	r3, [r7, #4]
 800ae8c:	601a      	str	r2, [r3, #0]
    }
 800ae8e:	687b      	ldr	r3, [r7, #4]
 800ae90:	4618      	mov	r0, r3
 800ae92:	370c      	adds	r7, #12
 800ae94:	46bd      	mov	sp, r7
 800ae96:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae9a:	4770      	bx	lr
 800ae9c:	0802e178 	.word	0x0802e178

0800aea0 <_ZN8touchgfx15UIEventListenerD0Ev>:
    virtual ~UIEventListener()
 800aea0:	b580      	push	{r7, lr}
 800aea2:	b082      	sub	sp, #8
 800aea4:	af00      	add	r7, sp, #0
 800aea6:	6078      	str	r0, [r7, #4]
    }
 800aea8:	6878      	ldr	r0, [r7, #4]
 800aeaa:	f7ff ffe9 	bl	800ae80 <_ZN8touchgfx15UIEventListenerD1Ev>
 800aeae:	2104      	movs	r1, #4
 800aeb0:	6878      	ldr	r0, [r7, #4]
 800aeb2:	f01f fc56 	bl	802a762 <_ZdlPvj>
 800aeb6:	687b      	ldr	r3, [r7, #4]
 800aeb8:	4618      	mov	r0, r3
 800aeba:	3708      	adds	r7, #8
 800aebc:	46bd      	mov	sp, r7
 800aebe:	bd80      	pop	{r7, pc}

0800aec0 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     * @note The application will not make a complete restart - if
     *       your Model contains data, this will not be reset, unless
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
 800aec0:	b480      	push	{r7}
 800aec2:	b083      	sub	sp, #12
 800aec4:	af00      	add	r7, sp, #0
 800aec6:	6078      	str	r0, [r7, #4]
    {
    }
 800aec8:	bf00      	nop
 800aeca:	370c      	adds	r7, #12
 800aecc:	46bd      	mov	sp, r7
 800aece:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aed2:	4770      	bx	lr

0800aed4 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * means to switch screen from places that does not have access to a pointer to the new
     * screen. Base implementation is empty.
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
 800aed4:	b480      	push	{r7}
 800aed6:	b083      	sub	sp, #12
 800aed8:	af00      	add	r7, sp, #0
 800aeda:	6078      	str	r0, [r7, #4]
 800aedc:	460b      	mov	r3, r1
 800aede:	70fb      	strb	r3, [r7, #3]
    {
        (void)screenId; // Unused variable
    }
 800aee0:	bf00      	nop
 800aee2:	370c      	adds	r7, #12
 800aee4:	46bd      	mov	sp, r7
 800aee6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aeea:	4770      	bx	lr

0800aeec <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
    /**
     * An application specific function for requesting redraw of given Rect.
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
 800aeec:	b480      	push	{r7}
 800aeee:	b083      	sub	sp, #12
 800aef0:	af00      	add	r7, sp, #0
 800aef2:	6078      	str	r0, [r7, #4]
 800aef4:	6039      	str	r1, [r7, #0]
    {
        redraw = rect;
 800aef6:	687b      	ldr	r3, [r7, #4]
 800aef8:	683a      	ldr	r2, [r7, #0]
 800aefa:	f503 7398 	add.w	r3, r3, #304	; 0x130
 800aefe:	6810      	ldr	r0, [r2, #0]
 800af00:	6851      	ldr	r1, [r2, #4]
 800af02:	c303      	stmia	r3!, {r0, r1}
    }
 800af04:	bf00      	nop
 800af06:	370c      	adds	r7, #12
 800af08:	46bd      	mov	sp, r7
 800af0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af0e:	4770      	bx	lr

0800af10 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
        timerWidgets.add(w);
    }

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
 800af10:	b580      	push	{r7, lr}
 800af12:	b082      	sub	sp, #8
 800af14:	af00      	add	r7, sp, #0
 800af16:	6078      	str	r0, [r7, #4]
    {
        timerWidgets.clear();
 800af18:	687b      	ldr	r3, [r7, #4]
 800af1a:	3304      	adds	r3, #4
 800af1c:	4618      	mov	r0, r3
 800af1e:	f00e fa01 	bl	8019324 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    }
 800af22:	bf00      	nop
 800af24:	3708      	adds	r7, #8
 800af26:	46bd      	mov	sp, r7
 800af28:	bd80      	pop	{r7, pc}
	...

0800af2c <_ZN8touchgfx15GenericCallbackIvvvED1Ev>:
    virtual ~GenericCallback()
 800af2c:	b480      	push	{r7}
 800af2e:	b083      	sub	sp, #12
 800af30:	af00      	add	r7, sp, #0
 800af32:	6078      	str	r0, [r7, #4]
    {
 800af34:	4a04      	ldr	r2, [pc, #16]	; (800af48 <_ZN8touchgfx15GenericCallbackIvvvED1Ev+0x1c>)
 800af36:	687b      	ldr	r3, [r7, #4]
 800af38:	601a      	str	r2, [r3, #0]
    }
 800af3a:	687b      	ldr	r3, [r7, #4]
 800af3c:	4618      	mov	r0, r3
 800af3e:	370c      	adds	r7, #12
 800af40:	46bd      	mov	sp, r7
 800af42:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af46:	4770      	bx	lr
 800af48:	0802e160 	.word	0x0802e160

0800af4c <_ZN8touchgfx15GenericCallbackIvvvED0Ev>:
    virtual ~GenericCallback()
 800af4c:	b580      	push	{r7, lr}
 800af4e:	b082      	sub	sp, #8
 800af50:	af00      	add	r7, sp, #0
 800af52:	6078      	str	r0, [r7, #4]
    }
 800af54:	6878      	ldr	r0, [r7, #4]
 800af56:	f7ff ffe9 	bl	800af2c <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 800af5a:	2104      	movs	r1, #4
 800af5c:	6878      	ldr	r0, [r7, #4]
 800af5e:	f01f fc00 	bl	802a762 <_ZdlPvj>
 800af62:	687b      	ldr	r3, [r7, #4]
 800af64:	4618      	mov	r0, r3
 800af66:	3708      	adds	r7, #8
 800af68:	46bd      	mov	sp, r7
 800af6a:	bd80      	pop	{r7, pc}

0800af6c <_ZN8touchgfx3HAL11getInstanceEv>:
    /**
     * Gets the HAL instance.
     *
     * @return The HAL instance.
     */
    static HAL* getInstance()
 800af6c:	b480      	push	{r7}
 800af6e:	af00      	add	r7, sp, #0
    {
        return instance;
 800af70:	4b03      	ldr	r3, [pc, #12]	; (800af80 <_ZN8touchgfx3HAL11getInstanceEv+0x14>)
 800af72:	681b      	ldr	r3, [r3, #0]
    }
 800af74:	4618      	mov	r0, r3
 800af76:	46bd      	mov	sp, r7
 800af78:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af7c:	4770      	bx	lr
 800af7e:	bf00      	nop
 800af80:	2000224c 	.word	0x2000224c

0800af84 <_ZN8touchgfx3HAL3lcdEv>:
    /**
     * Gets a reference to the LCD.
     *
     * @return A reference to the LCD.
     */
    static LCD& lcd()
 800af84:	b480      	push	{r7}
 800af86:	af00      	add	r7, sp, #0
    {
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800af88:	4b0b      	ldr	r3, [pc, #44]	; (800afb8 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800af8a:	681b      	ldr	r3, [r3, #0]
 800af8c:	f893 3058 	ldrb.w	r3, [r3, #88]	; 0x58
 800af90:	2b00      	cmp	r3, #0
 800af92:	d008      	beq.n	800afa6 <_ZN8touchgfx3HAL3lcdEv+0x22>
 800af94:	4b08      	ldr	r3, [pc, #32]	; (800afb8 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800af96:	681b      	ldr	r3, [r3, #0]
 800af98:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800af9a:	2b00      	cmp	r3, #0
 800af9c:	d003      	beq.n	800afa6 <_ZN8touchgfx3HAL3lcdEv+0x22>
        {
            return *instance->auxiliaryLCD;
 800af9e:	4b06      	ldr	r3, [pc, #24]	; (800afb8 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800afa0:	681b      	ldr	r3, [r3, #0]
 800afa2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800afa4:	e002      	b.n	800afac <_ZN8touchgfx3HAL3lcdEv+0x28>
        }
        return instance->lcdRef;
 800afa6:	4b04      	ldr	r3, [pc, #16]	; (800afb8 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800afa8:	681b      	ldr	r3, [r3, #0]
 800afaa:	689b      	ldr	r3, [r3, #8]
    }
 800afac:	4618      	mov	r0, r3
 800afae:	46bd      	mov	sp, r7
 800afb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800afb4:	4770      	bx	lr
 800afb6:	bf00      	nop
 800afb8:	2000224c 	.word	0x2000224c

0800afbc <_ZN8touchgfx10TransitionC1Ev>:
 */
class Transition
{
public:
    /** Initializes a new instance of the Transition class. */
    Transition()
 800afbc:	b480      	push	{r7}
 800afbe:	b083      	sub	sp, #12
 800afc0:	af00      	add	r7, sp, #0
 800afc2:	6078      	str	r0, [r7, #4]
        : screenContainer(0), done(false)
 800afc4:	4a07      	ldr	r2, [pc, #28]	; (800afe4 <_ZN8touchgfx10TransitionC1Ev+0x28>)
 800afc6:	687b      	ldr	r3, [r7, #4]
 800afc8:	601a      	str	r2, [r3, #0]
 800afca:	687b      	ldr	r3, [r7, #4]
 800afcc:	2200      	movs	r2, #0
 800afce:	605a      	str	r2, [r3, #4]
 800afd0:	687b      	ldr	r3, [r7, #4]
 800afd2:	2200      	movs	r2, #0
 800afd4:	721a      	strb	r2, [r3, #8]
    {
    }
 800afd6:	687b      	ldr	r3, [r7, #4]
 800afd8:	4618      	mov	r0, r3
 800afda:	370c      	adds	r7, #12
 800afdc:	46bd      	mov	sp, r7
 800afde:	f85d 7b04 	ldr.w	r7, [sp], #4
 800afe2:	4770      	bx	lr
 800afe4:	0802e13c 	.word	0x0802e13c

0800afe8 <_ZN8touchgfx10TransitionD1Ev>:

    /** Finalizes an instance of the Transition class. */
    virtual ~Transition()
 800afe8:	b480      	push	{r7}
 800afea:	b083      	sub	sp, #12
 800afec:	af00      	add	r7, sp, #0
 800afee:	6078      	str	r0, [r7, #4]
    {
 800aff0:	4a04      	ldr	r2, [pc, #16]	; (800b004 <_ZN8touchgfx10TransitionD1Ev+0x1c>)
 800aff2:	687b      	ldr	r3, [r7, #4]
 800aff4:	601a      	str	r2, [r3, #0]
    }
 800aff6:	687b      	ldr	r3, [r7, #4]
 800aff8:	4618      	mov	r0, r3
 800affa:	370c      	adds	r7, #12
 800affc:	46bd      	mov	sp, r7
 800affe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b002:	4770      	bx	lr
 800b004:	0802e13c 	.word	0x0802e13c

0800b008 <_ZN8touchgfx10TransitionD0Ev>:
    virtual ~Transition()
 800b008:	b580      	push	{r7, lr}
 800b00a:	b082      	sub	sp, #8
 800b00c:	af00      	add	r7, sp, #0
 800b00e:	6078      	str	r0, [r7, #4]
    }
 800b010:	6878      	ldr	r0, [r7, #4]
 800b012:	f7ff ffe9 	bl	800afe8 <_ZN8touchgfx10TransitionD1Ev>
 800b016:	210c      	movs	r1, #12
 800b018:	6878      	ldr	r0, [r7, #4]
 800b01a:	f01f fba2 	bl	802a762 <_ZdlPvj>
 800b01e:	687b      	ldr	r3, [r7, #4]
 800b020:	4618      	mov	r0, r3
 800b022:	3708      	adds	r7, #8
 800b024:	46bd      	mov	sp, r7
 800b026:	bd80      	pop	{r7, pc}

0800b028 <_ZN8touchgfx10Transition15handleTickEventEv>:

    /** Called for every tick when transitioning. */
    virtual void handleTickEvent()
 800b028:	b480      	push	{r7}
 800b02a:	b083      	sub	sp, #12
 800b02c:	af00      	add	r7, sp, #0
 800b02e:	6078      	str	r0, [r7, #4]
    {
    }
 800b030:	bf00      	nop
 800b032:	370c      	adds	r7, #12
 800b034:	46bd      	mov	sp, r7
 800b036:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b03a:	4770      	bx	lr

0800b03c <_ZN8touchgfx10Transition8tearDownEv>:

    /**
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
 800b03c:	b480      	push	{r7}
 800b03e:	b083      	sub	sp, #12
 800b040:	af00      	add	r7, sp, #0
 800b042:	6078      	str	r0, [r7, #4]
    {
    }
 800b044:	bf00      	nop
 800b046:	370c      	adds	r7, #12
 800b048:	46bd      	mov	sp, r7
 800b04a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b04e:	4770      	bx	lr

0800b050 <_ZN8touchgfx10Transition4initEv>:

    /**
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
 800b050:	b480      	push	{r7}
 800b052:	b083      	sub	sp, #12
 800b054:	af00      	add	r7, sp, #0
 800b056:	6078      	str	r0, [r7, #4]
    {
    }
 800b058:	bf00      	nop
 800b05a:	370c      	adds	r7, #12
 800b05c:	46bd      	mov	sp, r7
 800b05e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b062:	4770      	bx	lr

0800b064 <_ZN8touchgfx10Transition10invalidateEv>:
    /**
     * Invalidates the screen when starting the Transition. Default is
     * to invalidate the whole screen. Subclasses can do partial
     * invalidation.
     */
    virtual void invalidate()
 800b064:	b580      	push	{r7, lr}
 800b066:	b082      	sub	sp, #8
 800b068:	af00      	add	r7, sp, #0
 800b06a:	6078      	str	r0, [r7, #4]
    {
        Application::getInstance()->invalidate();
 800b06c:	f00e f91c 	bl	80192a8 <_ZN8touchgfx11Application11getInstanceEv>
 800b070:	4603      	mov	r3, r0
 800b072:	681a      	ldr	r2, [r3, #0]
 800b074:	323c      	adds	r2, #60	; 0x3c
 800b076:	6812      	ldr	r2, [r2, #0]
 800b078:	4618      	mov	r0, r3
 800b07a:	4790      	blx	r2
    }
 800b07c:	bf00      	nop
 800b07e:	3708      	adds	r7, #8
 800b080:	46bd      	mov	sp, r7
 800b082:	bd80      	pop	{r7, pc}

0800b084 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     * Sets the Screen Container. Is used by Screen to enable the transition to access the
     * Container.
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
 800b084:	b480      	push	{r7}
 800b086:	b083      	sub	sp, #12
 800b088:	af00      	add	r7, sp, #0
 800b08a:	6078      	str	r0, [r7, #4]
 800b08c:	6039      	str	r1, [r7, #0]
    {
        screenContainer = &cont;
 800b08e:	687b      	ldr	r3, [r7, #4]
 800b090:	683a      	ldr	r2, [r7, #0]
 800b092:	605a      	str	r2, [r3, #4]
    }
 800b094:	bf00      	nop
 800b096:	370c      	adds	r7, #12
 800b098:	46bd      	mov	sp, r7
 800b09a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b09e:	4770      	bx	lr

0800b0a0 <_ZN8touchgfx11ApplicationD1Ev>:
class Application : public UIEventListener
 800b0a0:	b580      	push	{r7, lr}
 800b0a2:	b082      	sub	sp, #8
 800b0a4:	af00      	add	r7, sp, #0
 800b0a6:	6078      	str	r0, [r7, #4]
 800b0a8:	4a05      	ldr	r2, [pc, #20]	; (800b0c0 <_ZN8touchgfx11ApplicationD1Ev+0x20>)
 800b0aa:	687b      	ldr	r3, [r7, #4]
 800b0ac:	601a      	str	r2, [r3, #0]
 800b0ae:	687b      	ldr	r3, [r7, #4]
 800b0b0:	4618      	mov	r0, r3
 800b0b2:	f7ff fee5 	bl	800ae80 <_ZN8touchgfx15UIEventListenerD1Ev>
 800b0b6:	687b      	ldr	r3, [r7, #4]
 800b0b8:	4618      	mov	r0, r3
 800b0ba:	3708      	adds	r7, #8
 800b0bc:	46bd      	mov	sp, r7
 800b0be:	bd80      	pop	{r7, pc}
 800b0c0:	0802f968 	.word	0x0802f968

0800b0c4 <_ZN8touchgfx11ApplicationD0Ev>:
 800b0c4:	b580      	push	{r7, lr}
 800b0c6:	b082      	sub	sp, #8
 800b0c8:	af00      	add	r7, sp, #0
 800b0ca:	6078      	str	r0, [r7, #4]
 800b0cc:	6878      	ldr	r0, [r7, #4]
 800b0ce:	f7ff ffe7 	bl	800b0a0 <_ZN8touchgfx11ApplicationD1Ev>
 800b0d2:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800b0d6:	6878      	ldr	r0, [r7, #4]
 800b0d8:	f01f fb43 	bl	802a762 <_ZdlPvj>
 800b0dc:	687b      	ldr	r3, [r7, #4]
 800b0de:	4618      	mov	r0, r3
 800b0e0:	3708      	adds	r7, #8
 800b0e2:	46bd      	mov	sp, r7
 800b0e4:	bd80      	pop	{r7, pc}
	...

0800b0e8 <_ZN8touchgfx14MVPApplicationC1Ev>:
 */
class MVPApplication : public Application
{
public:
    /** Initializes a new instance of the MVPApplication class. */
    MVPApplication()
 800b0e8:	b580      	push	{r7, lr}
 800b0ea:	b082      	sub	sp, #8
 800b0ec:	af00      	add	r7, sp, #0
 800b0ee:	6078      	str	r0, [r7, #4]
        : currentPresenter(0),
          pendingScreenTransitionCallback(0)
 800b0f0:	687b      	ldr	r3, [r7, #4]
 800b0f2:	4618      	mov	r0, r3
 800b0f4:	f00e f9e4 	bl	80194c0 <_ZN8touchgfx11ApplicationC1Ev>
 800b0f8:	4a09      	ldr	r2, [pc, #36]	; (800b120 <_ZN8touchgfx14MVPApplicationC1Ev+0x38>)
 800b0fa:	687b      	ldr	r3, [r7, #4]
 800b0fc:	601a      	str	r2, [r3, #0]
        : currentPresenter(0),
 800b0fe:	687b      	ldr	r3, [r7, #4]
 800b100:	2200      	movs	r2, #0
 800b102:	f8c3 213c 	str.w	r2, [r3, #316]	; 0x13c
          pendingScreenTransitionCallback(0)
 800b106:	687b      	ldr	r3, [r7, #4]
 800b108:	2200      	movs	r2, #0
 800b10a:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
    {
        instance = this;
 800b10e:	687b      	ldr	r3, [r7, #4]
 800b110:	4a04      	ldr	r2, [pc, #16]	; (800b124 <_ZN8touchgfx14MVPApplicationC1Ev+0x3c>)
 800b112:	6013      	str	r3, [r2, #0]
    }
 800b114:	687b      	ldr	r3, [r7, #4]
 800b116:	4618      	mov	r0, r3
 800b118:	3708      	adds	r7, #8
 800b11a:	46bd      	mov	sp, r7
 800b11c:	bd80      	pop	{r7, pc}
 800b11e:	bf00      	nop
 800b120:	0802e0e8 	.word	0x0802e0e8
 800b124:	200022a0 	.word	0x200022a0

0800b128 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 800b128:	b580      	push	{r7, lr}
 800b12a:	b082      	sub	sp, #8
 800b12c:	af00      	add	r7, sp, #0
 800b12e:	6078      	str	r0, [r7, #4]
    {
        evaluatePendingScreenTransition();
 800b130:	6878      	ldr	r0, [r7, #4]
 800b132:	f000 f804 	bl	800b13e <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>
    }
 800b136:	bf00      	nop
 800b138:	3708      	adds	r7, #8
 800b13a:	46bd      	mov	sp, r7
 800b13c:	bd80      	pop	{r7, pc}

0800b13e <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>:

    /**
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
 800b13e:	b580      	push	{r7, lr}
 800b140:	b082      	sub	sp, #8
 800b142:	af00      	add	r7, sp, #0
 800b144:	6078      	str	r0, [r7, #4]
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 800b146:	687b      	ldr	r3, [r7, #4]
 800b148:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
 800b14c:	2b00      	cmp	r3, #0
 800b14e:	d00f      	beq.n	800b170 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 800b150:	687b      	ldr	r3, [r7, #4]
 800b152:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 800b156:	687b      	ldr	r3, [r7, #4]
 800b158:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
 800b15c:	681b      	ldr	r3, [r3, #0]
 800b15e:	330c      	adds	r3, #12
 800b160:	681b      	ldr	r3, [r3, #0]
 800b162:	4610      	mov	r0, r2
 800b164:	4798      	blx	r3
 800b166:	4603      	mov	r3, r0
 800b168:	2b00      	cmp	r3, #0
 800b16a:	d001      	beq.n	800b170 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 800b16c:	2301      	movs	r3, #1
 800b16e:	e000      	b.n	800b172 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x34>
 800b170:	2300      	movs	r3, #0
 800b172:	2b00      	cmp	r3, #0
 800b174:	d00e      	beq.n	800b194 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x56>
        {
            pendingScreenTransitionCallback->execute();
 800b176:	687b      	ldr	r3, [r7, #4]
 800b178:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 800b17c:	687b      	ldr	r3, [r7, #4]
 800b17e:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
 800b182:	681b      	ldr	r3, [r3, #0]
 800b184:	3308      	adds	r3, #8
 800b186:	681b      	ldr	r3, [r3, #0]
 800b188:	4610      	mov	r0, r2
 800b18a:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 800b18c:	687b      	ldr	r3, [r7, #4]
 800b18e:	2200      	movs	r2, #0
 800b190:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
        }
    }
 800b194:	bf00      	nop
 800b196:	3708      	adds	r7, #8
 800b198:	46bd      	mov	sp, r7
 800b19a:	bd80      	pop	{r7, pc}

0800b19c <_ZN5Model4bindEP13ModelListener>:
class Model
{
public:
    Model();

    void bind(ModelListener* listener)
 800b19c:	b480      	push	{r7}
 800b19e:	b083      	sub	sp, #12
 800b1a0:	af00      	add	r7, sp, #0
 800b1a2:	6078      	str	r0, [r7, #4]
 800b1a4:	6039      	str	r1, [r7, #0]
    {
        modelListener = listener;
 800b1a6:	687b      	ldr	r3, [r7, #4]
 800b1a8:	683a      	ldr	r2, [r7, #0]
 800b1aa:	601a      	str	r2, [r3, #0]
    }
 800b1ac:	bf00      	nop
 800b1ae:	370c      	adds	r7, #12
 800b1b0:	46bd      	mov	sp, r7
 800b1b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b1b6:	4770      	bx	lr

0800b1b8 <_ZN8touchgfx14MVPApplicationD1Ev>:
class MVPApplication : public Application
 800b1b8:	b580      	push	{r7, lr}
 800b1ba:	b082      	sub	sp, #8
 800b1bc:	af00      	add	r7, sp, #0
 800b1be:	6078      	str	r0, [r7, #4]
 800b1c0:	4a05      	ldr	r2, [pc, #20]	; (800b1d8 <_ZN8touchgfx14MVPApplicationD1Ev+0x20>)
 800b1c2:	687b      	ldr	r3, [r7, #4]
 800b1c4:	601a      	str	r2, [r3, #0]
 800b1c6:	687b      	ldr	r3, [r7, #4]
 800b1c8:	4618      	mov	r0, r3
 800b1ca:	f7ff ff69 	bl	800b0a0 <_ZN8touchgfx11ApplicationD1Ev>
 800b1ce:	687b      	ldr	r3, [r7, #4]
 800b1d0:	4618      	mov	r0, r3
 800b1d2:	3708      	adds	r7, #8
 800b1d4:	46bd      	mov	sp, r7
 800b1d6:	bd80      	pop	{r7, pc}
 800b1d8:	0802e0e8 	.word	0x0802e0e8

0800b1dc <_ZN8touchgfx14MVPApplicationD0Ev>:
 800b1dc:	b580      	push	{r7, lr}
 800b1de:	b082      	sub	sp, #8
 800b1e0:	af00      	add	r7, sp, #0
 800b1e2:	6078      	str	r0, [r7, #4]
 800b1e4:	6878      	ldr	r0, [r7, #4]
 800b1e6:	f7ff ffe7 	bl	800b1b8 <_ZN8touchgfx14MVPApplicationD1Ev>
 800b1ea:	f44f 71a2 	mov.w	r1, #324	; 0x144
 800b1ee:	6878      	ldr	r0, [r7, #4]
 800b1f0:	f01f fab7 	bl	802a762 <_ZdlPvj>
 800b1f4:	687b      	ldr	r3, [r7, #4]
 800b1f6:	4618      	mov	r0, r3
 800b1f8:	3708      	adds	r7, #8
 800b1fa:	46bd      	mov	sp, r7
 800b1fc:	bd80      	pop	{r7, pc}
	...

0800b200 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 800b200:	b580      	push	{r7, lr}
 800b202:	b082      	sub	sp, #8
 800b204:	af00      	add	r7, sp, #0
 800b206:	6078      	str	r0, [r7, #4]
 800b208:	4a08      	ldr	r2, [pc, #32]	; (800b22c <_ZN23FrontendApplicationBaseD1Ev+0x2c>)
 800b20a:	687b      	ldr	r3, [r7, #4]
 800b20c:	601a      	str	r2, [r3, #0]
 800b20e:	687b      	ldr	r3, [r7, #4]
 800b210:	f503 73a2 	add.w	r3, r3, #324	; 0x144
 800b214:	4618      	mov	r0, r3
 800b216:	f001 fbbb 	bl	800c990 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 800b21a:	687b      	ldr	r3, [r7, #4]
 800b21c:	4618      	mov	r0, r3
 800b21e:	f7ff ffcb 	bl	800b1b8 <_ZN8touchgfx14MVPApplicationD1Ev>
 800b222:	687b      	ldr	r3, [r7, #4]
 800b224:	4618      	mov	r0, r3
 800b226:	3708      	adds	r7, #8
 800b228:	46bd      	mov	sp, r7
 800b22a:	bd80      	pop	{r7, pc}
 800b22c:	0802e07c 	.word	0x0802e07c

0800b230 <_ZN23FrontendApplicationBaseD0Ev>:
 800b230:	b580      	push	{r7, lr}
 800b232:	b082      	sub	sp, #8
 800b234:	af00      	add	r7, sp, #0
 800b236:	6078      	str	r0, [r7, #4]
 800b238:	6878      	ldr	r0, [r7, #4]
 800b23a:	f7ff ffe1 	bl	800b200 <_ZN23FrontendApplicationBaseD1Ev>
 800b23e:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800b242:	6878      	ldr	r0, [r7, #4]
 800b244:	f01f fa8d 	bl	802a762 <_ZdlPvj>
 800b248:	687b      	ldr	r3, [r7, #4]
 800b24a:	4618      	mov	r0, r3
 800b24c:	3708      	adds	r7, #8
 800b24e:	46bd      	mov	sp, r7
 800b250:	bd80      	pop	{r7, pc}

0800b252 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:

    virtual void changeToStartScreen()
 800b252:	b580      	push	{r7, lr}
 800b254:	b082      	sub	sp, #8
 800b256:	af00      	add	r7, sp, #0
 800b258:	6078      	str	r0, [r7, #4]
    {
        gotoPressureScreenScreenNoTransition();
 800b25a:	6878      	ldr	r0, [r7, #4]
 800b25c:	f000 f954 	bl	800b508 <_ZN23FrontendApplicationBase36gotoPressureScreenScreenNoTransitionEv>
    }
 800b260:	bf00      	nop
 800b262:	3708      	adds	r7, #8
 800b264:	46bd      	mov	sp, r7
 800b266:	bd80      	pop	{r7, pc}

0800b268 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
 */
class NoTransition : public Transition
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
 800b268:	b480      	push	{r7}
 800b26a:	b083      	sub	sp, #12
 800b26c:	af00      	add	r7, sp, #0
 800b26e:	6078      	str	r0, [r7, #4]
    {
        done = true;
 800b270:	687b      	ldr	r3, [r7, #4]
 800b272:	2201      	movs	r2, #1
 800b274:	721a      	strb	r2, [r3, #8]
    }
 800b276:	bf00      	nop
 800b278:	370c      	adds	r7, #12
 800b27a:	46bd      	mov	sp, r7
 800b27c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b280:	4770      	bx	lr

0800b282 <_ZN13ModelListener4bindEP5Model>:
public:
    ModelListener() : model(0) {}
    
    virtual ~ModelListener() {}

    void bind(Model* m)
 800b282:	b480      	push	{r7}
 800b284:	b083      	sub	sp, #12
 800b286:	af00      	add	r7, sp, #0
 800b288:	6078      	str	r0, [r7, #4]
 800b28a:	6039      	str	r1, [r7, #0]
    {
        model = m;
 800b28c:	687b      	ldr	r3, [r7, #4]
 800b28e:	683a      	ldr	r2, [r7, #0]
 800b290:	605a      	str	r2, [r3, #4]
    }
 800b292:	bf00      	nop
 800b294:	370c      	adds	r7, #12
 800b296:	46bd      	mov	sp, r7
 800b298:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b29c:	4770      	bx	lr
	...

0800b2a0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/coscreen_screen/COScreenView.hpp>
#include <gui/coscreen_screen/COScreenPresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 800b2a0:	b580      	push	{r7, lr}
 800b2a2:	b084      	sub	sp, #16
 800b2a4:	af00      	add	r7, sp, #0
 800b2a6:	60f8      	str	r0, [r7, #12]
 800b2a8:	60b9      	str	r1, [r7, #8]
 800b2aa:	607a      	str	r2, [r7, #4]
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 800b2ac:	68fb      	ldr	r3, [r7, #12]
 800b2ae:	4618      	mov	r0, r3
 800b2b0:	f7ff ff1a 	bl	800b0e8 <_ZN8touchgfx14MVPApplicationC1Ev>
 800b2b4:	4a16      	ldr	r2, [pc, #88]	; (800b310 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x70>)
 800b2b6:	68fb      	ldr	r3, [r7, #12]
 800b2b8:	601a      	str	r2, [r3, #0]
      transitionCallback(),
 800b2ba:	68fb      	ldr	r3, [r7, #12]
 800b2bc:	f503 73a2 	add.w	r3, r3, #324	; 0x144
 800b2c0:	4618      	mov	r0, r3
 800b2c2:	f000 fa03 	bl	800b6cc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>
      frontendHeap(heap),
 800b2c6:	68fb      	ldr	r3, [r7, #12]
 800b2c8:	687a      	ldr	r2, [r7, #4]
 800b2ca:	f8c3 2154 	str.w	r2, [r3, #340]	; 0x154
      model(m)
 800b2ce:	68fb      	ldr	r3, [r7, #12]
 800b2d0:	68ba      	ldr	r2, [r7, #8]
 800b2d2:	f8c3 2158 	str.w	r2, [r3, #344]	; 0x158
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 800b2d6:	f7ff fe49 	bl	800af6c <_ZN8touchgfx3HAL11getInstanceEv>
 800b2da:	4603      	mov	r3, r0
 800b2dc:	681a      	ldr	r2, [r3, #0]
 800b2de:	3208      	adds	r2, #8
 800b2e0:	6812      	ldr	r2, [r2, #0]
 800b2e2:	2100      	movs	r1, #0
 800b2e4:	4618      	mov	r0, r3
 800b2e6:	4790      	blx	r2
    touchgfx::Texts::setLanguage(GB);
 800b2e8:	2000      	movs	r0, #0
 800b2ea:	f004 fe67 	bl	800ffbc <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800b2ee:	f7ff fe49 	bl	800af84 <_ZN8touchgfx3HAL3lcdEv>
 800b2f2:	4603      	mov	r3, r0
 800b2f4:	4618      	mov	r0, r3
 800b2f6:	f017 fbb8 	bl	8022a6a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 800b2fa:	f7ff fe43 	bl	800af84 <_ZN8touchgfx3HAL3lcdEv>
 800b2fe:	4603      	mov	r3, r0
 800b300:	4618      	mov	r0, r3
 800b302:	f017 fc2d 	bl	8022b60 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 800b306:	68fb      	ldr	r3, [r7, #12]
 800b308:	4618      	mov	r0, r3
 800b30a:	3710      	adds	r7, #16
 800b30c:	46bd      	mov	sp, r7
 800b30e:	bd80      	pop	{r7, pc}
 800b310:	0802e07c 	.word	0x0802e07c

0800b314 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>:
class GenericCallback<void>
 800b314:	b480      	push	{r7}
 800b316:	b083      	sub	sp, #12
 800b318:	af00      	add	r7, sp, #0
 800b31a:	6078      	str	r0, [r7, #4]
 800b31c:	6039      	str	r1, [r7, #0]
 800b31e:	687b      	ldr	r3, [r7, #4]
 800b320:	4618      	mov	r0, r3
 800b322:	370c      	adds	r7, #12
 800b324:	46bd      	mov	sp, r7
 800b326:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b32a:	4770      	bx	lr

0800b32c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800b32c:	b580      	push	{r7, lr}
 800b32e:	b082      	sub	sp, #8
 800b330:	af00      	add	r7, sp, #0
 800b332:	6078      	str	r0, [r7, #4]
 800b334:	6039      	str	r1, [r7, #0]
 800b336:	687b      	ldr	r3, [r7, #4]
 800b338:	683a      	ldr	r2, [r7, #0]
 800b33a:	4611      	mov	r1, r2
 800b33c:	4618      	mov	r0, r3
 800b33e:	f7ff ffe9 	bl	800b314 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>
 800b342:	683b      	ldr	r3, [r7, #0]
 800b344:	685a      	ldr	r2, [r3, #4]
 800b346:	687b      	ldr	r3, [r7, #4]
 800b348:	605a      	str	r2, [r3, #4]
 800b34a:	687b      	ldr	r3, [r7, #4]
 800b34c:	683a      	ldr	r2, [r7, #0]
 800b34e:	3308      	adds	r3, #8
 800b350:	3208      	adds	r2, #8
 800b352:	e892 0003 	ldmia.w	r2, {r0, r1}
 800b356:	e883 0003 	stmia.w	r3, {r0, r1}
 800b35a:	687b      	ldr	r3, [r7, #4]
 800b35c:	4618      	mov	r0, r3
 800b35e:	3708      	adds	r7, #8
 800b360:	46bd      	mov	sp, r7
 800b362:	bd80      	pop	{r7, pc}

0800b364 <_ZN23FrontendApplicationBase39gotoMainScreenScreenSlideTransitionWestEv>:
 */

// MainScreen

void FrontendApplicationBase::gotoMainScreenScreenSlideTransitionWest()
{
 800b364:	b590      	push	{r4, r7, lr}
 800b366:	b089      	sub	sp, #36	; 0x24
 800b368:	af00      	add	r7, sp, #0
 800b36a:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMainScreenScreenSlideTransitionWestImpl);
 800b36c:	687b      	ldr	r3, [r7, #4]
 800b36e:	f503 74a2 	add.w	r4, r3, #324	; 0x144
 800b372:	4b10      	ldr	r3, [pc, #64]	; (800b3b4 <_ZN23FrontendApplicationBase39gotoMainScreenScreenSlideTransitionWestEv+0x50>)
 800b374:	61bb      	str	r3, [r7, #24]
 800b376:	2300      	movs	r3, #0
 800b378:	61fb      	str	r3, [r7, #28]
 800b37a:	f107 0008 	add.w	r0, r7, #8
 800b37e:	f107 0318 	add.w	r3, r7, #24
 800b382:	cb0c      	ldmia	r3, {r2, r3}
 800b384:	6879      	ldr	r1, [r7, #4]
 800b386:	f000 f9bd 	bl	800b704 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 800b38a:	f107 0308 	add.w	r3, r7, #8
 800b38e:	4619      	mov	r1, r3
 800b390:	4620      	mov	r0, r4
 800b392:	f7ff ffcb 	bl	800b32c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 800b396:	f107 0308 	add.w	r3, r7, #8
 800b39a:	4618      	mov	r0, r3
 800b39c:	f001 faf8 	bl	800c990 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 800b3a0:	687b      	ldr	r3, [r7, #4]
 800b3a2:	f503 72a2 	add.w	r2, r3, #324	; 0x144
 800b3a6:	687b      	ldr	r3, [r7, #4]
 800b3a8:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
}
 800b3ac:	bf00      	nop
 800b3ae:	3724      	adds	r7, #36	; 0x24
 800b3b0:	46bd      	mov	sp, r7
 800b3b2:	bd90      	pop	{r4, r7, pc}
 800b3b4:	0800b3b9 	.word	0x0800b3b9

0800b3b8 <_ZN23FrontendApplicationBase43gotoMainScreenScreenSlideTransitionWestImplEv>:

void FrontendApplicationBase::gotoMainScreenScreenSlideTransitionWestImpl()
{
 800b3b8:	b580      	push	{r7, lr}
 800b3ba:	b084      	sub	sp, #16
 800b3bc:	af02      	add	r7, sp, #8
 800b3be:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<MainScreenView, MainScreenPresenter, touchgfx::SlideTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800b3c0:	687b      	ldr	r3, [r7, #4]
 800b3c2:	f503 719e 	add.w	r1, r3, #316	; 0x13c
 800b3c6:	687b      	ldr	r3, [r7, #4]
 800b3c8:	f8d3 3154 	ldr.w	r3, [r3, #340]	; 0x154
 800b3cc:	461a      	mov	r2, r3
 800b3ce:	687b      	ldr	r3, [r7, #4]
 800b3d0:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 800b3d4:	9300      	str	r3, [sp, #0]
 800b3d6:	4b04      	ldr	r3, [pc, #16]	; (800b3e8 <_ZN23FrontendApplicationBase43gotoMainScreenScreenSlideTransitionWestImplEv+0x30>)
 800b3d8:	4804      	ldr	r0, [pc, #16]	; (800b3ec <_ZN23FrontendApplicationBase43gotoMainScreenScreenSlideTransitionWestImplEv+0x34>)
 800b3da:	f000 f9b3 	bl	800b744 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 800b3de:	bf00      	nop
 800b3e0:	3708      	adds	r7, #8
 800b3e2:	46bd      	mov	sp, r7
 800b3e4:	bd80      	pop	{r7, pc}
 800b3e6:	bf00      	nop
 800b3e8:	20002294 	.word	0x20002294
 800b3ec:	20002290 	.word	0x20002290

0800b3f0 <_ZN23FrontendApplicationBase40gotoClockScreenScreenSlideTransitionEastEv>:

// ClockScreen

void FrontendApplicationBase::gotoClockScreenScreenSlideTransitionEast()
{
 800b3f0:	b590      	push	{r4, r7, lr}
 800b3f2:	b089      	sub	sp, #36	; 0x24
 800b3f4:	af00      	add	r7, sp, #0
 800b3f6:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoClockScreenScreenSlideTransitionEastImpl);
 800b3f8:	687b      	ldr	r3, [r7, #4]
 800b3fa:	f503 74a2 	add.w	r4, r3, #324	; 0x144
 800b3fe:	4b10      	ldr	r3, [pc, #64]	; (800b440 <_ZN23FrontendApplicationBase40gotoClockScreenScreenSlideTransitionEastEv+0x50>)
 800b400:	61bb      	str	r3, [r7, #24]
 800b402:	2300      	movs	r3, #0
 800b404:	61fb      	str	r3, [r7, #28]
 800b406:	f107 0008 	add.w	r0, r7, #8
 800b40a:	f107 0318 	add.w	r3, r7, #24
 800b40e:	cb0c      	ldmia	r3, {r2, r3}
 800b410:	6879      	ldr	r1, [r7, #4]
 800b412:	f000 f977 	bl	800b704 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 800b416:	f107 0308 	add.w	r3, r7, #8
 800b41a:	4619      	mov	r1, r3
 800b41c:	4620      	mov	r0, r4
 800b41e:	f7ff ff85 	bl	800b32c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 800b422:	f107 0308 	add.w	r3, r7, #8
 800b426:	4618      	mov	r0, r3
 800b428:	f001 fab2 	bl	800c990 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 800b42c:	687b      	ldr	r3, [r7, #4]
 800b42e:	f503 72a2 	add.w	r2, r3, #324	; 0x144
 800b432:	687b      	ldr	r3, [r7, #4]
 800b434:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
}
 800b438:	bf00      	nop
 800b43a:	3724      	adds	r7, #36	; 0x24
 800b43c:	46bd      	mov	sp, r7
 800b43e:	bd90      	pop	{r4, r7, pc}
 800b440:	0800b445 	.word	0x0800b445

0800b444 <_ZN23FrontendApplicationBase44gotoClockScreenScreenSlideTransitionEastImplEv>:

void FrontendApplicationBase::gotoClockScreenScreenSlideTransitionEastImpl()
{
 800b444:	b580      	push	{r7, lr}
 800b446:	b084      	sub	sp, #16
 800b448:	af02      	add	r7, sp, #8
 800b44a:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<ClockScreenView, ClockScreenPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800b44c:	687b      	ldr	r3, [r7, #4]
 800b44e:	f503 719e 	add.w	r1, r3, #316	; 0x13c
 800b452:	687b      	ldr	r3, [r7, #4]
 800b454:	f8d3 3154 	ldr.w	r3, [r3, #340]	; 0x154
 800b458:	461a      	mov	r2, r3
 800b45a:	687b      	ldr	r3, [r7, #4]
 800b45c:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 800b460:	9300      	str	r3, [sp, #0]
 800b462:	4b04      	ldr	r3, [pc, #16]	; (800b474 <_ZN23FrontendApplicationBase44gotoClockScreenScreenSlideTransitionEastImplEv+0x30>)
 800b464:	4804      	ldr	r0, [pc, #16]	; (800b478 <_ZN23FrontendApplicationBase44gotoClockScreenScreenSlideTransitionEastImplEv+0x34>)
 800b466:	f000 fa89 	bl	800b97c <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 800b46a:	bf00      	nop
 800b46c:	3708      	adds	r7, #8
 800b46e:	46bd      	mov	sp, r7
 800b470:	bd80      	pop	{r7, pc}
 800b472:	bf00      	nop
 800b474:	20002294 	.word	0x20002294
 800b478:	20002290 	.word	0x20002290

0800b47c <_ZN23FrontendApplicationBase46gotoTemperatureScreenScreenSlideTransitionEastEv>:

// TemperatureScreen

void FrontendApplicationBase::gotoTemperatureScreenScreenSlideTransitionEast()
{
 800b47c:	b590      	push	{r4, r7, lr}
 800b47e:	b089      	sub	sp, #36	; 0x24
 800b480:	af00      	add	r7, sp, #0
 800b482:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoTemperatureScreenScreenSlideTransitionEastImpl);
 800b484:	687b      	ldr	r3, [r7, #4]
 800b486:	f503 74a2 	add.w	r4, r3, #324	; 0x144
 800b48a:	4b10      	ldr	r3, [pc, #64]	; (800b4cc <_ZN23FrontendApplicationBase46gotoTemperatureScreenScreenSlideTransitionEastEv+0x50>)
 800b48c:	61bb      	str	r3, [r7, #24]
 800b48e:	2300      	movs	r3, #0
 800b490:	61fb      	str	r3, [r7, #28]
 800b492:	f107 0008 	add.w	r0, r7, #8
 800b496:	f107 0318 	add.w	r3, r7, #24
 800b49a:	cb0c      	ldmia	r3, {r2, r3}
 800b49c:	6879      	ldr	r1, [r7, #4]
 800b49e:	f000 f931 	bl	800b704 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 800b4a2:	f107 0308 	add.w	r3, r7, #8
 800b4a6:	4619      	mov	r1, r3
 800b4a8:	4620      	mov	r0, r4
 800b4aa:	f7ff ff3f 	bl	800b32c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 800b4ae:	f107 0308 	add.w	r3, r7, #8
 800b4b2:	4618      	mov	r0, r3
 800b4b4:	f001 fa6c 	bl	800c990 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 800b4b8:	687b      	ldr	r3, [r7, #4]
 800b4ba:	f503 72a2 	add.w	r2, r3, #324	; 0x144
 800b4be:	687b      	ldr	r3, [r7, #4]
 800b4c0:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
}
 800b4c4:	bf00      	nop
 800b4c6:	3724      	adds	r7, #36	; 0x24
 800b4c8:	46bd      	mov	sp, r7
 800b4ca:	bd90      	pop	{r4, r7, pc}
 800b4cc:	0800b4d1 	.word	0x0800b4d1

0800b4d0 <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionEastImplEv>:

void FrontendApplicationBase::gotoTemperatureScreenScreenSlideTransitionEastImpl()
{
 800b4d0:	b580      	push	{r7, lr}
 800b4d2:	b084      	sub	sp, #16
 800b4d4:	af02      	add	r7, sp, #8
 800b4d6:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<TemperatureScreenView, TemperatureScreenPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800b4d8:	687b      	ldr	r3, [r7, #4]
 800b4da:	f503 719e 	add.w	r1, r3, #316	; 0x13c
 800b4de:	687b      	ldr	r3, [r7, #4]
 800b4e0:	f8d3 3154 	ldr.w	r3, [r3, #340]	; 0x154
 800b4e4:	461a      	mov	r2, r3
 800b4e6:	687b      	ldr	r3, [r7, #4]
 800b4e8:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 800b4ec:	9300      	str	r3, [sp, #0]
 800b4ee:	4b04      	ldr	r3, [pc, #16]	; (800b500 <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionEastImplEv+0x30>)
 800b4f0:	4804      	ldr	r0, [pc, #16]	; (800b504 <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionEastImplEv+0x34>)
 800b4f2:	f000 fb5d 	bl	800bbb0 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 800b4f6:	bf00      	nop
 800b4f8:	3708      	adds	r7, #8
 800b4fa:	46bd      	mov	sp, r7
 800b4fc:	bd80      	pop	{r7, pc}
 800b4fe:	bf00      	nop
 800b500:	20002294 	.word	0x20002294
 800b504:	20002290 	.word	0x20002290

0800b508 <_ZN23FrontendApplicationBase36gotoPressureScreenScreenNoTransitionEv>:

// PressureScreen

void FrontendApplicationBase::gotoPressureScreenScreenNoTransition()
{
 800b508:	b590      	push	{r4, r7, lr}
 800b50a:	b089      	sub	sp, #36	; 0x24
 800b50c:	af00      	add	r7, sp, #0
 800b50e:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoPressureScreenScreenNoTransitionImpl);
 800b510:	687b      	ldr	r3, [r7, #4]
 800b512:	f503 74a2 	add.w	r4, r3, #324	; 0x144
 800b516:	4b10      	ldr	r3, [pc, #64]	; (800b558 <_ZN23FrontendApplicationBase36gotoPressureScreenScreenNoTransitionEv+0x50>)
 800b518:	61bb      	str	r3, [r7, #24]
 800b51a:	2300      	movs	r3, #0
 800b51c:	61fb      	str	r3, [r7, #28]
 800b51e:	f107 0008 	add.w	r0, r7, #8
 800b522:	f107 0318 	add.w	r3, r7, #24
 800b526:	cb0c      	ldmia	r3, {r2, r3}
 800b528:	6879      	ldr	r1, [r7, #4]
 800b52a:	f000 f8eb 	bl	800b704 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 800b52e:	f107 0308 	add.w	r3, r7, #8
 800b532:	4619      	mov	r1, r3
 800b534:	4620      	mov	r0, r4
 800b536:	f7ff fef9 	bl	800b32c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 800b53a:	f107 0308 	add.w	r3, r7, #8
 800b53e:	4618      	mov	r0, r3
 800b540:	f001 fa26 	bl	800c990 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 800b544:	687b      	ldr	r3, [r7, #4]
 800b546:	f503 72a2 	add.w	r2, r3, #324	; 0x144
 800b54a:	687b      	ldr	r3, [r7, #4]
 800b54c:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
}
 800b550:	bf00      	nop
 800b552:	3724      	adds	r7, #36	; 0x24
 800b554:	46bd      	mov	sp, r7
 800b556:	bd90      	pop	{r4, r7, pc}
 800b558:	0800b55d 	.word	0x0800b55d

0800b55c <_ZN23FrontendApplicationBase40gotoPressureScreenScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoPressureScreenScreenNoTransitionImpl()
{
 800b55c:	b580      	push	{r7, lr}
 800b55e:	b084      	sub	sp, #16
 800b560:	af02      	add	r7, sp, #8
 800b562:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<PressureScreenView, PressureScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800b564:	687b      	ldr	r3, [r7, #4]
 800b566:	f503 719e 	add.w	r1, r3, #316	; 0x13c
 800b56a:	687b      	ldr	r3, [r7, #4]
 800b56c:	f8d3 3154 	ldr.w	r3, [r3, #340]	; 0x154
 800b570:	461a      	mov	r2, r3
 800b572:	687b      	ldr	r3, [r7, #4]
 800b574:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 800b578:	9300      	str	r3, [sp, #0]
 800b57a:	4b04      	ldr	r3, [pc, #16]	; (800b58c <_ZN23FrontendApplicationBase40gotoPressureScreenScreenNoTransitionImplEv+0x30>)
 800b57c:	4804      	ldr	r0, [pc, #16]	; (800b590 <_ZN23FrontendApplicationBase40gotoPressureScreenScreenNoTransitionImplEv+0x34>)
 800b57e:	f000 fc43 	bl	800be08 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 800b582:	bf00      	nop
 800b584:	3708      	adds	r7, #8
 800b586:	46bd      	mov	sp, r7
 800b588:	bd80      	pop	{r7, pc}
 800b58a:	bf00      	nop
 800b58c:	20002294 	.word	0x20002294
 800b590:	20002290 	.word	0x20002290

0800b594 <_ZN23FrontendApplicationBase43gotoPressureScreenScreenSlideTransitionEastEv>:

void FrontendApplicationBase::gotoPressureScreenScreenSlideTransitionEast()
{
 800b594:	b590      	push	{r4, r7, lr}
 800b596:	b089      	sub	sp, #36	; 0x24
 800b598:	af00      	add	r7, sp, #0
 800b59a:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoPressureScreenScreenSlideTransitionEastImpl);
 800b59c:	687b      	ldr	r3, [r7, #4]
 800b59e:	f503 74a2 	add.w	r4, r3, #324	; 0x144
 800b5a2:	4b10      	ldr	r3, [pc, #64]	; (800b5e4 <_ZN23FrontendApplicationBase43gotoPressureScreenScreenSlideTransitionEastEv+0x50>)
 800b5a4:	61bb      	str	r3, [r7, #24]
 800b5a6:	2300      	movs	r3, #0
 800b5a8:	61fb      	str	r3, [r7, #28]
 800b5aa:	f107 0008 	add.w	r0, r7, #8
 800b5ae:	f107 0318 	add.w	r3, r7, #24
 800b5b2:	cb0c      	ldmia	r3, {r2, r3}
 800b5b4:	6879      	ldr	r1, [r7, #4]
 800b5b6:	f000 f8a5 	bl	800b704 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 800b5ba:	f107 0308 	add.w	r3, r7, #8
 800b5be:	4619      	mov	r1, r3
 800b5c0:	4620      	mov	r0, r4
 800b5c2:	f7ff feb3 	bl	800b32c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 800b5c6:	f107 0308 	add.w	r3, r7, #8
 800b5ca:	4618      	mov	r0, r3
 800b5cc:	f001 f9e0 	bl	800c990 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 800b5d0:	687b      	ldr	r3, [r7, #4]
 800b5d2:	f503 72a2 	add.w	r2, r3, #324	; 0x144
 800b5d6:	687b      	ldr	r3, [r7, #4]
 800b5d8:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
}
 800b5dc:	bf00      	nop
 800b5de:	3724      	adds	r7, #36	; 0x24
 800b5e0:	46bd      	mov	sp, r7
 800b5e2:	bd90      	pop	{r4, r7, pc}
 800b5e4:	0800b5e9 	.word	0x0800b5e9

0800b5e8 <_ZN23FrontendApplicationBase47gotoPressureScreenScreenSlideTransitionEastImplEv>:

void FrontendApplicationBase::gotoPressureScreenScreenSlideTransitionEastImpl()
{
 800b5e8:	b580      	push	{r7, lr}
 800b5ea:	b084      	sub	sp, #16
 800b5ec:	af02      	add	r7, sp, #8
 800b5ee:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<PressureScreenView, PressureScreenPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800b5f0:	687b      	ldr	r3, [r7, #4]
 800b5f2:	f503 719e 	add.w	r1, r3, #316	; 0x13c
 800b5f6:	687b      	ldr	r3, [r7, #4]
 800b5f8:	f8d3 3154 	ldr.w	r3, [r3, #340]	; 0x154
 800b5fc:	461a      	mov	r2, r3
 800b5fe:	687b      	ldr	r3, [r7, #4]
 800b600:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 800b604:	9300      	str	r3, [sp, #0]
 800b606:	4b04      	ldr	r3, [pc, #16]	; (800b618 <_ZN23FrontendApplicationBase47gotoPressureScreenScreenSlideTransitionEastImplEv+0x30>)
 800b608:	4804      	ldr	r0, [pc, #16]	; (800b61c <_ZN23FrontendApplicationBase47gotoPressureScreenScreenSlideTransitionEastImplEv+0x34>)
 800b60a:	f000 fd17 	bl	800c03c <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 800b60e:	bf00      	nop
 800b610:	3708      	adds	r7, #8
 800b612:	46bd      	mov	sp, r7
 800b614:	bd80      	pop	{r7, pc}
 800b616:	bf00      	nop
 800b618:	20002294 	.word	0x20002294
 800b61c:	20002290 	.word	0x20002290

0800b620 <_ZN23FrontendApplicationBase37gotoCOScreenScreenSlideTransitionEastEv>:

// COScreen

void FrontendApplicationBase::gotoCOScreenScreenSlideTransitionEast()
{
 800b620:	b590      	push	{r4, r7, lr}
 800b622:	b089      	sub	sp, #36	; 0x24
 800b624:	af00      	add	r7, sp, #0
 800b626:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoCOScreenScreenSlideTransitionEastImpl);
 800b628:	687b      	ldr	r3, [r7, #4]
 800b62a:	f503 74a2 	add.w	r4, r3, #324	; 0x144
 800b62e:	4b10      	ldr	r3, [pc, #64]	; (800b670 <_ZN23FrontendApplicationBase37gotoCOScreenScreenSlideTransitionEastEv+0x50>)
 800b630:	61bb      	str	r3, [r7, #24]
 800b632:	2300      	movs	r3, #0
 800b634:	61fb      	str	r3, [r7, #28]
 800b636:	f107 0008 	add.w	r0, r7, #8
 800b63a:	f107 0318 	add.w	r3, r7, #24
 800b63e:	cb0c      	ldmia	r3, {r2, r3}
 800b640:	6879      	ldr	r1, [r7, #4]
 800b642:	f000 f85f 	bl	800b704 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 800b646:	f107 0308 	add.w	r3, r7, #8
 800b64a:	4619      	mov	r1, r3
 800b64c:	4620      	mov	r0, r4
 800b64e:	f7ff fe6d 	bl	800b32c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 800b652:	f107 0308 	add.w	r3, r7, #8
 800b656:	4618      	mov	r0, r3
 800b658:	f001 f99a 	bl	800c990 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 800b65c:	687b      	ldr	r3, [r7, #4]
 800b65e:	f503 72a2 	add.w	r2, r3, #324	; 0x144
 800b662:	687b      	ldr	r3, [r7, #4]
 800b664:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
}
 800b668:	bf00      	nop
 800b66a:	3724      	adds	r7, #36	; 0x24
 800b66c:	46bd      	mov	sp, r7
 800b66e:	bd90      	pop	{r4, r7, pc}
 800b670:	0800b675 	.word	0x0800b675

0800b674 <_ZN23FrontendApplicationBase41gotoCOScreenScreenSlideTransitionEastImplEv>:

void FrontendApplicationBase::gotoCOScreenScreenSlideTransitionEastImpl()
{
 800b674:	b580      	push	{r7, lr}
 800b676:	b084      	sub	sp, #16
 800b678:	af02      	add	r7, sp, #8
 800b67a:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<COScreenView, COScreenPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800b67c:	687b      	ldr	r3, [r7, #4]
 800b67e:	f503 719e 	add.w	r1, r3, #316	; 0x13c
 800b682:	687b      	ldr	r3, [r7, #4]
 800b684:	f8d3 3154 	ldr.w	r3, [r3, #340]	; 0x154
 800b688:	461a      	mov	r2, r3
 800b68a:	687b      	ldr	r3, [r7, #4]
 800b68c:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 800b690:	9300      	str	r3, [sp, #0]
 800b692:	4b04      	ldr	r3, [pc, #16]	; (800b6a4 <_ZN23FrontendApplicationBase41gotoCOScreenScreenSlideTransitionEastImplEv+0x30>)
 800b694:	4804      	ldr	r0, [pc, #16]	; (800b6a8 <_ZN23FrontendApplicationBase41gotoCOScreenScreenSlideTransitionEastImplEv+0x34>)
 800b696:	f000 fdeb 	bl	800c270 <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 800b69a:	bf00      	nop
 800b69c:	3708      	adds	r7, #8
 800b69e:	46bd      	mov	sp, r7
 800b6a0:	bd80      	pop	{r7, pc}
 800b6a2:	bf00      	nop
 800b6a4:	20002294 	.word	0x20002294
 800b6a8:	20002290 	.word	0x20002290

0800b6ac <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>:
class GenericCallback<void>
 800b6ac:	b480      	push	{r7}
 800b6ae:	b083      	sub	sp, #12
 800b6b0:	af00      	add	r7, sp, #0
 800b6b2:	6078      	str	r0, [r7, #4]
 800b6b4:	4a04      	ldr	r2, [pc, #16]	; (800b6c8 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev+0x1c>)
 800b6b6:	687b      	ldr	r3, [r7, #4]
 800b6b8:	601a      	str	r2, [r3, #0]
 800b6ba:	687b      	ldr	r3, [r7, #4]
 800b6bc:	4618      	mov	r0, r3
 800b6be:	370c      	adds	r7, #12
 800b6c0:	46bd      	mov	sp, r7
 800b6c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b6c6:	4770      	bx	lr
 800b6c8:	0802e160 	.word	0x0802e160

0800b6cc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>:
{
    /** Initializes a new instance of the Callback class. */
    Callback()
 800b6cc:	b580      	push	{r7, lr}
 800b6ce:	b082      	sub	sp, #8
 800b6d0:	af00      	add	r7, sp, #0
 800b6d2:	6078      	str	r0, [r7, #4]
        : pobject(0), pmemfun(0)
 800b6d4:	687b      	ldr	r3, [r7, #4]
 800b6d6:	4618      	mov	r0, r3
 800b6d8:	f7ff ffe8 	bl	800b6ac <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 800b6dc:	4a08      	ldr	r2, [pc, #32]	; (800b700 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev+0x34>)
 800b6de:	687b      	ldr	r3, [r7, #4]
 800b6e0:	601a      	str	r2, [r3, #0]
 800b6e2:	687b      	ldr	r3, [r7, #4]
 800b6e4:	2200      	movs	r2, #0
 800b6e6:	605a      	str	r2, [r3, #4]
 800b6e8:	687b      	ldr	r3, [r7, #4]
 800b6ea:	2200      	movs	r2, #0
 800b6ec:	609a      	str	r2, [r3, #8]
 800b6ee:	687b      	ldr	r3, [r7, #4]
 800b6f0:	2200      	movs	r2, #0
 800b6f2:	60da      	str	r2, [r3, #12]
    {
    }
 800b6f4:	687b      	ldr	r3, [r7, #4]
 800b6f6:	4618      	mov	r0, r3
 800b6f8:	3708      	adds	r7, #8
 800b6fa:	46bd      	mov	sp, r7
 800b6fc:	bd80      	pop	{r7, pc}
 800b6fe:	bf00      	nop
 800b700:	0802e0d0 	.word	0x0802e0d0

0800b704 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>:
     *
     * @param [in] pObject   Pointer to the object on which the function should be called.
     * @param [in] pmemfun_0 Address of member function. This is the version where function takes zero
     *                       arguments.
     */
    Callback(dest_type* pObject, void (dest_type::*pmemfun_0)())
 800b704:	b580      	push	{r7, lr}
 800b706:	b084      	sub	sp, #16
 800b708:	af00      	add	r7, sp, #0
 800b70a:	60f8      	str	r0, [r7, #12]
 800b70c:	60b9      	str	r1, [r7, #8]
 800b70e:	4639      	mov	r1, r7
 800b710:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_0)
 800b714:	68fb      	ldr	r3, [r7, #12]
 800b716:	4618      	mov	r0, r3
 800b718:	f7ff ffc8 	bl	800b6ac <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 800b71c:	4a08      	ldr	r2, [pc, #32]	; (800b740 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE+0x3c>)
 800b71e:	68fb      	ldr	r3, [r7, #12]
 800b720:	601a      	str	r2, [r3, #0]
 800b722:	68fb      	ldr	r3, [r7, #12]
 800b724:	68ba      	ldr	r2, [r7, #8]
 800b726:	605a      	str	r2, [r3, #4]
 800b728:	68fb      	ldr	r3, [r7, #12]
 800b72a:	3308      	adds	r3, #8
 800b72c:	463a      	mov	r2, r7
 800b72e:	e892 0003 	ldmia.w	r2, {r0, r1}
 800b732:	e883 0003 	stmia.w	r3, {r0, r1}
    {
    }
 800b736:	68fb      	ldr	r3, [r7, #12]
 800b738:	4618      	mov	r0, r3
 800b73a:	3710      	adds	r7, #16
 800b73c:	46bd      	mov	sp, r7
 800b73e:	bd80      	pop	{r7, pc}
 800b740:	0802e0d0 	.word	0x0802e0d0

0800b744 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800b744:	b590      	push	{r4, r7, lr}
 800b746:	b08f      	sub	sp, #60	; 0x3c
 800b748:	af00      	add	r7, sp, #0
 800b74a:	60f8      	str	r0, [r7, #12]
 800b74c:	60b9      	str	r1, [r7, #8]
 800b74e:	607a      	str	r2, [r7, #4]
 800b750:	603b      	str	r3, [r7, #0]
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800b752:	687b      	ldr	r3, [r7, #4]
 800b754:	689a      	ldr	r2, [r3, #8]
 800b756:	687b      	ldr	r3, [r7, #4]
 800b758:	689b      	ldr	r3, [r3, #8]
 800b75a:	681b      	ldr	r3, [r3, #0]
 800b75c:	3320      	adds	r3, #32
 800b75e:	681b      	ldr	r3, [r3, #0]
 800b760:	4610      	mov	r0, r2
 800b762:	4798      	blx	r3
 800b764:	4603      	mov	r3, r0
 800b766:	f240 420b 	movw	r2, #1035	; 0x40b
 800b76a:	4293      	cmp	r3, r2
 800b76c:	d805      	bhi.n	800b77a <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x36>
 800b76e:	4b7e      	ldr	r3, [pc, #504]	; (800b968 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800b770:	4a7e      	ldr	r2, [pc, #504]	; (800b96c <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800b772:	21a3      	movs	r1, #163	; 0xa3
 800b774:	487e      	ldr	r0, [pc, #504]	; (800b970 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 800b776:	f01f fde5 	bl	802b344 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800b77a:	687b      	ldr	r3, [r7, #4]
 800b77c:	685a      	ldr	r2, [r3, #4]
 800b77e:	687b      	ldr	r3, [r7, #4]
 800b780:	685b      	ldr	r3, [r3, #4]
 800b782:	681b      	ldr	r3, [r3, #0]
 800b784:	3320      	adds	r3, #32
 800b786:	681b      	ldr	r3, [r3, #0]
 800b788:	4610      	mov	r0, r2
 800b78a:	4798      	blx	r3
 800b78c:	4603      	mov	r3, r0
 800b78e:	2b0f      	cmp	r3, #15
 800b790:	d805      	bhi.n	800b79e <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x5a>
 800b792:	4b78      	ldr	r3, [pc, #480]	; (800b974 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 800b794:	4a75      	ldr	r2, [pc, #468]	; (800b96c <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800b796:	21a4      	movs	r1, #164	; 0xa4
 800b798:	4875      	ldr	r0, [pc, #468]	; (800b970 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 800b79a:	f01f fdd3 	bl	802b344 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800b79e:	687b      	ldr	r3, [r7, #4]
 800b7a0:	68da      	ldr	r2, [r3, #12]
 800b7a2:	687b      	ldr	r3, [r7, #4]
 800b7a4:	68db      	ldr	r3, [r3, #12]
 800b7a6:	681b      	ldr	r3, [r3, #0]
 800b7a8:	3320      	adds	r3, #32
 800b7aa:	681b      	ldr	r3, [r3, #0]
 800b7ac:	4610      	mov	r0, r2
 800b7ae:	4798      	blx	r3
 800b7b0:	4603      	mov	r3, r0
 800b7b2:	2b3f      	cmp	r3, #63	; 0x3f
 800b7b4:	d805      	bhi.n	800b7c2 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7e>
 800b7b6:	4b70      	ldr	r3, [pc, #448]	; (800b978 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x234>)
 800b7b8:	4a6c      	ldr	r2, [pc, #432]	; (800b96c <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800b7ba:	21a5      	movs	r1, #165	; 0xa5
 800b7bc:	486c      	ldr	r0, [pc, #432]	; (800b970 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 800b7be:	f01f fdc1 	bl	802b344 <__assert_func>
 800b7c2:	68fb      	ldr	r3, [r7, #12]
 800b7c4:	62bb      	str	r3, [r7, #40]	; 0x28
 800b7c6:	68bb      	ldr	r3, [r7, #8]
 800b7c8:	627b      	str	r3, [r7, #36]	; 0x24
 800b7ca:	683b      	ldr	r3, [r7, #0]
 800b7cc:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 800b7ce:	f00d fd6b 	bl	80192a8 <_ZN8touchgfx11Application11getInstanceEv>
 800b7d2:	4603      	mov	r3, r0
 800b7d4:	4618      	mov	r0, r3
 800b7d6:	f7ff fb9b 	bl	800af10 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800b7da:	6a3b      	ldr	r3, [r7, #32]
 800b7dc:	681b      	ldr	r3, [r3, #0]
 800b7de:	2b00      	cmp	r3, #0
 800b7e0:	d008      	beq.n	800b7f4 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xb0>
        (*currentTrans)->tearDown();
 800b7e2:	6a3b      	ldr	r3, [r7, #32]
 800b7e4:	681a      	ldr	r2, [r3, #0]
 800b7e6:	6a3b      	ldr	r3, [r7, #32]
 800b7e8:	681b      	ldr	r3, [r3, #0]
 800b7ea:	681b      	ldr	r3, [r3, #0]
 800b7ec:	330c      	adds	r3, #12
 800b7ee:	681b      	ldr	r3, [r3, #0]
 800b7f0:	4610      	mov	r0, r2
 800b7f2:	4798      	blx	r3
    if (*currentTrans)
 800b7f4:	6a3b      	ldr	r3, [r7, #32]
 800b7f6:	681b      	ldr	r3, [r3, #0]
 800b7f8:	2b00      	cmp	r3, #0
 800b7fa:	d007      	beq.n	800b80c <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc8>
        (*currentTrans)->~Transition();
 800b7fc:	6a3b      	ldr	r3, [r7, #32]
 800b7fe:	681a      	ldr	r2, [r3, #0]
 800b800:	6a3b      	ldr	r3, [r7, #32]
 800b802:	681b      	ldr	r3, [r3, #0]
 800b804:	681b      	ldr	r3, [r3, #0]
 800b806:	681b      	ldr	r3, [r3, #0]
 800b808:	4610      	mov	r0, r2
 800b80a:	4798      	blx	r3
    if (*currentScreen)
 800b80c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b80e:	681b      	ldr	r3, [r3, #0]
 800b810:	2b00      	cmp	r3, #0
 800b812:	d008      	beq.n	800b826 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe2>
        (*currentScreen)->tearDownScreen();
 800b814:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b816:	681a      	ldr	r2, [r3, #0]
 800b818:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b81a:	681b      	ldr	r3, [r3, #0]
 800b81c:	681b      	ldr	r3, [r3, #0]
 800b81e:	3314      	adds	r3, #20
 800b820:	681b      	ldr	r3, [r3, #0]
 800b822:	4610      	mov	r0, r2
 800b824:	4798      	blx	r3
    if (*currentPresenter)
 800b826:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b828:	681b      	ldr	r3, [r3, #0]
 800b82a:	2b00      	cmp	r3, #0
 800b82c:	d008      	beq.n	800b840 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfc>
        (*currentPresenter)->deactivate();
 800b82e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b830:	681a      	ldr	r2, [r3, #0]
 800b832:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b834:	681b      	ldr	r3, [r3, #0]
 800b836:	681b      	ldr	r3, [r3, #0]
 800b838:	3304      	adds	r3, #4
 800b83a:	681b      	ldr	r3, [r3, #0]
 800b83c:	4610      	mov	r0, r2
 800b83e:	4798      	blx	r3
    if (*currentScreen)
 800b840:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b842:	681b      	ldr	r3, [r3, #0]
 800b844:	2b00      	cmp	r3, #0
 800b846:	d007      	beq.n	800b858 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x114>
        (*currentScreen)->~Screen();
 800b848:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b84a:	681a      	ldr	r2, [r3, #0]
 800b84c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b84e:	681b      	ldr	r3, [r3, #0]
 800b850:	681b      	ldr	r3, [r3, #0]
 800b852:	681b      	ldr	r3, [r3, #0]
 800b854:	4610      	mov	r0, r2
 800b856:	4798      	blx	r3
    if (*currentPresenter)
 800b858:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b85a:	681b      	ldr	r3, [r3, #0]
 800b85c:	2b00      	cmp	r3, #0
 800b85e:	d008      	beq.n	800b872 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12e>
        (*currentPresenter)->~Presenter();
 800b860:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b862:	681a      	ldr	r2, [r3, #0]
 800b864:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b866:	681b      	ldr	r3, [r3, #0]
 800b868:	681b      	ldr	r3, [r3, #0]
 800b86a:	3308      	adds	r3, #8
 800b86c:	681b      	ldr	r3, [r3, #0]
 800b86e:	4610      	mov	r0, r2
 800b870:	4798      	blx	r3
}
 800b872:	bf00      	nop

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800b874:	687b      	ldr	r3, [r7, #4]
 800b876:	68db      	ldr	r3, [r3, #12]
 800b878:	2100      	movs	r1, #0
 800b87a:	4618      	mov	r0, r3
 800b87c:	f000 fe12 	bl	800c4a4 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE3EEEEERT_t>
 800b880:	4603      	mov	r3, r0
 800b882:	4619      	mov	r1, r3
 800b884:	2040      	movs	r0, #64	; 0x40
 800b886:	f7ff fa94 	bl	800adb2 <_ZnwjPv>
 800b88a:	4604      	mov	r4, r0
 800b88c:	2114      	movs	r1, #20
 800b88e:	4620      	mov	r0, r4
 800b890:	f000 fe3e 	bl	800c510 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh>
 800b894:	637c      	str	r4, [r7, #52]	; 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800b896:	687b      	ldr	r3, [r7, #4]
 800b898:	689b      	ldr	r3, [r3, #8]
 800b89a:	2100      	movs	r1, #0
 800b89c:	4618      	mov	r0, r3
 800b89e:	f000 fe87 	bl	800c5b0 <_ZN8touchgfx17AbstractPartition2atI14MainScreenViewEERT_t>
 800b8a2:	4603      	mov	r3, r0
 800b8a4:	4619      	mov	r1, r3
 800b8a6:	f240 400c 	movw	r0, #1036	; 0x40c
 800b8aa:	f7ff fa82 	bl	800adb2 <_ZnwjPv>
 800b8ae:	4604      	mov	r4, r0
 800b8b0:	4620      	mov	r0, r4
 800b8b2:	f004 ff91 	bl	80107d8 <_ZN14MainScreenViewC1Ev>
 800b8b6:	633c      	str	r4, [r7, #48]	; 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800b8b8:	687b      	ldr	r3, [r7, #4]
 800b8ba:	685b      	ldr	r3, [r3, #4]
 800b8bc:	2100      	movs	r1, #0
 800b8be:	4618      	mov	r0, r3
 800b8c0:	f000 fe89 	bl	800c5d6 <_ZN8touchgfx17AbstractPartition2atI19MainScreenPresenterEERT_t>
 800b8c4:	4603      	mov	r3, r0
 800b8c6:	4619      	mov	r1, r3
 800b8c8:	2010      	movs	r0, #16
 800b8ca:	f7ff fa72 	bl	800adb2 <_ZnwjPv>
 800b8ce:	4604      	mov	r4, r0
 800b8d0:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800b8d2:	4620      	mov	r0, r4
 800b8d4:	f004 ff28 	bl	8010728 <_ZN19MainScreenPresenterC1ER14MainScreenView>
 800b8d8:	62fc      	str	r4, [r7, #44]	; 0x2c
    *currentTrans = newTransition;
 800b8da:	683b      	ldr	r3, [r7, #0]
 800b8dc:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800b8de:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 800b8e0:	68bb      	ldr	r3, [r7, #8]
 800b8e2:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800b8e4:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 800b8e6:	68fb      	ldr	r3, [r7, #12]
 800b8e8:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800b8ea:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 800b8ec:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b8ee:	2b00      	cmp	r3, #0
 800b8f0:	d002      	beq.n	800b8f8 <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b4>
 800b8f2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b8f4:	3304      	adds	r3, #4
 800b8f6:	e000      	b.n	800b8fa <_ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b6>
 800b8f8:	2300      	movs	r3, #0
 800b8fa:	4619      	mov	r1, r3
 800b8fc:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 800b8fe:	f7ff fc4d 	bl	800b19c <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 800b902:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b904:	3304      	adds	r3, #4
 800b906:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 800b908:	4618      	mov	r0, r3
 800b90a:	f7ff fcba 	bl	800b282 <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 800b90e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b910:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800b912:	4618      	mov	r0, r3
 800b914:	f000 fe72 	bl	800c5fc <_ZN8touchgfx4ViewI19MainScreenPresenterE4bindERS1_>
 800b918:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b91a:	61fb      	str	r3, [r7, #28]
 800b91c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b91e:	61bb      	str	r3, [r7, #24]
 800b920:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800b922:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 800b924:	69fb      	ldr	r3, [r7, #28]
 800b926:	681b      	ldr	r3, [r3, #0]
 800b928:	330c      	adds	r3, #12
 800b92a:	681b      	ldr	r3, [r3, #0]
 800b92c:	69f8      	ldr	r0, [r7, #28]
 800b92e:	4798      	blx	r3
    newPresenter->activate();
 800b930:	69bb      	ldr	r3, [r7, #24]
 800b932:	681b      	ldr	r3, [r3, #0]
 800b934:	681b      	ldr	r3, [r3, #0]
 800b936:	69b8      	ldr	r0, [r7, #24]
 800b938:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800b93a:	6979      	ldr	r1, [r7, #20]
 800b93c:	69f8      	ldr	r0, [r7, #28]
 800b93e:	f00f fa6d 	bl	801ae1c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800b942:	697b      	ldr	r3, [r7, #20]
 800b944:	681b      	ldr	r3, [r3, #0]
 800b946:	3310      	adds	r3, #16
 800b948:	681b      	ldr	r3, [r3, #0]
 800b94a:	6978      	ldr	r0, [r7, #20]
 800b94c:	4798      	blx	r3
    newTransition->invalidate();
 800b94e:	697b      	ldr	r3, [r7, #20]
 800b950:	681b      	ldr	r3, [r3, #0]
 800b952:	3314      	adds	r3, #20
 800b954:	681b      	ldr	r3, [r3, #0]
 800b956:	6978      	ldr	r0, [r7, #20]
 800b958:	4798      	blx	r3
}
 800b95a:	bf00      	nop

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
 800b95c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
}
 800b95e:	4618      	mov	r0, r3
 800b960:	373c      	adds	r7, #60	; 0x3c
 800b962:	46bd      	mov	sp, r7
 800b964:	bd90      	pop	{r4, r7, pc}
 800b966:	bf00      	nop
 800b968:	0802c4bc 	.word	0x0802c4bc
 800b96c:	0802c54c 	.word	0x0802c54c
 800b970:	0802c66c 	.word	0x0802c66c
 800b974:	0802c6b0 	.word	0x0802c6b0
 800b978:	0802c754 	.word	0x0802c754

0800b97c <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800b97c:	b590      	push	{r4, r7, lr}
 800b97e:	b08f      	sub	sp, #60	; 0x3c
 800b980:	af00      	add	r7, sp, #0
 800b982:	60f8      	str	r0, [r7, #12]
 800b984:	60b9      	str	r1, [r7, #8]
 800b986:	607a      	str	r2, [r7, #4]
 800b988:	603b      	str	r3, [r7, #0]
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800b98a:	687b      	ldr	r3, [r7, #4]
 800b98c:	689a      	ldr	r2, [r3, #8]
 800b98e:	687b      	ldr	r3, [r7, #4]
 800b990:	689b      	ldr	r3, [r3, #8]
 800b992:	681b      	ldr	r3, [r3, #0]
 800b994:	3320      	adds	r3, #32
 800b996:	681b      	ldr	r3, [r3, #0]
 800b998:	4610      	mov	r0, r2
 800b99a:	4798      	blx	r3
 800b99c:	4603      	mov	r3, r0
 800b99e:	f5b3 7fcc 	cmp.w	r3, #408	; 0x198
 800b9a2:	d205      	bcs.n	800b9b0 <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 800b9a4:	4b7d      	ldr	r3, [pc, #500]	; (800bb9c <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 800b9a6:	4a7e      	ldr	r2, [pc, #504]	; (800bba0 <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800b9a8:	21a3      	movs	r1, #163	; 0xa3
 800b9aa:	487e      	ldr	r0, [pc, #504]	; (800bba4 <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800b9ac:	f01f fcca 	bl	802b344 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800b9b0:	687b      	ldr	r3, [r7, #4]
 800b9b2:	685a      	ldr	r2, [r3, #4]
 800b9b4:	687b      	ldr	r3, [r7, #4]
 800b9b6:	685b      	ldr	r3, [r3, #4]
 800b9b8:	681b      	ldr	r3, [r3, #0]
 800b9ba:	3320      	adds	r3, #32
 800b9bc:	681b      	ldr	r3, [r3, #0]
 800b9be:	4610      	mov	r0, r2
 800b9c0:	4798      	blx	r3
 800b9c2:	4603      	mov	r3, r0
 800b9c4:	2b0f      	cmp	r3, #15
 800b9c6:	d805      	bhi.n	800b9d4 <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 800b9c8:	4b77      	ldr	r3, [pc, #476]	; (800bba8 <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 800b9ca:	4a75      	ldr	r2, [pc, #468]	; (800bba0 <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800b9cc:	21a4      	movs	r1, #164	; 0xa4
 800b9ce:	4875      	ldr	r0, [pc, #468]	; (800bba4 <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800b9d0:	f01f fcb8 	bl	802b344 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800b9d4:	687b      	ldr	r3, [r7, #4]
 800b9d6:	68da      	ldr	r2, [r3, #12]
 800b9d8:	687b      	ldr	r3, [r7, #4]
 800b9da:	68db      	ldr	r3, [r3, #12]
 800b9dc:	681b      	ldr	r3, [r3, #0]
 800b9de:	3320      	adds	r3, #32
 800b9e0:	681b      	ldr	r3, [r3, #0]
 800b9e2:	4610      	mov	r0, r2
 800b9e4:	4798      	blx	r3
 800b9e6:	4603      	mov	r3, r0
 800b9e8:	2b3f      	cmp	r3, #63	; 0x3f
 800b9ea:	d805      	bhi.n	800b9f8 <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
 800b9ec:	4b6f      	ldr	r3, [pc, #444]	; (800bbac <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 800b9ee:	4a6c      	ldr	r2, [pc, #432]	; (800bba0 <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800b9f0:	21a5      	movs	r1, #165	; 0xa5
 800b9f2:	486c      	ldr	r0, [pc, #432]	; (800bba4 <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800b9f4:	f01f fca6 	bl	802b344 <__assert_func>
 800b9f8:	68fb      	ldr	r3, [r7, #12]
 800b9fa:	62bb      	str	r3, [r7, #40]	; 0x28
 800b9fc:	68bb      	ldr	r3, [r7, #8]
 800b9fe:	627b      	str	r3, [r7, #36]	; 0x24
 800ba00:	683b      	ldr	r3, [r7, #0]
 800ba02:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 800ba04:	f00d fc50 	bl	80192a8 <_ZN8touchgfx11Application11getInstanceEv>
 800ba08:	4603      	mov	r3, r0
 800ba0a:	4618      	mov	r0, r3
 800ba0c:	f7ff fa80 	bl	800af10 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800ba10:	6a3b      	ldr	r3, [r7, #32]
 800ba12:	681b      	ldr	r3, [r3, #0]
 800ba14:	2b00      	cmp	r3, #0
 800ba16:	d008      	beq.n	800ba2a <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xae>
        (*currentTrans)->tearDown();
 800ba18:	6a3b      	ldr	r3, [r7, #32]
 800ba1a:	681a      	ldr	r2, [r3, #0]
 800ba1c:	6a3b      	ldr	r3, [r7, #32]
 800ba1e:	681b      	ldr	r3, [r3, #0]
 800ba20:	681b      	ldr	r3, [r3, #0]
 800ba22:	330c      	adds	r3, #12
 800ba24:	681b      	ldr	r3, [r3, #0]
 800ba26:	4610      	mov	r0, r2
 800ba28:	4798      	blx	r3
    if (*currentTrans)
 800ba2a:	6a3b      	ldr	r3, [r7, #32]
 800ba2c:	681b      	ldr	r3, [r3, #0]
 800ba2e:	2b00      	cmp	r3, #0
 800ba30:	d007      	beq.n	800ba42 <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc6>
        (*currentTrans)->~Transition();
 800ba32:	6a3b      	ldr	r3, [r7, #32]
 800ba34:	681a      	ldr	r2, [r3, #0]
 800ba36:	6a3b      	ldr	r3, [r7, #32]
 800ba38:	681b      	ldr	r3, [r3, #0]
 800ba3a:	681b      	ldr	r3, [r3, #0]
 800ba3c:	681b      	ldr	r3, [r3, #0]
 800ba3e:	4610      	mov	r0, r2
 800ba40:	4798      	blx	r3
    if (*currentScreen)
 800ba42:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800ba44:	681b      	ldr	r3, [r3, #0]
 800ba46:	2b00      	cmp	r3, #0
 800ba48:	d008      	beq.n	800ba5c <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe0>
        (*currentScreen)->tearDownScreen();
 800ba4a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800ba4c:	681a      	ldr	r2, [r3, #0]
 800ba4e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800ba50:	681b      	ldr	r3, [r3, #0]
 800ba52:	681b      	ldr	r3, [r3, #0]
 800ba54:	3314      	adds	r3, #20
 800ba56:	681b      	ldr	r3, [r3, #0]
 800ba58:	4610      	mov	r0, r2
 800ba5a:	4798      	blx	r3
    if (*currentPresenter)
 800ba5c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ba5e:	681b      	ldr	r3, [r3, #0]
 800ba60:	2b00      	cmp	r3, #0
 800ba62:	d008      	beq.n	800ba76 <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfa>
        (*currentPresenter)->deactivate();
 800ba64:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ba66:	681a      	ldr	r2, [r3, #0]
 800ba68:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ba6a:	681b      	ldr	r3, [r3, #0]
 800ba6c:	681b      	ldr	r3, [r3, #0]
 800ba6e:	3304      	adds	r3, #4
 800ba70:	681b      	ldr	r3, [r3, #0]
 800ba72:	4610      	mov	r0, r2
 800ba74:	4798      	blx	r3
    if (*currentScreen)
 800ba76:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800ba78:	681b      	ldr	r3, [r3, #0]
 800ba7a:	2b00      	cmp	r3, #0
 800ba7c:	d007      	beq.n	800ba8e <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x112>
        (*currentScreen)->~Screen();
 800ba7e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800ba80:	681a      	ldr	r2, [r3, #0]
 800ba82:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800ba84:	681b      	ldr	r3, [r3, #0]
 800ba86:	681b      	ldr	r3, [r3, #0]
 800ba88:	681b      	ldr	r3, [r3, #0]
 800ba8a:	4610      	mov	r0, r2
 800ba8c:	4798      	blx	r3
    if (*currentPresenter)
 800ba8e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ba90:	681b      	ldr	r3, [r3, #0]
 800ba92:	2b00      	cmp	r3, #0
 800ba94:	d008      	beq.n	800baa8 <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
        (*currentPresenter)->~Presenter();
 800ba96:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ba98:	681a      	ldr	r2, [r3, #0]
 800ba9a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ba9c:	681b      	ldr	r3, [r3, #0]
 800ba9e:	681b      	ldr	r3, [r3, #0]
 800baa0:	3308      	adds	r3, #8
 800baa2:	681b      	ldr	r3, [r3, #0]
 800baa4:	4610      	mov	r0, r2
 800baa6:	4798      	blx	r3
}
 800baa8:	bf00      	nop
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800baaa:	687b      	ldr	r3, [r7, #4]
 800baac:	68db      	ldr	r3, [r3, #12]
 800baae:	2100      	movs	r1, #0
 800bab0:	4618      	mov	r0, r3
 800bab2:	f000 fdb1 	bl	800c618 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>
 800bab6:	4603      	mov	r3, r0
 800bab8:	4619      	mov	r1, r3
 800baba:	2040      	movs	r0, #64	; 0x40
 800babc:	f7ff f979 	bl	800adb2 <_ZnwjPv>
 800bac0:	4604      	mov	r4, r0
 800bac2:	2114      	movs	r1, #20
 800bac4:	4620      	mov	r0, r4
 800bac6:	f000 fdbb 	bl	800c640 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
 800baca:	637c      	str	r4, [r7, #52]	; 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800bacc:	687b      	ldr	r3, [r7, #4]
 800bace:	689b      	ldr	r3, [r3, #8]
 800bad0:	2100      	movs	r1, #0
 800bad2:	4618      	mov	r0, r3
 800bad4:	f000 fe06 	bl	800c6e4 <_ZN8touchgfx17AbstractPartition2atI15ClockScreenViewEERT_t>
 800bad8:	4603      	mov	r3, r0
 800bada:	4619      	mov	r1, r3
 800badc:	f44f 70cc 	mov.w	r0, #408	; 0x198
 800bae0:	f7ff f967 	bl	800adb2 <_ZnwjPv>
 800bae4:	4604      	mov	r4, r0
 800bae6:	4620      	mov	r0, r4
 800bae8:	f004 fc6c 	bl	80103c4 <_ZN15ClockScreenViewC1Ev>
 800baec:	633c      	str	r4, [r7, #48]	; 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800baee:	687b      	ldr	r3, [r7, #4]
 800baf0:	685b      	ldr	r3, [r3, #4]
 800baf2:	2100      	movs	r1, #0
 800baf4:	4618      	mov	r0, r3
 800baf6:	f000 fe08 	bl	800c70a <_ZN8touchgfx17AbstractPartition2atI20ClockScreenPresenterEERT_t>
 800bafa:	4603      	mov	r3, r0
 800bafc:	4619      	mov	r1, r3
 800bafe:	2010      	movs	r0, #16
 800bb00:	f7ff f957 	bl	800adb2 <_ZnwjPv>
 800bb04:	4604      	mov	r4, r0
 800bb06:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800bb08:	4620      	mov	r0, r4
 800bb0a:	f004 fbe3 	bl	80102d4 <_ZN20ClockScreenPresenterC1ER15ClockScreenView>
 800bb0e:	62fc      	str	r4, [r7, #44]	; 0x2c
    *currentTrans = newTransition;
 800bb10:	683b      	ldr	r3, [r7, #0]
 800bb12:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800bb14:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 800bb16:	68bb      	ldr	r3, [r7, #8]
 800bb18:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800bb1a:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 800bb1c:	68fb      	ldr	r3, [r7, #12]
 800bb1e:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800bb20:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 800bb22:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800bb24:	2b00      	cmp	r3, #0
 800bb26:	d002      	beq.n	800bb2e <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 800bb28:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800bb2a:	3304      	adds	r3, #4
 800bb2c:	e000      	b.n	800bb30 <_ZN8touchgfx14makeTransitionI15ClockScreenView20ClockScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b4>
 800bb2e:	2300      	movs	r3, #0
 800bb30:	4619      	mov	r1, r3
 800bb32:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 800bb34:	f7ff fb32 	bl	800b19c <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 800bb38:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800bb3a:	3304      	adds	r3, #4
 800bb3c:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 800bb3e:	4618      	mov	r0, r3
 800bb40:	f7ff fb9f 	bl	800b282 <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 800bb44:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800bb46:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800bb48:	4618      	mov	r0, r3
 800bb4a:	f000 fdf1 	bl	800c730 <_ZN8touchgfx4ViewI20ClockScreenPresenterE4bindERS1_>
 800bb4e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800bb50:	61fb      	str	r3, [r7, #28]
 800bb52:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800bb54:	61bb      	str	r3, [r7, #24]
 800bb56:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800bb58:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 800bb5a:	69fb      	ldr	r3, [r7, #28]
 800bb5c:	681b      	ldr	r3, [r3, #0]
 800bb5e:	330c      	adds	r3, #12
 800bb60:	681b      	ldr	r3, [r3, #0]
 800bb62:	69f8      	ldr	r0, [r7, #28]
 800bb64:	4798      	blx	r3
    newPresenter->activate();
 800bb66:	69bb      	ldr	r3, [r7, #24]
 800bb68:	681b      	ldr	r3, [r3, #0]
 800bb6a:	681b      	ldr	r3, [r3, #0]
 800bb6c:	69b8      	ldr	r0, [r7, #24]
 800bb6e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800bb70:	6979      	ldr	r1, [r7, #20]
 800bb72:	69f8      	ldr	r0, [r7, #28]
 800bb74:	f00f f952 	bl	801ae1c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800bb78:	697b      	ldr	r3, [r7, #20]
 800bb7a:	681b      	ldr	r3, [r3, #0]
 800bb7c:	3310      	adds	r3, #16
 800bb7e:	681b      	ldr	r3, [r3, #0]
 800bb80:	6978      	ldr	r0, [r7, #20]
 800bb82:	4798      	blx	r3
    newTransition->invalidate();
 800bb84:	697b      	ldr	r3, [r7, #20]
 800bb86:	681b      	ldr	r3, [r3, #0]
 800bb88:	3314      	adds	r3, #20
 800bb8a:	681b      	ldr	r3, [r3, #0]
 800bb8c:	6978      	ldr	r0, [r7, #20]
 800bb8e:	4798      	blx	r3
}
 800bb90:	bf00      	nop
    return newPresenter;
 800bb92:	6afb      	ldr	r3, [r7, #44]	; 0x2c
}
 800bb94:	4618      	mov	r0, r3
 800bb96:	373c      	adds	r7, #60	; 0x3c
 800bb98:	46bd      	mov	sp, r7
 800bb9a:	bd90      	pop	{r4, r7, pc}
 800bb9c:	0802c4bc 	.word	0x0802c4bc
 800bba0:	0802c7f8 	.word	0x0802c7f8
 800bba4:	0802c66c 	.word	0x0802c66c
 800bba8:	0802c6b0 	.word	0x0802c6b0
 800bbac:	0802c754 	.word	0x0802c754

0800bbb0 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800bbb0:	b590      	push	{r4, r7, lr}
 800bbb2:	b08f      	sub	sp, #60	; 0x3c
 800bbb4:	af00      	add	r7, sp, #0
 800bbb6:	60f8      	str	r0, [r7, #12]
 800bbb8:	60b9      	str	r1, [r7, #8]
 800bbba:	607a      	str	r2, [r7, #4]
 800bbbc:	603b      	str	r3, [r7, #0]
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800bbbe:	687b      	ldr	r3, [r7, #4]
 800bbc0:	689a      	ldr	r2, [r3, #8]
 800bbc2:	687b      	ldr	r3, [r7, #4]
 800bbc4:	689b      	ldr	r3, [r3, #8]
 800bbc6:	681b      	ldr	r3, [r3, #0]
 800bbc8:	3320      	adds	r3, #32
 800bbca:	681b      	ldr	r3, [r3, #0]
 800bbcc:	4610      	mov	r0, r2
 800bbce:	4798      	blx	r3
 800bbd0:	4603      	mov	r3, r0
 800bbd2:	f5b3 7f3d 	cmp.w	r3, #756	; 0x2f4
 800bbd6:	d205      	bcs.n	800bbe4 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 800bbd8:	4b7d      	ldr	r3, [pc, #500]	; (800bdd0 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 800bbda:	4a7e      	ldr	r2, [pc, #504]	; (800bdd4 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800bbdc:	21a3      	movs	r1, #163	; 0xa3
 800bbde:	487e      	ldr	r0, [pc, #504]	; (800bdd8 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800bbe0:	f01f fbb0 	bl	802b344 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800bbe4:	687b      	ldr	r3, [r7, #4]
 800bbe6:	685a      	ldr	r2, [r3, #4]
 800bbe8:	687b      	ldr	r3, [r7, #4]
 800bbea:	685b      	ldr	r3, [r3, #4]
 800bbec:	681b      	ldr	r3, [r3, #0]
 800bbee:	3320      	adds	r3, #32
 800bbf0:	681b      	ldr	r3, [r3, #0]
 800bbf2:	4610      	mov	r0, r2
 800bbf4:	4798      	blx	r3
 800bbf6:	4603      	mov	r3, r0
 800bbf8:	2b0f      	cmp	r3, #15
 800bbfa:	d805      	bhi.n	800bc08 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 800bbfc:	4b77      	ldr	r3, [pc, #476]	; (800bddc <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 800bbfe:	4a75      	ldr	r2, [pc, #468]	; (800bdd4 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800bc00:	21a4      	movs	r1, #164	; 0xa4
 800bc02:	4875      	ldr	r0, [pc, #468]	; (800bdd8 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800bc04:	f01f fb9e 	bl	802b344 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800bc08:	687b      	ldr	r3, [r7, #4]
 800bc0a:	68da      	ldr	r2, [r3, #12]
 800bc0c:	687b      	ldr	r3, [r7, #4]
 800bc0e:	68db      	ldr	r3, [r3, #12]
 800bc10:	681b      	ldr	r3, [r3, #0]
 800bc12:	3320      	adds	r3, #32
 800bc14:	681b      	ldr	r3, [r3, #0]
 800bc16:	4610      	mov	r0, r2
 800bc18:	4798      	blx	r3
 800bc1a:	4603      	mov	r3, r0
 800bc1c:	2b3f      	cmp	r3, #63	; 0x3f
 800bc1e:	d805      	bhi.n	800bc2c <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
 800bc20:	4b6f      	ldr	r3, [pc, #444]	; (800bde0 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 800bc22:	4a6c      	ldr	r2, [pc, #432]	; (800bdd4 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800bc24:	21a5      	movs	r1, #165	; 0xa5
 800bc26:	486c      	ldr	r0, [pc, #432]	; (800bdd8 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800bc28:	f01f fb8c 	bl	802b344 <__assert_func>
 800bc2c:	68fb      	ldr	r3, [r7, #12]
 800bc2e:	62bb      	str	r3, [r7, #40]	; 0x28
 800bc30:	68bb      	ldr	r3, [r7, #8]
 800bc32:	627b      	str	r3, [r7, #36]	; 0x24
 800bc34:	683b      	ldr	r3, [r7, #0]
 800bc36:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 800bc38:	f00d fb36 	bl	80192a8 <_ZN8touchgfx11Application11getInstanceEv>
 800bc3c:	4603      	mov	r3, r0
 800bc3e:	4618      	mov	r0, r3
 800bc40:	f7ff f966 	bl	800af10 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800bc44:	6a3b      	ldr	r3, [r7, #32]
 800bc46:	681b      	ldr	r3, [r3, #0]
 800bc48:	2b00      	cmp	r3, #0
 800bc4a:	d008      	beq.n	800bc5e <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xae>
        (*currentTrans)->tearDown();
 800bc4c:	6a3b      	ldr	r3, [r7, #32]
 800bc4e:	681a      	ldr	r2, [r3, #0]
 800bc50:	6a3b      	ldr	r3, [r7, #32]
 800bc52:	681b      	ldr	r3, [r3, #0]
 800bc54:	681b      	ldr	r3, [r3, #0]
 800bc56:	330c      	adds	r3, #12
 800bc58:	681b      	ldr	r3, [r3, #0]
 800bc5a:	4610      	mov	r0, r2
 800bc5c:	4798      	blx	r3
    if (*currentTrans)
 800bc5e:	6a3b      	ldr	r3, [r7, #32]
 800bc60:	681b      	ldr	r3, [r3, #0]
 800bc62:	2b00      	cmp	r3, #0
 800bc64:	d007      	beq.n	800bc76 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc6>
        (*currentTrans)->~Transition();
 800bc66:	6a3b      	ldr	r3, [r7, #32]
 800bc68:	681a      	ldr	r2, [r3, #0]
 800bc6a:	6a3b      	ldr	r3, [r7, #32]
 800bc6c:	681b      	ldr	r3, [r3, #0]
 800bc6e:	681b      	ldr	r3, [r3, #0]
 800bc70:	681b      	ldr	r3, [r3, #0]
 800bc72:	4610      	mov	r0, r2
 800bc74:	4798      	blx	r3
    if (*currentScreen)
 800bc76:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800bc78:	681b      	ldr	r3, [r3, #0]
 800bc7a:	2b00      	cmp	r3, #0
 800bc7c:	d008      	beq.n	800bc90 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe0>
        (*currentScreen)->tearDownScreen();
 800bc7e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800bc80:	681a      	ldr	r2, [r3, #0]
 800bc82:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800bc84:	681b      	ldr	r3, [r3, #0]
 800bc86:	681b      	ldr	r3, [r3, #0]
 800bc88:	3314      	adds	r3, #20
 800bc8a:	681b      	ldr	r3, [r3, #0]
 800bc8c:	4610      	mov	r0, r2
 800bc8e:	4798      	blx	r3
    if (*currentPresenter)
 800bc90:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bc92:	681b      	ldr	r3, [r3, #0]
 800bc94:	2b00      	cmp	r3, #0
 800bc96:	d008      	beq.n	800bcaa <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfa>
        (*currentPresenter)->deactivate();
 800bc98:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bc9a:	681a      	ldr	r2, [r3, #0]
 800bc9c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bc9e:	681b      	ldr	r3, [r3, #0]
 800bca0:	681b      	ldr	r3, [r3, #0]
 800bca2:	3304      	adds	r3, #4
 800bca4:	681b      	ldr	r3, [r3, #0]
 800bca6:	4610      	mov	r0, r2
 800bca8:	4798      	blx	r3
    if (*currentScreen)
 800bcaa:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800bcac:	681b      	ldr	r3, [r3, #0]
 800bcae:	2b00      	cmp	r3, #0
 800bcb0:	d007      	beq.n	800bcc2 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x112>
        (*currentScreen)->~Screen();
 800bcb2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800bcb4:	681a      	ldr	r2, [r3, #0]
 800bcb6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800bcb8:	681b      	ldr	r3, [r3, #0]
 800bcba:	681b      	ldr	r3, [r3, #0]
 800bcbc:	681b      	ldr	r3, [r3, #0]
 800bcbe:	4610      	mov	r0, r2
 800bcc0:	4798      	blx	r3
    if (*currentPresenter)
 800bcc2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bcc4:	681b      	ldr	r3, [r3, #0]
 800bcc6:	2b00      	cmp	r3, #0
 800bcc8:	d008      	beq.n	800bcdc <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
        (*currentPresenter)->~Presenter();
 800bcca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bccc:	681a      	ldr	r2, [r3, #0]
 800bcce:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bcd0:	681b      	ldr	r3, [r3, #0]
 800bcd2:	681b      	ldr	r3, [r3, #0]
 800bcd4:	3308      	adds	r3, #8
 800bcd6:	681b      	ldr	r3, [r3, #0]
 800bcd8:	4610      	mov	r0, r2
 800bcda:	4798      	blx	r3
}
 800bcdc:	bf00      	nop
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800bcde:	687b      	ldr	r3, [r7, #4]
 800bce0:	68db      	ldr	r3, [r3, #12]
 800bce2:	2100      	movs	r1, #0
 800bce4:	4618      	mov	r0, r3
 800bce6:	f000 fc97 	bl	800c618 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>
 800bcea:	4603      	mov	r3, r0
 800bcec:	4619      	mov	r1, r3
 800bcee:	2040      	movs	r0, #64	; 0x40
 800bcf0:	f7ff f85f 	bl	800adb2 <_ZnwjPv>
 800bcf4:	4604      	mov	r4, r0
 800bcf6:	2114      	movs	r1, #20
 800bcf8:	4620      	mov	r0, r4
 800bcfa:	f000 fca1 	bl	800c640 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
 800bcfe:	637c      	str	r4, [r7, #52]	; 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800bd00:	687b      	ldr	r3, [r7, #4]
 800bd02:	689b      	ldr	r3, [r3, #8]
 800bd04:	2100      	movs	r1, #0
 800bd06:	4618      	mov	r0, r3
 800bd08:	f000 fd20 	bl	800c74c <_ZN8touchgfx17AbstractPartition2atI21TemperatureScreenViewEERT_t>
 800bd0c:	4603      	mov	r3, r0
 800bd0e:	4619      	mov	r1, r3
 800bd10:	f44f 703d 	mov.w	r0, #756	; 0x2f4
 800bd14:	f7ff f84d 	bl	800adb2 <_ZnwjPv>
 800bd18:	4604      	mov	r4, r0
 800bd1a:	4620      	mov	r0, r4
 800bd1c:	f004 ff7c 	bl	8010c18 <_ZN21TemperatureScreenViewC1Ev>
 800bd20:	633c      	str	r4, [r7, #48]	; 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800bd22:	687b      	ldr	r3, [r7, #4]
 800bd24:	685b      	ldr	r3, [r3, #4]
 800bd26:	2100      	movs	r1, #0
 800bd28:	4618      	mov	r0, r3
 800bd2a:	f000 fd22 	bl	800c772 <_ZN8touchgfx17AbstractPartition2atI26TemperatureScreenPresenterEERT_t>
 800bd2e:	4603      	mov	r3, r0
 800bd30:	4619      	mov	r1, r3
 800bd32:	2010      	movs	r0, #16
 800bd34:	f7ff f83d 	bl	800adb2 <_ZnwjPv>
 800bd38:	4604      	mov	r4, r0
 800bd3a:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800bd3c:	4620      	mov	r0, r4
 800bd3e:	f004 fefb 	bl	8010b38 <_ZN26TemperatureScreenPresenterC1ER21TemperatureScreenView>
 800bd42:	62fc      	str	r4, [r7, #44]	; 0x2c
    *currentTrans = newTransition;
 800bd44:	683b      	ldr	r3, [r7, #0]
 800bd46:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800bd48:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 800bd4a:	68bb      	ldr	r3, [r7, #8]
 800bd4c:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800bd4e:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 800bd50:	68fb      	ldr	r3, [r7, #12]
 800bd52:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800bd54:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 800bd56:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800bd58:	2b00      	cmp	r3, #0
 800bd5a:	d002      	beq.n	800bd62 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 800bd5c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800bd5e:	3304      	adds	r3, #4
 800bd60:	e000      	b.n	800bd64 <_ZN8touchgfx14makeTransitionI21TemperatureScreenView26TemperatureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b4>
 800bd62:	2300      	movs	r3, #0
 800bd64:	4619      	mov	r1, r3
 800bd66:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 800bd68:	f7ff fa18 	bl	800b19c <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 800bd6c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800bd6e:	3304      	adds	r3, #4
 800bd70:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 800bd72:	4618      	mov	r0, r3
 800bd74:	f7ff fa85 	bl	800b282 <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 800bd78:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800bd7a:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800bd7c:	4618      	mov	r0, r3
 800bd7e:	f000 fd0b 	bl	800c798 <_ZN8touchgfx4ViewI26TemperatureScreenPresenterE4bindERS1_>
 800bd82:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800bd84:	61fb      	str	r3, [r7, #28]
 800bd86:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800bd88:	61bb      	str	r3, [r7, #24]
 800bd8a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800bd8c:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 800bd8e:	69fb      	ldr	r3, [r7, #28]
 800bd90:	681b      	ldr	r3, [r3, #0]
 800bd92:	330c      	adds	r3, #12
 800bd94:	681b      	ldr	r3, [r3, #0]
 800bd96:	69f8      	ldr	r0, [r7, #28]
 800bd98:	4798      	blx	r3
    newPresenter->activate();
 800bd9a:	69bb      	ldr	r3, [r7, #24]
 800bd9c:	681b      	ldr	r3, [r3, #0]
 800bd9e:	681b      	ldr	r3, [r3, #0]
 800bda0:	69b8      	ldr	r0, [r7, #24]
 800bda2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800bda4:	6979      	ldr	r1, [r7, #20]
 800bda6:	69f8      	ldr	r0, [r7, #28]
 800bda8:	f00f f838 	bl	801ae1c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800bdac:	697b      	ldr	r3, [r7, #20]
 800bdae:	681b      	ldr	r3, [r3, #0]
 800bdb0:	3310      	adds	r3, #16
 800bdb2:	681b      	ldr	r3, [r3, #0]
 800bdb4:	6978      	ldr	r0, [r7, #20]
 800bdb6:	4798      	blx	r3
    newTransition->invalidate();
 800bdb8:	697b      	ldr	r3, [r7, #20]
 800bdba:	681b      	ldr	r3, [r3, #0]
 800bdbc:	3314      	adds	r3, #20
 800bdbe:	681b      	ldr	r3, [r3, #0]
 800bdc0:	6978      	ldr	r0, [r7, #20]
 800bdc2:	4798      	blx	r3
}
 800bdc4:	bf00      	nop
    return newPresenter;
 800bdc6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
}
 800bdc8:	4618      	mov	r0, r3
 800bdca:	373c      	adds	r7, #60	; 0x3c
 800bdcc:	46bd      	mov	sp, r7
 800bdce:	bd90      	pop	{r4, r7, pc}
 800bdd0:	0802c4bc 	.word	0x0802c4bc
 800bdd4:	0802c918 	.word	0x0802c918
 800bdd8:	0802c66c 	.word	0x0802c66c
 800bddc:	0802c6b0 	.word	0x0802c6b0
 800bde0:	0802c754 	.word	0x0802c754

0800bde4 <_ZN8touchgfx12NoTransitionC1Ev>:
class NoTransition : public Transition
 800bde4:	b580      	push	{r7, lr}
 800bde6:	b082      	sub	sp, #8
 800bde8:	af00      	add	r7, sp, #0
 800bdea:	6078      	str	r0, [r7, #4]
 800bdec:	687b      	ldr	r3, [r7, #4]
 800bdee:	4618      	mov	r0, r3
 800bdf0:	f7ff f8e4 	bl	800afbc <_ZN8touchgfx10TransitionC1Ev>
 800bdf4:	4a03      	ldr	r2, [pc, #12]	; (800be04 <_ZN8touchgfx12NoTransitionC1Ev+0x20>)
 800bdf6:	687b      	ldr	r3, [r7, #4]
 800bdf8:	601a      	str	r2, [r3, #0]
 800bdfa:	687b      	ldr	r3, [r7, #4]
 800bdfc:	4618      	mov	r0, r3
 800bdfe:	3708      	adds	r7, #8
 800be00:	46bd      	mov	sp, r7
 800be02:	bd80      	pop	{r7, pc}
 800be04:	0802e058 	.word	0x0802e058

0800be08 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800be08:	b590      	push	{r4, r7, lr}
 800be0a:	b08f      	sub	sp, #60	; 0x3c
 800be0c:	af00      	add	r7, sp, #0
 800be0e:	60f8      	str	r0, [r7, #12]
 800be10:	60b9      	str	r1, [r7, #8]
 800be12:	607a      	str	r2, [r7, #4]
 800be14:	603b      	str	r3, [r7, #0]
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800be16:	687b      	ldr	r3, [r7, #4]
 800be18:	689a      	ldr	r2, [r3, #8]
 800be1a:	687b      	ldr	r3, [r7, #4]
 800be1c:	689b      	ldr	r3, [r3, #8]
 800be1e:	681b      	ldr	r3, [r3, #0]
 800be20:	3320      	adds	r3, #32
 800be22:	681b      	ldr	r3, [r3, #0]
 800be24:	4610      	mov	r0, r2
 800be26:	4798      	blx	r3
 800be28:	4603      	mov	r3, r0
 800be2a:	f5b3 7f3f 	cmp.w	r3, #764	; 0x2fc
 800be2e:	d205      	bcs.n	800be3c <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 800be30:	4b7d      	ldr	r3, [pc, #500]	; (800c028 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 800be32:	4a7e      	ldr	r2, [pc, #504]	; (800c02c <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800be34:	21a3      	movs	r1, #163	; 0xa3
 800be36:	487e      	ldr	r0, [pc, #504]	; (800c030 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800be38:	f01f fa84 	bl	802b344 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800be3c:	687b      	ldr	r3, [r7, #4]
 800be3e:	685a      	ldr	r2, [r3, #4]
 800be40:	687b      	ldr	r3, [r7, #4]
 800be42:	685b      	ldr	r3, [r3, #4]
 800be44:	681b      	ldr	r3, [r3, #0]
 800be46:	3320      	adds	r3, #32
 800be48:	681b      	ldr	r3, [r3, #0]
 800be4a:	4610      	mov	r0, r2
 800be4c:	4798      	blx	r3
 800be4e:	4603      	mov	r3, r0
 800be50:	2b0f      	cmp	r3, #15
 800be52:	d805      	bhi.n	800be60 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 800be54:	4b77      	ldr	r3, [pc, #476]	; (800c034 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 800be56:	4a75      	ldr	r2, [pc, #468]	; (800c02c <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800be58:	21a4      	movs	r1, #164	; 0xa4
 800be5a:	4875      	ldr	r0, [pc, #468]	; (800c030 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800be5c:	f01f fa72 	bl	802b344 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800be60:	687b      	ldr	r3, [r7, #4]
 800be62:	68da      	ldr	r2, [r3, #12]
 800be64:	687b      	ldr	r3, [r7, #4]
 800be66:	68db      	ldr	r3, [r3, #12]
 800be68:	681b      	ldr	r3, [r3, #0]
 800be6a:	3320      	adds	r3, #32
 800be6c:	681b      	ldr	r3, [r3, #0]
 800be6e:	4610      	mov	r0, r2
 800be70:	4798      	blx	r3
 800be72:	4603      	mov	r3, r0
 800be74:	2b0b      	cmp	r3, #11
 800be76:	d805      	bhi.n	800be84 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
 800be78:	4b6f      	ldr	r3, [pc, #444]	; (800c038 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 800be7a:	4a6c      	ldr	r2, [pc, #432]	; (800c02c <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800be7c:	21a5      	movs	r1, #165	; 0xa5
 800be7e:	486c      	ldr	r0, [pc, #432]	; (800c030 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800be80:	f01f fa60 	bl	802b344 <__assert_func>
 800be84:	68fb      	ldr	r3, [r7, #12]
 800be86:	62bb      	str	r3, [r7, #40]	; 0x28
 800be88:	68bb      	ldr	r3, [r7, #8]
 800be8a:	627b      	str	r3, [r7, #36]	; 0x24
 800be8c:	683b      	ldr	r3, [r7, #0]
 800be8e:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 800be90:	f00d fa0a 	bl	80192a8 <_ZN8touchgfx11Application11getInstanceEv>
 800be94:	4603      	mov	r3, r0
 800be96:	4618      	mov	r0, r3
 800be98:	f7ff f83a 	bl	800af10 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800be9c:	6a3b      	ldr	r3, [r7, #32]
 800be9e:	681b      	ldr	r3, [r3, #0]
 800bea0:	2b00      	cmp	r3, #0
 800bea2:	d008      	beq.n	800beb6 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xae>
        (*currentTrans)->tearDown();
 800bea4:	6a3b      	ldr	r3, [r7, #32]
 800bea6:	681a      	ldr	r2, [r3, #0]
 800bea8:	6a3b      	ldr	r3, [r7, #32]
 800beaa:	681b      	ldr	r3, [r3, #0]
 800beac:	681b      	ldr	r3, [r3, #0]
 800beae:	330c      	adds	r3, #12
 800beb0:	681b      	ldr	r3, [r3, #0]
 800beb2:	4610      	mov	r0, r2
 800beb4:	4798      	blx	r3
    if (*currentTrans)
 800beb6:	6a3b      	ldr	r3, [r7, #32]
 800beb8:	681b      	ldr	r3, [r3, #0]
 800beba:	2b00      	cmp	r3, #0
 800bebc:	d007      	beq.n	800bece <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc6>
        (*currentTrans)->~Transition();
 800bebe:	6a3b      	ldr	r3, [r7, #32]
 800bec0:	681a      	ldr	r2, [r3, #0]
 800bec2:	6a3b      	ldr	r3, [r7, #32]
 800bec4:	681b      	ldr	r3, [r3, #0]
 800bec6:	681b      	ldr	r3, [r3, #0]
 800bec8:	681b      	ldr	r3, [r3, #0]
 800beca:	4610      	mov	r0, r2
 800becc:	4798      	blx	r3
    if (*currentScreen)
 800bece:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800bed0:	681b      	ldr	r3, [r3, #0]
 800bed2:	2b00      	cmp	r3, #0
 800bed4:	d008      	beq.n	800bee8 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe0>
        (*currentScreen)->tearDownScreen();
 800bed6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800bed8:	681a      	ldr	r2, [r3, #0]
 800beda:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800bedc:	681b      	ldr	r3, [r3, #0]
 800bede:	681b      	ldr	r3, [r3, #0]
 800bee0:	3314      	adds	r3, #20
 800bee2:	681b      	ldr	r3, [r3, #0]
 800bee4:	4610      	mov	r0, r2
 800bee6:	4798      	blx	r3
    if (*currentPresenter)
 800bee8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800beea:	681b      	ldr	r3, [r3, #0]
 800beec:	2b00      	cmp	r3, #0
 800beee:	d008      	beq.n	800bf02 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfa>
        (*currentPresenter)->deactivate();
 800bef0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bef2:	681a      	ldr	r2, [r3, #0]
 800bef4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bef6:	681b      	ldr	r3, [r3, #0]
 800bef8:	681b      	ldr	r3, [r3, #0]
 800befa:	3304      	adds	r3, #4
 800befc:	681b      	ldr	r3, [r3, #0]
 800befe:	4610      	mov	r0, r2
 800bf00:	4798      	blx	r3
    if (*currentScreen)
 800bf02:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800bf04:	681b      	ldr	r3, [r3, #0]
 800bf06:	2b00      	cmp	r3, #0
 800bf08:	d007      	beq.n	800bf1a <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x112>
        (*currentScreen)->~Screen();
 800bf0a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800bf0c:	681a      	ldr	r2, [r3, #0]
 800bf0e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800bf10:	681b      	ldr	r3, [r3, #0]
 800bf12:	681b      	ldr	r3, [r3, #0]
 800bf14:	681b      	ldr	r3, [r3, #0]
 800bf16:	4610      	mov	r0, r2
 800bf18:	4798      	blx	r3
    if (*currentPresenter)
 800bf1a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bf1c:	681b      	ldr	r3, [r3, #0]
 800bf1e:	2b00      	cmp	r3, #0
 800bf20:	d008      	beq.n	800bf34 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
        (*currentPresenter)->~Presenter();
 800bf22:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bf24:	681a      	ldr	r2, [r3, #0]
 800bf26:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bf28:	681b      	ldr	r3, [r3, #0]
 800bf2a:	681b      	ldr	r3, [r3, #0]
 800bf2c:	3308      	adds	r3, #8
 800bf2e:	681b      	ldr	r3, [r3, #0]
 800bf30:	4610      	mov	r0, r2
 800bf32:	4798      	blx	r3
}
 800bf34:	bf00      	nop
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800bf36:	687b      	ldr	r3, [r7, #4]
 800bf38:	68db      	ldr	r3, [r3, #12]
 800bf3a:	2100      	movs	r1, #0
 800bf3c:	4618      	mov	r0, r3
 800bf3e:	f000 fc39 	bl	800c7b4 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 800bf42:	4603      	mov	r3, r0
 800bf44:	4619      	mov	r1, r3
 800bf46:	200c      	movs	r0, #12
 800bf48:	f7fe ff33 	bl	800adb2 <_ZnwjPv>
 800bf4c:	4604      	mov	r4, r0
 800bf4e:	4620      	mov	r0, r4
 800bf50:	f7ff ff48 	bl	800bde4 <_ZN8touchgfx12NoTransitionC1Ev>
 800bf54:	637c      	str	r4, [r7, #52]	; 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800bf56:	687b      	ldr	r3, [r7, #4]
 800bf58:	689b      	ldr	r3, [r3, #8]
 800bf5a:	2100      	movs	r1, #0
 800bf5c:	4618      	mov	r0, r3
 800bf5e:	f000 fc3c 	bl	800c7da <_ZN8touchgfx17AbstractPartition2atI18PressureScreenViewEERT_t>
 800bf62:	4603      	mov	r3, r0
 800bf64:	4619      	mov	r1, r3
 800bf66:	f44f 703f 	mov.w	r0, #764	; 0x2fc
 800bf6a:	f7fe ff22 	bl	800adb2 <_ZnwjPv>
 800bf6e:	4604      	mov	r4, r0
 800bf70:	4620      	mov	r0, r4
 800bf72:	f004 fd63 	bl	8010a3c <_ZN18PressureScreenViewC1Ev>
 800bf76:	633c      	str	r4, [r7, #48]	; 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800bf78:	687b      	ldr	r3, [r7, #4]
 800bf7a:	685b      	ldr	r3, [r3, #4]
 800bf7c:	2100      	movs	r1, #0
 800bf7e:	4618      	mov	r0, r3
 800bf80:	f000 fc3e 	bl	800c800 <_ZN8touchgfx17AbstractPartition2atI23PressureScreenPresenterEERT_t>
 800bf84:	4603      	mov	r3, r0
 800bf86:	4619      	mov	r1, r3
 800bf88:	2010      	movs	r0, #16
 800bf8a:	f7fe ff12 	bl	800adb2 <_ZnwjPv>
 800bf8e:	4604      	mov	r4, r0
 800bf90:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800bf92:	4620      	mov	r0, r4
 800bf94:	f004 fce2 	bl	801095c <_ZN23PressureScreenPresenterC1ER18PressureScreenView>
 800bf98:	62fc      	str	r4, [r7, #44]	; 0x2c
    *currentTrans = newTransition;
 800bf9a:	683b      	ldr	r3, [r7, #0]
 800bf9c:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800bf9e:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 800bfa0:	68bb      	ldr	r3, [r7, #8]
 800bfa2:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800bfa4:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 800bfa6:	68fb      	ldr	r3, [r7, #12]
 800bfa8:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800bfaa:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 800bfac:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800bfae:	2b00      	cmp	r3, #0
 800bfb0:	d002      	beq.n	800bfb8 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b0>
 800bfb2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800bfb4:	3304      	adds	r3, #4
 800bfb6:	e000      	b.n	800bfba <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 800bfb8:	2300      	movs	r3, #0
 800bfba:	4619      	mov	r1, r3
 800bfbc:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 800bfbe:	f7ff f8ed 	bl	800b19c <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 800bfc2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800bfc4:	3304      	adds	r3, #4
 800bfc6:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 800bfc8:	4618      	mov	r0, r3
 800bfca:	f7ff f95a 	bl	800b282 <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 800bfce:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800bfd0:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800bfd2:	4618      	mov	r0, r3
 800bfd4:	f000 fc27 	bl	800c826 <_ZN8touchgfx4ViewI23PressureScreenPresenterE4bindERS1_>
 800bfd8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800bfda:	61fb      	str	r3, [r7, #28]
 800bfdc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800bfde:	61bb      	str	r3, [r7, #24]
 800bfe0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800bfe2:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 800bfe4:	69fb      	ldr	r3, [r7, #28]
 800bfe6:	681b      	ldr	r3, [r3, #0]
 800bfe8:	330c      	adds	r3, #12
 800bfea:	681b      	ldr	r3, [r3, #0]
 800bfec:	69f8      	ldr	r0, [r7, #28]
 800bfee:	4798      	blx	r3
    newPresenter->activate();
 800bff0:	69bb      	ldr	r3, [r7, #24]
 800bff2:	681b      	ldr	r3, [r3, #0]
 800bff4:	681b      	ldr	r3, [r3, #0]
 800bff6:	69b8      	ldr	r0, [r7, #24]
 800bff8:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800bffa:	6979      	ldr	r1, [r7, #20]
 800bffc:	69f8      	ldr	r0, [r7, #28]
 800bffe:	f00e ff0d 	bl	801ae1c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800c002:	697b      	ldr	r3, [r7, #20]
 800c004:	681b      	ldr	r3, [r3, #0]
 800c006:	3310      	adds	r3, #16
 800c008:	681b      	ldr	r3, [r3, #0]
 800c00a:	6978      	ldr	r0, [r7, #20]
 800c00c:	4798      	blx	r3
    newTransition->invalidate();
 800c00e:	697b      	ldr	r3, [r7, #20]
 800c010:	681b      	ldr	r3, [r3, #0]
 800c012:	3314      	adds	r3, #20
 800c014:	681b      	ldr	r3, [r3, #0]
 800c016:	6978      	ldr	r0, [r7, #20]
 800c018:	4798      	blx	r3
}
 800c01a:	bf00      	nop
    return newPresenter;
 800c01c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
}
 800c01e:	4618      	mov	r0, r3
 800c020:	373c      	adds	r7, #60	; 0x3c
 800c022:	46bd      	mov	sp, r7
 800c024:	bd90      	pop	{r4, r7, pc}
 800c026:	bf00      	nop
 800c028:	0802c4bc 	.word	0x0802c4bc
 800c02c:	0802ca44 	.word	0x0802ca44
 800c030:	0802c66c 	.word	0x0802c66c
 800c034:	0802c6b0 	.word	0x0802c6b0
 800c038:	0802c754 	.word	0x0802c754

0800c03c <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800c03c:	b590      	push	{r4, r7, lr}
 800c03e:	b08f      	sub	sp, #60	; 0x3c
 800c040:	af00      	add	r7, sp, #0
 800c042:	60f8      	str	r0, [r7, #12]
 800c044:	60b9      	str	r1, [r7, #8]
 800c046:	607a      	str	r2, [r7, #4]
 800c048:	603b      	str	r3, [r7, #0]
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800c04a:	687b      	ldr	r3, [r7, #4]
 800c04c:	689a      	ldr	r2, [r3, #8]
 800c04e:	687b      	ldr	r3, [r7, #4]
 800c050:	689b      	ldr	r3, [r3, #8]
 800c052:	681b      	ldr	r3, [r3, #0]
 800c054:	3320      	adds	r3, #32
 800c056:	681b      	ldr	r3, [r3, #0]
 800c058:	4610      	mov	r0, r2
 800c05a:	4798      	blx	r3
 800c05c:	4603      	mov	r3, r0
 800c05e:	f5b3 7f3f 	cmp.w	r3, #764	; 0x2fc
 800c062:	d205      	bcs.n	800c070 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 800c064:	4b7d      	ldr	r3, [pc, #500]	; (800c25c <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 800c066:	4a7e      	ldr	r2, [pc, #504]	; (800c260 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800c068:	21a3      	movs	r1, #163	; 0xa3
 800c06a:	487e      	ldr	r0, [pc, #504]	; (800c264 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800c06c:	f01f f96a 	bl	802b344 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800c070:	687b      	ldr	r3, [r7, #4]
 800c072:	685a      	ldr	r2, [r3, #4]
 800c074:	687b      	ldr	r3, [r7, #4]
 800c076:	685b      	ldr	r3, [r3, #4]
 800c078:	681b      	ldr	r3, [r3, #0]
 800c07a:	3320      	adds	r3, #32
 800c07c:	681b      	ldr	r3, [r3, #0]
 800c07e:	4610      	mov	r0, r2
 800c080:	4798      	blx	r3
 800c082:	4603      	mov	r3, r0
 800c084:	2b0f      	cmp	r3, #15
 800c086:	d805      	bhi.n	800c094 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 800c088:	4b77      	ldr	r3, [pc, #476]	; (800c268 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 800c08a:	4a75      	ldr	r2, [pc, #468]	; (800c260 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800c08c:	21a4      	movs	r1, #164	; 0xa4
 800c08e:	4875      	ldr	r0, [pc, #468]	; (800c264 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800c090:	f01f f958 	bl	802b344 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800c094:	687b      	ldr	r3, [r7, #4]
 800c096:	68da      	ldr	r2, [r3, #12]
 800c098:	687b      	ldr	r3, [r7, #4]
 800c09a:	68db      	ldr	r3, [r3, #12]
 800c09c:	681b      	ldr	r3, [r3, #0]
 800c09e:	3320      	adds	r3, #32
 800c0a0:	681b      	ldr	r3, [r3, #0]
 800c0a2:	4610      	mov	r0, r2
 800c0a4:	4798      	blx	r3
 800c0a6:	4603      	mov	r3, r0
 800c0a8:	2b3f      	cmp	r3, #63	; 0x3f
 800c0aa:	d805      	bhi.n	800c0b8 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
 800c0ac:	4b6f      	ldr	r3, [pc, #444]	; (800c26c <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 800c0ae:	4a6c      	ldr	r2, [pc, #432]	; (800c260 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800c0b0:	21a5      	movs	r1, #165	; 0xa5
 800c0b2:	486c      	ldr	r0, [pc, #432]	; (800c264 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800c0b4:	f01f f946 	bl	802b344 <__assert_func>
 800c0b8:	68fb      	ldr	r3, [r7, #12]
 800c0ba:	62bb      	str	r3, [r7, #40]	; 0x28
 800c0bc:	68bb      	ldr	r3, [r7, #8]
 800c0be:	627b      	str	r3, [r7, #36]	; 0x24
 800c0c0:	683b      	ldr	r3, [r7, #0]
 800c0c2:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 800c0c4:	f00d f8f0 	bl	80192a8 <_ZN8touchgfx11Application11getInstanceEv>
 800c0c8:	4603      	mov	r3, r0
 800c0ca:	4618      	mov	r0, r3
 800c0cc:	f7fe ff20 	bl	800af10 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800c0d0:	6a3b      	ldr	r3, [r7, #32]
 800c0d2:	681b      	ldr	r3, [r3, #0]
 800c0d4:	2b00      	cmp	r3, #0
 800c0d6:	d008      	beq.n	800c0ea <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xae>
        (*currentTrans)->tearDown();
 800c0d8:	6a3b      	ldr	r3, [r7, #32]
 800c0da:	681a      	ldr	r2, [r3, #0]
 800c0dc:	6a3b      	ldr	r3, [r7, #32]
 800c0de:	681b      	ldr	r3, [r3, #0]
 800c0e0:	681b      	ldr	r3, [r3, #0]
 800c0e2:	330c      	adds	r3, #12
 800c0e4:	681b      	ldr	r3, [r3, #0]
 800c0e6:	4610      	mov	r0, r2
 800c0e8:	4798      	blx	r3
    if (*currentTrans)
 800c0ea:	6a3b      	ldr	r3, [r7, #32]
 800c0ec:	681b      	ldr	r3, [r3, #0]
 800c0ee:	2b00      	cmp	r3, #0
 800c0f0:	d007      	beq.n	800c102 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc6>
        (*currentTrans)->~Transition();
 800c0f2:	6a3b      	ldr	r3, [r7, #32]
 800c0f4:	681a      	ldr	r2, [r3, #0]
 800c0f6:	6a3b      	ldr	r3, [r7, #32]
 800c0f8:	681b      	ldr	r3, [r3, #0]
 800c0fa:	681b      	ldr	r3, [r3, #0]
 800c0fc:	681b      	ldr	r3, [r3, #0]
 800c0fe:	4610      	mov	r0, r2
 800c100:	4798      	blx	r3
    if (*currentScreen)
 800c102:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c104:	681b      	ldr	r3, [r3, #0]
 800c106:	2b00      	cmp	r3, #0
 800c108:	d008      	beq.n	800c11c <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe0>
        (*currentScreen)->tearDownScreen();
 800c10a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c10c:	681a      	ldr	r2, [r3, #0]
 800c10e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c110:	681b      	ldr	r3, [r3, #0]
 800c112:	681b      	ldr	r3, [r3, #0]
 800c114:	3314      	adds	r3, #20
 800c116:	681b      	ldr	r3, [r3, #0]
 800c118:	4610      	mov	r0, r2
 800c11a:	4798      	blx	r3
    if (*currentPresenter)
 800c11c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c11e:	681b      	ldr	r3, [r3, #0]
 800c120:	2b00      	cmp	r3, #0
 800c122:	d008      	beq.n	800c136 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfa>
        (*currentPresenter)->deactivate();
 800c124:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c126:	681a      	ldr	r2, [r3, #0]
 800c128:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c12a:	681b      	ldr	r3, [r3, #0]
 800c12c:	681b      	ldr	r3, [r3, #0]
 800c12e:	3304      	adds	r3, #4
 800c130:	681b      	ldr	r3, [r3, #0]
 800c132:	4610      	mov	r0, r2
 800c134:	4798      	blx	r3
    if (*currentScreen)
 800c136:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c138:	681b      	ldr	r3, [r3, #0]
 800c13a:	2b00      	cmp	r3, #0
 800c13c:	d007      	beq.n	800c14e <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x112>
        (*currentScreen)->~Screen();
 800c13e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c140:	681a      	ldr	r2, [r3, #0]
 800c142:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c144:	681b      	ldr	r3, [r3, #0]
 800c146:	681b      	ldr	r3, [r3, #0]
 800c148:	681b      	ldr	r3, [r3, #0]
 800c14a:	4610      	mov	r0, r2
 800c14c:	4798      	blx	r3
    if (*currentPresenter)
 800c14e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c150:	681b      	ldr	r3, [r3, #0]
 800c152:	2b00      	cmp	r3, #0
 800c154:	d008      	beq.n	800c168 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
        (*currentPresenter)->~Presenter();
 800c156:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c158:	681a      	ldr	r2, [r3, #0]
 800c15a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c15c:	681b      	ldr	r3, [r3, #0]
 800c15e:	681b      	ldr	r3, [r3, #0]
 800c160:	3308      	adds	r3, #8
 800c162:	681b      	ldr	r3, [r3, #0]
 800c164:	4610      	mov	r0, r2
 800c166:	4798      	blx	r3
}
 800c168:	bf00      	nop
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800c16a:	687b      	ldr	r3, [r7, #4]
 800c16c:	68db      	ldr	r3, [r3, #12]
 800c16e:	2100      	movs	r1, #0
 800c170:	4618      	mov	r0, r3
 800c172:	f000 fa51 	bl	800c618 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>
 800c176:	4603      	mov	r3, r0
 800c178:	4619      	mov	r1, r3
 800c17a:	2040      	movs	r0, #64	; 0x40
 800c17c:	f7fe fe19 	bl	800adb2 <_ZnwjPv>
 800c180:	4604      	mov	r4, r0
 800c182:	2114      	movs	r1, #20
 800c184:	4620      	mov	r0, r4
 800c186:	f000 fa5b 	bl	800c640 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
 800c18a:	637c      	str	r4, [r7, #52]	; 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800c18c:	687b      	ldr	r3, [r7, #4]
 800c18e:	689b      	ldr	r3, [r3, #8]
 800c190:	2100      	movs	r1, #0
 800c192:	4618      	mov	r0, r3
 800c194:	f000 fb21 	bl	800c7da <_ZN8touchgfx17AbstractPartition2atI18PressureScreenViewEERT_t>
 800c198:	4603      	mov	r3, r0
 800c19a:	4619      	mov	r1, r3
 800c19c:	f44f 703f 	mov.w	r0, #764	; 0x2fc
 800c1a0:	f7fe fe07 	bl	800adb2 <_ZnwjPv>
 800c1a4:	4604      	mov	r4, r0
 800c1a6:	4620      	mov	r0, r4
 800c1a8:	f004 fc48 	bl	8010a3c <_ZN18PressureScreenViewC1Ev>
 800c1ac:	633c      	str	r4, [r7, #48]	; 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800c1ae:	687b      	ldr	r3, [r7, #4]
 800c1b0:	685b      	ldr	r3, [r3, #4]
 800c1b2:	2100      	movs	r1, #0
 800c1b4:	4618      	mov	r0, r3
 800c1b6:	f000 fb23 	bl	800c800 <_ZN8touchgfx17AbstractPartition2atI23PressureScreenPresenterEERT_t>
 800c1ba:	4603      	mov	r3, r0
 800c1bc:	4619      	mov	r1, r3
 800c1be:	2010      	movs	r0, #16
 800c1c0:	f7fe fdf7 	bl	800adb2 <_ZnwjPv>
 800c1c4:	4604      	mov	r4, r0
 800c1c6:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800c1c8:	4620      	mov	r0, r4
 800c1ca:	f004 fbc7 	bl	801095c <_ZN23PressureScreenPresenterC1ER18PressureScreenView>
 800c1ce:	62fc      	str	r4, [r7, #44]	; 0x2c
    *currentTrans = newTransition;
 800c1d0:	683b      	ldr	r3, [r7, #0]
 800c1d2:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800c1d4:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 800c1d6:	68bb      	ldr	r3, [r7, #8]
 800c1d8:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800c1da:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 800c1dc:	68fb      	ldr	r3, [r7, #12]
 800c1de:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800c1e0:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 800c1e2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c1e4:	2b00      	cmp	r3, #0
 800c1e6:	d002      	beq.n	800c1ee <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 800c1e8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c1ea:	3304      	adds	r3, #4
 800c1ec:	e000      	b.n	800c1f0 <_ZN8touchgfx14makeTransitionI18PressureScreenView23PressureScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b4>
 800c1ee:	2300      	movs	r3, #0
 800c1f0:	4619      	mov	r1, r3
 800c1f2:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 800c1f4:	f7fe ffd2 	bl	800b19c <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 800c1f8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c1fa:	3304      	adds	r3, #4
 800c1fc:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 800c1fe:	4618      	mov	r0, r3
 800c200:	f7ff f83f 	bl	800b282 <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 800c204:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800c206:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800c208:	4618      	mov	r0, r3
 800c20a:	f000 fb0c 	bl	800c826 <_ZN8touchgfx4ViewI23PressureScreenPresenterE4bindERS1_>
 800c20e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800c210:	61fb      	str	r3, [r7, #28]
 800c212:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c214:	61bb      	str	r3, [r7, #24]
 800c216:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800c218:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 800c21a:	69fb      	ldr	r3, [r7, #28]
 800c21c:	681b      	ldr	r3, [r3, #0]
 800c21e:	330c      	adds	r3, #12
 800c220:	681b      	ldr	r3, [r3, #0]
 800c222:	69f8      	ldr	r0, [r7, #28]
 800c224:	4798      	blx	r3
    newPresenter->activate();
 800c226:	69bb      	ldr	r3, [r7, #24]
 800c228:	681b      	ldr	r3, [r3, #0]
 800c22a:	681b      	ldr	r3, [r3, #0]
 800c22c:	69b8      	ldr	r0, [r7, #24]
 800c22e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800c230:	6979      	ldr	r1, [r7, #20]
 800c232:	69f8      	ldr	r0, [r7, #28]
 800c234:	f00e fdf2 	bl	801ae1c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800c238:	697b      	ldr	r3, [r7, #20]
 800c23a:	681b      	ldr	r3, [r3, #0]
 800c23c:	3310      	adds	r3, #16
 800c23e:	681b      	ldr	r3, [r3, #0]
 800c240:	6978      	ldr	r0, [r7, #20]
 800c242:	4798      	blx	r3
    newTransition->invalidate();
 800c244:	697b      	ldr	r3, [r7, #20]
 800c246:	681b      	ldr	r3, [r3, #0]
 800c248:	3314      	adds	r3, #20
 800c24a:	681b      	ldr	r3, [r3, #0]
 800c24c:	6978      	ldr	r0, [r7, #20]
 800c24e:	4798      	blx	r3
}
 800c250:	bf00      	nop
    return newPresenter;
 800c252:	6afb      	ldr	r3, [r7, #44]	; 0x2c
}
 800c254:	4618      	mov	r0, r3
 800c256:	373c      	adds	r7, #60	; 0x3c
 800c258:	46bd      	mov	sp, r7
 800c25a:	bd90      	pop	{r4, r7, pc}
 800c25c:	0802c4bc 	.word	0x0802c4bc
 800c260:	0802cb58 	.word	0x0802cb58
 800c264:	0802c66c 	.word	0x0802c66c
 800c268:	0802c6b0 	.word	0x0802c6b0
 800c26c:	0802c754 	.word	0x0802c754

0800c270 <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800c270:	b590      	push	{r4, r7, lr}
 800c272:	b08f      	sub	sp, #60	; 0x3c
 800c274:	af00      	add	r7, sp, #0
 800c276:	60f8      	str	r0, [r7, #12]
 800c278:	60b9      	str	r1, [r7, #8]
 800c27a:	607a      	str	r2, [r7, #4]
 800c27c:	603b      	str	r3, [r7, #0]
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800c27e:	687b      	ldr	r3, [r7, #4]
 800c280:	689a      	ldr	r2, [r3, #8]
 800c282:	687b      	ldr	r3, [r7, #4]
 800c284:	689b      	ldr	r3, [r3, #8]
 800c286:	681b      	ldr	r3, [r3, #0]
 800c288:	3320      	adds	r3, #32
 800c28a:	681b      	ldr	r3, [r3, #0]
 800c28c:	4610      	mov	r0, r2
 800c28e:	4798      	blx	r3
 800c290:	4603      	mov	r3, r0
 800c292:	f5b3 7f3d 	cmp.w	r3, #756	; 0x2f4
 800c296:	d205      	bcs.n	800c2a4 <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 800c298:	4b7d      	ldr	r3, [pc, #500]	; (800c490 <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 800c29a:	4a7e      	ldr	r2, [pc, #504]	; (800c494 <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800c29c:	21a3      	movs	r1, #163	; 0xa3
 800c29e:	487e      	ldr	r0, [pc, #504]	; (800c498 <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800c2a0:	f01f f850 	bl	802b344 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800c2a4:	687b      	ldr	r3, [r7, #4]
 800c2a6:	685a      	ldr	r2, [r3, #4]
 800c2a8:	687b      	ldr	r3, [r7, #4]
 800c2aa:	685b      	ldr	r3, [r3, #4]
 800c2ac:	681b      	ldr	r3, [r3, #0]
 800c2ae:	3320      	adds	r3, #32
 800c2b0:	681b      	ldr	r3, [r3, #0]
 800c2b2:	4610      	mov	r0, r2
 800c2b4:	4798      	blx	r3
 800c2b6:	4603      	mov	r3, r0
 800c2b8:	2b0f      	cmp	r3, #15
 800c2ba:	d805      	bhi.n	800c2c8 <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 800c2bc:	4b77      	ldr	r3, [pc, #476]	; (800c49c <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 800c2be:	4a75      	ldr	r2, [pc, #468]	; (800c494 <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800c2c0:	21a4      	movs	r1, #164	; 0xa4
 800c2c2:	4875      	ldr	r0, [pc, #468]	; (800c498 <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800c2c4:	f01f f83e 	bl	802b344 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800c2c8:	687b      	ldr	r3, [r7, #4]
 800c2ca:	68da      	ldr	r2, [r3, #12]
 800c2cc:	687b      	ldr	r3, [r7, #4]
 800c2ce:	68db      	ldr	r3, [r3, #12]
 800c2d0:	681b      	ldr	r3, [r3, #0]
 800c2d2:	3320      	adds	r3, #32
 800c2d4:	681b      	ldr	r3, [r3, #0]
 800c2d6:	4610      	mov	r0, r2
 800c2d8:	4798      	blx	r3
 800c2da:	4603      	mov	r3, r0
 800c2dc:	2b3f      	cmp	r3, #63	; 0x3f
 800c2de:	d805      	bhi.n	800c2ec <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
 800c2e0:	4b6f      	ldr	r3, [pc, #444]	; (800c4a0 <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 800c2e2:	4a6c      	ldr	r2, [pc, #432]	; (800c494 <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800c2e4:	21a5      	movs	r1, #165	; 0xa5
 800c2e6:	486c      	ldr	r0, [pc, #432]	; (800c498 <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800c2e8:	f01f f82c 	bl	802b344 <__assert_func>
 800c2ec:	68fb      	ldr	r3, [r7, #12]
 800c2ee:	62bb      	str	r3, [r7, #40]	; 0x28
 800c2f0:	68bb      	ldr	r3, [r7, #8]
 800c2f2:	627b      	str	r3, [r7, #36]	; 0x24
 800c2f4:	683b      	ldr	r3, [r7, #0]
 800c2f6:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 800c2f8:	f00c ffd6 	bl	80192a8 <_ZN8touchgfx11Application11getInstanceEv>
 800c2fc:	4603      	mov	r3, r0
 800c2fe:	4618      	mov	r0, r3
 800c300:	f7fe fe06 	bl	800af10 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800c304:	6a3b      	ldr	r3, [r7, #32]
 800c306:	681b      	ldr	r3, [r3, #0]
 800c308:	2b00      	cmp	r3, #0
 800c30a:	d008      	beq.n	800c31e <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xae>
        (*currentTrans)->tearDown();
 800c30c:	6a3b      	ldr	r3, [r7, #32]
 800c30e:	681a      	ldr	r2, [r3, #0]
 800c310:	6a3b      	ldr	r3, [r7, #32]
 800c312:	681b      	ldr	r3, [r3, #0]
 800c314:	681b      	ldr	r3, [r3, #0]
 800c316:	330c      	adds	r3, #12
 800c318:	681b      	ldr	r3, [r3, #0]
 800c31a:	4610      	mov	r0, r2
 800c31c:	4798      	blx	r3
    if (*currentTrans)
 800c31e:	6a3b      	ldr	r3, [r7, #32]
 800c320:	681b      	ldr	r3, [r3, #0]
 800c322:	2b00      	cmp	r3, #0
 800c324:	d007      	beq.n	800c336 <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc6>
        (*currentTrans)->~Transition();
 800c326:	6a3b      	ldr	r3, [r7, #32]
 800c328:	681a      	ldr	r2, [r3, #0]
 800c32a:	6a3b      	ldr	r3, [r7, #32]
 800c32c:	681b      	ldr	r3, [r3, #0]
 800c32e:	681b      	ldr	r3, [r3, #0]
 800c330:	681b      	ldr	r3, [r3, #0]
 800c332:	4610      	mov	r0, r2
 800c334:	4798      	blx	r3
    if (*currentScreen)
 800c336:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c338:	681b      	ldr	r3, [r3, #0]
 800c33a:	2b00      	cmp	r3, #0
 800c33c:	d008      	beq.n	800c350 <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe0>
        (*currentScreen)->tearDownScreen();
 800c33e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c340:	681a      	ldr	r2, [r3, #0]
 800c342:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c344:	681b      	ldr	r3, [r3, #0]
 800c346:	681b      	ldr	r3, [r3, #0]
 800c348:	3314      	adds	r3, #20
 800c34a:	681b      	ldr	r3, [r3, #0]
 800c34c:	4610      	mov	r0, r2
 800c34e:	4798      	blx	r3
    if (*currentPresenter)
 800c350:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c352:	681b      	ldr	r3, [r3, #0]
 800c354:	2b00      	cmp	r3, #0
 800c356:	d008      	beq.n	800c36a <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfa>
        (*currentPresenter)->deactivate();
 800c358:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c35a:	681a      	ldr	r2, [r3, #0]
 800c35c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c35e:	681b      	ldr	r3, [r3, #0]
 800c360:	681b      	ldr	r3, [r3, #0]
 800c362:	3304      	adds	r3, #4
 800c364:	681b      	ldr	r3, [r3, #0]
 800c366:	4610      	mov	r0, r2
 800c368:	4798      	blx	r3
    if (*currentScreen)
 800c36a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c36c:	681b      	ldr	r3, [r3, #0]
 800c36e:	2b00      	cmp	r3, #0
 800c370:	d007      	beq.n	800c382 <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x112>
        (*currentScreen)->~Screen();
 800c372:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c374:	681a      	ldr	r2, [r3, #0]
 800c376:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c378:	681b      	ldr	r3, [r3, #0]
 800c37a:	681b      	ldr	r3, [r3, #0]
 800c37c:	681b      	ldr	r3, [r3, #0]
 800c37e:	4610      	mov	r0, r2
 800c380:	4798      	blx	r3
    if (*currentPresenter)
 800c382:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c384:	681b      	ldr	r3, [r3, #0]
 800c386:	2b00      	cmp	r3, #0
 800c388:	d008      	beq.n	800c39c <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
        (*currentPresenter)->~Presenter();
 800c38a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c38c:	681a      	ldr	r2, [r3, #0]
 800c38e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c390:	681b      	ldr	r3, [r3, #0]
 800c392:	681b      	ldr	r3, [r3, #0]
 800c394:	3308      	adds	r3, #8
 800c396:	681b      	ldr	r3, [r3, #0]
 800c398:	4610      	mov	r0, r2
 800c39a:	4798      	blx	r3
}
 800c39c:	bf00      	nop
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800c39e:	687b      	ldr	r3, [r7, #4]
 800c3a0:	68db      	ldr	r3, [r3, #12]
 800c3a2:	2100      	movs	r1, #0
 800c3a4:	4618      	mov	r0, r3
 800c3a6:	f000 f937 	bl	800c618 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>
 800c3aa:	4603      	mov	r3, r0
 800c3ac:	4619      	mov	r1, r3
 800c3ae:	2040      	movs	r0, #64	; 0x40
 800c3b0:	f7fe fcff 	bl	800adb2 <_ZnwjPv>
 800c3b4:	4604      	mov	r4, r0
 800c3b6:	2114      	movs	r1, #20
 800c3b8:	4620      	mov	r0, r4
 800c3ba:	f000 f941 	bl	800c640 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
 800c3be:	637c      	str	r4, [r7, #52]	; 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800c3c0:	687b      	ldr	r3, [r7, #4]
 800c3c2:	689b      	ldr	r3, [r3, #8]
 800c3c4:	2100      	movs	r1, #0
 800c3c6:	4618      	mov	r0, r3
 800c3c8:	f000 fa3b 	bl	800c842 <_ZN8touchgfx17AbstractPartition2atI12COScreenViewEERT_t>
 800c3cc:	4603      	mov	r3, r0
 800c3ce:	4619      	mov	r1, r3
 800c3d0:	f44f 703d 	mov.w	r0, #756	; 0x2f4
 800c3d4:	f7fe fced 	bl	800adb2 <_ZnwjPv>
 800c3d8:	4604      	mov	r4, r0
 800c3da:	4620      	mov	r0, r4
 800c3dc:	f004 f926 	bl	801062c <_ZN12COScreenViewC1Ev>
 800c3e0:	633c      	str	r4, [r7, #48]	; 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800c3e2:	687b      	ldr	r3, [r7, #4]
 800c3e4:	685b      	ldr	r3, [r3, #4]
 800c3e6:	2100      	movs	r1, #0
 800c3e8:	4618      	mov	r0, r3
 800c3ea:	f000 fa3d 	bl	800c868 <_ZN8touchgfx17AbstractPartition2atI17COScreenPresenterEERT_t>
 800c3ee:	4603      	mov	r3, r0
 800c3f0:	4619      	mov	r1, r3
 800c3f2:	2010      	movs	r0, #16
 800c3f4:	f7fe fcdd 	bl	800adb2 <_ZnwjPv>
 800c3f8:	4604      	mov	r4, r0
 800c3fa:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800c3fc:	4620      	mov	r0, r4
 800c3fe:	f004 f8a5 	bl	801054c <_ZN17COScreenPresenterC1ER12COScreenView>
 800c402:	62fc      	str	r4, [r7, #44]	; 0x2c
    *currentTrans = newTransition;
 800c404:	683b      	ldr	r3, [r7, #0]
 800c406:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800c408:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 800c40a:	68bb      	ldr	r3, [r7, #8]
 800c40c:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800c40e:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 800c410:	68fb      	ldr	r3, [r7, #12]
 800c412:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800c414:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 800c416:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c418:	2b00      	cmp	r3, #0
 800c41a:	d002      	beq.n	800c422 <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 800c41c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c41e:	3304      	adds	r3, #4
 800c420:	e000      	b.n	800c424 <_ZN8touchgfx14makeTransitionI12COScreenView17COScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b4>
 800c422:	2300      	movs	r3, #0
 800c424:	4619      	mov	r1, r3
 800c426:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 800c428:	f7fe feb8 	bl	800b19c <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 800c42c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c42e:	3304      	adds	r3, #4
 800c430:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 800c432:	4618      	mov	r0, r3
 800c434:	f7fe ff25 	bl	800b282 <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 800c438:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800c43a:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800c43c:	4618      	mov	r0, r3
 800c43e:	f000 fa26 	bl	800c88e <_ZN8touchgfx4ViewI17COScreenPresenterE4bindERS1_>
 800c442:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800c444:	61fb      	str	r3, [r7, #28]
 800c446:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c448:	61bb      	str	r3, [r7, #24]
 800c44a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800c44c:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 800c44e:	69fb      	ldr	r3, [r7, #28]
 800c450:	681b      	ldr	r3, [r3, #0]
 800c452:	330c      	adds	r3, #12
 800c454:	681b      	ldr	r3, [r3, #0]
 800c456:	69f8      	ldr	r0, [r7, #28]
 800c458:	4798      	blx	r3
    newPresenter->activate();
 800c45a:	69bb      	ldr	r3, [r7, #24]
 800c45c:	681b      	ldr	r3, [r3, #0]
 800c45e:	681b      	ldr	r3, [r3, #0]
 800c460:	69b8      	ldr	r0, [r7, #24]
 800c462:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800c464:	6979      	ldr	r1, [r7, #20]
 800c466:	69f8      	ldr	r0, [r7, #28]
 800c468:	f00e fcd8 	bl	801ae1c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800c46c:	697b      	ldr	r3, [r7, #20]
 800c46e:	681b      	ldr	r3, [r3, #0]
 800c470:	3310      	adds	r3, #16
 800c472:	681b      	ldr	r3, [r3, #0]
 800c474:	6978      	ldr	r0, [r7, #20]
 800c476:	4798      	blx	r3
    newTransition->invalidate();
 800c478:	697b      	ldr	r3, [r7, #20]
 800c47a:	681b      	ldr	r3, [r3, #0]
 800c47c:	3314      	adds	r3, #20
 800c47e:	681b      	ldr	r3, [r3, #0]
 800c480:	6978      	ldr	r0, [r7, #20]
 800c482:	4798      	blx	r3
}
 800c484:	bf00      	nop
    return newPresenter;
 800c486:	6afb      	ldr	r3, [r7, #44]	; 0x2c
}
 800c488:	4618      	mov	r0, r3
 800c48a:	373c      	adds	r7, #60	; 0x3c
 800c48c:	46bd      	mov	sp, r7
 800c48e:	bd90      	pop	{r4, r7, pc}
 800c490:	0802c4bc 	.word	0x0802c4bc
 800c494:	0802cc80 	.word	0x0802cc80
 800c498:	0802c66c 	.word	0x0802c66c
 800c49c:	0802c6b0 	.word	0x0802c6b0
 800c4a0:	0802c754 	.word	0x0802c754

0800c4a4 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE3EEEEERT_t>:
     * @param  index The index into the Partition storage where the returned object is located.
     *
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
 800c4a4:	b580      	push	{r7, lr}
 800c4a6:	b082      	sub	sp, #8
 800c4a8:	af00      	add	r7, sp, #0
 800c4aa:	6078      	str	r0, [r7, #4]
 800c4ac:	460b      	mov	r3, r1
 800c4ae:	807b      	strh	r3, [r7, #2]
    {
        return *static_cast<T*>(element(index));
 800c4b0:	687b      	ldr	r3, [r7, #4]
 800c4b2:	681b      	ldr	r3, [r3, #0]
 800c4b4:	3324      	adds	r3, #36	; 0x24
 800c4b6:	681b      	ldr	r3, [r3, #0]
 800c4b8:	887a      	ldrh	r2, [r7, #2]
 800c4ba:	4611      	mov	r1, r2
 800c4bc:	6878      	ldr	r0, [r7, #4]
 800c4be:	4798      	blx	r3
 800c4c0:	4603      	mov	r3, r0
    }
 800c4c2:	4618      	mov	r0, r3
 800c4c4:	3708      	adds	r7, #8
 800c4c6:	46bd      	mov	sp, r7
 800c4c8:	bd80      	pop	{r7, pc}
	...

0800c4cc <_ZN8touchgfx14SnapshotWidgetD1Ev>:
 * A widget that is able to make a snapshot of the area the SnapshotWidget covers into either a
 * Bitmap or into animation storage (if this available). Once the snapshot has been
 * taken using SnapshowWidget::makeSnapshot(), the SnapshotWidget will show the captured
 * snapshot when it is subsequently drawn.
 */
class SnapshotWidget : public Widget
 800c4cc:	b580      	push	{r7, lr}
 800c4ce:	b082      	sub	sp, #8
 800c4d0:	af00      	add	r7, sp, #0
 800c4d2:	6078      	str	r0, [r7, #4]
 800c4d4:	4a05      	ldr	r2, [pc, #20]	; (800c4ec <_ZN8touchgfx14SnapshotWidgetD1Ev+0x20>)
 800c4d6:	687b      	ldr	r3, [r7, #4]
 800c4d8:	601a      	str	r2, [r3, #0]
 800c4da:	687b      	ldr	r3, [r7, #4]
 800c4dc:	4618      	mov	r0, r3
 800c4de:	f7fd fe17 	bl	800a110 <_ZN8touchgfx6WidgetD1Ev>
 800c4e2:	687b      	ldr	r3, [r7, #4]
 800c4e4:	4618      	mov	r0, r3
 800c4e6:	3708      	adds	r7, #8
 800c4e8:	46bd      	mov	sp, r7
 800c4ea:	bd80      	pop	{r7, pc}
 800c4ec:	0802f460 	.word	0x0802f460

0800c4f0 <_ZN8touchgfx14SnapshotWidgetD0Ev>:
 800c4f0:	b580      	push	{r7, lr}
 800c4f2:	b082      	sub	sp, #8
 800c4f4:	af00      	add	r7, sp, #0
 800c4f6:	6078      	str	r0, [r7, #4]
 800c4f8:	6878      	ldr	r0, [r7, #4]
 800c4fa:	f7ff ffe7 	bl	800c4cc <_ZN8touchgfx14SnapshotWidgetD1Ev>
 800c4fe:	212c      	movs	r1, #44	; 0x2c
 800c500:	6878      	ldr	r0, [r7, #4]
 800c502:	f01e f92e 	bl	802a762 <_ZdlPvj>
 800c506:	687b      	ldr	r3, [r7, #4]
 800c508:	4618      	mov	r0, r3
 800c50a:	3708      	adds	r7, #8
 800c50c:	46bd      	mov	sp, r7
 800c50e:	bd80      	pop	{r7, pc}

0800c510 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh>:
    /**
     * Initializes a new instance of the SlideTransition class.
     *
     * @param  transitionSteps (Optional) Number of steps (ticks) in the transition animation, default is 20.
     */
    SlideTransition(const uint8_t transitionSteps = 20)
 800c510:	b580      	push	{r7, lr}
 800c512:	b084      	sub	sp, #16
 800c514:	af02      	add	r7, sp, #8
 800c516:	6078      	str	r0, [r7, #4]
 800c518:	460b      	mov	r3, r1
 800c51a:	70fb      	strb	r3, [r7, #3]
        : Transition(),
          snapshot(),
          animationSteps(transitionSteps),
          animationCounter(0),
          relativeValue(0)
 800c51c:	687b      	ldr	r3, [r7, #4]
 800c51e:	4618      	mov	r0, r3
 800c520:	f7fe fd4c 	bl	800afbc <_ZN8touchgfx10TransitionC1Ev>
 800c524:	4a1e      	ldr	r2, [pc, #120]	; (800c5a0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x90>)
 800c526:	687b      	ldr	r3, [r7, #4]
 800c528:	601a      	str	r2, [r3, #0]
          snapshot(),
 800c52a:	687b      	ldr	r3, [r7, #4]
 800c52c:	330c      	adds	r3, #12
 800c52e:	4618      	mov	r0, r3
 800c530:	f009 fafa 	bl	8015b28 <_ZN8touchgfx14SnapshotWidgetC1Ev>
          animationSteps(transitionSteps),
 800c534:	687b      	ldr	r3, [r7, #4]
 800c536:	78fa      	ldrb	r2, [r7, #3]
 800c538:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
          animationCounter(0),
 800c53c:	687b      	ldr	r3, [r7, #4]
 800c53e:	2200      	movs	r2, #0
 800c540:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
          relativeValue(0)
 800c544:	687b      	ldr	r3, [r7, #4]
 800c546:	2200      	movs	r2, #0
 800c548:	879a      	strh	r2, [r3, #60]	; 0x3c
    {
        if (!HAL::USE_ANIMATION_STORAGE)
 800c54a:	4b16      	ldr	r3, [pc, #88]	; (800c5a4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x94>)
 800c54c:	781b      	ldrb	r3, [r3, #0]
 800c54e:	f083 0301 	eor.w	r3, r3, #1
 800c552:	b2db      	uxtb	r3, r3
 800c554:	2b00      	cmp	r3, #0
 800c556:	d003      	beq.n	800c560 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x50>
        {
            // No animation storage, don't slide
            done = true;
 800c558:	687b      	ldr	r3, [r7, #4]
 800c55a:	2201      	movs	r2, #1
 800c55c:	721a      	strb	r2, [r3, #8]
            return;
 800c55e:	e019      	b.n	800c594 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x84>
        }

        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800c560:	687b      	ldr	r3, [r7, #4]
 800c562:	f103 000c 	add.w	r0, r3, #12
 800c566:	4b10      	ldr	r3, [pc, #64]	; (800c5a8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x98>)
 800c568:	881b      	ldrh	r3, [r3, #0]
 800c56a:	b21a      	sxth	r2, r3
 800c56c:	4b0f      	ldr	r3, [pc, #60]	; (800c5ac <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x9c>)
 800c56e:	881b      	ldrh	r3, [r3, #0]
 800c570:	b21b      	sxth	r3, r3
 800c572:	9300      	str	r3, [sp, #0]
 800c574:	4613      	mov	r3, r2
 800c576:	2200      	movs	r2, #0
 800c578:	2100      	movs	r1, #0
 800c57a:	f7fd fbf7 	bl	8009d6c <_ZN8touchgfx8Drawable11setPositionEssss>
        snapshot.makeSnapshot();
 800c57e:	687b      	ldr	r3, [r7, #4]
 800c580:	330c      	adds	r3, #12
 800c582:	4618      	mov	r0, r3
 800c584:	f009 fa53 	bl	8015a2e <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
        {
        case EAST:
            targetValue = -HAL::DISPLAY_WIDTH;
            break;
        case WEST:
            targetValue = HAL::DISPLAY_WIDTH;
 800c588:	4b07      	ldr	r3, [pc, #28]	; (800c5a8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x98>)
 800c58a:	881b      	ldrh	r3, [r3, #0]
 800c58c:	b21a      	sxth	r2, r3
 800c58e:	687b      	ldr	r3, [r7, #4]
 800c590:	875a      	strh	r2, [r3, #58]	; 0x3a
            break;
 800c592:	bf00      	nop
            break;
        case SOUTH:
            targetValue = -HAL::DISPLAY_HEIGHT;
            break;
        }
    }
 800c594:	687b      	ldr	r3, [r7, #4]
 800c596:	4618      	mov	r0, r3
 800c598:	3708      	adds	r7, #8
 800c59a:	46bd      	mov	sp, r7
 800c59c:	bd80      	pop	{r7, pc}
 800c59e:	bf00      	nop
 800c5a0:	0802e010 	.word	0x0802e010
 800c5a4:	2000224b 	.word	0x2000224b
 800c5a8:	20002240 	.word	0x20002240
 800c5ac:	20002242 	.word	0x20002242

0800c5b0 <_ZN8touchgfx17AbstractPartition2atI14MainScreenViewEERT_t>:
    T& at(const uint16_t index)
 800c5b0:	b580      	push	{r7, lr}
 800c5b2:	b082      	sub	sp, #8
 800c5b4:	af00      	add	r7, sp, #0
 800c5b6:	6078      	str	r0, [r7, #4]
 800c5b8:	460b      	mov	r3, r1
 800c5ba:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800c5bc:	687b      	ldr	r3, [r7, #4]
 800c5be:	681b      	ldr	r3, [r3, #0]
 800c5c0:	3324      	adds	r3, #36	; 0x24
 800c5c2:	681b      	ldr	r3, [r3, #0]
 800c5c4:	887a      	ldrh	r2, [r7, #2]
 800c5c6:	4611      	mov	r1, r2
 800c5c8:	6878      	ldr	r0, [r7, #4]
 800c5ca:	4798      	blx	r3
 800c5cc:	4603      	mov	r3, r0
    }
 800c5ce:	4618      	mov	r0, r3
 800c5d0:	3708      	adds	r7, #8
 800c5d2:	46bd      	mov	sp, r7
 800c5d4:	bd80      	pop	{r7, pc}

0800c5d6 <_ZN8touchgfx17AbstractPartition2atI19MainScreenPresenterEERT_t>:
    T& at(const uint16_t index)
 800c5d6:	b580      	push	{r7, lr}
 800c5d8:	b082      	sub	sp, #8
 800c5da:	af00      	add	r7, sp, #0
 800c5dc:	6078      	str	r0, [r7, #4]
 800c5de:	460b      	mov	r3, r1
 800c5e0:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800c5e2:	687b      	ldr	r3, [r7, #4]
 800c5e4:	681b      	ldr	r3, [r3, #0]
 800c5e6:	3324      	adds	r3, #36	; 0x24
 800c5e8:	681b      	ldr	r3, [r3, #0]
 800c5ea:	887a      	ldrh	r2, [r7, #2]
 800c5ec:	4611      	mov	r1, r2
 800c5ee:	6878      	ldr	r0, [r7, #4]
 800c5f0:	4798      	blx	r3
 800c5f2:	4603      	mov	r3, r0
    }
 800c5f4:	4618      	mov	r0, r3
 800c5f6:	3708      	adds	r7, #8
 800c5f8:	46bd      	mov	sp, r7
 800c5fa:	bd80      	pop	{r7, pc}

0800c5fc <_ZN8touchgfx4ViewI19MainScreenPresenterE4bindERS1_>:
     * Binds an instance of a specific Presenter type (subclass) to the View instance. This function
     * is called automatically when a new presenter/view pair is activated.
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
 800c5fc:	b480      	push	{r7}
 800c5fe:	b083      	sub	sp, #12
 800c600:	af00      	add	r7, sp, #0
 800c602:	6078      	str	r0, [r7, #4]
 800c604:	6039      	str	r1, [r7, #0]
    {
        presenter = &newPresenter;
 800c606:	687b      	ldr	r3, [r7, #4]
 800c608:	683a      	ldr	r2, [r7, #0]
 800c60a:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800c60c:	bf00      	nop
 800c60e:	370c      	adds	r7, #12
 800c610:	46bd      	mov	sp, r7
 800c612:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c616:	4770      	bx	lr

0800c618 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>:
    T& at(const uint16_t index)
 800c618:	b580      	push	{r7, lr}
 800c61a:	b082      	sub	sp, #8
 800c61c:	af00      	add	r7, sp, #0
 800c61e:	6078      	str	r0, [r7, #4]
 800c620:	460b      	mov	r3, r1
 800c622:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800c624:	687b      	ldr	r3, [r7, #4]
 800c626:	681b      	ldr	r3, [r3, #0]
 800c628:	3324      	adds	r3, #36	; 0x24
 800c62a:	681b      	ldr	r3, [r3, #0]
 800c62c:	887a      	ldrh	r2, [r7, #2]
 800c62e:	4611      	mov	r1, r2
 800c630:	6878      	ldr	r0, [r7, #4]
 800c632:	4798      	blx	r3
 800c634:	4603      	mov	r3, r0
    }
 800c636:	4618      	mov	r0, r3
 800c638:	3708      	adds	r7, #8
 800c63a:	46bd      	mov	sp, r7
 800c63c:	bd80      	pop	{r7, pc}
	...

0800c640 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>:
    SlideTransition(const uint8_t transitionSteps = 20)
 800c640:	b580      	push	{r7, lr}
 800c642:	b084      	sub	sp, #16
 800c644:	af02      	add	r7, sp, #8
 800c646:	6078      	str	r0, [r7, #4]
 800c648:	460b      	mov	r3, r1
 800c64a:	70fb      	strb	r3, [r7, #3]
          relativeValue(0)
 800c64c:	687b      	ldr	r3, [r7, #4]
 800c64e:	4618      	mov	r0, r3
 800c650:	f7fe fcb4 	bl	800afbc <_ZN8touchgfx10TransitionC1Ev>
 800c654:	4a1f      	ldr	r2, [pc, #124]	; (800c6d4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x94>)
 800c656:	687b      	ldr	r3, [r7, #4]
 800c658:	601a      	str	r2, [r3, #0]
          snapshot(),
 800c65a:	687b      	ldr	r3, [r7, #4]
 800c65c:	330c      	adds	r3, #12
 800c65e:	4618      	mov	r0, r3
 800c660:	f009 fa62 	bl	8015b28 <_ZN8touchgfx14SnapshotWidgetC1Ev>
          animationSteps(transitionSteps),
 800c664:	687b      	ldr	r3, [r7, #4]
 800c666:	78fa      	ldrb	r2, [r7, #3]
 800c668:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
          animationCounter(0),
 800c66c:	687b      	ldr	r3, [r7, #4]
 800c66e:	2200      	movs	r2, #0
 800c670:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
          relativeValue(0)
 800c674:	687b      	ldr	r3, [r7, #4]
 800c676:	2200      	movs	r2, #0
 800c678:	879a      	strh	r2, [r3, #60]	; 0x3c
        if (!HAL::USE_ANIMATION_STORAGE)
 800c67a:	4b17      	ldr	r3, [pc, #92]	; (800c6d8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x98>)
 800c67c:	781b      	ldrb	r3, [r3, #0]
 800c67e:	f083 0301 	eor.w	r3, r3, #1
 800c682:	b2db      	uxtb	r3, r3
 800c684:	2b00      	cmp	r3, #0
 800c686:	d003      	beq.n	800c690 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x50>
            done = true;
 800c688:	687b      	ldr	r3, [r7, #4]
 800c68a:	2201      	movs	r2, #1
 800c68c:	721a      	strb	r2, [r3, #8]
            return;
 800c68e:	e01b      	b.n	800c6c8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x88>
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800c690:	687b      	ldr	r3, [r7, #4]
 800c692:	f103 000c 	add.w	r0, r3, #12
 800c696:	4b11      	ldr	r3, [pc, #68]	; (800c6dc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x9c>)
 800c698:	881b      	ldrh	r3, [r3, #0]
 800c69a:	b21a      	sxth	r2, r3
 800c69c:	4b10      	ldr	r3, [pc, #64]	; (800c6e0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0xa0>)
 800c69e:	881b      	ldrh	r3, [r3, #0]
 800c6a0:	b21b      	sxth	r3, r3
 800c6a2:	9300      	str	r3, [sp, #0]
 800c6a4:	4613      	mov	r3, r2
 800c6a6:	2200      	movs	r2, #0
 800c6a8:	2100      	movs	r1, #0
 800c6aa:	f7fd fb5f 	bl	8009d6c <_ZN8touchgfx8Drawable11setPositionEssss>
        snapshot.makeSnapshot();
 800c6ae:	687b      	ldr	r3, [r7, #4]
 800c6b0:	330c      	adds	r3, #12
 800c6b2:	4618      	mov	r0, r3
 800c6b4:	f009 f9bb 	bl	8015a2e <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            targetValue = -HAL::DISPLAY_WIDTH;
 800c6b8:	4b08      	ldr	r3, [pc, #32]	; (800c6dc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x9c>)
 800c6ba:	881b      	ldrh	r3, [r3, #0]
 800c6bc:	425b      	negs	r3, r3
 800c6be:	b29b      	uxth	r3, r3
 800c6c0:	b21a      	sxth	r2, r3
 800c6c2:	687b      	ldr	r3, [r7, #4]
 800c6c4:	875a      	strh	r2, [r3, #58]	; 0x3a
            break;
 800c6c6:	bf00      	nop
    }
 800c6c8:	687b      	ldr	r3, [r7, #4]
 800c6ca:	4618      	mov	r0, r3
 800c6cc:	3708      	adds	r7, #8
 800c6ce:	46bd      	mov	sp, r7
 800c6d0:	bd80      	pop	{r7, pc}
 800c6d2:	bf00      	nop
 800c6d4:	0802e034 	.word	0x0802e034
 800c6d8:	2000224b 	.word	0x2000224b
 800c6dc:	20002240 	.word	0x20002240
 800c6e0:	20002242 	.word	0x20002242

0800c6e4 <_ZN8touchgfx17AbstractPartition2atI15ClockScreenViewEERT_t>:
    T& at(const uint16_t index)
 800c6e4:	b580      	push	{r7, lr}
 800c6e6:	b082      	sub	sp, #8
 800c6e8:	af00      	add	r7, sp, #0
 800c6ea:	6078      	str	r0, [r7, #4]
 800c6ec:	460b      	mov	r3, r1
 800c6ee:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800c6f0:	687b      	ldr	r3, [r7, #4]
 800c6f2:	681b      	ldr	r3, [r3, #0]
 800c6f4:	3324      	adds	r3, #36	; 0x24
 800c6f6:	681b      	ldr	r3, [r3, #0]
 800c6f8:	887a      	ldrh	r2, [r7, #2]
 800c6fa:	4611      	mov	r1, r2
 800c6fc:	6878      	ldr	r0, [r7, #4]
 800c6fe:	4798      	blx	r3
 800c700:	4603      	mov	r3, r0
    }
 800c702:	4618      	mov	r0, r3
 800c704:	3708      	adds	r7, #8
 800c706:	46bd      	mov	sp, r7
 800c708:	bd80      	pop	{r7, pc}

0800c70a <_ZN8touchgfx17AbstractPartition2atI20ClockScreenPresenterEERT_t>:
    T& at(const uint16_t index)
 800c70a:	b580      	push	{r7, lr}
 800c70c:	b082      	sub	sp, #8
 800c70e:	af00      	add	r7, sp, #0
 800c710:	6078      	str	r0, [r7, #4]
 800c712:	460b      	mov	r3, r1
 800c714:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800c716:	687b      	ldr	r3, [r7, #4]
 800c718:	681b      	ldr	r3, [r3, #0]
 800c71a:	3324      	adds	r3, #36	; 0x24
 800c71c:	681b      	ldr	r3, [r3, #0]
 800c71e:	887a      	ldrh	r2, [r7, #2]
 800c720:	4611      	mov	r1, r2
 800c722:	6878      	ldr	r0, [r7, #4]
 800c724:	4798      	blx	r3
 800c726:	4603      	mov	r3, r0
    }
 800c728:	4618      	mov	r0, r3
 800c72a:	3708      	adds	r7, #8
 800c72c:	46bd      	mov	sp, r7
 800c72e:	bd80      	pop	{r7, pc}

0800c730 <_ZN8touchgfx4ViewI20ClockScreenPresenterE4bindERS1_>:
    void bind(T& newPresenter)
 800c730:	b480      	push	{r7}
 800c732:	b083      	sub	sp, #12
 800c734:	af00      	add	r7, sp, #0
 800c736:	6078      	str	r0, [r7, #4]
 800c738:	6039      	str	r1, [r7, #0]
        presenter = &newPresenter;
 800c73a:	687b      	ldr	r3, [r7, #4]
 800c73c:	683a      	ldr	r2, [r7, #0]
 800c73e:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800c740:	bf00      	nop
 800c742:	370c      	adds	r7, #12
 800c744:	46bd      	mov	sp, r7
 800c746:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c74a:	4770      	bx	lr

0800c74c <_ZN8touchgfx17AbstractPartition2atI21TemperatureScreenViewEERT_t>:
    T& at(const uint16_t index)
 800c74c:	b580      	push	{r7, lr}
 800c74e:	b082      	sub	sp, #8
 800c750:	af00      	add	r7, sp, #0
 800c752:	6078      	str	r0, [r7, #4]
 800c754:	460b      	mov	r3, r1
 800c756:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800c758:	687b      	ldr	r3, [r7, #4]
 800c75a:	681b      	ldr	r3, [r3, #0]
 800c75c:	3324      	adds	r3, #36	; 0x24
 800c75e:	681b      	ldr	r3, [r3, #0]
 800c760:	887a      	ldrh	r2, [r7, #2]
 800c762:	4611      	mov	r1, r2
 800c764:	6878      	ldr	r0, [r7, #4]
 800c766:	4798      	blx	r3
 800c768:	4603      	mov	r3, r0
    }
 800c76a:	4618      	mov	r0, r3
 800c76c:	3708      	adds	r7, #8
 800c76e:	46bd      	mov	sp, r7
 800c770:	bd80      	pop	{r7, pc}

0800c772 <_ZN8touchgfx17AbstractPartition2atI26TemperatureScreenPresenterEERT_t>:
    T& at(const uint16_t index)
 800c772:	b580      	push	{r7, lr}
 800c774:	b082      	sub	sp, #8
 800c776:	af00      	add	r7, sp, #0
 800c778:	6078      	str	r0, [r7, #4]
 800c77a:	460b      	mov	r3, r1
 800c77c:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800c77e:	687b      	ldr	r3, [r7, #4]
 800c780:	681b      	ldr	r3, [r3, #0]
 800c782:	3324      	adds	r3, #36	; 0x24
 800c784:	681b      	ldr	r3, [r3, #0]
 800c786:	887a      	ldrh	r2, [r7, #2]
 800c788:	4611      	mov	r1, r2
 800c78a:	6878      	ldr	r0, [r7, #4]
 800c78c:	4798      	blx	r3
 800c78e:	4603      	mov	r3, r0
    }
 800c790:	4618      	mov	r0, r3
 800c792:	3708      	adds	r7, #8
 800c794:	46bd      	mov	sp, r7
 800c796:	bd80      	pop	{r7, pc}

0800c798 <_ZN8touchgfx4ViewI26TemperatureScreenPresenterE4bindERS1_>:
    void bind(T& newPresenter)
 800c798:	b480      	push	{r7}
 800c79a:	b083      	sub	sp, #12
 800c79c:	af00      	add	r7, sp, #0
 800c79e:	6078      	str	r0, [r7, #4]
 800c7a0:	6039      	str	r1, [r7, #0]
        presenter = &newPresenter;
 800c7a2:	687b      	ldr	r3, [r7, #4]
 800c7a4:	683a      	ldr	r2, [r7, #0]
 800c7a6:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800c7a8:	bf00      	nop
 800c7aa:	370c      	adds	r7, #12
 800c7ac:	46bd      	mov	sp, r7
 800c7ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c7b2:	4770      	bx	lr

0800c7b4 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
    T& at(const uint16_t index)
 800c7b4:	b580      	push	{r7, lr}
 800c7b6:	b082      	sub	sp, #8
 800c7b8:	af00      	add	r7, sp, #0
 800c7ba:	6078      	str	r0, [r7, #4]
 800c7bc:	460b      	mov	r3, r1
 800c7be:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800c7c0:	687b      	ldr	r3, [r7, #4]
 800c7c2:	681b      	ldr	r3, [r3, #0]
 800c7c4:	3324      	adds	r3, #36	; 0x24
 800c7c6:	681b      	ldr	r3, [r3, #0]
 800c7c8:	887a      	ldrh	r2, [r7, #2]
 800c7ca:	4611      	mov	r1, r2
 800c7cc:	6878      	ldr	r0, [r7, #4]
 800c7ce:	4798      	blx	r3
 800c7d0:	4603      	mov	r3, r0
    }
 800c7d2:	4618      	mov	r0, r3
 800c7d4:	3708      	adds	r7, #8
 800c7d6:	46bd      	mov	sp, r7
 800c7d8:	bd80      	pop	{r7, pc}

0800c7da <_ZN8touchgfx17AbstractPartition2atI18PressureScreenViewEERT_t>:
    T& at(const uint16_t index)
 800c7da:	b580      	push	{r7, lr}
 800c7dc:	b082      	sub	sp, #8
 800c7de:	af00      	add	r7, sp, #0
 800c7e0:	6078      	str	r0, [r7, #4]
 800c7e2:	460b      	mov	r3, r1
 800c7e4:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800c7e6:	687b      	ldr	r3, [r7, #4]
 800c7e8:	681b      	ldr	r3, [r3, #0]
 800c7ea:	3324      	adds	r3, #36	; 0x24
 800c7ec:	681b      	ldr	r3, [r3, #0]
 800c7ee:	887a      	ldrh	r2, [r7, #2]
 800c7f0:	4611      	mov	r1, r2
 800c7f2:	6878      	ldr	r0, [r7, #4]
 800c7f4:	4798      	blx	r3
 800c7f6:	4603      	mov	r3, r0
    }
 800c7f8:	4618      	mov	r0, r3
 800c7fa:	3708      	adds	r7, #8
 800c7fc:	46bd      	mov	sp, r7
 800c7fe:	bd80      	pop	{r7, pc}

0800c800 <_ZN8touchgfx17AbstractPartition2atI23PressureScreenPresenterEERT_t>:
    T& at(const uint16_t index)
 800c800:	b580      	push	{r7, lr}
 800c802:	b082      	sub	sp, #8
 800c804:	af00      	add	r7, sp, #0
 800c806:	6078      	str	r0, [r7, #4]
 800c808:	460b      	mov	r3, r1
 800c80a:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800c80c:	687b      	ldr	r3, [r7, #4]
 800c80e:	681b      	ldr	r3, [r3, #0]
 800c810:	3324      	adds	r3, #36	; 0x24
 800c812:	681b      	ldr	r3, [r3, #0]
 800c814:	887a      	ldrh	r2, [r7, #2]
 800c816:	4611      	mov	r1, r2
 800c818:	6878      	ldr	r0, [r7, #4]
 800c81a:	4798      	blx	r3
 800c81c:	4603      	mov	r3, r0
    }
 800c81e:	4618      	mov	r0, r3
 800c820:	3708      	adds	r7, #8
 800c822:	46bd      	mov	sp, r7
 800c824:	bd80      	pop	{r7, pc}

0800c826 <_ZN8touchgfx4ViewI23PressureScreenPresenterE4bindERS1_>:
    void bind(T& newPresenter)
 800c826:	b480      	push	{r7}
 800c828:	b083      	sub	sp, #12
 800c82a:	af00      	add	r7, sp, #0
 800c82c:	6078      	str	r0, [r7, #4]
 800c82e:	6039      	str	r1, [r7, #0]
        presenter = &newPresenter;
 800c830:	687b      	ldr	r3, [r7, #4]
 800c832:	683a      	ldr	r2, [r7, #0]
 800c834:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800c836:	bf00      	nop
 800c838:	370c      	adds	r7, #12
 800c83a:	46bd      	mov	sp, r7
 800c83c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c840:	4770      	bx	lr

0800c842 <_ZN8touchgfx17AbstractPartition2atI12COScreenViewEERT_t>:
    T& at(const uint16_t index)
 800c842:	b580      	push	{r7, lr}
 800c844:	b082      	sub	sp, #8
 800c846:	af00      	add	r7, sp, #0
 800c848:	6078      	str	r0, [r7, #4]
 800c84a:	460b      	mov	r3, r1
 800c84c:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800c84e:	687b      	ldr	r3, [r7, #4]
 800c850:	681b      	ldr	r3, [r3, #0]
 800c852:	3324      	adds	r3, #36	; 0x24
 800c854:	681b      	ldr	r3, [r3, #0]
 800c856:	887a      	ldrh	r2, [r7, #2]
 800c858:	4611      	mov	r1, r2
 800c85a:	6878      	ldr	r0, [r7, #4]
 800c85c:	4798      	blx	r3
 800c85e:	4603      	mov	r3, r0
    }
 800c860:	4618      	mov	r0, r3
 800c862:	3708      	adds	r7, #8
 800c864:	46bd      	mov	sp, r7
 800c866:	bd80      	pop	{r7, pc}

0800c868 <_ZN8touchgfx17AbstractPartition2atI17COScreenPresenterEERT_t>:
    T& at(const uint16_t index)
 800c868:	b580      	push	{r7, lr}
 800c86a:	b082      	sub	sp, #8
 800c86c:	af00      	add	r7, sp, #0
 800c86e:	6078      	str	r0, [r7, #4]
 800c870:	460b      	mov	r3, r1
 800c872:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800c874:	687b      	ldr	r3, [r7, #4]
 800c876:	681b      	ldr	r3, [r3, #0]
 800c878:	3324      	adds	r3, #36	; 0x24
 800c87a:	681b      	ldr	r3, [r3, #0]
 800c87c:	887a      	ldrh	r2, [r7, #2]
 800c87e:	4611      	mov	r1, r2
 800c880:	6878      	ldr	r0, [r7, #4]
 800c882:	4798      	blx	r3
 800c884:	4603      	mov	r3, r0
    }
 800c886:	4618      	mov	r0, r3
 800c888:	3708      	adds	r7, #8
 800c88a:	46bd      	mov	sp, r7
 800c88c:	bd80      	pop	{r7, pc}

0800c88e <_ZN8touchgfx4ViewI17COScreenPresenterE4bindERS1_>:
    void bind(T& newPresenter)
 800c88e:	b480      	push	{r7}
 800c890:	b083      	sub	sp, #12
 800c892:	af00      	add	r7, sp, #0
 800c894:	6078      	str	r0, [r7, #4]
 800c896:	6039      	str	r1, [r7, #0]
        presenter = &newPresenter;
 800c898:	687b      	ldr	r3, [r7, #4]
 800c89a:	683a      	ldr	r2, [r7, #0]
 800c89c:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800c89e:	bf00      	nop
 800c8a0:	370c      	adds	r7, #12
 800c8a2:	46bd      	mov	sp, r7
 800c8a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c8a8:	4770      	bx	lr
	...

0800c8ac <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EED1Ev>:
class SlideTransition : public Transition
 800c8ac:	b580      	push	{r7, lr}
 800c8ae:	b082      	sub	sp, #8
 800c8b0:	af00      	add	r7, sp, #0
 800c8b2:	6078      	str	r0, [r7, #4]
 800c8b4:	4a08      	ldr	r2, [pc, #32]	; (800c8d8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EED1Ev+0x2c>)
 800c8b6:	687b      	ldr	r3, [r7, #4]
 800c8b8:	601a      	str	r2, [r3, #0]
 800c8ba:	687b      	ldr	r3, [r7, #4]
 800c8bc:	330c      	adds	r3, #12
 800c8be:	4618      	mov	r0, r3
 800c8c0:	f7ff fe04 	bl	800c4cc <_ZN8touchgfx14SnapshotWidgetD1Ev>
 800c8c4:	687b      	ldr	r3, [r7, #4]
 800c8c6:	4618      	mov	r0, r3
 800c8c8:	f7fe fb8e 	bl	800afe8 <_ZN8touchgfx10TransitionD1Ev>
 800c8cc:	687b      	ldr	r3, [r7, #4]
 800c8ce:	4618      	mov	r0, r3
 800c8d0:	3708      	adds	r7, #8
 800c8d2:	46bd      	mov	sp, r7
 800c8d4:	bd80      	pop	{r7, pc}
 800c8d6:	bf00      	nop
 800c8d8:	0802e010 	.word	0x0802e010

0800c8dc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EED0Ev>:
 800c8dc:	b580      	push	{r7, lr}
 800c8de:	b082      	sub	sp, #8
 800c8e0:	af00      	add	r7, sp, #0
 800c8e2:	6078      	str	r0, [r7, #4]
 800c8e4:	6878      	ldr	r0, [r7, #4]
 800c8e6:	f7ff ffe1 	bl	800c8ac <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EED1Ev>
 800c8ea:	2140      	movs	r1, #64	; 0x40
 800c8ec:	6878      	ldr	r0, [r7, #4]
 800c8ee:	f01d ff38 	bl	802a762 <_ZdlPvj>
 800c8f2:	687b      	ldr	r3, [r7, #4]
 800c8f4:	4618      	mov	r0, r3
 800c8f6:	3708      	adds	r7, #8
 800c8f8:	46bd      	mov	sp, r7
 800c8fa:	bd80      	pop	{r7, pc}

0800c8fc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED1Ev>:
 800c8fc:	b580      	push	{r7, lr}
 800c8fe:	b082      	sub	sp, #8
 800c900:	af00      	add	r7, sp, #0
 800c902:	6078      	str	r0, [r7, #4]
 800c904:	4a08      	ldr	r2, [pc, #32]	; (800c928 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED1Ev+0x2c>)
 800c906:	687b      	ldr	r3, [r7, #4]
 800c908:	601a      	str	r2, [r3, #0]
 800c90a:	687b      	ldr	r3, [r7, #4]
 800c90c:	330c      	adds	r3, #12
 800c90e:	4618      	mov	r0, r3
 800c910:	f7ff fddc 	bl	800c4cc <_ZN8touchgfx14SnapshotWidgetD1Ev>
 800c914:	687b      	ldr	r3, [r7, #4]
 800c916:	4618      	mov	r0, r3
 800c918:	f7fe fb66 	bl	800afe8 <_ZN8touchgfx10TransitionD1Ev>
 800c91c:	687b      	ldr	r3, [r7, #4]
 800c91e:	4618      	mov	r0, r3
 800c920:	3708      	adds	r7, #8
 800c922:	46bd      	mov	sp, r7
 800c924:	bd80      	pop	{r7, pc}
 800c926:	bf00      	nop
 800c928:	0802e034 	.word	0x0802e034

0800c92c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED0Ev>:
 800c92c:	b580      	push	{r7, lr}
 800c92e:	b082      	sub	sp, #8
 800c930:	af00      	add	r7, sp, #0
 800c932:	6078      	str	r0, [r7, #4]
 800c934:	6878      	ldr	r0, [r7, #4]
 800c936:	f7ff ffe1 	bl	800c8fc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED1Ev>
 800c93a:	2140      	movs	r1, #64	; 0x40
 800c93c:	6878      	ldr	r0, [r7, #4]
 800c93e:	f01d ff10 	bl	802a762 <_ZdlPvj>
 800c942:	687b      	ldr	r3, [r7, #4]
 800c944:	4618      	mov	r0, r3
 800c946:	3708      	adds	r7, #8
 800c948:	46bd      	mov	sp, r7
 800c94a:	bd80      	pop	{r7, pc}

0800c94c <_ZN8touchgfx12NoTransitionD1Ev>:
 800c94c:	b580      	push	{r7, lr}
 800c94e:	b082      	sub	sp, #8
 800c950:	af00      	add	r7, sp, #0
 800c952:	6078      	str	r0, [r7, #4]
 800c954:	4a05      	ldr	r2, [pc, #20]	; (800c96c <_ZN8touchgfx12NoTransitionD1Ev+0x20>)
 800c956:	687b      	ldr	r3, [r7, #4]
 800c958:	601a      	str	r2, [r3, #0]
 800c95a:	687b      	ldr	r3, [r7, #4]
 800c95c:	4618      	mov	r0, r3
 800c95e:	f7fe fb43 	bl	800afe8 <_ZN8touchgfx10TransitionD1Ev>
 800c962:	687b      	ldr	r3, [r7, #4]
 800c964:	4618      	mov	r0, r3
 800c966:	3708      	adds	r7, #8
 800c968:	46bd      	mov	sp, r7
 800c96a:	bd80      	pop	{r7, pc}
 800c96c:	0802e058 	.word	0x0802e058

0800c970 <_ZN8touchgfx12NoTransitionD0Ev>:
 800c970:	b580      	push	{r7, lr}
 800c972:	b082      	sub	sp, #8
 800c974:	af00      	add	r7, sp, #0
 800c976:	6078      	str	r0, [r7, #4]
 800c978:	6878      	ldr	r0, [r7, #4]
 800c97a:	f7ff ffe7 	bl	800c94c <_ZN8touchgfx12NoTransitionD1Ev>
 800c97e:	210c      	movs	r1, #12
 800c980:	6878      	ldr	r0, [r7, #4]
 800c982:	f01d feee 	bl	802a762 <_ZdlPvj>
 800c986:	687b      	ldr	r3, [r7, #4]
 800c988:	4618      	mov	r0, r3
 800c98a:	3708      	adds	r7, #8
 800c98c:	46bd      	mov	sp, r7
 800c98e:	bd80      	pop	{r7, pc}

0800c990 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800c990:	b580      	push	{r7, lr}
 800c992:	b082      	sub	sp, #8
 800c994:	af00      	add	r7, sp, #0
 800c996:	6078      	str	r0, [r7, #4]
 800c998:	4a05      	ldr	r2, [pc, #20]	; (800c9b0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev+0x20>)
 800c99a:	687b      	ldr	r3, [r7, #4]
 800c99c:	601a      	str	r2, [r3, #0]
 800c99e:	687b      	ldr	r3, [r7, #4]
 800c9a0:	4618      	mov	r0, r3
 800c9a2:	f7fe fac3 	bl	800af2c <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 800c9a6:	687b      	ldr	r3, [r7, #4]
 800c9a8:	4618      	mov	r0, r3
 800c9aa:	3708      	adds	r7, #8
 800c9ac:	46bd      	mov	sp, r7
 800c9ae:	bd80      	pop	{r7, pc}
 800c9b0:	0802e0d0 	.word	0x0802e0d0

0800c9b4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
 800c9b4:	b580      	push	{r7, lr}
 800c9b6:	b082      	sub	sp, #8
 800c9b8:	af00      	add	r7, sp, #0
 800c9ba:	6078      	str	r0, [r7, #4]
 800c9bc:	6878      	ldr	r0, [r7, #4]
 800c9be:	f7ff ffe7 	bl	800c990 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 800c9c2:	2110      	movs	r1, #16
 800c9c4:	6878      	ldr	r0, [r7, #4]
 800c9c6:	f01d fecc 	bl	802a762 <_ZdlPvj>
 800c9ca:	687b      	ldr	r3, [r7, #4]
 800c9cc:	4618      	mov	r0, r3
 800c9ce:	3708      	adds	r7, #8
 800c9d0:	46bd      	mov	sp, r7
 800c9d2:	bd80      	pop	{r7, pc}

0800c9d4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv>:
     * Handles the tick event when transitioning. It moves the contents of the Screen's
     * container and a SnapshotWidget with a snapshot of the previous Screen. The direction
     * of the transition determines the direction the contents of the container and the
     * SnapshotWidget moves.
     */
    virtual void handleTickEvent()
 800c9d4:	b5b0      	push	{r4, r5, r7, lr}
 800c9d6:	b084      	sub	sp, #16
 800c9d8:	af00      	add	r7, sp, #0
 800c9da:	6078      	str	r0, [r7, #4]
    {
        Transition::handleTickEvent();
 800c9dc:	687b      	ldr	r3, [r7, #4]
 800c9de:	4618      	mov	r0, r3
 800c9e0:	f7fe fb22 	bl	800b028 <_ZN8touchgfx10Transition15handleTickEventEv>

        // Calculate new position or stop animation
        animationCounter++;
 800c9e4:	687b      	ldr	r3, [r7, #4]
 800c9e6:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 800c9ea:	3301      	adds	r3, #1
 800c9ec:	b2da      	uxtb	r2, r3
 800c9ee:	687b      	ldr	r3, [r7, #4]
 800c9f0:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
        if (animationCounter > animationSteps)
 800c9f4:	687b      	ldr	r3, [r7, #4]
 800c9f6:	f893 2039 	ldrb.w	r2, [r3, #57]	; 0x39
 800c9fa:	687b      	ldr	r3, [r7, #4]
 800c9fc:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 800ca00:	429a      	cmp	r2, r3
 800ca02:	d907      	bls.n	800ca14 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x40>
        {
            // Final step: stop the animation
            done = true;
 800ca04:	687b      	ldr	r3, [r7, #4]
 800ca06:	2201      	movs	r2, #1
 800ca08:	721a      	strb	r2, [r3, #8]
            animationCounter = 0;
 800ca0a:	687b      	ldr	r3, [r7, #4]
 800ca0c:	2200      	movs	r2, #0
 800ca0e:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
            return;
 800ca12:	e060      	b.n	800cad6 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x102>
        }

        // Calculate value in [0;targetValue]
        int16_t calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800ca14:	687b      	ldr	r3, [r7, #4]
 800ca16:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 800ca1a:	b298      	uxth	r0, r3
 800ca1c:	687b      	ldr	r3, [r7, #4]
 800ca1e:	f9b3 203a 	ldrsh.w	r2, [r3, #58]	; 0x3a
 800ca22:	687b      	ldr	r3, [r7, #4]
 800ca24:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 800ca28:	b29b      	uxth	r3, r3
 800ca2a:	2100      	movs	r1, #0
 800ca2c:	f00e f9fc 	bl	801ae28 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
 800ca30:	4603      	mov	r3, r0
 800ca32:	81fb      	strh	r3, [r7, #14]

        // Note: Result of "calculatedValue & 1" is compiler dependent for negative values of calculatedValue
        if ((calculatedValue % 2) != 0)
 800ca34:	89fb      	ldrh	r3, [r7, #14]
 800ca36:	f003 0301 	and.w	r3, r3, #1
 800ca3a:	b29b      	uxth	r3, r3
 800ca3c:	2b00      	cmp	r3, #0
 800ca3e:	d00b      	beq.n	800ca58 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x84>
        {
            // Optimization: calculatedValue is odd, add 1/-1 to move drawables modulo 32 bits in framebuffer
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800ca40:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800ca44:	2b00      	cmp	r3, #0
 800ca46:	dd01      	ble.n	800ca4c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x78>
 800ca48:	2201      	movs	r2, #1
 800ca4a:	e001      	b.n	800ca50 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x7c>
 800ca4c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800ca50:	89fb      	ldrh	r3, [r7, #14]
 800ca52:	4413      	add	r3, r2
 800ca54:	b29b      	uxth	r3, r3
 800ca56:	81fb      	strh	r3, [r7, #14]
        // Move snapshot
        switch (templateDirection)
        {
        case EAST:
        case WEST:
            relativeValue = calculatedValue - snapshot.getX();
 800ca58:	89fc      	ldrh	r4, [r7, #14]
 800ca5a:	687b      	ldr	r3, [r7, #4]
 800ca5c:	330c      	adds	r3, #12
 800ca5e:	4618      	mov	r0, r3
 800ca60:	f7fe f9bf 	bl	800ade2 <_ZNK8touchgfx8Drawable4getXEv>
 800ca64:	4603      	mov	r3, r0
 800ca66:	b29b      	uxth	r3, r3
 800ca68:	1ae3      	subs	r3, r4, r3
 800ca6a:	b29b      	uxth	r3, r3
 800ca6c:	b21a      	sxth	r2, r3
 800ca6e:	687b      	ldr	r3, [r7, #4]
 800ca70:	879a      	strh	r2, [r3, #60]	; 0x3c
            break;
 800ca72:	bf00      	nop
            relativeValue = calculatedValue - snapshot.getY();
            break;
        }

        // Move snapshot and its children with delta value for X or Y
        Drawable* d = screenContainer->getFirstChild();
 800ca74:	687b      	ldr	r3, [r7, #4]
 800ca76:	685a      	ldr	r2, [r3, #4]
 800ca78:	687b      	ldr	r3, [r7, #4]
 800ca7a:	685b      	ldr	r3, [r3, #4]
 800ca7c:	681b      	ldr	r3, [r3, #0]
 800ca7e:	331c      	adds	r3, #28
 800ca80:	681b      	ldr	r3, [r3, #0]
 800ca82:	4610      	mov	r0, r2
 800ca84:	4798      	blx	r3
 800ca86:	60b8      	str	r0, [r7, #8]
        while (d)
 800ca88:	e018      	b.n	800cabc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0xe8>
        {
            switch (templateDirection)
            {
            case EAST:
            case WEST:
                d->setX(d->getX() + relativeValue);
 800ca8a:	68bd      	ldr	r5, [r7, #8]
 800ca8c:	68bb      	ldr	r3, [r7, #8]
 800ca8e:	681b      	ldr	r3, [r3, #0]
 800ca90:	3330      	adds	r3, #48	; 0x30
 800ca92:	681c      	ldr	r4, [r3, #0]
 800ca94:	68b8      	ldr	r0, [r7, #8]
 800ca96:	f7fe f9a4 	bl	800ade2 <_ZNK8touchgfx8Drawable4getXEv>
 800ca9a:	4603      	mov	r3, r0
 800ca9c:	b29a      	uxth	r2, r3
 800ca9e:	687b      	ldr	r3, [r7, #4]
 800caa0:	f9b3 303c 	ldrsh.w	r3, [r3, #60]	; 0x3c
 800caa4:	b29b      	uxth	r3, r3
 800caa6:	4413      	add	r3, r2
 800caa8:	b29b      	uxth	r3, r3
 800caaa:	b21b      	sxth	r3, r3
 800caac:	4619      	mov	r1, r3
 800caae:	4628      	mov	r0, r5
 800cab0:	47a0      	blx	r4
                break;
 800cab2:	bf00      	nop
            case NORTH:
            case SOUTH:
                d->setY(d->getY() + relativeValue);
                break;
            }
            d = d->getNextSibling();
 800cab4:	68b8      	ldr	r0, [r7, #8]
 800cab6:	f7fe f988 	bl	800adca <_ZN8touchgfx8Drawable14getNextSiblingEv>
 800caba:	60b8      	str	r0, [r7, #8]
        while (d)
 800cabc:	68bb      	ldr	r3, [r7, #8]
 800cabe:	2b00      	cmp	r3, #0
 800cac0:	d1e3      	bne.n	800ca8a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0xb6>
        }

        // Entire screen has changed, redraw
        screenContainer->invalidate();
 800cac2:	687b      	ldr	r3, [r7, #4]
 800cac4:	685b      	ldr	r3, [r3, #4]
 800cac6:	461a      	mov	r2, r3
 800cac8:	687b      	ldr	r3, [r7, #4]
 800caca:	685b      	ldr	r3, [r3, #4]
 800cacc:	681b      	ldr	r3, [r3, #0]
 800cace:	3314      	adds	r3, #20
 800cad0:	681b      	ldr	r3, [r3, #0]
 800cad2:	4610      	mov	r0, r2
 800cad4:	4798      	blx	r3
    }
 800cad6:	3710      	adds	r7, #16
 800cad8:	46bd      	mov	sp, r7
 800cada:	bdb0      	pop	{r4, r5, r7, pc}

0800cadc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv>:

    virtual void tearDown()
 800cadc:	b580      	push	{r7, lr}
 800cade:	b082      	sub	sp, #8
 800cae0:	af00      	add	r7, sp, #0
 800cae2:	6078      	str	r0, [r7, #4]
    {
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 800cae4:	4b0b      	ldr	r3, [pc, #44]	; (800cb14 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x38>)
 800cae6:	781b      	ldrb	r3, [r3, #0]
 800cae8:	2b00      	cmp	r3, #0
 800caea:	d00e      	beq.n	800cb0a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x2e>
 800caec:	687b      	ldr	r3, [r7, #4]
 800caee:	685b      	ldr	r3, [r3, #4]
 800caf0:	2b00      	cmp	r3, #0
 800caf2:	d00a      	beq.n	800cb0a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x2e>
        {
            screenContainer->remove(snapshot);
 800caf4:	687b      	ldr	r3, [r7, #4]
 800caf6:	6858      	ldr	r0, [r3, #4]
 800caf8:	687b      	ldr	r3, [r7, #4]
 800cafa:	685b      	ldr	r3, [r3, #4]
 800cafc:	681b      	ldr	r3, [r3, #0]
 800cafe:	3364      	adds	r3, #100	; 0x64
 800cb00:	681b      	ldr	r3, [r3, #0]
 800cb02:	687a      	ldr	r2, [r7, #4]
 800cb04:	320c      	adds	r2, #12
 800cb06:	4611      	mov	r1, r2
 800cb08:	4798      	blx	r3
        }
    }
 800cb0a:	bf00      	nop
 800cb0c:	3708      	adds	r7, #8
 800cb0e:	46bd      	mov	sp, r7
 800cb10:	bd80      	pop	{r7, pc}
 800cb12:	bf00      	nop
 800cb14:	2000224b 	.word	0x2000224b

0800cb18 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv>:

    virtual void init()
 800cb18:	b5b0      	push	{r4, r5, r7, lr}
 800cb1a:	b084      	sub	sp, #16
 800cb1c:	af00      	add	r7, sp, #0
 800cb1e:	6078      	str	r0, [r7, #4]
    {
        Transition::init();
 800cb20:	687b      	ldr	r3, [r7, #4]
 800cb22:	4618      	mov	r0, r3
 800cb24:	f7fe fa94 	bl	800b050 <_ZN8touchgfx10Transition4initEv>

        if (done)
 800cb28:	687b      	ldr	r3, [r7, #4]
 800cb2a:	7a1b      	ldrb	r3, [r3, #8]
 800cb2c:	2b00      	cmp	r3, #0
 800cb2e:	d132      	bne.n	800cb96 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x7e>
        {
            return;
        }

        // Move snapshot and its children with delta value for X or Y
        Drawable* d = screenContainer->getFirstChild();
 800cb30:	687b      	ldr	r3, [r7, #4]
 800cb32:	685a      	ldr	r2, [r3, #4]
 800cb34:	687b      	ldr	r3, [r7, #4]
 800cb36:	685b      	ldr	r3, [r3, #4]
 800cb38:	681b      	ldr	r3, [r3, #0]
 800cb3a:	331c      	adds	r3, #28
 800cb3c:	681b      	ldr	r3, [r3, #0]
 800cb3e:	4610      	mov	r0, r2
 800cb40:	4798      	blx	r3
 800cb42:	60f8      	str	r0, [r7, #12]
        while (d)
 800cb44:	e018      	b.n	800cb78 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x60>
        {
            switch (templateDirection)
            {
            case EAST:
            case WEST:
                d->setX(d->getX() - targetValue);
 800cb46:	68fd      	ldr	r5, [r7, #12]
 800cb48:	68fb      	ldr	r3, [r7, #12]
 800cb4a:	681b      	ldr	r3, [r3, #0]
 800cb4c:	3330      	adds	r3, #48	; 0x30
 800cb4e:	681c      	ldr	r4, [r3, #0]
 800cb50:	68f8      	ldr	r0, [r7, #12]
 800cb52:	f7fe f946 	bl	800ade2 <_ZNK8touchgfx8Drawable4getXEv>
 800cb56:	4603      	mov	r3, r0
 800cb58:	b29a      	uxth	r2, r3
 800cb5a:	687b      	ldr	r3, [r7, #4]
 800cb5c:	f9b3 303a 	ldrsh.w	r3, [r3, #58]	; 0x3a
 800cb60:	b29b      	uxth	r3, r3
 800cb62:	1ad3      	subs	r3, r2, r3
 800cb64:	b29b      	uxth	r3, r3
 800cb66:	b21b      	sxth	r3, r3
 800cb68:	4619      	mov	r1, r3
 800cb6a:	4628      	mov	r0, r5
 800cb6c:	47a0      	blx	r4
                break;
 800cb6e:	bf00      	nop
            case SOUTH:
                d->setY(d->getY() - targetValue);
                break;
            }

            d = d->getNextSibling();
 800cb70:	68f8      	ldr	r0, [r7, #12]
 800cb72:	f7fe f92a 	bl	800adca <_ZN8touchgfx8Drawable14getNextSiblingEv>
 800cb76:	60f8      	str	r0, [r7, #12]
        while (d)
 800cb78:	68fb      	ldr	r3, [r7, #12]
 800cb7a:	2b00      	cmp	r3, #0
 800cb7c:	d1e3      	bne.n	800cb46 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x2e>
        }

        screenContainer->add(snapshot);
 800cb7e:	687b      	ldr	r3, [r7, #4]
 800cb80:	6858      	ldr	r0, [r3, #4]
 800cb82:	687b      	ldr	r3, [r7, #4]
 800cb84:	685b      	ldr	r3, [r3, #4]
 800cb86:	681b      	ldr	r3, [r3, #0]
 800cb88:	3360      	adds	r3, #96	; 0x60
 800cb8a:	681b      	ldr	r3, [r3, #0]
 800cb8c:	687a      	ldr	r2, [r7, #4]
 800cb8e:	320c      	adds	r2, #12
 800cb90:	4611      	mov	r1, r2
 800cb92:	4798      	blx	r3
 800cb94:	e000      	b.n	800cb98 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x80>
            return;
 800cb96:	bf00      	nop
    }
 800cb98:	3710      	adds	r7, #16
 800cb9a:	46bd      	mov	sp, r7
 800cb9c:	bdb0      	pop	{r4, r5, r7, pc}

0800cb9e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 800cb9e:	b5b0      	push	{r4, r5, r7, lr}
 800cba0:	b084      	sub	sp, #16
 800cba2:	af00      	add	r7, sp, #0
 800cba4:	6078      	str	r0, [r7, #4]
        Transition::handleTickEvent();
 800cba6:	687b      	ldr	r3, [r7, #4]
 800cba8:	4618      	mov	r0, r3
 800cbaa:	f7fe fa3d 	bl	800b028 <_ZN8touchgfx10Transition15handleTickEventEv>
        animationCounter++;
 800cbae:	687b      	ldr	r3, [r7, #4]
 800cbb0:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 800cbb4:	3301      	adds	r3, #1
 800cbb6:	b2da      	uxtb	r2, r3
 800cbb8:	687b      	ldr	r3, [r7, #4]
 800cbba:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
        if (animationCounter > animationSteps)
 800cbbe:	687b      	ldr	r3, [r7, #4]
 800cbc0:	f893 2039 	ldrb.w	r2, [r3, #57]	; 0x39
 800cbc4:	687b      	ldr	r3, [r7, #4]
 800cbc6:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 800cbca:	429a      	cmp	r2, r3
 800cbcc:	d907      	bls.n	800cbde <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x40>
            done = true;
 800cbce:	687b      	ldr	r3, [r7, #4]
 800cbd0:	2201      	movs	r2, #1
 800cbd2:	721a      	strb	r2, [r3, #8]
            animationCounter = 0;
 800cbd4:	687b      	ldr	r3, [r7, #4]
 800cbd6:	2200      	movs	r2, #0
 800cbd8:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
            return;
 800cbdc:	e060      	b.n	800cca0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x102>
        int16_t calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800cbde:	687b      	ldr	r3, [r7, #4]
 800cbe0:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 800cbe4:	b298      	uxth	r0, r3
 800cbe6:	687b      	ldr	r3, [r7, #4]
 800cbe8:	f9b3 203a 	ldrsh.w	r2, [r3, #58]	; 0x3a
 800cbec:	687b      	ldr	r3, [r7, #4]
 800cbee:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 800cbf2:	b29b      	uxth	r3, r3
 800cbf4:	2100      	movs	r1, #0
 800cbf6:	f00e f917 	bl	801ae28 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
 800cbfa:	4603      	mov	r3, r0
 800cbfc:	81fb      	strh	r3, [r7, #14]
        if ((calculatedValue % 2) != 0)
 800cbfe:	89fb      	ldrh	r3, [r7, #14]
 800cc00:	f003 0301 	and.w	r3, r3, #1
 800cc04:	b29b      	uxth	r3, r3
 800cc06:	2b00      	cmp	r3, #0
 800cc08:	d00b      	beq.n	800cc22 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x84>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800cc0a:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800cc0e:	2b00      	cmp	r3, #0
 800cc10:	dd01      	ble.n	800cc16 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x78>
 800cc12:	2201      	movs	r2, #1
 800cc14:	e001      	b.n	800cc1a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x7c>
 800cc16:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800cc1a:	89fb      	ldrh	r3, [r7, #14]
 800cc1c:	4413      	add	r3, r2
 800cc1e:	b29b      	uxth	r3, r3
 800cc20:	81fb      	strh	r3, [r7, #14]
            relativeValue = calculatedValue - snapshot.getX();
 800cc22:	89fc      	ldrh	r4, [r7, #14]
 800cc24:	687b      	ldr	r3, [r7, #4]
 800cc26:	330c      	adds	r3, #12
 800cc28:	4618      	mov	r0, r3
 800cc2a:	f7fe f8da 	bl	800ade2 <_ZNK8touchgfx8Drawable4getXEv>
 800cc2e:	4603      	mov	r3, r0
 800cc30:	b29b      	uxth	r3, r3
 800cc32:	1ae3      	subs	r3, r4, r3
 800cc34:	b29b      	uxth	r3, r3
 800cc36:	b21a      	sxth	r2, r3
 800cc38:	687b      	ldr	r3, [r7, #4]
 800cc3a:	879a      	strh	r2, [r3, #60]	; 0x3c
            break;
 800cc3c:	bf00      	nop
        Drawable* d = screenContainer->getFirstChild();
 800cc3e:	687b      	ldr	r3, [r7, #4]
 800cc40:	685a      	ldr	r2, [r3, #4]
 800cc42:	687b      	ldr	r3, [r7, #4]
 800cc44:	685b      	ldr	r3, [r3, #4]
 800cc46:	681b      	ldr	r3, [r3, #0]
 800cc48:	331c      	adds	r3, #28
 800cc4a:	681b      	ldr	r3, [r3, #0]
 800cc4c:	4610      	mov	r0, r2
 800cc4e:	4798      	blx	r3
 800cc50:	60b8      	str	r0, [r7, #8]
        while (d)
 800cc52:	e018      	b.n	800cc86 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0xe8>
                d->setX(d->getX() + relativeValue);
 800cc54:	68bd      	ldr	r5, [r7, #8]
 800cc56:	68bb      	ldr	r3, [r7, #8]
 800cc58:	681b      	ldr	r3, [r3, #0]
 800cc5a:	3330      	adds	r3, #48	; 0x30
 800cc5c:	681c      	ldr	r4, [r3, #0]
 800cc5e:	68b8      	ldr	r0, [r7, #8]
 800cc60:	f7fe f8bf 	bl	800ade2 <_ZNK8touchgfx8Drawable4getXEv>
 800cc64:	4603      	mov	r3, r0
 800cc66:	b29a      	uxth	r2, r3
 800cc68:	687b      	ldr	r3, [r7, #4]
 800cc6a:	f9b3 303c 	ldrsh.w	r3, [r3, #60]	; 0x3c
 800cc6e:	b29b      	uxth	r3, r3
 800cc70:	4413      	add	r3, r2
 800cc72:	b29b      	uxth	r3, r3
 800cc74:	b21b      	sxth	r3, r3
 800cc76:	4619      	mov	r1, r3
 800cc78:	4628      	mov	r0, r5
 800cc7a:	47a0      	blx	r4
                break;
 800cc7c:	bf00      	nop
            d = d->getNextSibling();
 800cc7e:	68b8      	ldr	r0, [r7, #8]
 800cc80:	f7fe f8a3 	bl	800adca <_ZN8touchgfx8Drawable14getNextSiblingEv>
 800cc84:	60b8      	str	r0, [r7, #8]
        while (d)
 800cc86:	68bb      	ldr	r3, [r7, #8]
 800cc88:	2b00      	cmp	r3, #0
 800cc8a:	d1e3      	bne.n	800cc54 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0xb6>
        screenContainer->invalidate();
 800cc8c:	687b      	ldr	r3, [r7, #4]
 800cc8e:	685b      	ldr	r3, [r3, #4]
 800cc90:	461a      	mov	r2, r3
 800cc92:	687b      	ldr	r3, [r7, #4]
 800cc94:	685b      	ldr	r3, [r3, #4]
 800cc96:	681b      	ldr	r3, [r3, #0]
 800cc98:	3314      	adds	r3, #20
 800cc9a:	681b      	ldr	r3, [r3, #0]
 800cc9c:	4610      	mov	r0, r2
 800cc9e:	4798      	blx	r3
    }
 800cca0:	3710      	adds	r7, #16
 800cca2:	46bd      	mov	sp, r7
 800cca4:	bdb0      	pop	{r4, r5, r7, pc}
	...

0800cca8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 800cca8:	b580      	push	{r7, lr}
 800ccaa:	b082      	sub	sp, #8
 800ccac:	af00      	add	r7, sp, #0
 800ccae:	6078      	str	r0, [r7, #4]
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 800ccb0:	4b0b      	ldr	r3, [pc, #44]	; (800cce0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x38>)
 800ccb2:	781b      	ldrb	r3, [r3, #0]
 800ccb4:	2b00      	cmp	r3, #0
 800ccb6:	d00e      	beq.n	800ccd6 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x2e>
 800ccb8:	687b      	ldr	r3, [r7, #4]
 800ccba:	685b      	ldr	r3, [r3, #4]
 800ccbc:	2b00      	cmp	r3, #0
 800ccbe:	d00a      	beq.n	800ccd6 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x2e>
            screenContainer->remove(snapshot);
 800ccc0:	687b      	ldr	r3, [r7, #4]
 800ccc2:	6858      	ldr	r0, [r3, #4]
 800ccc4:	687b      	ldr	r3, [r7, #4]
 800ccc6:	685b      	ldr	r3, [r3, #4]
 800ccc8:	681b      	ldr	r3, [r3, #0]
 800ccca:	3364      	adds	r3, #100	; 0x64
 800cccc:	681b      	ldr	r3, [r3, #0]
 800ccce:	687a      	ldr	r2, [r7, #4]
 800ccd0:	320c      	adds	r2, #12
 800ccd2:	4611      	mov	r1, r2
 800ccd4:	4798      	blx	r3
    }
 800ccd6:	bf00      	nop
 800ccd8:	3708      	adds	r7, #8
 800ccda:	46bd      	mov	sp, r7
 800ccdc:	bd80      	pop	{r7, pc}
 800ccde:	bf00      	nop
 800cce0:	2000224b 	.word	0x2000224b

0800cce4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 800cce4:	b5b0      	push	{r4, r5, r7, lr}
 800cce6:	b084      	sub	sp, #16
 800cce8:	af00      	add	r7, sp, #0
 800ccea:	6078      	str	r0, [r7, #4]
        Transition::init();
 800ccec:	687b      	ldr	r3, [r7, #4]
 800ccee:	4618      	mov	r0, r3
 800ccf0:	f7fe f9ae 	bl	800b050 <_ZN8touchgfx10Transition4initEv>
        if (done)
 800ccf4:	687b      	ldr	r3, [r7, #4]
 800ccf6:	7a1b      	ldrb	r3, [r3, #8]
 800ccf8:	2b00      	cmp	r3, #0
 800ccfa:	d132      	bne.n	800cd62 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x7e>
        Drawable* d = screenContainer->getFirstChild();
 800ccfc:	687b      	ldr	r3, [r7, #4]
 800ccfe:	685a      	ldr	r2, [r3, #4]
 800cd00:	687b      	ldr	r3, [r7, #4]
 800cd02:	685b      	ldr	r3, [r3, #4]
 800cd04:	681b      	ldr	r3, [r3, #0]
 800cd06:	331c      	adds	r3, #28
 800cd08:	681b      	ldr	r3, [r3, #0]
 800cd0a:	4610      	mov	r0, r2
 800cd0c:	4798      	blx	r3
 800cd0e:	60f8      	str	r0, [r7, #12]
        while (d)
 800cd10:	e018      	b.n	800cd44 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x60>
                d->setX(d->getX() - targetValue);
 800cd12:	68fd      	ldr	r5, [r7, #12]
 800cd14:	68fb      	ldr	r3, [r7, #12]
 800cd16:	681b      	ldr	r3, [r3, #0]
 800cd18:	3330      	adds	r3, #48	; 0x30
 800cd1a:	681c      	ldr	r4, [r3, #0]
 800cd1c:	68f8      	ldr	r0, [r7, #12]
 800cd1e:	f7fe f860 	bl	800ade2 <_ZNK8touchgfx8Drawable4getXEv>
 800cd22:	4603      	mov	r3, r0
 800cd24:	b29a      	uxth	r2, r3
 800cd26:	687b      	ldr	r3, [r7, #4]
 800cd28:	f9b3 303a 	ldrsh.w	r3, [r3, #58]	; 0x3a
 800cd2c:	b29b      	uxth	r3, r3
 800cd2e:	1ad3      	subs	r3, r2, r3
 800cd30:	b29b      	uxth	r3, r3
 800cd32:	b21b      	sxth	r3, r3
 800cd34:	4619      	mov	r1, r3
 800cd36:	4628      	mov	r0, r5
 800cd38:	47a0      	blx	r4
                break;
 800cd3a:	bf00      	nop
            d = d->getNextSibling();
 800cd3c:	68f8      	ldr	r0, [r7, #12]
 800cd3e:	f7fe f844 	bl	800adca <_ZN8touchgfx8Drawable14getNextSiblingEv>
 800cd42:	60f8      	str	r0, [r7, #12]
        while (d)
 800cd44:	68fb      	ldr	r3, [r7, #12]
 800cd46:	2b00      	cmp	r3, #0
 800cd48:	d1e3      	bne.n	800cd12 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x2e>
        screenContainer->add(snapshot);
 800cd4a:	687b      	ldr	r3, [r7, #4]
 800cd4c:	6858      	ldr	r0, [r3, #4]
 800cd4e:	687b      	ldr	r3, [r7, #4]
 800cd50:	685b      	ldr	r3, [r3, #4]
 800cd52:	681b      	ldr	r3, [r3, #0]
 800cd54:	3360      	adds	r3, #96	; 0x60
 800cd56:	681b      	ldr	r3, [r3, #0]
 800cd58:	687a      	ldr	r2, [r7, #4]
 800cd5a:	320c      	adds	r2, #12
 800cd5c:	4611      	mov	r1, r2
 800cd5e:	4798      	blx	r3
 800cd60:	e000      	b.n	800cd64 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x80>
            return;
 800cd62:	bf00      	nop
    }
 800cd64:	3710      	adds	r7, #16
 800cd66:	46bd      	mov	sp, r7
 800cd68:	bdb0      	pop	{r4, r5, r7, pc}

0800cd6a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 800cd6a:	b580      	push	{r7, lr}
 800cd6c:	b082      	sub	sp, #8
 800cd6e:	af00      	add	r7, sp, #0
 800cd70:	6078      	str	r0, [r7, #4]
    {
        (pobject->*pmemfun)();
 800cd72:	687b      	ldr	r3, [r7, #4]
 800cd74:	685b      	ldr	r3, [r3, #4]
 800cd76:	687a      	ldr	r2, [r7, #4]
 800cd78:	68d2      	ldr	r2, [r2, #12]
 800cd7a:	1052      	asrs	r2, r2, #1
 800cd7c:	1899      	adds	r1, r3, r2
 800cd7e:	687b      	ldr	r3, [r7, #4]
 800cd80:	68db      	ldr	r3, [r3, #12]
 800cd82:	f003 0301 	and.w	r3, r3, #1
 800cd86:	2b00      	cmp	r3, #0
 800cd88:	d102      	bne.n	800cd90 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x26>
 800cd8a:	687b      	ldr	r3, [r7, #4]
 800cd8c:	689b      	ldr	r3, [r3, #8]
 800cd8e:	e00a      	b.n	800cda6 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x3c>
 800cd90:	687b      	ldr	r3, [r7, #4]
 800cd92:	685b      	ldr	r3, [r3, #4]
 800cd94:	687a      	ldr	r2, [r7, #4]
 800cd96:	68d2      	ldr	r2, [r2, #12]
 800cd98:	1052      	asrs	r2, r2, #1
 800cd9a:	4413      	add	r3, r2
 800cd9c:	681b      	ldr	r3, [r3, #0]
 800cd9e:	687a      	ldr	r2, [r7, #4]
 800cda0:	6892      	ldr	r2, [r2, #8]
 800cda2:	4413      	add	r3, r2
 800cda4:	681b      	ldr	r3, [r3, #0]
 800cda6:	4608      	mov	r0, r1
 800cda8:	4798      	blx	r3
    }
 800cdaa:	bf00      	nop
 800cdac:	3708      	adds	r7, #8
 800cdae:	46bd      	mov	sp, r7
 800cdb0:	bd80      	pop	{r7, pc}

0800cdb2 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 800cdb2:	b480      	push	{r7}
 800cdb4:	b083      	sub	sp, #12
 800cdb6:	af00      	add	r7, sp, #0
 800cdb8:	6078      	str	r0, [r7, #4]
    {
        return (pobject != 0) && (pmemfun != 0);
 800cdba:	687b      	ldr	r3, [r7, #4]
 800cdbc:	685b      	ldr	r3, [r3, #4]
 800cdbe:	2b00      	cmp	r3, #0
 800cdc0:	d010      	beq.n	800cde4 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 800cdc2:	687b      	ldr	r3, [r7, #4]
 800cdc4:	689b      	ldr	r3, [r3, #8]
 800cdc6:	2b00      	cmp	r3, #0
 800cdc8:	d107      	bne.n	800cdda <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 800cdca:	687b      	ldr	r3, [r7, #4]
 800cdcc:	68db      	ldr	r3, [r3, #12]
 800cdce:	f003 0301 	and.w	r3, r3, #1
 800cdd2:	2b00      	cmp	r3, #0
 800cdd4:	d101      	bne.n	800cdda <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 800cdd6:	2301      	movs	r3, #1
 800cdd8:	e000      	b.n	800cddc <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x2a>
 800cdda:	2300      	movs	r3, #0
 800cddc:	2b01      	cmp	r3, #1
 800cdde:	d001      	beq.n	800cde4 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 800cde0:	2301      	movs	r3, #1
 800cde2:	e000      	b.n	800cde6 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x34>
 800cde4:	2300      	movs	r3, #0
    }
 800cde6:	4618      	mov	r0, r3
 800cde8:	370c      	adds	r7, #12
 800cdea:	46bd      	mov	sp, r7
 800cdec:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cdf0:	4770      	bx	lr
	...

0800cdf4 <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev>:
    TextAreaWithWildcardBase()
 800cdf4:	b580      	push	{r7, lr}
 800cdf6:	b082      	sub	sp, #8
 800cdf8:	af00      	add	r7, sp, #0
 800cdfa:	6078      	str	r0, [r7, #4]
        : TextArea()
 800cdfc:	687b      	ldr	r3, [r7, #4]
 800cdfe:	4618      	mov	r0, r3
 800ce00:	f7fd f9f0 	bl	800a1e4 <_ZN8touchgfx8TextAreaC1Ev>
 800ce04:	4a03      	ldr	r2, [pc, #12]	; (800ce14 <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev+0x20>)
 800ce06:	687b      	ldr	r3, [r7, #4]
 800ce08:	601a      	str	r2, [r3, #0]
    }
 800ce0a:	687b      	ldr	r3, [r7, #4]
 800ce0c:	4618      	mov	r0, r3
 800ce0e:	3708      	adds	r7, #8
 800ce10:	46bd      	mov	sp, r7
 800ce12:	bd80      	pop	{r7, pc}
 800ce14:	0802f724 	.word	0x0802f724

0800ce18 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 800ce18:	b580      	push	{r7, lr}
 800ce1a:	b082      	sub	sp, #8
 800ce1c:	af00      	add	r7, sp, #0
 800ce1e:	6078      	str	r0, [r7, #4]
        : TextAreaWithWildcardBase(), wc1(0)
 800ce20:	687b      	ldr	r3, [r7, #4]
 800ce22:	4618      	mov	r0, r3
 800ce24:	f7ff ffe6 	bl	800cdf4 <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev>
 800ce28:	4a05      	ldr	r2, [pc, #20]	; (800ce40 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x28>)
 800ce2a:	687b      	ldr	r3, [r7, #4]
 800ce2c:	601a      	str	r2, [r3, #0]
 800ce2e:	687b      	ldr	r3, [r7, #4]
 800ce30:	2200      	movs	r2, #0
 800ce32:	649a      	str	r2, [r3, #72]	; 0x48
    }
 800ce34:	687b      	ldr	r3, [r7, #4]
 800ce36:	4618      	mov	r0, r3
 800ce38:	3708      	adds	r7, #8
 800ce3a:	46bd      	mov	sp, r7
 800ce3c:	bd80      	pop	{r7, pc}
 800ce3e:	bf00      	nop
 800ce40:	0802df18 	.word	0x0802df18

0800ce44 <_ZN8touchgfx23TextAreaWithOneWildcard12setWildcard1EPKt>:
    void setWildcard1(const Unicode::UnicodeChar* value)
 800ce44:	b480      	push	{r7}
 800ce46:	b083      	sub	sp, #12
 800ce48:	af00      	add	r7, sp, #0
 800ce4a:	6078      	str	r0, [r7, #4]
 800ce4c:	6039      	str	r1, [r7, #0]
        wc1 = value;
 800ce4e:	687b      	ldr	r3, [r7, #4]
 800ce50:	683a      	ldr	r2, [r7, #0]
 800ce52:	649a      	str	r2, [r3, #72]	; 0x48
    }
 800ce54:	bf00      	nop
 800ce56:	370c      	adds	r7, #12
 800ce58:	46bd      	mov	sp, r7
 800ce5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ce5e:	4770      	bx	lr

0800ce60 <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>:
     * @param  value A pointer to the UnicodeChar to set the wildcard to.
     *
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard(const Unicode::UnicodeChar* value)
 800ce60:	b580      	push	{r7, lr}
 800ce62:	b082      	sub	sp, #8
 800ce64:	af00      	add	r7, sp, #0
 800ce66:	6078      	str	r0, [r7, #4]
 800ce68:	6039      	str	r1, [r7, #0]
    {
        setWildcard1(value);
 800ce6a:	6839      	ldr	r1, [r7, #0]
 800ce6c:	6878      	ldr	r0, [r7, #4]
 800ce6e:	f7ff ffe9 	bl	800ce44 <_ZN8touchgfx23TextAreaWithOneWildcard12setWildcard1EPKt>
    }
 800ce72:	bf00      	nop
 800ce74:	3708      	adds	r7, #8
 800ce76:	46bd      	mov	sp, r7
 800ce78:	bd80      	pop	{r7, pc}

0800ce7a <_ZN16COScreenViewBase11applicationEv>:
    COScreenViewBase();
    virtual ~COScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
 800ce7a:	b580      	push	{r7, lr}
 800ce7c:	b082      	sub	sp, #8
 800ce7e:	af00      	add	r7, sp, #0
 800ce80:	6078      	str	r0, [r7, #4]
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800ce82:	f00c fa11 	bl	80192a8 <_ZN8touchgfx11Application11getInstanceEv>
 800ce86:	4603      	mov	r3, r0
    }
 800ce88:	4618      	mov	r0, r3
 800ce8a:	3708      	adds	r7, #8
 800ce8c:	46bd      	mov	sp, r7
 800ce8e:	bd80      	pop	{r7, pc}

0800ce90 <_ZN8touchgfx4ViewI17COScreenPresenterED1Ev>:
class View : public Screen
 800ce90:	b580      	push	{r7, lr}
 800ce92:	b082      	sub	sp, #8
 800ce94:	af00      	add	r7, sp, #0
 800ce96:	6078      	str	r0, [r7, #4]
 800ce98:	4a05      	ldr	r2, [pc, #20]	; (800ceb0 <_ZN8touchgfx4ViewI17COScreenPresenterED1Ev+0x20>)
 800ce9a:	687b      	ldr	r3, [r7, #4]
 800ce9c:	601a      	str	r2, [r3, #0]
 800ce9e:	687b      	ldr	r3, [r7, #4]
 800cea0:	4618      	mov	r0, r3
 800cea2:	f7fd f899 	bl	8009fd8 <_ZN8touchgfx6ScreenD1Ev>
 800cea6:	687b      	ldr	r3, [r7, #4]
 800cea8:	4618      	mov	r0, r3
 800ceaa:	3708      	adds	r7, #8
 800ceac:	46bd      	mov	sp, r7
 800ceae:	bd80      	pop	{r7, pc}
 800ceb0:	0802e1ec 	.word	0x0802e1ec

0800ceb4 <_ZN8touchgfx4ViewI17COScreenPresenterED0Ev>:
 800ceb4:	b580      	push	{r7, lr}
 800ceb6:	b082      	sub	sp, #8
 800ceb8:	af00      	add	r7, sp, #0
 800ceba:	6078      	str	r0, [r7, #4]
 800cebc:	6878      	ldr	r0, [r7, #4]
 800cebe:	f7ff ffe7 	bl	800ce90 <_ZN8touchgfx4ViewI17COScreenPresenterED1Ev>
 800cec2:	2140      	movs	r1, #64	; 0x40
 800cec4:	6878      	ldr	r0, [r7, #4]
 800cec6:	f01d fc4c 	bl	802a762 <_ZdlPvj>
 800ceca:	687b      	ldr	r3, [r7, #4]
 800cecc:	4618      	mov	r0, r3
 800cece:	3708      	adds	r7, #8
 800ced0:	46bd      	mov	sp, r7
 800ced2:	bd80      	pop	{r7, pc}

0800ced4 <_ZN16COScreenViewBaseC1Ev>:
#include <gui_generated/coscreen_screen/COScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

COScreenViewBase::COScreenViewBase() :
 800ced4:	b590      	push	{r4, r7, lr}
 800ced6:	b0a5      	sub	sp, #148	; 0x94
 800ced8:	af02      	add	r7, sp, #8
 800ceda:	6178      	str	r0, [r7, #20]
    buttonCallback(this, &COScreenViewBase::buttonCallbackHandler)
 800cedc:	697b      	ldr	r3, [r7, #20]
 800cede:	4618      	mov	r0, r3
 800cee0:	f000 fa8c 	bl	800d3fc <_ZN8touchgfx4ViewI17COScreenPresenterEC1Ev>
 800cee4:	4a66      	ldr	r2, [pc, #408]	; (800d080 <_ZN16COScreenViewBaseC1Ev+0x1ac>)
 800cee6:	697b      	ldr	r3, [r7, #20]
 800cee8:	601a      	str	r2, [r3, #0]
 800ceea:	697b      	ldr	r3, [r7, #20]
 800ceec:	3340      	adds	r3, #64	; 0x40
 800ceee:	4618      	mov	r0, r3
 800cef0:	f7fd f930 	bl	800a154 <_ZN8touchgfx3BoxC1Ev>
 800cef4:	697b      	ldr	r3, [r7, #20]
 800cef6:	336c      	adds	r3, #108	; 0x6c
 800cef8:	4618      	mov	r0, r3
 800cefa:	f7ff ff8d 	bl	800ce18 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800cefe:	697b      	ldr	r3, [r7, #20]
 800cf00:	33b8      	adds	r3, #184	; 0xb8
 800cf02:	4618      	mov	r0, r3
 800cf04:	f009 fdb6 	bl	8016a74 <_ZN8touchgfx14ButtonWithIconC1Ev>
 800cf08:	697b      	ldr	r3, [r7, #20]
 800cf0a:	33f4      	adds	r3, #244	; 0xf4
 800cf0c:	4618      	mov	r0, r3
 800cf0e:	f009 fa29 	bl	8016364 <_ZN8touchgfx5GaugeC1Ev>
 800cf12:	697b      	ldr	r3, [r7, #20]
 800cf14:	f503 7325 	add.w	r3, r3, #660	; 0x294
 800cf18:	4618      	mov	r0, r3
 800cf1a:	f7fd f963 	bl	800a1e4 <_ZN8touchgfx8TextAreaC1Ev>
 800cf1e:	697b      	ldr	r3, [r7, #20]
 800cf20:	f503 7039 	add.w	r0, r3, #740	; 0x2e4
 800cf24:	4b57      	ldr	r3, [pc, #348]	; (800d084 <_ZN16COScreenViewBaseC1Ev+0x1b0>)
 800cf26:	623b      	str	r3, [r7, #32]
 800cf28:	2300      	movs	r3, #0
 800cf2a:	627b      	str	r3, [r7, #36]	; 0x24
 800cf2c:	f107 0320 	add.w	r3, r7, #32
 800cf30:	cb0c      	ldmia	r3, {r2, r3}
 800cf32:	6979      	ldr	r1, [r7, #20]
 800cf34:	f000 fa78 	bl	800d428 <_ZN8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>
{
    __background.setPosition(0, 0, 320, 240);
 800cf38:	697b      	ldr	r3, [r7, #20]
 800cf3a:	f103 0040 	add.w	r0, r3, #64	; 0x40
 800cf3e:	23f0      	movs	r3, #240	; 0xf0
 800cf40:	9300      	str	r3, [sp, #0]
 800cf42:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800cf46:	2200      	movs	r2, #0
 800cf48:	2100      	movs	r1, #0
 800cf4a:	f7fc ff0f 	bl	8009d6c <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800cf4e:	697b      	ldr	r3, [r7, #20]
 800cf50:	f103 0440 	add.w	r4, r3, #64	; 0x40
 800cf54:	2300      	movs	r3, #0
 800cf56:	f887 3064 	strb.w	r3, [r7, #100]	; 0x64
 800cf5a:	2300      	movs	r3, #0
 800cf5c:	f887 3063 	strb.w	r3, [r7, #99]	; 0x63
 800cf60:	2300      	movs	r3, #0
 800cf62:	f887 3062 	strb.w	r3, [r7, #98]	; 0x62
 800cf66:	f897 3064 	ldrb.w	r3, [r7, #100]	; 0x64
 800cf6a:	041b      	lsls	r3, r3, #16
 800cf6c:	461a      	mov	r2, r3
 800cf6e:	f897 3063 	ldrb.w	r3, [r7, #99]	; 0x63
 800cf72:	021b      	lsls	r3, r3, #8
 800cf74:	431a      	orrs	r2, r3
 800cf76:	f897 3062 	ldrb.w	r3, [r7, #98]	; 0x62
 800cf7a:	4313      	orrs	r3, r2
 800cf7c:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800cf80:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 800cf84:	4611      	mov	r1, r2
 800cf86:	4618      	mov	r0, r3
 800cf88:	f7fc fe2c 	bl	8009be4 <_ZN8touchgfx9colortypeC1Em>
 800cf8c:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800cf8e:	4619      	mov	r1, r3
 800cf90:	4620      	mov	r0, r4
 800cf92:	f7fd f903 	bl	800a19c <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800cf96:	697a      	ldr	r2, [r7, #20]
 800cf98:	697b      	ldr	r3, [r7, #20]
 800cf9a:	3340      	adds	r3, #64	; 0x40
 800cf9c:	4619      	mov	r1, r3
 800cf9e:	4610      	mov	r0, r2
 800cfa0:	f7fd f872 	bl	800a088 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    COData.setXY(200, 202);
 800cfa4:	697b      	ldr	r3, [r7, #20]
 800cfa6:	336c      	adds	r3, #108	; 0x6c
 800cfa8:	22ca      	movs	r2, #202	; 0xca
 800cfaa:	21c8      	movs	r1, #200	; 0xc8
 800cfac:	4618      	mov	r0, r3
 800cfae:	f7fc ff1c 	bl	8009dea <_ZN8touchgfx8Drawable5setXYEss>
    COData.setColor(touchgfx::Color::getColorFromRGB(214, 195, 195));
 800cfb2:	697b      	ldr	r3, [r7, #20]
 800cfb4:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 800cfb8:	23d6      	movs	r3, #214	; 0xd6
 800cfba:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
 800cfbe:	23c3      	movs	r3, #195	; 0xc3
 800cfc0:	f887 3066 	strb.w	r3, [r7, #102]	; 0x66
 800cfc4:	23c3      	movs	r3, #195	; 0xc3
 800cfc6:	f887 3065 	strb.w	r3, [r7, #101]	; 0x65
 800cfca:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 800cfce:	041b      	lsls	r3, r3, #16
 800cfd0:	461a      	mov	r2, r3
 800cfd2:	f897 3066 	ldrb.w	r3, [r7, #102]	; 0x66
 800cfd6:	021b      	lsls	r3, r3, #8
 800cfd8:	431a      	orrs	r2, r3
 800cfda:	f897 3065 	ldrb.w	r3, [r7, #101]	; 0x65
 800cfde:	4313      	orrs	r3, r2
 800cfe0:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800cfe4:	f107 0358 	add.w	r3, r7, #88	; 0x58
 800cfe8:	4611      	mov	r1, r2
 800cfea:	4618      	mov	r0, r3
 800cfec:	f7fc fdfa 	bl	8009be4 <_ZN8touchgfx9colortypeC1Em>
 800cff0:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 800cff2:	66bc      	str	r4, [r7, #104]	; 0x68
 800cff4:	61fb      	str	r3, [r7, #28]
        color = newColor;
 800cff6:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 800cff8:	69fa      	ldr	r2, [r7, #28]
 800cffa:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800cffc:	bf00      	nop
    COData.setLinespacing(0);
 800cffe:	697b      	ldr	r3, [r7, #20]
 800d000:	336c      	adds	r3, #108	; 0x6c
 800d002:	673b      	str	r3, [r7, #112]	; 0x70
 800d004:	2300      	movs	r3, #0
 800d006:	f8a7 306e 	strh.w	r3, [r7, #110]	; 0x6e
        linespace = space;
 800d00a:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800d00c:	f8b7 206e 	ldrh.w	r2, [r7, #110]	; 0x6e
 800d010:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800d012:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800d014:	681b      	ldr	r3, [r3, #0]
 800d016:	3384      	adds	r3, #132	; 0x84
 800d018:	681b      	ldr	r3, [r3, #0]
 800d01a:	6f3c      	ldr	r4, [r7, #112]	; 0x70
 800d01c:	463a      	mov	r2, r7
 800d01e:	6f39      	ldr	r1, [r7, #112]	; 0x70
 800d020:	4610      	mov	r0, r2
 800d022:	4798      	blx	r3
 800d024:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800d028:	463a      	mov	r2, r7
 800d02a:	ca07      	ldmia	r2, {r0, r1, r2}
 800d02c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800d030:	bf00      	nop
    Unicode::snprintf(CODataBuffer, CODATA_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_ZXCV).getText());
 800d032:	697b      	ldr	r3, [r7, #20]
 800d034:	f503 7437 	add.w	r4, r3, #732	; 0x2dc
 800d038:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800d03c:	2102      	movs	r1, #2
 800d03e:	4618      	mov	r0, r3
 800d040:	f7fd f8ba 	bl	800a1b8 <_ZN8touchgfx9TypedTextC1Et>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800d044:	4b10      	ldr	r3, [pc, #64]	; (800d088 <_ZN16COScreenViewBaseC1Ev+0x1b4>)
 800d046:	681b      	ldr	r3, [r3, #0]
 800d048:	2b00      	cmp	r3, #0
 800d04a:	d105      	bne.n	800d058 <_ZN16COScreenViewBaseC1Ev+0x184>
 800d04c:	4b0f      	ldr	r3, [pc, #60]	; (800d08c <_ZN16COScreenViewBaseC1Ev+0x1b8>)
 800d04e:	4a10      	ldr	r2, [pc, #64]	; (800d090 <_ZN16COScreenViewBaseC1Ev+0x1bc>)
 800d050:	2160      	movs	r1, #96	; 0x60
 800d052:	4810      	ldr	r0, [pc, #64]	; (800d094 <_ZN16COScreenViewBaseC1Ev+0x1c0>)
 800d054:	f01e f976 	bl	802b344 <__assert_func>
 800d058:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800d05c:	677b      	str	r3, [r7, #116]	; 0x74
        return typedTextId < numberOfTypedTexts;
 800d05e:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800d060:	889a      	ldrh	r2, [r3, #4]
 800d062:	4b0d      	ldr	r3, [pc, #52]	; (800d098 <_ZN16COScreenViewBaseC1Ev+0x1c4>)
 800d064:	881b      	ldrh	r3, [r3, #0]
 800d066:	429a      	cmp	r2, r3
 800d068:	bf34      	ite	cc
 800d06a:	2301      	movcc	r3, #1
 800d06c:	2300      	movcs	r3, #0
 800d06e:	b2db      	uxtb	r3, r3
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800d070:	2b00      	cmp	r3, #0
 800d072:	d115      	bne.n	800d0a0 <_ZN16COScreenViewBaseC1Ev+0x1cc>
 800d074:	4b09      	ldr	r3, [pc, #36]	; (800d09c <_ZN16COScreenViewBaseC1Ev+0x1c8>)
 800d076:	4a06      	ldr	r2, [pc, #24]	; (800d090 <_ZN16COScreenViewBaseC1Ev+0x1bc>)
 800d078:	2161      	movs	r1, #97	; 0x61
 800d07a:	4806      	ldr	r0, [pc, #24]	; (800d094 <_ZN16COScreenViewBaseC1Ev+0x1c0>)
 800d07c:	f01e f962 	bl	802b344 <__assert_func>
 800d080:	0802e1a0 	.word	0x0802e1a0
 800d084:	0800d3d3 	.word	0x0800d3d3
 800d088:	200022a4 	.word	0x200022a4
 800d08c:	0802cd9c 	.word	0x0802cd9c
 800d090:	0802cea0 	.word	0x0802cea0
 800d094:	0802ce1c 	.word	0x0802ce1c
 800d098:	200022a8 	.word	0x200022a8
 800d09c:	0802ce60 	.word	0x0802ce60
        return texts->getText(typedTextId);
 800d0a0:	4ba3      	ldr	r3, [pc, #652]	; (800d330 <_ZN16COScreenViewBaseC1Ev+0x45c>)
 800d0a2:	681b      	ldr	r3, [r3, #0]
 800d0a4:	8dba      	ldrh	r2, [r7, #44]	; 0x2c
 800d0a6:	4611      	mov	r1, r2
 800d0a8:	4618      	mov	r0, r3
 800d0aa:	f002 ffdd 	bl	8010068 <_ZNK8touchgfx5Texts7getTextEt>
 800d0ae:	4603      	mov	r3, r0
 800d0b0:	bf00      	nop
 800d0b2:	4aa0      	ldr	r2, [pc, #640]	; (800d334 <_ZN16COScreenViewBaseC1Ev+0x460>)
 800d0b4:	2104      	movs	r1, #4
 800d0b6:	4620      	mov	r0, r4
 800d0b8:	f00f fb3e 	bl	801c738 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800d0bc:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800d0c0:	4618      	mov	r0, r3
 800d0c2:	f7fc fba7 	bl	8009814 <_ZN8touchgfx9TypedTextD1Ev>
    COData.setWildcard(CODataBuffer);
 800d0c6:	697b      	ldr	r3, [r7, #20]
 800d0c8:	f103 026c 	add.w	r2, r3, #108	; 0x6c
 800d0cc:	697b      	ldr	r3, [r7, #20]
 800d0ce:	f503 7337 	add.w	r3, r3, #732	; 0x2dc
 800d0d2:	4619      	mov	r1, r3
 800d0d4:	4610      	mov	r0, r2
 800d0d6:	f7ff fec3 	bl	800ce60 <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    COData.resizeToCurrentText();
 800d0da:	697b      	ldr	r3, [r7, #20]
 800d0dc:	336c      	adds	r3, #108	; 0x6c
 800d0de:	4618      	mov	r0, r3
 800d0e0:	f009 f892 	bl	8016208 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
    COData.setTypedText(touchgfx::TypedText(T___SINGLEUSE_N3KU));
 800d0e4:	697b      	ldr	r3, [r7, #20]
 800d0e6:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 800d0ea:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800d0ee:	2103      	movs	r1, #3
 800d0f0:	4618      	mov	r0, r3
 800d0f2:	f7fd f861 	bl	800a1b8 <_ZN8touchgfx9TypedTextC1Et>
 800d0f6:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800d0fa:	4619      	mov	r1, r3
 800d0fc:	4620      	mov	r0, r4
 800d0fe:	f009 f8a3 	bl	8016248 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800d102:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800d106:	4618      	mov	r0, r3
 800d108:	f7fc fb84 	bl	8009814 <_ZN8touchgfx9TypedTextD1Ev>
    add(COData);
 800d10c:	697a      	ldr	r2, [r7, #20]
 800d10e:	697b      	ldr	r3, [r7, #20]
 800d110:	336c      	adds	r3, #108	; 0x6c
 800d112:	4619      	mov	r1, r3
 800d114:	4610      	mov	r0, r2
 800d116:	f7fc ffb7 	bl	800a088 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    back.setXY(20, 103);
 800d11a:	697b      	ldr	r3, [r7, #20]
 800d11c:	33b8      	adds	r3, #184	; 0xb8
 800d11e:	2267      	movs	r2, #103	; 0x67
 800d120:	2114      	movs	r1, #20
 800d122:	4618      	mov	r0, r3
 800d124:	f7fc fe61 	bl	8009dea <_ZN8touchgfx8Drawable5setXYEss>
    back.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID));
 800d128:	697b      	ldr	r3, [r7, #20]
 800d12a:	f103 04b8 	add.w	r4, r3, #184	; 0xb8
 800d12e:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800d132:	2100      	movs	r1, #0
 800d134:	4618      	mov	r0, r3
 800d136:	f7fc fd9b 	bl	8009c70 <_ZN8touchgfx6BitmapC1Et>
 800d13a:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800d13e:	2101      	movs	r1, #1
 800d140:	4618      	mov	r0, r3
 800d142:	f7fc fd95 	bl	8009c70 <_ZN8touchgfx6BitmapC1Et>
 800d146:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800d14a:	2104      	movs	r1, #4
 800d14c:	4618      	mov	r0, r3
 800d14e:	f7fc fd8f 	bl	8009c70 <_ZN8touchgfx6BitmapC1Et>
 800d152:	f107 0344 	add.w	r3, r7, #68	; 0x44
 800d156:	2104      	movs	r1, #4
 800d158:	4618      	mov	r0, r3
 800d15a:	f7fc fd89 	bl	8009c70 <_ZN8touchgfx6BitmapC1Et>
 800d15e:	f107 0040 	add.w	r0, r7, #64	; 0x40
 800d162:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 800d166:	f107 0138 	add.w	r1, r7, #56	; 0x38
 800d16a:	f107 0344 	add.w	r3, r7, #68	; 0x44
 800d16e:	9300      	str	r3, [sp, #0]
 800d170:	4603      	mov	r3, r0
 800d172:	4620      	mov	r0, r4
 800d174:	f009 fbe8 	bl	8016948 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    back.setIconXY(5, 5);
 800d178:	697b      	ldr	r3, [r7, #20]
 800d17a:	33b8      	adds	r3, #184	; 0xb8
 800d17c:	2205      	movs	r2, #5
 800d17e:	2105      	movs	r1, #5
 800d180:	4618      	mov	r0, r3
 800d182:	f7fd fa39 	bl	800a5f8 <_ZN8touchgfx14ButtonWithIcon9setIconXYEss>
    back.setAction(buttonCallback);
 800d186:	697b      	ldr	r3, [r7, #20]
 800d188:	f103 02b8 	add.w	r2, r3, #184	; 0xb8
 800d18c:	697b      	ldr	r3, [r7, #20]
 800d18e:	f503 7339 	add.w	r3, r3, #740	; 0x2e4
 800d192:	4619      	mov	r1, r3
 800d194:	4610      	mov	r0, r2
 800d196:	f7fd f9e1 	bl	800a55c <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
    add(back);
 800d19a:	697a      	ldr	r2, [r7, #20]
 800d19c:	697b      	ldr	r3, [r7, #20]
 800d19e:	33b8      	adds	r3, #184	; 0xb8
 800d1a0:	4619      	mov	r1, r3
 800d1a2:	4610      	mov	r0, r2
 800d1a4:	f7fc ff70 	bl	800a088 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    COGauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_TINY_BACKGROUNDS_LIGHT_ID));
 800d1a8:	697b      	ldr	r3, [r7, #20]
 800d1aa:	f103 04f4 	add.w	r4, r3, #244	; 0xf4
 800d1ae:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800d1b2:	2102      	movs	r1, #2
 800d1b4:	4618      	mov	r0, r3
 800d1b6:	f7fc fd5b 	bl	8009c70 <_ZN8touchgfx6BitmapC1Et>
 800d1ba:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800d1be:	4619      	mov	r1, r3
 800d1c0:	4620      	mov	r0, r4
 800d1c2:	f005 fcce 	bl	8012b62 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    COGauge.setPosition(166, 73, 120, 120);
 800d1c6:	697b      	ldr	r3, [r7, #20]
 800d1c8:	f103 00f4 	add.w	r0, r3, #244	; 0xf4
 800d1cc:	2378      	movs	r3, #120	; 0x78
 800d1ce:	9300      	str	r3, [sp, #0]
 800d1d0:	2378      	movs	r3, #120	; 0x78
 800d1d2:	2249      	movs	r2, #73	; 0x49
 800d1d4:	21a6      	movs	r1, #166	; 0xa6
 800d1d6:	f7fc fdc9 	bl	8009d6c <_ZN8touchgfx8Drawable11setPositionEssss>
    COGauge.setCenter(60, 60);
 800d1da:	697b      	ldr	r3, [r7, #20]
 800d1dc:	33f4      	adds	r3, #244	; 0xf4
 800d1de:	223c      	movs	r2, #60	; 0x3c
 800d1e0:	213c      	movs	r1, #60	; 0x3c
 800d1e2:	4618      	mov	r0, r3
 800d1e4:	f009 f969 	bl	80164ba <_ZN8touchgfx5Gauge9setCenterEii>
    COGauge.setStartEndAngle(-90, 90);
 800d1e8:	697b      	ldr	r3, [r7, #20]
 800d1ea:	33f4      	adds	r3, #244	; 0xf4
 800d1ec:	225a      	movs	r2, #90	; 0x5a
 800d1ee:	f06f 0159 	mvn.w	r1, #89	; 0x59
 800d1f2:	4618      	mov	r0, r3
 800d1f4:	f009 f9e6 	bl	80165c4 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    COGauge.setRange(10, 1000);
 800d1f8:	697b      	ldr	r3, [r7, #20]
 800d1fa:	f103 00f4 	add.w	r0, r3, #244	; 0xf4
 800d1fe:	2300      	movs	r3, #0
 800d200:	9300      	str	r3, [sp, #0]
 800d202:	2300      	movs	r3, #0
 800d204:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800d208:	210a      	movs	r1, #10
 800d20a:	f005 fb84 	bl	8012916 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    COGauge.setValue(300);
 800d20e:	697b      	ldr	r3, [r7, #20]
 800d210:	33f4      	adds	r3, #244	; 0xf4
 800d212:	f44f 7196 	mov.w	r1, #300	; 0x12c
 800d216:	4618      	mov	r0, r3
 800d218:	f009 f97e 	bl	8016518 <_ZN8touchgfx5Gauge8setValueEi>
    COGauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_TINY_NEEDLES_ROUGH_ID, 5, 33);
 800d21c:	697b      	ldr	r3, [r7, #20]
 800d21e:	f103 00f4 	add.w	r0, r3, #244	; 0xf4
 800d222:	2321      	movs	r3, #33	; 0x21
 800d224:	2205      	movs	r2, #5
 800d226:	2103      	movs	r1, #3
 800d228:	f009 f932 	bl	8016490 <_ZN8touchgfx5Gauge9setNeedleEtss>
    COGauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 800d22c:	697b      	ldr	r3, [r7, #20]
 800d22e:	33f4      	adds	r3, #244	; 0xf4
 800d230:	2101      	movs	r1, #1
 800d232:	4618      	mov	r0, r3
 800d234:	f009 f8ce 	bl	80163d4 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    COGauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 800d238:	697b      	ldr	r3, [r7, #20]
 800d23a:	33f4      	adds	r3, #244	; 0xf4
 800d23c:	2101      	movs	r1, #1
 800d23e:	4618      	mov	r0, r3
 800d240:	f009 f8cb 	bl	80163da <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    add(COGauge);
 800d244:	697a      	ldr	r2, [r7, #20]
 800d246:	697b      	ldr	r3, [r7, #20]
 800d248:	33f4      	adds	r3, #244	; 0xf4
 800d24a:	4619      	mov	r1, r3
 800d24c:	4610      	mov	r0, r2
 800d24e:	f7fc ff1b 	bl	800a088 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    CO_text.setXY(76, 8);
 800d252:	697b      	ldr	r3, [r7, #20]
 800d254:	f503 7325 	add.w	r3, r3, #660	; 0x294
 800d258:	2208      	movs	r2, #8
 800d25a:	214c      	movs	r1, #76	; 0x4c
 800d25c:	4618      	mov	r0, r3
 800d25e:	f7fc fdc4 	bl	8009dea <_ZN8touchgfx8Drawable5setXYEss>
    CO_text.setColor(touchgfx::Color::getColorFromRGB(242, 174, 174));
 800d262:	697b      	ldr	r3, [r7, #20]
 800d264:	f503 7425 	add.w	r4, r3, #660	; 0x294
 800d268:	23f2      	movs	r3, #242	; 0xf2
 800d26a:	f887 307b 	strb.w	r3, [r7, #123]	; 0x7b
 800d26e:	23ae      	movs	r3, #174	; 0xae
 800d270:	f887 307a 	strb.w	r3, [r7, #122]	; 0x7a
 800d274:	23ae      	movs	r3, #174	; 0xae
 800d276:	f887 3079 	strb.w	r3, [r7, #121]	; 0x79
 800d27a:	f897 307b 	ldrb.w	r3, [r7, #123]	; 0x7b
 800d27e:	041b      	lsls	r3, r3, #16
 800d280:	461a      	mov	r2, r3
 800d282:	f897 307a 	ldrb.w	r3, [r7, #122]	; 0x7a
 800d286:	021b      	lsls	r3, r3, #8
 800d288:	431a      	orrs	r2, r3
 800d28a:	f897 3079 	ldrb.w	r3, [r7, #121]	; 0x79
 800d28e:	4313      	orrs	r3, r2
 800d290:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800d294:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800d298:	4611      	mov	r1, r2
 800d29a:	4618      	mov	r0, r3
 800d29c:	f7fc fca2 	bl	8009be4 <_ZN8touchgfx9colortypeC1Em>
 800d2a0:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800d2a2:	67fc      	str	r4, [r7, #124]	; 0x7c
 800d2a4:	61bb      	str	r3, [r7, #24]
        color = newColor;
 800d2a6:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 800d2a8:	69ba      	ldr	r2, [r7, #24]
 800d2aa:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800d2ac:	bf00      	nop
    CO_text.setLinespacing(0);
 800d2ae:	697b      	ldr	r3, [r7, #20]
 800d2b0:	f503 7325 	add.w	r3, r3, #660	; 0x294
 800d2b4:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800d2b8:	2300      	movs	r3, #0
 800d2ba:	f8a7 3082 	strh.w	r3, [r7, #130]	; 0x82
        linespace = space;
 800d2be:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800d2c2:	f8b7 2082 	ldrh.w	r2, [r7, #130]	; 0x82
 800d2c6:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800d2c8:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800d2cc:	681b      	ldr	r3, [r3, #0]
 800d2ce:	3384      	adds	r3, #132	; 0x84
 800d2d0:	681b      	ldr	r3, [r3, #0]
 800d2d2:	f8d7 4084 	ldr.w	r4, [r7, #132]	; 0x84
 800d2d6:	463a      	mov	r2, r7
 800d2d8:	f8d7 1084 	ldr.w	r1, [r7, #132]	; 0x84
 800d2dc:	4610      	mov	r0, r2
 800d2de:	4798      	blx	r3
 800d2e0:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800d2e4:	463a      	mov	r2, r7
 800d2e6:	ca07      	ldmia	r2, {r0, r1, r2}
 800d2e8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800d2ec:	bf00      	nop
    CO_text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LS7X));
 800d2ee:	697b      	ldr	r3, [r7, #20]
 800d2f0:	f503 7425 	add.w	r4, r3, #660	; 0x294
 800d2f4:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800d2f8:	2106      	movs	r1, #6
 800d2fa:	4618      	mov	r0, r3
 800d2fc:	f7fc ff5c 	bl	800a1b8 <_ZN8touchgfx9TypedTextC1Et>
 800d300:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800d304:	4619      	mov	r1, r3
 800d306:	4620      	mov	r0, r4
 800d308:	f008 ff9e 	bl	8016248 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800d30c:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800d310:	4618      	mov	r0, r3
 800d312:	f7fc fa7f 	bl	8009814 <_ZN8touchgfx9TypedTextD1Ev>
    add(CO_text);
 800d316:	697a      	ldr	r2, [r7, #20]
 800d318:	697b      	ldr	r3, [r7, #20]
 800d31a:	f503 7325 	add.w	r3, r3, #660	; 0x294
 800d31e:	4619      	mov	r1, r3
 800d320:	4610      	mov	r0, r2
 800d322:	f7fc feb1 	bl	800a088 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800d326:	697b      	ldr	r3, [r7, #20]
 800d328:	4618      	mov	r0, r3
 800d32a:	378c      	adds	r7, #140	; 0x8c
 800d32c:	46bd      	mov	sp, r7
 800d32e:	bd90      	pop	{r4, r7, pc}
 800d330:	200022b0 	.word	0x200022b0
 800d334:	0802ced8 	.word	0x0802ced8

0800d338 <_ZN16COScreenViewBaseD1Ev>:

COScreenViewBase::~COScreenViewBase()
 800d338:	b580      	push	{r7, lr}
 800d33a:	b082      	sub	sp, #8
 800d33c:	af00      	add	r7, sp, #0
 800d33e:	6078      	str	r0, [r7, #4]
 800d340:	4a15      	ldr	r2, [pc, #84]	; (800d398 <_ZN16COScreenViewBaseD1Ev+0x60>)
 800d342:	687b      	ldr	r3, [r7, #4]
 800d344:	601a      	str	r2, [r3, #0]
 800d346:	687b      	ldr	r3, [r7, #4]
 800d348:	f503 7339 	add.w	r3, r3, #740	; 0x2e4
 800d34c:	4618      	mov	r0, r3
 800d34e:	f000 f88b 	bl	800d468 <_ZN8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800d352:	687b      	ldr	r3, [r7, #4]
 800d354:	f503 7325 	add.w	r3, r3, #660	; 0x294
 800d358:	4618      	mov	r0, r3
 800d35a:	f7fd f881 	bl	800a460 <_ZN8touchgfx8TextAreaD1Ev>
 800d35e:	687b      	ldr	r3, [r7, #4]
 800d360:	33f4      	adds	r3, #244	; 0xf4
 800d362:	4618      	mov	r0, r3
 800d364:	f000 f956 	bl	800d614 <_ZN8touchgfx5GaugeD1Ev>
 800d368:	687b      	ldr	r3, [r7, #4]
 800d36a:	33b8      	adds	r3, #184	; 0xb8
 800d36c:	4618      	mov	r0, r3
 800d36e:	f7fd fcb9 	bl	800ace4 <_ZN8touchgfx14ButtonWithIconD1Ev>
 800d372:	687b      	ldr	r3, [r7, #4]
 800d374:	336c      	adds	r3, #108	; 0x6c
 800d376:	4618      	mov	r0, r3
 800d378:	f7fd fbe2 	bl	800ab40 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800d37c:	687b      	ldr	r3, [r7, #4]
 800d37e:	3340      	adds	r3, #64	; 0x40
 800d380:	4618      	mov	r0, r3
 800d382:	f7fd fc21 	bl	800abc8 <_ZN8touchgfx3BoxD1Ev>
 800d386:	687b      	ldr	r3, [r7, #4]
 800d388:	4618      	mov	r0, r3
 800d38a:	f7ff fd81 	bl	800ce90 <_ZN8touchgfx4ViewI17COScreenPresenterED1Ev>
{

}
 800d38e:	687b      	ldr	r3, [r7, #4]
 800d390:	4618      	mov	r0, r3
 800d392:	3708      	adds	r7, #8
 800d394:	46bd      	mov	sp, r7
 800d396:	bd80      	pop	{r7, pc}
 800d398:	0802e1a0 	.word	0x0802e1a0

0800d39c <_ZN16COScreenViewBaseD0Ev>:
COScreenViewBase::~COScreenViewBase()
 800d39c:	b580      	push	{r7, lr}
 800d39e:	b082      	sub	sp, #8
 800d3a0:	af00      	add	r7, sp, #0
 800d3a2:	6078      	str	r0, [r7, #4]
}
 800d3a4:	6878      	ldr	r0, [r7, #4]
 800d3a6:	f7ff ffc7 	bl	800d338 <_ZN16COScreenViewBaseD1Ev>
 800d3aa:	f44f 713d 	mov.w	r1, #756	; 0x2f4
 800d3ae:	6878      	ldr	r0, [r7, #4]
 800d3b0:	f01d f9d7 	bl	802a762 <_ZdlPvj>
 800d3b4:	687b      	ldr	r3, [r7, #4]
 800d3b6:	4618      	mov	r0, r3
 800d3b8:	3708      	adds	r7, #8
 800d3ba:	46bd      	mov	sp, r7
 800d3bc:	bd80      	pop	{r7, pc}

0800d3be <_ZN16COScreenViewBase11setupScreenEv>:

void COScreenViewBase::setupScreen()
{
 800d3be:	b480      	push	{r7}
 800d3c0:	b083      	sub	sp, #12
 800d3c2:	af00      	add	r7, sp, #0
 800d3c4:	6078      	str	r0, [r7, #4]

}
 800d3c6:	bf00      	nop
 800d3c8:	370c      	adds	r7, #12
 800d3ca:	46bd      	mov	sp, r7
 800d3cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d3d0:	4770      	bx	lr

0800d3d2 <_ZN16COScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void COScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800d3d2:	b580      	push	{r7, lr}
 800d3d4:	b082      	sub	sp, #8
 800d3d6:	af00      	add	r7, sp, #0
 800d3d8:	6078      	str	r0, [r7, #4]
 800d3da:	6039      	str	r1, [r7, #0]
    if (&src == &back)
 800d3dc:	687b      	ldr	r3, [r7, #4]
 800d3de:	33b8      	adds	r3, #184	; 0xb8
 800d3e0:	683a      	ldr	r2, [r7, #0]
 800d3e2:	429a      	cmp	r2, r3
 800d3e4:	d106      	bne.n	800d3f4 <_ZN16COScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x22>
    {
        //COToMain
        //When back clicked change screen to MainScreen
        //Go to MainScreen with screen transition towards West
        application().gotoMainScreenScreenSlideTransitionWest();
 800d3e6:	6878      	ldr	r0, [r7, #4]
 800d3e8:	f7ff fd47 	bl	800ce7a <_ZN16COScreenViewBase11applicationEv>
 800d3ec:	4603      	mov	r3, r0
 800d3ee:	4618      	mov	r0, r3
 800d3f0:	f7fd ffb8 	bl	800b364 <_ZN23FrontendApplicationBase39gotoMainScreenScreenSlideTransitionWestEv>
    }
}
 800d3f4:	bf00      	nop
 800d3f6:	3708      	adds	r7, #8
 800d3f8:	46bd      	mov	sp, r7
 800d3fa:	bd80      	pop	{r7, pc}

0800d3fc <_ZN8touchgfx4ViewI17COScreenPresenterEC1Ev>:
    View()
 800d3fc:	b580      	push	{r7, lr}
 800d3fe:	b082      	sub	sp, #8
 800d400:	af00      	add	r7, sp, #0
 800d402:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800d404:	687b      	ldr	r3, [r7, #4]
 800d406:	4618      	mov	r0, r3
 800d408:	f00d fb5c 	bl	801aac4 <_ZN8touchgfx6ScreenC1Ev>
 800d40c:	4a05      	ldr	r2, [pc, #20]	; (800d424 <_ZN8touchgfx4ViewI17COScreenPresenterEC1Ev+0x28>)
 800d40e:	687b      	ldr	r3, [r7, #4]
 800d410:	601a      	str	r2, [r3, #0]
 800d412:	687b      	ldr	r3, [r7, #4]
 800d414:	2200      	movs	r2, #0
 800d416:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800d418:	687b      	ldr	r3, [r7, #4]
 800d41a:	4618      	mov	r0, r3
 800d41c:	3708      	adds	r7, #8
 800d41e:	46bd      	mov	sp, r7
 800d420:	bd80      	pop	{r7, pc}
 800d422:	bf00      	nop
 800d424:	0802e1ec 	.word	0x0802e1ec

0800d428 <_ZN8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800d428:	b580      	push	{r7, lr}
 800d42a:	b084      	sub	sp, #16
 800d42c:	af00      	add	r7, sp, #0
 800d42e:	60f8      	str	r0, [r7, #12]
 800d430:	60b9      	str	r1, [r7, #8]
 800d432:	4639      	mov	r1, r7
 800d434:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800d438:	68fb      	ldr	r3, [r7, #12]
 800d43a:	4618      	mov	r0, r3
 800d43c:	f7fd fb0e 	bl	800aa5c <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>
 800d440:	4a08      	ldr	r2, [pc, #32]	; (800d464 <_ZN8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800d442:	68fb      	ldr	r3, [r7, #12]
 800d444:	601a      	str	r2, [r3, #0]
 800d446:	68fb      	ldr	r3, [r7, #12]
 800d448:	68ba      	ldr	r2, [r7, #8]
 800d44a:	605a      	str	r2, [r3, #4]
 800d44c:	68fb      	ldr	r3, [r7, #12]
 800d44e:	3308      	adds	r3, #8
 800d450:	463a      	mov	r2, r7
 800d452:	e892 0003 	ldmia.w	r2, {r0, r1}
 800d456:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800d45a:	68fb      	ldr	r3, [r7, #12]
 800d45c:	4618      	mov	r0, r3
 800d45e:	3710      	adds	r7, #16
 800d460:	46bd      	mov	sp, r7
 800d462:	bd80      	pop	{r7, pc}
 800d464:	0802e1d4 	.word	0x0802e1d4

0800d468 <_ZN8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800d468:	b580      	push	{r7, lr}
 800d46a:	b082      	sub	sp, #8
 800d46c:	af00      	add	r7, sp, #0
 800d46e:	6078      	str	r0, [r7, #4]
 800d470:	4a05      	ldr	r2, [pc, #20]	; (800d488 <_ZN8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvED1Ev+0x20>)
 800d472:	687b      	ldr	r3, [r7, #4]
 800d474:	601a      	str	r2, [r3, #0]
 800d476:	687b      	ldr	r3, [r7, #4]
 800d478:	4618      	mov	r0, r3
 800d47a:	f7fd fb1f 	bl	800aabc <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800d47e:	687b      	ldr	r3, [r7, #4]
 800d480:	4618      	mov	r0, r3
 800d482:	3708      	adds	r7, #8
 800d484:	46bd      	mov	sp, r7
 800d486:	bd80      	pop	{r7, pc}
 800d488:	0802e1d4 	.word	0x0802e1d4

0800d48c <_ZN8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
 800d48c:	b580      	push	{r7, lr}
 800d48e:	b082      	sub	sp, #8
 800d490:	af00      	add	r7, sp, #0
 800d492:	6078      	str	r0, [r7, #4]
 800d494:	6878      	ldr	r0, [r7, #4]
 800d496:	f7ff ffe7 	bl	800d468 <_ZN8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800d49a:	2110      	movs	r1, #16
 800d49c:	6878      	ldr	r0, [r7, #4]
 800d49e:	f01d f960 	bl	802a762 <_ZdlPvj>
 800d4a2:	687b      	ldr	r3, [r7, #4]
 800d4a4:	4618      	mov	r0, r3
 800d4a6:	3708      	adds	r7, #8
 800d4a8:	46bd      	mov	sp, r7
 800d4aa:	bd80      	pop	{r7, pc}

0800d4ac <_ZN8touchgfx5ImageD1Ev>:
 * is handled by the Image Converter as part of compiling the project. Each image is
 * assigned a unique BITMAP identifier which.
 *
 * @see Bitmap
 */
class Image : public Widget
 800d4ac:	b580      	push	{r7, lr}
 800d4ae:	b082      	sub	sp, #8
 800d4b0:	af00      	add	r7, sp, #0
 800d4b2:	6078      	str	r0, [r7, #4]
 800d4b4:	4a05      	ldr	r2, [pc, #20]	; (800d4cc <_ZN8touchgfx5ImageD1Ev+0x20>)
 800d4b6:	687b      	ldr	r3, [r7, #4]
 800d4b8:	601a      	str	r2, [r3, #0]
 800d4ba:	687b      	ldr	r3, [r7, #4]
 800d4bc:	4618      	mov	r0, r3
 800d4be:	f7fc fe27 	bl	800a110 <_ZN8touchgfx6WidgetD1Ev>
 800d4c2:	687b      	ldr	r3, [r7, #4]
 800d4c4:	4618      	mov	r0, r3
 800d4c6:	3708      	adds	r7, #8
 800d4c8:	46bd      	mov	sp, r7
 800d4ca:	bd80      	pop	{r7, pc}
 800d4cc:	0802f894 	.word	0x0802f894

0800d4d0 <_ZN8touchgfx5ImageD0Ev>:
 800d4d0:	b580      	push	{r7, lr}
 800d4d2:	b082      	sub	sp, #8
 800d4d4:	af00      	add	r7, sp, #0
 800d4d6:	6078      	str	r0, [r7, #4]
 800d4d8:	6878      	ldr	r0, [r7, #4]
 800d4da:	f7ff ffe7 	bl	800d4ac <_ZN8touchgfx5ImageD1Ev>
 800d4de:	212c      	movs	r1, #44	; 0x2c
 800d4e0:	6878      	ldr	r0, [r7, #4]
 800d4e2:	f01d f93e 	bl	802a762 <_ZdlPvj>
 800d4e6:	687b      	ldr	r3, [r7, #4]
 800d4e8:	4618      	mov	r0, r3
 800d4ea:	3708      	adds	r7, #8
 800d4ec:	46bd      	mov	sp, r7
 800d4ee:	bd80      	pop	{r7, pc}

0800d4f0 <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 * to implement a progress indicator. For more specific implementations see classes that
 * inherit from AbstractProgressIndicator.
 *
 * @see BoxProgress, CircleProgress, ImageProgress, LineProgress, TextProgress
 */
class AbstractProgressIndicator : public Container
 800d4f0:	b580      	push	{r7, lr}
 800d4f2:	b082      	sub	sp, #8
 800d4f4:	af00      	add	r7, sp, #0
 800d4f6:	6078      	str	r0, [r7, #4]
 800d4f8:	4a0a      	ldr	r2, [pc, #40]	; (800d524 <_ZN8touchgfx25AbstractProgressIndicatorD1Ev+0x34>)
 800d4fa:	687b      	ldr	r3, [r7, #4]
 800d4fc:	601a      	str	r2, [r3, #0]
 800d4fe:	687b      	ldr	r3, [r7, #4]
 800d500:	3358      	adds	r3, #88	; 0x58
 800d502:	4618      	mov	r0, r3
 800d504:	f7fd fb3e 	bl	800ab84 <_ZN8touchgfx9ContainerD1Ev>
 800d508:	687b      	ldr	r3, [r7, #4]
 800d50a:	332c      	adds	r3, #44	; 0x2c
 800d50c:	4618      	mov	r0, r3
 800d50e:	f7ff ffcd 	bl	800d4ac <_ZN8touchgfx5ImageD1Ev>
 800d512:	687b      	ldr	r3, [r7, #4]
 800d514:	4618      	mov	r0, r3
 800d516:	f7fd fb35 	bl	800ab84 <_ZN8touchgfx9ContainerD1Ev>
 800d51a:	687b      	ldr	r3, [r7, #4]
 800d51c:	4618      	mov	r0, r3
 800d51e:	3708      	adds	r7, #8
 800d520:	46bd      	mov	sp, r7
 800d522:	bd80      	pop	{r7, pc}
 800d524:	0802ecc8 	.word	0x0802ecc8

0800d528 <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 800d528:	b580      	push	{r7, lr}
 800d52a:	b082      	sub	sp, #8
 800d52c:	af00      	add	r7, sp, #0
 800d52e:	6078      	str	r0, [r7, #4]
 800d530:	6878      	ldr	r0, [r7, #4]
 800d532:	f7ff ffdd 	bl	800d4f0 <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>
 800d536:	21b4      	movs	r1, #180	; 0xb4
 800d538:	6878      	ldr	r0, [r7, #4]
 800d53a:	f01d f912 	bl	802a762 <_ZdlPvj>
 800d53e:	687b      	ldr	r3, [r7, #4]
 800d540:	4618      	mov	r0, r3
 800d542:	3708      	adds	r7, #8
 800d544:	46bd      	mov	sp, r7
 800d546:	bd80      	pop	{r7, pc}

0800d548 <_ZN8touchgfx13TextureMapperD1Ev>:
 * @note The drawing of this widget is not trivial and typically has a significant performance
 *       penalty. The number of pixels drawn, the presence of global alpha or per pixel alpha
 *       inflicts the computation and should be considered.
 * @note This widget does not support 1 bit per pixel color depth.
 */
class TextureMapper : public Image
 800d548:	b580      	push	{r7, lr}
 800d54a:	b082      	sub	sp, #8
 800d54c:	af00      	add	r7, sp, #0
 800d54e:	6078      	str	r0, [r7, #4]
 800d550:	4a05      	ldr	r2, [pc, #20]	; (800d568 <_ZN8touchgfx13TextureMapperD1Ev+0x20>)
 800d552:	687b      	ldr	r3, [r7, #4]
 800d554:	601a      	str	r2, [r3, #0]
 800d556:	687b      	ldr	r3, [r7, #4]
 800d558:	4618      	mov	r0, r3
 800d55a:	f7ff ffa7 	bl	800d4ac <_ZN8touchgfx5ImageD1Ev>
 800d55e:	687b      	ldr	r3, [r7, #4]
 800d560:	4618      	mov	r0, r3
 800d562:	3708      	adds	r7, #8
 800d564:	46bd      	mov	sp, r7
 800d566:	bd80      	pop	{r7, pc}
 800d568:	0802f34c 	.word	0x0802f34c

0800d56c <_ZN8touchgfx13TextureMapperD0Ev>:
 800d56c:	b580      	push	{r7, lr}
 800d56e:	b082      	sub	sp, #8
 800d570:	af00      	add	r7, sp, #0
 800d572:	6078      	str	r0, [r7, #4]
 800d574:	6878      	ldr	r0, [r7, #4]
 800d576:	f7ff ffe7 	bl	800d548 <_ZN8touchgfx13TextureMapperD1Ev>
 800d57a:	2190      	movs	r1, #144	; 0x90
 800d57c:	6878      	ldr	r0, [r7, #4]
 800d57e:	f01d f8f0 	bl	802a762 <_ZdlPvj>
 800d582:	687b      	ldr	r3, [r7, #4]
 800d584:	4618      	mov	r0, r3
 800d586:	3708      	adds	r7, #8
 800d588:	46bd      	mov	sp, r7
 800d58a:	bd80      	pop	{r7, pc}

0800d58c <_ZN8touchgfx12CanvasWidgetD1Ev>:
 * Class for drawing complex polygons on the display using CanvasWidgetRenderer. The
 * CanvasWidget is used by passing it to a Canvas object, drawing the outline of the
 * object and then having CanvasWidget render the outline on the display using the
 * assigned painter.
 */
class CanvasWidget : public Widget
 800d58c:	b580      	push	{r7, lr}
 800d58e:	b082      	sub	sp, #8
 800d590:	af00      	add	r7, sp, #0
 800d592:	6078      	str	r0, [r7, #4]
 800d594:	4a05      	ldr	r2, [pc, #20]	; (800d5ac <_ZN8touchgfx12CanvasWidgetD1Ev+0x20>)
 800d596:	687b      	ldr	r3, [r7, #4]
 800d598:	601a      	str	r2, [r3, #0]
 800d59a:	687b      	ldr	r3, [r7, #4]
 800d59c:	4618      	mov	r0, r3
 800d59e:	f7fc fdb7 	bl	800a110 <_ZN8touchgfx6WidgetD1Ev>
 800d5a2:	687b      	ldr	r3, [r7, #4]
 800d5a4:	4618      	mov	r0, r3
 800d5a6:	3708      	adds	r7, #8
 800d5a8:	46bd      	mov	sp, r7
 800d5aa:	bd80      	pop	{r7, pc}
 800d5ac:	0802f264 	.word	0x0802f264

0800d5b0 <_ZN8touchgfx12CanvasWidgetD0Ev>:
 800d5b0:	b580      	push	{r7, lr}
 800d5b2:	b082      	sub	sp, #8
 800d5b4:	af00      	add	r7, sp, #0
 800d5b6:	6078      	str	r0, [r7, #4]
 800d5b8:	6878      	ldr	r0, [r7, #4]
 800d5ba:	f7ff ffe7 	bl	800d58c <_ZN8touchgfx12CanvasWidgetD1Ev>
 800d5be:	212c      	movs	r1, #44	; 0x2c
 800d5c0:	6878      	ldr	r0, [r7, #4]
 800d5c2:	f01d f8ce 	bl	802a762 <_ZdlPvj>
 800d5c6:	687b      	ldr	r3, [r7, #4]
 800d5c8:	4618      	mov	r0, r3
 800d5ca:	3708      	adds	r7, #8
 800d5cc:	46bd      	mov	sp, r7
 800d5ce:	bd80      	pop	{r7, pc}

0800d5d0 <_ZN8touchgfx6CircleD1Ev>:
 *            int x, y, r;
 *            circle.getCenter(&x, &y); // Will return (1, 1)
 *            circle.getRadius(&r); // Will return 0
 *       @endcode.
 */
class Circle : public CanvasWidget
 800d5d0:	b580      	push	{r7, lr}
 800d5d2:	b082      	sub	sp, #8
 800d5d4:	af00      	add	r7, sp, #0
 800d5d6:	6078      	str	r0, [r7, #4]
 800d5d8:	4a05      	ldr	r2, [pc, #20]	; (800d5f0 <_ZN8touchgfx6CircleD1Ev+0x20>)
 800d5da:	687b      	ldr	r3, [r7, #4]
 800d5dc:	601a      	str	r2, [r3, #0]
 800d5de:	687b      	ldr	r3, [r7, #4]
 800d5e0:	4618      	mov	r0, r3
 800d5e2:	f7ff ffd3 	bl	800d58c <_ZN8touchgfx12CanvasWidgetD1Ev>
 800d5e6:	687b      	ldr	r3, [r7, #4]
 800d5e8:	4618      	mov	r0, r3
 800d5ea:	3708      	adds	r7, #8
 800d5ec:	46bd      	mov	sp, r7
 800d5ee:	bd80      	pop	{r7, pc}
 800d5f0:	0802f1ec 	.word	0x0802f1ec

0800d5f4 <_ZN8touchgfx6CircleD0Ev>:
 800d5f4:	b580      	push	{r7, lr}
 800d5f6:	b082      	sub	sp, #8
 800d5f8:	af00      	add	r7, sp, #0
 800d5fa:	6078      	str	r0, [r7, #4]
 800d5fc:	6878      	ldr	r0, [r7, #4]
 800d5fe:	f7ff ffe7 	bl	800d5d0 <_ZN8touchgfx6CircleD1Ev>
 800d602:	2148      	movs	r1, #72	; 0x48
 800d604:	6878      	ldr	r0, [r7, #4]
 800d606:	f01d f8ac 	bl	802a762 <_ZdlPvj>
 800d60a:	687b      	ldr	r3, [r7, #4]
 800d60c:	4618      	mov	r0, r3
 800d60e:	3708      	adds	r7, #8
 800d610:	46bd      	mov	sp, r7
 800d612:	bd80      	pop	{r7, pc}

0800d614 <_ZN8touchgfx5GaugeD1Ev>:
 * Much like a progress indicator, the minimum and maximum value of the Gauge, as well as steps
 * can be set. For more information on this, consult the documentation on ProgressIndicators.
 *
 * A Gauge has a needle and optionally an arc that follows the needle.
 */
class Gauge : public AbstractProgressIndicator
 800d614:	b580      	push	{r7, lr}
 800d616:	b082      	sub	sp, #8
 800d618:	af00      	add	r7, sp, #0
 800d61a:	6078      	str	r0, [r7, #4]
 800d61c:	4a0b      	ldr	r2, [pc, #44]	; (800d64c <_ZN8touchgfx5GaugeD1Ev+0x38>)
 800d61e:	687b      	ldr	r3, [r7, #4]
 800d620:	601a      	str	r2, [r3, #0]
 800d622:	687b      	ldr	r3, [r7, #4]
 800d624:	f503 73ac 	add.w	r3, r3, #344	; 0x158
 800d628:	4618      	mov	r0, r3
 800d62a:	f7ff ffd1 	bl	800d5d0 <_ZN8touchgfx6CircleD1Ev>
 800d62e:	687b      	ldr	r3, [r7, #4]
 800d630:	33b4      	adds	r3, #180	; 0xb4
 800d632:	4618      	mov	r0, r3
 800d634:	f7ff ff88 	bl	800d548 <_ZN8touchgfx13TextureMapperD1Ev>
 800d638:	687b      	ldr	r3, [r7, #4]
 800d63a:	4618      	mov	r0, r3
 800d63c:	f7ff ff58 	bl	800d4f0 <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>
 800d640:	687b      	ldr	r3, [r7, #4]
 800d642:	4618      	mov	r0, r3
 800d644:	3708      	adds	r7, #8
 800d646:	46bd      	mov	sp, r7
 800d648:	bd80      	pop	{r7, pc}
 800d64a:	bf00      	nop
 800d64c:	0802f5c8 	.word	0x0802f5c8

0800d650 <_ZN8touchgfx5GaugeD0Ev>:
 800d650:	b580      	push	{r7, lr}
 800d652:	b082      	sub	sp, #8
 800d654:	af00      	add	r7, sp, #0
 800d656:	6078      	str	r0, [r7, #4]
 800d658:	6878      	ldr	r0, [r7, #4]
 800d65a:	f7ff ffdb 	bl	800d614 <_ZN8touchgfx5GaugeD1Ev>
 800d65e:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 800d662:	6878      	ldr	r0, [r7, #4]
 800d664:	f01d f87d 	bl	802a762 <_ZdlPvj>
 800d668:	687b      	ldr	r3, [r7, #4]
 800d66a:	4618      	mov	r0, r3
 800d66c:	3708      	adds	r7, #8
 800d66e:	46bd      	mov	sp, r7
 800d670:	bd80      	pop	{r7, pc}

0800d672 <_ZN8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800d672:	b580      	push	{r7, lr}
 800d674:	b082      	sub	sp, #8
 800d676:	af00      	add	r7, sp, #0
 800d678:	6078      	str	r0, [r7, #4]
 800d67a:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800d67c:	687b      	ldr	r3, [r7, #4]
 800d67e:	685b      	ldr	r3, [r3, #4]
 800d680:	687a      	ldr	r2, [r7, #4]
 800d682:	68d2      	ldr	r2, [r2, #12]
 800d684:	1052      	asrs	r2, r2, #1
 800d686:	1898      	adds	r0, r3, r2
 800d688:	687b      	ldr	r3, [r7, #4]
 800d68a:	68db      	ldr	r3, [r3, #12]
 800d68c:	f003 0301 	and.w	r3, r3, #1
 800d690:	2b00      	cmp	r3, #0
 800d692:	d102      	bne.n	800d69a <_ZN8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x28>
 800d694:	687b      	ldr	r3, [r7, #4]
 800d696:	689b      	ldr	r3, [r3, #8]
 800d698:	e00a      	b.n	800d6b0 <_ZN8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x3e>
 800d69a:	687b      	ldr	r3, [r7, #4]
 800d69c:	685b      	ldr	r3, [r3, #4]
 800d69e:	687a      	ldr	r2, [r7, #4]
 800d6a0:	68d2      	ldr	r2, [r2, #12]
 800d6a2:	1052      	asrs	r2, r2, #1
 800d6a4:	4413      	add	r3, r2
 800d6a6:	681b      	ldr	r3, [r3, #0]
 800d6a8:	687a      	ldr	r2, [r7, #4]
 800d6aa:	6892      	ldr	r2, [r2, #8]
 800d6ac:	4413      	add	r3, r2
 800d6ae:	681b      	ldr	r3, [r3, #0]
 800d6b0:	6839      	ldr	r1, [r7, #0]
 800d6b2:	4798      	blx	r3
    }
 800d6b4:	bf00      	nop
 800d6b6:	3708      	adds	r7, #8
 800d6b8:	46bd      	mov	sp, r7
 800d6ba:	bd80      	pop	{r7, pc}

0800d6bc <_ZNK8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 800d6bc:	b480      	push	{r7}
 800d6be:	b083      	sub	sp, #12
 800d6c0:	af00      	add	r7, sp, #0
 800d6c2:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800d6c4:	687b      	ldr	r3, [r7, #4]
 800d6c6:	685b      	ldr	r3, [r3, #4]
 800d6c8:	2b00      	cmp	r3, #0
 800d6ca:	d010      	beq.n	800d6ee <_ZNK8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800d6cc:	687b      	ldr	r3, [r7, #4]
 800d6ce:	689b      	ldr	r3, [r3, #8]
 800d6d0:	2b00      	cmp	r3, #0
 800d6d2:	d107      	bne.n	800d6e4 <_ZNK8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800d6d4:	687b      	ldr	r3, [r7, #4]
 800d6d6:	68db      	ldr	r3, [r3, #12]
 800d6d8:	f003 0301 	and.w	r3, r3, #1
 800d6dc:	2b00      	cmp	r3, #0
 800d6de:	d101      	bne.n	800d6e4 <_ZNK8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800d6e0:	2301      	movs	r3, #1
 800d6e2:	e000      	b.n	800d6e6 <_ZNK8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x2a>
 800d6e4:	2300      	movs	r3, #0
 800d6e6:	2b01      	cmp	r3, #1
 800d6e8:	d001      	beq.n	800d6ee <_ZNK8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800d6ea:	2301      	movs	r3, #1
 800d6ec:	e000      	b.n	800d6f0 <_ZNK8touchgfx8CallbackI16COScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x34>
 800d6ee:	2300      	movs	r3, #0
    }
 800d6f0:	4618      	mov	r0, r3
 800d6f2:	370c      	adds	r7, #12
 800d6f4:	46bd      	mov	sp, r7
 800d6f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d6fa:	4770      	bx	lr

0800d6fc <_ZN8touchgfx9colortypeC1Ev>:
    colortype()
 800d6fc:	b480      	push	{r7}
 800d6fe:	b083      	sub	sp, #12
 800d700:	af00      	add	r7, sp, #0
 800d702:	6078      	str	r0, [r7, #4]
        : color(0)
 800d704:	687b      	ldr	r3, [r7, #4]
 800d706:	2200      	movs	r2, #0
 800d708:	601a      	str	r2, [r3, #0]
    }
 800d70a:	687b      	ldr	r3, [r7, #4]
 800d70c:	4618      	mov	r0, r3
 800d70e:	370c      	adds	r7, #12
 800d710:	46bd      	mov	sp, r7
 800d712:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d716:	4770      	bx	lr

0800d718 <_ZNK8touchgfx10ClickEvent7getTypeEv>:
    /**
     * Gets the click type of this event.
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
 800d718:	b480      	push	{r7}
 800d71a:	b083      	sub	sp, #12
 800d71c:	af00      	add	r7, sp, #0
 800d71e:	6078      	str	r0, [r7, #4]
    {
        return clickEventType;
 800d720:	687b      	ldr	r3, [r7, #4]
 800d722:	791b      	ldrb	r3, [r3, #4]
    }
 800d724:	4618      	mov	r0, r3
 800d726:	370c      	adds	r7, #12
 800d728:	46bd      	mov	sp, r7
 800d72a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d72e:	4770      	bx	lr

0800d730 <_ZN8touchgfx8Drawable12setTouchableEb>:
    void setTouchable(bool touch)
 800d730:	b480      	push	{r7}
 800d732:	b083      	sub	sp, #12
 800d734:	af00      	add	r7, sp, #0
 800d736:	6078      	str	r0, [r7, #4]
 800d738:	460b      	mov	r3, r1
 800d73a:	70fb      	strb	r3, [r7, #3]
        touchable = touch;
 800d73c:	687b      	ldr	r3, [r7, #4]
 800d73e:	78fa      	ldrb	r2, [r7, #3]
 800d740:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
    }
 800d744:	bf00      	nop
 800d746:	370c      	adds	r7, #12
 800d748:	46bd      	mov	sp, r7
 800d74a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d74e:	4770      	bx	lr

0800d750 <_ZN8touchgfx9ContainerC1Ev>:
{
public:
    Container()
 800d750:	b580      	push	{r7, lr}
 800d752:	b082      	sub	sp, #8
 800d754:	af00      	add	r7, sp, #0
 800d756:	6078      	str	r0, [r7, #4]
        : Drawable(),
          firstChild(0)
 800d758:	687b      	ldr	r3, [r7, #4]
 800d75a:	4618      	mov	r0, r3
 800d75c:	f7fc fa98 	bl	8009c90 <_ZN8touchgfx8DrawableC1Ev>
 800d760:	4a05      	ldr	r2, [pc, #20]	; (800d778 <_ZN8touchgfx9ContainerC1Ev+0x28>)
 800d762:	687b      	ldr	r3, [r7, #4]
 800d764:	601a      	str	r2, [r3, #0]
 800d766:	687b      	ldr	r3, [r7, #4]
 800d768:	2200      	movs	r2, #0
 800d76a:	629a      	str	r2, [r3, #40]	; 0x28
    {
    }
 800d76c:	687b      	ldr	r3, [r7, #4]
 800d76e:	4618      	mov	r0, r3
 800d770:	3708      	adds	r7, #8
 800d772:	46bd      	mov	sp, r7
 800d774:	bd80      	pop	{r7, pc}
 800d776:	bf00      	nop
 800d778:	0802ef4c 	.word	0x0802ef4c

0800d77c <_ZN8touchgfx9Container13getFirstChildEv>:
     * @return Pointer to the first drawable added to this container. If nothing has been
     *         added return zero.
     *
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
 800d77c:	b480      	push	{r7}
 800d77e:	b083      	sub	sp, #12
 800d780:	af00      	add	r7, sp, #0
 800d782:	6078      	str	r0, [r7, #4]
    {
        return firstChild;
 800d784:	687b      	ldr	r3, [r7, #4]
 800d786:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    }
 800d788:	4618      	mov	r0, r3
 800d78a:	370c      	adds	r7, #12
 800d78c:	46bd      	mov	sp, r7
 800d78e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d792:	4770      	bx	lr

0800d794 <_ZN8touchgfx3Box8setAlphaEh>:
    }

    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
 800d794:	b480      	push	{r7}
 800d796:	b083      	sub	sp, #12
 800d798:	af00      	add	r7, sp, #0
 800d79a:	6078      	str	r0, [r7, #4]
 800d79c:	460b      	mov	r3, r1
 800d79e:	70fb      	strb	r3, [r7, #3]
    {
        alpha = newAlpha;
 800d7a0:	687b      	ldr	r3, [r7, #4]
 800d7a2:	78fa      	ldrb	r2, [r7, #3]
 800d7a4:	f883 2026 	strb.w	r2, [r3, #38]	; 0x26
    }
 800d7a8:	bf00      	nop
 800d7aa:	370c      	adds	r7, #12
 800d7ac:	46bd      	mov	sp, r7
 800d7ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d7b2:	4770      	bx	lr

0800d7b4 <_ZN8touchgfx23AbstractButtonContainerC1Ev>:
 * @see ClickButtonTrigger, RepeatButtonTrigger, ToggleButtonTrigger, TouchButtonTrigger
 */
class AbstractButtonContainer : public Container
{
public:
    AbstractButtonContainer()
 800d7b4:	b580      	push	{r7, lr}
 800d7b6:	b082      	sub	sp, #8
 800d7b8:	af00      	add	r7, sp, #0
 800d7ba:	6078      	str	r0, [r7, #4]
        : pressed(false), alpha(255), action(0)
 800d7bc:	687b      	ldr	r3, [r7, #4]
 800d7be:	4618      	mov	r0, r3
 800d7c0:	f7ff ffc6 	bl	800d750 <_ZN8touchgfx9ContainerC1Ev>
 800d7c4:	4a0b      	ldr	r2, [pc, #44]	; (800d7f4 <_ZN8touchgfx23AbstractButtonContainerC1Ev+0x40>)
 800d7c6:	687b      	ldr	r3, [r7, #4]
 800d7c8:	601a      	str	r2, [r3, #0]
 800d7ca:	687b      	ldr	r3, [r7, #4]
 800d7cc:	2200      	movs	r2, #0
 800d7ce:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 800d7d2:	687b      	ldr	r3, [r7, #4]
 800d7d4:	22ff      	movs	r2, #255	; 0xff
 800d7d6:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d
 800d7da:	687b      	ldr	r3, [r7, #4]
 800d7dc:	2200      	movs	r2, #0
 800d7de:	631a      	str	r2, [r3, #48]	; 0x30
    {
        setTouchable(true);
 800d7e0:	687b      	ldr	r3, [r7, #4]
 800d7e2:	2101      	movs	r1, #1
 800d7e4:	4618      	mov	r0, r3
 800d7e6:	f7ff ffa3 	bl	800d730 <_ZN8touchgfx8Drawable12setTouchableEb>
    }
 800d7ea:	687b      	ldr	r3, [r7, #4]
 800d7ec:	4618      	mov	r0, r3
 800d7ee:	3708      	adds	r7, #8
 800d7f0:	46bd      	mov	sp, r7
 800d7f2:	bd80      	pop	{r7, pc}
 800d7f4:	0802e3f0 	.word	0x0802e3f0

0800d7f8 <_ZN8touchgfx23AbstractButtonContainer10setPressedEb>:
     *
     * @param  isPressed True if is pressed, false if not.
     *
     * @see getPressed, handlePressedUpdated
     */
    void setPressed(bool isPressed)
 800d7f8:	b580      	push	{r7, lr}
 800d7fa:	b082      	sub	sp, #8
 800d7fc:	af00      	add	r7, sp, #0
 800d7fe:	6078      	str	r0, [r7, #4]
 800d800:	460b      	mov	r3, r1
 800d802:	70fb      	strb	r3, [r7, #3]
    {
        pressed = isPressed;
 800d804:	687b      	ldr	r3, [r7, #4]
 800d806:	78fa      	ldrb	r2, [r7, #3]
 800d808:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
        handlePressedUpdated();
 800d80c:	687b      	ldr	r3, [r7, #4]
 800d80e:	681b      	ldr	r3, [r3, #0]
 800d810:	338c      	adds	r3, #140	; 0x8c
 800d812:	681b      	ldr	r3, [r3, #0]
 800d814:	6878      	ldr	r0, [r7, #4]
 800d816:	4798      	blx	r3
    }
 800d818:	bf00      	nop
 800d81a:	3708      	adds	r7, #8
 800d81c:	46bd      	mov	sp, r7
 800d81e:	bd80      	pop	{r7, pc}

0800d820 <_ZN8touchgfx23AbstractButtonContainer10getPressedEv>:
     *
     * @return True if it succeeds, false if it fails.
     *
     * @see setPressed
     */
    bool getPressed()
 800d820:	b480      	push	{r7}
 800d822:	b083      	sub	sp, #12
 800d824:	af00      	add	r7, sp, #0
 800d826:	6078      	str	r0, [r7, #4]
    {
        return pressed;
 800d828:	687b      	ldr	r3, [r7, #4]
 800d82a:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
    }
 800d82e:	4618      	mov	r0, r3
 800d830:	370c      	adds	r7, #12
 800d832:	46bd      	mov	sp, r7
 800d834:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d838:	4770      	bx	lr

0800d83a <_ZNK8touchgfx23AbstractButtonContainer8getAlphaEv>:
        alpha = newAlpha;
        handleAlphaUpdated();
    }

    /** @copydoc Image::getAlpha() */
    uint8_t getAlpha() const
 800d83a:	b480      	push	{r7}
 800d83c:	b083      	sub	sp, #12
 800d83e:	af00      	add	r7, sp, #0
 800d840:	6078      	str	r0, [r7, #4]
    {
        return alpha;
 800d842:	687b      	ldr	r3, [r7, #4]
 800d844:	f893 302d 	ldrb.w	r3, [r3, #45]	; 0x2d
    }
 800d848:	4618      	mov	r0, r3
 800d84a:	370c      	adds	r7, #12
 800d84c:	46bd      	mov	sp, r7
 800d84e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d852:	4770      	bx	lr

0800d854 <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>:
     *
     * @param  callback The callback.
     *
     * @see executeAction
     */
    void setAction(GenericCallback<const AbstractButtonContainer&>& callback)
 800d854:	b480      	push	{r7}
 800d856:	b083      	sub	sp, #12
 800d858:	af00      	add	r7, sp, #0
 800d85a:	6078      	str	r0, [r7, #4]
 800d85c:	6039      	str	r1, [r7, #0]
    {
        action = &callback;
 800d85e:	687b      	ldr	r3, [r7, #4]
 800d860:	683a      	ldr	r2, [r7, #0]
 800d862:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800d864:	bf00      	nop
 800d866:	370c      	adds	r7, #12
 800d868:	46bd      	mov	sp, r7
 800d86a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d86e:	4770      	bx	lr

0800d870 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 800d870:	b580      	push	{r7, lr}
 800d872:	b082      	sub	sp, #8
 800d874:	af00      	add	r7, sp, #0
 800d876:	6078      	str	r0, [r7, #4]
    {
        if (action && action->isValid())
 800d878:	687b      	ldr	r3, [r7, #4]
 800d87a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d87c:	2b00      	cmp	r3, #0
 800d87e:	d00d      	beq.n	800d89c <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x2c>
 800d880:	687b      	ldr	r3, [r7, #4]
 800d882:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800d884:	687b      	ldr	r3, [r7, #4]
 800d886:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d888:	681b      	ldr	r3, [r3, #0]
 800d88a:	330c      	adds	r3, #12
 800d88c:	681b      	ldr	r3, [r3, #0]
 800d88e:	4610      	mov	r0, r2
 800d890:	4798      	blx	r3
 800d892:	4603      	mov	r3, r0
 800d894:	2b00      	cmp	r3, #0
 800d896:	d001      	beq.n	800d89c <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x2c>
 800d898:	2301      	movs	r3, #1
 800d89a:	e000      	b.n	800d89e <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x2e>
 800d89c:	2300      	movs	r3, #0
 800d89e:	2b00      	cmp	r3, #0
 800d8a0:	d009      	beq.n	800d8b6 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x46>
        {
            action->execute(*this);
 800d8a2:	687b      	ldr	r3, [r7, #4]
 800d8a4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800d8a6:	687b      	ldr	r3, [r7, #4]
 800d8a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d8aa:	681b      	ldr	r3, [r3, #0]
 800d8ac:	3308      	adds	r3, #8
 800d8ae:	681b      	ldr	r3, [r3, #0]
 800d8b0:	6879      	ldr	r1, [r7, #4]
 800d8b2:	4610      	mov	r0, r2
 800d8b4:	4798      	blx	r3
        }
    }
 800d8b6:	bf00      	nop
 800d8b8:	3708      	adds	r7, #8
 800d8ba:	46bd      	mov	sp, r7
 800d8bc:	bd80      	pop	{r7, pc}

0800d8be <_ZN8touchgfx23AbstractButtonContainer20handlePressedUpdatedEv>:
    uint8_t alpha; ///< The current alpha value. 255 denotes solid, 0 denotes completely invisible.

    GenericCallback<const AbstractButtonContainer&>* action; ///< The action to be executed

    /** Handles what should happen when the pressed state is updated. */
    virtual void handlePressedUpdated()
 800d8be:	b480      	push	{r7}
 800d8c0:	b083      	sub	sp, #12
 800d8c2:	af00      	add	r7, sp, #0
 800d8c4:	6078      	str	r0, [r7, #4]
    {
    }
 800d8c6:	bf00      	nop
 800d8c8:	370c      	adds	r7, #12
 800d8ca:	46bd      	mov	sp, r7
 800d8cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d8d0:	4770      	bx	lr

0800d8d2 <_ZN8touchgfx23AbstractButtonContainer18handleAlphaUpdatedEv>:

    /** Handles what should happen when the alpha is updated. */
    virtual void handleAlphaUpdated()
 800d8d2:	b480      	push	{r7}
 800d8d4:	b083      	sub	sp, #12
 800d8d6:	af00      	add	r7, sp, #0
 800d8d8:	6078      	str	r0, [r7, #4]
    {
    }
 800d8da:	bf00      	nop
 800d8dc:	370c      	adds	r7, #12
 800d8de:	46bd      	mov	sp, r7
 800d8e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d8e4:	4770      	bx	lr
	...

0800d8e8 <_ZN8touchgfx13BoxWithBorderC1Ev>:
 * BoxWithBorder will function just like a Box.
 */
class BoxWithBorder : public Box
{
public:
    BoxWithBorder()
 800d8e8:	b580      	push	{r7, lr}
 800d8ea:	b082      	sub	sp, #8
 800d8ec:	af00      	add	r7, sp, #0
 800d8ee:	6078      	str	r0, [r7, #4]
        : Box(), borderColor(0), borderSize(0)
 800d8f0:	687b      	ldr	r3, [r7, #4]
 800d8f2:	4618      	mov	r0, r3
 800d8f4:	f7fc fc2e 	bl	800a154 <_ZN8touchgfx3BoxC1Ev>
 800d8f8:	4a08      	ldr	r2, [pc, #32]	; (800d91c <_ZN8touchgfx13BoxWithBorderC1Ev+0x34>)
 800d8fa:	687b      	ldr	r3, [r7, #4]
 800d8fc:	601a      	str	r2, [r3, #0]
 800d8fe:	687b      	ldr	r3, [r7, #4]
 800d900:	332c      	adds	r3, #44	; 0x2c
 800d902:	2100      	movs	r1, #0
 800d904:	4618      	mov	r0, r3
 800d906:	f7fc f96d 	bl	8009be4 <_ZN8touchgfx9colortypeC1Em>
 800d90a:	687b      	ldr	r3, [r7, #4]
 800d90c:	2200      	movs	r2, #0
 800d90e:	861a      	strh	r2, [r3, #48]	; 0x30
    {
    }
 800d910:	687b      	ldr	r3, [r7, #4]
 800d912:	4618      	mov	r0, r3
 800d914:	3708      	adds	r7, #8
 800d916:	46bd      	mov	sp, r7
 800d918:	bd80      	pop	{r7, pc}
 800d91a:	bf00      	nop
 800d91c:	0802f7b4 	.word	0x0802f7b4

0800d920 <_ZN8touchgfx13BoxWithBorder14setBorderColorENS_9colortypeE>:
     *
     * @param  colorBorder The color of the border.
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
 800d920:	b480      	push	{r7}
 800d922:	b083      	sub	sp, #12
 800d924:	af00      	add	r7, sp, #0
 800d926:	6078      	str	r0, [r7, #4]
 800d928:	6039      	str	r1, [r7, #0]
    {
        borderColor = colorBorder;
 800d92a:	687b      	ldr	r3, [r7, #4]
 800d92c:	683a      	ldr	r2, [r7, #0]
 800d92e:	62da      	str	r2, [r3, #44]	; 0x2c
    }
 800d930:	bf00      	nop
 800d932:	370c      	adds	r7, #12
 800d934:	46bd      	mov	sp, r7
 800d936:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d93a:	4770      	bx	lr

0800d93c <_ZN8touchgfx13BoxWithBorder13setBorderSizeEt>:
     *
     * @param  size The width of the border.
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
 800d93c:	b480      	push	{r7}
 800d93e:	b083      	sub	sp, #12
 800d940:	af00      	add	r7, sp, #0
 800d942:	6078      	str	r0, [r7, #4]
 800d944:	460b      	mov	r3, r1
 800d946:	807b      	strh	r3, [r7, #2]
    {
        borderSize = size;
 800d948:	687b      	ldr	r3, [r7, #4]
 800d94a:	887a      	ldrh	r2, [r7, #2]
 800d94c:	861a      	strh	r2, [r3, #48]	; 0x30
    }
 800d94e:	bf00      	nop
 800d950:	370c      	adds	r7, #12
 800d952:	46bd      	mov	sp, r7
 800d954:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d958:	4770      	bx	lr

0800d95a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800d95a:	b580      	push	{r7, lr}
 800d95c:	b084      	sub	sp, #16
 800d95e:	af00      	add	r7, sp, #0
 800d960:	6078      	str	r0, [r7, #4]
 800d962:	6039      	str	r1, [r7, #0]
    {
        bool wasPressed = getPressed();
 800d964:	687b      	ldr	r3, [r7, #4]
 800d966:	4618      	mov	r0, r3
 800d968:	f7ff ff5a 	bl	800d820 <_ZN8touchgfx23AbstractButtonContainer10getPressedEv>
 800d96c:	4603      	mov	r3, r0
 800d96e:	73fb      	strb	r3, [r7, #15]
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 800d970:	6838      	ldr	r0, [r7, #0]
 800d972:	f7ff fed1 	bl	800d718 <_ZNK8touchgfx10ClickEvent7getTypeEv>
 800d976:	4603      	mov	r3, r0
 800d978:	2b00      	cmp	r3, #0
 800d97a:	bf0c      	ite	eq
 800d97c:	2301      	moveq	r3, #1
 800d97e:	2300      	movne	r3, #0
 800d980:	73bb      	strb	r3, [r7, #14]
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 800d982:	7bbb      	ldrb	r3, [r7, #14]
 800d984:	2b00      	cmp	r3, #0
 800d986:	d005      	beq.n	800d994 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3a>
 800d988:	7bfb      	ldrb	r3, [r7, #15]
 800d98a:	f083 0301 	eor.w	r3, r3, #1
 800d98e:	b2db      	uxtb	r3, r3
 800d990:	2b00      	cmp	r3, #0
 800d992:	d108      	bne.n	800d9a6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x4c>
 800d994:	7bbb      	ldrb	r3, [r7, #14]
 800d996:	f083 0301 	eor.w	r3, r3, #1
 800d99a:	b2db      	uxtb	r3, r3
 800d99c:	2b00      	cmp	r3, #0
 800d99e:	d00f      	beq.n	800d9c0 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x66>
 800d9a0:	7bfb      	ldrb	r3, [r7, #15]
 800d9a2:	2b00      	cmp	r3, #0
 800d9a4:	d00c      	beq.n	800d9c0 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x66>
        {
            setPressed(newPressedValue);
 800d9a6:	687b      	ldr	r3, [r7, #4]
 800d9a8:	7bba      	ldrb	r2, [r7, #14]
 800d9aa:	4611      	mov	r1, r2
 800d9ac:	4618      	mov	r0, r3
 800d9ae:	f7ff ff23 	bl	800d7f8 <_ZN8touchgfx23AbstractButtonContainer10setPressedEb>
            invalidate();
 800d9b2:	687a      	ldr	r2, [r7, #4]
 800d9b4:	687b      	ldr	r3, [r7, #4]
 800d9b6:	681b      	ldr	r3, [r3, #0]
 800d9b8:	3314      	adds	r3, #20
 800d9ba:	681b      	ldr	r3, [r3, #0]
 800d9bc:	4610      	mov	r0, r2
 800d9be:	4798      	blx	r3
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 800d9c0:	7bfb      	ldrb	r3, [r7, #15]
 800d9c2:	2b00      	cmp	r3, #0
 800d9c4:	d007      	beq.n	800d9d6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x7c>
 800d9c6:	6838      	ldr	r0, [r7, #0]
 800d9c8:	f7ff fea6 	bl	800d718 <_ZNK8touchgfx10ClickEvent7getTypeEv>
 800d9cc:	4603      	mov	r3, r0
 800d9ce:	2b01      	cmp	r3, #1
 800d9d0:	d101      	bne.n	800d9d6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x7c>
 800d9d2:	2301      	movs	r3, #1
 800d9d4:	e000      	b.n	800d9d8 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x7e>
 800d9d6:	2300      	movs	r3, #0
 800d9d8:	2b00      	cmp	r3, #0
 800d9da:	d006      	beq.n	800d9ea <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x90>
        {
            executeAction();
 800d9dc:	687a      	ldr	r2, [r7, #4]
 800d9de:	687b      	ldr	r3, [r7, #4]
 800d9e0:	681b      	ldr	r3, [r3, #0]
 800d9e2:	3388      	adds	r3, #136	; 0x88
 800d9e4:	681b      	ldr	r3, [r3, #0]
 800d9e6:	4610      	mov	r0, r2
 800d9e8:	4798      	blx	r3
        }
    }
 800d9ea:	bf00      	nop
 800d9ec:	3710      	adds	r7, #16
 800d9ee:	46bd      	mov	sp, r7
 800d9f0:	bd80      	pop	{r7, pc}
	...

0800d9f4 <_ZN8touchgfx23AbstractButtonContainerD1Ev>:
class AbstractButtonContainer : public Container
 800d9f4:	b580      	push	{r7, lr}
 800d9f6:	b082      	sub	sp, #8
 800d9f8:	af00      	add	r7, sp, #0
 800d9fa:	6078      	str	r0, [r7, #4]
 800d9fc:	4a05      	ldr	r2, [pc, #20]	; (800da14 <_ZN8touchgfx23AbstractButtonContainerD1Ev+0x20>)
 800d9fe:	687b      	ldr	r3, [r7, #4]
 800da00:	601a      	str	r2, [r3, #0]
 800da02:	687b      	ldr	r3, [r7, #4]
 800da04:	4618      	mov	r0, r3
 800da06:	f7fd f8bd 	bl	800ab84 <_ZN8touchgfx9ContainerD1Ev>
 800da0a:	687b      	ldr	r3, [r7, #4]
 800da0c:	4618      	mov	r0, r3
 800da0e:	3708      	adds	r7, #8
 800da10:	46bd      	mov	sp, r7
 800da12:	bd80      	pop	{r7, pc}
 800da14:	0802e3f0 	.word	0x0802e3f0

0800da18 <_ZN8touchgfx23AbstractButtonContainerD0Ev>:
 800da18:	b580      	push	{r7, lr}
 800da1a:	b082      	sub	sp, #8
 800da1c:	af00      	add	r7, sp, #0
 800da1e:	6078      	str	r0, [r7, #4]
 800da20:	6878      	ldr	r0, [r7, #4]
 800da22:	f7ff ffe7 	bl	800d9f4 <_ZN8touchgfx23AbstractButtonContainerD1Ev>
 800da26:	2134      	movs	r1, #52	; 0x34
 800da28:	6878      	ldr	r0, [r7, #4]
 800da2a:	f01c fe9a 	bl	802a762 <_ZdlPvj>
 800da2e:	687b      	ldr	r3, [r7, #4]
 800da30:	4618      	mov	r0, r3
 800da32:	3708      	adds	r7, #8
 800da34:	46bd      	mov	sp, r7
 800da36:	bd80      	pop	{r7, pc}

0800da38 <_ZN18MainScreenViewBase11applicationEv>:
    MainScreenViewBase();
    virtual ~MainScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
 800da38:	b580      	push	{r7, lr}
 800da3a:	b082      	sub	sp, #8
 800da3c:	af00      	add	r7, sp, #0
 800da3e:	6078      	str	r0, [r7, #4]
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800da40:	f00b fc32 	bl	80192a8 <_ZN8touchgfx11Application11getInstanceEv>
 800da44:	4603      	mov	r3, r0
    }
 800da46:	4618      	mov	r0, r3
 800da48:	3708      	adds	r7, #8
 800da4a:	46bd      	mov	sp, r7
 800da4c:	bd80      	pop	{r7, pc}
	...

0800da50 <_ZN8touchgfx4ViewI19MainScreenPresenterED1Ev>:
class View : public Screen
 800da50:	b580      	push	{r7, lr}
 800da52:	b082      	sub	sp, #8
 800da54:	af00      	add	r7, sp, #0
 800da56:	6078      	str	r0, [r7, #4]
 800da58:	4a05      	ldr	r2, [pc, #20]	; (800da70 <_ZN8touchgfx4ViewI19MainScreenPresenterED1Ev+0x20>)
 800da5a:	687b      	ldr	r3, [r7, #4]
 800da5c:	601a      	str	r2, [r3, #0]
 800da5e:	687b      	ldr	r3, [r7, #4]
 800da60:	4618      	mov	r0, r3
 800da62:	f7fc fab9 	bl	8009fd8 <_ZN8touchgfx6ScreenD1Ev>
 800da66:	687b      	ldr	r3, [r7, #4]
 800da68:	4618      	mov	r0, r3
 800da6a:	3708      	adds	r7, #8
 800da6c:	46bd      	mov	sp, r7
 800da6e:	bd80      	pop	{r7, pc}
 800da70:	0802e308 	.word	0x0802e308

0800da74 <_ZN8touchgfx4ViewI19MainScreenPresenterED0Ev>:
 800da74:	b580      	push	{r7, lr}
 800da76:	b082      	sub	sp, #8
 800da78:	af00      	add	r7, sp, #0
 800da7a:	6078      	str	r0, [r7, #4]
 800da7c:	6878      	ldr	r0, [r7, #4]
 800da7e:	f7ff ffe7 	bl	800da50 <_ZN8touchgfx4ViewI19MainScreenPresenterED1Ev>
 800da82:	2140      	movs	r1, #64	; 0x40
 800da84:	6878      	ldr	r0, [r7, #4]
 800da86:	f01c fe6c 	bl	802a762 <_ZdlPvj>
 800da8a:	687b      	ldr	r3, [r7, #4]
 800da8c:	4618      	mov	r0, r3
 800da8e:	3708      	adds	r7, #8
 800da90:	46bd      	mov	sp, r7
 800da92:	bd80      	pop	{r7, pc}

0800da94 <_ZN18MainScreenViewBaseC1Ev>:
/*********************************************************************************/
#include <gui_generated/mainscreen_screen/MainScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>

MainScreenViewBase::MainScreenViewBase() :
 800da94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800da98:	b0d8      	sub	sp, #352	; 0x160
 800da9a:	af02      	add	r7, sp, #8
 800da9c:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800daa0:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800daa4:	6018      	str	r0, [r3, #0]
    flexButtonCallback(this, &MainScreenViewBase::flexButtonCallbackHandler)
 800daa6:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800daaa:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800daae:	681b      	ldr	r3, [r3, #0]
 800dab0:	4618      	mov	r0, r3
 800dab2:	f001 f83b 	bl	800eb2c <_ZN8touchgfx4ViewI19MainScreenPresenterEC1Ev>
 800dab6:	4ae8      	ldr	r2, [pc, #928]	; (800de58 <_ZN18MainScreenViewBaseC1Ev+0x3c4>)
 800dab8:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dabc:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dac0:	681b      	ldr	r3, [r3, #0]
 800dac2:	601a      	str	r2, [r3, #0]
 800dac4:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dac8:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dacc:	681b      	ldr	r3, [r3, #0]
 800dace:	3340      	adds	r3, #64	; 0x40
 800dad0:	4618      	mov	r0, r3
 800dad2:	f7fc fb3f 	bl	800a154 <_ZN8touchgfx3BoxC1Ev>
 800dad6:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dada:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dade:	681b      	ldr	r3, [r3, #0]
 800dae0:	336c      	adds	r3, #108	; 0x6c
 800dae2:	4618      	mov	r0, r3
 800dae4:	f7fc fb7e 	bl	800a1e4 <_ZN8touchgfx8TextAreaC1Ev>
 800dae8:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800daec:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800daf0:	681b      	ldr	r3, [r3, #0]
 800daf2:	33b4      	adds	r3, #180	; 0xb4
 800daf4:	4618      	mov	r0, r3
 800daf6:	f001 f885 	bl	800ec04 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800dafa:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dafe:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800db02:	681b      	ldr	r3, [r3, #0]
 800db04:	f503 7396 	add.w	r3, r3, #300	; 0x12c
 800db08:	4618      	mov	r0, r3
 800db0a:	f001 f87b 	bl	800ec04 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800db0e:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800db12:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800db16:	681b      	ldr	r3, [r3, #0]
 800db18:	f503 73d2 	add.w	r3, r3, #420	; 0x1a4
 800db1c:	4618      	mov	r0, r3
 800db1e:	f001 f871 	bl	800ec04 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800db22:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800db26:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800db2a:	681b      	ldr	r3, [r3, #0]
 800db2c:	f503 7307 	add.w	r3, r3, #540	; 0x21c
 800db30:	4618      	mov	r0, r3
 800db32:	f001 f867 	bl	800ec04 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800db36:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800db3a:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800db3e:	681b      	ldr	r3, [r3, #0]
 800db40:	f503 7325 	add.w	r3, r3, #660	; 0x294
 800db44:	4618      	mov	r0, r3
 800db46:	f7fc fb4d 	bl	800a1e4 <_ZN8touchgfx8TextAreaC1Ev>
 800db4a:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800db4e:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800db52:	681b      	ldr	r3, [r3, #0]
 800db54:	f503 7337 	add.w	r3, r3, #732	; 0x2dc
 800db58:	4618      	mov	r0, r3
 800db5a:	f7fc fb43 	bl	800a1e4 <_ZN8touchgfx8TextAreaC1Ev>
 800db5e:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800db62:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800db66:	681b      	ldr	r3, [r3, #0]
 800db68:	f503 7349 	add.w	r3, r3, #804	; 0x324
 800db6c:	4618      	mov	r0, r3
 800db6e:	f7fc fb39 	bl	800a1e4 <_ZN8touchgfx8TextAreaC1Ev>
 800db72:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800db76:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800db7a:	681b      	ldr	r3, [r3, #0]
 800db7c:	f503 735b 	add.w	r3, r3, #876	; 0x36c
 800db80:	4618      	mov	r0, r3
 800db82:	f7fc fb2f 	bl	800a1e4 <_ZN8touchgfx8TextAreaC1Ev>
 800db86:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800db8a:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800db8e:	681b      	ldr	r3, [r3, #0]
 800db90:	f503 736d 	add.w	r3, r3, #948	; 0x3b4
 800db94:	4618      	mov	r0, r3
 800db96:	f7fc fb25 	bl	800a1e4 <_ZN8touchgfx8TextAreaC1Ev>
 800db9a:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800db9e:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dba2:	681b      	ldr	r3, [r3, #0]
 800dba4:	f503 707f 	add.w	r0, r3, #1020	; 0x3fc
 800dba8:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dbac:	f5a3 7394 	sub.w	r3, r3, #296	; 0x128
 800dbb0:	4aaa      	ldr	r2, [pc, #680]	; (800de5c <_ZN18MainScreenViewBaseC1Ev+0x3c8>)
 800dbb2:	601a      	str	r2, [r3, #0]
 800dbb4:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dbb8:	f5a3 7394 	sub.w	r3, r3, #296	; 0x128
 800dbbc:	2200      	movs	r2, #0
 800dbbe:	605a      	str	r2, [r3, #4]
 800dbc0:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dbc4:	f5a3 7394 	sub.w	r3, r3, #296	; 0x128
 800dbc8:	f507 72ac 	add.w	r2, r7, #344	; 0x158
 800dbcc:	f5a2 71a2 	sub.w	r1, r2, #324	; 0x144
 800dbd0:	cb0c      	ldmia	r3, {r2, r3}
 800dbd2:	6809      	ldr	r1, [r1, #0]
 800dbd4:	f001 f866 	bl	800eca4 <_ZN8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E>
{
    __background.setPosition(0, 0, 320, 240);
 800dbd8:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dbdc:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dbe0:	681b      	ldr	r3, [r3, #0]
 800dbe2:	f103 0040 	add.w	r0, r3, #64	; 0x40
 800dbe6:	23f0      	movs	r3, #240	; 0xf0
 800dbe8:	9300      	str	r3, [sp, #0]
 800dbea:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800dbee:	2200      	movs	r2, #0
 800dbf0:	2100      	movs	r1, #0
 800dbf2:	f7fc f8bb 	bl	8009d6c <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800dbf6:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dbfa:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dbfe:	681b      	ldr	r3, [r3, #0]
 800dc00:	f103 0440 	add.w	r4, r3, #64	; 0x40
 800dc04:	2300      	movs	r3, #0
 800dc06:	f887 30c8 	strb.w	r3, [r7, #200]	; 0xc8
 800dc0a:	2300      	movs	r3, #0
 800dc0c:	f887 30c7 	strb.w	r3, [r7, #199]	; 0xc7
 800dc10:	2300      	movs	r3, #0
 800dc12:	f887 30c6 	strb.w	r3, [r7, #198]	; 0xc6
 800dc16:	f897 30c8 	ldrb.w	r3, [r7, #200]	; 0xc8
 800dc1a:	041b      	lsls	r3, r3, #16
 800dc1c:	461a      	mov	r2, r3
 800dc1e:	f897 30c7 	ldrb.w	r3, [r7, #199]	; 0xc7
 800dc22:	021b      	lsls	r3, r3, #8
 800dc24:	431a      	orrs	r2, r3
 800dc26:	f897 30c6 	ldrb.w	r3, [r7, #198]	; 0xc6
 800dc2a:	4313      	orrs	r3, r2
 800dc2c:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800dc30:	f107 03c0 	add.w	r3, r7, #192	; 0xc0
 800dc34:	4611      	mov	r1, r2
 800dc36:	4618      	mov	r0, r3
 800dc38:	f7fb ffd4 	bl	8009be4 <_ZN8touchgfx9colortypeC1Em>
 800dc3c:	f8d7 30c0 	ldr.w	r3, [r7, #192]	; 0xc0
 800dc40:	4619      	mov	r1, r3
 800dc42:	4620      	mov	r0, r4
 800dc44:	f7fc faaa 	bl	800a19c <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800dc48:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dc4c:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dc50:	681a      	ldr	r2, [r3, #0]
 800dc52:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dc56:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dc5a:	681b      	ldr	r3, [r3, #0]
 800dc5c:	3340      	adds	r3, #64	; 0x40
 800dc5e:	4619      	mov	r1, r3
 800dc60:	4610      	mov	r0, r2
 800dc62:	f7fc fa11 	bl	800a088 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    CarSystem_text_1.setXY(44, 0);
 800dc66:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dc6a:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dc6e:	681b      	ldr	r3, [r3, #0]
 800dc70:	336c      	adds	r3, #108	; 0x6c
 800dc72:	2200      	movs	r2, #0
 800dc74:	212c      	movs	r1, #44	; 0x2c
 800dc76:	4618      	mov	r0, r3
 800dc78:	f7fc f8b7 	bl	8009dea <_ZN8touchgfx8Drawable5setXYEss>
    CarSystem_text_1.setColor(touchgfx::Color::getColorFromRGB(242, 174, 174));
 800dc7c:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dc80:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dc84:	681b      	ldr	r3, [r3, #0]
 800dc86:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 800dc8a:	23f2      	movs	r3, #242	; 0xf2
 800dc8c:	f887 30cb 	strb.w	r3, [r7, #203]	; 0xcb
 800dc90:	23ae      	movs	r3, #174	; 0xae
 800dc92:	f887 30ca 	strb.w	r3, [r7, #202]	; 0xca
 800dc96:	23ae      	movs	r3, #174	; 0xae
 800dc98:	f887 30c9 	strb.w	r3, [r7, #201]	; 0xc9
 800dc9c:	f897 30cb 	ldrb.w	r3, [r7, #203]	; 0xcb
 800dca0:	041b      	lsls	r3, r3, #16
 800dca2:	461a      	mov	r2, r3
 800dca4:	f897 30ca 	ldrb.w	r3, [r7, #202]	; 0xca
 800dca8:	021b      	lsls	r3, r3, #8
 800dcaa:	431a      	orrs	r2, r3
 800dcac:	f897 30c9 	ldrb.w	r3, [r7, #201]	; 0xc9
 800dcb0:	4313      	orrs	r3, r2
 800dcb2:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800dcb6:	f107 03bc 	add.w	r3, r7, #188	; 0xbc
 800dcba:	4611      	mov	r1, r2
 800dcbc:	4618      	mov	r0, r3
 800dcbe:	f7fb ff91 	bl	8009be4 <_ZN8touchgfx9colortypeC1Em>
 800dcc2:	f8d7 30bc 	ldr.w	r3, [r7, #188]	; 0xbc
 800dcc6:	461a      	mov	r2, r3
 800dcc8:	f8c7 40cc 	str.w	r4, [r7, #204]	; 0xcc
 800dccc:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dcd0:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 800dcd4:	601a      	str	r2, [r3, #0]
        color = newColor;
 800dcd6:	f8d7 30cc 	ldr.w	r3, [r7, #204]	; 0xcc
 800dcda:	f507 72ac 	add.w	r2, r7, #344	; 0x158
 800dcde:	f5a2 7296 	sub.w	r2, r2, #300	; 0x12c
 800dce2:	6812      	ldr	r2, [r2, #0]
 800dce4:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800dce6:	bf00      	nop
    CarSystem_text_1.setLinespacing(0);
 800dce8:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dcec:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dcf0:	681b      	ldr	r3, [r3, #0]
 800dcf2:	336c      	adds	r3, #108	; 0x6c
 800dcf4:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800dcf8:	2300      	movs	r3, #0
 800dcfa:	f8a7 30d2 	strh.w	r3, [r7, #210]	; 0xd2
        linespace = space;
 800dcfe:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800dd02:	f8b7 20d2 	ldrh.w	r2, [r7, #210]	; 0xd2
 800dd06:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800dd08:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800dd0c:	681b      	ldr	r3, [r3, #0]
 800dd0e:	3384      	adds	r3, #132	; 0x84
 800dd10:	681b      	ldr	r3, [r3, #0]
 800dd12:	f8d7 40d4 	ldr.w	r4, [r7, #212]	; 0xd4
 800dd16:	463a      	mov	r2, r7
 800dd18:	f8d7 10d4 	ldr.w	r1, [r7, #212]	; 0xd4
 800dd1c:	4610      	mov	r0, r2
 800dd1e:	4798      	blx	r3
 800dd20:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dd24:	f5a3 72ac 	sub.w	r2, r3, #344	; 0x158
 800dd28:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800dd2c:	ca07      	ldmia	r2, {r0, r1, r2}
 800dd2e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800dd32:	bf00      	nop
    CarSystem_text_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HO17));
 800dd34:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dd38:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dd3c:	681b      	ldr	r3, [r3, #0]
 800dd3e:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 800dd42:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800dd46:	2109      	movs	r1, #9
 800dd48:	4618      	mov	r0, r3
 800dd4a:	f7fc fa35 	bl	800a1b8 <_ZN8touchgfx9TypedTextC1Et>
 800dd4e:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800dd52:	4619      	mov	r1, r3
 800dd54:	4620      	mov	r0, r4
 800dd56:	f008 fa77 	bl	8016248 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800dd5a:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800dd5e:	4618      	mov	r0, r3
 800dd60:	f7fb fd58 	bl	8009814 <_ZN8touchgfx9TypedTextD1Ev>
    add(CarSystem_text_1);
 800dd64:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dd68:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dd6c:	681a      	ldr	r2, [r3, #0]
 800dd6e:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dd72:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dd76:	681b      	ldr	r3, [r3, #0]
 800dd78:	336c      	adds	r3, #108	; 0x6c
 800dd7a:	4619      	mov	r1, r3
 800dd7c:	4610      	mov	r0, r2
 800dd7e:	f7fc f983 	bl	800a088 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    Clock_button.setBoxWithBorderPosition(0, 0, 160, 50);
 800dd82:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dd86:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dd8a:	681b      	ldr	r3, [r3, #0]
 800dd8c:	f103 00b4 	add.w	r0, r3, #180	; 0xb4
 800dd90:	2332      	movs	r3, #50	; 0x32
 800dd92:	9300      	str	r3, [sp, #0]
 800dd94:	23a0      	movs	r3, #160	; 0xa0
 800dd96:	2200      	movs	r2, #0
 800dd98:	2100      	movs	r1, #0
 800dd9a:	f000 ffa3 	bl	800ece4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>
    Clock_button.setBorderSize(5);
 800dd9e:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dda2:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dda6:	681b      	ldr	r3, [r3, #0]
 800dda8:	33b4      	adds	r3, #180	; 0xb4
 800ddaa:	2105      	movs	r1, #5
 800ddac:	4618      	mov	r0, r3
 800ddae:	f000 ffb9 	bl	800ed24 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>
    Clock_button.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800ddb2:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800ddb6:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800ddba:	681b      	ldr	r3, [r3, #0]
 800ddbc:	f103 04b4 	add.w	r4, r3, #180	; 0xb4
 800ddc0:	2300      	movs	r3, #0
 800ddc2:	f887 30db 	strb.w	r3, [r7, #219]	; 0xdb
 800ddc6:	2366      	movs	r3, #102	; 0x66
 800ddc8:	f887 30da 	strb.w	r3, [r7, #218]	; 0xda
 800ddcc:	2399      	movs	r3, #153	; 0x99
 800ddce:	f887 30d9 	strb.w	r3, [r7, #217]	; 0xd9
 800ddd2:	f897 30db 	ldrb.w	r3, [r7, #219]	; 0xdb
 800ddd6:	041b      	lsls	r3, r3, #16
 800ddd8:	461a      	mov	r2, r3
 800ddda:	f897 30da 	ldrb.w	r3, [r7, #218]	; 0xda
 800ddde:	021b      	lsls	r3, r3, #8
 800dde0:	431a      	orrs	r2, r3
 800dde2:	f897 30d9 	ldrb.w	r3, [r7, #217]	; 0xd9
 800dde6:	4313      	orrs	r3, r2
 800dde8:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800ddec:	f107 03b8 	add.w	r3, r7, #184	; 0xb8
 800ddf0:	4611      	mov	r1, r2
 800ddf2:	4618      	mov	r0, r3
 800ddf4:	f7fb fef6 	bl	8009be4 <_ZN8touchgfx9colortypeC1Em>
 800ddf8:	f8d7 30b8 	ldr.w	r3, [r7, #184]	; 0xb8
 800ddfc:	461d      	mov	r5, r3
 800ddfe:	2300      	movs	r3, #0
 800de00:	f887 30de 	strb.w	r3, [r7, #222]	; 0xde
 800de04:	2399      	movs	r3, #153	; 0x99
 800de06:	f887 30dd 	strb.w	r3, [r7, #221]	; 0xdd
 800de0a:	23cc      	movs	r3, #204	; 0xcc
 800de0c:	f887 30dc 	strb.w	r3, [r7, #220]	; 0xdc
 800de10:	f897 30de 	ldrb.w	r3, [r7, #222]	; 0xde
 800de14:	041b      	lsls	r3, r3, #16
 800de16:	461a      	mov	r2, r3
 800de18:	f897 30dd 	ldrb.w	r3, [r7, #221]	; 0xdd
 800de1c:	021b      	lsls	r3, r3, #8
 800de1e:	431a      	orrs	r2, r3
 800de20:	f897 30dc 	ldrb.w	r3, [r7, #220]	; 0xdc
 800de24:	4313      	orrs	r3, r2
 800de26:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800de2a:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 800de2e:	4611      	mov	r1, r2
 800de30:	4618      	mov	r0, r3
 800de32:	f7fb fed7 	bl	8009be4 <_ZN8touchgfx9colortypeC1Em>
 800de36:	f8d7 30b4 	ldr.w	r3, [r7, #180]	; 0xb4
 800de3a:	461e      	mov	r6, r3
 800de3c:	2300      	movs	r3, #0
 800de3e:	f887 30e1 	strb.w	r3, [r7, #225]	; 0xe1
 800de42:	2333      	movs	r3, #51	; 0x33
 800de44:	f887 30e0 	strb.w	r3, [r7, #224]	; 0xe0
 800de48:	2366      	movs	r3, #102	; 0x66
 800de4a:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 800de4e:	f897 30e1 	ldrb.w	r3, [r7, #225]	; 0xe1
 800de52:	041b      	lsls	r3, r3, #16
 800de54:	461a      	mov	r2, r3
 800de56:	e003      	b.n	800de60 <_ZN18MainScreenViewBaseC1Ev+0x3cc>
 800de58:	0802e220 	.word	0x0802e220
 800de5c:	0800eab3 	.word	0x0800eab3
 800de60:	f897 30e0 	ldrb.w	r3, [r7, #224]	; 0xe0
 800de64:	021b      	lsls	r3, r3, #8
 800de66:	431a      	orrs	r2, r3
 800de68:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
 800de6c:	4313      	orrs	r3, r2
 800de6e:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800de72:	f107 03b0 	add.w	r3, r7, #176	; 0xb0
 800de76:	4611      	mov	r1, r2
 800de78:	4618      	mov	r0, r3
 800de7a:	f7fb feb3 	bl	8009be4 <_ZN8touchgfx9colortypeC1Em>
 800de7e:	f8d7 30b0 	ldr.w	r3, [r7, #176]	; 0xb0
 800de82:	4698      	mov	r8, r3
 800de84:	2333      	movs	r3, #51	; 0x33
 800de86:	f887 30e4 	strb.w	r3, [r7, #228]	; 0xe4
 800de8a:	2366      	movs	r3, #102	; 0x66
 800de8c:	f887 30e3 	strb.w	r3, [r7, #227]	; 0xe3
 800de90:	2399      	movs	r3, #153	; 0x99
 800de92:	f887 30e2 	strb.w	r3, [r7, #226]	; 0xe2
 800de96:	f897 30e4 	ldrb.w	r3, [r7, #228]	; 0xe4
 800de9a:	041b      	lsls	r3, r3, #16
 800de9c:	461a      	mov	r2, r3
 800de9e:	f897 30e3 	ldrb.w	r3, [r7, #227]	; 0xe3
 800dea2:	021b      	lsls	r3, r3, #8
 800dea4:	431a      	orrs	r2, r3
 800dea6:	f897 30e2 	ldrb.w	r3, [r7, #226]	; 0xe2
 800deaa:	4313      	orrs	r3, r2
 800deac:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800deb0:	f107 03ac 	add.w	r3, r7, #172	; 0xac
 800deb4:	4611      	mov	r1, r2
 800deb6:	4618      	mov	r0, r3
 800deb8:	f7fb fe94 	bl	8009be4 <_ZN8touchgfx9colortypeC1Em>
 800debc:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 800dec0:	9300      	str	r3, [sp, #0]
 800dec2:	4643      	mov	r3, r8
 800dec4:	4632      	mov	r2, r6
 800dec6:	4629      	mov	r1, r5
 800dec8:	4620      	mov	r0, r4
 800deca:	f000 ff3d 	bl	800ed48 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    Clock_button.setAction(flexButtonCallback);
 800dece:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800ded2:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800ded6:	681b      	ldr	r3, [r3, #0]
 800ded8:	f103 02b4 	add.w	r2, r3, #180	; 0xb4
 800dedc:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800dee0:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800dee4:	681b      	ldr	r3, [r3, #0]
 800dee6:	f503 737f 	add.w	r3, r3, #1020	; 0x3fc
 800deea:	4619      	mov	r1, r3
 800deec:	4610      	mov	r0, r2
 800deee:	f7ff fcb1 	bl	800d854 <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>
    Clock_button.setPosition(0, 70, 160, 50);
 800def2:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800def6:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800defa:	681b      	ldr	r3, [r3, #0]
 800defc:	f103 00b4 	add.w	r0, r3, #180	; 0xb4
 800df00:	2332      	movs	r3, #50	; 0x32
 800df02:	9300      	str	r3, [sp, #0]
 800df04:	23a0      	movs	r3, #160	; 0xa0
 800df06:	2246      	movs	r2, #70	; 0x46
 800df08:	2100      	movs	r1, #0
 800df0a:	f7fb ff2f 	bl	8009d6c <_ZN8touchgfx8Drawable11setPositionEssss>
    add(Clock_button);
 800df0e:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800df12:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800df16:	681a      	ldr	r2, [r3, #0]
 800df18:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800df1c:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800df20:	681b      	ldr	r3, [r3, #0]
 800df22:	33b4      	adds	r3, #180	; 0xb4
 800df24:	4619      	mov	r1, r3
 800df26:	4610      	mov	r0, r2
 800df28:	f7fc f8ae 	bl	800a088 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    Pressure_button.setBoxWithBorderPosition(0, 0, 160, 50);
 800df2c:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800df30:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800df34:	681b      	ldr	r3, [r3, #0]
 800df36:	f503 7096 	add.w	r0, r3, #300	; 0x12c
 800df3a:	2332      	movs	r3, #50	; 0x32
 800df3c:	9300      	str	r3, [sp, #0]
 800df3e:	23a0      	movs	r3, #160	; 0xa0
 800df40:	2200      	movs	r2, #0
 800df42:	2100      	movs	r1, #0
 800df44:	f000 fece 	bl	800ece4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>
    Pressure_button.setBorderSize(5);
 800df48:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800df4c:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800df50:	681b      	ldr	r3, [r3, #0]
 800df52:	f503 7396 	add.w	r3, r3, #300	; 0x12c
 800df56:	2105      	movs	r1, #5
 800df58:	4618      	mov	r0, r3
 800df5a:	f000 fee3 	bl	800ed24 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>
    Pressure_button.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800df5e:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800df62:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800df66:	681b      	ldr	r3, [r3, #0]
 800df68:	f503 7496 	add.w	r4, r3, #300	; 0x12c
 800df6c:	2300      	movs	r3, #0
 800df6e:	f887 30e7 	strb.w	r3, [r7, #231]	; 0xe7
 800df72:	2366      	movs	r3, #102	; 0x66
 800df74:	f887 30e6 	strb.w	r3, [r7, #230]	; 0xe6
 800df78:	2399      	movs	r3, #153	; 0x99
 800df7a:	f887 30e5 	strb.w	r3, [r7, #229]	; 0xe5
 800df7e:	f897 30e7 	ldrb.w	r3, [r7, #231]	; 0xe7
 800df82:	041b      	lsls	r3, r3, #16
 800df84:	461a      	mov	r2, r3
 800df86:	f897 30e6 	ldrb.w	r3, [r7, #230]	; 0xe6
 800df8a:	021b      	lsls	r3, r3, #8
 800df8c:	431a      	orrs	r2, r3
 800df8e:	f897 30e5 	ldrb.w	r3, [r7, #229]	; 0xe5
 800df92:	4313      	orrs	r3, r2
 800df94:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800df98:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 800df9c:	4611      	mov	r1, r2
 800df9e:	4618      	mov	r0, r3
 800dfa0:	f7fb fe20 	bl	8009be4 <_ZN8touchgfx9colortypeC1Em>
 800dfa4:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 800dfa8:	461d      	mov	r5, r3
 800dfaa:	2300      	movs	r3, #0
 800dfac:	f887 30ea 	strb.w	r3, [r7, #234]	; 0xea
 800dfb0:	2399      	movs	r3, #153	; 0x99
 800dfb2:	f887 30e9 	strb.w	r3, [r7, #233]	; 0xe9
 800dfb6:	23cc      	movs	r3, #204	; 0xcc
 800dfb8:	f887 30e8 	strb.w	r3, [r7, #232]	; 0xe8
 800dfbc:	f897 30ea 	ldrb.w	r3, [r7, #234]	; 0xea
 800dfc0:	041b      	lsls	r3, r3, #16
 800dfc2:	461a      	mov	r2, r3
 800dfc4:	f897 30e9 	ldrb.w	r3, [r7, #233]	; 0xe9
 800dfc8:	021b      	lsls	r3, r3, #8
 800dfca:	431a      	orrs	r2, r3
 800dfcc:	f897 30e8 	ldrb.w	r3, [r7, #232]	; 0xe8
 800dfd0:	4313      	orrs	r3, r2
 800dfd2:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800dfd6:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
 800dfda:	4611      	mov	r1, r2
 800dfdc:	4618      	mov	r0, r3
 800dfde:	f7fb fe01 	bl	8009be4 <_ZN8touchgfx9colortypeC1Em>
 800dfe2:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 800dfe6:	461e      	mov	r6, r3
 800dfe8:	2300      	movs	r3, #0
 800dfea:	f887 30ed 	strb.w	r3, [r7, #237]	; 0xed
 800dfee:	2333      	movs	r3, #51	; 0x33
 800dff0:	f887 30ec 	strb.w	r3, [r7, #236]	; 0xec
 800dff4:	2366      	movs	r3, #102	; 0x66
 800dff6:	f887 30eb 	strb.w	r3, [r7, #235]	; 0xeb
 800dffa:	f897 30ed 	ldrb.w	r3, [r7, #237]	; 0xed
 800dffe:	041b      	lsls	r3, r3, #16
 800e000:	461a      	mov	r2, r3
 800e002:	f897 30ec 	ldrb.w	r3, [r7, #236]	; 0xec
 800e006:	021b      	lsls	r3, r3, #8
 800e008:	431a      	orrs	r2, r3
 800e00a:	f897 30eb 	ldrb.w	r3, [r7, #235]	; 0xeb
 800e00e:	4313      	orrs	r3, r2
 800e010:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e014:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 800e018:	4611      	mov	r1, r2
 800e01a:	4618      	mov	r0, r3
 800e01c:	f7fb fde2 	bl	8009be4 <_ZN8touchgfx9colortypeC1Em>
 800e020:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 800e024:	4698      	mov	r8, r3
 800e026:	2333      	movs	r3, #51	; 0x33
 800e028:	f887 30f0 	strb.w	r3, [r7, #240]	; 0xf0
 800e02c:	2366      	movs	r3, #102	; 0x66
 800e02e:	f887 30ef 	strb.w	r3, [r7, #239]	; 0xef
 800e032:	2399      	movs	r3, #153	; 0x99
 800e034:	f887 30ee 	strb.w	r3, [r7, #238]	; 0xee
 800e038:	f897 30f0 	ldrb.w	r3, [r7, #240]	; 0xf0
 800e03c:	041b      	lsls	r3, r3, #16
 800e03e:	461a      	mov	r2, r3
 800e040:	f897 30ef 	ldrb.w	r3, [r7, #239]	; 0xef
 800e044:	021b      	lsls	r3, r3, #8
 800e046:	431a      	orrs	r2, r3
 800e048:	f897 30ee 	ldrb.w	r3, [r7, #238]	; 0xee
 800e04c:	4313      	orrs	r3, r2
 800e04e:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e052:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 800e056:	4611      	mov	r1, r2
 800e058:	4618      	mov	r0, r3
 800e05a:	f7fb fdc3 	bl	8009be4 <_ZN8touchgfx9colortypeC1Em>
 800e05e:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 800e062:	9300      	str	r3, [sp, #0]
 800e064:	4643      	mov	r3, r8
 800e066:	4632      	mov	r2, r6
 800e068:	4629      	mov	r1, r5
 800e06a:	4620      	mov	r0, r4
 800e06c:	f000 fe6c 	bl	800ed48 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    Pressure_button.setAction(flexButtonCallback);
 800e070:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e074:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e078:	681b      	ldr	r3, [r3, #0]
 800e07a:	f503 7296 	add.w	r2, r3, #300	; 0x12c
 800e07e:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e082:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e086:	681b      	ldr	r3, [r3, #0]
 800e088:	f503 737f 	add.w	r3, r3, #1020	; 0x3fc
 800e08c:	4619      	mov	r1, r3
 800e08e:	4610      	mov	r0, r2
 800e090:	f7ff fbe0 	bl	800d854 <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>
    Pressure_button.setPosition(0, 128, 160, 50);
 800e094:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e098:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e09c:	681b      	ldr	r3, [r3, #0]
 800e09e:	f503 7096 	add.w	r0, r3, #300	; 0x12c
 800e0a2:	2332      	movs	r3, #50	; 0x32
 800e0a4:	9300      	str	r3, [sp, #0]
 800e0a6:	23a0      	movs	r3, #160	; 0xa0
 800e0a8:	2280      	movs	r2, #128	; 0x80
 800e0aa:	2100      	movs	r1, #0
 800e0ac:	f7fb fe5e 	bl	8009d6c <_ZN8touchgfx8Drawable11setPositionEssss>
    add(Pressure_button);
 800e0b0:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e0b4:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e0b8:	681a      	ldr	r2, [r3, #0]
 800e0ba:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e0be:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e0c2:	681b      	ldr	r3, [r3, #0]
 800e0c4:	f503 7396 	add.w	r3, r3, #300	; 0x12c
 800e0c8:	4619      	mov	r1, r3
 800e0ca:	4610      	mov	r0, r2
 800e0cc:	f7fb ffdc 	bl	800a088 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    CO_button.setBoxWithBorderPosition(0, 0, 160, 50);
 800e0d0:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e0d4:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e0d8:	681b      	ldr	r3, [r3, #0]
 800e0da:	f503 70d2 	add.w	r0, r3, #420	; 0x1a4
 800e0de:	2332      	movs	r3, #50	; 0x32
 800e0e0:	9300      	str	r3, [sp, #0]
 800e0e2:	23a0      	movs	r3, #160	; 0xa0
 800e0e4:	2200      	movs	r2, #0
 800e0e6:	2100      	movs	r1, #0
 800e0e8:	f000 fdfc 	bl	800ece4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>
    CO_button.setBorderSize(5);
 800e0ec:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e0f0:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e0f4:	681b      	ldr	r3, [r3, #0]
 800e0f6:	f503 73d2 	add.w	r3, r3, #420	; 0x1a4
 800e0fa:	2105      	movs	r1, #5
 800e0fc:	4618      	mov	r0, r3
 800e0fe:	f000 fe11 	bl	800ed24 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>
    CO_button.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800e102:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e106:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e10a:	681b      	ldr	r3, [r3, #0]
 800e10c:	f503 74d2 	add.w	r4, r3, #420	; 0x1a4
 800e110:	2300      	movs	r3, #0
 800e112:	f887 30f3 	strb.w	r3, [r7, #243]	; 0xf3
 800e116:	2366      	movs	r3, #102	; 0x66
 800e118:	f887 30f2 	strb.w	r3, [r7, #242]	; 0xf2
 800e11c:	2399      	movs	r3, #153	; 0x99
 800e11e:	f887 30f1 	strb.w	r3, [r7, #241]	; 0xf1
 800e122:	f897 30f3 	ldrb.w	r3, [r7, #243]	; 0xf3
 800e126:	041b      	lsls	r3, r3, #16
 800e128:	461a      	mov	r2, r3
 800e12a:	f897 30f2 	ldrb.w	r3, [r7, #242]	; 0xf2
 800e12e:	021b      	lsls	r3, r3, #8
 800e130:	431a      	orrs	r2, r3
 800e132:	f897 30f1 	ldrb.w	r3, [r7, #241]	; 0xf1
 800e136:	4313      	orrs	r3, r2
 800e138:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e13c:	f107 0398 	add.w	r3, r7, #152	; 0x98
 800e140:	4611      	mov	r1, r2
 800e142:	4618      	mov	r0, r3
 800e144:	f7fb fd4e 	bl	8009be4 <_ZN8touchgfx9colortypeC1Em>
 800e148:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 800e14c:	461d      	mov	r5, r3
 800e14e:	2300      	movs	r3, #0
 800e150:	f887 30f6 	strb.w	r3, [r7, #246]	; 0xf6
 800e154:	2399      	movs	r3, #153	; 0x99
 800e156:	f887 30f5 	strb.w	r3, [r7, #245]	; 0xf5
 800e15a:	23cc      	movs	r3, #204	; 0xcc
 800e15c:	f887 30f4 	strb.w	r3, [r7, #244]	; 0xf4
 800e160:	f897 30f6 	ldrb.w	r3, [r7, #246]	; 0xf6
 800e164:	041b      	lsls	r3, r3, #16
 800e166:	461a      	mov	r2, r3
 800e168:	f897 30f5 	ldrb.w	r3, [r7, #245]	; 0xf5
 800e16c:	021b      	lsls	r3, r3, #8
 800e16e:	431a      	orrs	r2, r3
 800e170:	f897 30f4 	ldrb.w	r3, [r7, #244]	; 0xf4
 800e174:	4313      	orrs	r3, r2
 800e176:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e17a:	f107 0394 	add.w	r3, r7, #148	; 0x94
 800e17e:	4611      	mov	r1, r2
 800e180:	4618      	mov	r0, r3
 800e182:	f7fb fd2f 	bl	8009be4 <_ZN8touchgfx9colortypeC1Em>
 800e186:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800e18a:	461e      	mov	r6, r3
 800e18c:	2300      	movs	r3, #0
 800e18e:	f887 30f9 	strb.w	r3, [r7, #249]	; 0xf9
 800e192:	2333      	movs	r3, #51	; 0x33
 800e194:	f887 30f8 	strb.w	r3, [r7, #248]	; 0xf8
 800e198:	2366      	movs	r3, #102	; 0x66
 800e19a:	f887 30f7 	strb.w	r3, [r7, #247]	; 0xf7
 800e19e:	f897 30f9 	ldrb.w	r3, [r7, #249]	; 0xf9
 800e1a2:	041b      	lsls	r3, r3, #16
 800e1a4:	461a      	mov	r2, r3
 800e1a6:	f897 30f8 	ldrb.w	r3, [r7, #248]	; 0xf8
 800e1aa:	021b      	lsls	r3, r3, #8
 800e1ac:	431a      	orrs	r2, r3
 800e1ae:	f897 30f7 	ldrb.w	r3, [r7, #247]	; 0xf7
 800e1b2:	4313      	orrs	r3, r2
 800e1b4:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e1b8:	f107 0390 	add.w	r3, r7, #144	; 0x90
 800e1bc:	4611      	mov	r1, r2
 800e1be:	4618      	mov	r0, r3
 800e1c0:	f7fb fd10 	bl	8009be4 <_ZN8touchgfx9colortypeC1Em>
 800e1c4:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 800e1c8:	4698      	mov	r8, r3
 800e1ca:	2333      	movs	r3, #51	; 0x33
 800e1cc:	f887 30fc 	strb.w	r3, [r7, #252]	; 0xfc
 800e1d0:	2366      	movs	r3, #102	; 0x66
 800e1d2:	f887 30fb 	strb.w	r3, [r7, #251]	; 0xfb
 800e1d6:	2399      	movs	r3, #153	; 0x99
 800e1d8:	f887 30fa 	strb.w	r3, [r7, #250]	; 0xfa
 800e1dc:	f897 30fc 	ldrb.w	r3, [r7, #252]	; 0xfc
 800e1e0:	041b      	lsls	r3, r3, #16
 800e1e2:	461a      	mov	r2, r3
 800e1e4:	f897 30fb 	ldrb.w	r3, [r7, #251]	; 0xfb
 800e1e8:	021b      	lsls	r3, r3, #8
 800e1ea:	431a      	orrs	r2, r3
 800e1ec:	f897 30fa 	ldrb.w	r3, [r7, #250]	; 0xfa
 800e1f0:	4313      	orrs	r3, r2
 800e1f2:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e1f6:	f107 038c 	add.w	r3, r7, #140	; 0x8c
 800e1fa:	4611      	mov	r1, r2
 800e1fc:	4618      	mov	r0, r3
 800e1fe:	f7fb fcf1 	bl	8009be4 <_ZN8touchgfx9colortypeC1Em>
 800e202:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 800e206:	9300      	str	r3, [sp, #0]
 800e208:	4643      	mov	r3, r8
 800e20a:	4632      	mov	r2, r6
 800e20c:	4629      	mov	r1, r5
 800e20e:	4620      	mov	r0, r4
 800e210:	f000 fd9a 	bl	800ed48 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    CO_button.setAction(flexButtonCallback);
 800e214:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e218:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e21c:	681b      	ldr	r3, [r3, #0]
 800e21e:	f503 72d2 	add.w	r2, r3, #420	; 0x1a4
 800e222:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e226:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e22a:	681b      	ldr	r3, [r3, #0]
 800e22c:	f503 737f 	add.w	r3, r3, #1020	; 0x3fc
 800e230:	4619      	mov	r1, r3
 800e232:	4610      	mov	r0, r2
 800e234:	f7ff fb0e 	bl	800d854 <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>
    CO_button.setPosition(160, 128, 160, 50);
 800e238:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e23c:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e240:	681b      	ldr	r3, [r3, #0]
 800e242:	f503 70d2 	add.w	r0, r3, #420	; 0x1a4
 800e246:	2332      	movs	r3, #50	; 0x32
 800e248:	9300      	str	r3, [sp, #0]
 800e24a:	23a0      	movs	r3, #160	; 0xa0
 800e24c:	2280      	movs	r2, #128	; 0x80
 800e24e:	21a0      	movs	r1, #160	; 0xa0
 800e250:	f7fb fd8c 	bl	8009d6c <_ZN8touchgfx8Drawable11setPositionEssss>
    add(CO_button);
 800e254:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e258:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e25c:	681a      	ldr	r2, [r3, #0]
 800e25e:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e262:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e266:	681b      	ldr	r3, [r3, #0]
 800e268:	f503 73d2 	add.w	r3, r3, #420	; 0x1a4
 800e26c:	4619      	mov	r1, r3
 800e26e:	4610      	mov	r0, r2
 800e270:	f7fb ff0a 	bl	800a088 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    Temperature_button.setBoxWithBorderPosition(0, 0, 160, 50);
 800e274:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e278:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e27c:	681b      	ldr	r3, [r3, #0]
 800e27e:	f503 7007 	add.w	r0, r3, #540	; 0x21c
 800e282:	2332      	movs	r3, #50	; 0x32
 800e284:	9300      	str	r3, [sp, #0]
 800e286:	23a0      	movs	r3, #160	; 0xa0
 800e288:	2200      	movs	r2, #0
 800e28a:	2100      	movs	r1, #0
 800e28c:	f000 fd2a 	bl	800ece4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>
    Temperature_button.setBorderSize(5);
 800e290:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e294:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e298:	681b      	ldr	r3, [r3, #0]
 800e29a:	f503 7307 	add.w	r3, r3, #540	; 0x21c
 800e29e:	2105      	movs	r1, #5
 800e2a0:	4618      	mov	r0, r3
 800e2a2:	f000 fd3f 	bl	800ed24 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>
    Temperature_button.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800e2a6:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e2aa:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e2ae:	681b      	ldr	r3, [r3, #0]
 800e2b0:	f503 7407 	add.w	r4, r3, #540	; 0x21c
 800e2b4:	2300      	movs	r3, #0
 800e2b6:	f887 30ff 	strb.w	r3, [r7, #255]	; 0xff
 800e2ba:	2366      	movs	r3, #102	; 0x66
 800e2bc:	f887 30fe 	strb.w	r3, [r7, #254]	; 0xfe
 800e2c0:	2399      	movs	r3, #153	; 0x99
 800e2c2:	f887 30fd 	strb.w	r3, [r7, #253]	; 0xfd
 800e2c6:	f897 30ff 	ldrb.w	r3, [r7, #255]	; 0xff
 800e2ca:	041b      	lsls	r3, r3, #16
 800e2cc:	461a      	mov	r2, r3
 800e2ce:	f897 30fe 	ldrb.w	r3, [r7, #254]	; 0xfe
 800e2d2:	021b      	lsls	r3, r3, #8
 800e2d4:	431a      	orrs	r2, r3
 800e2d6:	f897 30fd 	ldrb.w	r3, [r7, #253]	; 0xfd
 800e2da:	4313      	orrs	r3, r2
 800e2dc:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e2e0:	f107 0388 	add.w	r3, r7, #136	; 0x88
 800e2e4:	4611      	mov	r1, r2
 800e2e6:	4618      	mov	r0, r3
 800e2e8:	f7fb fc7c 	bl	8009be4 <_ZN8touchgfx9colortypeC1Em>
 800e2ec:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 800e2f0:	461d      	mov	r5, r3
 800e2f2:	2300      	movs	r3, #0
 800e2f4:	f887 3102 	strb.w	r3, [r7, #258]	; 0x102
 800e2f8:	2399      	movs	r3, #153	; 0x99
 800e2fa:	f887 3101 	strb.w	r3, [r7, #257]	; 0x101
 800e2fe:	23cc      	movs	r3, #204	; 0xcc
 800e300:	f887 3100 	strb.w	r3, [r7, #256]	; 0x100
 800e304:	f897 3102 	ldrb.w	r3, [r7, #258]	; 0x102
 800e308:	041b      	lsls	r3, r3, #16
 800e30a:	461a      	mov	r2, r3
 800e30c:	f897 3101 	ldrb.w	r3, [r7, #257]	; 0x101
 800e310:	021b      	lsls	r3, r3, #8
 800e312:	431a      	orrs	r2, r3
 800e314:	f897 3100 	ldrb.w	r3, [r7, #256]	; 0x100
 800e318:	4313      	orrs	r3, r2
 800e31a:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e31e:	f107 0384 	add.w	r3, r7, #132	; 0x84
 800e322:	4611      	mov	r1, r2
 800e324:	4618      	mov	r0, r3
 800e326:	f7fb fc5d 	bl	8009be4 <_ZN8touchgfx9colortypeC1Em>
 800e32a:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800e32e:	461e      	mov	r6, r3
 800e330:	2300      	movs	r3, #0
 800e332:	f887 3105 	strb.w	r3, [r7, #261]	; 0x105
 800e336:	2333      	movs	r3, #51	; 0x33
 800e338:	f887 3104 	strb.w	r3, [r7, #260]	; 0x104
 800e33c:	2366      	movs	r3, #102	; 0x66
 800e33e:	f887 3103 	strb.w	r3, [r7, #259]	; 0x103
 800e342:	f897 3105 	ldrb.w	r3, [r7, #261]	; 0x105
 800e346:	041b      	lsls	r3, r3, #16
 800e348:	461a      	mov	r2, r3
 800e34a:	f897 3104 	ldrb.w	r3, [r7, #260]	; 0x104
 800e34e:	021b      	lsls	r3, r3, #8
 800e350:	431a      	orrs	r2, r3
 800e352:	f897 3103 	ldrb.w	r3, [r7, #259]	; 0x103
 800e356:	4313      	orrs	r3, r2
 800e358:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e35c:	f107 0380 	add.w	r3, r7, #128	; 0x80
 800e360:	4611      	mov	r1, r2
 800e362:	4618      	mov	r0, r3
 800e364:	f7fb fc3e 	bl	8009be4 <_ZN8touchgfx9colortypeC1Em>
 800e368:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 800e36c:	4698      	mov	r8, r3
 800e36e:	2333      	movs	r3, #51	; 0x33
 800e370:	f887 3108 	strb.w	r3, [r7, #264]	; 0x108
 800e374:	2366      	movs	r3, #102	; 0x66
 800e376:	f887 3107 	strb.w	r3, [r7, #263]	; 0x107
 800e37a:	2399      	movs	r3, #153	; 0x99
 800e37c:	f887 3106 	strb.w	r3, [r7, #262]	; 0x106
 800e380:	f897 3108 	ldrb.w	r3, [r7, #264]	; 0x108
 800e384:	041b      	lsls	r3, r3, #16
 800e386:	461a      	mov	r2, r3
 800e388:	f897 3107 	ldrb.w	r3, [r7, #263]	; 0x107
 800e38c:	021b      	lsls	r3, r3, #8
 800e38e:	431a      	orrs	r2, r3
 800e390:	f897 3106 	ldrb.w	r3, [r7, #262]	; 0x106
 800e394:	4313      	orrs	r3, r2
 800e396:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e39a:	f107 037c 	add.w	r3, r7, #124	; 0x7c
 800e39e:	4611      	mov	r1, r2
 800e3a0:	4618      	mov	r0, r3
 800e3a2:	f7fb fc1f 	bl	8009be4 <_ZN8touchgfx9colortypeC1Em>
 800e3a6:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 800e3a8:	9300      	str	r3, [sp, #0]
 800e3aa:	4643      	mov	r3, r8
 800e3ac:	4632      	mov	r2, r6
 800e3ae:	4629      	mov	r1, r5
 800e3b0:	4620      	mov	r0, r4
 800e3b2:	f000 fcc9 	bl	800ed48 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    Temperature_button.setAction(flexButtonCallback);
 800e3b6:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e3ba:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e3be:	681b      	ldr	r3, [r3, #0]
 800e3c0:	f503 7207 	add.w	r2, r3, #540	; 0x21c
 800e3c4:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e3c8:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e3cc:	681b      	ldr	r3, [r3, #0]
 800e3ce:	f503 737f 	add.w	r3, r3, #1020	; 0x3fc
 800e3d2:	4619      	mov	r1, r3
 800e3d4:	4610      	mov	r0, r2
 800e3d6:	f7ff fa3d 	bl	800d854 <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>
    Temperature_button.setPosition(160, 70, 160, 50);
 800e3da:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e3de:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e3e2:	681b      	ldr	r3, [r3, #0]
 800e3e4:	f503 7007 	add.w	r0, r3, #540	; 0x21c
 800e3e8:	2332      	movs	r3, #50	; 0x32
 800e3ea:	9300      	str	r3, [sp, #0]
 800e3ec:	23a0      	movs	r3, #160	; 0xa0
 800e3ee:	2246      	movs	r2, #70	; 0x46
 800e3f0:	21a0      	movs	r1, #160	; 0xa0
 800e3f2:	f7fb fcbb 	bl	8009d6c <_ZN8touchgfx8Drawable11setPositionEssss>
    add(Temperature_button);
 800e3f6:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e3fa:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e3fe:	681a      	ldr	r2, [r3, #0]
 800e400:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e404:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e408:	681b      	ldr	r3, [r3, #0]
 800e40a:	f503 7307 	add.w	r3, r3, #540	; 0x21c
 800e40e:	4619      	mov	r1, r3
 800e410:	4610      	mov	r0, r2
 800e412:	f7fb fe39 	bl	800a088 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    CarSystem_text.setXY(240, 185);
 800e416:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e41a:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e41e:	681b      	ldr	r3, [r3, #0]
 800e420:	f503 7325 	add.w	r3, r3, #660	; 0x294
 800e424:	22b9      	movs	r2, #185	; 0xb9
 800e426:	21f0      	movs	r1, #240	; 0xf0
 800e428:	4618      	mov	r0, r3
 800e42a:	f7fb fcde 	bl	8009dea <_ZN8touchgfx8Drawable5setXYEss>
    CarSystem_text.setColor(touchgfx::Color::getColorFromRGB(242, 174, 174));
 800e42e:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e432:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e436:	681b      	ldr	r3, [r3, #0]
 800e438:	f503 7425 	add.w	r4, r3, #660	; 0x294
 800e43c:	23f2      	movs	r3, #242	; 0xf2
 800e43e:	f887 310b 	strb.w	r3, [r7, #267]	; 0x10b
 800e442:	23ae      	movs	r3, #174	; 0xae
 800e444:	f887 310a 	strb.w	r3, [r7, #266]	; 0x10a
 800e448:	23ae      	movs	r3, #174	; 0xae
 800e44a:	f887 3109 	strb.w	r3, [r7, #265]	; 0x109
 800e44e:	f897 310b 	ldrb.w	r3, [r7, #267]	; 0x10b
 800e452:	041b      	lsls	r3, r3, #16
 800e454:	461a      	mov	r2, r3
 800e456:	f897 310a 	ldrb.w	r3, [r7, #266]	; 0x10a
 800e45a:	021b      	lsls	r3, r3, #8
 800e45c:	431a      	orrs	r2, r3
 800e45e:	f897 3109 	ldrb.w	r3, [r7, #265]	; 0x109
 800e462:	4313      	orrs	r3, r2
 800e464:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e468:	f107 0378 	add.w	r3, r7, #120	; 0x78
 800e46c:	4611      	mov	r1, r2
 800e46e:	4618      	mov	r0, r3
 800e470:	f7fb fbb8 	bl	8009be4 <_ZN8touchgfx9colortypeC1Em>
 800e474:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800e476:	461a      	mov	r2, r3
 800e478:	f8c7 410c 	str.w	r4, [r7, #268]	; 0x10c
 800e47c:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e480:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 800e484:	601a      	str	r2, [r3, #0]
        color = newColor;
 800e486:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 800e48a:	f507 72ac 	add.w	r2, r7, #344	; 0x158
 800e48e:	f5a2 7298 	sub.w	r2, r2, #304	; 0x130
 800e492:	6812      	ldr	r2, [r2, #0]
 800e494:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800e496:	bf00      	nop
    CarSystem_text.setLinespacing(0);
 800e498:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e49c:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e4a0:	681b      	ldr	r3, [r3, #0]
 800e4a2:	f503 7325 	add.w	r3, r3, #660	; 0x294
 800e4a6:	f8c7 3114 	str.w	r3, [r7, #276]	; 0x114
 800e4aa:	2300      	movs	r3, #0
 800e4ac:	f8a7 3112 	strh.w	r3, [r7, #274]	; 0x112
        linespace = space;
 800e4b0:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800e4b4:	f8b7 2112 	ldrh.w	r2, [r7, #274]	; 0x112
 800e4b8:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800e4ba:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800e4be:	681b      	ldr	r3, [r3, #0]
 800e4c0:	3384      	adds	r3, #132	; 0x84
 800e4c2:	681b      	ldr	r3, [r3, #0]
 800e4c4:	f8d7 4114 	ldr.w	r4, [r7, #276]	; 0x114
 800e4c8:	463a      	mov	r2, r7
 800e4ca:	f8d7 1114 	ldr.w	r1, [r7, #276]	; 0x114
 800e4ce:	4610      	mov	r0, r2
 800e4d0:	4798      	blx	r3
 800e4d2:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e4d6:	f5a3 72ac 	sub.w	r2, r3, #344	; 0x158
 800e4da:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800e4de:	ca07      	ldmia	r2, {r0, r1, r2}
 800e4e0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800e4e4:	bf00      	nop
    CarSystem_text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_229S));
 800e4e6:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e4ea:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e4ee:	681b      	ldr	r3, [r3, #0]
 800e4f0:	f503 7425 	add.w	r4, r3, #660	; 0x294
 800e4f4:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800e4f8:	2110      	movs	r1, #16
 800e4fa:	4618      	mov	r0, r3
 800e4fc:	f7fb fe5c 	bl	800a1b8 <_ZN8touchgfx9TypedTextC1Et>
 800e500:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800e504:	4619      	mov	r1, r3
 800e506:	4620      	mov	r0, r4
 800e508:	f007 fe9e 	bl	8016248 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800e50c:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800e510:	4618      	mov	r0, r3
 800e512:	f7fb f97f 	bl	8009814 <_ZN8touchgfx9TypedTextD1Ev>
    add(CarSystem_text);
 800e516:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e51a:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e51e:	681a      	ldr	r2, [r3, #0]
 800e520:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e524:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e528:	681b      	ldr	r3, [r3, #0]
 800e52a:	f503 7325 	add.w	r3, r3, #660	; 0x294
 800e52e:	4619      	mov	r1, r3
 800e530:	4610      	mov	r0, r2
 800e532:	f7fb fda9 	bl	800a088 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    Clock_text.setXY(54, 83);
 800e536:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e53a:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e53e:	681b      	ldr	r3, [r3, #0]
 800e540:	f503 7337 	add.w	r3, r3, #732	; 0x2dc
 800e544:	2253      	movs	r2, #83	; 0x53
 800e546:	2136      	movs	r1, #54	; 0x36
 800e548:	4618      	mov	r0, r3
 800e54a:	f7fb fc4e 	bl	8009dea <_ZN8touchgfx8Drawable5setXYEss>
    Clock_text.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800e54e:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e552:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e556:	681b      	ldr	r3, [r3, #0]
 800e558:	f503 7437 	add.w	r4, r3, #732	; 0x2dc
 800e55c:	2300      	movs	r3, #0
 800e55e:	f887 311b 	strb.w	r3, [r7, #283]	; 0x11b
 800e562:	2300      	movs	r3, #0
 800e564:	f887 311a 	strb.w	r3, [r7, #282]	; 0x11a
 800e568:	2300      	movs	r3, #0
 800e56a:	f887 3119 	strb.w	r3, [r7, #281]	; 0x119
 800e56e:	f897 311b 	ldrb.w	r3, [r7, #283]	; 0x11b
 800e572:	041b      	lsls	r3, r3, #16
 800e574:	461a      	mov	r2, r3
 800e576:	f897 311a 	ldrb.w	r3, [r7, #282]	; 0x11a
 800e57a:	021b      	lsls	r3, r3, #8
 800e57c:	431a      	orrs	r2, r3
 800e57e:	f897 3119 	ldrb.w	r3, [r7, #281]	; 0x119
 800e582:	4313      	orrs	r3, r2
 800e584:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e588:	f107 0374 	add.w	r3, r7, #116	; 0x74
 800e58c:	4611      	mov	r1, r2
 800e58e:	4618      	mov	r0, r3
 800e590:	f7fb fb28 	bl	8009be4 <_ZN8touchgfx9colortypeC1Em>
 800e594:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800e596:	461a      	mov	r2, r3
 800e598:	f8c7 411c 	str.w	r4, [r7, #284]	; 0x11c
 800e59c:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e5a0:	f5a3 739a 	sub.w	r3, r3, #308	; 0x134
 800e5a4:	601a      	str	r2, [r3, #0]
        color = newColor;
 800e5a6:	f8d7 311c 	ldr.w	r3, [r7, #284]	; 0x11c
 800e5aa:	f507 72ac 	add.w	r2, r7, #344	; 0x158
 800e5ae:	f5a2 729a 	sub.w	r2, r2, #308	; 0x134
 800e5b2:	6812      	ldr	r2, [r2, #0]
 800e5b4:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800e5b6:	bf00      	nop
    Clock_text.setLinespacing(0);
 800e5b8:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e5bc:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e5c0:	681b      	ldr	r3, [r3, #0]
 800e5c2:	f503 7337 	add.w	r3, r3, #732	; 0x2dc
 800e5c6:	f8c7 3124 	str.w	r3, [r7, #292]	; 0x124
 800e5ca:	2300      	movs	r3, #0
 800e5cc:	f8a7 3122 	strh.w	r3, [r7, #290]	; 0x122
        linespace = space;
 800e5d0:	f8d7 3124 	ldr.w	r3, [r7, #292]	; 0x124
 800e5d4:	f8b7 2122 	ldrh.w	r2, [r7, #290]	; 0x122
 800e5d8:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800e5da:	f8d7 3124 	ldr.w	r3, [r7, #292]	; 0x124
 800e5de:	681b      	ldr	r3, [r3, #0]
 800e5e0:	3384      	adds	r3, #132	; 0x84
 800e5e2:	681b      	ldr	r3, [r3, #0]
 800e5e4:	f8d7 4124 	ldr.w	r4, [r7, #292]	; 0x124
 800e5e8:	463a      	mov	r2, r7
 800e5ea:	f8d7 1124 	ldr.w	r1, [r7, #292]	; 0x124
 800e5ee:	4610      	mov	r0, r2
 800e5f0:	4798      	blx	r3
 800e5f2:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e5f6:	f5a3 72ac 	sub.w	r2, r3, #344	; 0x158
 800e5fa:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800e5fe:	ca07      	ldmia	r2, {r0, r1, r2}
 800e600:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800e604:	bf00      	nop
    Clock_text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L128));
 800e606:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e60a:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e60e:	681b      	ldr	r3, [r3, #0]
 800e610:	f503 7437 	add.w	r4, r3, #732	; 0x2dc
 800e614:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800e618:	210f      	movs	r1, #15
 800e61a:	4618      	mov	r0, r3
 800e61c:	f7fb fdcc 	bl	800a1b8 <_ZN8touchgfx9TypedTextC1Et>
 800e620:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800e624:	4619      	mov	r1, r3
 800e626:	4620      	mov	r0, r4
 800e628:	f007 fe0e 	bl	8016248 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800e62c:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800e630:	4618      	mov	r0, r3
 800e632:	f7fb f8ef 	bl	8009814 <_ZN8touchgfx9TypedTextD1Ev>
    add(Clock_text);
 800e636:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e63a:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e63e:	681a      	ldr	r2, [r3, #0]
 800e640:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e644:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e648:	681b      	ldr	r3, [r3, #0]
 800e64a:	f503 7337 	add.w	r3, r3, #732	; 0x2dc
 800e64e:	4619      	mov	r1, r3
 800e650:	4610      	mov	r0, r2
 800e652:	f7fb fd19 	bl	800a088 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    Pressure_text.setXY(37, 143);
 800e656:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e65a:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e65e:	681b      	ldr	r3, [r3, #0]
 800e660:	f503 7349 	add.w	r3, r3, #804	; 0x324
 800e664:	228f      	movs	r2, #143	; 0x8f
 800e666:	2125      	movs	r1, #37	; 0x25
 800e668:	4618      	mov	r0, r3
 800e66a:	f7fb fbbe 	bl	8009dea <_ZN8touchgfx8Drawable5setXYEss>
    Pressure_text.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800e66e:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e672:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e676:	681b      	ldr	r3, [r3, #0]
 800e678:	f503 7449 	add.w	r4, r3, #804	; 0x324
 800e67c:	2300      	movs	r3, #0
 800e67e:	f887 312b 	strb.w	r3, [r7, #299]	; 0x12b
 800e682:	2300      	movs	r3, #0
 800e684:	f887 312a 	strb.w	r3, [r7, #298]	; 0x12a
 800e688:	2300      	movs	r3, #0
 800e68a:	f887 3129 	strb.w	r3, [r7, #297]	; 0x129
 800e68e:	f897 312b 	ldrb.w	r3, [r7, #299]	; 0x12b
 800e692:	041b      	lsls	r3, r3, #16
 800e694:	461a      	mov	r2, r3
 800e696:	f897 312a 	ldrb.w	r3, [r7, #298]	; 0x12a
 800e69a:	021b      	lsls	r3, r3, #8
 800e69c:	431a      	orrs	r2, r3
 800e69e:	f897 3129 	ldrb.w	r3, [r7, #297]	; 0x129
 800e6a2:	4313      	orrs	r3, r2
 800e6a4:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e6a8:	f107 0370 	add.w	r3, r7, #112	; 0x70
 800e6ac:	4611      	mov	r1, r2
 800e6ae:	4618      	mov	r0, r3
 800e6b0:	f7fb fa98 	bl	8009be4 <_ZN8touchgfx9colortypeC1Em>
 800e6b4:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800e6b6:	461a      	mov	r2, r3
 800e6b8:	f8c7 412c 	str.w	r4, [r7, #300]	; 0x12c
 800e6bc:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e6c0:	f5a3 739c 	sub.w	r3, r3, #312	; 0x138
 800e6c4:	601a      	str	r2, [r3, #0]
        color = newColor;
 800e6c6:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 800e6ca:	f507 72ac 	add.w	r2, r7, #344	; 0x158
 800e6ce:	f5a2 729c 	sub.w	r2, r2, #312	; 0x138
 800e6d2:	6812      	ldr	r2, [r2, #0]
 800e6d4:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800e6d6:	bf00      	nop
    Pressure_text.setLinespacing(0);
 800e6d8:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e6dc:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e6e0:	681b      	ldr	r3, [r3, #0]
 800e6e2:	f503 7349 	add.w	r3, r3, #804	; 0x324
 800e6e6:	f8c7 3134 	str.w	r3, [r7, #308]	; 0x134
 800e6ea:	2300      	movs	r3, #0
 800e6ec:	f8a7 3132 	strh.w	r3, [r7, #306]	; 0x132
        linespace = space;
 800e6f0:	f8d7 3134 	ldr.w	r3, [r7, #308]	; 0x134
 800e6f4:	f8b7 2132 	ldrh.w	r2, [r7, #306]	; 0x132
 800e6f8:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800e6fa:	f8d7 3134 	ldr.w	r3, [r7, #308]	; 0x134
 800e6fe:	681b      	ldr	r3, [r3, #0]
 800e700:	3384      	adds	r3, #132	; 0x84
 800e702:	681b      	ldr	r3, [r3, #0]
 800e704:	f8d7 4134 	ldr.w	r4, [r7, #308]	; 0x134
 800e708:	463a      	mov	r2, r7
 800e70a:	f8d7 1134 	ldr.w	r1, [r7, #308]	; 0x134
 800e70e:	4610      	mov	r0, r2
 800e710:	4798      	blx	r3
 800e712:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e716:	f5a3 72ac 	sub.w	r2, r3, #344	; 0x158
 800e71a:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800e71e:	ca07      	ldmia	r2, {r0, r1, r2}
 800e720:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800e724:	bf00      	nop
    Pressure_text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NCPT));
 800e726:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e72a:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e72e:	681b      	ldr	r3, [r3, #0]
 800e730:	f503 7449 	add.w	r4, r3, #804	; 0x324
 800e734:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800e738:	210e      	movs	r1, #14
 800e73a:	4618      	mov	r0, r3
 800e73c:	f7fb fd3c 	bl	800a1b8 <_ZN8touchgfx9TypedTextC1Et>
 800e740:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800e744:	4619      	mov	r1, r3
 800e746:	4620      	mov	r0, r4
 800e748:	f007 fd7e 	bl	8016248 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800e74c:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800e750:	4618      	mov	r0, r3
 800e752:	f7fb f85f 	bl	8009814 <_ZN8touchgfx9TypedTextD1Ev>
    add(Pressure_text);
 800e756:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e75a:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e75e:	681a      	ldr	r2, [r3, #0]
 800e760:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e764:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e768:	681b      	ldr	r3, [r3, #0]
 800e76a:	f503 7349 	add.w	r3, r3, #804	; 0x324
 800e76e:	4619      	mov	r1, r3
 800e770:	4610      	mov	r0, r2
 800e772:	f7fb fc89 	bl	800a088 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    Temperature_text.setXY(176, 83);
 800e776:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e77a:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e77e:	681b      	ldr	r3, [r3, #0]
 800e780:	f503 735b 	add.w	r3, r3, #876	; 0x36c
 800e784:	2253      	movs	r2, #83	; 0x53
 800e786:	21b0      	movs	r1, #176	; 0xb0
 800e788:	4618      	mov	r0, r3
 800e78a:	f7fb fb2e 	bl	8009dea <_ZN8touchgfx8Drawable5setXYEss>
    Temperature_text.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800e78e:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e792:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e796:	681b      	ldr	r3, [r3, #0]
 800e798:	f503 745b 	add.w	r4, r3, #876	; 0x36c
 800e79c:	2300      	movs	r3, #0
 800e79e:	f887 313b 	strb.w	r3, [r7, #315]	; 0x13b
 800e7a2:	2300      	movs	r3, #0
 800e7a4:	f887 313a 	strb.w	r3, [r7, #314]	; 0x13a
 800e7a8:	2300      	movs	r3, #0
 800e7aa:	f887 3139 	strb.w	r3, [r7, #313]	; 0x139
 800e7ae:	f897 313b 	ldrb.w	r3, [r7, #315]	; 0x13b
 800e7b2:	041b      	lsls	r3, r3, #16
 800e7b4:	461a      	mov	r2, r3
 800e7b6:	f897 313a 	ldrb.w	r3, [r7, #314]	; 0x13a
 800e7ba:	021b      	lsls	r3, r3, #8
 800e7bc:	431a      	orrs	r2, r3
 800e7be:	f897 3139 	ldrb.w	r3, [r7, #313]	; 0x139
 800e7c2:	4313      	orrs	r3, r2
 800e7c4:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e7c8:	f107 036c 	add.w	r3, r7, #108	; 0x6c
 800e7cc:	4611      	mov	r1, r2
 800e7ce:	4618      	mov	r0, r3
 800e7d0:	f7fb fa08 	bl	8009be4 <_ZN8touchgfx9colortypeC1Em>
 800e7d4:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800e7d6:	461a      	mov	r2, r3
 800e7d8:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
 800e7dc:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e7e0:	f5a3 739e 	sub.w	r3, r3, #316	; 0x13c
 800e7e4:	601a      	str	r2, [r3, #0]
        color = newColor;
 800e7e6:	f8d7 313c 	ldr.w	r3, [r7, #316]	; 0x13c
 800e7ea:	f507 72ac 	add.w	r2, r7, #344	; 0x158
 800e7ee:	f5a2 729e 	sub.w	r2, r2, #316	; 0x13c
 800e7f2:	6812      	ldr	r2, [r2, #0]
 800e7f4:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800e7f6:	bf00      	nop
    Temperature_text.setLinespacing(0);
 800e7f8:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e7fc:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e800:	681b      	ldr	r3, [r3, #0]
 800e802:	f503 735b 	add.w	r3, r3, #876	; 0x36c
 800e806:	f8c7 3144 	str.w	r3, [r7, #324]	; 0x144
 800e80a:	2300      	movs	r3, #0
 800e80c:	f8a7 3142 	strh.w	r3, [r7, #322]	; 0x142
        linespace = space;
 800e810:	f8d7 3144 	ldr.w	r3, [r7, #324]	; 0x144
 800e814:	f8b7 2142 	ldrh.w	r2, [r7, #322]	; 0x142
 800e818:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800e81a:	f8d7 3144 	ldr.w	r3, [r7, #324]	; 0x144
 800e81e:	681b      	ldr	r3, [r3, #0]
 800e820:	3384      	adds	r3, #132	; 0x84
 800e822:	681b      	ldr	r3, [r3, #0]
 800e824:	f8d7 4144 	ldr.w	r4, [r7, #324]	; 0x144
 800e828:	463a      	mov	r2, r7
 800e82a:	f8d7 1144 	ldr.w	r1, [r7, #324]	; 0x144
 800e82e:	4610      	mov	r0, r2
 800e830:	4798      	blx	r3
 800e832:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e836:	f5a3 72ac 	sub.w	r2, r3, #344	; 0x158
 800e83a:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800e83e:	ca07      	ldmia	r2, {r0, r1, r2}
 800e840:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800e844:	bf00      	nop
    Temperature_text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LIND));
 800e846:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e84a:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e84e:	681b      	ldr	r3, [r3, #0]
 800e850:	f503 745b 	add.w	r4, r3, #876	; 0x36c
 800e854:	f107 0358 	add.w	r3, r7, #88	; 0x58
 800e858:	210d      	movs	r1, #13
 800e85a:	4618      	mov	r0, r3
 800e85c:	f7fb fcac 	bl	800a1b8 <_ZN8touchgfx9TypedTextC1Et>
 800e860:	f107 0358 	add.w	r3, r7, #88	; 0x58
 800e864:	4619      	mov	r1, r3
 800e866:	4620      	mov	r0, r4
 800e868:	f007 fcee 	bl	8016248 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800e86c:	f107 0358 	add.w	r3, r7, #88	; 0x58
 800e870:	4618      	mov	r0, r3
 800e872:	f7fa ffcf 	bl	8009814 <_ZN8touchgfx9TypedTextD1Ev>
    add(Temperature_text);
 800e876:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e87a:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e87e:	681a      	ldr	r2, [r3, #0]
 800e880:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e884:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e888:	681b      	ldr	r3, [r3, #0]
 800e88a:	f503 735b 	add.w	r3, r3, #876	; 0x36c
 800e88e:	4619      	mov	r1, r3
 800e890:	4610      	mov	r0, r2
 800e892:	f7fb fbf9 	bl	800a088 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    CO_text.setXY(200, 141);
 800e896:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e89a:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e89e:	681b      	ldr	r3, [r3, #0]
 800e8a0:	f503 736d 	add.w	r3, r3, #948	; 0x3b4
 800e8a4:	228d      	movs	r2, #141	; 0x8d
 800e8a6:	21c8      	movs	r1, #200	; 0xc8
 800e8a8:	4618      	mov	r0, r3
 800e8aa:	f7fb fa9e 	bl	8009dea <_ZN8touchgfx8Drawable5setXYEss>
    CO_text.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800e8ae:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e8b2:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e8b6:	681b      	ldr	r3, [r3, #0]
 800e8b8:	f503 746d 	add.w	r4, r3, #948	; 0x3b4
 800e8bc:	2300      	movs	r3, #0
 800e8be:	f887 314b 	strb.w	r3, [r7, #331]	; 0x14b
 800e8c2:	2300      	movs	r3, #0
 800e8c4:	f887 314a 	strb.w	r3, [r7, #330]	; 0x14a
 800e8c8:	2300      	movs	r3, #0
 800e8ca:	f887 3149 	strb.w	r3, [r7, #329]	; 0x149
 800e8ce:	f897 314b 	ldrb.w	r3, [r7, #331]	; 0x14b
 800e8d2:	041b      	lsls	r3, r3, #16
 800e8d4:	461a      	mov	r2, r3
 800e8d6:	f897 314a 	ldrb.w	r3, [r7, #330]	; 0x14a
 800e8da:	021b      	lsls	r3, r3, #8
 800e8dc:	431a      	orrs	r2, r3
 800e8de:	f897 3149 	ldrb.w	r3, [r7, #329]	; 0x149
 800e8e2:	4313      	orrs	r3, r2
 800e8e4:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800e8e8:	f107 0368 	add.w	r3, r7, #104	; 0x68
 800e8ec:	4611      	mov	r1, r2
 800e8ee:	4618      	mov	r0, r3
 800e8f0:	f7fb f978 	bl	8009be4 <_ZN8touchgfx9colortypeC1Em>
 800e8f4:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 800e8f6:	461a      	mov	r2, r3
 800e8f8:	f8c7 414c 	str.w	r4, [r7, #332]	; 0x14c
 800e8fc:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e900:	f5a3 73a0 	sub.w	r3, r3, #320	; 0x140
 800e904:	601a      	str	r2, [r3, #0]
        color = newColor;
 800e906:	f8d7 314c 	ldr.w	r3, [r7, #332]	; 0x14c
 800e90a:	f507 72ac 	add.w	r2, r7, #344	; 0x158
 800e90e:	f5a2 72a0 	sub.w	r2, r2, #320	; 0x140
 800e912:	6812      	ldr	r2, [r2, #0]
 800e914:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800e916:	bf00      	nop
    CO_text.setLinespacing(0);
 800e918:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e91c:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e920:	681b      	ldr	r3, [r3, #0]
 800e922:	f503 736d 	add.w	r3, r3, #948	; 0x3b4
 800e926:	f8c7 3154 	str.w	r3, [r7, #340]	; 0x154
 800e92a:	2300      	movs	r3, #0
 800e92c:	f8a7 3152 	strh.w	r3, [r7, #338]	; 0x152
        linespace = space;
 800e930:	f8d7 3154 	ldr.w	r3, [r7, #340]	; 0x154
 800e934:	f8b7 2152 	ldrh.w	r2, [r7, #338]	; 0x152
 800e938:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800e93a:	f8d7 3154 	ldr.w	r3, [r7, #340]	; 0x154
 800e93e:	681b      	ldr	r3, [r3, #0]
 800e940:	3384      	adds	r3, #132	; 0x84
 800e942:	681b      	ldr	r3, [r3, #0]
 800e944:	f8d7 4154 	ldr.w	r4, [r7, #340]	; 0x154
 800e948:	463a      	mov	r2, r7
 800e94a:	f8d7 1154 	ldr.w	r1, [r7, #340]	; 0x154
 800e94e:	4610      	mov	r0, r2
 800e950:	4798      	blx	r3
 800e952:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e956:	f5a3 72ac 	sub.w	r2, r3, #344	; 0x158
 800e95a:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800e95e:	ca07      	ldmia	r2, {r0, r1, r2}
 800e960:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800e964:	bf00      	nop
    CO_text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A6VB));
 800e966:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e96a:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e96e:	681b      	ldr	r3, [r3, #0]
 800e970:	f503 746d 	add.w	r4, r3, #948	; 0x3b4
 800e974:	f107 0360 	add.w	r3, r7, #96	; 0x60
 800e978:	210c      	movs	r1, #12
 800e97a:	4618      	mov	r0, r3
 800e97c:	f7fb fc1c 	bl	800a1b8 <_ZN8touchgfx9TypedTextC1Et>
 800e980:	f107 0360 	add.w	r3, r7, #96	; 0x60
 800e984:	4619      	mov	r1, r3
 800e986:	4620      	mov	r0, r4
 800e988:	f007 fc5e 	bl	8016248 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800e98c:	f107 0360 	add.w	r3, r7, #96	; 0x60
 800e990:	4618      	mov	r0, r3
 800e992:	f7fa ff3f 	bl	8009814 <_ZN8touchgfx9TypedTextD1Ev>
    add(CO_text);
 800e996:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e99a:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e99e:	681a      	ldr	r2, [r3, #0]
 800e9a0:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e9a4:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e9a8:	681b      	ldr	r3, [r3, #0]
 800e9aa:	f503 736d 	add.w	r3, r3, #948	; 0x3b4
 800e9ae:	4619      	mov	r1, r3
 800e9b0:	4610      	mov	r0, r2
 800e9b2:	f7fb fb69 	bl	800a088 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800e9b6:	f507 73ac 	add.w	r3, r7, #344	; 0x158
 800e9ba:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 800e9be:	681b      	ldr	r3, [r3, #0]
 800e9c0:	4618      	mov	r0, r3
 800e9c2:	f507 77ac 	add.w	r7, r7, #344	; 0x158
 800e9c6:	46bd      	mov	sp, r7
 800e9c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e9cc <_ZN18MainScreenViewBaseD1Ev>:

MainScreenViewBase::~MainScreenViewBase()
 800e9cc:	b580      	push	{r7, lr}
 800e9ce:	b082      	sub	sp, #8
 800e9d0:	af00      	add	r7, sp, #0
 800e9d2:	6078      	str	r0, [r7, #4]
 800e9d4:	4a28      	ldr	r2, [pc, #160]	; (800ea78 <_ZN18MainScreenViewBaseD1Ev+0xac>)
 800e9d6:	687b      	ldr	r3, [r7, #4]
 800e9d8:	601a      	str	r2, [r3, #0]
 800e9da:	687b      	ldr	r3, [r7, #4]
 800e9dc:	f503 737f 	add.w	r3, r3, #1020	; 0x3fc
 800e9e0:	4618      	mov	r0, r3
 800e9e2:	f000 fa21 	bl	800ee28 <_ZN8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>
 800e9e6:	687b      	ldr	r3, [r7, #4]
 800e9e8:	f503 736d 	add.w	r3, r3, #948	; 0x3b4
 800e9ec:	4618      	mov	r0, r3
 800e9ee:	f7fb fd37 	bl	800a460 <_ZN8touchgfx8TextAreaD1Ev>
 800e9f2:	687b      	ldr	r3, [r7, #4]
 800e9f4:	f503 735b 	add.w	r3, r3, #876	; 0x36c
 800e9f8:	4618      	mov	r0, r3
 800e9fa:	f7fb fd31 	bl	800a460 <_ZN8touchgfx8TextAreaD1Ev>
 800e9fe:	687b      	ldr	r3, [r7, #4]
 800ea00:	f503 7349 	add.w	r3, r3, #804	; 0x324
 800ea04:	4618      	mov	r0, r3
 800ea06:	f7fb fd2b 	bl	800a460 <_ZN8touchgfx8TextAreaD1Ev>
 800ea0a:	687b      	ldr	r3, [r7, #4]
 800ea0c:	f503 7337 	add.w	r3, r3, #732	; 0x2dc
 800ea10:	4618      	mov	r0, r3
 800ea12:	f7fb fd25 	bl	800a460 <_ZN8touchgfx8TextAreaD1Ev>
 800ea16:	687b      	ldr	r3, [r7, #4]
 800ea18:	f503 7325 	add.w	r3, r3, #660	; 0x294
 800ea1c:	4618      	mov	r0, r3
 800ea1e:	f7fb fd1f 	bl	800a460 <_ZN8touchgfx8TextAreaD1Ev>
 800ea22:	687b      	ldr	r3, [r7, #4]
 800ea24:	f503 7307 	add.w	r3, r3, #540	; 0x21c
 800ea28:	4618      	mov	r0, r3
 800ea2a:	f000 fa1f 	bl	800ee6c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800ea2e:	687b      	ldr	r3, [r7, #4]
 800ea30:	f503 73d2 	add.w	r3, r3, #420	; 0x1a4
 800ea34:	4618      	mov	r0, r3
 800ea36:	f000 fa19 	bl	800ee6c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800ea3a:	687b      	ldr	r3, [r7, #4]
 800ea3c:	f503 7396 	add.w	r3, r3, #300	; 0x12c
 800ea40:	4618      	mov	r0, r3
 800ea42:	f000 fa13 	bl	800ee6c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800ea46:	687b      	ldr	r3, [r7, #4]
 800ea48:	33b4      	adds	r3, #180	; 0xb4
 800ea4a:	4618      	mov	r0, r3
 800ea4c:	f000 fa0e 	bl	800ee6c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800ea50:	687b      	ldr	r3, [r7, #4]
 800ea52:	336c      	adds	r3, #108	; 0x6c
 800ea54:	4618      	mov	r0, r3
 800ea56:	f7fb fd03 	bl	800a460 <_ZN8touchgfx8TextAreaD1Ev>
 800ea5a:	687b      	ldr	r3, [r7, #4]
 800ea5c:	3340      	adds	r3, #64	; 0x40
 800ea5e:	4618      	mov	r0, r3
 800ea60:	f7fc f8b2 	bl	800abc8 <_ZN8touchgfx3BoxD1Ev>
 800ea64:	687b      	ldr	r3, [r7, #4]
 800ea66:	4618      	mov	r0, r3
 800ea68:	f7fe fff2 	bl	800da50 <_ZN8touchgfx4ViewI19MainScreenPresenterED1Ev>
{

}
 800ea6c:	687b      	ldr	r3, [r7, #4]
 800ea6e:	4618      	mov	r0, r3
 800ea70:	3708      	adds	r7, #8
 800ea72:	46bd      	mov	sp, r7
 800ea74:	bd80      	pop	{r7, pc}
 800ea76:	bf00      	nop
 800ea78:	0802e220 	.word	0x0802e220

0800ea7c <_ZN18MainScreenViewBaseD0Ev>:
MainScreenViewBase::~MainScreenViewBase()
 800ea7c:	b580      	push	{r7, lr}
 800ea7e:	b082      	sub	sp, #8
 800ea80:	af00      	add	r7, sp, #0
 800ea82:	6078      	str	r0, [r7, #4]
}
 800ea84:	6878      	ldr	r0, [r7, #4]
 800ea86:	f7ff ffa1 	bl	800e9cc <_ZN18MainScreenViewBaseD1Ev>
 800ea8a:	f240 410c 	movw	r1, #1036	; 0x40c
 800ea8e:	6878      	ldr	r0, [r7, #4]
 800ea90:	f01b fe67 	bl	802a762 <_ZdlPvj>
 800ea94:	687b      	ldr	r3, [r7, #4]
 800ea96:	4618      	mov	r0, r3
 800ea98:	3708      	adds	r7, #8
 800ea9a:	46bd      	mov	sp, r7
 800ea9c:	bd80      	pop	{r7, pc}

0800ea9e <_ZN18MainScreenViewBase11setupScreenEv>:

void MainScreenViewBase::setupScreen()
{
 800ea9e:	b480      	push	{r7}
 800eaa0:	b083      	sub	sp, #12
 800eaa2:	af00      	add	r7, sp, #0
 800eaa4:	6078      	str	r0, [r7, #4]

}
 800eaa6:	bf00      	nop
 800eaa8:	370c      	adds	r7, #12
 800eaaa:	46bd      	mov	sp, r7
 800eaac:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eab0:	4770      	bx	lr

0800eab2 <_ZN18MainScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void MainScreenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
 800eab2:	b580      	push	{r7, lr}
 800eab4:	b082      	sub	sp, #8
 800eab6:	af00      	add	r7, sp, #0
 800eab8:	6078      	str	r0, [r7, #4]
 800eaba:	6039      	str	r1, [r7, #0]
    if (&src == &Clock_button)
 800eabc:	687b      	ldr	r3, [r7, #4]
 800eabe:	33b4      	adds	r3, #180	; 0xb4
 800eac0:	683a      	ldr	r2, [r7, #0]
 800eac2:	429a      	cmp	r2, r3
 800eac4:	d106      	bne.n	800ead4 <_ZN18MainScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x22>
    {
        //MainToClock
        //When Clock_button clicked change screen to ClockScreen
        //Go to ClockScreen with screen transition towards East
        application().gotoClockScreenScreenSlideTransitionEast();
 800eac6:	6878      	ldr	r0, [r7, #4]
 800eac8:	f7fe ffb6 	bl	800da38 <_ZN18MainScreenViewBase11applicationEv>
 800eacc:	4603      	mov	r3, r0
 800eace:	4618      	mov	r0, r3
 800ead0:	f7fc fc8e 	bl	800b3f0 <_ZN23FrontendApplicationBase40gotoClockScreenScreenSlideTransitionEastEv>
    }
    if (&src == &Pressure_button)
 800ead4:	687b      	ldr	r3, [r7, #4]
 800ead6:	f503 7396 	add.w	r3, r3, #300	; 0x12c
 800eada:	683a      	ldr	r2, [r7, #0]
 800eadc:	429a      	cmp	r2, r3
 800eade:	d106      	bne.n	800eaee <_ZN18MainScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x3c>
    {
        //MainToPressure
        //When Pressure_button clicked change screen to PressureScreen
        //Go to PressureScreen with screen transition towards East
        application().gotoPressureScreenScreenSlideTransitionEast();
 800eae0:	6878      	ldr	r0, [r7, #4]
 800eae2:	f7fe ffa9 	bl	800da38 <_ZN18MainScreenViewBase11applicationEv>
 800eae6:	4603      	mov	r3, r0
 800eae8:	4618      	mov	r0, r3
 800eaea:	f7fc fd53 	bl	800b594 <_ZN23FrontendApplicationBase43gotoPressureScreenScreenSlideTransitionEastEv>
    }
    if (&src == &Temperature_button)
 800eaee:	687b      	ldr	r3, [r7, #4]
 800eaf0:	f503 7307 	add.w	r3, r3, #540	; 0x21c
 800eaf4:	683a      	ldr	r2, [r7, #0]
 800eaf6:	429a      	cmp	r2, r3
 800eaf8:	d106      	bne.n	800eb08 <_ZN18MainScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x56>
    {
        //MainToTempertature
        //When Temperature_button clicked change screen to TemperatureScreen
        //Go to TemperatureScreen with screen transition towards East
        application().gotoTemperatureScreenScreenSlideTransitionEast();
 800eafa:	6878      	ldr	r0, [r7, #4]
 800eafc:	f7fe ff9c 	bl	800da38 <_ZN18MainScreenViewBase11applicationEv>
 800eb00:	4603      	mov	r3, r0
 800eb02:	4618      	mov	r0, r3
 800eb04:	f7fc fcba 	bl	800b47c <_ZN23FrontendApplicationBase46gotoTemperatureScreenScreenSlideTransitionEastEv>
    }
    if (&src == &CO_button)
 800eb08:	687b      	ldr	r3, [r7, #4]
 800eb0a:	f503 73d2 	add.w	r3, r3, #420	; 0x1a4
 800eb0e:	683a      	ldr	r2, [r7, #0]
 800eb10:	429a      	cmp	r2, r3
 800eb12:	d106      	bne.n	800eb22 <_ZN18MainScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x70>
    {
        //MainToCO
        //When CO_button clicked change screen to COScreen
        //Go to COScreen with screen transition towards East
        application().gotoCOScreenScreenSlideTransitionEast();
 800eb14:	6878      	ldr	r0, [r7, #4]
 800eb16:	f7fe ff8f 	bl	800da38 <_ZN18MainScreenViewBase11applicationEv>
 800eb1a:	4603      	mov	r3, r0
 800eb1c:	4618      	mov	r0, r3
 800eb1e:	f7fc fd7f 	bl	800b620 <_ZN23FrontendApplicationBase37gotoCOScreenScreenSlideTransitionEastEv>
    }
}
 800eb22:	bf00      	nop
 800eb24:	3708      	adds	r7, #8
 800eb26:	46bd      	mov	sp, r7
 800eb28:	bd80      	pop	{r7, pc}
	...

0800eb2c <_ZN8touchgfx4ViewI19MainScreenPresenterEC1Ev>:
    View()
 800eb2c:	b580      	push	{r7, lr}
 800eb2e:	b082      	sub	sp, #8
 800eb30:	af00      	add	r7, sp, #0
 800eb32:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800eb34:	687b      	ldr	r3, [r7, #4]
 800eb36:	4618      	mov	r0, r3
 800eb38:	f00b ffc4 	bl	801aac4 <_ZN8touchgfx6ScreenC1Ev>
 800eb3c:	4a05      	ldr	r2, [pc, #20]	; (800eb54 <_ZN8touchgfx4ViewI19MainScreenPresenterEC1Ev+0x28>)
 800eb3e:	687b      	ldr	r3, [r7, #4]
 800eb40:	601a      	str	r2, [r3, #0]
 800eb42:	687b      	ldr	r3, [r7, #4]
 800eb44:	2200      	movs	r2, #0
 800eb46:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800eb48:	687b      	ldr	r3, [r7, #4]
 800eb4a:	4618      	mov	r0, r3
 800eb4c:	3708      	adds	r7, #8
 800eb4e:	46bd      	mov	sp, r7
 800eb50:	bd80      	pop	{r7, pc}
 800eb52:	bf00      	nop
 800eb54:	0802e308 	.word	0x0802e308

0800eb58 <_ZN8touchgfx18ClickButtonTriggerC1Ev>:
class ClickButtonTrigger : public AbstractButtonContainer
 800eb58:	b580      	push	{r7, lr}
 800eb5a:	b082      	sub	sp, #8
 800eb5c:	af00      	add	r7, sp, #0
 800eb5e:	6078      	str	r0, [r7, #4]
 800eb60:	687b      	ldr	r3, [r7, #4]
 800eb62:	4618      	mov	r0, r3
 800eb64:	f7fe fe26 	bl	800d7b4 <_ZN8touchgfx23AbstractButtonContainerC1Ev>
 800eb68:	4a03      	ldr	r2, [pc, #12]	; (800eb78 <_ZN8touchgfx18ClickButtonTriggerC1Ev+0x20>)
 800eb6a:	687b      	ldr	r3, [r7, #4]
 800eb6c:	601a      	str	r2, [r3, #0]
 800eb6e:	687b      	ldr	r3, [r7, #4]
 800eb70:	4618      	mov	r0, r3
 800eb72:	3708      	adds	r7, #8
 800eb74:	46bd      	mov	sp, r7
 800eb76:	bd80      	pop	{r7, pc}
 800eb78:	0802e33c 	.word	0x0802e33c

0800eb7c <_ZN8touchgfx18ClickButtonTriggerD1Ev>:
 800eb7c:	b580      	push	{r7, lr}
 800eb7e:	b082      	sub	sp, #8
 800eb80:	af00      	add	r7, sp, #0
 800eb82:	6078      	str	r0, [r7, #4]
 800eb84:	4a05      	ldr	r2, [pc, #20]	; (800eb9c <_ZN8touchgfx18ClickButtonTriggerD1Ev+0x20>)
 800eb86:	687b      	ldr	r3, [r7, #4]
 800eb88:	601a      	str	r2, [r3, #0]
 800eb8a:	687b      	ldr	r3, [r7, #4]
 800eb8c:	4618      	mov	r0, r3
 800eb8e:	f7fe ff31 	bl	800d9f4 <_ZN8touchgfx23AbstractButtonContainerD1Ev>
 800eb92:	687b      	ldr	r3, [r7, #4]
 800eb94:	4618      	mov	r0, r3
 800eb96:	3708      	adds	r7, #8
 800eb98:	46bd      	mov	sp, r7
 800eb9a:	bd80      	pop	{r7, pc}
 800eb9c:	0802e33c 	.word	0x0802e33c

0800eba0 <_ZN8touchgfx18ClickButtonTriggerD0Ev>:
 800eba0:	b580      	push	{r7, lr}
 800eba2:	b082      	sub	sp, #8
 800eba4:	af00      	add	r7, sp, #0
 800eba6:	6078      	str	r0, [r7, #4]
 800eba8:	6878      	ldr	r0, [r7, #4]
 800ebaa:	f7ff ffe7 	bl	800eb7c <_ZN8touchgfx18ClickButtonTriggerD1Ev>
 800ebae:	2134      	movs	r1, #52	; 0x34
 800ebb0:	6878      	ldr	r0, [r7, #4]
 800ebb2:	f01b fdd6 	bl	802a762 <_ZdlPvj>
 800ebb6:	687b      	ldr	r3, [r7, #4]
 800ebb8:	4618      	mov	r0, r3
 800ebba:	3708      	adds	r7, #8
 800ebbc:	46bd      	mov	sp, r7
 800ebbe:	bd80      	pop	{r7, pc}

0800ebc0 <_ZN8touchgfx13BoxWithBorderD1Ev>:
class BoxWithBorder : public Box
 800ebc0:	b580      	push	{r7, lr}
 800ebc2:	b082      	sub	sp, #8
 800ebc4:	af00      	add	r7, sp, #0
 800ebc6:	6078      	str	r0, [r7, #4]
 800ebc8:	4a05      	ldr	r2, [pc, #20]	; (800ebe0 <_ZN8touchgfx13BoxWithBorderD1Ev+0x20>)
 800ebca:	687b      	ldr	r3, [r7, #4]
 800ebcc:	601a      	str	r2, [r3, #0]
 800ebce:	687b      	ldr	r3, [r7, #4]
 800ebd0:	4618      	mov	r0, r3
 800ebd2:	f7fb fff9 	bl	800abc8 <_ZN8touchgfx3BoxD1Ev>
 800ebd6:	687b      	ldr	r3, [r7, #4]
 800ebd8:	4618      	mov	r0, r3
 800ebda:	3708      	adds	r7, #8
 800ebdc:	46bd      	mov	sp, r7
 800ebde:	bd80      	pop	{r7, pc}
 800ebe0:	0802f7b4 	.word	0x0802f7b4

0800ebe4 <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800ebe4:	b580      	push	{r7, lr}
 800ebe6:	b082      	sub	sp, #8
 800ebe8:	af00      	add	r7, sp, #0
 800ebea:	6078      	str	r0, [r7, #4]
 800ebec:	6878      	ldr	r0, [r7, #4]
 800ebee:	f7ff ffe7 	bl	800ebc0 <_ZN8touchgfx13BoxWithBorderD1Ev>
 800ebf2:	2134      	movs	r1, #52	; 0x34
 800ebf4:	6878      	ldr	r0, [r7, #4]
 800ebf6:	f01b fdb4 	bl	802a762 <_ZdlPvj>
 800ebfa:	687b      	ldr	r3, [r7, #4]
 800ebfc:	4618      	mov	r0, r3
 800ebfe:	3708      	adds	r7, #8
 800ec00:	46bd      	mov	sp, r7
 800ec02:	bd80      	pop	{r7, pc}

0800ec04 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>:
 */
template <class T>
class BoxWithBorderButtonStyle : public T
{
public:
    BoxWithBorderButtonStyle()
 800ec04:	b580      	push	{r7, lr}
 800ec06:	b082      	sub	sp, #8
 800ec08:	af00      	add	r7, sp, #0
 800ec0a:	6078      	str	r0, [r7, #4]
        : T(), up(), down()
 800ec0c:	687b      	ldr	r3, [r7, #4]
 800ec0e:	4618      	mov	r0, r3
 800ec10:	2334      	movs	r3, #52	; 0x34
 800ec12:	461a      	mov	r2, r3
 800ec14:	2100      	movs	r1, #0
 800ec16:	f01c fd9a 	bl	802b74e <memset>
 800ec1a:	687b      	ldr	r3, [r7, #4]
 800ec1c:	4618      	mov	r0, r3
 800ec1e:	f7ff ff9b 	bl	800eb58 <_ZN8touchgfx18ClickButtonTriggerC1Ev>
 800ec22:	4a17      	ldr	r2, [pc, #92]	; (800ec80 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x7c>)
 800ec24:	687b      	ldr	r3, [r7, #4]
 800ec26:	601a      	str	r2, [r3, #0]
 800ec28:	687b      	ldr	r3, [r7, #4]
 800ec2a:	3334      	adds	r3, #52	; 0x34
 800ec2c:	4618      	mov	r0, r3
 800ec2e:	f7fe fe5b 	bl	800d8e8 <_ZN8touchgfx13BoxWithBorderC1Ev>
 800ec32:	687b      	ldr	r3, [r7, #4]
 800ec34:	3368      	adds	r3, #104	; 0x68
 800ec36:	4618      	mov	r0, r3
 800ec38:	f7fe fd60 	bl	800d6fc <_ZN8touchgfx9colortypeC1Ev>
 800ec3c:	687b      	ldr	r3, [r7, #4]
 800ec3e:	336c      	adds	r3, #108	; 0x6c
 800ec40:	4618      	mov	r0, r3
 800ec42:	f7fe fd5b 	bl	800d6fc <_ZN8touchgfx9colortypeC1Ev>
 800ec46:	687b      	ldr	r3, [r7, #4]
 800ec48:	3370      	adds	r3, #112	; 0x70
 800ec4a:	4618      	mov	r0, r3
 800ec4c:	f7fe fd56 	bl	800d6fc <_ZN8touchgfx9colortypeC1Ev>
 800ec50:	687b      	ldr	r3, [r7, #4]
 800ec52:	3374      	adds	r3, #116	; 0x74
 800ec54:	4618      	mov	r0, r3
 800ec56:	f7fe fd51 	bl	800d6fc <_ZN8touchgfx9colortypeC1Ev>
    {
        borderBox.setXY(0, 0);
 800ec5a:	687b      	ldr	r3, [r7, #4]
 800ec5c:	3334      	adds	r3, #52	; 0x34
 800ec5e:	2200      	movs	r2, #0
 800ec60:	2100      	movs	r1, #0
 800ec62:	4618      	mov	r0, r3
 800ec64:	f7fb f8c1 	bl	8009dea <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 800ec68:	687a      	ldr	r2, [r7, #4]
 800ec6a:	687b      	ldr	r3, [r7, #4]
 800ec6c:	3334      	adds	r3, #52	; 0x34
 800ec6e:	4619      	mov	r1, r3
 800ec70:	4610      	mov	r0, r2
 800ec72:	f004 f9a1 	bl	8012fb8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800ec76:	687b      	ldr	r3, [r7, #4]
 800ec78:	4618      	mov	r0, r3
 800ec7a:	3708      	adds	r7, #8
 800ec7c:	46bd      	mov	sp, r7
 800ec7e:	bd80      	pop	{r7, pc}
 800ec80:	0802e26c 	.word	0x0802e26c

0800ec84 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvEC1Ev>:
class GenericCallback<T1, void, void>
 800ec84:	b480      	push	{r7}
 800ec86:	b083      	sub	sp, #12
 800ec88:	af00      	add	r7, sp, #0
 800ec8a:	6078      	str	r0, [r7, #4]
 800ec8c:	4a04      	ldr	r2, [pc, #16]	; (800eca0 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvEC1Ev+0x1c>)
 800ec8e:	687b      	ldr	r3, [r7, #4]
 800ec90:	601a      	str	r2, [r3, #0]
 800ec92:	687b      	ldr	r3, [r7, #4]
 800ec94:	4618      	mov	r0, r3
 800ec96:	370c      	adds	r7, #12
 800ec98:	46bd      	mov	sp, r7
 800ec9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ec9e:	4770      	bx	lr
 800eca0:	0802e3d8 	.word	0x0802e3d8

0800eca4 <_ZN8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800eca4:	b580      	push	{r7, lr}
 800eca6:	b084      	sub	sp, #16
 800eca8:	af00      	add	r7, sp, #0
 800ecaa:	60f8      	str	r0, [r7, #12]
 800ecac:	60b9      	str	r1, [r7, #8]
 800ecae:	4639      	mov	r1, r7
 800ecb0:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800ecb4:	68fb      	ldr	r3, [r7, #12]
 800ecb6:	4618      	mov	r0, r3
 800ecb8:	f7ff ffe4 	bl	800ec84 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvEC1Ev>
 800ecbc:	4a08      	ldr	r2, [pc, #32]	; (800ece0 <_ZN8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800ecbe:	68fb      	ldr	r3, [r7, #12]
 800ecc0:	601a      	str	r2, [r3, #0]
 800ecc2:	68fb      	ldr	r3, [r7, #12]
 800ecc4:	68ba      	ldr	r2, [r7, #8]
 800ecc6:	605a      	str	r2, [r3, #4]
 800ecc8:	68fb      	ldr	r3, [r7, #12]
 800ecca:	3308      	adds	r3, #8
 800eccc:	463a      	mov	r2, r7
 800ecce:	e892 0003 	ldmia.w	r2, {r0, r1}
 800ecd2:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800ecd6:	68fb      	ldr	r3, [r7, #12]
 800ecd8:	4618      	mov	r0, r3
 800ecda:	3710      	adds	r7, #16
 800ecdc:	46bd      	mov	sp, r7
 800ecde:	bd80      	pop	{r7, pc}
 800ece0:	0802e254 	.word	0x0802e254

0800ece4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>:
     * @param  width  The width of this BoxWithBorderButtonStyle.
     * @param  height The height of this BoxWithBorderButtonStyle.
     *
     * @note Changing this does not automatically yield a redraw.
     */
    void setBoxWithBorderPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800ece4:	b590      	push	{r4, r7, lr}
 800ece6:	b087      	sub	sp, #28
 800ece8:	af02      	add	r7, sp, #8
 800ecea:	60f8      	str	r0, [r7, #12]
 800ecec:	4608      	mov	r0, r1
 800ecee:	4611      	mov	r1, r2
 800ecf0:	461a      	mov	r2, r3
 800ecf2:	4603      	mov	r3, r0
 800ecf4:	817b      	strh	r3, [r7, #10]
 800ecf6:	460b      	mov	r3, r1
 800ecf8:	813b      	strh	r3, [r7, #8]
 800ecfa:	4613      	mov	r3, r2
 800ecfc:	80fb      	strh	r3, [r7, #6]
    {
        borderBox.setPosition(x, y, width, height);
 800ecfe:	68fb      	ldr	r3, [r7, #12]
 800ed00:	f103 0034 	add.w	r0, r3, #52	; 0x34
 800ed04:	f9b7 4006 	ldrsh.w	r4, [r7, #6]
 800ed08:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 800ed0c:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 800ed10:	f9b7 3020 	ldrsh.w	r3, [r7, #32]
 800ed14:	9300      	str	r3, [sp, #0]
 800ed16:	4623      	mov	r3, r4
 800ed18:	f7fb f828 	bl	8009d6c <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 800ed1c:	bf00      	nop
 800ed1e:	3714      	adds	r7, #20
 800ed20:	46bd      	mov	sp, r7
 800ed22:	bd90      	pop	{r4, r7, pc}

0800ed24 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>:
    /**
     * Sets border size.
     *
     * @param  size The size.
     */
    void setBorderSize(uint8_t size)
 800ed24:	b580      	push	{r7, lr}
 800ed26:	b082      	sub	sp, #8
 800ed28:	af00      	add	r7, sp, #0
 800ed2a:	6078      	str	r0, [r7, #4]
 800ed2c:	460b      	mov	r3, r1
 800ed2e:	70fb      	strb	r3, [r7, #3]
    {
        borderBox.setBorderSize(size);
 800ed30:	687b      	ldr	r3, [r7, #4]
 800ed32:	3334      	adds	r3, #52	; 0x34
 800ed34:	78fa      	ldrb	r2, [r7, #3]
 800ed36:	b292      	uxth	r2, r2
 800ed38:	4611      	mov	r1, r2
 800ed3a:	4618      	mov	r0, r3
 800ed3c:	f7fe fdfe 	bl	800d93c <_ZN8touchgfx13BoxWithBorder13setBorderSizeEt>
    }
 800ed40:	bf00      	nop
 800ed42:	3708      	adds	r7, #8
 800ed44:	46bd      	mov	sp, r7
 800ed46:	bd80      	pop	{r7, pc}

0800ed48 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>:
    void setBoxWithBorderColors(const colortype colorReleased, const colortype colorPressed, const colortype borderColorReleased, const colortype borderColorPressed)
 800ed48:	b580      	push	{r7, lr}
 800ed4a:	b084      	sub	sp, #16
 800ed4c:	af00      	add	r7, sp, #0
 800ed4e:	60f8      	str	r0, [r7, #12]
 800ed50:	60b9      	str	r1, [r7, #8]
 800ed52:	607a      	str	r2, [r7, #4]
 800ed54:	603b      	str	r3, [r7, #0]
        up = colorReleased;
 800ed56:	68fb      	ldr	r3, [r7, #12]
 800ed58:	68ba      	ldr	r2, [r7, #8]
 800ed5a:	669a      	str	r2, [r3, #104]	; 0x68
        down = colorPressed;
 800ed5c:	68fb      	ldr	r3, [r7, #12]
 800ed5e:	687a      	ldr	r2, [r7, #4]
 800ed60:	66da      	str	r2, [r3, #108]	; 0x6c
        borderUp = borderColorReleased;
 800ed62:	68fb      	ldr	r3, [r7, #12]
 800ed64:	683a      	ldr	r2, [r7, #0]
 800ed66:	671a      	str	r2, [r3, #112]	; 0x70
        borderDown = borderColorPressed;
 800ed68:	68fb      	ldr	r3, [r7, #12]
 800ed6a:	69ba      	ldr	r2, [r7, #24]
 800ed6c:	675a      	str	r2, [r3, #116]	; 0x74
        handlePressedUpdated();
 800ed6e:	68fb      	ldr	r3, [r7, #12]
 800ed70:	681b      	ldr	r3, [r3, #0]
 800ed72:	338c      	adds	r3, #140	; 0x8c
 800ed74:	681b      	ldr	r3, [r3, #0]
 800ed76:	68f8      	ldr	r0, [r7, #12]
 800ed78:	4798      	blx	r3
    }
 800ed7a:	bf00      	nop
 800ed7c:	3710      	adds	r7, #16
 800ed7e:	46bd      	mov	sp, r7
 800ed80:	bd80      	pop	{r7, pc}
	...

0800ed84 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev>:
    virtual ~GenericCallback()
 800ed84:	b480      	push	{r7}
 800ed86:	b083      	sub	sp, #12
 800ed88:	af00      	add	r7, sp, #0
 800ed8a:	6078      	str	r0, [r7, #4]
    }
 800ed8c:	4a04      	ldr	r2, [pc, #16]	; (800eda0 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev+0x1c>)
 800ed8e:	687b      	ldr	r3, [r7, #4]
 800ed90:	601a      	str	r2, [r3, #0]
 800ed92:	687b      	ldr	r3, [r7, #4]
 800ed94:	4618      	mov	r0, r3
 800ed96:	370c      	adds	r7, #12
 800ed98:	46bd      	mov	sp, r7
 800ed9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ed9e:	4770      	bx	lr
 800eda0:	0802e3d8 	.word	0x0802e3d8

0800eda4 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED0Ev>:
    virtual ~GenericCallback()
 800eda4:	b580      	push	{r7, lr}
 800eda6:	b082      	sub	sp, #8
 800eda8:	af00      	add	r7, sp, #0
 800edaa:	6078      	str	r0, [r7, #4]
    }
 800edac:	6878      	ldr	r0, [r7, #4]
 800edae:	f7ff ffe9 	bl	800ed84 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev>
 800edb2:	2104      	movs	r1, #4
 800edb4:	6878      	ldr	r0, [r7, #4]
 800edb6:	f01b fcd4 	bl	802a762 <_ZdlPvj>
 800edba:	687b      	ldr	r3, [r7, #4]
 800edbc:	4618      	mov	r0, r3
 800edbe:	3708      	adds	r7, #8
 800edc0:	46bd      	mov	sp, r7
 800edc2:	bd80      	pop	{r7, pc}

0800edc4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
    colortype down;          ///< The down
    colortype borderUp;      ///< The border up
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
 800edc4:	b590      	push	{r4, r7, lr}
 800edc6:	b083      	sub	sp, #12
 800edc8:	af00      	add	r7, sp, #0
 800edca:	6078      	str	r0, [r7, #4]
    {
        borderBox.setColor(T::getPressed() ? down : up);
 800edcc:	687b      	ldr	r3, [r7, #4]
 800edce:	f103 0434 	add.w	r4, r3, #52	; 0x34
 800edd2:	687b      	ldr	r3, [r7, #4]
 800edd4:	4618      	mov	r0, r3
 800edd6:	f7fe fd23 	bl	800d820 <_ZN8touchgfx23AbstractButtonContainer10getPressedEv>
 800edda:	4603      	mov	r3, r0
 800eddc:	2b00      	cmp	r3, #0
 800edde:	d002      	beq.n	800ede6 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x22>
 800ede0:	687b      	ldr	r3, [r7, #4]
 800ede2:	336c      	adds	r3, #108	; 0x6c
 800ede4:	e001      	b.n	800edea <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x26>
 800ede6:	687b      	ldr	r3, [r7, #4]
 800ede8:	3368      	adds	r3, #104	; 0x68
 800edea:	6819      	ldr	r1, [r3, #0]
 800edec:	4620      	mov	r0, r4
 800edee:	f7fb f9d5 	bl	800a19c <_ZN8touchgfx3Box8setColorENS_9colortypeE>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 800edf2:	687b      	ldr	r3, [r7, #4]
 800edf4:	f103 0434 	add.w	r4, r3, #52	; 0x34
 800edf8:	687b      	ldr	r3, [r7, #4]
 800edfa:	4618      	mov	r0, r3
 800edfc:	f7fe fd10 	bl	800d820 <_ZN8touchgfx23AbstractButtonContainer10getPressedEv>
 800ee00:	4603      	mov	r3, r0
 800ee02:	2b00      	cmp	r3, #0
 800ee04:	d002      	beq.n	800ee0c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x48>
 800ee06:	687b      	ldr	r3, [r7, #4]
 800ee08:	3374      	adds	r3, #116	; 0x74
 800ee0a:	e001      	b.n	800ee10 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x4c>
 800ee0c:	687b      	ldr	r3, [r7, #4]
 800ee0e:	3370      	adds	r3, #112	; 0x70
 800ee10:	6819      	ldr	r1, [r3, #0]
 800ee12:	4620      	mov	r0, r4
 800ee14:	f7fe fd84 	bl	800d920 <_ZN8touchgfx13BoxWithBorder14setBorderColorENS_9colortypeE>
        T::handlePressedUpdated();
 800ee18:	687b      	ldr	r3, [r7, #4]
 800ee1a:	4618      	mov	r0, r3
 800ee1c:	f7fe fd4f 	bl	800d8be <_ZN8touchgfx23AbstractButtonContainer20handlePressedUpdatedEv>
    }
 800ee20:	bf00      	nop
 800ee22:	370c      	adds	r7, #12
 800ee24:	46bd      	mov	sp, r7
 800ee26:	bd90      	pop	{r4, r7, pc}

0800ee28 <_ZN8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800ee28:	b580      	push	{r7, lr}
 800ee2a:	b082      	sub	sp, #8
 800ee2c:	af00      	add	r7, sp, #0
 800ee2e:	6078      	str	r0, [r7, #4]
 800ee30:	4a05      	ldr	r2, [pc, #20]	; (800ee48 <_ZN8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev+0x20>)
 800ee32:	687b      	ldr	r3, [r7, #4]
 800ee34:	601a      	str	r2, [r3, #0]
 800ee36:	687b      	ldr	r3, [r7, #4]
 800ee38:	4618      	mov	r0, r3
 800ee3a:	f7ff ffa3 	bl	800ed84 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev>
 800ee3e:	687b      	ldr	r3, [r7, #4]
 800ee40:	4618      	mov	r0, r3
 800ee42:	3708      	adds	r7, #8
 800ee44:	46bd      	mov	sp, r7
 800ee46:	bd80      	pop	{r7, pc}
 800ee48:	0802e254 	.word	0x0802e254

0800ee4c <_ZN8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 800ee4c:	b580      	push	{r7, lr}
 800ee4e:	b082      	sub	sp, #8
 800ee50:	af00      	add	r7, sp, #0
 800ee52:	6078      	str	r0, [r7, #4]
 800ee54:	6878      	ldr	r0, [r7, #4]
 800ee56:	f7ff ffe7 	bl	800ee28 <_ZN8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>
 800ee5a:	2110      	movs	r1, #16
 800ee5c:	6878      	ldr	r0, [r7, #4]
 800ee5e:	f01b fc80 	bl	802a762 <_ZdlPvj>
 800ee62:	687b      	ldr	r3, [r7, #4]
 800ee64:	4618      	mov	r0, r3
 800ee66:	3708      	adds	r7, #8
 800ee68:	46bd      	mov	sp, r7
 800ee6a:	bd80      	pop	{r7, pc}

0800ee6c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
class BoxWithBorderButtonStyle : public T
 800ee6c:	b580      	push	{r7, lr}
 800ee6e:	b082      	sub	sp, #8
 800ee70:	af00      	add	r7, sp, #0
 800ee72:	6078      	str	r0, [r7, #4]
 800ee74:	4a08      	ldr	r2, [pc, #32]	; (800ee98 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev+0x2c>)
 800ee76:	687b      	ldr	r3, [r7, #4]
 800ee78:	601a      	str	r2, [r3, #0]
 800ee7a:	687b      	ldr	r3, [r7, #4]
 800ee7c:	3334      	adds	r3, #52	; 0x34
 800ee7e:	4618      	mov	r0, r3
 800ee80:	f7ff fe9e 	bl	800ebc0 <_ZN8touchgfx13BoxWithBorderD1Ev>
 800ee84:	687b      	ldr	r3, [r7, #4]
 800ee86:	4618      	mov	r0, r3
 800ee88:	f7ff fe78 	bl	800eb7c <_ZN8touchgfx18ClickButtonTriggerD1Ev>
 800ee8c:	687b      	ldr	r3, [r7, #4]
 800ee8e:	4618      	mov	r0, r3
 800ee90:	3708      	adds	r7, #8
 800ee92:	46bd      	mov	sp, r7
 800ee94:	bd80      	pop	{r7, pc}
 800ee96:	bf00      	nop
 800ee98:	0802e26c 	.word	0x0802e26c

0800ee9c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
 800ee9c:	b580      	push	{r7, lr}
 800ee9e:	b082      	sub	sp, #8
 800eea0:	af00      	add	r7, sp, #0
 800eea2:	6078      	str	r0, [r7, #4]
 800eea4:	6878      	ldr	r0, [r7, #4]
 800eea6:	f7ff ffe1 	bl	800ee6c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800eeaa:	2178      	movs	r1, #120	; 0x78
 800eeac:	6878      	ldr	r0, [r7, #4]
 800eeae:	f01b fc58 	bl	802a762 <_ZdlPvj>
 800eeb2:	687b      	ldr	r3, [r7, #4]
 800eeb4:	4618      	mov	r0, r3
 800eeb6:	3708      	adds	r7, #8
 800eeb8:	46bd      	mov	sp, r7
 800eeba:	bd80      	pop	{r7, pc}

0800eebc <_ZN8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800eebc:	b580      	push	{r7, lr}
 800eebe:	b082      	sub	sp, #8
 800eec0:	af00      	add	r7, sp, #0
 800eec2:	6078      	str	r0, [r7, #4]
 800eec4:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800eec6:	687b      	ldr	r3, [r7, #4]
 800eec8:	685b      	ldr	r3, [r3, #4]
 800eeca:	687a      	ldr	r2, [r7, #4]
 800eecc:	68d2      	ldr	r2, [r2, #12]
 800eece:	1052      	asrs	r2, r2, #1
 800eed0:	1898      	adds	r0, r3, r2
 800eed2:	687b      	ldr	r3, [r7, #4]
 800eed4:	68db      	ldr	r3, [r3, #12]
 800eed6:	f003 0301 	and.w	r3, r3, #1
 800eeda:	2b00      	cmp	r3, #0
 800eedc:	d102      	bne.n	800eee4 <_ZN8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x28>
 800eede:	687b      	ldr	r3, [r7, #4]
 800eee0:	689b      	ldr	r3, [r3, #8]
 800eee2:	e00a      	b.n	800eefa <_ZN8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x3e>
 800eee4:	687b      	ldr	r3, [r7, #4]
 800eee6:	685b      	ldr	r3, [r3, #4]
 800eee8:	687a      	ldr	r2, [r7, #4]
 800eeea:	68d2      	ldr	r2, [r2, #12]
 800eeec:	1052      	asrs	r2, r2, #1
 800eeee:	4413      	add	r3, r2
 800eef0:	681b      	ldr	r3, [r3, #0]
 800eef2:	687a      	ldr	r2, [r7, #4]
 800eef4:	6892      	ldr	r2, [r2, #8]
 800eef6:	4413      	add	r3, r2
 800eef8:	681b      	ldr	r3, [r3, #0]
 800eefa:	6839      	ldr	r1, [r7, #0]
 800eefc:	4798      	blx	r3
    }
 800eefe:	bf00      	nop
 800ef00:	3708      	adds	r7, #8
 800ef02:	46bd      	mov	sp, r7
 800ef04:	bd80      	pop	{r7, pc}

0800ef06 <_ZNK8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 800ef06:	b480      	push	{r7}
 800ef08:	b083      	sub	sp, #12
 800ef0a:	af00      	add	r7, sp, #0
 800ef0c:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800ef0e:	687b      	ldr	r3, [r7, #4]
 800ef10:	685b      	ldr	r3, [r3, #4]
 800ef12:	2b00      	cmp	r3, #0
 800ef14:	d010      	beq.n	800ef38 <_ZNK8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x32>
 800ef16:	687b      	ldr	r3, [r7, #4]
 800ef18:	689b      	ldr	r3, [r3, #8]
 800ef1a:	2b00      	cmp	r3, #0
 800ef1c:	d107      	bne.n	800ef2e <_ZNK8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x28>
 800ef1e:	687b      	ldr	r3, [r7, #4]
 800ef20:	68db      	ldr	r3, [r3, #12]
 800ef22:	f003 0301 	and.w	r3, r3, #1
 800ef26:	2b00      	cmp	r3, #0
 800ef28:	d101      	bne.n	800ef2e <_ZNK8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x28>
 800ef2a:	2301      	movs	r3, #1
 800ef2c:	e000      	b.n	800ef30 <_ZNK8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x2a>
 800ef2e:	2300      	movs	r3, #0
 800ef30:	2b01      	cmp	r3, #1
 800ef32:	d001      	beq.n	800ef38 <_ZNK8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x32>
 800ef34:	2301      	movs	r3, #1
 800ef36:	e000      	b.n	800ef3a <_ZNK8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x34>
 800ef38:	2300      	movs	r3, #0
    }
 800ef3a:	4618      	mov	r0, r3
 800ef3c:	370c      	adds	r7, #12
 800ef3e:	46bd      	mov	sp, r7
 800ef40:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ef44:	4770      	bx	lr

0800ef46 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:

    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
 800ef46:	b590      	push	{r4, r7, lr}
 800ef48:	b083      	sub	sp, #12
 800ef4a:	af00      	add	r7, sp, #0
 800ef4c:	6078      	str	r0, [r7, #4]
    {
        borderBox.setAlpha(T::getAlpha());
 800ef4e:	687b      	ldr	r3, [r7, #4]
 800ef50:	f103 0434 	add.w	r4, r3, #52	; 0x34
 800ef54:	687b      	ldr	r3, [r7, #4]
 800ef56:	4618      	mov	r0, r3
 800ef58:	f7fe fc6f 	bl	800d83a <_ZNK8touchgfx23AbstractButtonContainer8getAlphaEv>
 800ef5c:	4603      	mov	r3, r0
 800ef5e:	4619      	mov	r1, r3
 800ef60:	4620      	mov	r0, r4
 800ef62:	f7fe fc17 	bl	800d794 <_ZN8touchgfx3Box8setAlphaEh>
        T::handleAlphaUpdated();
 800ef66:	687b      	ldr	r3, [r7, #4]
 800ef68:	4618      	mov	r0, r3
 800ef6a:	f7fe fcb2 	bl	800d8d2 <_ZN8touchgfx23AbstractButtonContainer18handleAlphaUpdatedEv>
    }
 800ef6e:	bf00      	nop
 800ef70:	370c      	adds	r7, #12
 800ef72:	46bd      	mov	sp, r7
 800ef74:	bd90      	pop	{r4, r7, pc}

0800ef76 <_ZN22PressureScreenViewBase11applicationEv>:
    PressureScreenViewBase();
    virtual ~PressureScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
 800ef76:	b580      	push	{r7, lr}
 800ef78:	b082      	sub	sp, #8
 800ef7a:	af00      	add	r7, sp, #0
 800ef7c:	6078      	str	r0, [r7, #4]
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800ef7e:	f00a f993 	bl	80192a8 <_ZN8touchgfx11Application11getInstanceEv>
 800ef82:	4603      	mov	r3, r0
    }
 800ef84:	4618      	mov	r0, r3
 800ef86:	3708      	adds	r7, #8
 800ef88:	46bd      	mov	sp, r7
 800ef8a:	bd80      	pop	{r7, pc}

0800ef8c <_ZN8touchgfx4ViewI23PressureScreenPresenterED1Ev>:
class View : public Screen
 800ef8c:	b580      	push	{r7, lr}
 800ef8e:	b082      	sub	sp, #8
 800ef90:	af00      	add	r7, sp, #0
 800ef92:	6078      	str	r0, [r7, #4]
 800ef94:	4a05      	ldr	r2, [pc, #20]	; (800efac <_ZN8touchgfx4ViewI23PressureScreenPresenterED1Ev+0x20>)
 800ef96:	687b      	ldr	r3, [r7, #4]
 800ef98:	601a      	str	r2, [r3, #0]
 800ef9a:	687b      	ldr	r3, [r7, #4]
 800ef9c:	4618      	mov	r0, r3
 800ef9e:	f7fb f81b 	bl	8009fd8 <_ZN8touchgfx6ScreenD1Ev>
 800efa2:	687b      	ldr	r3, [r7, #4]
 800efa4:	4618      	mov	r0, r3
 800efa6:	3708      	adds	r7, #8
 800efa8:	46bd      	mov	sp, r7
 800efaa:	bd80      	pop	{r7, pc}
 800efac:	0802e4d8 	.word	0x0802e4d8

0800efb0 <_ZN8touchgfx4ViewI23PressureScreenPresenterED0Ev>:
 800efb0:	b580      	push	{r7, lr}
 800efb2:	b082      	sub	sp, #8
 800efb4:	af00      	add	r7, sp, #0
 800efb6:	6078      	str	r0, [r7, #4]
 800efb8:	6878      	ldr	r0, [r7, #4]
 800efba:	f7ff ffe7 	bl	800ef8c <_ZN8touchgfx4ViewI23PressureScreenPresenterED1Ev>
 800efbe:	2140      	movs	r1, #64	; 0x40
 800efc0:	6878      	ldr	r0, [r7, #4]
 800efc2:	f01b fbce 	bl	802a762 <_ZdlPvj>
 800efc6:	687b      	ldr	r3, [r7, #4]
 800efc8:	4618      	mov	r0, r3
 800efca:	3708      	adds	r7, #8
 800efcc:	46bd      	mov	sp, r7
 800efce:	bd80      	pop	{r7, pc}

0800efd0 <_ZN22PressureScreenViewBaseC1Ev>:
#include <gui_generated/pressurescreen_screen/PressureScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

PressureScreenViewBase::PressureScreenViewBase() :
 800efd0:	b590      	push	{r4, r7, lr}
 800efd2:	b0a5      	sub	sp, #148	; 0x94
 800efd4:	af02      	add	r7, sp, #8
 800efd6:	6178      	str	r0, [r7, #20]
    buttonCallback(this, &PressureScreenViewBase::buttonCallbackHandler)
 800efd8:	697b      	ldr	r3, [r7, #20]
 800efda:	4618      	mov	r0, r3
 800efdc:	f000 fa9a 	bl	800f514 <_ZN8touchgfx4ViewI23PressureScreenPresenterEC1Ev>
 800efe0:	4ad6      	ldr	r2, [pc, #856]	; (800f33c <_ZN22PressureScreenViewBaseC1Ev+0x36c>)
 800efe2:	697b      	ldr	r3, [r7, #20]
 800efe4:	601a      	str	r2, [r3, #0]
 800efe6:	697b      	ldr	r3, [r7, #20]
 800efe8:	3340      	adds	r3, #64	; 0x40
 800efea:	4618      	mov	r0, r3
 800efec:	f7fb f8b2 	bl	800a154 <_ZN8touchgfx3BoxC1Ev>
 800eff0:	697b      	ldr	r3, [r7, #20]
 800eff2:	336c      	adds	r3, #108	; 0x6c
 800eff4:	4618      	mov	r0, r3
 800eff6:	f007 fd3d 	bl	8016a74 <_ZN8touchgfx14ButtonWithIconC1Ev>
 800effa:	697b      	ldr	r3, [r7, #20]
 800effc:	33a8      	adds	r3, #168	; 0xa8
 800effe:	4618      	mov	r0, r3
 800f000:	f007 f9b0 	bl	8016364 <_ZN8touchgfx5GaugeC1Ev>
 800f004:	697b      	ldr	r3, [r7, #20]
 800f006:	f503 7312 	add.w	r3, r3, #584	; 0x248
 800f00a:	4618      	mov	r0, r3
 800f00c:	f7fb f8ea 	bl	800a1e4 <_ZN8touchgfx8TextAreaC1Ev>
 800f010:	697b      	ldr	r3, [r7, #20]
 800f012:	f503 7324 	add.w	r3, r3, #656	; 0x290
 800f016:	4618      	mov	r0, r3
 800f018:	f7fd fefe 	bl	800ce18 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800f01c:	697b      	ldr	r3, [r7, #20]
 800f01e:	f503 703a 	add.w	r0, r3, #744	; 0x2e8
 800f022:	4bc7      	ldr	r3, [pc, #796]	; (800f340 <_ZN22PressureScreenViewBaseC1Ev+0x370>)
 800f024:	623b      	str	r3, [r7, #32]
 800f026:	2300      	movs	r3, #0
 800f028:	627b      	str	r3, [r7, #36]	; 0x24
 800f02a:	f107 0320 	add.w	r3, r7, #32
 800f02e:	cb0c      	ldmia	r3, {r2, r3}
 800f030:	6979      	ldr	r1, [r7, #20]
 800f032:	f000 fa85 	bl	800f540 <_ZN8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>
{
    __background.setPosition(0, 0, 320, 240);
 800f036:	697b      	ldr	r3, [r7, #20]
 800f038:	f103 0040 	add.w	r0, r3, #64	; 0x40
 800f03c:	23f0      	movs	r3, #240	; 0xf0
 800f03e:	9300      	str	r3, [sp, #0]
 800f040:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800f044:	2200      	movs	r2, #0
 800f046:	2100      	movs	r1, #0
 800f048:	f7fa fe90 	bl	8009d6c <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800f04c:	697b      	ldr	r3, [r7, #20]
 800f04e:	f103 0440 	add.w	r4, r3, #64	; 0x40
 800f052:	2300      	movs	r3, #0
 800f054:	f887 3064 	strb.w	r3, [r7, #100]	; 0x64
 800f058:	2300      	movs	r3, #0
 800f05a:	f887 3063 	strb.w	r3, [r7, #99]	; 0x63
 800f05e:	2300      	movs	r3, #0
 800f060:	f887 3062 	strb.w	r3, [r7, #98]	; 0x62
 800f064:	f897 3064 	ldrb.w	r3, [r7, #100]	; 0x64
 800f068:	041b      	lsls	r3, r3, #16
 800f06a:	461a      	mov	r2, r3
 800f06c:	f897 3063 	ldrb.w	r3, [r7, #99]	; 0x63
 800f070:	021b      	lsls	r3, r3, #8
 800f072:	431a      	orrs	r2, r3
 800f074:	f897 3062 	ldrb.w	r3, [r7, #98]	; 0x62
 800f078:	4313      	orrs	r3, r2
 800f07a:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800f07e:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 800f082:	4611      	mov	r1, r2
 800f084:	4618      	mov	r0, r3
 800f086:	f7fa fdad 	bl	8009be4 <_ZN8touchgfx9colortypeC1Em>
 800f08a:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800f08c:	4619      	mov	r1, r3
 800f08e:	4620      	mov	r0, r4
 800f090:	f7fb f884 	bl	800a19c <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800f094:	697a      	ldr	r2, [r7, #20]
 800f096:	697b      	ldr	r3, [r7, #20]
 800f098:	3340      	adds	r3, #64	; 0x40
 800f09a:	4619      	mov	r1, r3
 800f09c:	4610      	mov	r0, r2
 800f09e:	f7fa fff3 	bl	800a088 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    back.setXY(20, 103);
 800f0a2:	697b      	ldr	r3, [r7, #20]
 800f0a4:	336c      	adds	r3, #108	; 0x6c
 800f0a6:	2267      	movs	r2, #103	; 0x67
 800f0a8:	2114      	movs	r1, #20
 800f0aa:	4618      	mov	r0, r3
 800f0ac:	f7fa fe9d 	bl	8009dea <_ZN8touchgfx8Drawable5setXYEss>
    back.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID));
 800f0b0:	697b      	ldr	r3, [r7, #20]
 800f0b2:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 800f0b6:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800f0ba:	2100      	movs	r1, #0
 800f0bc:	4618      	mov	r0, r3
 800f0be:	f7fa fdd7 	bl	8009c70 <_ZN8touchgfx6BitmapC1Et>
 800f0c2:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800f0c6:	2101      	movs	r1, #1
 800f0c8:	4618      	mov	r0, r3
 800f0ca:	f7fa fdd1 	bl	8009c70 <_ZN8touchgfx6BitmapC1Et>
 800f0ce:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800f0d2:	2104      	movs	r1, #4
 800f0d4:	4618      	mov	r0, r3
 800f0d6:	f7fa fdcb 	bl	8009c70 <_ZN8touchgfx6BitmapC1Et>
 800f0da:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800f0de:	2104      	movs	r1, #4
 800f0e0:	4618      	mov	r0, r3
 800f0e2:	f7fa fdc5 	bl	8009c70 <_ZN8touchgfx6BitmapC1Et>
 800f0e6:	f107 0030 	add.w	r0, r7, #48	; 0x30
 800f0ea:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 800f0ee:	f107 0128 	add.w	r1, r7, #40	; 0x28
 800f0f2:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800f0f6:	9300      	str	r3, [sp, #0]
 800f0f8:	4603      	mov	r3, r0
 800f0fa:	4620      	mov	r0, r4
 800f0fc:	f007 fc24 	bl	8016948 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    back.setIconXY(5, 5);
 800f100:	697b      	ldr	r3, [r7, #20]
 800f102:	336c      	adds	r3, #108	; 0x6c
 800f104:	2205      	movs	r2, #5
 800f106:	2105      	movs	r1, #5
 800f108:	4618      	mov	r0, r3
 800f10a:	f7fb fa75 	bl	800a5f8 <_ZN8touchgfx14ButtonWithIcon9setIconXYEss>
    back.setAction(buttonCallback);
 800f10e:	697b      	ldr	r3, [r7, #20]
 800f110:	f103 026c 	add.w	r2, r3, #108	; 0x6c
 800f114:	697b      	ldr	r3, [r7, #20]
 800f116:	f503 733a 	add.w	r3, r3, #744	; 0x2e8
 800f11a:	4619      	mov	r1, r3
 800f11c:	4610      	mov	r0, r2
 800f11e:	f7fb fa1d 	bl	800a55c <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
    add(back);
 800f122:	697a      	ldr	r2, [r7, #20]
 800f124:	697b      	ldr	r3, [r7, #20]
 800f126:	336c      	adds	r3, #108	; 0x6c
 800f128:	4619      	mov	r1, r3
 800f12a:	4610      	mov	r0, r2
 800f12c:	f7fa ffac 	bl	800a088 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    PressureGauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_TINY_BACKGROUNDS_LIGHT_ID));
 800f130:	697b      	ldr	r3, [r7, #20]
 800f132:	f103 04a8 	add.w	r4, r3, #168	; 0xa8
 800f136:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800f13a:	2102      	movs	r1, #2
 800f13c:	4618      	mov	r0, r3
 800f13e:	f7fa fd97 	bl	8009c70 <_ZN8touchgfx6BitmapC1Et>
 800f142:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800f146:	4619      	mov	r1, r3
 800f148:	4620      	mov	r0, r4
 800f14a:	f003 fd0a 	bl	8012b62 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    PressureGauge.setPosition(166, 73, 120, 120);
 800f14e:	697b      	ldr	r3, [r7, #20]
 800f150:	f103 00a8 	add.w	r0, r3, #168	; 0xa8
 800f154:	2378      	movs	r3, #120	; 0x78
 800f156:	9300      	str	r3, [sp, #0]
 800f158:	2378      	movs	r3, #120	; 0x78
 800f15a:	2249      	movs	r2, #73	; 0x49
 800f15c:	21a6      	movs	r1, #166	; 0xa6
 800f15e:	f7fa fe05 	bl	8009d6c <_ZN8touchgfx8Drawable11setPositionEssss>
    PressureGauge.setCenter(60, 60);
 800f162:	697b      	ldr	r3, [r7, #20]
 800f164:	33a8      	adds	r3, #168	; 0xa8
 800f166:	223c      	movs	r2, #60	; 0x3c
 800f168:	213c      	movs	r1, #60	; 0x3c
 800f16a:	4618      	mov	r0, r3
 800f16c:	f007 f9a5 	bl	80164ba <_ZN8touchgfx5Gauge9setCenterEii>
    PressureGauge.setStartEndAngle(-90, 90);
 800f170:	697b      	ldr	r3, [r7, #20]
 800f172:	33a8      	adds	r3, #168	; 0xa8
 800f174:	225a      	movs	r2, #90	; 0x5a
 800f176:	f06f 0159 	mvn.w	r1, #89	; 0x59
 800f17a:	4618      	mov	r0, r3
 800f17c:	f007 fa22 	bl	80165c4 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    PressureGauge.setRange(30000, 110000);
 800f180:	697b      	ldr	r3, [r7, #20]
 800f182:	f103 00a8 	add.w	r0, r3, #168	; 0xa8
 800f186:	2300      	movs	r3, #0
 800f188:	9300      	str	r3, [sp, #0]
 800f18a:	2300      	movs	r3, #0
 800f18c:	4a6d      	ldr	r2, [pc, #436]	; (800f344 <_ZN22PressureScreenViewBaseC1Ev+0x374>)
 800f18e:	f247 5130 	movw	r1, #30000	; 0x7530
 800f192:	f003 fbc0 	bl	8012916 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    PressureGauge.setValue(30000);
 800f196:	697b      	ldr	r3, [r7, #20]
 800f198:	33a8      	adds	r3, #168	; 0xa8
 800f19a:	f247 5130 	movw	r1, #30000	; 0x7530
 800f19e:	4618      	mov	r0, r3
 800f1a0:	f007 f9ba 	bl	8016518 <_ZN8touchgfx5Gauge8setValueEi>
    PressureGauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_TINY_NEEDLES_ROUGH_ID, 5, 33);
 800f1a4:	697b      	ldr	r3, [r7, #20]
 800f1a6:	f103 00a8 	add.w	r0, r3, #168	; 0xa8
 800f1aa:	2321      	movs	r3, #33	; 0x21
 800f1ac:	2205      	movs	r2, #5
 800f1ae:	2103      	movs	r1, #3
 800f1b0:	f007 f96e 	bl	8016490 <_ZN8touchgfx5Gauge9setNeedleEtss>
    PressureGauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 800f1b4:	697b      	ldr	r3, [r7, #20]
 800f1b6:	33a8      	adds	r3, #168	; 0xa8
 800f1b8:	2101      	movs	r1, #1
 800f1ba:	4618      	mov	r0, r3
 800f1bc:	f007 f90a 	bl	80163d4 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    PressureGauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 800f1c0:	697b      	ldr	r3, [r7, #20]
 800f1c2:	33a8      	adds	r3, #168	; 0xa8
 800f1c4:	2101      	movs	r1, #1
 800f1c6:	4618      	mov	r0, r3
 800f1c8:	f007 f907 	bl	80163da <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    add(PressureGauge);
 800f1cc:	697a      	ldr	r2, [r7, #20]
 800f1ce:	697b      	ldr	r3, [r7, #20]
 800f1d0:	33a8      	adds	r3, #168	; 0xa8
 800f1d2:	4619      	mov	r1, r3
 800f1d4:	4610      	mov	r0, r2
 800f1d6:	f7fa ff57 	bl	800a088 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    Pressure_text.setXY(74, 10);
 800f1da:	697b      	ldr	r3, [r7, #20]
 800f1dc:	f503 7312 	add.w	r3, r3, #584	; 0x248
 800f1e0:	220a      	movs	r2, #10
 800f1e2:	214a      	movs	r1, #74	; 0x4a
 800f1e4:	4618      	mov	r0, r3
 800f1e6:	f7fa fe00 	bl	8009dea <_ZN8touchgfx8Drawable5setXYEss>
    Pressure_text.setColor(touchgfx::Color::getColorFromRGB(242, 174, 174));
 800f1ea:	697b      	ldr	r3, [r7, #20]
 800f1ec:	f503 7412 	add.w	r4, r3, #584	; 0x248
 800f1f0:	23f2      	movs	r3, #242	; 0xf2
 800f1f2:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
 800f1f6:	23ae      	movs	r3, #174	; 0xae
 800f1f8:	f887 3066 	strb.w	r3, [r7, #102]	; 0x66
 800f1fc:	23ae      	movs	r3, #174	; 0xae
 800f1fe:	f887 3065 	strb.w	r3, [r7, #101]	; 0x65
 800f202:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 800f206:	041b      	lsls	r3, r3, #16
 800f208:	461a      	mov	r2, r3
 800f20a:	f897 3066 	ldrb.w	r3, [r7, #102]	; 0x66
 800f20e:	021b      	lsls	r3, r3, #8
 800f210:	431a      	orrs	r2, r3
 800f212:	f897 3065 	ldrb.w	r3, [r7, #101]	; 0x65
 800f216:	4313      	orrs	r3, r2
 800f218:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800f21c:	f107 0358 	add.w	r3, r7, #88	; 0x58
 800f220:	4611      	mov	r1, r2
 800f222:	4618      	mov	r0, r3
 800f224:	f7fa fcde 	bl	8009be4 <_ZN8touchgfx9colortypeC1Em>
 800f228:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 800f22a:	66bc      	str	r4, [r7, #104]	; 0x68
 800f22c:	61fb      	str	r3, [r7, #28]
        color = newColor;
 800f22e:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 800f230:	69fa      	ldr	r2, [r7, #28]
 800f232:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800f234:	bf00      	nop
    Pressure_text.setLinespacing(0);
 800f236:	697b      	ldr	r3, [r7, #20]
 800f238:	f503 7312 	add.w	r3, r3, #584	; 0x248
 800f23c:	673b      	str	r3, [r7, #112]	; 0x70
 800f23e:	2300      	movs	r3, #0
 800f240:	f8a7 306e 	strh.w	r3, [r7, #110]	; 0x6e
        linespace = space;
 800f244:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800f246:	f8b7 206e 	ldrh.w	r2, [r7, #110]	; 0x6e
 800f24a:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800f24c:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800f24e:	681b      	ldr	r3, [r3, #0]
 800f250:	3384      	adds	r3, #132	; 0x84
 800f252:	681b      	ldr	r3, [r3, #0]
 800f254:	6f3c      	ldr	r4, [r7, #112]	; 0x70
 800f256:	463a      	mov	r2, r7
 800f258:	6f39      	ldr	r1, [r7, #112]	; 0x70
 800f25a:	4610      	mov	r0, r2
 800f25c:	4798      	blx	r3
 800f25e:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800f262:	463a      	mov	r2, r7
 800f264:	ca07      	ldmia	r2, {r0, r1, r2}
 800f266:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800f26a:	bf00      	nop
    Pressure_text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NHFJ));
 800f26c:	697b      	ldr	r3, [r7, #20]
 800f26e:	f503 7412 	add.w	r4, r3, #584	; 0x248
 800f272:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800f276:	2107      	movs	r1, #7
 800f278:	4618      	mov	r0, r3
 800f27a:	f7fa ff9d 	bl	800a1b8 <_ZN8touchgfx9TypedTextC1Et>
 800f27e:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800f282:	4619      	mov	r1, r3
 800f284:	4620      	mov	r0, r4
 800f286:	f006 ffdf 	bl	8016248 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800f28a:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800f28e:	4618      	mov	r0, r3
 800f290:	f7fa fac0 	bl	8009814 <_ZN8touchgfx9TypedTextD1Ev>
    add(Pressure_text);
 800f294:	697a      	ldr	r2, [r7, #20]
 800f296:	697b      	ldr	r3, [r7, #20]
 800f298:	f503 7312 	add.w	r3, r3, #584	; 0x248
 800f29c:	4619      	mov	r1, r3
 800f29e:	4610      	mov	r0, r2
 800f2a0:	f7fa fef2 	bl	800a088 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    PressureData.setXY(187, 202);
 800f2a4:	697b      	ldr	r3, [r7, #20]
 800f2a6:	f503 7324 	add.w	r3, r3, #656	; 0x290
 800f2aa:	22ca      	movs	r2, #202	; 0xca
 800f2ac:	21bb      	movs	r1, #187	; 0xbb
 800f2ae:	4618      	mov	r0, r3
 800f2b0:	f7fa fd9b 	bl	8009dea <_ZN8touchgfx8Drawable5setXYEss>
    PressureData.setColor(touchgfx::Color::getColorFromRGB(214, 195, 195));
 800f2b4:	697b      	ldr	r3, [r7, #20]
 800f2b6:	f503 7424 	add.w	r4, r3, #656	; 0x290
 800f2ba:	23d6      	movs	r3, #214	; 0xd6
 800f2bc:	f887 3077 	strb.w	r3, [r7, #119]	; 0x77
 800f2c0:	23c3      	movs	r3, #195	; 0xc3
 800f2c2:	f887 3076 	strb.w	r3, [r7, #118]	; 0x76
 800f2c6:	23c3      	movs	r3, #195	; 0xc3
 800f2c8:	f887 3075 	strb.w	r3, [r7, #117]	; 0x75
 800f2cc:	f897 3077 	ldrb.w	r3, [r7, #119]	; 0x77
 800f2d0:	041b      	lsls	r3, r3, #16
 800f2d2:	461a      	mov	r2, r3
 800f2d4:	f897 3076 	ldrb.w	r3, [r7, #118]	; 0x76
 800f2d8:	021b      	lsls	r3, r3, #8
 800f2da:	431a      	orrs	r2, r3
 800f2dc:	f897 3075 	ldrb.w	r3, [r7, #117]	; 0x75
 800f2e0:	4313      	orrs	r3, r2
 800f2e2:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800f2e6:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800f2ea:	4611      	mov	r1, r2
 800f2ec:	4618      	mov	r0, r3
 800f2ee:	f7fa fc79 	bl	8009be4 <_ZN8touchgfx9colortypeC1Em>
 800f2f2:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800f2f4:	67bc      	str	r4, [r7, #120]	; 0x78
 800f2f6:	61bb      	str	r3, [r7, #24]
        color = newColor;
 800f2f8:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800f2fa:	69ba      	ldr	r2, [r7, #24]
 800f2fc:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800f2fe:	bf00      	nop
    PressureData.setLinespacing(0);
 800f300:	697b      	ldr	r3, [r7, #20]
 800f302:	f503 7324 	add.w	r3, r3, #656	; 0x290
 800f306:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 800f30a:	2300      	movs	r3, #0
 800f30c:	f8a7 307e 	strh.w	r3, [r7, #126]	; 0x7e
        linespace = space;
 800f310:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 800f314:	f8b7 207e 	ldrh.w	r2, [r7, #126]	; 0x7e
 800f318:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800f31a:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 800f31e:	681b      	ldr	r3, [r3, #0]
 800f320:	3384      	adds	r3, #132	; 0x84
 800f322:	681b      	ldr	r3, [r3, #0]
 800f324:	f8d7 4080 	ldr.w	r4, [r7, #128]	; 0x80
 800f328:	463a      	mov	r2, r7
 800f32a:	f8d7 1080 	ldr.w	r1, [r7, #128]	; 0x80
 800f32e:	4610      	mov	r0, r2
 800f330:	4798      	blx	r3
 800f332:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800f336:	463a      	mov	r2, r7
 800f338:	ca07      	ldmia	r2, {r0, r1, r2}
 800f33a:	e005      	b.n	800f348 <_ZN22PressureScreenViewBaseC1Ev+0x378>
 800f33c:	0802e48c 	.word	0x0802e48c
 800f340:	0800f4eb 	.word	0x0800f4eb
 800f344:	0001adb0 	.word	0x0001adb0
 800f348:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800f34c:	bf00      	nop
    Unicode::snprintf(PressureDataBuffer, PRESSUREDATA_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_6W6Z).getText());
 800f34e:	697b      	ldr	r3, [r7, #20]
 800f350:	f503 7437 	add.w	r4, r3, #732	; 0x2dc
 800f354:	f107 0344 	add.w	r3, r7, #68	; 0x44
 800f358:	2104      	movs	r1, #4
 800f35a:	4618      	mov	r0, r3
 800f35c:	f7fa ff2c 	bl	800a1b8 <_ZN8touchgfx9TypedTextC1Et>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800f360:	4b32      	ldr	r3, [pc, #200]	; (800f42c <_ZN22PressureScreenViewBaseC1Ev+0x45c>)
 800f362:	681b      	ldr	r3, [r3, #0]
 800f364:	2b00      	cmp	r3, #0
 800f366:	d105      	bne.n	800f374 <_ZN22PressureScreenViewBaseC1Ev+0x3a4>
 800f368:	4b31      	ldr	r3, [pc, #196]	; (800f430 <_ZN22PressureScreenViewBaseC1Ev+0x460>)
 800f36a:	4a32      	ldr	r2, [pc, #200]	; (800f434 <_ZN22PressureScreenViewBaseC1Ev+0x464>)
 800f36c:	2160      	movs	r1, #96	; 0x60
 800f36e:	4832      	ldr	r0, [pc, #200]	; (800f438 <_ZN22PressureScreenViewBaseC1Ev+0x468>)
 800f370:	f01b ffe8 	bl	802b344 <__assert_func>
 800f374:	f107 0344 	add.w	r3, r7, #68	; 0x44
 800f378:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
        return typedTextId < numberOfTypedTexts;
 800f37c:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800f380:	889a      	ldrh	r2, [r3, #4]
 800f382:	4b2e      	ldr	r3, [pc, #184]	; (800f43c <_ZN22PressureScreenViewBaseC1Ev+0x46c>)
 800f384:	881b      	ldrh	r3, [r3, #0]
 800f386:	429a      	cmp	r2, r3
 800f388:	bf34      	ite	cc
 800f38a:	2301      	movcc	r3, #1
 800f38c:	2300      	movcs	r3, #0
 800f38e:	b2db      	uxtb	r3, r3
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800f390:	2b00      	cmp	r3, #0
 800f392:	d105      	bne.n	800f3a0 <_ZN22PressureScreenViewBaseC1Ev+0x3d0>
 800f394:	4b2a      	ldr	r3, [pc, #168]	; (800f440 <_ZN22PressureScreenViewBaseC1Ev+0x470>)
 800f396:	4a27      	ldr	r2, [pc, #156]	; (800f434 <_ZN22PressureScreenViewBaseC1Ev+0x464>)
 800f398:	2161      	movs	r1, #97	; 0x61
 800f39a:	4827      	ldr	r0, [pc, #156]	; (800f438 <_ZN22PressureScreenViewBaseC1Ev+0x468>)
 800f39c:	f01b ffd2 	bl	802b344 <__assert_func>
        return texts->getText(typedTextId);
 800f3a0:	4b28      	ldr	r3, [pc, #160]	; (800f444 <_ZN22PressureScreenViewBaseC1Ev+0x474>)
 800f3a2:	681b      	ldr	r3, [r3, #0]
 800f3a4:	f8b7 2048 	ldrh.w	r2, [r7, #72]	; 0x48
 800f3a8:	4611      	mov	r1, r2
 800f3aa:	4618      	mov	r0, r3
 800f3ac:	f000 fe5c 	bl	8010068 <_ZNK8touchgfx5Texts7getTextEt>
 800f3b0:	4603      	mov	r3, r0
 800f3b2:	bf00      	nop
 800f3b4:	4a24      	ldr	r2, [pc, #144]	; (800f448 <_ZN22PressureScreenViewBaseC1Ev+0x478>)
 800f3b6:	2106      	movs	r1, #6
 800f3b8:	4620      	mov	r0, r4
 800f3ba:	f00d f9bd 	bl	801c738 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800f3be:	f107 0344 	add.w	r3, r7, #68	; 0x44
 800f3c2:	4618      	mov	r0, r3
 800f3c4:	f7fa fa26 	bl	8009814 <_ZN8touchgfx9TypedTextD1Ev>
    PressureData.setWildcard(PressureDataBuffer);
 800f3c8:	697b      	ldr	r3, [r7, #20]
 800f3ca:	f503 7224 	add.w	r2, r3, #656	; 0x290
 800f3ce:	697b      	ldr	r3, [r7, #20]
 800f3d0:	f503 7337 	add.w	r3, r3, #732	; 0x2dc
 800f3d4:	4619      	mov	r1, r3
 800f3d6:	4610      	mov	r0, r2
 800f3d8:	f7fd fd42 	bl	800ce60 <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    PressureData.resizeToCurrentText();
 800f3dc:	697b      	ldr	r3, [r7, #20]
 800f3de:	f503 7324 	add.w	r3, r3, #656	; 0x290
 800f3e2:	4618      	mov	r0, r3
 800f3e4:	f006 ff10 	bl	8016208 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
    PressureData.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9SKU));
 800f3e8:	697b      	ldr	r3, [r7, #20]
 800f3ea:	f503 7424 	add.w	r4, r3, #656	; 0x290
 800f3ee:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800f3f2:	2105      	movs	r1, #5
 800f3f4:	4618      	mov	r0, r3
 800f3f6:	f7fa fedf 	bl	800a1b8 <_ZN8touchgfx9TypedTextC1Et>
 800f3fa:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800f3fe:	4619      	mov	r1, r3
 800f400:	4620      	mov	r0, r4
 800f402:	f006 ff21 	bl	8016248 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800f406:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800f40a:	4618      	mov	r0, r3
 800f40c:	f7fa fa02 	bl	8009814 <_ZN8touchgfx9TypedTextD1Ev>
    add(PressureData);
 800f410:	697a      	ldr	r2, [r7, #20]
 800f412:	697b      	ldr	r3, [r7, #20]
 800f414:	f503 7324 	add.w	r3, r3, #656	; 0x290
 800f418:	4619      	mov	r1, r3
 800f41a:	4610      	mov	r0, r2
 800f41c:	f7fa fe34 	bl	800a088 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800f420:	697b      	ldr	r3, [r7, #20]
 800f422:	4618      	mov	r0, r3
 800f424:	378c      	adds	r7, #140	; 0x8c
 800f426:	46bd      	mov	sp, r7
 800f428:	bd90      	pop	{r4, r7, pc}
 800f42a:	bf00      	nop
 800f42c:	200022a4 	.word	0x200022a4
 800f430:	0802cedc 	.word	0x0802cedc
 800f434:	0802cfe0 	.word	0x0802cfe0
 800f438:	0802cf5c 	.word	0x0802cf5c
 800f43c:	200022a8 	.word	0x200022a8
 800f440:	0802cfa0 	.word	0x0802cfa0
 800f444:	200022b0 	.word	0x200022b0
 800f448:	0802d018 	.word	0x0802d018

0800f44c <_ZN22PressureScreenViewBaseD1Ev>:

PressureScreenViewBase::~PressureScreenViewBase()
 800f44c:	b580      	push	{r7, lr}
 800f44e:	b082      	sub	sp, #8
 800f450:	af00      	add	r7, sp, #0
 800f452:	6078      	str	r0, [r7, #4]
 800f454:	4a16      	ldr	r2, [pc, #88]	; (800f4b0 <_ZN22PressureScreenViewBaseD1Ev+0x64>)
 800f456:	687b      	ldr	r3, [r7, #4]
 800f458:	601a      	str	r2, [r3, #0]
 800f45a:	687b      	ldr	r3, [r7, #4]
 800f45c:	f503 733a 	add.w	r3, r3, #744	; 0x2e8
 800f460:	4618      	mov	r0, r3
 800f462:	f000 f88d 	bl	800f580 <_ZN8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800f466:	687b      	ldr	r3, [r7, #4]
 800f468:	f503 7324 	add.w	r3, r3, #656	; 0x290
 800f46c:	4618      	mov	r0, r3
 800f46e:	f7fb fb67 	bl	800ab40 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800f472:	687b      	ldr	r3, [r7, #4]
 800f474:	f503 7312 	add.w	r3, r3, #584	; 0x248
 800f478:	4618      	mov	r0, r3
 800f47a:	f7fa fff1 	bl	800a460 <_ZN8touchgfx8TextAreaD1Ev>
 800f47e:	687b      	ldr	r3, [r7, #4]
 800f480:	33a8      	adds	r3, #168	; 0xa8
 800f482:	4618      	mov	r0, r3
 800f484:	f7fe f8c6 	bl	800d614 <_ZN8touchgfx5GaugeD1Ev>
 800f488:	687b      	ldr	r3, [r7, #4]
 800f48a:	336c      	adds	r3, #108	; 0x6c
 800f48c:	4618      	mov	r0, r3
 800f48e:	f7fb fc29 	bl	800ace4 <_ZN8touchgfx14ButtonWithIconD1Ev>
 800f492:	687b      	ldr	r3, [r7, #4]
 800f494:	3340      	adds	r3, #64	; 0x40
 800f496:	4618      	mov	r0, r3
 800f498:	f7fb fb96 	bl	800abc8 <_ZN8touchgfx3BoxD1Ev>
 800f49c:	687b      	ldr	r3, [r7, #4]
 800f49e:	4618      	mov	r0, r3
 800f4a0:	f7ff fd74 	bl	800ef8c <_ZN8touchgfx4ViewI23PressureScreenPresenterED1Ev>
{

}
 800f4a4:	687b      	ldr	r3, [r7, #4]
 800f4a6:	4618      	mov	r0, r3
 800f4a8:	3708      	adds	r7, #8
 800f4aa:	46bd      	mov	sp, r7
 800f4ac:	bd80      	pop	{r7, pc}
 800f4ae:	bf00      	nop
 800f4b0:	0802e48c 	.word	0x0802e48c

0800f4b4 <_ZN22PressureScreenViewBaseD0Ev>:
PressureScreenViewBase::~PressureScreenViewBase()
 800f4b4:	b580      	push	{r7, lr}
 800f4b6:	b082      	sub	sp, #8
 800f4b8:	af00      	add	r7, sp, #0
 800f4ba:	6078      	str	r0, [r7, #4]
}
 800f4bc:	6878      	ldr	r0, [r7, #4]
 800f4be:	f7ff ffc5 	bl	800f44c <_ZN22PressureScreenViewBaseD1Ev>
 800f4c2:	f44f 713e 	mov.w	r1, #760	; 0x2f8
 800f4c6:	6878      	ldr	r0, [r7, #4]
 800f4c8:	f01b f94b 	bl	802a762 <_ZdlPvj>
 800f4cc:	687b      	ldr	r3, [r7, #4]
 800f4ce:	4618      	mov	r0, r3
 800f4d0:	3708      	adds	r7, #8
 800f4d2:	46bd      	mov	sp, r7
 800f4d4:	bd80      	pop	{r7, pc}

0800f4d6 <_ZN22PressureScreenViewBase11setupScreenEv>:

void PressureScreenViewBase::setupScreen()
{
 800f4d6:	b480      	push	{r7}
 800f4d8:	b083      	sub	sp, #12
 800f4da:	af00      	add	r7, sp, #0
 800f4dc:	6078      	str	r0, [r7, #4]

}
 800f4de:	bf00      	nop
 800f4e0:	370c      	adds	r7, #12
 800f4e2:	46bd      	mov	sp, r7
 800f4e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f4e8:	4770      	bx	lr

0800f4ea <_ZN22PressureScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void PressureScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800f4ea:	b580      	push	{r7, lr}
 800f4ec:	b082      	sub	sp, #8
 800f4ee:	af00      	add	r7, sp, #0
 800f4f0:	6078      	str	r0, [r7, #4]
 800f4f2:	6039      	str	r1, [r7, #0]
    if (&src == &back)
 800f4f4:	687b      	ldr	r3, [r7, #4]
 800f4f6:	336c      	adds	r3, #108	; 0x6c
 800f4f8:	683a      	ldr	r2, [r7, #0]
 800f4fa:	429a      	cmp	r2, r3
 800f4fc:	d106      	bne.n	800f50c <_ZN22PressureScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x22>
    {
        //PressureToMain
        //When back clicked change screen to MainScreen
        //Go to MainScreen with screen transition towards West
        application().gotoMainScreenScreenSlideTransitionWest();
 800f4fe:	6878      	ldr	r0, [r7, #4]
 800f500:	f7ff fd39 	bl	800ef76 <_ZN22PressureScreenViewBase11applicationEv>
 800f504:	4603      	mov	r3, r0
 800f506:	4618      	mov	r0, r3
 800f508:	f7fb ff2c 	bl	800b364 <_ZN23FrontendApplicationBase39gotoMainScreenScreenSlideTransitionWestEv>
    }
}
 800f50c:	bf00      	nop
 800f50e:	3708      	adds	r7, #8
 800f510:	46bd      	mov	sp, r7
 800f512:	bd80      	pop	{r7, pc}

0800f514 <_ZN8touchgfx4ViewI23PressureScreenPresenterEC1Ev>:
    View()
 800f514:	b580      	push	{r7, lr}
 800f516:	b082      	sub	sp, #8
 800f518:	af00      	add	r7, sp, #0
 800f51a:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800f51c:	687b      	ldr	r3, [r7, #4]
 800f51e:	4618      	mov	r0, r3
 800f520:	f00b fad0 	bl	801aac4 <_ZN8touchgfx6ScreenC1Ev>
 800f524:	4a05      	ldr	r2, [pc, #20]	; (800f53c <_ZN8touchgfx4ViewI23PressureScreenPresenterEC1Ev+0x28>)
 800f526:	687b      	ldr	r3, [r7, #4]
 800f528:	601a      	str	r2, [r3, #0]
 800f52a:	687b      	ldr	r3, [r7, #4]
 800f52c:	2200      	movs	r2, #0
 800f52e:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800f530:	687b      	ldr	r3, [r7, #4]
 800f532:	4618      	mov	r0, r3
 800f534:	3708      	adds	r7, #8
 800f536:	46bd      	mov	sp, r7
 800f538:	bd80      	pop	{r7, pc}
 800f53a:	bf00      	nop
 800f53c:	0802e4d8 	.word	0x0802e4d8

0800f540 <_ZN8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800f540:	b580      	push	{r7, lr}
 800f542:	b084      	sub	sp, #16
 800f544:	af00      	add	r7, sp, #0
 800f546:	60f8      	str	r0, [r7, #12]
 800f548:	60b9      	str	r1, [r7, #8]
 800f54a:	4639      	mov	r1, r7
 800f54c:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800f550:	68fb      	ldr	r3, [r7, #12]
 800f552:	4618      	mov	r0, r3
 800f554:	f7fb fa82 	bl	800aa5c <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>
 800f558:	4a08      	ldr	r2, [pc, #32]	; (800f57c <_ZN8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800f55a:	68fb      	ldr	r3, [r7, #12]
 800f55c:	601a      	str	r2, [r3, #0]
 800f55e:	68fb      	ldr	r3, [r7, #12]
 800f560:	68ba      	ldr	r2, [r7, #8]
 800f562:	605a      	str	r2, [r3, #4]
 800f564:	68fb      	ldr	r3, [r7, #12]
 800f566:	3308      	adds	r3, #8
 800f568:	463a      	mov	r2, r7
 800f56a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800f56e:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800f572:	68fb      	ldr	r3, [r7, #12]
 800f574:	4618      	mov	r0, r3
 800f576:	3710      	adds	r7, #16
 800f578:	46bd      	mov	sp, r7
 800f57a:	bd80      	pop	{r7, pc}
 800f57c:	0802e4c0 	.word	0x0802e4c0

0800f580 <_ZN8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800f580:	b580      	push	{r7, lr}
 800f582:	b082      	sub	sp, #8
 800f584:	af00      	add	r7, sp, #0
 800f586:	6078      	str	r0, [r7, #4]
 800f588:	4a05      	ldr	r2, [pc, #20]	; (800f5a0 <_ZN8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvED1Ev+0x20>)
 800f58a:	687b      	ldr	r3, [r7, #4]
 800f58c:	601a      	str	r2, [r3, #0]
 800f58e:	687b      	ldr	r3, [r7, #4]
 800f590:	4618      	mov	r0, r3
 800f592:	f7fb fa93 	bl	800aabc <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800f596:	687b      	ldr	r3, [r7, #4]
 800f598:	4618      	mov	r0, r3
 800f59a:	3708      	adds	r7, #8
 800f59c:	46bd      	mov	sp, r7
 800f59e:	bd80      	pop	{r7, pc}
 800f5a0:	0802e4c0 	.word	0x0802e4c0

0800f5a4 <_ZN8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
 800f5a4:	b580      	push	{r7, lr}
 800f5a6:	b082      	sub	sp, #8
 800f5a8:	af00      	add	r7, sp, #0
 800f5aa:	6078      	str	r0, [r7, #4]
 800f5ac:	6878      	ldr	r0, [r7, #4]
 800f5ae:	f7ff ffe7 	bl	800f580 <_ZN8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800f5b2:	2110      	movs	r1, #16
 800f5b4:	6878      	ldr	r0, [r7, #4]
 800f5b6:	f01b f8d4 	bl	802a762 <_ZdlPvj>
 800f5ba:	687b      	ldr	r3, [r7, #4]
 800f5bc:	4618      	mov	r0, r3
 800f5be:	3708      	adds	r7, #8
 800f5c0:	46bd      	mov	sp, r7
 800f5c2:	bd80      	pop	{r7, pc}

0800f5c4 <_ZN8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800f5c4:	b580      	push	{r7, lr}
 800f5c6:	b082      	sub	sp, #8
 800f5c8:	af00      	add	r7, sp, #0
 800f5ca:	6078      	str	r0, [r7, #4]
 800f5cc:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800f5ce:	687b      	ldr	r3, [r7, #4]
 800f5d0:	685b      	ldr	r3, [r3, #4]
 800f5d2:	687a      	ldr	r2, [r7, #4]
 800f5d4:	68d2      	ldr	r2, [r2, #12]
 800f5d6:	1052      	asrs	r2, r2, #1
 800f5d8:	1898      	adds	r0, r3, r2
 800f5da:	687b      	ldr	r3, [r7, #4]
 800f5dc:	68db      	ldr	r3, [r3, #12]
 800f5de:	f003 0301 	and.w	r3, r3, #1
 800f5e2:	2b00      	cmp	r3, #0
 800f5e4:	d102      	bne.n	800f5ec <_ZN8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x28>
 800f5e6:	687b      	ldr	r3, [r7, #4]
 800f5e8:	689b      	ldr	r3, [r3, #8]
 800f5ea:	e00a      	b.n	800f602 <_ZN8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x3e>
 800f5ec:	687b      	ldr	r3, [r7, #4]
 800f5ee:	685b      	ldr	r3, [r3, #4]
 800f5f0:	687a      	ldr	r2, [r7, #4]
 800f5f2:	68d2      	ldr	r2, [r2, #12]
 800f5f4:	1052      	asrs	r2, r2, #1
 800f5f6:	4413      	add	r3, r2
 800f5f8:	681b      	ldr	r3, [r3, #0]
 800f5fa:	687a      	ldr	r2, [r7, #4]
 800f5fc:	6892      	ldr	r2, [r2, #8]
 800f5fe:	4413      	add	r3, r2
 800f600:	681b      	ldr	r3, [r3, #0]
 800f602:	6839      	ldr	r1, [r7, #0]
 800f604:	4798      	blx	r3
    }
 800f606:	bf00      	nop
 800f608:	3708      	adds	r7, #8
 800f60a:	46bd      	mov	sp, r7
 800f60c:	bd80      	pop	{r7, pc}

0800f60e <_ZNK8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 800f60e:	b480      	push	{r7}
 800f610:	b083      	sub	sp, #12
 800f612:	af00      	add	r7, sp, #0
 800f614:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800f616:	687b      	ldr	r3, [r7, #4]
 800f618:	685b      	ldr	r3, [r3, #4]
 800f61a:	2b00      	cmp	r3, #0
 800f61c:	d010      	beq.n	800f640 <_ZNK8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800f61e:	687b      	ldr	r3, [r7, #4]
 800f620:	689b      	ldr	r3, [r3, #8]
 800f622:	2b00      	cmp	r3, #0
 800f624:	d107      	bne.n	800f636 <_ZNK8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800f626:	687b      	ldr	r3, [r7, #4]
 800f628:	68db      	ldr	r3, [r3, #12]
 800f62a:	f003 0301 	and.w	r3, r3, #1
 800f62e:	2b00      	cmp	r3, #0
 800f630:	d101      	bne.n	800f636 <_ZNK8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800f632:	2301      	movs	r3, #1
 800f634:	e000      	b.n	800f638 <_ZNK8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x2a>
 800f636:	2300      	movs	r3, #0
 800f638:	2b01      	cmp	r3, #1
 800f63a:	d001      	beq.n	800f640 <_ZNK8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800f63c:	2301      	movs	r3, #1
 800f63e:	e000      	b.n	800f642 <_ZNK8touchgfx8CallbackI22PressureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x34>
 800f640:	2300      	movs	r3, #0
    }
 800f642:	4618      	mov	r0, r3
 800f644:	370c      	adds	r7, #12
 800f646:	46bd      	mov	sp, r7
 800f648:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f64c:	4770      	bx	lr

0800f64e <_ZN25TemperatureScreenViewBase11applicationEv>:
    TemperatureScreenViewBase();
    virtual ~TemperatureScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
 800f64e:	b580      	push	{r7, lr}
 800f650:	b082      	sub	sp, #8
 800f652:	af00      	add	r7, sp, #0
 800f654:	6078      	str	r0, [r7, #4]
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800f656:	f009 fe27 	bl	80192a8 <_ZN8touchgfx11Application11getInstanceEv>
 800f65a:	4603      	mov	r3, r0
    }
 800f65c:	4618      	mov	r0, r3
 800f65e:	3708      	adds	r7, #8
 800f660:	46bd      	mov	sp, r7
 800f662:	bd80      	pop	{r7, pc}

0800f664 <_ZN8touchgfx4ViewI26TemperatureScreenPresenterED1Ev>:
class View : public Screen
 800f664:	b580      	push	{r7, lr}
 800f666:	b082      	sub	sp, #8
 800f668:	af00      	add	r7, sp, #0
 800f66a:	6078      	str	r0, [r7, #4]
 800f66c:	4a05      	ldr	r2, [pc, #20]	; (800f684 <_ZN8touchgfx4ViewI26TemperatureScreenPresenterED1Ev+0x20>)
 800f66e:	687b      	ldr	r3, [r7, #4]
 800f670:	601a      	str	r2, [r3, #0]
 800f672:	687b      	ldr	r3, [r7, #4]
 800f674:	4618      	mov	r0, r3
 800f676:	f7fa fcaf 	bl	8009fd8 <_ZN8touchgfx6ScreenD1Ev>
 800f67a:	687b      	ldr	r3, [r7, #4]
 800f67c:	4618      	mov	r0, r3
 800f67e:	3708      	adds	r7, #8
 800f680:	46bd      	mov	sp, r7
 800f682:	bd80      	pop	{r7, pc}
 800f684:	0802e558 	.word	0x0802e558

0800f688 <_ZN8touchgfx4ViewI26TemperatureScreenPresenterED0Ev>:
 800f688:	b580      	push	{r7, lr}
 800f68a:	b082      	sub	sp, #8
 800f68c:	af00      	add	r7, sp, #0
 800f68e:	6078      	str	r0, [r7, #4]
 800f690:	6878      	ldr	r0, [r7, #4]
 800f692:	f7ff ffe7 	bl	800f664 <_ZN8touchgfx4ViewI26TemperatureScreenPresenterED1Ev>
 800f696:	2140      	movs	r1, #64	; 0x40
 800f698:	6878      	ldr	r0, [r7, #4]
 800f69a:	f01b f862 	bl	802a762 <_ZdlPvj>
 800f69e:	687b      	ldr	r3, [r7, #4]
 800f6a0:	4618      	mov	r0, r3
 800f6a2:	3708      	adds	r7, #8
 800f6a4:	46bd      	mov	sp, r7
 800f6a6:	bd80      	pop	{r7, pc}

0800f6a8 <_ZN25TemperatureScreenViewBaseC1Ev>:
#include <gui_generated/temperaturescreen_screen/TemperatureScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

TemperatureScreenViewBase::TemperatureScreenViewBase() :
 800f6a8:	b590      	push	{r4, r7, lr}
 800f6aa:	b0a5      	sub	sp, #148	; 0x94
 800f6ac:	af02      	add	r7, sp, #8
 800f6ae:	6178      	str	r0, [r7, #20]
    buttonCallback(this, &TemperatureScreenViewBase::buttonCallbackHandler)
 800f6b0:	697b      	ldr	r3, [r7, #20]
 800f6b2:	4618      	mov	r0, r3
 800f6b4:	f000 fa96 	bl	800fbe4 <_ZN8touchgfx4ViewI26TemperatureScreenPresenterEC1Ev>
 800f6b8:	4a67      	ldr	r2, [pc, #412]	; (800f858 <_ZN25TemperatureScreenViewBaseC1Ev+0x1b0>)
 800f6ba:	697b      	ldr	r3, [r7, #20]
 800f6bc:	601a      	str	r2, [r3, #0]
 800f6be:	697b      	ldr	r3, [r7, #20]
 800f6c0:	3340      	adds	r3, #64	; 0x40
 800f6c2:	4618      	mov	r0, r3
 800f6c4:	f7fa fd46 	bl	800a154 <_ZN8touchgfx3BoxC1Ev>
 800f6c8:	697b      	ldr	r3, [r7, #20]
 800f6ca:	336c      	adds	r3, #108	; 0x6c
 800f6cc:	4618      	mov	r0, r3
 800f6ce:	f7fd fba3 	bl	800ce18 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800f6d2:	697b      	ldr	r3, [r7, #20]
 800f6d4:	33b8      	adds	r3, #184	; 0xb8
 800f6d6:	4618      	mov	r0, r3
 800f6d8:	f7fa fd84 	bl	800a1e4 <_ZN8touchgfx8TextAreaC1Ev>
 800f6dc:	697b      	ldr	r3, [r7, #20]
 800f6de:	f503 7380 	add.w	r3, r3, #256	; 0x100
 800f6e2:	4618      	mov	r0, r3
 800f6e4:	f006 fe3e 	bl	8016364 <_ZN8touchgfx5GaugeC1Ev>
 800f6e8:	697b      	ldr	r3, [r7, #20]
 800f6ea:	f503 7328 	add.w	r3, r3, #672	; 0x2a0
 800f6ee:	4618      	mov	r0, r3
 800f6f0:	f007 f9c0 	bl	8016a74 <_ZN8touchgfx14ButtonWithIconC1Ev>
 800f6f4:	697b      	ldr	r3, [r7, #20]
 800f6f6:	f503 7039 	add.w	r0, r3, #740	; 0x2e4
 800f6fa:	4b58      	ldr	r3, [pc, #352]	; (800f85c <_ZN25TemperatureScreenViewBaseC1Ev+0x1b4>)
 800f6fc:	623b      	str	r3, [r7, #32]
 800f6fe:	2300      	movs	r3, #0
 800f700:	627b      	str	r3, [r7, #36]	; 0x24
 800f702:	f107 0320 	add.w	r3, r7, #32
 800f706:	cb0c      	ldmia	r3, {r2, r3}
 800f708:	6979      	ldr	r1, [r7, #20]
 800f70a:	f000 fa81 	bl	800fc10 <_ZN8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>
{
    __background.setPosition(0, 0, 320, 240);
 800f70e:	697b      	ldr	r3, [r7, #20]
 800f710:	f103 0040 	add.w	r0, r3, #64	; 0x40
 800f714:	23f0      	movs	r3, #240	; 0xf0
 800f716:	9300      	str	r3, [sp, #0]
 800f718:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800f71c:	2200      	movs	r2, #0
 800f71e:	2100      	movs	r1, #0
 800f720:	f7fa fb24 	bl	8009d6c <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800f724:	697b      	ldr	r3, [r7, #20]
 800f726:	f103 0440 	add.w	r4, r3, #64	; 0x40
 800f72a:	2300      	movs	r3, #0
 800f72c:	f887 3064 	strb.w	r3, [r7, #100]	; 0x64
 800f730:	2300      	movs	r3, #0
 800f732:	f887 3063 	strb.w	r3, [r7, #99]	; 0x63
 800f736:	2300      	movs	r3, #0
 800f738:	f887 3062 	strb.w	r3, [r7, #98]	; 0x62
 800f73c:	f897 3064 	ldrb.w	r3, [r7, #100]	; 0x64
 800f740:	041b      	lsls	r3, r3, #16
 800f742:	461a      	mov	r2, r3
 800f744:	f897 3063 	ldrb.w	r3, [r7, #99]	; 0x63
 800f748:	021b      	lsls	r3, r3, #8
 800f74a:	431a      	orrs	r2, r3
 800f74c:	f897 3062 	ldrb.w	r3, [r7, #98]	; 0x62
 800f750:	4313      	orrs	r3, r2
 800f752:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800f756:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 800f75a:	4611      	mov	r1, r2
 800f75c:	4618      	mov	r0, r3
 800f75e:	f7fa fa41 	bl	8009be4 <_ZN8touchgfx9colortypeC1Em>
 800f762:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800f764:	4619      	mov	r1, r3
 800f766:	4620      	mov	r0, r4
 800f768:	f7fa fd18 	bl	800a19c <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800f76c:	697a      	ldr	r2, [r7, #20]
 800f76e:	697b      	ldr	r3, [r7, #20]
 800f770:	3340      	adds	r3, #64	; 0x40
 800f772:	4619      	mov	r1, r3
 800f774:	4610      	mov	r0, r2
 800f776:	f7fa fc87 	bl	800a088 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    TemperatureData.setXY(207, 202);
 800f77a:	697b      	ldr	r3, [r7, #20]
 800f77c:	336c      	adds	r3, #108	; 0x6c
 800f77e:	22ca      	movs	r2, #202	; 0xca
 800f780:	21cf      	movs	r1, #207	; 0xcf
 800f782:	4618      	mov	r0, r3
 800f784:	f7fa fb31 	bl	8009dea <_ZN8touchgfx8Drawable5setXYEss>
    TemperatureData.setColor(touchgfx::Color::getColorFromRGB(214, 195, 195));
 800f788:	697b      	ldr	r3, [r7, #20]
 800f78a:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 800f78e:	23d6      	movs	r3, #214	; 0xd6
 800f790:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
 800f794:	23c3      	movs	r3, #195	; 0xc3
 800f796:	f887 3066 	strb.w	r3, [r7, #102]	; 0x66
 800f79a:	23c3      	movs	r3, #195	; 0xc3
 800f79c:	f887 3065 	strb.w	r3, [r7, #101]	; 0x65
 800f7a0:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 800f7a4:	041b      	lsls	r3, r3, #16
 800f7a6:	461a      	mov	r2, r3
 800f7a8:	f897 3066 	ldrb.w	r3, [r7, #102]	; 0x66
 800f7ac:	021b      	lsls	r3, r3, #8
 800f7ae:	431a      	orrs	r2, r3
 800f7b0:	f897 3065 	ldrb.w	r3, [r7, #101]	; 0x65
 800f7b4:	4313      	orrs	r3, r2
 800f7b6:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800f7ba:	f107 0358 	add.w	r3, r7, #88	; 0x58
 800f7be:	4611      	mov	r1, r2
 800f7c0:	4618      	mov	r0, r3
 800f7c2:	f7fa fa0f 	bl	8009be4 <_ZN8touchgfx9colortypeC1Em>
 800f7c6:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 800f7c8:	66bc      	str	r4, [r7, #104]	; 0x68
 800f7ca:	61fb      	str	r3, [r7, #28]
        color = newColor;
 800f7cc:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 800f7ce:	69fa      	ldr	r2, [r7, #28]
 800f7d0:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800f7d2:	bf00      	nop
    TemperatureData.setLinespacing(0);
 800f7d4:	697b      	ldr	r3, [r7, #20]
 800f7d6:	336c      	adds	r3, #108	; 0x6c
 800f7d8:	673b      	str	r3, [r7, #112]	; 0x70
 800f7da:	2300      	movs	r3, #0
 800f7dc:	f8a7 306e 	strh.w	r3, [r7, #110]	; 0x6e
        linespace = space;
 800f7e0:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800f7e2:	f8b7 206e 	ldrh.w	r2, [r7, #110]	; 0x6e
 800f7e6:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800f7e8:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800f7ea:	681b      	ldr	r3, [r3, #0]
 800f7ec:	3384      	adds	r3, #132	; 0x84
 800f7ee:	681b      	ldr	r3, [r3, #0]
 800f7f0:	6f3c      	ldr	r4, [r7, #112]	; 0x70
 800f7f2:	463a      	mov	r2, r7
 800f7f4:	6f39      	ldr	r1, [r7, #112]	; 0x70
 800f7f6:	4610      	mov	r0, r2
 800f7f8:	4798      	blx	r3
 800f7fa:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800f7fe:	463a      	mov	r2, r7
 800f800:	ca07      	ldmia	r2, {r0, r1, r2}
 800f802:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800f806:	bf00      	nop
    Unicode::snprintf(TemperatureDataBuffer, TEMPERATUREDATA_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9SEE).getText());
 800f808:	697b      	ldr	r3, [r7, #20]
 800f80a:	f503 7437 	add.w	r4, r3, #732	; 0x2dc
 800f80e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800f812:	2100      	movs	r1, #0
 800f814:	4618      	mov	r0, r3
 800f816:	f7fa fccf 	bl	800a1b8 <_ZN8touchgfx9TypedTextC1Et>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800f81a:	4b11      	ldr	r3, [pc, #68]	; (800f860 <_ZN25TemperatureScreenViewBaseC1Ev+0x1b8>)
 800f81c:	681b      	ldr	r3, [r3, #0]
 800f81e:	2b00      	cmp	r3, #0
 800f820:	d105      	bne.n	800f82e <_ZN25TemperatureScreenViewBaseC1Ev+0x186>
 800f822:	4b10      	ldr	r3, [pc, #64]	; (800f864 <_ZN25TemperatureScreenViewBaseC1Ev+0x1bc>)
 800f824:	4a10      	ldr	r2, [pc, #64]	; (800f868 <_ZN25TemperatureScreenViewBaseC1Ev+0x1c0>)
 800f826:	2160      	movs	r1, #96	; 0x60
 800f828:	4810      	ldr	r0, [pc, #64]	; (800f86c <_ZN25TemperatureScreenViewBaseC1Ev+0x1c4>)
 800f82a:	f01b fd8b 	bl	802b344 <__assert_func>
 800f82e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800f832:	677b      	str	r3, [r7, #116]	; 0x74
        return typedTextId < numberOfTypedTexts;
 800f834:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800f836:	889a      	ldrh	r2, [r3, #4]
 800f838:	4b0d      	ldr	r3, [pc, #52]	; (800f870 <_ZN25TemperatureScreenViewBaseC1Ev+0x1c8>)
 800f83a:	881b      	ldrh	r3, [r3, #0]
 800f83c:	429a      	cmp	r2, r3
 800f83e:	bf34      	ite	cc
 800f840:	2301      	movcc	r3, #1
 800f842:	2300      	movcs	r3, #0
 800f844:	b2db      	uxtb	r3, r3
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800f846:	2b00      	cmp	r3, #0
 800f848:	d116      	bne.n	800f878 <_ZN25TemperatureScreenViewBaseC1Ev+0x1d0>
 800f84a:	4b0a      	ldr	r3, [pc, #40]	; (800f874 <_ZN25TemperatureScreenViewBaseC1Ev+0x1cc>)
 800f84c:	4a06      	ldr	r2, [pc, #24]	; (800f868 <_ZN25TemperatureScreenViewBaseC1Ev+0x1c0>)
 800f84e:	2161      	movs	r1, #97	; 0x61
 800f850:	4806      	ldr	r0, [pc, #24]	; (800f86c <_ZN25TemperatureScreenViewBaseC1Ev+0x1c4>)
 800f852:	f01b fd77 	bl	802b344 <__assert_func>
 800f856:	bf00      	nop
 800f858:	0802e50c 	.word	0x0802e50c
 800f85c:	0800fbb7 	.word	0x0800fbb7
 800f860:	200022a4 	.word	0x200022a4
 800f864:	0802d01c 	.word	0x0802d01c
 800f868:	0802d120 	.word	0x0802d120
 800f86c:	0802d09c 	.word	0x0802d09c
 800f870:	200022a8 	.word	0x200022a8
 800f874:	0802d0e0 	.word	0x0802d0e0
        return texts->getText(typedTextId);
 800f878:	4ba5      	ldr	r3, [pc, #660]	; (800fb10 <_ZN25TemperatureScreenViewBaseC1Ev+0x468>)
 800f87a:	681b      	ldr	r3, [r3, #0]
 800f87c:	8dba      	ldrh	r2, [r7, #44]	; 0x2c
 800f87e:	4611      	mov	r1, r2
 800f880:	4618      	mov	r0, r3
 800f882:	f000 fbf1 	bl	8010068 <_ZNK8touchgfx5Texts7getTextEt>
 800f886:	4603      	mov	r3, r0
 800f888:	bf00      	nop
 800f88a:	4aa2      	ldr	r2, [pc, #648]	; (800fb14 <_ZN25TemperatureScreenViewBaseC1Ev+0x46c>)
 800f88c:	2104      	movs	r1, #4
 800f88e:	4620      	mov	r0, r4
 800f890:	f00c ff52 	bl	801c738 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800f894:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800f898:	4618      	mov	r0, r3
 800f89a:	f7f9 ffbb 	bl	8009814 <_ZN8touchgfx9TypedTextD1Ev>
    TemperatureData.setWildcard(TemperatureDataBuffer);
 800f89e:	697b      	ldr	r3, [r7, #20]
 800f8a0:	f103 026c 	add.w	r2, r3, #108	; 0x6c
 800f8a4:	697b      	ldr	r3, [r7, #20]
 800f8a6:	f503 7337 	add.w	r3, r3, #732	; 0x2dc
 800f8aa:	4619      	mov	r1, r3
 800f8ac:	4610      	mov	r0, r2
 800f8ae:	f7fd fad7 	bl	800ce60 <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    TemperatureData.resizeToCurrentText();
 800f8b2:	697b      	ldr	r3, [r7, #20]
 800f8b4:	336c      	adds	r3, #108	; 0x6c
 800f8b6:	4618      	mov	r0, r3
 800f8b8:	f006 fca6 	bl	8016208 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
    TemperatureData.setTypedText(touchgfx::TypedText(T___SINGLEUSE_GYIK));
 800f8bc:	697b      	ldr	r3, [r7, #20]
 800f8be:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 800f8c2:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800f8c6:	2101      	movs	r1, #1
 800f8c8:	4618      	mov	r0, r3
 800f8ca:	f7fa fc75 	bl	800a1b8 <_ZN8touchgfx9TypedTextC1Et>
 800f8ce:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800f8d2:	4619      	mov	r1, r3
 800f8d4:	4620      	mov	r0, r4
 800f8d6:	f006 fcb7 	bl	8016248 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800f8da:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800f8de:	4618      	mov	r0, r3
 800f8e0:	f7f9 ff98 	bl	8009814 <_ZN8touchgfx9TypedTextD1Ev>
    add(TemperatureData);
 800f8e4:	697a      	ldr	r2, [r7, #20]
 800f8e6:	697b      	ldr	r3, [r7, #20]
 800f8e8:	336c      	adds	r3, #108	; 0x6c
 800f8ea:	4619      	mov	r1, r3
 800f8ec:	4610      	mov	r0, r2
 800f8ee:	f7fa fbcb 	bl	800a088 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    Temperature_text.setXY(39, 10);
 800f8f2:	697b      	ldr	r3, [r7, #20]
 800f8f4:	33b8      	adds	r3, #184	; 0xb8
 800f8f6:	220a      	movs	r2, #10
 800f8f8:	2127      	movs	r1, #39	; 0x27
 800f8fa:	4618      	mov	r0, r3
 800f8fc:	f7fa fa75 	bl	8009dea <_ZN8touchgfx8Drawable5setXYEss>
    Temperature_text.setColor(touchgfx::Color::getColorFromRGB(242, 174, 174));
 800f900:	697b      	ldr	r3, [r7, #20]
 800f902:	f103 04b8 	add.w	r4, r3, #184	; 0xb8
 800f906:	23f2      	movs	r3, #242	; 0xf2
 800f908:	f887 307b 	strb.w	r3, [r7, #123]	; 0x7b
 800f90c:	23ae      	movs	r3, #174	; 0xae
 800f90e:	f887 307a 	strb.w	r3, [r7, #122]	; 0x7a
 800f912:	23ae      	movs	r3, #174	; 0xae
 800f914:	f887 3079 	strb.w	r3, [r7, #121]	; 0x79
 800f918:	f897 307b 	ldrb.w	r3, [r7, #123]	; 0x7b
 800f91c:	041b      	lsls	r3, r3, #16
 800f91e:	461a      	mov	r2, r3
 800f920:	f897 307a 	ldrb.w	r3, [r7, #122]	; 0x7a
 800f924:	021b      	lsls	r3, r3, #8
 800f926:	431a      	orrs	r2, r3
 800f928:	f897 3079 	ldrb.w	r3, [r7, #121]	; 0x79
 800f92c:	4313      	orrs	r3, r2
 800f92e:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800f932:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800f936:	4611      	mov	r1, r2
 800f938:	4618      	mov	r0, r3
 800f93a:	f7fa f953 	bl	8009be4 <_ZN8touchgfx9colortypeC1Em>
 800f93e:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800f940:	67fc      	str	r4, [r7, #124]	; 0x7c
 800f942:	61bb      	str	r3, [r7, #24]
        color = newColor;
 800f944:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 800f946:	69ba      	ldr	r2, [r7, #24]
 800f948:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800f94a:	bf00      	nop
    Temperature_text.setLinespacing(0);
 800f94c:	697b      	ldr	r3, [r7, #20]
 800f94e:	33b8      	adds	r3, #184	; 0xb8
 800f950:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800f954:	2300      	movs	r3, #0
 800f956:	f8a7 3082 	strh.w	r3, [r7, #130]	; 0x82
        linespace = space;
 800f95a:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800f95e:	f8b7 2082 	ldrh.w	r2, [r7, #130]	; 0x82
 800f962:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800f964:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800f968:	681b      	ldr	r3, [r3, #0]
 800f96a:	3384      	adds	r3, #132	; 0x84
 800f96c:	681b      	ldr	r3, [r3, #0]
 800f96e:	f8d7 4084 	ldr.w	r4, [r7, #132]	; 0x84
 800f972:	463a      	mov	r2, r7
 800f974:	f8d7 1084 	ldr.w	r1, [r7, #132]	; 0x84
 800f978:	4610      	mov	r0, r2
 800f97a:	4798      	blx	r3
 800f97c:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800f980:	463a      	mov	r2, r7
 800f982:	ca07      	ldmia	r2, {r0, r1, r2}
 800f984:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800f988:	bf00      	nop
    Temperature_text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OJUT));
 800f98a:	697b      	ldr	r3, [r7, #20]
 800f98c:	f103 04b8 	add.w	r4, r3, #184	; 0xb8
 800f990:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800f994:	2108      	movs	r1, #8
 800f996:	4618      	mov	r0, r3
 800f998:	f7fa fc0e 	bl	800a1b8 <_ZN8touchgfx9TypedTextC1Et>
 800f99c:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800f9a0:	4619      	mov	r1, r3
 800f9a2:	4620      	mov	r0, r4
 800f9a4:	f006 fc50 	bl	8016248 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800f9a8:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800f9ac:	4618      	mov	r0, r3
 800f9ae:	f7f9 ff31 	bl	8009814 <_ZN8touchgfx9TypedTextD1Ev>
    add(Temperature_text);
 800f9b2:	697a      	ldr	r2, [r7, #20]
 800f9b4:	697b      	ldr	r3, [r7, #20]
 800f9b6:	33b8      	adds	r3, #184	; 0xb8
 800f9b8:	4619      	mov	r1, r3
 800f9ba:	4610      	mov	r0, r2
 800f9bc:	f7fa fb64 	bl	800a088 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    TemperatureGauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_TINY_BACKGROUNDS_LIGHT_ID));
 800f9c0:	697b      	ldr	r3, [r7, #20]
 800f9c2:	f503 7480 	add.w	r4, r3, #256	; 0x100
 800f9c6:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800f9ca:	2102      	movs	r1, #2
 800f9cc:	4618      	mov	r0, r3
 800f9ce:	f7fa f94f 	bl	8009c70 <_ZN8touchgfx6BitmapC1Et>
 800f9d2:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800f9d6:	4619      	mov	r1, r3
 800f9d8:	4620      	mov	r0, r4
 800f9da:	f003 f8c2 	bl	8012b62 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    TemperatureGauge.setPosition(166, 73, 120, 120);
 800f9de:	697b      	ldr	r3, [r7, #20]
 800f9e0:	f503 7080 	add.w	r0, r3, #256	; 0x100
 800f9e4:	2378      	movs	r3, #120	; 0x78
 800f9e6:	9300      	str	r3, [sp, #0]
 800f9e8:	2378      	movs	r3, #120	; 0x78
 800f9ea:	2249      	movs	r2, #73	; 0x49
 800f9ec:	21a6      	movs	r1, #166	; 0xa6
 800f9ee:	f7fa f9bd 	bl	8009d6c <_ZN8touchgfx8Drawable11setPositionEssss>
    TemperatureGauge.setCenter(60, 60);
 800f9f2:	697b      	ldr	r3, [r7, #20]
 800f9f4:	f503 7380 	add.w	r3, r3, #256	; 0x100
 800f9f8:	223c      	movs	r2, #60	; 0x3c
 800f9fa:	213c      	movs	r1, #60	; 0x3c
 800f9fc:	4618      	mov	r0, r3
 800f9fe:	f006 fd5c 	bl	80164ba <_ZN8touchgfx5Gauge9setCenterEii>
    TemperatureGauge.setStartEndAngle(-90, 90);
 800fa02:	697b      	ldr	r3, [r7, #20]
 800fa04:	f503 7380 	add.w	r3, r3, #256	; 0x100
 800fa08:	225a      	movs	r2, #90	; 0x5a
 800fa0a:	f06f 0159 	mvn.w	r1, #89	; 0x59
 800fa0e:	4618      	mov	r0, r3
 800fa10:	f006 fdd8 	bl	80165c4 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    TemperatureGauge.setRange(0, 120);
 800fa14:	697b      	ldr	r3, [r7, #20]
 800fa16:	f503 7080 	add.w	r0, r3, #256	; 0x100
 800fa1a:	2300      	movs	r3, #0
 800fa1c:	9300      	str	r3, [sp, #0]
 800fa1e:	2300      	movs	r3, #0
 800fa20:	2278      	movs	r2, #120	; 0x78
 800fa22:	2100      	movs	r1, #0
 800fa24:	f002 ff77 	bl	8012916 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    TemperatureGauge.setValue(20);
 800fa28:	697b      	ldr	r3, [r7, #20]
 800fa2a:	f503 7380 	add.w	r3, r3, #256	; 0x100
 800fa2e:	2114      	movs	r1, #20
 800fa30:	4618      	mov	r0, r3
 800fa32:	f006 fd71 	bl	8016518 <_ZN8touchgfx5Gauge8setValueEi>
    TemperatureGauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_TINY_NEEDLES_ROUGH_ID, 5, 33);
 800fa36:	697b      	ldr	r3, [r7, #20]
 800fa38:	f503 7080 	add.w	r0, r3, #256	; 0x100
 800fa3c:	2321      	movs	r3, #33	; 0x21
 800fa3e:	2205      	movs	r2, #5
 800fa40:	2103      	movs	r1, #3
 800fa42:	f006 fd25 	bl	8016490 <_ZN8touchgfx5Gauge9setNeedleEtss>
    TemperatureGauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 800fa46:	697b      	ldr	r3, [r7, #20]
 800fa48:	f503 7380 	add.w	r3, r3, #256	; 0x100
 800fa4c:	2101      	movs	r1, #1
 800fa4e:	4618      	mov	r0, r3
 800fa50:	f006 fcc0 	bl	80163d4 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    TemperatureGauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 800fa54:	697b      	ldr	r3, [r7, #20]
 800fa56:	f503 7380 	add.w	r3, r3, #256	; 0x100
 800fa5a:	2101      	movs	r1, #1
 800fa5c:	4618      	mov	r0, r3
 800fa5e:	f006 fcbc 	bl	80163da <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    add(TemperatureGauge);
 800fa62:	697a      	ldr	r2, [r7, #20]
 800fa64:	697b      	ldr	r3, [r7, #20]
 800fa66:	f503 7380 	add.w	r3, r3, #256	; 0x100
 800fa6a:	4619      	mov	r1, r3
 800fa6c:	4610      	mov	r0, r2
 800fa6e:	f7fa fb0b 	bl	800a088 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    back.setXY(20, 103);
 800fa72:	697b      	ldr	r3, [r7, #20]
 800fa74:	f503 7328 	add.w	r3, r3, #672	; 0x2a0
 800fa78:	2267      	movs	r2, #103	; 0x67
 800fa7a:	2114      	movs	r1, #20
 800fa7c:	4618      	mov	r0, r3
 800fa7e:	f7fa f9b4 	bl	8009dea <_ZN8touchgfx8Drawable5setXYEss>
    back.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID));
 800fa82:	697b      	ldr	r3, [r7, #20]
 800fa84:	f503 7428 	add.w	r4, r3, #672	; 0x2a0
 800fa88:	f107 0344 	add.w	r3, r7, #68	; 0x44
 800fa8c:	2100      	movs	r1, #0
 800fa8e:	4618      	mov	r0, r3
 800fa90:	f7fa f8ee 	bl	8009c70 <_ZN8touchgfx6BitmapC1Et>
 800fa94:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800fa98:	2101      	movs	r1, #1
 800fa9a:	4618      	mov	r0, r3
 800fa9c:	f7fa f8e8 	bl	8009c70 <_ZN8touchgfx6BitmapC1Et>
 800faa0:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800faa4:	2104      	movs	r1, #4
 800faa6:	4618      	mov	r0, r3
 800faa8:	f7fa f8e2 	bl	8009c70 <_ZN8touchgfx6BitmapC1Et>
 800faac:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800fab0:	2104      	movs	r1, #4
 800fab2:	4618      	mov	r0, r3
 800fab4:	f7fa f8dc 	bl	8009c70 <_ZN8touchgfx6BitmapC1Et>
 800fab8:	f107 004c 	add.w	r0, r7, #76	; 0x4c
 800fabc:	f107 0248 	add.w	r2, r7, #72	; 0x48
 800fac0:	f107 0144 	add.w	r1, r7, #68	; 0x44
 800fac4:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800fac8:	9300      	str	r3, [sp, #0]
 800faca:	4603      	mov	r3, r0
 800facc:	4620      	mov	r0, r4
 800face:	f006 ff3b 	bl	8016948 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    back.setIconXY(5, 5);
 800fad2:	697b      	ldr	r3, [r7, #20]
 800fad4:	f503 7328 	add.w	r3, r3, #672	; 0x2a0
 800fad8:	2205      	movs	r2, #5
 800fada:	2105      	movs	r1, #5
 800fadc:	4618      	mov	r0, r3
 800fade:	f7fa fd8b 	bl	800a5f8 <_ZN8touchgfx14ButtonWithIcon9setIconXYEss>
    back.setAction(buttonCallback);
 800fae2:	697b      	ldr	r3, [r7, #20]
 800fae4:	f503 7228 	add.w	r2, r3, #672	; 0x2a0
 800fae8:	697b      	ldr	r3, [r7, #20]
 800faea:	f503 7339 	add.w	r3, r3, #740	; 0x2e4
 800faee:	4619      	mov	r1, r3
 800faf0:	4610      	mov	r0, r2
 800faf2:	f7fa fd33 	bl	800a55c <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
    add(back);
 800faf6:	697a      	ldr	r2, [r7, #20]
 800faf8:	697b      	ldr	r3, [r7, #20]
 800fafa:	f503 7328 	add.w	r3, r3, #672	; 0x2a0
 800fafe:	4619      	mov	r1, r3
 800fb00:	4610      	mov	r0, r2
 800fb02:	f7fa fac1 	bl	800a088 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800fb06:	697b      	ldr	r3, [r7, #20]
 800fb08:	4618      	mov	r0, r3
 800fb0a:	378c      	adds	r7, #140	; 0x8c
 800fb0c:	46bd      	mov	sp, r7
 800fb0e:	bd90      	pop	{r4, r7, pc}
 800fb10:	200022b0 	.word	0x200022b0
 800fb14:	0802d158 	.word	0x0802d158

0800fb18 <_ZN25TemperatureScreenViewBaseD1Ev>:

TemperatureScreenViewBase::~TemperatureScreenViewBase()
 800fb18:	b580      	push	{r7, lr}
 800fb1a:	b082      	sub	sp, #8
 800fb1c:	af00      	add	r7, sp, #0
 800fb1e:	6078      	str	r0, [r7, #4]
 800fb20:	4a16      	ldr	r2, [pc, #88]	; (800fb7c <_ZN25TemperatureScreenViewBaseD1Ev+0x64>)
 800fb22:	687b      	ldr	r3, [r7, #4]
 800fb24:	601a      	str	r2, [r3, #0]
 800fb26:	687b      	ldr	r3, [r7, #4]
 800fb28:	f503 7339 	add.w	r3, r3, #740	; 0x2e4
 800fb2c:	4618      	mov	r0, r3
 800fb2e:	f000 f88f 	bl	800fc50 <_ZN8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800fb32:	687b      	ldr	r3, [r7, #4]
 800fb34:	f503 7328 	add.w	r3, r3, #672	; 0x2a0
 800fb38:	4618      	mov	r0, r3
 800fb3a:	f7fb f8d3 	bl	800ace4 <_ZN8touchgfx14ButtonWithIconD1Ev>
 800fb3e:	687b      	ldr	r3, [r7, #4]
 800fb40:	f503 7380 	add.w	r3, r3, #256	; 0x100
 800fb44:	4618      	mov	r0, r3
 800fb46:	f7fd fd65 	bl	800d614 <_ZN8touchgfx5GaugeD1Ev>
 800fb4a:	687b      	ldr	r3, [r7, #4]
 800fb4c:	33b8      	adds	r3, #184	; 0xb8
 800fb4e:	4618      	mov	r0, r3
 800fb50:	f7fa fc86 	bl	800a460 <_ZN8touchgfx8TextAreaD1Ev>
 800fb54:	687b      	ldr	r3, [r7, #4]
 800fb56:	336c      	adds	r3, #108	; 0x6c
 800fb58:	4618      	mov	r0, r3
 800fb5a:	f7fa fff1 	bl	800ab40 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800fb5e:	687b      	ldr	r3, [r7, #4]
 800fb60:	3340      	adds	r3, #64	; 0x40
 800fb62:	4618      	mov	r0, r3
 800fb64:	f7fb f830 	bl	800abc8 <_ZN8touchgfx3BoxD1Ev>
 800fb68:	687b      	ldr	r3, [r7, #4]
 800fb6a:	4618      	mov	r0, r3
 800fb6c:	f7ff fd7a 	bl	800f664 <_ZN8touchgfx4ViewI26TemperatureScreenPresenterED1Ev>
{

}
 800fb70:	687b      	ldr	r3, [r7, #4]
 800fb72:	4618      	mov	r0, r3
 800fb74:	3708      	adds	r7, #8
 800fb76:	46bd      	mov	sp, r7
 800fb78:	bd80      	pop	{r7, pc}
 800fb7a:	bf00      	nop
 800fb7c:	0802e50c 	.word	0x0802e50c

0800fb80 <_ZN25TemperatureScreenViewBaseD0Ev>:
TemperatureScreenViewBase::~TemperatureScreenViewBase()
 800fb80:	b580      	push	{r7, lr}
 800fb82:	b082      	sub	sp, #8
 800fb84:	af00      	add	r7, sp, #0
 800fb86:	6078      	str	r0, [r7, #4]
}
 800fb88:	6878      	ldr	r0, [r7, #4]
 800fb8a:	f7ff ffc5 	bl	800fb18 <_ZN25TemperatureScreenViewBaseD1Ev>
 800fb8e:	f44f 713d 	mov.w	r1, #756	; 0x2f4
 800fb92:	6878      	ldr	r0, [r7, #4]
 800fb94:	f01a fde5 	bl	802a762 <_ZdlPvj>
 800fb98:	687b      	ldr	r3, [r7, #4]
 800fb9a:	4618      	mov	r0, r3
 800fb9c:	3708      	adds	r7, #8
 800fb9e:	46bd      	mov	sp, r7
 800fba0:	bd80      	pop	{r7, pc}

0800fba2 <_ZN25TemperatureScreenViewBase11setupScreenEv>:

void TemperatureScreenViewBase::setupScreen()
{
 800fba2:	b480      	push	{r7}
 800fba4:	b083      	sub	sp, #12
 800fba6:	af00      	add	r7, sp, #0
 800fba8:	6078      	str	r0, [r7, #4]

}
 800fbaa:	bf00      	nop
 800fbac:	370c      	adds	r7, #12
 800fbae:	46bd      	mov	sp, r7
 800fbb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fbb4:	4770      	bx	lr

0800fbb6 <_ZN25TemperatureScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void TemperatureScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800fbb6:	b580      	push	{r7, lr}
 800fbb8:	b082      	sub	sp, #8
 800fbba:	af00      	add	r7, sp, #0
 800fbbc:	6078      	str	r0, [r7, #4]
 800fbbe:	6039      	str	r1, [r7, #0]
    if (&src == &back)
 800fbc0:	687b      	ldr	r3, [r7, #4]
 800fbc2:	f503 7328 	add.w	r3, r3, #672	; 0x2a0
 800fbc6:	683a      	ldr	r2, [r7, #0]
 800fbc8:	429a      	cmp	r2, r3
 800fbca:	d106      	bne.n	800fbda <_ZN25TemperatureScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x24>
    {
        //TemperatureToMain
        //When back clicked change screen to MainScreen
        //Go to MainScreen with screen transition towards West
        application().gotoMainScreenScreenSlideTransitionWest();
 800fbcc:	6878      	ldr	r0, [r7, #4]
 800fbce:	f7ff fd3e 	bl	800f64e <_ZN25TemperatureScreenViewBase11applicationEv>
 800fbd2:	4603      	mov	r3, r0
 800fbd4:	4618      	mov	r0, r3
 800fbd6:	f7fb fbc5 	bl	800b364 <_ZN23FrontendApplicationBase39gotoMainScreenScreenSlideTransitionWestEv>
    }
}
 800fbda:	bf00      	nop
 800fbdc:	3708      	adds	r7, #8
 800fbde:	46bd      	mov	sp, r7
 800fbe0:	bd80      	pop	{r7, pc}
	...

0800fbe4 <_ZN8touchgfx4ViewI26TemperatureScreenPresenterEC1Ev>:
    View()
 800fbe4:	b580      	push	{r7, lr}
 800fbe6:	b082      	sub	sp, #8
 800fbe8:	af00      	add	r7, sp, #0
 800fbea:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800fbec:	687b      	ldr	r3, [r7, #4]
 800fbee:	4618      	mov	r0, r3
 800fbf0:	f00a ff68 	bl	801aac4 <_ZN8touchgfx6ScreenC1Ev>
 800fbf4:	4a05      	ldr	r2, [pc, #20]	; (800fc0c <_ZN8touchgfx4ViewI26TemperatureScreenPresenterEC1Ev+0x28>)
 800fbf6:	687b      	ldr	r3, [r7, #4]
 800fbf8:	601a      	str	r2, [r3, #0]
 800fbfa:	687b      	ldr	r3, [r7, #4]
 800fbfc:	2200      	movs	r2, #0
 800fbfe:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800fc00:	687b      	ldr	r3, [r7, #4]
 800fc02:	4618      	mov	r0, r3
 800fc04:	3708      	adds	r7, #8
 800fc06:	46bd      	mov	sp, r7
 800fc08:	bd80      	pop	{r7, pc}
 800fc0a:	bf00      	nop
 800fc0c:	0802e558 	.word	0x0802e558

0800fc10 <_ZN8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800fc10:	b580      	push	{r7, lr}
 800fc12:	b084      	sub	sp, #16
 800fc14:	af00      	add	r7, sp, #0
 800fc16:	60f8      	str	r0, [r7, #12]
 800fc18:	60b9      	str	r1, [r7, #8]
 800fc1a:	4639      	mov	r1, r7
 800fc1c:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800fc20:	68fb      	ldr	r3, [r7, #12]
 800fc22:	4618      	mov	r0, r3
 800fc24:	f7fa ff1a 	bl	800aa5c <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>
 800fc28:	4a08      	ldr	r2, [pc, #32]	; (800fc4c <_ZN8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800fc2a:	68fb      	ldr	r3, [r7, #12]
 800fc2c:	601a      	str	r2, [r3, #0]
 800fc2e:	68fb      	ldr	r3, [r7, #12]
 800fc30:	68ba      	ldr	r2, [r7, #8]
 800fc32:	605a      	str	r2, [r3, #4]
 800fc34:	68fb      	ldr	r3, [r7, #12]
 800fc36:	3308      	adds	r3, #8
 800fc38:	463a      	mov	r2, r7
 800fc3a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800fc3e:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800fc42:	68fb      	ldr	r3, [r7, #12]
 800fc44:	4618      	mov	r0, r3
 800fc46:	3710      	adds	r7, #16
 800fc48:	46bd      	mov	sp, r7
 800fc4a:	bd80      	pop	{r7, pc}
 800fc4c:	0802e540 	.word	0x0802e540

0800fc50 <_ZN8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800fc50:	b580      	push	{r7, lr}
 800fc52:	b082      	sub	sp, #8
 800fc54:	af00      	add	r7, sp, #0
 800fc56:	6078      	str	r0, [r7, #4]
 800fc58:	4a05      	ldr	r2, [pc, #20]	; (800fc70 <_ZN8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvED1Ev+0x20>)
 800fc5a:	687b      	ldr	r3, [r7, #4]
 800fc5c:	601a      	str	r2, [r3, #0]
 800fc5e:	687b      	ldr	r3, [r7, #4]
 800fc60:	4618      	mov	r0, r3
 800fc62:	f7fa ff2b 	bl	800aabc <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800fc66:	687b      	ldr	r3, [r7, #4]
 800fc68:	4618      	mov	r0, r3
 800fc6a:	3708      	adds	r7, #8
 800fc6c:	46bd      	mov	sp, r7
 800fc6e:	bd80      	pop	{r7, pc}
 800fc70:	0802e540 	.word	0x0802e540

0800fc74 <_ZN8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
 800fc74:	b580      	push	{r7, lr}
 800fc76:	b082      	sub	sp, #8
 800fc78:	af00      	add	r7, sp, #0
 800fc7a:	6078      	str	r0, [r7, #4]
 800fc7c:	6878      	ldr	r0, [r7, #4]
 800fc7e:	f7ff ffe7 	bl	800fc50 <_ZN8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800fc82:	2110      	movs	r1, #16
 800fc84:	6878      	ldr	r0, [r7, #4]
 800fc86:	f01a fd6c 	bl	802a762 <_ZdlPvj>
 800fc8a:	687b      	ldr	r3, [r7, #4]
 800fc8c:	4618      	mov	r0, r3
 800fc8e:	3708      	adds	r7, #8
 800fc90:	46bd      	mov	sp, r7
 800fc92:	bd80      	pop	{r7, pc}

0800fc94 <_ZN8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800fc94:	b580      	push	{r7, lr}
 800fc96:	b082      	sub	sp, #8
 800fc98:	af00      	add	r7, sp, #0
 800fc9a:	6078      	str	r0, [r7, #4]
 800fc9c:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800fc9e:	687b      	ldr	r3, [r7, #4]
 800fca0:	685b      	ldr	r3, [r3, #4]
 800fca2:	687a      	ldr	r2, [r7, #4]
 800fca4:	68d2      	ldr	r2, [r2, #12]
 800fca6:	1052      	asrs	r2, r2, #1
 800fca8:	1898      	adds	r0, r3, r2
 800fcaa:	687b      	ldr	r3, [r7, #4]
 800fcac:	68db      	ldr	r3, [r3, #12]
 800fcae:	f003 0301 	and.w	r3, r3, #1
 800fcb2:	2b00      	cmp	r3, #0
 800fcb4:	d102      	bne.n	800fcbc <_ZN8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x28>
 800fcb6:	687b      	ldr	r3, [r7, #4]
 800fcb8:	689b      	ldr	r3, [r3, #8]
 800fcba:	e00a      	b.n	800fcd2 <_ZN8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x3e>
 800fcbc:	687b      	ldr	r3, [r7, #4]
 800fcbe:	685b      	ldr	r3, [r3, #4]
 800fcc0:	687a      	ldr	r2, [r7, #4]
 800fcc2:	68d2      	ldr	r2, [r2, #12]
 800fcc4:	1052      	asrs	r2, r2, #1
 800fcc6:	4413      	add	r3, r2
 800fcc8:	681b      	ldr	r3, [r3, #0]
 800fcca:	687a      	ldr	r2, [r7, #4]
 800fccc:	6892      	ldr	r2, [r2, #8]
 800fcce:	4413      	add	r3, r2
 800fcd0:	681b      	ldr	r3, [r3, #0]
 800fcd2:	6839      	ldr	r1, [r7, #0]
 800fcd4:	4798      	blx	r3
    }
 800fcd6:	bf00      	nop
 800fcd8:	3708      	adds	r7, #8
 800fcda:	46bd      	mov	sp, r7
 800fcdc:	bd80      	pop	{r7, pc}

0800fcde <_ZNK8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 800fcde:	b480      	push	{r7}
 800fce0:	b083      	sub	sp, #12
 800fce2:	af00      	add	r7, sp, #0
 800fce4:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800fce6:	687b      	ldr	r3, [r7, #4]
 800fce8:	685b      	ldr	r3, [r3, #4]
 800fcea:	2b00      	cmp	r3, #0
 800fcec:	d010      	beq.n	800fd10 <_ZNK8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800fcee:	687b      	ldr	r3, [r7, #4]
 800fcf0:	689b      	ldr	r3, [r3, #8]
 800fcf2:	2b00      	cmp	r3, #0
 800fcf4:	d107      	bne.n	800fd06 <_ZNK8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800fcf6:	687b      	ldr	r3, [r7, #4]
 800fcf8:	68db      	ldr	r3, [r3, #12]
 800fcfa:	f003 0301 	and.w	r3, r3, #1
 800fcfe:	2b00      	cmp	r3, #0
 800fd00:	d101      	bne.n	800fd06 <_ZNK8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800fd02:	2301      	movs	r3, #1
 800fd04:	e000      	b.n	800fd08 <_ZNK8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x2a>
 800fd06:	2300      	movs	r3, #0
 800fd08:	2b01      	cmp	r3, #1
 800fd0a:	d001      	beq.n	800fd10 <_ZNK8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800fd0c:	2301      	movs	r3, #1
 800fd0e:	e000      	b.n	800fd12 <_ZNK8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x34>
 800fd10:	2300      	movs	r3, #0
    }
 800fd12:	4618      	mov	r0, r3
 800fd14:	370c      	adds	r7, #12
 800fd16:	46bd      	mov	sp, r7
 800fd18:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fd1c:	4770      	bx	lr
	...

0800fd20 <_ZN14BitmapDatabase11getInstanceEv>:
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
 800fd20:	b480      	push	{r7}
 800fd22:	af00      	add	r7, sp, #0
    return bitmap_database;
 800fd24:	4b02      	ldr	r3, [pc, #8]	; (800fd30 <_ZN14BitmapDatabase11getInstanceEv+0x10>)
}
 800fd26:	4618      	mov	r0, r3
 800fd28:	46bd      	mov	sp, r7
 800fd2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fd2e:	4770      	bx	lr
 800fd30:	0802e584 	.word	0x0802e584

0800fd34 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
 800fd34:	b480      	push	{r7}
 800fd36:	af00      	add	r7, sp, #0
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
 800fd38:	2305      	movs	r3, #5
}
 800fd3a:	4618      	mov	r0, r3
 800fd3c:	46bd      	mov	sp, r7
 800fd3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fd42:	4770      	bx	lr

0800fd44 <_ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE>:
     * @param  prevChar The Unicode value of the previous character.
     * @param  glyph    the glyph object for the current character.
     *
     * @return The kerning distance between prevChar and glyph char.
     */
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
 800fd44:	b480      	push	{r7}
 800fd46:	b085      	sub	sp, #20
 800fd48:	af00      	add	r7, sp, #0
 800fd4a:	60f8      	str	r0, [r7, #12]
 800fd4c:	460b      	mov	r3, r1
 800fd4e:	607a      	str	r2, [r7, #4]
 800fd50:	817b      	strh	r3, [r7, #10]
    {
        (void)prevChar; // Unused variable
        (void)glyph;    // Unused variable
        return 0;
 800fd52:	2300      	movs	r3, #0
    }
 800fd54:	4618      	mov	r0, r3
 800fd56:	3714      	adds	r7, #20
 800fd58:	46bd      	mov	sp, r7
 800fd5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fd5e:	4770      	bx	lr

0800fd60 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    /**
     * Gets GSUB table. Currently only used for Devanagari fonts.
     *
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
 800fd60:	b480      	push	{r7}
 800fd62:	b083      	sub	sp, #12
 800fd64:	af00      	add	r7, sp, #0
 800fd66:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800fd68:	2300      	movs	r3, #0
    }
 800fd6a:	4618      	mov	r0, r3
 800fd6c:	370c      	adds	r7, #12
 800fd6e:	46bd      	mov	sp, r7
 800fd70:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fd74:	4770      	bx	lr

0800fd76 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    /**
     * Gets the contextual forms table used in arabic fonts.
     *
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
 800fd76:	b480      	push	{r7}
 800fd78:	b083      	sub	sp, #12
 800fd7a:	af00      	add	r7, sp, #0
 800fd7c:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800fd7e:	2300      	movs	r3, #0
    }
 800fd80:	4618      	mov	r0, r3
 800fd82:	370c      	adds	r7, #12
 800fd84:	46bd      	mov	sp, r7
 800fd86:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fd8a:	4770      	bx	lr

0800fd8c <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>:
     *
     * @param  data A reference to the TypedTextData storage array.
     * @param  f    The fonts associated with the array.
     * @param  n    The number of typed texts in the array.
     */
    static void registerTypedTextDatabase(const TypedTextData* data, const Font* const* f, const uint16_t n)
 800fd8c:	b480      	push	{r7}
 800fd8e:	b085      	sub	sp, #20
 800fd90:	af00      	add	r7, sp, #0
 800fd92:	60f8      	str	r0, [r7, #12]
 800fd94:	60b9      	str	r1, [r7, #8]
 800fd96:	4613      	mov	r3, r2
 800fd98:	80fb      	strh	r3, [r7, #6]
    {
        typedTexts = data;
 800fd9a:	4a07      	ldr	r2, [pc, #28]	; (800fdb8 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x2c>)
 800fd9c:	68fb      	ldr	r3, [r7, #12]
 800fd9e:	6013      	str	r3, [r2, #0]
        fonts = f;
 800fda0:	4a06      	ldr	r2, [pc, #24]	; (800fdbc <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x30>)
 800fda2:	68bb      	ldr	r3, [r7, #8]
 800fda4:	6013      	str	r3, [r2, #0]
        numberOfTypedTexts = n;
 800fda6:	4a06      	ldr	r2, [pc, #24]	; (800fdc0 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x34>)
 800fda8:	88fb      	ldrh	r3, [r7, #6]
 800fdaa:	8013      	strh	r3, [r2, #0]
    }
 800fdac:	bf00      	nop
 800fdae:	3714      	adds	r7, #20
 800fdb0:	46bd      	mov	sp, r7
 800fdb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fdb6:	4770      	bx	lr
 800fdb8:	200022a4 	.word	0x200022a4
 800fdbc:	200022ac 	.word	0x200022ac
 800fdc0:	200022a8 	.word	0x200022a8

0800fdc4 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800fdc4:	b40e      	push	{r1, r2, r3}
 800fdc6:	b580      	push	{r7, lr}
 800fdc8:	b085      	sub	sp, #20
 800fdca:	af00      	add	r7, sp, #0
 800fdcc:	6078      	str	r0, [r7, #4]
    va_list pArg;
    va_start(pArg, text);
 800fdce:	f107 0320 	add.w	r3, r7, #32
 800fdd2:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800fdd4:	68bb      	ldr	r3, [r7, #8]
 800fdd6:	69fa      	ldr	r2, [r7, #28]
 800fdd8:	2100      	movs	r1, #0
 800fdda:	6878      	ldr	r0, [r7, #4]
 800fddc:	f00a f9fa 	bl	801a1d4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800fde0:	4603      	mov	r3, r0
 800fde2:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800fde4:	89fb      	ldrh	r3, [r7, #14]
}
 800fde6:	4618      	mov	r0, r3
 800fde8:	3714      	adds	r7, #20
 800fdea:	46bd      	mov	sp, r7
 800fdec:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800fdf0:	b003      	add	sp, #12
 800fdf2:	4770      	bx	lr

0800fdf4 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800fdf4:	b40c      	push	{r2, r3}
 800fdf6:	b580      	push	{r7, lr}
 800fdf8:	b084      	sub	sp, #16
 800fdfa:	af00      	add	r7, sp, #0
 800fdfc:	6078      	str	r0, [r7, #4]
 800fdfe:	460b      	mov	r3, r1
 800fe00:	70fb      	strb	r3, [r7, #3]
    va_list pArg;
    va_start(pArg, text);
 800fe02:	f107 031c 	add.w	r3, r7, #28
 800fe06:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800fe08:	78f9      	ldrb	r1, [r7, #3]
 800fe0a:	68bb      	ldr	r3, [r7, #8]
 800fe0c:	69ba      	ldr	r2, [r7, #24]
 800fe0e:	6878      	ldr	r0, [r7, #4]
 800fe10:	f00a f9e0 	bl	801a1d4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800fe14:	4603      	mov	r3, r0
 800fe16:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800fe18:	89fb      	ldrh	r3, [r7, #14]
}
 800fe1a:	4618      	mov	r0, r3
 800fe1c:	3710      	adds	r7, #16
 800fe1e:	46bd      	mov	sp, r7
 800fe20:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800fe24:	b002      	add	sp, #8
 800fe26:	4770      	bx	lr

0800fe28 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
 800fe28:	b580      	push	{r7, lr}
 800fe2a:	b08a      	sub	sp, #40	; 0x28
 800fe2c:	af00      	add	r7, sp, #0
 800fe2e:	6078      	str	r0, [r7, #4]
 800fe30:	460b      	mov	r3, r1
 800fe32:	70fb      	strb	r3, [r7, #3]
    if (fontGsubTable && nextCharacters.peekChar())
 800fe34:	687b      	ldr	r3, [r7, #4]
 800fe36:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800fe38:	2b00      	cmp	r3, #0
 800fe3a:	d016      	beq.n	800fe6a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800fe3c:	687b      	ldr	r3, [r7, #4]
 800fe3e:	3322      	adds	r3, #34	; 0x22
 800fe40:	627b      	str	r3, [r7, #36]	; 0x24
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800fe42:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800fe44:	8adb      	ldrh	r3, [r3, #22]
 800fe46:	2b00      	cmp	r3, #0
 800fe48:	d105      	bne.n	800fe56 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x2e>
 800fe4a:	4b43      	ldr	r3, [pc, #268]	; (800ff58 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800fe4c:	4a43      	ldr	r2, [pc, #268]	; (800ff5c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800fe4e:	21c5      	movs	r1, #197	; 0xc5
 800fe50:	4843      	ldr	r0, [pc, #268]	; (800ff60 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800fe52:	f01b fa77 	bl	802b344 <__assert_func>
            return buffer[pos];
 800fe56:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800fe58:	8a9b      	ldrh	r3, [r3, #20]
 800fe5a:	461a      	mov	r2, r3
 800fe5c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800fe5e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 800fe62:	2b00      	cmp	r3, #0
 800fe64:	d001      	beq.n	800fe6a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800fe66:	2301      	movs	r3, #1
 800fe68:	e000      	b.n	800fe6c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x44>
 800fe6a:	2300      	movs	r3, #0
 800fe6c:	2b00      	cmp	r3, #0
 800fe6e:	d06a      	beq.n	800ff46 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
    {
        substituteGlyphs();
 800fe70:	6878      	ldr	r0, [r7, #4]
 800fe72:	f00b fd62 	bl	801b93a <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800fe76:	687b      	ldr	r3, [r7, #4]
 800fe78:	3322      	adds	r3, #34	; 0x22
 800fe7a:	623b      	str	r3, [r7, #32]
 800fe7c:	2301      	movs	r3, #1
 800fe7e:	83fb      	strh	r3, [r7, #30]
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800fe80:	6a3b      	ldr	r3, [r7, #32]
 800fe82:	8adb      	ldrh	r3, [r3, #22]
 800fe84:	8bfa      	ldrh	r2, [r7, #30]
 800fe86:	429a      	cmp	r2, r3
 800fe88:	d305      	bcc.n	800fe96 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x6e>
 800fe8a:	4b36      	ldr	r3, [pc, #216]	; (800ff64 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x13c>)
 800fe8c:	4a36      	ldr	r2, [pc, #216]	; (800ff68 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x140>)
 800fe8e:	21cb      	movs	r1, #203	; 0xcb
 800fe90:	4833      	ldr	r0, [pc, #204]	; (800ff60 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800fe92:	f01b fa57 	bl	802b344 <__assert_func>
            const uint16_t index = pos + offset;
 800fe96:	6a3b      	ldr	r3, [r7, #32]
 800fe98:	8a9a      	ldrh	r2, [r3, #20]
 800fe9a:	8bfb      	ldrh	r3, [r7, #30]
 800fe9c:	4413      	add	r3, r2
 800fe9e:	83bb      	strh	r3, [r7, #28]
            return buffer[index < size ? index : index - size];
 800fea0:	8bbb      	ldrh	r3, [r7, #28]
 800fea2:	2b09      	cmp	r3, #9
 800fea4:	d801      	bhi.n	800feaa <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x82>
 800fea6:	8bbb      	ldrh	r3, [r7, #28]
 800fea8:	e001      	b.n	800feae <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x86>
 800feaa:	8bbb      	ldrh	r3, [r7, #28]
 800feac:	3b0a      	subs	r3, #10
 800feae:	6a3a      	ldr	r2, [r7, #32]
 800feb0:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800feb4:	f640 123f 	movw	r2, #2367	; 0x93f
 800feb8:	4293      	cmp	r3, r2
 800feba:	bf0c      	ite	eq
 800febc:	2301      	moveq	r3, #1
 800febe:	2300      	movne	r3, #0
 800fec0:	b2db      	uxtb	r3, r3
 800fec2:	2b00      	cmp	r3, #0
 800fec4:	d03f      	beq.n	800ff46 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
 800fec6:	687b      	ldr	r3, [r7, #4]
 800fec8:	3322      	adds	r3, #34	; 0x22
 800feca:	687a      	ldr	r2, [r7, #4]
 800fecc:	3222      	adds	r2, #34	; 0x22
 800fece:	60ba      	str	r2, [r7, #8]
            assert(used > 0);
 800fed0:	68ba      	ldr	r2, [r7, #8]
 800fed2:	8ad2      	ldrh	r2, [r2, #22]
 800fed4:	2a00      	cmp	r2, #0
 800fed6:	d105      	bne.n	800fee4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xbc>
 800fed8:	4b1f      	ldr	r3, [pc, #124]	; (800ff58 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800feda:	4a20      	ldr	r2, [pc, #128]	; (800ff5c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800fedc:	21c5      	movs	r1, #197	; 0xc5
 800fede:	4820      	ldr	r0, [pc, #128]	; (800ff60 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800fee0:	f01b fa30 	bl	802b344 <__assert_func>
            return buffer[pos];
 800fee4:	68ba      	ldr	r2, [r7, #8]
 800fee6:	8a92      	ldrh	r2, [r2, #20]
 800fee8:	4611      	mov	r1, r2
 800feea:	68ba      	ldr	r2, [r7, #8]
 800feec:	f832 2011 	ldrh.w	r2, [r2, r1, lsl #1]
 800fef0:	613b      	str	r3, [r7, #16]
 800fef2:	4613      	mov	r3, r2
 800fef4:	81fb      	strh	r3, [r7, #14]
            buffer[pos] = newChar;
        }

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
 800fef6:	693b      	ldr	r3, [r7, #16]
 800fef8:	8adb      	ldrh	r3, [r3, #22]
 800fefa:	2b01      	cmp	r3, #1
 800fefc:	d806      	bhi.n	800ff0c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xe4>
 800fefe:	4b1b      	ldr	r3, [pc, #108]	; (800ff6c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x144>)
 800ff00:	4a1b      	ldr	r2, [pc, #108]	; (800ff70 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x148>)
 800ff02:	f44f 718e 	mov.w	r1, #284	; 0x11c
 800ff06:	4816      	ldr	r0, [pc, #88]	; (800ff60 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800ff08:	f01b fa1c 	bl	802b344 <__assert_func>
            const uint16_t index = pos + 1;
 800ff0c:	693b      	ldr	r3, [r7, #16]
 800ff0e:	8a9b      	ldrh	r3, [r3, #20]
 800ff10:	3301      	adds	r3, #1
 800ff12:	81bb      	strh	r3, [r7, #12]
            buffer[index < size ? index : 0] = newChar;
 800ff14:	89bb      	ldrh	r3, [r7, #12]
 800ff16:	2b09      	cmp	r3, #9
 800ff18:	d801      	bhi.n	800ff1e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf6>
 800ff1a:	89bb      	ldrh	r3, [r7, #12]
 800ff1c:	e000      	b.n	800ff20 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf8>
 800ff1e:	2300      	movs	r3, #0
 800ff20:	693a      	ldr	r2, [r7, #16]
 800ff22:	89f9      	ldrh	r1, [r7, #14]
 800ff24:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
        }
 800ff28:	bf00      	nop
            nextCharacters.replaceAt0(0x093F);
 800ff2a:	687b      	ldr	r3, [r7, #4]
 800ff2c:	3322      	adds	r3, #34	; 0x22
 800ff2e:	61bb      	str	r3, [r7, #24]
 800ff30:	f640 133f 	movw	r3, #2367	; 0x93f
 800ff34:	82fb      	strh	r3, [r7, #22]
            buffer[pos] = newChar;
 800ff36:	69bb      	ldr	r3, [r7, #24]
 800ff38:	8a9b      	ldrh	r3, [r3, #20]
 800ff3a:	4619      	mov	r1, r3
 800ff3c:	69bb      	ldr	r3, [r7, #24]
 800ff3e:	8afa      	ldrh	r2, [r7, #22]
 800ff40:	f823 2011 	strh.w	r2, [r3, r1, lsl #1]
        }
 800ff44:	bf00      	nop
        }
    }
    return getNextChar();
 800ff46:	6878      	ldr	r0, [r7, #4]
 800ff48:	f00b fbfa 	bl	801b740 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800ff4c:	4603      	mov	r3, r0
}
 800ff4e:	4618      	mov	r0, r3
 800ff50:	3728      	adds	r7, #40	; 0x28
 800ff52:	46bd      	mov	sp, r7
 800ff54:	bd80      	pop	{r7, pc}
 800ff56:	bf00      	nop
 800ff58:	0802d15c 	.word	0x0802d15c
 800ff5c:	0802d168 	.word	0x0802d168
 800ff60:	0802d214 	.word	0x0802d214
 800ff64:	0802d25c 	.word	0x0802d25c
 800ff68:	0802d26c 	.word	0x0802d26c
 800ff6c:	0802d340 	.word	0x0802d340
 800ff70:	0802d34c 	.word	0x0802d34c

0800ff74 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
 800ff74:	b580      	push	{r7, lr}
 800ff76:	b082      	sub	sp, #8
 800ff78:	af00      	add	r7, sp, #0
 800ff7a:	6078      	str	r0, [r7, #4]
    fillInputBuffer();
 800ff7c:	6878      	ldr	r0, [r7, #4]
 800ff7e:	f00b fba6 	bl	801b6ce <_ZN8touchgfx12TextProvider15fillInputBufferEv>
}
 800ff82:	bf00      	nop
 800ff84:	3708      	adds	r7, #8
 800ff86:	46bd      	mov	sp, r7
 800ff88:	bd80      	pop	{r7, pc}

0800ff8a <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 800ff8a:	b580      	push	{r7, lr}
 800ff8c:	b088      	sub	sp, #32
 800ff8e:	af02      	add	r7, sp, #8
 800ff90:	60f8      	str	r0, [r7, #12]
 800ff92:	1d38      	adds	r0, r7, #4
 800ff94:	e880 0006 	stmia.w	r0, {r1, r2}
 800ff98:	603b      	str	r3, [r7, #0]
    va_list pArg;
    va_start(pArg, format);
 800ff9a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800ff9e:	617b      	str	r3, [r7, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800ffa0:	1d39      	adds	r1, r7, #4
 800ffa2:	697b      	ldr	r3, [r7, #20]
 800ffa4:	9301      	str	r3, [sp, #4]
 800ffa6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ffa8:	9300      	str	r3, [sp, #0]
 800ffaa:	6a3b      	ldr	r3, [r7, #32]
 800ffac:	683a      	ldr	r2, [r7, #0]
 800ffae:	68f8      	ldr	r0, [r7, #12]
 800ffb0:	f008 fd06 	bl	80189c0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800ffb4:	bf00      	nop
 800ffb6:	3718      	adds	r7, #24
 800ffb8:	46bd      	mov	sp, r7
 800ffba:	bd80      	pop	{r7, pc}

0800ffbc <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 800ffbc:	b590      	push	{r4, r7, lr}
 800ffbe:	b085      	sub	sp, #20
 800ffc0:	af00      	add	r7, sp, #0
 800ffc2:	4603      	mov	r3, r0
 800ffc4:	80fb      	strh	r3, [r7, #6]
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
 800ffc6:	2300      	movs	r3, #0
 800ffc8:	60fb      	str	r3, [r7, #12]
    if (id < 1)
 800ffca:	88fb      	ldrh	r3, [r7, #6]
 800ffcc:	2b00      	cmp	r3, #0
 800ffce:	d127      	bne.n	8010020 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
    {
        if (languagesArray[id] != 0)
 800ffd0:	88fb      	ldrh	r3, [r7, #6]
 800ffd2:	4a1e      	ldr	r2, [pc, #120]	; (801004c <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800ffd4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800ffd8:	2b00      	cmp	r3, #0
 800ffda:	d016      	beq.n	801000a <_ZN8touchgfx5Texts11setLanguageEt+0x4e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
 800ffdc:	88fb      	ldrh	r3, [r7, #6]
 800ffde:	4a1b      	ldr	r2, [pc, #108]	; (801004c <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800ffe0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800ffe4:	60bb      	str	r3, [r7, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800ffe6:	68bb      	ldr	r3, [r7, #8]
 800ffe8:	681b      	ldr	r3, [r3, #0]
 800ffea:	68ba      	ldr	r2, [r7, #8]
 800ffec:	4413      	add	r3, r2
 800ffee:	4a18      	ldr	r2, [pc, #96]	; (8010050 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800fff0:	6013      	str	r3, [r2, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800fff2:	68bb      	ldr	r3, [r7, #8]
 800fff4:	685b      	ldr	r3, [r3, #4]
 800fff6:	68ba      	ldr	r2, [r7, #8]
 800fff8:	4413      	add	r3, r2
 800fffa:	4a16      	ldr	r2, [pc, #88]	; (8010054 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800fffc:	6013      	str	r3, [r2, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800fffe:	68bb      	ldr	r3, [r7, #8]
 8010000:	689b      	ldr	r3, [r3, #8]
 8010002:	68ba      	ldr	r2, [r7, #8]
 8010004:	4413      	add	r3, r2
 8010006:	60fb      	str	r3, [r7, #12]
 8010008:	e00a      	b.n	8010020 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
        }
        else
        {
            // Compiled and linked in languages
            currentLanguagePtr = texts_all_languages;
 801000a:	4b11      	ldr	r3, [pc, #68]	; (8010050 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 801000c:	4a12      	ldr	r2, [pc, #72]	; (8010058 <_ZN8touchgfx5Texts11setLanguageEt+0x9c>)
 801000e:	601a      	str	r2, [r3, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8010010:	4a12      	ldr	r2, [pc, #72]	; (801005c <_ZN8touchgfx5Texts11setLanguageEt+0xa0>)
 8010012:	4b10      	ldr	r3, [pc, #64]	; (8010054 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 8010014:	601a      	str	r2, [r3, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8010016:	88fb      	ldrh	r3, [r7, #6]
 8010018:	4a11      	ldr	r2, [pc, #68]	; (8010060 <_ZN8touchgfx5Texts11setLanguageEt+0xa4>)
 801001a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 801001e:	60fb      	str	r3, [r7, #12]
        }
    }

    if (currentLanguageTypedText)
 8010020:	68fb      	ldr	r3, [r7, #12]
 8010022:	2b00      	cmp	r3, #0
 8010024:	d00d      	beq.n	8010042 <_ZN8touchgfx5Texts11setLanguageEt+0x86>
    {
        currentLanguage = id;
 8010026:	4a0f      	ldr	r2, [pc, #60]	; (8010064 <_ZN8touchgfx5Texts11setLanguageEt+0xa8>)
 8010028:	88fb      	ldrh	r3, [r7, #6]
 801002a:	8013      	strh	r3, [r2, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 801002c:	f000 f83e 	bl	80100ac <_ZN17TypedTextDatabase8getFontsEv>
 8010030:	4604      	mov	r4, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8010032:	f000 f833 	bl	801009c <_ZN17TypedTextDatabase15getInstanceSizeEv>
 8010036:	4603      	mov	r3, r0
 8010038:	461a      	mov	r2, r3
 801003a:	4621      	mov	r1, r4
 801003c:	68f8      	ldr	r0, [r7, #12]
 801003e:	f7ff fea5 	bl	800fd8c <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>
    }
}
 8010042:	bf00      	nop
 8010044:	3714      	adds	r7, #20
 8010046:	46bd      	mov	sp, r7
 8010048:	bd90      	pop	{r4, r7, pc}
 801004a:	bf00      	nop
 801004c:	20000424 	.word	0x20000424
 8010050:	2000042c 	.word	0x2000042c
 8010054:	20000430 	.word	0x20000430
 8010058:	0804cdc8 	.word	0x0804cdc8
 801005c:	0804cd84 	.word	0x0804cd84
 8010060:	0804ce74 	.word	0x0804ce74
 8010064:	20000428 	.word	0x20000428

08010068 <_ZNK8touchgfx5Texts7getTextEt>:
{
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
 8010068:	b480      	push	{r7}
 801006a:	b083      	sub	sp, #12
 801006c:	af00      	add	r7, sp, #0
 801006e:	6078      	str	r0, [r7, #4]
 8010070:	460b      	mov	r3, r1
 8010072:	807b      	strh	r3, [r7, #2]
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8010074:	4b07      	ldr	r3, [pc, #28]	; (8010094 <_ZNK8touchgfx5Texts7getTextEt+0x2c>)
 8010076:	681a      	ldr	r2, [r3, #0]
 8010078:	4b07      	ldr	r3, [pc, #28]	; (8010098 <_ZNK8touchgfx5Texts7getTextEt+0x30>)
 801007a:	6819      	ldr	r1, [r3, #0]
 801007c:	887b      	ldrh	r3, [r7, #2]
 801007e:	009b      	lsls	r3, r3, #2
 8010080:	440b      	add	r3, r1
 8010082:	681b      	ldr	r3, [r3, #0]
 8010084:	005b      	lsls	r3, r3, #1
 8010086:	4413      	add	r3, r2
}
 8010088:	4618      	mov	r0, r3
 801008a:	370c      	adds	r7, #12
 801008c:	46bd      	mov	sp, r7
 801008e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010092:	4770      	bx	lr
 8010094:	2000042c 	.word	0x2000042c
 8010098:	20000430 	.word	0x20000430

0801009c <_ZN17TypedTextDatabase15getInstanceSizeEv>:
{
    return typedTextDatabaseArray[id];
}

uint16_t getInstanceSize()
{
 801009c:	b480      	push	{r7}
 801009e:	af00      	add	r7, sp, #0
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
 80100a0:	2311      	movs	r3, #17
}
 80100a2:	4618      	mov	r0, r3
 80100a4:	46bd      	mov	sp, r7
 80100a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80100aa:	4770      	bx	lr

080100ac <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
 80100ac:	b480      	push	{r7}
 80100ae:	af00      	add	r7, sp, #0
    return touchgfx_fonts;
 80100b0:	4b02      	ldr	r3, [pc, #8]	; (80100bc <_ZN17TypedTextDatabase8getFontsEv+0x10>)
}
 80100b2:	4618      	mov	r0, r3
 80100b4:	46bd      	mov	sp, r7
 80100b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80100ba:	4770      	bx	lr
 80100bc:	20000434 	.word	0x20000434

080100c0 <_Z41__static_initialization_and_destruction_0ii>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 80100c0:	b580      	push	{r7, lr}
 80100c2:	b082      	sub	sp, #8
 80100c4:	af00      	add	r7, sp, #0
 80100c6:	6078      	str	r0, [r7, #4]
 80100c8:	6039      	str	r1, [r7, #0]
 80100ca:	687b      	ldr	r3, [r7, #4]
 80100cc:	2b01      	cmp	r3, #1
 80100ce:	d113      	bne.n	80100f8 <_Z41__static_initialization_and_destruction_0ii+0x38>
 80100d0:	683b      	ldr	r3, [r7, #0]
 80100d2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80100d6:	4293      	cmp	r3, r2
 80100d8:	d10e      	bne.n	80100f8 <_Z41__static_initialization_and_destruction_0ii+0x38>
    &(getFont_verdana_20_4bpp()),
 80100da:	f7f9 fcd7 	bl	8009a8c <_Z23getFont_verdana_20_4bppv>
 80100de:	4603      	mov	r3, r0
};
 80100e0:	4a07      	ldr	r2, [pc, #28]	; (8010100 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 80100e2:	6013      	str	r3, [r2, #0]
    &(getFont_verdana_40_4bpp()),
 80100e4:	f7f9 fd2c 	bl	8009b40 <_Z23getFont_verdana_40_4bppv>
 80100e8:	4603      	mov	r3, r0
};
 80100ea:	4a05      	ldr	r2, [pc, #20]	; (8010100 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 80100ec:	6053      	str	r3, [r2, #4]
    &(getFont_verdana_10_4bpp())
 80100ee:	f7f9 fc73 	bl	80099d8 <_Z23getFont_verdana_10_4bppv>
 80100f2:	4603      	mov	r3, r0
};
 80100f4:	4a02      	ldr	r2, [pc, #8]	; (8010100 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 80100f6:	6093      	str	r3, [r2, #8]
} // namespace TypedTextDatabase
 80100f8:	bf00      	nop
 80100fa:	3708      	adds	r7, #8
 80100fc:	46bd      	mov	sp, r7
 80100fe:	bd80      	pop	{r7, pc}
 8010100:	20000434 	.word	0x20000434

08010104 <_GLOBAL__sub_I_touchgfx_fonts>:
 8010104:	b580      	push	{r7, lr}
 8010106:	af00      	add	r7, sp, #0
 8010108:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801010c:	2001      	movs	r0, #1
 801010e:	f7ff ffd7 	bl	80100c0 <_Z41__static_initialization_and_destruction_0ii>
 8010112:	bd80      	pop	{r7, pc}

08010114 <_ZN8touchgfx9Presenter8activateEv>:
     * Place initialization code for the Presenter here.
     *
     * The activate function is called automatically when a screen transition causes this
     * Presenter to become active. Place initialization code for the Presenter here.
     */
    virtual void activate()
 8010114:	b480      	push	{r7}
 8010116:	b083      	sub	sp, #12
 8010118:	af00      	add	r7, sp, #0
 801011a:	6078      	str	r0, [r7, #4]
    {
    }
 801011c:	bf00      	nop
 801011e:	370c      	adds	r7, #12
 8010120:	46bd      	mov	sp, r7
 8010122:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010126:	4770      	bx	lr

08010128 <_ZN8touchgfx9Presenter10deactivateEv>:
     * Place cleanup code for the Presenter here.
     *
     * The deactivate function is called automatically when a screen transition causes this
     * Presenter to become inactive. Place cleanup code for the Presenter here.
     */
    virtual void deactivate()
 8010128:	b480      	push	{r7}
 801012a:	b083      	sub	sp, #12
 801012c:	af00      	add	r7, sp, #0
 801012e:	6078      	str	r0, [r7, #4]
    {
    }
 8010130:	bf00      	nop
 8010132:	370c      	adds	r7, #12
 8010134:	46bd      	mov	sp, r7
 8010136:	f85d 7b04 	ldr.w	r7, [sp], #4
 801013a:	4770      	bx	lr

0801013c <_ZN8touchgfx9PresenterD1Ev>:

    /** Finalizes an instance of the Presenter class. */
    virtual ~Presenter()
 801013c:	b480      	push	{r7}
 801013e:	b083      	sub	sp, #12
 8010140:	af00      	add	r7, sp, #0
 8010142:	6078      	str	r0, [r7, #4]
    {
 8010144:	4a04      	ldr	r2, [pc, #16]	; (8010158 <_ZN8touchgfx9PresenterD1Ev+0x1c>)
 8010146:	687b      	ldr	r3, [r7, #4]
 8010148:	601a      	str	r2, [r3, #0]
    }
 801014a:	687b      	ldr	r3, [r7, #4]
 801014c:	4618      	mov	r0, r3
 801014e:	370c      	adds	r7, #12
 8010150:	46bd      	mov	sp, r7
 8010152:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010156:	4770      	bx	lr
 8010158:	0802e6a8 	.word	0x0802e6a8

0801015c <_ZN8touchgfx9PresenterD0Ev>:
    virtual ~Presenter()
 801015c:	b580      	push	{r7, lr}
 801015e:	b082      	sub	sp, #8
 8010160:	af00      	add	r7, sp, #0
 8010162:	6078      	str	r0, [r7, #4]
    }
 8010164:	6878      	ldr	r0, [r7, #4]
 8010166:	f7ff ffe9 	bl	801013c <_ZN8touchgfx9PresenterD1Ev>
 801016a:	2104      	movs	r1, #4
 801016c:	6878      	ldr	r0, [r7, #4]
 801016e:	f01a faf8 	bl	802a762 <_ZdlPvj>
 8010172:	687b      	ldr	r3, [r7, #4]
 8010174:	4618      	mov	r0, r3
 8010176:	3708      	adds	r7, #8
 8010178:	46bd      	mov	sp, r7
 801017a:	bd80      	pop	{r7, pc}

0801017c <_ZN8touchgfx9PresenterC1Ev>:

protected:
    /** Initializes a new instance of the Presenter class. */
    Presenter()
 801017c:	b480      	push	{r7}
 801017e:	b083      	sub	sp, #12
 8010180:	af00      	add	r7, sp, #0
 8010182:	6078      	str	r0, [r7, #4]
    {
 8010184:	4a04      	ldr	r2, [pc, #16]	; (8010198 <_ZN8touchgfx9PresenterC1Ev+0x1c>)
 8010186:	687b      	ldr	r3, [r7, #4]
 8010188:	601a      	str	r2, [r3, #0]
    }
 801018a:	687b      	ldr	r3, [r7, #4]
 801018c:	4618      	mov	r0, r3
 801018e:	370c      	adds	r7, #12
 8010190:	46bd      	mov	sp, r7
 8010192:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010196:	4770      	bx	lr
 8010198:	0802e6a8 	.word	0x0802e6a8

0801019c <_ZN13ModelListenerC1Ev>:
    ModelListener() : model(0) {}
 801019c:	b480      	push	{r7}
 801019e:	b083      	sub	sp, #12
 80101a0:	af00      	add	r7, sp, #0
 80101a2:	6078      	str	r0, [r7, #4]
 80101a4:	4a06      	ldr	r2, [pc, #24]	; (80101c0 <_ZN13ModelListenerC1Ev+0x24>)
 80101a6:	687b      	ldr	r3, [r7, #4]
 80101a8:	601a      	str	r2, [r3, #0]
 80101aa:	687b      	ldr	r3, [r7, #4]
 80101ac:	2200      	movs	r2, #0
 80101ae:	605a      	str	r2, [r3, #4]
 80101b0:	687b      	ldr	r3, [r7, #4]
 80101b2:	4618      	mov	r0, r3
 80101b4:	370c      	adds	r7, #12
 80101b6:	46bd      	mov	sp, r7
 80101b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80101bc:	4770      	bx	lr
 80101be:	bf00      	nop
 80101c0:	0802e688 	.word	0x0802e688

080101c4 <_ZN13ModelListenerD1Ev>:
    virtual ~ModelListener() {}
 80101c4:	b480      	push	{r7}
 80101c6:	b083      	sub	sp, #12
 80101c8:	af00      	add	r7, sp, #0
 80101ca:	6078      	str	r0, [r7, #4]
 80101cc:	4a04      	ldr	r2, [pc, #16]	; (80101e0 <_ZN13ModelListenerD1Ev+0x1c>)
 80101ce:	687b      	ldr	r3, [r7, #4]
 80101d0:	601a      	str	r2, [r3, #0]
 80101d2:	687b      	ldr	r3, [r7, #4]
 80101d4:	4618      	mov	r0, r3
 80101d6:	370c      	adds	r7, #12
 80101d8:	46bd      	mov	sp, r7
 80101da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80101de:	4770      	bx	lr
 80101e0:	0802e688 	.word	0x0802e688

080101e4 <_ZN13ModelListenerD0Ev>:
 80101e4:	b580      	push	{r7, lr}
 80101e6:	b082      	sub	sp, #8
 80101e8:	af00      	add	r7, sp, #0
 80101ea:	6078      	str	r0, [r7, #4]
 80101ec:	6878      	ldr	r0, [r7, #4]
 80101ee:	f7ff ffe9 	bl	80101c4 <_ZN13ModelListenerD1Ev>
 80101f2:	2108      	movs	r1, #8
 80101f4:	6878      	ldr	r0, [r7, #4]
 80101f6:	f01a fab4 	bl	802a762 <_ZdlPvj>
 80101fa:	687b      	ldr	r3, [r7, #4]
 80101fc:	4618      	mov	r0, r3
 80101fe:	3708      	adds	r7, #8
 8010200:	46bd      	mov	sp, r7
 8010202:	bd80      	pop	{r7, pc}

08010204 <_ZN13ModelListener11setPressureEi>:
    virtual void setPressure(int Val){};
 8010204:	b480      	push	{r7}
 8010206:	b083      	sub	sp, #12
 8010208:	af00      	add	r7, sp, #0
 801020a:	6078      	str	r0, [r7, #4]
 801020c:	6039      	str	r1, [r7, #0]
 801020e:	bf00      	nop
 8010210:	370c      	adds	r7, #12
 8010212:	46bd      	mov	sp, r7
 8010214:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010218:	4770      	bx	lr

0801021a <_ZN13ModelListener14setTemperatureEi>:
    virtual void setTemperature(int Temperature_Val){};
 801021a:	b480      	push	{r7}
 801021c:	b083      	sub	sp, #12
 801021e:	af00      	add	r7, sp, #0
 8010220:	6078      	str	r0, [r7, #4]
 8010222:	6039      	str	r1, [r7, #0]
 8010224:	bf00      	nop
 8010226:	370c      	adds	r7, #12
 8010228:	46bd      	mov	sp, r7
 801022a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801022e:	4770      	bx	lr

08010230 <_ZN13ModelListener5setCOEi>:
    virtual void setCO(int Val){};
 8010230:	b480      	push	{r7}
 8010232:	b083      	sub	sp, #12
 8010234:	af00      	add	r7, sp, #0
 8010236:	6078      	str	r0, [r7, #4]
 8010238:	6039      	str	r1, [r7, #0]
 801023a:	bf00      	nop
 801023c:	370c      	adds	r7, #12
 801023e:	46bd      	mov	sp, r7
 8010240:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010244:	4770      	bx	lr

08010246 <_ZN13ModelListener10updateTimeEccc>:
    virtual void updateTime(char Hour,char Minute,char Second){};
 8010246:	b480      	push	{r7}
 8010248:	b083      	sub	sp, #12
 801024a:	af00      	add	r7, sp, #0
 801024c:	6078      	str	r0, [r7, #4]
 801024e:	4608      	mov	r0, r1
 8010250:	4611      	mov	r1, r2
 8010252:	461a      	mov	r2, r3
 8010254:	4603      	mov	r3, r0
 8010256:	70fb      	strb	r3, [r7, #3]
 8010258:	460b      	mov	r3, r1
 801025a:	70bb      	strb	r3, [r7, #2]
 801025c:	4613      	mov	r3, r2
 801025e:	707b      	strb	r3, [r7, #1]
 8010260:	bf00      	nop
 8010262:	370c      	adds	r7, #12
 8010264:	46bd      	mov	sp, r7
 8010266:	f85d 7b04 	ldr.w	r7, [sp], #4
 801026a:	4770      	bx	lr

0801026c <_ZN20ClockScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~ClockScreenPresenter() {}
 801026c:	b580      	push	{r7, lr}
 801026e:	b082      	sub	sp, #8
 8010270:	af00      	add	r7, sp, #0
 8010272:	6078      	str	r0, [r7, #4]
 8010274:	4a09      	ldr	r2, [pc, #36]	; (801029c <_ZN20ClockScreenPresenterD1Ev+0x30>)
 8010276:	687b      	ldr	r3, [r7, #4]
 8010278:	601a      	str	r2, [r3, #0]
 801027a:	4a09      	ldr	r2, [pc, #36]	; (80102a0 <_ZN20ClockScreenPresenterD1Ev+0x34>)
 801027c:	687b      	ldr	r3, [r7, #4]
 801027e:	605a      	str	r2, [r3, #4]
 8010280:	687b      	ldr	r3, [r7, #4]
 8010282:	3304      	adds	r3, #4
 8010284:	4618      	mov	r0, r3
 8010286:	f7ff ff9d 	bl	80101c4 <_ZN13ModelListenerD1Ev>
 801028a:	687b      	ldr	r3, [r7, #4]
 801028c:	4618      	mov	r0, r3
 801028e:	f7ff ff55 	bl	801013c <_ZN8touchgfx9PresenterD1Ev>
 8010292:	687b      	ldr	r3, [r7, #4]
 8010294:	4618      	mov	r0, r3
 8010296:	3708      	adds	r7, #8
 8010298:	46bd      	mov	sp, r7
 801029a:	bd80      	pop	{r7, pc}
 801029c:	0802e64c 	.word	0x0802e64c
 80102a0:	0802e668 	.word	0x0802e668

080102a4 <_ZThn4_N20ClockScreenPresenterD1Ev>:
 80102a4:	f1a0 0004 	sub.w	r0, r0, #4
 80102a8:	e7e0      	b.n	801026c <_ZN20ClockScreenPresenterD1Ev>
 80102aa:	bf00      	nop

080102ac <_ZN20ClockScreenPresenterD0Ev>:
 80102ac:	b580      	push	{r7, lr}
 80102ae:	b082      	sub	sp, #8
 80102b0:	af00      	add	r7, sp, #0
 80102b2:	6078      	str	r0, [r7, #4]
 80102b4:	6878      	ldr	r0, [r7, #4]
 80102b6:	f7ff ffd9 	bl	801026c <_ZN20ClockScreenPresenterD1Ev>
 80102ba:	2110      	movs	r1, #16
 80102bc:	6878      	ldr	r0, [r7, #4]
 80102be:	f01a fa50 	bl	802a762 <_ZdlPvj>
 80102c2:	687b      	ldr	r3, [r7, #4]
 80102c4:	4618      	mov	r0, r3
 80102c6:	3708      	adds	r7, #8
 80102c8:	46bd      	mov	sp, r7
 80102ca:	bd80      	pop	{r7, pc}

080102cc <_ZThn4_N20ClockScreenPresenterD0Ev>:
 80102cc:	f1a0 0004 	sub.w	r0, r0, #4
 80102d0:	e7ec      	b.n	80102ac <_ZN20ClockScreenPresenterD0Ev>
	...

080102d4 <_ZN20ClockScreenPresenterC1ER15ClockScreenView>:
#include <gui/clockscreen_screen/ClockScreenView.hpp>
#include <gui/clockscreen_screen/ClockScreenPresenter.hpp>

ClockScreenPresenter::ClockScreenPresenter(ClockScreenView& v)
 80102d4:	b580      	push	{r7, lr}
 80102d6:	b082      	sub	sp, #8
 80102d8:	af00      	add	r7, sp, #0
 80102da:	6078      	str	r0, [r7, #4]
 80102dc:	6039      	str	r1, [r7, #0]
    : view(v)
 80102de:	687b      	ldr	r3, [r7, #4]
 80102e0:	4618      	mov	r0, r3
 80102e2:	f7ff ff4b 	bl	801017c <_ZN8touchgfx9PresenterC1Ev>
 80102e6:	687b      	ldr	r3, [r7, #4]
 80102e8:	3304      	adds	r3, #4
 80102ea:	4618      	mov	r0, r3
 80102ec:	f7ff ff56 	bl	801019c <_ZN13ModelListenerC1Ev>
 80102f0:	4a06      	ldr	r2, [pc, #24]	; (801030c <_ZN20ClockScreenPresenterC1ER15ClockScreenView+0x38>)
 80102f2:	687b      	ldr	r3, [r7, #4]
 80102f4:	601a      	str	r2, [r3, #0]
 80102f6:	4a06      	ldr	r2, [pc, #24]	; (8010310 <_ZN20ClockScreenPresenterC1ER15ClockScreenView+0x3c>)
 80102f8:	687b      	ldr	r3, [r7, #4]
 80102fa:	605a      	str	r2, [r3, #4]
 80102fc:	687b      	ldr	r3, [r7, #4]
 80102fe:	683a      	ldr	r2, [r7, #0]
 8010300:	60da      	str	r2, [r3, #12]
{

}
 8010302:	687b      	ldr	r3, [r7, #4]
 8010304:	4618      	mov	r0, r3
 8010306:	3708      	adds	r7, #8
 8010308:	46bd      	mov	sp, r7
 801030a:	bd80      	pop	{r7, pc}
 801030c:	0802e64c 	.word	0x0802e64c
 8010310:	0802e668 	.word	0x0802e668

08010314 <_ZN20ClockScreenPresenter8activateEv>:

void ClockScreenPresenter::activate()
{
 8010314:	b480      	push	{r7}
 8010316:	b083      	sub	sp, #12
 8010318:	af00      	add	r7, sp, #0
 801031a:	6078      	str	r0, [r7, #4]

}
 801031c:	bf00      	nop
 801031e:	370c      	adds	r7, #12
 8010320:	46bd      	mov	sp, r7
 8010322:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010326:	4770      	bx	lr

08010328 <_ZN20ClockScreenPresenter10deactivateEv>:

void ClockScreenPresenter::deactivate()
{
 8010328:	b480      	push	{r7}
 801032a:	b083      	sub	sp, #12
 801032c:	af00      	add	r7, sp, #0
 801032e:	6078      	str	r0, [r7, #4]

}
 8010330:	bf00      	nop
 8010332:	370c      	adds	r7, #12
 8010334:	46bd      	mov	sp, r7
 8010336:	f85d 7b04 	ldr.w	r7, [sp], #4
 801033a:	4770      	bx	lr

0801033c <_ZN20ClockScreenPresenter10updateTimeEccc>:
void ClockScreenPresenter::updateTime(char Hour,char Minute,char Second)
{
 801033c:	b590      	push	{r4, r7, lr}
 801033e:	b083      	sub	sp, #12
 8010340:	af00      	add	r7, sp, #0
 8010342:	6078      	str	r0, [r7, #4]
 8010344:	4608      	mov	r0, r1
 8010346:	4611      	mov	r1, r2
 8010348:	461a      	mov	r2, r3
 801034a:	4603      	mov	r3, r0
 801034c:	70fb      	strb	r3, [r7, #3]
 801034e:	460b      	mov	r3, r1
 8010350:	70bb      	strb	r3, [r7, #2]
 8010352:	4613      	mov	r3, r2
 8010354:	707b      	strb	r3, [r7, #1]
	view.updateTime(Hour,Minute,Second);
 8010356:	687b      	ldr	r3, [r7, #4]
 8010358:	68d8      	ldr	r0, [r3, #12]
 801035a:	687b      	ldr	r3, [r7, #4]
 801035c:	68db      	ldr	r3, [r3, #12]
 801035e:	681b      	ldr	r3, [r3, #0]
 8010360:	332c      	adds	r3, #44	; 0x2c
 8010362:	681c      	ldr	r4, [r3, #0]
 8010364:	787b      	ldrb	r3, [r7, #1]
 8010366:	78ba      	ldrb	r2, [r7, #2]
 8010368:	78f9      	ldrb	r1, [r7, #3]
 801036a:	47a0      	blx	r4
}
 801036c:	bf00      	nop
 801036e:	370c      	adds	r7, #12
 8010370:	46bd      	mov	sp, r7
 8010372:	bd90      	pop	{r4, r7, pc}

08010374 <_ZThn4_N20ClockScreenPresenter10updateTimeEccc>:
    virtual void updateTime(char Hour,char Minute,char Second);
 8010374:	f1a0 0004 	sub.w	r0, r0, #4
 8010378:	f7ff bfe0 	b.w	801033c <_ZN20ClockScreenPresenter10updateTimeEccc>

0801037c <_ZN15ClockScreenViewD1Ev>:

class ClockScreenView : public ClockScreenViewBase
{
public:
    ClockScreenView();
    virtual ~ClockScreenView() {}
 801037c:	b580      	push	{r7, lr}
 801037e:	b082      	sub	sp, #8
 8010380:	af00      	add	r7, sp, #0
 8010382:	6078      	str	r0, [r7, #4]
 8010384:	4a05      	ldr	r2, [pc, #20]	; (801039c <_ZN15ClockScreenViewD1Ev+0x20>)
 8010386:	687b      	ldr	r3, [r7, #4]
 8010388:	601a      	str	r2, [r3, #0]
 801038a:	687b      	ldr	r3, [r7, #4]
 801038c:	4618      	mov	r0, r3
 801038e:	f7fa faef 	bl	800a970 <_ZN19ClockScreenViewBaseD1Ev>
 8010392:	687b      	ldr	r3, [r7, #4]
 8010394:	4618      	mov	r0, r3
 8010396:	3708      	adds	r7, #8
 8010398:	46bd      	mov	sp, r7
 801039a:	bd80      	pop	{r7, pc}
 801039c:	0802e6c0 	.word	0x0802e6c0

080103a0 <_ZN15ClockScreenViewD0Ev>:
 80103a0:	b580      	push	{r7, lr}
 80103a2:	b082      	sub	sp, #8
 80103a4:	af00      	add	r7, sp, #0
 80103a6:	6078      	str	r0, [r7, #4]
 80103a8:	6878      	ldr	r0, [r7, #4]
 80103aa:	f7ff ffe7 	bl	801037c <_ZN15ClockScreenViewD1Ev>
 80103ae:	f44f 71cc 	mov.w	r1, #408	; 0x198
 80103b2:	6878      	ldr	r0, [r7, #4]
 80103b4:	f01a f9d5 	bl	802a762 <_ZdlPvj>
 80103b8:	687b      	ldr	r3, [r7, #4]
 80103ba:	4618      	mov	r0, r3
 80103bc:	3708      	adds	r7, #8
 80103be:	46bd      	mov	sp, r7
 80103c0:	bd80      	pop	{r7, pc}
	...

080103c4 <_ZN15ClockScreenViewC1Ev>:
#include <gui/clockscreen_screen/ClockScreenView.hpp>

ClockScreenView::ClockScreenView()
 80103c4:	b580      	push	{r7, lr}
 80103c6:	b082      	sub	sp, #8
 80103c8:	af00      	add	r7, sp, #0
 80103ca:	6078      	str	r0, [r7, #4]
 80103cc:	687b      	ldr	r3, [r7, #4]
 80103ce:	4618      	mov	r0, r3
 80103d0:	f7fa f958 	bl	800a684 <_ZN19ClockScreenViewBaseC1Ev>
 80103d4:	4a03      	ldr	r2, [pc, #12]	; (80103e4 <_ZN15ClockScreenViewC1Ev+0x20>)
 80103d6:	687b      	ldr	r3, [r7, #4]
 80103d8:	601a      	str	r2, [r3, #0]
{

}
 80103da:	687b      	ldr	r3, [r7, #4]
 80103dc:	4618      	mov	r0, r3
 80103de:	3708      	adds	r7, #8
 80103e0:	46bd      	mov	sp, r7
 80103e2:	bd80      	pop	{r7, pc}
 80103e4:	0802e6c0 	.word	0x0802e6c0

080103e8 <_ZN15ClockScreenView11setupScreenEv>:

void ClockScreenView::setupScreen()
{
 80103e8:	b580      	push	{r7, lr}
 80103ea:	b082      	sub	sp, #8
 80103ec:	af00      	add	r7, sp, #0
 80103ee:	6078      	str	r0, [r7, #4]
    ClockScreenViewBase::setupScreen();
 80103f0:	687b      	ldr	r3, [r7, #4]
 80103f2:	4618      	mov	r0, r3
 80103f4:	f7fa fafb 	bl	800a9ee <_ZN19ClockScreenViewBase11setupScreenEv>
}
 80103f8:	bf00      	nop
 80103fa:	3708      	adds	r7, #8
 80103fc:	46bd      	mov	sp, r7
 80103fe:	bd80      	pop	{r7, pc}

08010400 <_ZN15ClockScreenView14tearDownScreenEv>:

void ClockScreenView::tearDownScreen()
{
 8010400:	b580      	push	{r7, lr}
 8010402:	b082      	sub	sp, #8
 8010404:	af00      	add	r7, sp, #0
 8010406:	6078      	str	r0, [r7, #4]
    ClockScreenViewBase::tearDownScreen();
 8010408:	687b      	ldr	r3, [r7, #4]
 801040a:	4618      	mov	r0, r3
 801040c:	f7f9 fe1c 	bl	800a048 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 8010410:	bf00      	nop
 8010412:	3708      	adds	r7, #8
 8010414:	46bd      	mov	sp, r7
 8010416:	bd80      	pop	{r7, pc}

08010418 <_ZN15ClockScreenView10updateTimeEccc>:

void ClockScreenView::updateTime(char Hour, char Minute, char Second)
{
 8010418:	b580      	push	{r7, lr}
 801041a:	b082      	sub	sp, #8
 801041c:	af00      	add	r7, sp, #0
 801041e:	6078      	str	r0, [r7, #4]
 8010420:	4608      	mov	r0, r1
 8010422:	4611      	mov	r1, r2
 8010424:	461a      	mov	r2, r3
 8010426:	4603      	mov	r3, r0
 8010428:	70fb      	strb	r3, [r7, #3]
 801042a:	460b      	mov	r3, r1
 801042c:	70bb      	strb	r3, [r7, #2]
 801042e:	4613      	mov	r3, r2
 8010430:	707b      	strb	r3, [r7, #1]
	Clock.setTime24Hour(Hour, Minute, Second);
 8010432:	687b      	ldr	r3, [r7, #4]
 8010434:	f103 00b4 	add.w	r0, r3, #180	; 0xb4
 8010438:	787b      	ldrb	r3, [r7, #1]
 801043a:	78ba      	ldrb	r2, [r7, #2]
 801043c:	78f9      	ldrb	r1, [r7, #3]
 801043e:	f002 fd4a 	bl	8012ed6 <_ZN8touchgfx13AbstractClock13setTime24HourEhhh>
}
 8010442:	bf00      	nop
 8010444:	3708      	adds	r7, #8
 8010446:	46bd      	mov	sp, r7
 8010448:	bd80      	pop	{r7, pc}
	...

0801044c <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 801044c:	b580      	push	{r7, lr}
 801044e:	b082      	sub	sp, #8
 8010450:	af00      	add	r7, sp, #0
 8010452:	6078      	str	r0, [r7, #4]
 8010454:	4a05      	ldr	r2, [pc, #20]	; (801046c <_ZN19FrontendApplicationD1Ev+0x20>)
 8010456:	687b      	ldr	r3, [r7, #4]
 8010458:	601a      	str	r2, [r3, #0]
 801045a:	687b      	ldr	r3, [r7, #4]
 801045c:	4618      	mov	r0, r3
 801045e:	f7fa fecf 	bl	800b200 <_ZN23FrontendApplicationBaseD1Ev>
 8010462:	687b      	ldr	r3, [r7, #4]
 8010464:	4618      	mov	r0, r3
 8010466:	3708      	adds	r7, #8
 8010468:	46bd      	mov	sp, r7
 801046a:	bd80      	pop	{r7, pc}
 801046c:	0802e6f8 	.word	0x0802e6f8

08010470 <_ZN19FrontendApplicationD0Ev>:
 8010470:	b580      	push	{r7, lr}
 8010472:	b082      	sub	sp, #8
 8010474:	af00      	add	r7, sp, #0
 8010476:	6078      	str	r0, [r7, #4]
 8010478:	6878      	ldr	r0, [r7, #4]
 801047a:	f7ff ffe7 	bl	801044c <_ZN19FrontendApplicationD1Ev>
 801047e:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8010482:	6878      	ldr	r0, [r7, #4]
 8010484:	f01a f96d 	bl	802a762 <_ZdlPvj>
 8010488:	687b      	ldr	r3, [r7, #4]
 801048a:	4618      	mov	r0, r3
 801048c:	3708      	adds	r7, #8
 801048e:	46bd      	mov	sp, r7
 8010490:	bd80      	pop	{r7, pc}

08010492 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8010492:	b580      	push	{r7, lr}
 8010494:	b082      	sub	sp, #8
 8010496:	af00      	add	r7, sp, #0
 8010498:	6078      	str	r0, [r7, #4]
    {
        model.tick();
 801049a:	687b      	ldr	r3, [r7, #4]
 801049c:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 80104a0:	4618      	mov	r0, r3
 80104a2:	f000 f9e9 	bl	8010878 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 80104a6:	687b      	ldr	r3, [r7, #4]
 80104a8:	4618      	mov	r0, r3
 80104aa:	f008 ff99 	bl	80193e0 <_ZN8touchgfx11Application15handleTickEventEv>
    }
 80104ae:	bf00      	nop
 80104b0:	3708      	adds	r7, #8
 80104b2:	46bd      	mov	sp, r7
 80104b4:	bd80      	pop	{r7, pc}
	...

080104b8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 80104b8:	b580      	push	{r7, lr}
 80104ba:	b084      	sub	sp, #16
 80104bc:	af00      	add	r7, sp, #0
 80104be:	60f8      	str	r0, [r7, #12]
 80104c0:	60b9      	str	r1, [r7, #8]
 80104c2:	607a      	str	r2, [r7, #4]
    : FrontendApplicationBase(m, heap)
 80104c4:	68fb      	ldr	r3, [r7, #12]
 80104c6:	687a      	ldr	r2, [r7, #4]
 80104c8:	68b9      	ldr	r1, [r7, #8]
 80104ca:	4618      	mov	r0, r3
 80104cc:	f7fa fee8 	bl	800b2a0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 80104d0:	4a03      	ldr	r2, [pc, #12]	; (80104e0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x28>)
 80104d2:	68fb      	ldr	r3, [r7, #12]
 80104d4:	601a      	str	r2, [r3, #0]
{

}
 80104d6:	68fb      	ldr	r3, [r7, #12]
 80104d8:	4618      	mov	r0, r3
 80104da:	3710      	adds	r7, #16
 80104dc:	46bd      	mov	sp, r7
 80104de:	bd80      	pop	{r7, pc}
 80104e0:	0802e6f8 	.word	0x0802e6f8

080104e4 <_ZN17COScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~COScreenPresenter() {}
 80104e4:	b580      	push	{r7, lr}
 80104e6:	b082      	sub	sp, #8
 80104e8:	af00      	add	r7, sp, #0
 80104ea:	6078      	str	r0, [r7, #4]
 80104ec:	4a09      	ldr	r2, [pc, #36]	; (8010514 <_ZN17COScreenPresenterD1Ev+0x30>)
 80104ee:	687b      	ldr	r3, [r7, #4]
 80104f0:	601a      	str	r2, [r3, #0]
 80104f2:	4a09      	ldr	r2, [pc, #36]	; (8010518 <_ZN17COScreenPresenterD1Ev+0x34>)
 80104f4:	687b      	ldr	r3, [r7, #4]
 80104f6:	605a      	str	r2, [r3, #4]
 80104f8:	687b      	ldr	r3, [r7, #4]
 80104fa:	3304      	adds	r3, #4
 80104fc:	4618      	mov	r0, r3
 80104fe:	f7ff fe61 	bl	80101c4 <_ZN13ModelListenerD1Ev>
 8010502:	687b      	ldr	r3, [r7, #4]
 8010504:	4618      	mov	r0, r3
 8010506:	f7ff fe19 	bl	801013c <_ZN8touchgfx9PresenterD1Ev>
 801050a:	687b      	ldr	r3, [r7, #4]
 801050c:	4618      	mov	r0, r3
 801050e:	3708      	adds	r7, #8
 8010510:	46bd      	mov	sp, r7
 8010512:	bd80      	pop	{r7, pc}
 8010514:	0802e74c 	.word	0x0802e74c
 8010518:	0802e768 	.word	0x0802e768

0801051c <_ZThn4_N17COScreenPresenterD1Ev>:
 801051c:	f1a0 0004 	sub.w	r0, r0, #4
 8010520:	e7e0      	b.n	80104e4 <_ZN17COScreenPresenterD1Ev>
 8010522:	bf00      	nop

08010524 <_ZN17COScreenPresenterD0Ev>:
 8010524:	b580      	push	{r7, lr}
 8010526:	b082      	sub	sp, #8
 8010528:	af00      	add	r7, sp, #0
 801052a:	6078      	str	r0, [r7, #4]
 801052c:	6878      	ldr	r0, [r7, #4]
 801052e:	f7ff ffd9 	bl	80104e4 <_ZN17COScreenPresenterD1Ev>
 8010532:	2110      	movs	r1, #16
 8010534:	6878      	ldr	r0, [r7, #4]
 8010536:	f01a f914 	bl	802a762 <_ZdlPvj>
 801053a:	687b      	ldr	r3, [r7, #4]
 801053c:	4618      	mov	r0, r3
 801053e:	3708      	adds	r7, #8
 8010540:	46bd      	mov	sp, r7
 8010542:	bd80      	pop	{r7, pc}

08010544 <_ZThn4_N17COScreenPresenterD0Ev>:
 8010544:	f1a0 0004 	sub.w	r0, r0, #4
 8010548:	e7ec      	b.n	8010524 <_ZN17COScreenPresenterD0Ev>
	...

0801054c <_ZN17COScreenPresenterC1ER12COScreenView>:
#include <gui/coscreen_screen/COScreenView.hpp>
#include <gui/coscreen_screen/COScreenPresenter.hpp>

COScreenPresenter::COScreenPresenter(COScreenView& v)
 801054c:	b580      	push	{r7, lr}
 801054e:	b082      	sub	sp, #8
 8010550:	af00      	add	r7, sp, #0
 8010552:	6078      	str	r0, [r7, #4]
 8010554:	6039      	str	r1, [r7, #0]
    : view(v)
 8010556:	687b      	ldr	r3, [r7, #4]
 8010558:	4618      	mov	r0, r3
 801055a:	f7ff fe0f 	bl	801017c <_ZN8touchgfx9PresenterC1Ev>
 801055e:	687b      	ldr	r3, [r7, #4]
 8010560:	3304      	adds	r3, #4
 8010562:	4618      	mov	r0, r3
 8010564:	f7ff fe1a 	bl	801019c <_ZN13ModelListenerC1Ev>
 8010568:	4a06      	ldr	r2, [pc, #24]	; (8010584 <_ZN17COScreenPresenterC1ER12COScreenView+0x38>)
 801056a:	687b      	ldr	r3, [r7, #4]
 801056c:	601a      	str	r2, [r3, #0]
 801056e:	4a06      	ldr	r2, [pc, #24]	; (8010588 <_ZN17COScreenPresenterC1ER12COScreenView+0x3c>)
 8010570:	687b      	ldr	r3, [r7, #4]
 8010572:	605a      	str	r2, [r3, #4]
 8010574:	687b      	ldr	r3, [r7, #4]
 8010576:	683a      	ldr	r2, [r7, #0]
 8010578:	60da      	str	r2, [r3, #12]
{

}
 801057a:	687b      	ldr	r3, [r7, #4]
 801057c:	4618      	mov	r0, r3
 801057e:	3708      	adds	r7, #8
 8010580:	46bd      	mov	sp, r7
 8010582:	bd80      	pop	{r7, pc}
 8010584:	0802e74c 	.word	0x0802e74c
 8010588:	0802e768 	.word	0x0802e768

0801058c <_ZN17COScreenPresenter8activateEv>:

void COScreenPresenter::activate()
{
 801058c:	b480      	push	{r7}
 801058e:	b083      	sub	sp, #12
 8010590:	af00      	add	r7, sp, #0
 8010592:	6078      	str	r0, [r7, #4]

}
 8010594:	bf00      	nop
 8010596:	370c      	adds	r7, #12
 8010598:	46bd      	mov	sp, r7
 801059a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801059e:	4770      	bx	lr

080105a0 <_ZN17COScreenPresenter10deactivateEv>:

void COScreenPresenter::deactivate()
{
 80105a0:	b480      	push	{r7}
 80105a2:	b083      	sub	sp, #12
 80105a4:	af00      	add	r7, sp, #0
 80105a6:	6078      	str	r0, [r7, #4]

}
 80105a8:	bf00      	nop
 80105aa:	370c      	adds	r7, #12
 80105ac:	46bd      	mov	sp, r7
 80105ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80105b2:	4770      	bx	lr

080105b4 <_ZN17COScreenPresenter5setCOEi>:

void COScreenPresenter::setCO(int Val)
{
 80105b4:	b580      	push	{r7, lr}
 80105b6:	b082      	sub	sp, #8
 80105b8:	af00      	add	r7, sp, #0
 80105ba:	6078      	str	r0, [r7, #4]
 80105bc:	6039      	str	r1, [r7, #0]
	view.setCO(Val);
 80105be:	687b      	ldr	r3, [r7, #4]
 80105c0:	68da      	ldr	r2, [r3, #12]
 80105c2:	687b      	ldr	r3, [r7, #4]
 80105c4:	68db      	ldr	r3, [r3, #12]
 80105c6:	681b      	ldr	r3, [r3, #0]
 80105c8:	332c      	adds	r3, #44	; 0x2c
 80105ca:	681b      	ldr	r3, [r3, #0]
 80105cc:	6839      	ldr	r1, [r7, #0]
 80105ce:	4610      	mov	r0, r2
 80105d0:	4798      	blx	r3
}
 80105d2:	bf00      	nop
 80105d4:	3708      	adds	r7, #8
 80105d6:	46bd      	mov	sp, r7
 80105d8:	bd80      	pop	{r7, pc}

080105da <_ZThn4_N17COScreenPresenter5setCOEi>:
    virtual void setCO(int Val);
 80105da:	f1a0 0004 	sub.w	r0, r0, #4
 80105de:	f7ff bfe9 	b.w	80105b4 <_ZN17COScreenPresenter5setCOEi>
	...

080105e4 <_ZN12COScreenViewD1Ev>:

class COScreenView : public COScreenViewBase
{
public:
    COScreenView();
    virtual ~COScreenView() {}
 80105e4:	b580      	push	{r7, lr}
 80105e6:	b082      	sub	sp, #8
 80105e8:	af00      	add	r7, sp, #0
 80105ea:	6078      	str	r0, [r7, #4]
 80105ec:	4a05      	ldr	r2, [pc, #20]	; (8010604 <_ZN12COScreenViewD1Ev+0x20>)
 80105ee:	687b      	ldr	r3, [r7, #4]
 80105f0:	601a      	str	r2, [r3, #0]
 80105f2:	687b      	ldr	r3, [r7, #4]
 80105f4:	4618      	mov	r0, r3
 80105f6:	f7fc fe9f 	bl	800d338 <_ZN16COScreenViewBaseD1Ev>
 80105fa:	687b      	ldr	r3, [r7, #4]
 80105fc:	4618      	mov	r0, r3
 80105fe:	3708      	adds	r7, #8
 8010600:	46bd      	mov	sp, r7
 8010602:	bd80      	pop	{r7, pc}
 8010604:	0802e788 	.word	0x0802e788

08010608 <_ZN12COScreenViewD0Ev>:
 8010608:	b580      	push	{r7, lr}
 801060a:	b082      	sub	sp, #8
 801060c:	af00      	add	r7, sp, #0
 801060e:	6078      	str	r0, [r7, #4]
 8010610:	6878      	ldr	r0, [r7, #4]
 8010612:	f7ff ffe7 	bl	80105e4 <_ZN12COScreenViewD1Ev>
 8010616:	f44f 713d 	mov.w	r1, #756	; 0x2f4
 801061a:	6878      	ldr	r0, [r7, #4]
 801061c:	f01a f8a1 	bl	802a762 <_ZdlPvj>
 8010620:	687b      	ldr	r3, [r7, #4]
 8010622:	4618      	mov	r0, r3
 8010624:	3708      	adds	r7, #8
 8010626:	46bd      	mov	sp, r7
 8010628:	bd80      	pop	{r7, pc}
	...

0801062c <_ZN12COScreenViewC1Ev>:
#include <gui/coscreen_screen/COScreenView.hpp>

COScreenView::COScreenView()
 801062c:	b580      	push	{r7, lr}
 801062e:	b082      	sub	sp, #8
 8010630:	af00      	add	r7, sp, #0
 8010632:	6078      	str	r0, [r7, #4]
 8010634:	687b      	ldr	r3, [r7, #4]
 8010636:	4618      	mov	r0, r3
 8010638:	f7fc fc4c 	bl	800ced4 <_ZN16COScreenViewBaseC1Ev>
 801063c:	4a03      	ldr	r2, [pc, #12]	; (801064c <_ZN12COScreenViewC1Ev+0x20>)
 801063e:	687b      	ldr	r3, [r7, #4]
 8010640:	601a      	str	r2, [r3, #0]
{

}
 8010642:	687b      	ldr	r3, [r7, #4]
 8010644:	4618      	mov	r0, r3
 8010646:	3708      	adds	r7, #8
 8010648:	46bd      	mov	sp, r7
 801064a:	bd80      	pop	{r7, pc}
 801064c:	0802e788 	.word	0x0802e788

08010650 <_ZN12COScreenView11setupScreenEv>:

void COScreenView::setupScreen()
{
 8010650:	b580      	push	{r7, lr}
 8010652:	b082      	sub	sp, #8
 8010654:	af00      	add	r7, sp, #0
 8010656:	6078      	str	r0, [r7, #4]
    COScreenViewBase::setupScreen();
 8010658:	687b      	ldr	r3, [r7, #4]
 801065a:	4618      	mov	r0, r3
 801065c:	f7fc feaf 	bl	800d3be <_ZN16COScreenViewBase11setupScreenEv>
}
 8010660:	bf00      	nop
 8010662:	3708      	adds	r7, #8
 8010664:	46bd      	mov	sp, r7
 8010666:	bd80      	pop	{r7, pc}

08010668 <_ZN12COScreenView14tearDownScreenEv>:

void COScreenView::tearDownScreen()
{
 8010668:	b580      	push	{r7, lr}
 801066a:	b082      	sub	sp, #8
 801066c:	af00      	add	r7, sp, #0
 801066e:	6078      	str	r0, [r7, #4]
    COScreenViewBase::tearDownScreen();
 8010670:	687b      	ldr	r3, [r7, #4]
 8010672:	4618      	mov	r0, r3
 8010674:	f7f9 fce8 	bl	800a048 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 8010678:	bf00      	nop
 801067a:	3708      	adds	r7, #8
 801067c:	46bd      	mov	sp, r7
 801067e:	bd80      	pop	{r7, pc}

08010680 <_ZN12COScreenView5setCOEi>:

void COScreenView::setCO(int Val)
{
 8010680:	b580      	push	{r7, lr}
 8010682:	b082      	sub	sp, #8
 8010684:	af00      	add	r7, sp, #0
 8010686:	6078      	str	r0, [r7, #4]
 8010688:	6039      	str	r1, [r7, #0]
	Unicode::snprintf(CODataBuffer, CODATA_SIZE, "%d",Val);
 801068a:	687b      	ldr	r3, [r7, #4]
 801068c:	f503 7037 	add.w	r0, r3, #732	; 0x2dc
 8010690:	683b      	ldr	r3, [r7, #0]
 8010692:	4a0a      	ldr	r2, [pc, #40]	; (80106bc <_ZN12COScreenView5setCOEi+0x3c>)
 8010694:	2104      	movs	r1, #4
 8010696:	f00c f84f 	bl	801c738 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	COGauge.updateValue(Val, 30); // animates needle and arc to new value with a duration of 30 ticks
 801069a:	687b      	ldr	r3, [r7, #4]
 801069c:	33f4      	adds	r3, #244	; 0xf4
 801069e:	221e      	movs	r2, #30
 80106a0:	6839      	ldr	r1, [r7, #0]
 80106a2:	4618      	mov	r0, r3
 80106a4:	f002 f97d 	bl	80129a2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>
	COGauge.invalidate();
 80106a8:	687b      	ldr	r3, [r7, #4]
 80106aa:	33f4      	adds	r3, #244	; 0xf4
 80106ac:	4618      	mov	r0, r3
 80106ae:	f009 febb 	bl	801a428 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 80106b2:	bf00      	nop
 80106b4:	3708      	adds	r7, #8
 80106b6:	46bd      	mov	sp, r7
 80106b8:	bd80      	pop	{r7, pc}
 80106ba:	bf00      	nop
 80106bc:	0802d400 	.word	0x0802d400

080106c0 <_ZN19MainScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MainScreenPresenter() {}
 80106c0:	b580      	push	{r7, lr}
 80106c2:	b082      	sub	sp, #8
 80106c4:	af00      	add	r7, sp, #0
 80106c6:	6078      	str	r0, [r7, #4]
 80106c8:	4a09      	ldr	r2, [pc, #36]	; (80106f0 <_ZN19MainScreenPresenterD1Ev+0x30>)
 80106ca:	687b      	ldr	r3, [r7, #4]
 80106cc:	601a      	str	r2, [r3, #0]
 80106ce:	4a09      	ldr	r2, [pc, #36]	; (80106f4 <_ZN19MainScreenPresenterD1Ev+0x34>)
 80106d0:	687b      	ldr	r3, [r7, #4]
 80106d2:	605a      	str	r2, [r3, #4]
 80106d4:	687b      	ldr	r3, [r7, #4]
 80106d6:	3304      	adds	r3, #4
 80106d8:	4618      	mov	r0, r3
 80106da:	f7ff fd73 	bl	80101c4 <_ZN13ModelListenerD1Ev>
 80106de:	687b      	ldr	r3, [r7, #4]
 80106e0:	4618      	mov	r0, r3
 80106e2:	f7ff fd2b 	bl	801013c <_ZN8touchgfx9PresenterD1Ev>
 80106e6:	687b      	ldr	r3, [r7, #4]
 80106e8:	4618      	mov	r0, r3
 80106ea:	3708      	adds	r7, #8
 80106ec:	46bd      	mov	sp, r7
 80106ee:	bd80      	pop	{r7, pc}
 80106f0:	0802e7c0 	.word	0x0802e7c0
 80106f4:	0802e7d8 	.word	0x0802e7d8

080106f8 <_ZThn4_N19MainScreenPresenterD1Ev>:
 80106f8:	f1a0 0004 	sub.w	r0, r0, #4
 80106fc:	e7e0      	b.n	80106c0 <_ZN19MainScreenPresenterD1Ev>
 80106fe:	bf00      	nop

08010700 <_ZN19MainScreenPresenterD0Ev>:
 8010700:	b580      	push	{r7, lr}
 8010702:	b082      	sub	sp, #8
 8010704:	af00      	add	r7, sp, #0
 8010706:	6078      	str	r0, [r7, #4]
 8010708:	6878      	ldr	r0, [r7, #4]
 801070a:	f7ff ffd9 	bl	80106c0 <_ZN19MainScreenPresenterD1Ev>
 801070e:	2110      	movs	r1, #16
 8010710:	6878      	ldr	r0, [r7, #4]
 8010712:	f01a f826 	bl	802a762 <_ZdlPvj>
 8010716:	687b      	ldr	r3, [r7, #4]
 8010718:	4618      	mov	r0, r3
 801071a:	3708      	adds	r7, #8
 801071c:	46bd      	mov	sp, r7
 801071e:	bd80      	pop	{r7, pc}

08010720 <_ZThn4_N19MainScreenPresenterD0Ev>:
 8010720:	f1a0 0004 	sub.w	r0, r0, #4
 8010724:	e7ec      	b.n	8010700 <_ZN19MainScreenPresenterD0Ev>
	...

08010728 <_ZN19MainScreenPresenterC1ER14MainScreenView>:
#include <gui/mainscreen_screen/MainScreenView.hpp>
#include <gui/mainscreen_screen/MainScreenPresenter.hpp>

MainScreenPresenter::MainScreenPresenter(MainScreenView& v)
 8010728:	b580      	push	{r7, lr}
 801072a:	b082      	sub	sp, #8
 801072c:	af00      	add	r7, sp, #0
 801072e:	6078      	str	r0, [r7, #4]
 8010730:	6039      	str	r1, [r7, #0]
    : view(v)
 8010732:	687b      	ldr	r3, [r7, #4]
 8010734:	4618      	mov	r0, r3
 8010736:	f7ff fd21 	bl	801017c <_ZN8touchgfx9PresenterC1Ev>
 801073a:	687b      	ldr	r3, [r7, #4]
 801073c:	3304      	adds	r3, #4
 801073e:	4618      	mov	r0, r3
 8010740:	f7ff fd2c 	bl	801019c <_ZN13ModelListenerC1Ev>
 8010744:	4a06      	ldr	r2, [pc, #24]	; (8010760 <_ZN19MainScreenPresenterC1ER14MainScreenView+0x38>)
 8010746:	687b      	ldr	r3, [r7, #4]
 8010748:	601a      	str	r2, [r3, #0]
 801074a:	4a06      	ldr	r2, [pc, #24]	; (8010764 <_ZN19MainScreenPresenterC1ER14MainScreenView+0x3c>)
 801074c:	687b      	ldr	r3, [r7, #4]
 801074e:	605a      	str	r2, [r3, #4]
 8010750:	687b      	ldr	r3, [r7, #4]
 8010752:	683a      	ldr	r2, [r7, #0]
 8010754:	60da      	str	r2, [r3, #12]
{

}
 8010756:	687b      	ldr	r3, [r7, #4]
 8010758:	4618      	mov	r0, r3
 801075a:	3708      	adds	r7, #8
 801075c:	46bd      	mov	sp, r7
 801075e:	bd80      	pop	{r7, pc}
 8010760:	0802e7c0 	.word	0x0802e7c0
 8010764:	0802e7d8 	.word	0x0802e7d8

08010768 <_ZN19MainScreenPresenter8activateEv>:

void MainScreenPresenter::activate()
{
 8010768:	b480      	push	{r7}
 801076a:	b083      	sub	sp, #12
 801076c:	af00      	add	r7, sp, #0
 801076e:	6078      	str	r0, [r7, #4]

}
 8010770:	bf00      	nop
 8010772:	370c      	adds	r7, #12
 8010774:	46bd      	mov	sp, r7
 8010776:	f85d 7b04 	ldr.w	r7, [sp], #4
 801077a:	4770      	bx	lr

0801077c <_ZN19MainScreenPresenter10deactivateEv>:

void MainScreenPresenter::deactivate()
{
 801077c:	b480      	push	{r7}
 801077e:	b083      	sub	sp, #12
 8010780:	af00      	add	r7, sp, #0
 8010782:	6078      	str	r0, [r7, #4]

}
 8010784:	bf00      	nop
 8010786:	370c      	adds	r7, #12
 8010788:	46bd      	mov	sp, r7
 801078a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801078e:	4770      	bx	lr

08010790 <_ZN14MainScreenViewD1Ev>:

class MainScreenView : public MainScreenViewBase
{
public:
    MainScreenView();
    virtual ~MainScreenView() {}
 8010790:	b580      	push	{r7, lr}
 8010792:	b082      	sub	sp, #8
 8010794:	af00      	add	r7, sp, #0
 8010796:	6078      	str	r0, [r7, #4]
 8010798:	4a05      	ldr	r2, [pc, #20]	; (80107b0 <_ZN14MainScreenViewD1Ev+0x20>)
 801079a:	687b      	ldr	r3, [r7, #4]
 801079c:	601a      	str	r2, [r3, #0]
 801079e:	687b      	ldr	r3, [r7, #4]
 80107a0:	4618      	mov	r0, r3
 80107a2:	f7fe f913 	bl	800e9cc <_ZN18MainScreenViewBaseD1Ev>
 80107a6:	687b      	ldr	r3, [r7, #4]
 80107a8:	4618      	mov	r0, r3
 80107aa:	3708      	adds	r7, #8
 80107ac:	46bd      	mov	sp, r7
 80107ae:	bd80      	pop	{r7, pc}
 80107b0:	0802e7f8 	.word	0x0802e7f8

080107b4 <_ZN14MainScreenViewD0Ev>:
 80107b4:	b580      	push	{r7, lr}
 80107b6:	b082      	sub	sp, #8
 80107b8:	af00      	add	r7, sp, #0
 80107ba:	6078      	str	r0, [r7, #4]
 80107bc:	6878      	ldr	r0, [r7, #4]
 80107be:	f7ff ffe7 	bl	8010790 <_ZN14MainScreenViewD1Ev>
 80107c2:	f240 410c 	movw	r1, #1036	; 0x40c
 80107c6:	6878      	ldr	r0, [r7, #4]
 80107c8:	f019 ffcb 	bl	802a762 <_ZdlPvj>
 80107cc:	687b      	ldr	r3, [r7, #4]
 80107ce:	4618      	mov	r0, r3
 80107d0:	3708      	adds	r7, #8
 80107d2:	46bd      	mov	sp, r7
 80107d4:	bd80      	pop	{r7, pc}
	...

080107d8 <_ZN14MainScreenViewC1Ev>:
#include <gui/mainscreen_screen/MainScreenView.hpp>

MainScreenView::MainScreenView()
 80107d8:	b580      	push	{r7, lr}
 80107da:	b082      	sub	sp, #8
 80107dc:	af00      	add	r7, sp, #0
 80107de:	6078      	str	r0, [r7, #4]
 80107e0:	687b      	ldr	r3, [r7, #4]
 80107e2:	4618      	mov	r0, r3
 80107e4:	f7fd f956 	bl	800da94 <_ZN18MainScreenViewBaseC1Ev>
 80107e8:	4a03      	ldr	r2, [pc, #12]	; (80107f8 <_ZN14MainScreenViewC1Ev+0x20>)
 80107ea:	687b      	ldr	r3, [r7, #4]
 80107ec:	601a      	str	r2, [r3, #0]
{

}
 80107ee:	687b      	ldr	r3, [r7, #4]
 80107f0:	4618      	mov	r0, r3
 80107f2:	3708      	adds	r7, #8
 80107f4:	46bd      	mov	sp, r7
 80107f6:	bd80      	pop	{r7, pc}
 80107f8:	0802e7f8 	.word	0x0802e7f8

080107fc <_ZN14MainScreenView11setupScreenEv>:

void MainScreenView::setupScreen()
{
 80107fc:	b580      	push	{r7, lr}
 80107fe:	b082      	sub	sp, #8
 8010800:	af00      	add	r7, sp, #0
 8010802:	6078      	str	r0, [r7, #4]
    MainScreenViewBase::setupScreen();
 8010804:	687b      	ldr	r3, [r7, #4]
 8010806:	4618      	mov	r0, r3
 8010808:	f7fe f949 	bl	800ea9e <_ZN18MainScreenViewBase11setupScreenEv>
}
 801080c:	bf00      	nop
 801080e:	3708      	adds	r7, #8
 8010810:	46bd      	mov	sp, r7
 8010812:	bd80      	pop	{r7, pc}

08010814 <_ZN14MainScreenView14tearDownScreenEv>:

void MainScreenView::tearDownScreen()
{
 8010814:	b580      	push	{r7, lr}
 8010816:	b082      	sub	sp, #8
 8010818:	af00      	add	r7, sp, #0
 801081a:	6078      	str	r0, [r7, #4]
    MainScreenViewBase::tearDownScreen();
 801081c:	687b      	ldr	r3, [r7, #4]
 801081e:	4618      	mov	r0, r3
 8010820:	f7f9 fc12 	bl	800a048 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 8010824:	bf00      	nop
 8010826:	3708      	adds	r7, #8
 8010828:	46bd      	mov	sp, r7
 801082a:	bd80      	pop	{r7, pc}

0801082c <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>
#include "main.h"
//float T;
float Pa;
Model::Model() : modelListener(0),Pressure_Val(),Temperature_Val(),CO_Val(),Hour(),Minute(),Second(),tickCounter(0)
 801082c:	b480      	push	{r7}
 801082e:	b083      	sub	sp, #12
 8010830:	af00      	add	r7, sp, #0
 8010832:	6078      	str	r0, [r7, #4]
 8010834:	687b      	ldr	r3, [r7, #4]
 8010836:	2200      	movs	r2, #0
 8010838:	601a      	str	r2, [r3, #0]
 801083a:	687b      	ldr	r3, [r7, #4]
 801083c:	f04f 0200 	mov.w	r2, #0
 8010840:	605a      	str	r2, [r3, #4]
 8010842:	687b      	ldr	r3, [r7, #4]
 8010844:	2200      	movs	r2, #0
 8010846:	609a      	str	r2, [r3, #8]
 8010848:	687b      	ldr	r3, [r7, #4]
 801084a:	f04f 0200 	mov.w	r2, #0
 801084e:	60da      	str	r2, [r3, #12]
 8010850:	687b      	ldr	r3, [r7, #4]
 8010852:	2200      	movs	r2, #0
 8010854:	741a      	strb	r2, [r3, #16]
 8010856:	687b      	ldr	r3, [r7, #4]
 8010858:	2200      	movs	r2, #0
 801085a:	745a      	strb	r2, [r3, #17]
 801085c:	687b      	ldr	r3, [r7, #4]
 801085e:	2200      	movs	r2, #0
 8010860:	749a      	strb	r2, [r3, #18]
 8010862:	687b      	ldr	r3, [r7, #4]
 8010864:	2200      	movs	r2, #0
 8010866:	615a      	str	r2, [r3, #20]
{

}
 8010868:	687b      	ldr	r3, [r7, #4]
 801086a:	4618      	mov	r0, r3
 801086c:	370c      	adds	r7, #12
 801086e:	46bd      	mov	sp, r7
 8010870:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010874:	4770      	bx	lr
	...

08010878 <_ZN5Model4tickEv>:

void Model::tick()
{
 8010878:	b590      	push	{r4, r7, lr}
 801087a:	b083      	sub	sp, #12
 801087c:	af00      	add	r7, sp, #0
 801087e:	6078      	str	r0, [r7, #4]
	tickCounter++;
 8010880:	687b      	ldr	r3, [r7, #4]
 8010882:	695b      	ldr	r3, [r3, #20]
 8010884:	1c5a      	adds	r2, r3, #1
 8010886:	687b      	ldr	r3, [r7, #4]
 8010888:	615a      	str	r2, [r3, #20]

		if (tickCounter % 60 == 0)
 801088a:	687b      	ldr	r3, [r7, #4]
 801088c:	695a      	ldr	r2, [r3, #20]
//			Hour   = DS1307_GetHour();
//			Pressure_Val = BMP280_Measure();

	    }

	modelListener->setPressure(Pa);
 801088e:	687b      	ldr	r3, [r7, #4]
 8010890:	681a      	ldr	r2, [r3, #0]
 8010892:	687b      	ldr	r3, [r7, #4]
 8010894:	681b      	ldr	r3, [r3, #0]
 8010896:	681b      	ldr	r3, [r3, #0]
 8010898:	3308      	adds	r3, #8
 801089a:	681b      	ldr	r3, [r3, #0]
 801089c:	4914      	ldr	r1, [pc, #80]	; (80108f0 <_ZN5Model4tickEv+0x78>)
 801089e:	edd1 7a00 	vldr	s15, [r1]
 80108a2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80108a6:	ee17 1a90 	vmov	r1, s15
 80108aa:	4610      	mov	r0, r2
 80108ac:	4798      	blx	r3
//	modelListener->setTemperature(T);
	modelListener->setCO(CO_Val);
 80108ae:	687b      	ldr	r3, [r7, #4]
 80108b0:	6818      	ldr	r0, [r3, #0]
 80108b2:	687b      	ldr	r3, [r7, #4]
 80108b4:	681b      	ldr	r3, [r3, #0]
 80108b6:	681b      	ldr	r3, [r3, #0]
 80108b8:	3310      	adds	r3, #16
 80108ba:	681b      	ldr	r3, [r3, #0]
 80108bc:	687a      	ldr	r2, [r7, #4]
 80108be:	edd2 7a03 	vldr	s15, [r2, #12]
 80108c2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80108c6:	ee17 1a90 	vmov	r1, s15
 80108ca:	4798      	blx	r3
	modelListener->updateTime(Hour,Minute,Second);
 80108cc:	687b      	ldr	r3, [r7, #4]
 80108ce:	6818      	ldr	r0, [r3, #0]
 80108d0:	687b      	ldr	r3, [r7, #4]
 80108d2:	681b      	ldr	r3, [r3, #0]
 80108d4:	681b      	ldr	r3, [r3, #0]
 80108d6:	3314      	adds	r3, #20
 80108d8:	681c      	ldr	r4, [r3, #0]
 80108da:	687b      	ldr	r3, [r7, #4]
 80108dc:	7c19      	ldrb	r1, [r3, #16]
 80108de:	687b      	ldr	r3, [r7, #4]
 80108e0:	7c5a      	ldrb	r2, [r3, #17]
 80108e2:	687b      	ldr	r3, [r7, #4]
 80108e4:	7c9b      	ldrb	r3, [r3, #18]
 80108e6:	47a0      	blx	r4
}
 80108e8:	bf00      	nop
 80108ea:	370c      	adds	r7, #12
 80108ec:	46bd      	mov	sp, r7
 80108ee:	bd90      	pop	{r4, r7, pc}
 80108f0:	20000440 	.word	0x20000440

080108f4 <_ZN23PressureScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~PressureScreenPresenter() {}
 80108f4:	b580      	push	{r7, lr}
 80108f6:	b082      	sub	sp, #8
 80108f8:	af00      	add	r7, sp, #0
 80108fa:	6078      	str	r0, [r7, #4]
 80108fc:	4a09      	ldr	r2, [pc, #36]	; (8010924 <_ZN23PressureScreenPresenterD1Ev+0x30>)
 80108fe:	687b      	ldr	r3, [r7, #4]
 8010900:	601a      	str	r2, [r3, #0]
 8010902:	4a09      	ldr	r2, [pc, #36]	; (8010928 <_ZN23PressureScreenPresenterD1Ev+0x34>)
 8010904:	687b      	ldr	r3, [r7, #4]
 8010906:	605a      	str	r2, [r3, #4]
 8010908:	687b      	ldr	r3, [r7, #4]
 801090a:	3304      	adds	r3, #4
 801090c:	4618      	mov	r0, r3
 801090e:	f7ff fc59 	bl	80101c4 <_ZN13ModelListenerD1Ev>
 8010912:	687b      	ldr	r3, [r7, #4]
 8010914:	4618      	mov	r0, r3
 8010916:	f7ff fc11 	bl	801013c <_ZN8touchgfx9PresenterD1Ev>
 801091a:	687b      	ldr	r3, [r7, #4]
 801091c:	4618      	mov	r0, r3
 801091e:	3708      	adds	r7, #8
 8010920:	46bd      	mov	sp, r7
 8010922:	bd80      	pop	{r7, pc}
 8010924:	0802e82c 	.word	0x0802e82c
 8010928:	0802e848 	.word	0x0802e848

0801092c <_ZThn4_N23PressureScreenPresenterD1Ev>:
 801092c:	f1a0 0004 	sub.w	r0, r0, #4
 8010930:	e7e0      	b.n	80108f4 <_ZN23PressureScreenPresenterD1Ev>
 8010932:	bf00      	nop

08010934 <_ZN23PressureScreenPresenterD0Ev>:
 8010934:	b580      	push	{r7, lr}
 8010936:	b082      	sub	sp, #8
 8010938:	af00      	add	r7, sp, #0
 801093a:	6078      	str	r0, [r7, #4]
 801093c:	6878      	ldr	r0, [r7, #4]
 801093e:	f7ff ffd9 	bl	80108f4 <_ZN23PressureScreenPresenterD1Ev>
 8010942:	2110      	movs	r1, #16
 8010944:	6878      	ldr	r0, [r7, #4]
 8010946:	f019 ff0c 	bl	802a762 <_ZdlPvj>
 801094a:	687b      	ldr	r3, [r7, #4]
 801094c:	4618      	mov	r0, r3
 801094e:	3708      	adds	r7, #8
 8010950:	46bd      	mov	sp, r7
 8010952:	bd80      	pop	{r7, pc}

08010954 <_ZThn4_N23PressureScreenPresenterD0Ev>:
 8010954:	f1a0 0004 	sub.w	r0, r0, #4
 8010958:	e7ec      	b.n	8010934 <_ZN23PressureScreenPresenterD0Ev>
	...

0801095c <_ZN23PressureScreenPresenterC1ER18PressureScreenView>:
#include <gui/pressurescreen_screen/PressureScreenView.hpp>
#include <gui/pressurescreen_screen/PressureScreenPresenter.hpp>

PressureScreenPresenter::PressureScreenPresenter(PressureScreenView& v)
 801095c:	b580      	push	{r7, lr}
 801095e:	b082      	sub	sp, #8
 8010960:	af00      	add	r7, sp, #0
 8010962:	6078      	str	r0, [r7, #4]
 8010964:	6039      	str	r1, [r7, #0]
    : view(v)
 8010966:	687b      	ldr	r3, [r7, #4]
 8010968:	4618      	mov	r0, r3
 801096a:	f7ff fc07 	bl	801017c <_ZN8touchgfx9PresenterC1Ev>
 801096e:	687b      	ldr	r3, [r7, #4]
 8010970:	3304      	adds	r3, #4
 8010972:	4618      	mov	r0, r3
 8010974:	f7ff fc12 	bl	801019c <_ZN13ModelListenerC1Ev>
 8010978:	4a06      	ldr	r2, [pc, #24]	; (8010994 <_ZN23PressureScreenPresenterC1ER18PressureScreenView+0x38>)
 801097a:	687b      	ldr	r3, [r7, #4]
 801097c:	601a      	str	r2, [r3, #0]
 801097e:	4a06      	ldr	r2, [pc, #24]	; (8010998 <_ZN23PressureScreenPresenterC1ER18PressureScreenView+0x3c>)
 8010980:	687b      	ldr	r3, [r7, #4]
 8010982:	605a      	str	r2, [r3, #4]
 8010984:	687b      	ldr	r3, [r7, #4]
 8010986:	683a      	ldr	r2, [r7, #0]
 8010988:	60da      	str	r2, [r3, #12]
{

}
 801098a:	687b      	ldr	r3, [r7, #4]
 801098c:	4618      	mov	r0, r3
 801098e:	3708      	adds	r7, #8
 8010990:	46bd      	mov	sp, r7
 8010992:	bd80      	pop	{r7, pc}
 8010994:	0802e82c 	.word	0x0802e82c
 8010998:	0802e848 	.word	0x0802e848

0801099c <_ZN23PressureScreenPresenter8activateEv>:

void PressureScreenPresenter::activate()
{
 801099c:	b480      	push	{r7}
 801099e:	b083      	sub	sp, #12
 80109a0:	af00      	add	r7, sp, #0
 80109a2:	6078      	str	r0, [r7, #4]

}
 80109a4:	bf00      	nop
 80109a6:	370c      	adds	r7, #12
 80109a8:	46bd      	mov	sp, r7
 80109aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80109ae:	4770      	bx	lr

080109b0 <_ZN23PressureScreenPresenter10deactivateEv>:

void PressureScreenPresenter::deactivate()
{
 80109b0:	b480      	push	{r7}
 80109b2:	b083      	sub	sp, #12
 80109b4:	af00      	add	r7, sp, #0
 80109b6:	6078      	str	r0, [r7, #4]

}
 80109b8:	bf00      	nop
 80109ba:	370c      	adds	r7, #12
 80109bc:	46bd      	mov	sp, r7
 80109be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80109c2:	4770      	bx	lr

080109c4 <_ZN23PressureScreenPresenter11setPressureEi>:
void PressureScreenPresenter::setPressure(int Val)
{
 80109c4:	b580      	push	{r7, lr}
 80109c6:	b082      	sub	sp, #8
 80109c8:	af00      	add	r7, sp, #0
 80109ca:	6078      	str	r0, [r7, #4]
 80109cc:	6039      	str	r1, [r7, #0]
	view.setPressure(Val);
 80109ce:	687b      	ldr	r3, [r7, #4]
 80109d0:	68da      	ldr	r2, [r3, #12]
 80109d2:	687b      	ldr	r3, [r7, #4]
 80109d4:	68db      	ldr	r3, [r3, #12]
 80109d6:	681b      	ldr	r3, [r3, #0]
 80109d8:	332c      	adds	r3, #44	; 0x2c
 80109da:	681b      	ldr	r3, [r3, #0]
 80109dc:	6839      	ldr	r1, [r7, #0]
 80109de:	4610      	mov	r0, r2
 80109e0:	4798      	blx	r3
}
 80109e2:	bf00      	nop
 80109e4:	3708      	adds	r7, #8
 80109e6:	46bd      	mov	sp, r7
 80109e8:	bd80      	pop	{r7, pc}

080109ea <_ZThn4_N23PressureScreenPresenter11setPressureEi>:
    virtual void setPressure(int Val);
 80109ea:	f1a0 0004 	sub.w	r0, r0, #4
 80109ee:	f7ff bfe9 	b.w	80109c4 <_ZN23PressureScreenPresenter11setPressureEi>
	...

080109f4 <_ZN18PressureScreenViewD1Ev>:

class PressureScreenView : public PressureScreenViewBase
{
public:
    PressureScreenView();
    virtual ~PressureScreenView() {}
 80109f4:	b580      	push	{r7, lr}
 80109f6:	b082      	sub	sp, #8
 80109f8:	af00      	add	r7, sp, #0
 80109fa:	6078      	str	r0, [r7, #4]
 80109fc:	4a05      	ldr	r2, [pc, #20]	; (8010a14 <_ZN18PressureScreenViewD1Ev+0x20>)
 80109fe:	687b      	ldr	r3, [r7, #4]
 8010a00:	601a      	str	r2, [r3, #0]
 8010a02:	687b      	ldr	r3, [r7, #4]
 8010a04:	4618      	mov	r0, r3
 8010a06:	f7fe fd21 	bl	800f44c <_ZN22PressureScreenViewBaseD1Ev>
 8010a0a:	687b      	ldr	r3, [r7, #4]
 8010a0c:	4618      	mov	r0, r3
 8010a0e:	3708      	adds	r7, #8
 8010a10:	46bd      	mov	sp, r7
 8010a12:	bd80      	pop	{r7, pc}
 8010a14:	0802e868 	.word	0x0802e868

08010a18 <_ZN18PressureScreenViewD0Ev>:
 8010a18:	b580      	push	{r7, lr}
 8010a1a:	b082      	sub	sp, #8
 8010a1c:	af00      	add	r7, sp, #0
 8010a1e:	6078      	str	r0, [r7, #4]
 8010a20:	6878      	ldr	r0, [r7, #4]
 8010a22:	f7ff ffe7 	bl	80109f4 <_ZN18PressureScreenViewD1Ev>
 8010a26:	f44f 713f 	mov.w	r1, #764	; 0x2fc
 8010a2a:	6878      	ldr	r0, [r7, #4]
 8010a2c:	f019 fe99 	bl	802a762 <_ZdlPvj>
 8010a30:	687b      	ldr	r3, [r7, #4]
 8010a32:	4618      	mov	r0, r3
 8010a34:	3708      	adds	r7, #8
 8010a36:	46bd      	mov	sp, r7
 8010a38:	bd80      	pop	{r7, pc}
	...

08010a3c <_ZN18PressureScreenViewC1Ev>:
#include <gui/pressurescreen_screen/PressureScreenView.hpp>

PressureScreenView::PressureScreenView()
 8010a3c:	b580      	push	{r7, lr}
 8010a3e:	b082      	sub	sp, #8
 8010a40:	af00      	add	r7, sp, #0
 8010a42:	6078      	str	r0, [r7, #4]
 8010a44:	687b      	ldr	r3, [r7, #4]
 8010a46:	4618      	mov	r0, r3
 8010a48:	f7fe fac2 	bl	800efd0 <_ZN22PressureScreenViewBaseC1Ev>
 8010a4c:	4a03      	ldr	r2, [pc, #12]	; (8010a5c <_ZN18PressureScreenViewC1Ev+0x20>)
 8010a4e:	687b      	ldr	r3, [r7, #4]
 8010a50:	601a      	str	r2, [r3, #0]
{

}
 8010a52:	687b      	ldr	r3, [r7, #4]
 8010a54:	4618      	mov	r0, r3
 8010a56:	3708      	adds	r7, #8
 8010a58:	46bd      	mov	sp, r7
 8010a5a:	bd80      	pop	{r7, pc}
 8010a5c:	0802e868 	.word	0x0802e868

08010a60 <_ZN18PressureScreenView11setupScreenEv>:

void PressureScreenView::setupScreen()
{
 8010a60:	b580      	push	{r7, lr}
 8010a62:	b082      	sub	sp, #8
 8010a64:	af00      	add	r7, sp, #0
 8010a66:	6078      	str	r0, [r7, #4]
    PressureScreenViewBase::setupScreen();
 8010a68:	687b      	ldr	r3, [r7, #4]
 8010a6a:	4618      	mov	r0, r3
 8010a6c:	f7fe fd33 	bl	800f4d6 <_ZN22PressureScreenViewBase11setupScreenEv>
}
 8010a70:	bf00      	nop
 8010a72:	3708      	adds	r7, #8
 8010a74:	46bd      	mov	sp, r7
 8010a76:	bd80      	pop	{r7, pc}

08010a78 <_ZN18PressureScreenView14tearDownScreenEv>:

void PressureScreenView::tearDownScreen()
{
 8010a78:	b580      	push	{r7, lr}
 8010a7a:	b082      	sub	sp, #8
 8010a7c:	af00      	add	r7, sp, #0
 8010a7e:	6078      	str	r0, [r7, #4]
    PressureScreenViewBase::tearDownScreen();
 8010a80:	687b      	ldr	r3, [r7, #4]
 8010a82:	4618      	mov	r0, r3
 8010a84:	f7f9 fae0 	bl	800a048 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 8010a88:	bf00      	nop
 8010a8a:	3708      	adds	r7, #8
 8010a8c:	46bd      	mov	sp, r7
 8010a8e:	bd80      	pop	{r7, pc}

08010a90 <_ZN18PressureScreenView11setPressureEi>:

void PressureScreenView::setPressure(int Val)
{
 8010a90:	b580      	push	{r7, lr}
 8010a92:	b082      	sub	sp, #8
 8010a94:	af00      	add	r7, sp, #0
 8010a96:	6078      	str	r0, [r7, #4]
 8010a98:	6039      	str	r1, [r7, #0]
	Unicode::snprintf(PressureDataBuffer, PRESSUREDATA_SIZE, "%d",Val);
 8010a9a:	687b      	ldr	r3, [r7, #4]
 8010a9c:	f503 7037 	add.w	r0, r3, #732	; 0x2dc
 8010aa0:	683b      	ldr	r3, [r7, #0]
 8010aa2:	4a0a      	ldr	r2, [pc, #40]	; (8010acc <_ZN18PressureScreenView11setPressureEi+0x3c>)
 8010aa4:	2106      	movs	r1, #6
 8010aa6:	f00b fe47 	bl	801c738 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	PressureGauge.updateValue(Val, 30); // animates needle and arc to new value with a duration of 30 ticks
 8010aaa:	687b      	ldr	r3, [r7, #4]
 8010aac:	33a8      	adds	r3, #168	; 0xa8
 8010aae:	221e      	movs	r2, #30
 8010ab0:	6839      	ldr	r1, [r7, #0]
 8010ab2:	4618      	mov	r0, r3
 8010ab4:	f001 ff75 	bl	80129a2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>
	PressureData.invalidate();
 8010ab8:	687b      	ldr	r3, [r7, #4]
 8010aba:	f503 7324 	add.w	r3, r3, #656	; 0x290
 8010abe:	4618      	mov	r0, r3
 8010ac0:	f009 fcb2 	bl	801a428 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 8010ac4:	bf00      	nop
 8010ac6:	3708      	adds	r7, #8
 8010ac8:	46bd      	mov	sp, r7
 8010aca:	bd80      	pop	{r7, pc}
 8010acc:	0802d404 	.word	0x0802d404

08010ad0 <_ZN26TemperatureScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~TemperatureScreenPresenter() {}
 8010ad0:	b580      	push	{r7, lr}
 8010ad2:	b082      	sub	sp, #8
 8010ad4:	af00      	add	r7, sp, #0
 8010ad6:	6078      	str	r0, [r7, #4]
 8010ad8:	4a09      	ldr	r2, [pc, #36]	; (8010b00 <_ZN26TemperatureScreenPresenterD1Ev+0x30>)
 8010ada:	687b      	ldr	r3, [r7, #4]
 8010adc:	601a      	str	r2, [r3, #0]
 8010ade:	4a09      	ldr	r2, [pc, #36]	; (8010b04 <_ZN26TemperatureScreenPresenterD1Ev+0x34>)
 8010ae0:	687b      	ldr	r3, [r7, #4]
 8010ae2:	605a      	str	r2, [r3, #4]
 8010ae4:	687b      	ldr	r3, [r7, #4]
 8010ae6:	3304      	adds	r3, #4
 8010ae8:	4618      	mov	r0, r3
 8010aea:	f7ff fb6b 	bl	80101c4 <_ZN13ModelListenerD1Ev>
 8010aee:	687b      	ldr	r3, [r7, #4]
 8010af0:	4618      	mov	r0, r3
 8010af2:	f7ff fb23 	bl	801013c <_ZN8touchgfx9PresenterD1Ev>
 8010af6:	687b      	ldr	r3, [r7, #4]
 8010af8:	4618      	mov	r0, r3
 8010afa:	3708      	adds	r7, #8
 8010afc:	46bd      	mov	sp, r7
 8010afe:	bd80      	pop	{r7, pc}
 8010b00:	0802e8a0 	.word	0x0802e8a0
 8010b04:	0802e8bc 	.word	0x0802e8bc

08010b08 <_ZThn4_N26TemperatureScreenPresenterD1Ev>:
 8010b08:	f1a0 0004 	sub.w	r0, r0, #4
 8010b0c:	e7e0      	b.n	8010ad0 <_ZN26TemperatureScreenPresenterD1Ev>
 8010b0e:	bf00      	nop

08010b10 <_ZN26TemperatureScreenPresenterD0Ev>:
 8010b10:	b580      	push	{r7, lr}
 8010b12:	b082      	sub	sp, #8
 8010b14:	af00      	add	r7, sp, #0
 8010b16:	6078      	str	r0, [r7, #4]
 8010b18:	6878      	ldr	r0, [r7, #4]
 8010b1a:	f7ff ffd9 	bl	8010ad0 <_ZN26TemperatureScreenPresenterD1Ev>
 8010b1e:	2110      	movs	r1, #16
 8010b20:	6878      	ldr	r0, [r7, #4]
 8010b22:	f019 fe1e 	bl	802a762 <_ZdlPvj>
 8010b26:	687b      	ldr	r3, [r7, #4]
 8010b28:	4618      	mov	r0, r3
 8010b2a:	3708      	adds	r7, #8
 8010b2c:	46bd      	mov	sp, r7
 8010b2e:	bd80      	pop	{r7, pc}

08010b30 <_ZThn4_N26TemperatureScreenPresenterD0Ev>:
 8010b30:	f1a0 0004 	sub.w	r0, r0, #4
 8010b34:	e7ec      	b.n	8010b10 <_ZN26TemperatureScreenPresenterD0Ev>
	...

08010b38 <_ZN26TemperatureScreenPresenterC1ER21TemperatureScreenView>:
#include <gui/temperaturescreen_screen/TemperatureScreenView.hpp>
#include <gui/temperaturescreen_screen/TemperatureScreenPresenter.hpp>

TemperatureScreenPresenter::TemperatureScreenPresenter(TemperatureScreenView& v)
 8010b38:	b580      	push	{r7, lr}
 8010b3a:	b082      	sub	sp, #8
 8010b3c:	af00      	add	r7, sp, #0
 8010b3e:	6078      	str	r0, [r7, #4]
 8010b40:	6039      	str	r1, [r7, #0]
    : view(v)
 8010b42:	687b      	ldr	r3, [r7, #4]
 8010b44:	4618      	mov	r0, r3
 8010b46:	f7ff fb19 	bl	801017c <_ZN8touchgfx9PresenterC1Ev>
 8010b4a:	687b      	ldr	r3, [r7, #4]
 8010b4c:	3304      	adds	r3, #4
 8010b4e:	4618      	mov	r0, r3
 8010b50:	f7ff fb24 	bl	801019c <_ZN13ModelListenerC1Ev>
 8010b54:	4a06      	ldr	r2, [pc, #24]	; (8010b70 <_ZN26TemperatureScreenPresenterC1ER21TemperatureScreenView+0x38>)
 8010b56:	687b      	ldr	r3, [r7, #4]
 8010b58:	601a      	str	r2, [r3, #0]
 8010b5a:	4a06      	ldr	r2, [pc, #24]	; (8010b74 <_ZN26TemperatureScreenPresenterC1ER21TemperatureScreenView+0x3c>)
 8010b5c:	687b      	ldr	r3, [r7, #4]
 8010b5e:	605a      	str	r2, [r3, #4]
 8010b60:	687b      	ldr	r3, [r7, #4]
 8010b62:	683a      	ldr	r2, [r7, #0]
 8010b64:	60da      	str	r2, [r3, #12]
{

}
 8010b66:	687b      	ldr	r3, [r7, #4]
 8010b68:	4618      	mov	r0, r3
 8010b6a:	3708      	adds	r7, #8
 8010b6c:	46bd      	mov	sp, r7
 8010b6e:	bd80      	pop	{r7, pc}
 8010b70:	0802e8a0 	.word	0x0802e8a0
 8010b74:	0802e8bc 	.word	0x0802e8bc

08010b78 <_ZN26TemperatureScreenPresenter8activateEv>:

void TemperatureScreenPresenter::activate()
{
 8010b78:	b480      	push	{r7}
 8010b7a:	b083      	sub	sp, #12
 8010b7c:	af00      	add	r7, sp, #0
 8010b7e:	6078      	str	r0, [r7, #4]

}
 8010b80:	bf00      	nop
 8010b82:	370c      	adds	r7, #12
 8010b84:	46bd      	mov	sp, r7
 8010b86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010b8a:	4770      	bx	lr

08010b8c <_ZN26TemperatureScreenPresenter10deactivateEv>:

void TemperatureScreenPresenter::deactivate()
{
 8010b8c:	b480      	push	{r7}
 8010b8e:	b083      	sub	sp, #12
 8010b90:	af00      	add	r7, sp, #0
 8010b92:	6078      	str	r0, [r7, #4]

}
 8010b94:	bf00      	nop
 8010b96:	370c      	adds	r7, #12
 8010b98:	46bd      	mov	sp, r7
 8010b9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010b9e:	4770      	bx	lr

08010ba0 <_ZN26TemperatureScreenPresenter14setTemperatureEi>:
void TemperatureScreenPresenter::setTemperature(int Temperature_Val)
{
 8010ba0:	b580      	push	{r7, lr}
 8010ba2:	b082      	sub	sp, #8
 8010ba4:	af00      	add	r7, sp, #0
 8010ba6:	6078      	str	r0, [r7, #4]
 8010ba8:	6039      	str	r1, [r7, #0]
	view.setTemperature(Temperature_Val);
 8010baa:	687b      	ldr	r3, [r7, #4]
 8010bac:	68da      	ldr	r2, [r3, #12]
 8010bae:	687b      	ldr	r3, [r7, #4]
 8010bb0:	68db      	ldr	r3, [r3, #12]
 8010bb2:	681b      	ldr	r3, [r3, #0]
 8010bb4:	332c      	adds	r3, #44	; 0x2c
 8010bb6:	681b      	ldr	r3, [r3, #0]
 8010bb8:	6839      	ldr	r1, [r7, #0]
 8010bba:	4610      	mov	r0, r2
 8010bbc:	4798      	blx	r3
}
 8010bbe:	bf00      	nop
 8010bc0:	3708      	adds	r7, #8
 8010bc2:	46bd      	mov	sp, r7
 8010bc4:	bd80      	pop	{r7, pc}

08010bc6 <_ZThn4_N26TemperatureScreenPresenter14setTemperatureEi>:
    virtual void setTemperature(int Temperature_Val);
 8010bc6:	f1a0 0004 	sub.w	r0, r0, #4
 8010bca:	f7ff bfe9 	b.w	8010ba0 <_ZN26TemperatureScreenPresenter14setTemperatureEi>
	...

08010bd0 <_ZN21TemperatureScreenViewD1Ev>:

class TemperatureScreenView : public TemperatureScreenViewBase
{
public:
    TemperatureScreenView();
    virtual ~TemperatureScreenView() {}
 8010bd0:	b580      	push	{r7, lr}
 8010bd2:	b082      	sub	sp, #8
 8010bd4:	af00      	add	r7, sp, #0
 8010bd6:	6078      	str	r0, [r7, #4]
 8010bd8:	4a05      	ldr	r2, [pc, #20]	; (8010bf0 <_ZN21TemperatureScreenViewD1Ev+0x20>)
 8010bda:	687b      	ldr	r3, [r7, #4]
 8010bdc:	601a      	str	r2, [r3, #0]
 8010bde:	687b      	ldr	r3, [r7, #4]
 8010be0:	4618      	mov	r0, r3
 8010be2:	f7fe ff99 	bl	800fb18 <_ZN25TemperatureScreenViewBaseD1Ev>
 8010be6:	687b      	ldr	r3, [r7, #4]
 8010be8:	4618      	mov	r0, r3
 8010bea:	3708      	adds	r7, #8
 8010bec:	46bd      	mov	sp, r7
 8010bee:	bd80      	pop	{r7, pc}
 8010bf0:	0802e8dc 	.word	0x0802e8dc

08010bf4 <_ZN21TemperatureScreenViewD0Ev>:
 8010bf4:	b580      	push	{r7, lr}
 8010bf6:	b082      	sub	sp, #8
 8010bf8:	af00      	add	r7, sp, #0
 8010bfa:	6078      	str	r0, [r7, #4]
 8010bfc:	6878      	ldr	r0, [r7, #4]
 8010bfe:	f7ff ffe7 	bl	8010bd0 <_ZN21TemperatureScreenViewD1Ev>
 8010c02:	f44f 713d 	mov.w	r1, #756	; 0x2f4
 8010c06:	6878      	ldr	r0, [r7, #4]
 8010c08:	f019 fdab 	bl	802a762 <_ZdlPvj>
 8010c0c:	687b      	ldr	r3, [r7, #4]
 8010c0e:	4618      	mov	r0, r3
 8010c10:	3708      	adds	r7, #8
 8010c12:	46bd      	mov	sp, r7
 8010c14:	bd80      	pop	{r7, pc}
	...

08010c18 <_ZN21TemperatureScreenViewC1Ev>:
#include <gui/temperaturescreen_screen/TemperatureScreenView.hpp>

TemperatureScreenView::TemperatureScreenView()
 8010c18:	b580      	push	{r7, lr}
 8010c1a:	b082      	sub	sp, #8
 8010c1c:	af00      	add	r7, sp, #0
 8010c1e:	6078      	str	r0, [r7, #4]
 8010c20:	687b      	ldr	r3, [r7, #4]
 8010c22:	4618      	mov	r0, r3
 8010c24:	f7fe fd40 	bl	800f6a8 <_ZN25TemperatureScreenViewBaseC1Ev>
 8010c28:	4a03      	ldr	r2, [pc, #12]	; (8010c38 <_ZN21TemperatureScreenViewC1Ev+0x20>)
 8010c2a:	687b      	ldr	r3, [r7, #4]
 8010c2c:	601a      	str	r2, [r3, #0]
{

}
 8010c2e:	687b      	ldr	r3, [r7, #4]
 8010c30:	4618      	mov	r0, r3
 8010c32:	3708      	adds	r7, #8
 8010c34:	46bd      	mov	sp, r7
 8010c36:	bd80      	pop	{r7, pc}
 8010c38:	0802e8dc 	.word	0x0802e8dc

08010c3c <_ZN21TemperatureScreenView11setupScreenEv>:

void TemperatureScreenView::setupScreen()
{
 8010c3c:	b580      	push	{r7, lr}
 8010c3e:	b082      	sub	sp, #8
 8010c40:	af00      	add	r7, sp, #0
 8010c42:	6078      	str	r0, [r7, #4]
    TemperatureScreenViewBase::setupScreen();
 8010c44:	687b      	ldr	r3, [r7, #4]
 8010c46:	4618      	mov	r0, r3
 8010c48:	f7fe ffab 	bl	800fba2 <_ZN25TemperatureScreenViewBase11setupScreenEv>
}
 8010c4c:	bf00      	nop
 8010c4e:	3708      	adds	r7, #8
 8010c50:	46bd      	mov	sp, r7
 8010c52:	bd80      	pop	{r7, pc}

08010c54 <_ZN21TemperatureScreenView14tearDownScreenEv>:

void TemperatureScreenView::tearDownScreen()
{
 8010c54:	b580      	push	{r7, lr}
 8010c56:	b082      	sub	sp, #8
 8010c58:	af00      	add	r7, sp, #0
 8010c5a:	6078      	str	r0, [r7, #4]
    TemperatureScreenViewBase::tearDownScreen();
 8010c5c:	687b      	ldr	r3, [r7, #4]
 8010c5e:	4618      	mov	r0, r3
 8010c60:	f7f9 f9f2 	bl	800a048 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 8010c64:	bf00      	nop
 8010c66:	3708      	adds	r7, #8
 8010c68:	46bd      	mov	sp, r7
 8010c6a:	bd80      	pop	{r7, pc}

08010c6c <_ZN21TemperatureScreenView14setTemperatureEi>:

void TemperatureScreenView::setTemperature(int Temperature_Val)
{
 8010c6c:	b580      	push	{r7, lr}
 8010c6e:	b082      	sub	sp, #8
 8010c70:	af00      	add	r7, sp, #0
 8010c72:	6078      	str	r0, [r7, #4]
 8010c74:	6039      	str	r1, [r7, #0]
	Unicode::snprintf(TemperatureDataBuffer, TEMPERATUREDATA_SIZE, "%d",Temperature_Val);
 8010c76:	687b      	ldr	r3, [r7, #4]
 8010c78:	f503 7037 	add.w	r0, r3, #732	; 0x2dc
 8010c7c:	683b      	ldr	r3, [r7, #0]
 8010c7e:	4a0b      	ldr	r2, [pc, #44]	; (8010cac <_ZN21TemperatureScreenView14setTemperatureEi+0x40>)
 8010c80:	2104      	movs	r1, #4
 8010c82:	f00b fd59 	bl	801c738 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	TemperatureGauge.updateValue(Temperature_Val, 30); // animates needle and arc to new value with a duration of 30 ticks
 8010c86:	687b      	ldr	r3, [r7, #4]
 8010c88:	f503 7380 	add.w	r3, r3, #256	; 0x100
 8010c8c:	221e      	movs	r2, #30
 8010c8e:	6839      	ldr	r1, [r7, #0]
 8010c90:	4618      	mov	r0, r3
 8010c92:	f001 fe86 	bl	80129a2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>
	TemperatureGauge.invalidate();
 8010c96:	687b      	ldr	r3, [r7, #4]
 8010c98:	f503 7380 	add.w	r3, r3, #256	; 0x100
 8010c9c:	4618      	mov	r0, r3
 8010c9e:	f009 fbc3 	bl	801a428 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 8010ca2:	bf00      	nop
 8010ca4:	3708      	adds	r7, #8
 8010ca6:	46bd      	mov	sp, r7
 8010ca8:	bd80      	pop	{r7, pc}
 8010caa:	bf00      	nop
 8010cac:	0802d408 	.word	0x0802d408

08010cb0 <_ZN8touchgfx15TouchControllerD1Ev>:
/** Basic Touch Controller interface. */
class TouchController
{
public:
    /** Finalizes an instance of the TouchController class. */
    virtual ~TouchController()
 8010cb0:	b480      	push	{r7}
 8010cb2:	b083      	sub	sp, #12
 8010cb4:	af00      	add	r7, sp, #0
 8010cb6:	6078      	str	r0, [r7, #4]
    {
 8010cb8:	4a04      	ldr	r2, [pc, #16]	; (8010ccc <_ZN8touchgfx15TouchControllerD1Ev+0x1c>)
 8010cba:	687b      	ldr	r3, [r7, #4]
 8010cbc:	601a      	str	r2, [r3, #0]
    }
 8010cbe:	687b      	ldr	r3, [r7, #4]
 8010cc0:	4618      	mov	r0, r3
 8010cc2:	370c      	adds	r7, #12
 8010cc4:	46bd      	mov	sp, r7
 8010cc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010cca:	4770      	bx	lr
 8010ccc:	0802e92c 	.word	0x0802e92c

08010cd0 <_ZN8touchgfx15TouchControllerD0Ev>:
    virtual ~TouchController()
 8010cd0:	b580      	push	{r7, lr}
 8010cd2:	b082      	sub	sp, #8
 8010cd4:	af00      	add	r7, sp, #0
 8010cd6:	6078      	str	r0, [r7, #4]
    }
 8010cd8:	6878      	ldr	r0, [r7, #4]
 8010cda:	f7ff ffe9 	bl	8010cb0 <_ZN8touchgfx15TouchControllerD1Ev>
 8010cde:	2104      	movs	r1, #4
 8010ce0:	6878      	ldr	r0, [r7, #4]
 8010ce2:	f019 fd3e 	bl	802a762 <_ZdlPvj>
 8010ce6:	687b      	ldr	r3, [r7, #4]
 8010ce8:	4618      	mov	r0, r3
 8010cea:	3708      	adds	r7, #8
 8010cec:	46bd      	mov	sp, r7
 8010cee:	bd80      	pop	{r7, pc}

08010cf0 <_ZN20STM32TouchController4initEv>:
/* USER CODE BEGIN STM32TouchController */

#include <STM32TouchController.hpp>
#include "main.h"
void STM32TouchController::init()
{
 8010cf0:	b480      	push	{r7}
 8010cf2:	b083      	sub	sp, #12
 8010cf4:	af00      	add	r7, sp, #0
 8010cf6:	6078      	str	r0, [r7, #4]
    /**
     * Initialize touch controller and driver
     *
     */
}
 8010cf8:	bf00      	nop
 8010cfa:	370c      	adds	r7, #12
 8010cfc:	46bd      	mov	sp, r7
 8010cfe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010d02:	4770      	bx	lr

08010d04 <_ZN20STM32TouchController11sampleTouchERlS0_>:


bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 8010d04:	b580      	push	{r7, lr}
 8010d06:	b084      	sub	sp, #16
 8010d08:	af00      	add	r7, sp, #0
 8010d0a:	60f8      	str	r0, [r7, #12]
 8010d0c:	60b9      	str	r1, [r7, #8]
 8010d0e:	607a      	str	r2, [r7, #4]
	return ((bool) Touch_TouchGFXSampleTouch(&x, &y));
 8010d10:	6879      	ldr	r1, [r7, #4]
 8010d12:	68b8      	ldr	r0, [r7, #8]
 8010d14:	f7f2 fffc 	bl	8003d10 <Touch_TouchGFXSampleTouch>
 8010d18:	4603      	mov	r3, r0
 8010d1a:	2b00      	cmp	r3, #0
 8010d1c:	bf14      	ite	ne
 8010d1e:	2301      	movne	r3, #1
 8010d20:	2300      	moveq	r3, #0
 8010d22:	b2db      	uxtb	r3, r3
}
 8010d24:	4618      	mov	r0, r3
 8010d26:	3710      	adds	r7, #16
 8010d28:	46bd      	mov	sp, r7
 8010d2a:	bd80      	pop	{r7, pc}

08010d2c <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8010d2c:	b580      	push	{r7, lr}
 8010d2e:	b082      	sub	sp, #8
 8010d30:	af00      	add	r7, sp, #0
 8010d32:	6078      	str	r0, [r7, #4]
 8010d34:	4a05      	ldr	r2, [pc, #20]	; (8010d4c <_ZN20STM32TouchControllerD1Ev+0x20>)
 8010d36:	687b      	ldr	r3, [r7, #4]
 8010d38:	601a      	str	r2, [r3, #0]
 8010d3a:	687b      	ldr	r3, [r7, #4]
 8010d3c:	4618      	mov	r0, r3
 8010d3e:	f7ff ffb7 	bl	8010cb0 <_ZN8touchgfx15TouchControllerD1Ev>
 8010d42:	687b      	ldr	r3, [r7, #4]
 8010d44:	4618      	mov	r0, r3
 8010d46:	3708      	adds	r7, #8
 8010d48:	46bd      	mov	sp, r7
 8010d4a:	bd80      	pop	{r7, pc}
 8010d4c:	0802e914 	.word	0x0802e914

08010d50 <_ZN20STM32TouchControllerD0Ev>:
 8010d50:	b580      	push	{r7, lr}
 8010d52:	b082      	sub	sp, #8
 8010d54:	af00      	add	r7, sp, #0
 8010d56:	6078      	str	r0, [r7, #4]
 8010d58:	6878      	ldr	r0, [r7, #4]
 8010d5a:	f7ff ffe7 	bl	8010d2c <_ZN20STM32TouchControllerD1Ev>
 8010d5e:	2104      	movs	r1, #4
 8010d60:	6878      	ldr	r0, [r7, #4]
 8010d62:	f019 fcfe 	bl	802a762 <_ZdlPvj>
 8010d66:	687b      	ldr	r3, [r7, #4]
 8010d68:	4618      	mov	r0, r3
 8010d6a:	3708      	adds	r7, #8
 8010d6c:	46bd      	mov	sp, r7
 8010d6e:	bd80      	pop	{r7, pc}

08010d70 <_ZN8touchgfx4GPIO4initEv>:

/*
 * Perform configuration of IO pins.
 */
void GPIO::init()
{
 8010d70:	b480      	push	{r7}
 8010d72:	af00      	add	r7, sp, #0

}
 8010d74:	bf00      	nop
 8010d76:	46bd      	mov	sp, r7
 8010d78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010d7c:	4770      	bx	lr
	...

08010d80 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:

/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
 8010d80:	b480      	push	{r7}
 8010d82:	b083      	sub	sp, #12
 8010d84:	af00      	add	r7, sp, #0
 8010d86:	4603      	mov	r3, r0
 8010d88:	71fb      	strb	r3, [r7, #7]
    switch (id)
 8010d8a:	79fb      	ldrb	r3, [r7, #7]
 8010d8c:	2b03      	cmp	r3, #3
 8010d8e:	d80c      	bhi.n	8010daa <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2a>
 8010d90:	a201      	add	r2, pc, #4	; (adr r2, 8010d98 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>)
 8010d92:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8010d96:	bf00      	nop
 8010d98:	08010da9 	.word	0x08010da9
 8010d9c:	08010da9 	.word	0x08010da9
 8010da0:	08010da9 	.word	0x08010da9
 8010da4:	08010da9 	.word	0x08010da9
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_SET);
#endif
        break;
 8010da8:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_SET);
#endif
        break;
    }
}
 8010daa:	bf00      	nop
 8010dac:	370c      	adds	r7, #12
 8010dae:	46bd      	mov	sp, r7
 8010db0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010db4:	4770      	bx	lr
 8010db6:	bf00      	nop

08010db8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:

/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
 8010db8:	b480      	push	{r7}
 8010dba:	b083      	sub	sp, #12
 8010dbc:	af00      	add	r7, sp, #0
 8010dbe:	4603      	mov	r3, r0
 8010dc0:	71fb      	strb	r3, [r7, #7]
    switch (id)
 8010dc2:	79fb      	ldrb	r3, [r7, #7]
 8010dc4:	2b03      	cmp	r3, #3
 8010dc6:	d80c      	bhi.n	8010de2 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2a>
 8010dc8:	a201      	add	r2, pc, #4	; (adr r2, 8010dd0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>)
 8010dca:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8010dce:	bf00      	nop
 8010dd0:	08010de1 	.word	0x08010de1
 8010dd4:	08010de1 	.word	0x08010de1
 8010dd8:	08010de1 	.word	0x08010de1
 8010ddc:	08010de1 	.word	0x08010de1
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
#endif
        break;
 8010de0:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
#endif
        break;
    }
}
 8010de2:	bf00      	nop
 8010de4:	370c      	adds	r7, #12
 8010de6:	46bd      	mov	sp, r7
 8010de8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010dec:	4770      	bx	lr
 8010dee:	bf00      	nop

08010df0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:

/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
 8010df0:	b480      	push	{r7}
 8010df2:	b083      	sub	sp, #12
 8010df4:	af00      	add	r7, sp, #0
 8010df6:	4603      	mov	r3, r0
 8010df8:	71fb      	strb	r3, [r7, #7]
    switch (id)
 8010dfa:	79fb      	ldrb	r3, [r7, #7]
 8010dfc:	2b03      	cmp	r3, #3
 8010dfe:	d80c      	bhi.n	8010e1a <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2a>
 8010e00:	a201      	add	r2, pc, #4	; (adr r2, 8010e08 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>)
 8010e02:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8010e06:	bf00      	nop
 8010e08:	08010e19 	.word	0x08010e19
 8010e0c:	08010e19 	.word	0x08010e19
 8010e10:	08010e19 	.word	0x08010e19
 8010e14:	08010e19 	.word	0x08010e19
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
#endif
        break;
 8010e18:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
}
 8010e1a:	bf00      	nop
 8010e1c:	370c      	adds	r7, #12
 8010e1e:	46bd      	mov	sp, r7
 8010e20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010e24:	4770      	bx	lr
 8010e26:	bf00      	nop

08010e28 <_ZN8touchgfx3HALD1Ev>:
    virtual ~HAL()
 8010e28:	b480      	push	{r7}
 8010e2a:	b083      	sub	sp, #12
 8010e2c:	af00      	add	r7, sp, #0
 8010e2e:	6078      	str	r0, [r7, #4]
    {
 8010e30:	4a04      	ldr	r2, [pc, #16]	; (8010e44 <_ZN8touchgfx3HALD1Ev+0x1c>)
 8010e32:	687b      	ldr	r3, [r7, #4]
 8010e34:	601a      	str	r2, [r3, #0]
    }
 8010e36:	687b      	ldr	r3, [r7, #4]
 8010e38:	4618      	mov	r0, r3
 8010e3a:	370c      	adds	r7, #12
 8010e3c:	46bd      	mov	sp, r7
 8010e3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010e42:	4770      	bx	lr
 8010e44:	0802efe8 	.word	0x0802efe8

08010e48 <_ZN8touchgfx3HALD0Ev>:
    virtual ~HAL()
 8010e48:	b580      	push	{r7, lr}
 8010e4a:	b082      	sub	sp, #8
 8010e4c:	af00      	add	r7, sp, #0
 8010e4e:	6078      	str	r0, [r7, #4]
    }
 8010e50:	6878      	ldr	r0, [r7, #4]
 8010e52:	f7ff ffe9 	bl	8010e28 <_ZN8touchgfx3HALD1Ev>
 8010e56:	217c      	movs	r1, #124	; 0x7c
 8010e58:	6878      	ldr	r0, [r7, #4]
 8010e5a:	f019 fc82 	bl	802a762 <_ZdlPvj>
 8010e5e:	687b      	ldr	r3, [r7, #4]
 8010e60:	4618      	mov	r0, r3
 8010e62:	3708      	adds	r7, #8
 8010e64:	46bd      	mov	sp, r7
 8010e66:	bd80      	pop	{r7, pc}

08010e68 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
    virtual void setDisplayOrientation(DisplayOrientation orientation)
 8010e68:	b480      	push	{r7}
 8010e6a:	b083      	sub	sp, #12
 8010e6c:	af00      	add	r7, sp, #0
 8010e6e:	6078      	str	r0, [r7, #4]
 8010e70:	460b      	mov	r3, r1
 8010e72:	70fb      	strb	r3, [r7, #3]
        requestedOrientation = orientation;
 8010e74:	687b      	ldr	r3, [r7, #4]
 8010e76:	78fa      	ldrb	r2, [r7, #3]
 8010e78:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
        displayOrientationChangeRequested = true;
 8010e7c:	687b      	ldr	r3, [r7, #4]
 8010e7e:	2201      	movs	r2, #1
 8010e80:	f883 2079 	strb.w	r2, [r3, #121]	; 0x79
    }
 8010e84:	bf00      	nop
 8010e86:	370c      	adds	r7, #12
 8010e88:	46bd      	mov	sp, r7
 8010e8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010e8e:	4770      	bx	lr

08010e90 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8010e90:	b580      	push	{r7, lr}
 8010e92:	b082      	sub	sp, #8
 8010e94:	af00      	add	r7, sp, #0
 8010e96:	6078      	str	r0, [r7, #4]
 8010e98:	460b      	mov	r3, r1
 8010e9a:	807b      	strh	r3, [r7, #2]
 8010e9c:	4613      	mov	r3, r2
 8010e9e:	803b      	strh	r3, [r7, #0]
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8010ea0:	4b0c      	ldr	r3, [pc, #48]	; (8010ed4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x44>)
 8010ea2:	881b      	ldrh	r3, [r3, #0]
 8010ea4:	887a      	ldrh	r2, [r7, #2]
 8010ea6:	429a      	cmp	r2, r3
 8010ea8:	d304      	bcc.n	8010eb4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x24>
 8010eaa:	4b0b      	ldr	r3, [pc, #44]	; (8010ed8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x48>)
 8010eac:	881b      	ldrh	r3, [r3, #0]
 8010eae:	883a      	ldrh	r2, [r7, #0]
 8010eb0:	429a      	cmp	r2, r3
 8010eb2:	d205      	bcs.n	8010ec0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>
 8010eb4:	4b09      	ldr	r3, [pc, #36]	; (8010edc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x4c>)
 8010eb6:	4a0a      	ldr	r2, [pc, #40]	; (8010ee0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x50>)
 8010eb8:	219e      	movs	r1, #158	; 0x9e
 8010eba:	480a      	ldr	r0, [pc, #40]	; (8010ee4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x54>)
 8010ebc:	f01a fa42 	bl	802b344 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8010ec0:	4a09      	ldr	r2, [pc, #36]	; (8010ee8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x58>)
 8010ec2:	887b      	ldrh	r3, [r7, #2]
 8010ec4:	8013      	strh	r3, [r2, #0]
        FRAME_BUFFER_HEIGHT = height;
 8010ec6:	4a09      	ldr	r2, [pc, #36]	; (8010eec <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x5c>)
 8010ec8:	883b      	ldrh	r3, [r7, #0]
 8010eca:	8013      	strh	r3, [r2, #0]
    }
 8010ecc:	bf00      	nop
 8010ece:	3708      	adds	r7, #8
 8010ed0:	46bd      	mov	sp, r7
 8010ed2:	bd80      	pop	{r7, pc}
 8010ed4:	20002240 	.word	0x20002240
 8010ed8:	20002242 	.word	0x20002242
 8010edc:	0802d40c 	.word	0x0802d40c
 8010ee0:	0802d470 	.word	0x0802d470
 8010ee4:	0802d4b4 	.word	0x0802d4b4
 8010ee8:	20002246 	.word	0x20002246
 8010eec:	20002248 	.word	0x20002248

08010ef0 <_ZN8touchgfx3HAL11getBlitCapsEv>:
     *
     * @return a bitmask of the supported blitcaps.
     *
     * @see enableDMAAcceleration
     */
    virtual BlitOperations getBlitCaps()
 8010ef0:	b580      	push	{r7, lr}
 8010ef2:	b082      	sub	sp, #8
 8010ef4:	af00      	add	r7, sp, #0
 8010ef6:	6078      	str	r0, [r7, #4]
    {
        if (useDMAAcceleration)
 8010ef8:	687b      	ldr	r3, [r7, #4]
 8010efa:	f893 307a 	ldrb.w	r3, [r3, #122]	; 0x7a
 8010efe:	2b00      	cmp	r3, #0
 8010f00:	d009      	beq.n	8010f16 <_ZN8touchgfx3HAL11getBlitCapsEv+0x26>
        {
            return dma.getBlitCaps();
 8010f02:	687b      	ldr	r3, [r7, #4]
 8010f04:	685a      	ldr	r2, [r3, #4]
 8010f06:	687b      	ldr	r3, [r7, #4]
 8010f08:	685b      	ldr	r3, [r3, #4]
 8010f0a:	681b      	ldr	r3, [r3, #0]
 8010f0c:	681b      	ldr	r3, [r3, #0]
 8010f0e:	4610      	mov	r0, r2
 8010f10:	4798      	blx	r3
 8010f12:	4603      	mov	r3, r0
 8010f14:	e000      	b.n	8010f18 <_ZN8touchgfx3HAL11getBlitCapsEv+0x28>
        }
        return static_cast<BlitOperations>(0);
 8010f16:	2300      	movs	r3, #0
    }
 8010f18:	4618      	mov	r0, r3
 8010f1a:	3708      	adds	r7, #8
 8010f1c:	46bd      	mov	sp, r7
 8010f1e:	bd80      	pop	{r7, pc}

08010f20 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    /**
     * Has to be called from within the LCD IRQ rutine when the Back Porch Exit is reached.
     *
     * Has to be called from within the LCD IRQ rutine when the Back Porch Exit is reached.
     */
    virtual void backPorchExited()
 8010f20:	b580      	push	{r7, lr}
 8010f22:	b082      	sub	sp, #8
 8010f24:	af00      	add	r7, sp, #0
 8010f26:	6078      	str	r0, [r7, #4]
    {
        swapFrameBuffers();
 8010f28:	6878      	ldr	r0, [r7, #4]
 8010f2a:	f003 f875 	bl	8014018 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8010f2e:	687b      	ldr	r3, [r7, #4]
 8010f30:	681b      	ldr	r3, [r3, #0]
 8010f32:	33ac      	adds	r3, #172	; 0xac
 8010f34:	681b      	ldr	r3, [r3, #0]
 8010f36:	6878      	ldr	r0, [r7, #4]
 8010f38:	4798      	blx	r3
    }
 8010f3a:	bf00      	nop
 8010f3c:	3708      	adds	r7, #8
 8010f3e:	46bd      	mov	sp, r7
 8010f40:	bd80      	pop	{r7, pc}

08010f42 <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @param [out] key Output parameter that will be set to the key value if a keypress was
     *                  detected.
     *
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
 8010f42:	b480      	push	{r7}
 8010f44:	b083      	sub	sp, #12
 8010f46:	af00      	add	r7, sp, #0
 8010f48:	6078      	str	r0, [r7, #4]
 8010f4a:	6039      	str	r1, [r7, #0]
    {
        (void)key; // Unused variable
        return false;
 8010f4c:	2300      	movs	r3, #0
    }
 8010f4e:	4618      	mov	r0, r3
 8010f50:	370c      	adds	r7, #12
 8010f52:	46bd      	mov	sp, r7
 8010f54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010f58:	4770      	bx	lr
	...

08010f5c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
     * @param [in] animationStorage If non-null, the animation storage. If null animation storage
     *                              is disabled.
     *
     * @see setAnimationStorage
     */
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8010f5c:	b580      	push	{r7, lr}
 8010f5e:	b084      	sub	sp, #16
 8010f60:	af00      	add	r7, sp, #0
 8010f62:	60f8      	str	r0, [r7, #12]
 8010f64:	60b9      	str	r1, [r7, #8]
 8010f66:	607a      	str	r2, [r7, #4]
 8010f68:	603b      	str	r3, [r7, #0]
    {
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8010f6a:	68bb      	ldr	r3, [r7, #8]
 8010f6c:	2b00      	cmp	r3, #0
 8010f6e:	d106      	bne.n	8010f7e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x22>
 8010f70:	4b0f      	ldr	r3, [pc, #60]	; (8010fb0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
 8010f72:	4a10      	ldr	r2, [pc, #64]	; (8010fb4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x58>)
 8010f74:	f240 21d2 	movw	r1, #722	; 0x2d2
 8010f78:	480f      	ldr	r0, [pc, #60]	; (8010fb8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x5c>)
 8010f7a:	f01a f9e3 	bl	802b344 <__assert_func>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
 8010f7e:	68fb      	ldr	r3, [r7, #12]
 8010f80:	68ba      	ldr	r2, [r7, #8]
 8010f82:	63da      	str	r2, [r3, #60]	; 0x3c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8010f84:	68fb      	ldr	r3, [r7, #12]
 8010f86:	687a      	ldr	r2, [r7, #4]
 8010f88:	641a      	str	r2, [r3, #64]	; 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8010f8a:	687b      	ldr	r3, [r7, #4]
 8010f8c:	2b00      	cmp	r3, #0
 8010f8e:	bf14      	ite	ne
 8010f90:	2301      	movne	r3, #1
 8010f92:	2300      	moveq	r3, #0
 8010f94:	b2da      	uxtb	r2, r3
 8010f96:	4b09      	ldr	r3, [pc, #36]	; (8010fbc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x60>)
 8010f98:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8010f9a:	68fb      	ldr	r3, [r7, #12]
 8010f9c:	681b      	ldr	r3, [r3, #0]
 8010f9e:	338c      	adds	r3, #140	; 0x8c
 8010fa0:	681b      	ldr	r3, [r3, #0]
 8010fa2:	6839      	ldr	r1, [r7, #0]
 8010fa4:	68f8      	ldr	r0, [r7, #12]
 8010fa6:	4798      	blx	r3
    }
 8010fa8:	bf00      	nop
 8010faa:	3710      	adds	r7, #16
 8010fac:	46bd      	mov	sp, r7
 8010fae:	bd80      	pop	{r7, pc}
 8010fb0:	0802d4f8 	.word	0x0802d4f8
 8010fb4:	0802d530 	.word	0x0802d530
 8010fb8:	0802d4b4 	.word	0x0802d4b4
 8010fbc:	2000224a 	.word	0x2000224a

08010fc0 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @param [in] animationStorage If non-null, the animation storage. If null animation storage
     *                              is disabled.
     *
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
 8010fc0:	b480      	push	{r7}
 8010fc2:	b083      	sub	sp, #12
 8010fc4:	af00      	add	r7, sp, #0
 8010fc6:	6078      	str	r0, [r7, #4]
 8010fc8:	6039      	str	r1, [r7, #0]
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8010fca:	687b      	ldr	r3, [r7, #4]
 8010fcc:	683a      	ldr	r2, [r7, #0]
 8010fce:	645a      	str	r2, [r3, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8010fd0:	683b      	ldr	r3, [r7, #0]
 8010fd2:	2b00      	cmp	r3, #0
 8010fd4:	bf14      	ite	ne
 8010fd6:	2301      	movne	r3, #1
 8010fd8:	2300      	moveq	r3, #0
 8010fda:	b2da      	uxtb	r2, r3
 8010fdc:	4b03      	ldr	r3, [pc, #12]	; (8010fec <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x2c>)
 8010fde:	701a      	strb	r2, [r3, #0]
    }
 8010fe0:	bf00      	nop
 8010fe2:	370c      	adds	r7, #12
 8010fe4:	46bd      	mov	sp, r7
 8010fe6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010fea:	4770      	bx	lr
 8010fec:	2000224b 	.word	0x2000224b

08010ff0 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * Gets the flash data reader. This method must be implemented in
     * subclasses that uses a FlashDataReader object.
     *
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
 8010ff0:	b480      	push	{r7}
 8010ff2:	b083      	sub	sp, #12
 8010ff4:	af00      	add	r7, sp, #0
 8010ff6:	6078      	str	r0, [r7, #4]
    {
        return 0;
 8010ff8:	2300      	movs	r3, #0
    }
 8010ffa:	4618      	mov	r0, r3
 8010ffc:	370c      	adds	r7, #12
 8010ffe:	46bd      	mov	sp, r7
 8011000:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011004:	4770      	bx	lr

08011006 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @param  ms Number of milliseconds to wait.
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
 8011006:	b580      	push	{r7, lr}
 8011008:	b082      	sub	sp, #8
 801100a:	af00      	add	r7, sp, #0
 801100c:	6078      	str	r0, [r7, #4]
 801100e:	460b      	mov	r3, r1
 8011010:	807b      	strh	r3, [r7, #2]
    {
        if (taskDelayFunc)
 8011012:	687b      	ldr	r3, [r7, #4]
 8011014:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011016:	2b00      	cmp	r3, #0
 8011018:	d004      	beq.n	8011024 <_ZN8touchgfx3HAL9taskDelayEt+0x1e>
        {
            taskDelayFunc(ms);
 801101a:	687b      	ldr	r3, [r7, #4]
 801101c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801101e:	887a      	ldrh	r2, [r7, #2]
 8011020:	4610      	mov	r0, r2
 8011022:	4798      	blx	r3
        }
    }
 8011024:	bf00      	nop
 8011026:	3708      	adds	r7, #8
 8011028:	46bd      	mov	sp, r7
 801102a:	bd80      	pop	{r7, pc}

0801102c <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     * getTFTCurrentLine function is never called and can be disregarded.
     *
     * @return In this default implementation, 0xFFFF is returned to signify "not
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
 801102c:	b480      	push	{r7}
 801102e:	b083      	sub	sp, #12
 8011030:	af00      	add	r7, sp, #0
 8011032:	6078      	str	r0, [r7, #4]
    {
        return 0xFFFFu;
 8011034:	f64f 73ff 	movw	r3, #65535	; 0xffff
    }
 8011038:	4618      	mov	r0, r3
 801103a:	370c      	adds	r7, #12
 801103c:	46bd      	mov	sp, r7
 801103e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011042:	4770      	bx	lr

08011044 <_ZN8touchgfx3HAL10getDMATypeEv>:
     * Function for obtaining the DMA type of the concrete DMA implementation. As default,
     * will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
 8011044:	b580      	push	{r7, lr}
 8011046:	b082      	sub	sp, #8
 8011048:	af00      	add	r7, sp, #0
 801104a:	6078      	str	r0, [r7, #4]
    {
        return dma.getDMAType();
 801104c:	687b      	ldr	r3, [r7, #4]
 801104e:	685a      	ldr	r2, [r3, #4]
 8011050:	687b      	ldr	r3, [r7, #4]
 8011052:	685b      	ldr	r3, [r3, #4]
 8011054:	681b      	ldr	r3, [r3, #0]
 8011056:	3318      	adds	r3, #24
 8011058:	681b      	ldr	r3, [r3, #0]
 801105a:	4610      	mov	r0, r2
 801105c:	4798      	blx	r3
 801105e:	4603      	mov	r3, r0
    }
 8011060:	4618      	mov	r0, r3
 8011062:	3708      	adds	r7, #8
 8011064:	46bd      	mov	sp, r7
 8011066:	bd80      	pop	{r7, pc}

08011068 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:

    /** Called by the touch driver to indicate that no touch is currently detected. */
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
 8011068:	b480      	push	{r7}
 801106a:	b085      	sub	sp, #20
 801106c:	af00      	add	r7, sp, #0
 801106e:	6078      	str	r0, [r7, #4]
    {
        if (requestedOrientation != nativeDisplayOrientation)
 8011070:	687b      	ldr	r3, [r7, #4]
 8011072:	f893 2078 	ldrb.w	r2, [r3, #120]	; 0x78
 8011076:	687b      	ldr	r3, [r7, #4]
 8011078:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 801107c:	429a      	cmp	r2, r3
 801107e:	d011      	beq.n	80110a4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>
        {
            if (DISPLAY_ROTATION == rotate0)
 8011080:	4b14      	ldr	r3, [pc, #80]	; (80110d4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 8011082:	781b      	ldrb	r3, [r3, #0]
 8011084:	2b00      	cmp	r3, #0
 8011086:	d11e      	bne.n	80110c6 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
 8011088:	4b13      	ldr	r3, [pc, #76]	; (80110d8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 801108a:	881b      	ldrh	r3, [r3, #0]
 801108c:	81bb      	strh	r3, [r7, #12]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 801108e:	4b13      	ldr	r3, [pc, #76]	; (80110dc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 8011090:	881a      	ldrh	r2, [r3, #0]
 8011092:	4b11      	ldr	r3, [pc, #68]	; (80110d8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 8011094:	801a      	strh	r2, [r3, #0]
                DISPLAY_WIDTH = tmp;
 8011096:	4a11      	ldr	r2, [pc, #68]	; (80110dc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 8011098:	89bb      	ldrh	r3, [r7, #12]
 801109a:	8013      	strh	r3, [r2, #0]
                DISPLAY_ROTATION = rotate90;
 801109c:	4b0d      	ldr	r3, [pc, #52]	; (80110d4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 801109e:	2201      	movs	r2, #1
 80110a0:	701a      	strb	r2, [r3, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
        }
    }
 80110a2:	e010      	b.n	80110c6 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
        else if (DISPLAY_ROTATION != rotate0)
 80110a4:	4b0b      	ldr	r3, [pc, #44]	; (80110d4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 80110a6:	781b      	ldrb	r3, [r3, #0]
 80110a8:	2b00      	cmp	r3, #0
 80110aa:	d00c      	beq.n	80110c6 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
            const uint16_t tmp = DISPLAY_HEIGHT;
 80110ac:	4b0a      	ldr	r3, [pc, #40]	; (80110d8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 80110ae:	881b      	ldrh	r3, [r3, #0]
 80110b0:	81fb      	strh	r3, [r7, #14]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80110b2:	4b0a      	ldr	r3, [pc, #40]	; (80110dc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 80110b4:	881a      	ldrh	r2, [r3, #0]
 80110b6:	4b08      	ldr	r3, [pc, #32]	; (80110d8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 80110b8:	801a      	strh	r2, [r3, #0]
            DISPLAY_WIDTH = tmp;
 80110ba:	4a08      	ldr	r2, [pc, #32]	; (80110dc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 80110bc:	89fb      	ldrh	r3, [r7, #14]
 80110be:	8013      	strh	r3, [r2, #0]
            DISPLAY_ROTATION = rotate0;
 80110c0:	4b04      	ldr	r3, [pc, #16]	; (80110d4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 80110c2:	2200      	movs	r2, #0
 80110c4:	701a      	strb	r2, [r3, #0]
    }
 80110c6:	bf00      	nop
 80110c8:	3714      	adds	r7, #20
 80110ca:	46bd      	mov	sp, r7
 80110cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80110d0:	4770      	bx	lr
 80110d2:	bf00      	nop
 80110d4:	20002244 	.word	0x20002244
 80110d8:	20002242 	.word	0x20002242
 80110dc:	20002240 	.word	0x20002240

080110e0 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Invalidate D-Cache.
     *
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
 80110e0:	b480      	push	{r7}
 80110e2:	b083      	sub	sp, #12
 80110e4:	af00      	add	r7, sp, #0
 80110e6:	6078      	str	r0, [r7, #4]
    {
    }
 80110e8:	bf00      	nop
 80110ea:	370c      	adds	r7, #12
 80110ec:	46bd      	mov	sp, r7
 80110ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80110f2:	4770      	bx	lr

080110f4 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Flush D-Cache.
     *
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
 80110f4:	b480      	push	{r7}
 80110f6:	b083      	sub	sp, #12
 80110f8:	af00      	add	r7, sp, #0
 80110fa:	6078      	str	r0, [r7, #4]
    {
    }
 80110fc:	bf00      	nop
 80110fe:	370c      	adds	r7, #12
 8011100:	46bd      	mov	sp, r7
 8011102:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011106:	4770      	bx	lr

08011108 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 8011108:	b580      	push	{r7, lr}
 801110a:	b082      	sub	sp, #8
 801110c:	af00      	add	r7, sp, #0
 801110e:	6078      	str	r0, [r7, #4]
    {
        HAL::flushFrameBuffer();
 8011110:	687b      	ldr	r3, [r7, #4]
 8011112:	4618      	mov	r0, r3
 8011114:	f002 f9de 	bl	80134d4 <_ZN8touchgfx3HAL16flushFrameBufferEv>
    }
 8011118:	bf00      	nop
 801111a:	3708      	adds	r7, #8
 801111c:	46bd      	mov	sp, r7
 801111e:	bd80      	pop	{r7, pc}

08011120 <_ZN20TouchGFXGeneratedHALD1Ev>:
class TouchGFXGeneratedHAL : public touchgfx::HAL
 8011120:	b580      	push	{r7, lr}
 8011122:	b082      	sub	sp, #8
 8011124:	af00      	add	r7, sp, #0
 8011126:	6078      	str	r0, [r7, #4]
 8011128:	4a05      	ldr	r2, [pc, #20]	; (8011140 <_ZN20TouchGFXGeneratedHALD1Ev+0x20>)
 801112a:	687b      	ldr	r3, [r7, #4]
 801112c:	601a      	str	r2, [r3, #0]
 801112e:	687b      	ldr	r3, [r7, #4]
 8011130:	4618      	mov	r0, r3
 8011132:	f7ff fe79 	bl	8010e28 <_ZN8touchgfx3HALD1Ev>
 8011136:	687b      	ldr	r3, [r7, #4]
 8011138:	4618      	mov	r0, r3
 801113a:	3708      	adds	r7, #8
 801113c:	46bd      	mov	sp, r7
 801113e:	bd80      	pop	{r7, pc}
 8011140:	0802eb90 	.word	0x0802eb90

08011144 <_ZN20TouchGFXGeneratedHALD0Ev>:
 8011144:	b580      	push	{r7, lr}
 8011146:	b082      	sub	sp, #8
 8011148:	af00      	add	r7, sp, #0
 801114a:	6078      	str	r0, [r7, #4]
 801114c:	6878      	ldr	r0, [r7, #4]
 801114e:	f7ff ffe7 	bl	8011120 <_ZN20TouchGFXGeneratedHALD1Ev>
 8011152:	217c      	movs	r1, #124	; 0x7c
 8011154:	6878      	ldr	r0, [r7, #4]
 8011156:	f019 fb04 	bl	802a762 <_ZdlPvj>
 801115a:	687b      	ldr	r3, [r7, #4]
 801115c:	4618      	mov	r0, r3
 801115e:	3708      	adds	r7, #8
 8011160:	46bd      	mov	sp, r7
 8011162:	bd80      	pop	{r7, pc}

08011164 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 8011164:	b580      	push	{r7, lr}
 8011166:	b082      	sub	sp, #8
 8011168:	af00      	add	r7, sp, #0
 801116a:	6078      	str	r0, [r7, #4]
    {
        TouchGFXGeneratedHAL::flushFrameBuffer();
 801116c:	687b      	ldr	r3, [r7, #4]
 801116e:	4618      	mov	r0, r3
 8011170:	f7ff ffca 	bl	8011108 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>
    }
 8011174:	bf00      	nop
 8011176:	3708      	adds	r7, #8
 8011178:	46bd      	mov	sp, r7
 801117a:	bd80      	pop	{r7, pc}

0801117c <_ZN11TouchGFXHAL10initializeEv>:
 */
//#warning "A user must call touchgfx::startNewTransfer(); once touchgfxDisplayDriverTransmitBlock() has succesfully sent a block."
//#warning "A user must implement C-methods touchgfxDisplayDriverTransmitActive() and touchgfxDisplayDriverTransmitBlock() used by the Partial Framebuffer Strategy."

void TouchGFXHAL::initialize()
{
 801117c:	b580      	push	{r7, lr}
 801117e:	b082      	sub	sp, #8
 8011180:	af00      	add	r7, sp, #0
 8011182:	6078      	str	r0, [r7, #4]
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8011184:	687b      	ldr	r3, [r7, #4]
 8011186:	4618      	mov	r0, r3
 8011188:	f000 ffba 	bl	8012100 <_ZN20TouchGFXGeneratedHAL10initializeEv>
}
 801118c:	bf00      	nop
 801118e:	3708      	adds	r7, #8
 8011190:	46bd      	mov	sp, r7
 8011192:	bd80      	pop	{r7, pc}

08011194 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
 * Gets the frame buffer address used by the TFT controller.
 *
 * @return The address of the frame buffer currently being displayed on the TFT.
 */
uint16_t* TouchGFXHAL::getTFTFrameBuffer() const
{
 8011194:	b580      	push	{r7, lr}
 8011196:	b082      	sub	sp, #8
 8011198:	af00      	add	r7, sp, #0
 801119a:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 801119c:	687b      	ldr	r3, [r7, #4]
 801119e:	4618      	mov	r0, r3
 80111a0:	f001 f82c 	bl	80121fc <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>
 80111a4:	4603      	mov	r3, r0
}
 80111a6:	4618      	mov	r0, r3
 80111a8:	3708      	adds	r7, #8
 80111aa:	46bd      	mov	sp, r7
 80111ac:	bd80      	pop	{r7, pc}

080111ae <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
 * Sets the frame buffer address used by the TFT controller.
 *
 * @param [in] address New frame buffer address.
 */
void TouchGFXHAL::setTFTFrameBuffer(uint16_t* address)
{
 80111ae:	b580      	push	{r7, lr}
 80111b0:	b082      	sub	sp, #8
 80111b2:	af00      	add	r7, sp, #0
 80111b4:	6078      	str	r0, [r7, #4]
 80111b6:	6039      	str	r1, [r7, #0]
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80111b8:	687b      	ldr	r3, [r7, #4]
 80111ba:	6839      	ldr	r1, [r7, #0]
 80111bc:	4618      	mov	r0, r3
 80111be:	f001 f828 	bl	8012212 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>
}
 80111c2:	bf00      	nop
 80111c4:	3708      	adds	r7, #8
 80111c6:	46bd      	mov	sp, r7
 80111c8:	bd80      	pop	{r7, pc}

080111ca <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 80111ca:	b580      	push	{r7, lr}
 80111cc:	b082      	sub	sp, #8
 80111ce:	af00      	add	r7, sp, #0
 80111d0:	6078      	str	r0, [r7, #4]
 80111d2:	6039      	str	r1, [r7, #0]
    // be called to notify the touchgfx framework that flush has been performed.
    // To calculate he start adress of rect,
    // use advanceFrameBufferToRect(uint8_t* fbPtr, const touchgfx::Rect& rect)
    // defined in TouchGFXGeneratedHAL.cpp

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80111d4:	687b      	ldr	r3, [r7, #4]
 80111d6:	6839      	ldr	r1, [r7, #0]
 80111d8:	4618      	mov	r0, r3
 80111da:	f001 f825 	bl	8012228 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
}
 80111de:	bf00      	nop
 80111e0:	3708      	adds	r7, #8
 80111e2:	46bd      	mov	sp, r7
 80111e4:	bd80      	pop	{r7, pc}

080111e6 <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 80111e6:	b580      	push	{r7, lr}
 80111e8:	b084      	sub	sp, #16
 80111ea:	af00      	add	r7, sp, #0
 80111ec:	60f8      	str	r0, [r7, #12]
 80111ee:	60b9      	str	r1, [r7, #8]
 80111f0:	607a      	str	r2, [r7, #4]
 80111f2:	603b      	str	r3, [r7, #0]
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 80111f4:	68f8      	ldr	r0, [r7, #12]
 80111f6:	683b      	ldr	r3, [r7, #0]
 80111f8:	687a      	ldr	r2, [r7, #4]
 80111fa:	68b9      	ldr	r1, [r7, #8]
 80111fc:	f001 f857 	bl	80122ae <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>
 8011200:	4603      	mov	r3, r0
}
 8011202:	4618      	mov	r0, r3
 8011204:	3710      	adds	r7, #16
 8011206:	46bd      	mov	sp, r7
 8011208:	bd80      	pop	{r7, pc}

0801120a <_ZN11TouchGFXHAL19configureInterruptsEv>:
/**
 * Configures the interrupts relevant for TouchGFX. This primarily entails setting
 * the interrupt priorities for the DMA and LCD interrupts.
 */
void TouchGFXHAL::configureInterrupts()
{
 801120a:	b580      	push	{r7, lr}
 801120c:	b082      	sub	sp, #8
 801120e:	af00      	add	r7, sp, #0
 8011210:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8011212:	687b      	ldr	r3, [r7, #4]
 8011214:	4618      	mov	r0, r3
 8011216:	f000 ffa3 	bl	8012160 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>
}
 801121a:	bf00      	nop
 801121c:	3708      	adds	r7, #8
 801121e:	46bd      	mov	sp, r7
 8011220:	bd80      	pop	{r7, pc}

08011222 <_ZN11TouchGFXHAL16enableInterruptsEv>:

/**
 * Used for enabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::enableInterrupts()
{
 8011222:	b580      	push	{r7, lr}
 8011224:	b082      	sub	sp, #8
 8011226:	af00      	add	r7, sp, #0
 8011228:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 801122a:	687b      	ldr	r3, [r7, #4]
 801122c:	4618      	mov	r0, r3
 801122e:	f000 ffa1 	bl	8012174 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>
}
 8011232:	bf00      	nop
 8011234:	3708      	adds	r7, #8
 8011236:	46bd      	mov	sp, r7
 8011238:	bd80      	pop	{r7, pc}

0801123a <_ZN11TouchGFXHAL17disableInterruptsEv>:

/**
 * Used for disabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::disableInterrupts()
{
 801123a:	b580      	push	{r7, lr}
 801123c:	b082      	sub	sp, #8
 801123e:	af00      	add	r7, sp, #0
 8011240:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8011242:	687b      	ldr	r3, [r7, #4]
 8011244:	4618      	mov	r0, r3
 8011246:	f000 ff9f 	bl	8012188 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
}
 801124a:	bf00      	nop
 801124c:	3708      	adds	r7, #8
 801124e:	46bd      	mov	sp, r7
 8011250:	bd80      	pop	{r7, pc}

08011252 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
/**
 * Configure the LCD controller to fire interrupts at VSYNC. Called automatically
 * once TouchGFX initialization has completed.
 */
void TouchGFXHAL::enableLCDControllerInterrupt()
{
 8011252:	b580      	push	{r7, lr}
 8011254:	b082      	sub	sp, #8
 8011256:	af00      	add	r7, sp, #0
 8011258:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 801125a:	687b      	ldr	r3, [r7, #4]
 801125c:	4618      	mov	r0, r3
 801125e:	f000 ff9d 	bl	801219c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>
}
 8011262:	bf00      	nop
 8011264:	3708      	adds	r7, #8
 8011266:	46bd      	mov	sp, r7
 8011268:	bd80      	pop	{r7, pc}

0801126a <_ZN11TouchGFXHAL10beginFrameEv>:

bool TouchGFXHAL::beginFrame()
{
 801126a:	b580      	push	{r7, lr}
 801126c:	b082      	sub	sp, #8
 801126e:	af00      	add	r7, sp, #0
 8011270:	6078      	str	r0, [r7, #4]
    return TouchGFXGeneratedHAL::beginFrame();
 8011272:	687b      	ldr	r3, [r7, #4]
 8011274:	4618      	mov	r0, r3
 8011276:	f000 ff9b 	bl	80121b0 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>
 801127a:	4603      	mov	r3, r0
}
 801127c:	4618      	mov	r0, r3
 801127e:	3708      	adds	r7, #8
 8011280:	46bd      	mov	sp, r7
 8011282:	bd80      	pop	{r7, pc}

08011284 <_ZN11TouchGFXHAL8endFrameEv>:

void TouchGFXHAL::endFrame()
{
 8011284:	b580      	push	{r7, lr}
 8011286:	b082      	sub	sp, #8
 8011288:	af00      	add	r7, sp, #0
 801128a:	6078      	str	r0, [r7, #4]
    TouchGFXGeneratedHAL::endFrame();
 801128c:	687b      	ldr	r3, [r7, #4]
 801128e:	4618      	mov	r0, r3
 8011290:	f000 ff9b 	bl	80121ca <_ZN20TouchGFXGeneratedHAL8endFrameEv>
}
 8011294:	bf00      	nop
 8011296:	3708      	adds	r7, #8
 8011298:	46bd      	mov	sp, r7
 801129a:	bd80      	pop	{r7, pc}

0801129c <_ZN11TouchGFXHALD1Ev>:
class TouchGFXHAL : public TouchGFXGeneratedHAL
 801129c:	b580      	push	{r7, lr}
 801129e:	b082      	sub	sp, #8
 80112a0:	af00      	add	r7, sp, #0
 80112a2:	6078      	str	r0, [r7, #4]
 80112a4:	4a05      	ldr	r2, [pc, #20]	; (80112bc <_ZN11TouchGFXHALD1Ev+0x20>)
 80112a6:	687b      	ldr	r3, [r7, #4]
 80112a8:	601a      	str	r2, [r3, #0]
 80112aa:	687b      	ldr	r3, [r7, #4]
 80112ac:	4618      	mov	r0, r3
 80112ae:	f7ff ff37 	bl	8011120 <_ZN20TouchGFXGeneratedHALD1Ev>
 80112b2:	687b      	ldr	r3, [r7, #4]
 80112b4:	4618      	mov	r0, r3
 80112b6:	3708      	adds	r7, #8
 80112b8:	46bd      	mov	sp, r7
 80112ba:	bd80      	pop	{r7, pc}
 80112bc:	0802e944 	.word	0x0802e944

080112c0 <_ZN11TouchGFXHALD0Ev>:
 80112c0:	b580      	push	{r7, lr}
 80112c2:	b082      	sub	sp, #8
 80112c4:	af00      	add	r7, sp, #0
 80112c6:	6078      	str	r0, [r7, #4]
 80112c8:	6878      	ldr	r0, [r7, #4]
 80112ca:	f7ff ffe7 	bl	801129c <_ZN11TouchGFXHALD1Ev>
 80112ce:	217c      	movs	r1, #124	; 0x7c
 80112d0:	6878      	ldr	r0, [r7, #4]
 80112d2:	f019 fa46 	bl	802a762 <_ZdlPvj>
 80112d6:	687b      	ldr	r3, [r7, #4]
 80112d8:	4618      	mov	r0, r3
 80112da:	3708      	adds	r7, #8
 80112dc:	46bd      	mov	sp, r7
 80112de:	bd80      	pop	{r7, pc}

080112e0 <_ZN8touchgfx10OSWrappers10initializeEv>:

/*
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
 80112e0:	b480      	push	{r7}
 80112e2:	af00      	add	r7, sp, #0
    fb_sem = 0;
 80112e4:	4b05      	ldr	r3, [pc, #20]	; (80112fc <_ZN8touchgfx10OSWrappers10initializeEv+0x1c>)
 80112e6:	2200      	movs	r2, #0
 80112e8:	601a      	str	r2, [r3, #0]
    vsync_sem = 0;
 80112ea:	4b05      	ldr	r3, [pc, #20]	; (8011300 <_ZN8touchgfx10OSWrappers10initializeEv+0x20>)
 80112ec:	2200      	movs	r2, #0
 80112ee:	601a      	str	r2, [r3, #0]
}
 80112f0:	bf00      	nop
 80112f2:	46bd      	mov	sp, r7
 80112f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80112f8:	4770      	bx	lr
 80112fa:	bf00      	nop
 80112fc:	20000444 	.word	0x20000444
 8011300:	20000448 	.word	0x20000448

08011304 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:

/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
 8011304:	b480      	push	{r7}
 8011306:	af00      	add	r7, sp, #0
    while (fb_sem);
 8011308:	bf00      	nop
 801130a:	4b08      	ldr	r3, [pc, #32]	; (801132c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 801130c:	681b      	ldr	r3, [r3, #0]
 801130e:	2b00      	cmp	r3, #0
 8011310:	bf14      	ite	ne
 8011312:	2301      	movne	r3, #1
 8011314:	2300      	moveq	r3, #0
 8011316:	b2db      	uxtb	r3, r3
 8011318:	2b00      	cmp	r3, #0
 801131a:	d1f6      	bne.n	801130a <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x6>
    fb_sem = 1;
 801131c:	4b03      	ldr	r3, [pc, #12]	; (801132c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 801131e:	2201      	movs	r2, #1
 8011320:	601a      	str	r2, [r3, #0]
}
 8011322:	bf00      	nop
 8011324:	46bd      	mov	sp, r7
 8011326:	f85d 7b04 	ldr.w	r7, [sp], #4
 801132a:	4770      	bx	lr
 801132c:	20000444 	.word	0x20000444

08011330 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:

/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
 8011330:	b480      	push	{r7}
 8011332:	af00      	add	r7, sp, #0
    fb_sem = 0;
 8011334:	4b03      	ldr	r3, [pc, #12]	; (8011344 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x14>)
 8011336:	2200      	movs	r2, #0
 8011338:	601a      	str	r2, [r3, #0]
}
 801133a:	bf00      	nop
 801133c:	46bd      	mov	sp, r7
 801133e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011342:	4770      	bx	lr
 8011344:	20000444 	.word	0x20000444

08011348 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 *
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
 8011348:	b480      	push	{r7}
 801134a:	af00      	add	r7, sp, #0
    fb_sem = 1;
 801134c:	4b03      	ldr	r3, [pc, #12]	; (801135c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x14>)
 801134e:	2201      	movs	r2, #1
 8011350:	601a      	str	r2, [r3, #0]
}
 8011352:	bf00      	nop
 8011354:	46bd      	mov	sp, r7
 8011356:	f85d 7b04 	ldr.w	r7, [sp], #4
 801135a:	4770      	bx	lr
 801135c:	20000444 	.word	0x20000444

08011360 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
{
 8011360:	b480      	push	{r7}
 8011362:	af00      	add	r7, sp, #0
    fb_sem = 0;
 8011364:	4b03      	ldr	r3, [pc, #12]	; (8011374 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x14>)
 8011366:	2200      	movs	r2, #0
 8011368:	601a      	str	r2, [r3, #0]
}
 801136a:	bf00      	nop
 801136c:	46bd      	mov	sp, r7
 801136e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011372:	4770      	bx	lr
 8011374:	20000444 	.word	0x20000444

08011378 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 *
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
 8011378:	b480      	push	{r7}
 801137a:	af00      	add	r7, sp, #0
    vsync_sem = 1;
 801137c:	4b03      	ldr	r3, [pc, #12]	; (801138c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 801137e:	2201      	movs	r2, #1
 8011380:	601a      	str	r2, [r3, #0]
}
 8011382:	bf00      	nop
 8011384:	46bd      	mov	sp, r7
 8011386:	f85d 7b04 	ldr.w	r7, [sp], #4
 801138a:	4770      	bx	lr
 801138c:	20000448 	.word	0x20000448

08011390 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>:
/*
  * Signal that the rendering of the frame has completed. Used by
  * some systems to avoid using any previous vsync.
  */
void OSWrappers::signalRenderingDone()
{
 8011390:	b480      	push	{r7}
 8011392:	af00      	add	r7, sp, #0
    vsync_sem = 0;
 8011394:	4b03      	ldr	r3, [pc, #12]	; (80113a4 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv+0x14>)
 8011396:	2200      	movs	r2, #0
 8011398:	601a      	str	r2, [r3, #0]
}
 801139a:	bf00      	nop
 801139c:	46bd      	mov	sp, r7
 801139e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80113a2:	4770      	bx	lr
 80113a4:	20000448 	.word	0x20000448

080113a8 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>:
 * @note signalRenderingDone is typically used together with this function.
 *
 * @return True if VSync occurred.
 */
bool OSWrappers::isVSyncAvailable()
{
 80113a8:	b480      	push	{r7}
 80113aa:	af00      	add	r7, sp, #0
    return vsync_sem;
 80113ac:	4b05      	ldr	r3, [pc, #20]	; (80113c4 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv+0x1c>)
 80113ae:	681b      	ldr	r3, [r3, #0]
 80113b0:	2b00      	cmp	r3, #0
 80113b2:	bf14      	ite	ne
 80113b4:	2301      	movne	r3, #1
 80113b6:	2300      	moveq	r3, #0
 80113b8:	b2db      	uxtb	r3, r3
}
 80113ba:	4618      	mov	r0, r3
 80113bc:	46bd      	mov	sp, r7
 80113be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80113c2:	4770      	bx	lr
 80113c4:	20000448 	.word	0x20000448

080113c8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
/*
 * This function check if a VSYNC has occured.
 * If VSYNC has occured, signal TouchGFX to start a rendering
 */
void OSWrappers::waitForVSync()
{
 80113c8:	b580      	push	{r7, lr}
 80113ca:	af00      	add	r7, sp, #0
    if (vsync_sem)
 80113cc:	4b0a      	ldr	r3, [pc, #40]	; (80113f8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 80113ce:	681b      	ldr	r3, [r3, #0]
 80113d0:	2b00      	cmp	r3, #0
 80113d2:	bf14      	ite	ne
 80113d4:	2301      	movne	r3, #1
 80113d6:	2300      	moveq	r3, #0
 80113d8:	b2db      	uxtb	r3, r3
 80113da:	2b00      	cmp	r3, #0
 80113dc:	d00a      	beq.n	80113f4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x2c>
    {
        vsync_sem = 0;
 80113de:	4b06      	ldr	r3, [pc, #24]	; (80113f8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 80113e0:	2200      	movs	r2, #0
 80113e2:	601a      	str	r2, [r3, #0]
        HAL::getInstance()->backPorchExited();
 80113e4:	f7f9 fdc2 	bl	800af6c <_ZN8touchgfx3HAL11getInstanceEv>
 80113e8:	4603      	mov	r3, r0
 80113ea:	681a      	ldr	r2, [r3, #0]
 80113ec:	3270      	adds	r2, #112	; 0x70
 80113ee:	6812      	ldr	r2, [r2, #0]
 80113f0:	4618      	mov	r0, r3
 80113f2:	4790      	blx	r2
    }
}
 80113f4:	bf00      	nop
 80113f6:	bd80      	pop	{r7, pc}
 80113f8:	20000448 	.word	0x20000448

080113fc <_ZN8touchgfx9DMA_QueueD1Ev>:
     * @param  op The blitop to add.
     */
    virtual void pushCopyOf(const BlitOp& op) = 0;

    /** Finalizes an instance of the DMA_Queue class. */
    virtual ~DMA_Queue()
 80113fc:	b480      	push	{r7}
 80113fe:	b083      	sub	sp, #12
 8011400:	af00      	add	r7, sp, #0
 8011402:	6078      	str	r0, [r7, #4]
    {
 8011404:	4a04      	ldr	r2, [pc, #16]	; (8011418 <_ZN8touchgfx9DMA_QueueD1Ev+0x1c>)
 8011406:	687b      	ldr	r3, [r7, #4]
 8011408:	601a      	str	r2, [r3, #0]
    }
 801140a:	687b      	ldr	r3, [r7, #4]
 801140c:	4618      	mov	r0, r3
 801140e:	370c      	adds	r7, #12
 8011410:	46bd      	mov	sp, r7
 8011412:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011416:	4770      	bx	lr
 8011418:	0802ea6c 	.word	0x0802ea6c

0801141c <_ZN8touchgfx9DMA_QueueD0Ev>:
    virtual ~DMA_Queue()
 801141c:	b580      	push	{r7, lr}
 801141e:	b082      	sub	sp, #8
 8011420:	af00      	add	r7, sp, #0
 8011422:	6078      	str	r0, [r7, #4]
    }
 8011424:	6878      	ldr	r0, [r7, #4]
 8011426:	f7ff ffe9 	bl	80113fc <_ZN8touchgfx9DMA_QueueD1Ev>
 801142a:	2104      	movs	r1, #4
 801142c:	6878      	ldr	r0, [r7, #4]
 801142e:	f019 f998 	bl	802a762 <_ZdlPvj>
 8011432:	687b      	ldr	r3, [r7, #4]
 8011434:	4618      	mov	r0, r3
 8011436:	3708      	adds	r7, #8
 8011438:	46bd      	mov	sp, r7
 801143a:	bd80      	pop	{r7, pc}

0801143c <_ZN8touchgfx13DMA_Interface10initializeEv>:
    {
        waitForFrameBufferSemaphore();
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
 801143c:	b480      	push	{r7}
 801143e:	b083      	sub	sp, #12
 8011440:	af00      	add	r7, sp, #0
 8011442:	6078      	str	r0, [r7, #4]
    {
    }
 8011444:	bf00      	nop
 8011446:	370c      	adds	r7, #12
 8011448:	46bd      	mov	sp, r7
 801144a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801144e:	4770      	bx	lr

08011450 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * Function for obtaining the DMA type of the concrete DMA_Interface implementation. As
     * default, will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
 8011450:	b480      	push	{r7}
 8011452:	b083      	sub	sp, #12
 8011454:	af00      	add	r7, sp, #0
 8011456:	6078      	str	r0, [r7, #4]
    {
        return DMA_TYPE_GENERIC;
 8011458:	2300      	movs	r3, #0
    }
 801145a:	4618      	mov	r0, r3
 801145c:	370c      	adds	r7, #12
 801145e:	46bd      	mov	sp, r7
 8011460:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011464:	4770      	bx	lr
	...

08011468 <_ZN8touchgfx13DMA_InterfaceD1Ev>:

    /** Finalizes an instance of the DMA_Interface class. */
    virtual ~DMA_Interface()
 8011468:	b480      	push	{r7}
 801146a:	b083      	sub	sp, #12
 801146c:	af00      	add	r7, sp, #0
 801146e:	6078      	str	r0, [r7, #4]
    {
 8011470:	4a04      	ldr	r2, [pc, #16]	; (8011484 <_ZN8touchgfx13DMA_InterfaceD1Ev+0x1c>)
 8011472:	687b      	ldr	r3, [r7, #4]
 8011474:	601a      	str	r2, [r3, #0]
    }
 8011476:	687b      	ldr	r3, [r7, #4]
 8011478:	4618      	mov	r0, r3
 801147a:	370c      	adds	r7, #12
 801147c:	46bd      	mov	sp, r7
 801147e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011482:	4770      	bx	lr
 8011484:	0802f0c0 	.word	0x0802f0c0

08011488 <_ZN8touchgfx13DMA_InterfaceD0Ev>:
    virtual ~DMA_Interface()
 8011488:	b580      	push	{r7, lr}
 801148a:	b082      	sub	sp, #8
 801148c:	af00      	add	r7, sp, #0
 801148e:	6078      	str	r0, [r7, #4]
    }
 8011490:	6878      	ldr	r0, [r7, #4]
 8011492:	f7ff ffe9 	bl	8011468 <_ZN8touchgfx13DMA_InterfaceD1Ev>
 8011496:	210c      	movs	r1, #12
 8011498:	6878      	ldr	r0, [r7, #4]
 801149a:	f019 f962 	bl	802a762 <_ZdlPvj>
 801149e:	687b      	ldr	r3, [r7, #4]
 80114a0:	4618      	mov	r0, r3
 80114a2:	3708      	adds	r7, #8
 80114a4:	46bd      	mov	sp, r7
 80114a6:	bd80      	pop	{r7, pc}

080114a8 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>:
    /**
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
 80114a8:	b480      	push	{r7}
 80114aa:	b083      	sub	sp, #12
 80114ac:	af00      	add	r7, sp, #0
 80114ae:	6078      	str	r0, [r7, #4]
 80114b0:	6039      	str	r1, [r7, #0]
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 80114b2:	4a09      	ldr	r2, [pc, #36]	; (80114d8 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE+0x30>)
 80114b4:	687b      	ldr	r3, [r7, #4]
 80114b6:	601a      	str	r2, [r3, #0]
 80114b8:	687b      	ldr	r3, [r7, #4]
 80114ba:	683a      	ldr	r2, [r7, #0]
 80114bc:	605a      	str	r2, [r3, #4]
 80114be:	687b      	ldr	r3, [r7, #4]
 80114c0:	2200      	movs	r2, #0
 80114c2:	721a      	strb	r2, [r3, #8]
 80114c4:	687b      	ldr	r3, [r7, #4]
 80114c6:	2200      	movs	r2, #0
 80114c8:	725a      	strb	r2, [r3, #9]
    {
    }
 80114ca:	687b      	ldr	r3, [r7, #4]
 80114cc:	4618      	mov	r0, r3
 80114ce:	370c      	adds	r7, #12
 80114d0:	46bd      	mov	sp, r7
 80114d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80114d6:	4770      	bx	lr
 80114d8:	0802f0c0 	.word	0x0802f0c0

080114dc <_ZN8STM32DMA18signalDMAInterruptEv>:
    /**
     * @fn virtual void STM32DMA::signalDMAInterrupt();
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
 80114dc:	b480      	push	{r7}
 80114de:	b083      	sub	sp, #12
 80114e0:	af00      	add	r7, sp, #0
 80114e2:	6078      	str	r0, [r7, #4]
    {
    }
 80114e4:	bf00      	nop
 80114e6:	370c      	adds	r7, #12
 80114e8:	46bd      	mov	sp, r7
 80114ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80114ee:	4770      	bx	lr

080114f0 <_ZN8STM32DMA5flushEv>:
     * @fn virtual void STM32DMA::flush();
     *
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
 80114f0:	b480      	push	{r7}
 80114f2:	b083      	sub	sp, #12
 80114f4:	af00      	add	r7, sp, #0
 80114f6:	6078      	str	r0, [r7, #4]
    {
    }
 80114f8:	bf00      	nop
 80114fa:	370c      	adds	r7, #12
 80114fc:	46bd      	mov	sp, r7
 80114fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011502:	4770      	bx	lr

08011504 <_ZN8touchgfx6BlitOpC1Ev>:

/**
 * BlitOp instances carry the required information for performing operations on the LCD
 * (framebuffer) using DMA.
 */
struct BlitOp
 8011504:	b580      	push	{r7, lr}
 8011506:	b082      	sub	sp, #8
 8011508:	af00      	add	r7, sp, #0
 801150a:	6078      	str	r0, [r7, #4]
 801150c:	687b      	ldr	r3, [r7, #4]
 801150e:	330c      	adds	r3, #12
 8011510:	4618      	mov	r0, r3
 8011512:	f7fc f8f3 	bl	800d6fc <_ZN8touchgfx9colortypeC1Ev>
 8011516:	687b      	ldr	r3, [r7, #4]
 8011518:	4618      	mov	r0, r3
 801151a:	3708      	adds	r7, #8
 801151c:	46bd      	mov	sp, r7
 801151e:	bd80      	pop	{r7, pc}

08011520 <_ZN8STM32DMAC1Ev>:
  */

#include <STM32DMA.hpp>
#include <assert.h>

STM32DMA::STM32DMA()
 8011520:	b580      	push	{r7, lr}
 8011522:	b082      	sub	sp, #8
 8011524:	af00      	add	r7, sp, #0
 8011526:	6078      	str	r0, [r7, #4]
    : DMA_Interface(q), q(&b, 1)
 8011528:	687a      	ldr	r2, [r7, #4]
 801152a:	687b      	ldr	r3, [r7, #4]
 801152c:	330c      	adds	r3, #12
 801152e:	4619      	mov	r1, r3
 8011530:	4610      	mov	r0, r2
 8011532:	f7ff ffb9 	bl	80114a8 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>
 8011536:	4a0b      	ldr	r2, [pc, #44]	; (8011564 <_ZN8STM32DMAC1Ev+0x44>)
 8011538:	687b      	ldr	r3, [r7, #4]
 801153a:	601a      	str	r2, [r3, #0]
 801153c:	687b      	ldr	r3, [r7, #4]
 801153e:	f103 000c 	add.w	r0, r3, #12
 8011542:	687b      	ldr	r3, [r7, #4]
 8011544:	3320      	adds	r3, #32
 8011546:	2201      	movs	r2, #1
 8011548:	4619      	mov	r1, r3
 801154a:	f002 feb9 	bl	80142c0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 801154e:	687b      	ldr	r3, [r7, #4]
 8011550:	3320      	adds	r3, #32
 8011552:	4618      	mov	r0, r3
 8011554:	f7ff ffd6 	bl	8011504 <_ZN8touchgfx6BlitOpC1Ev>
{
}
 8011558:	687b      	ldr	r3, [r7, #4]
 801155a:	4618      	mov	r0, r3
 801155c:	3708      	adds	r7, #8
 801155e:	46bd      	mov	sp, r7
 8011560:	bd80      	pop	{r7, pc}
 8011562:	bf00      	nop
 8011564:	0802ea1c 	.word	0x0802ea1c

08011568 <_ZN8STM32DMA11getBlitCapsEv>:

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
 8011568:	b480      	push	{r7}
 801156a:	b083      	sub	sp, #12
 801156c:	af00      	add	r7, sp, #0
 801156e:	6078      	str	r0, [r7, #4]
    return static_cast<touchgfx::BlitOperations>(0);
 8011570:	2300      	movs	r3, #0
}
 8011572:	4618      	mov	r0, r3
 8011574:	370c      	adds	r7, #12
 8011576:	46bd      	mov	sp, r7
 8011578:	f85d 7b04 	ldr.w	r7, [sp], #4
 801157c:	4770      	bx	lr
	...

08011580 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 8011580:	b580      	push	{r7, lr}
 8011582:	b082      	sub	sp, #8
 8011584:	af00      	add	r7, sp, #0
 8011586:	6078      	str	r0, [r7, #4]
 8011588:	6039      	str	r1, [r7, #0]
    assert(0 && "DMA operation not supported");
 801158a:	4b03      	ldr	r3, [pc, #12]	; (8011598 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 801158c:	4a03      	ldr	r2, [pc, #12]	; (801159c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c>)
 801158e:	2122      	movs	r1, #34	; 0x22
 8011590:	4803      	ldr	r0, [pc, #12]	; (80115a0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>)
 8011592:	f019 fed7 	bl	802b344 <__assert_func>
 8011596:	bf00      	nop
 8011598:	0802d580 	.word	0x0802d580
 801159c:	0802d5a4 	.word	0x0802d5a4
 80115a0:	0802d5e4 	.word	0x0802d5e4

080115a4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 80115a4:	b580      	push	{r7, lr}
 80115a6:	b082      	sub	sp, #8
 80115a8:	af00      	add	r7, sp, #0
 80115aa:	6078      	str	r0, [r7, #4]
 80115ac:	6039      	str	r1, [r7, #0]
    assert(0 && "DMA operation not supported");
 80115ae:	4b03      	ldr	r3, [pc, #12]	; (80115bc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 80115b0:	4a03      	ldr	r2, [pc, #12]	; (80115c0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1c>)
 80115b2:	2127      	movs	r1, #39	; 0x27
 80115b4:	4803      	ldr	r0, [pc, #12]	; (80115c4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x20>)
 80115b6:	f019 fec5 	bl	802b344 <__assert_func>
 80115ba:	bf00      	nop
 80115bc:	0802d580 	.word	0x0802d580
 80115c0:	0802d610 	.word	0x0802d610
 80115c4:	0802d5e4 	.word	0x0802d5e4

080115c8 <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 80115c8:	b580      	push	{r7, lr}
 80115ca:	b082      	sub	sp, #8
 80115cc:	af00      	add	r7, sp, #0
 80115ce:	6078      	str	r0, [r7, #4]
 80115d0:	4a08      	ldr	r2, [pc, #32]	; (80115f4 <_ZN8STM32DMAD1Ev+0x2c>)
 80115d2:	687b      	ldr	r3, [r7, #4]
 80115d4:	601a      	str	r2, [r3, #0]
 80115d6:	687b      	ldr	r3, [r7, #4]
 80115d8:	330c      	adds	r3, #12
 80115da:	4618      	mov	r0, r3
 80115dc:	f000 f81c 	bl	8011618 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 80115e0:	687b      	ldr	r3, [r7, #4]
 80115e2:	4618      	mov	r0, r3
 80115e4:	f7ff ff40 	bl	8011468 <_ZN8touchgfx13DMA_InterfaceD1Ev>
 80115e8:	687b      	ldr	r3, [r7, #4]
 80115ea:	4618      	mov	r0, r3
 80115ec:	3708      	adds	r7, #8
 80115ee:	46bd      	mov	sp, r7
 80115f0:	bd80      	pop	{r7, pc}
 80115f2:	bf00      	nop
 80115f4:	0802ea1c 	.word	0x0802ea1c

080115f8 <_ZN8STM32DMAD0Ev>:
 80115f8:	b580      	push	{r7, lr}
 80115fa:	b082      	sub	sp, #8
 80115fc:	af00      	add	r7, sp, #0
 80115fe:	6078      	str	r0, [r7, #4]
 8011600:	6878      	ldr	r0, [r7, #4]
 8011602:	f7ff ffe1 	bl	80115c8 <_ZN8STM32DMAD1Ev>
 8011606:	2144      	movs	r1, #68	; 0x44
 8011608:	6878      	ldr	r0, [r7, #4]
 801160a:	f019 f8aa 	bl	802a762 <_ZdlPvj>
 801160e:	687b      	ldr	r3, [r7, #4]
 8011610:	4618      	mov	r0, r3
 8011612:	3708      	adds	r7, #8
 8011614:	46bd      	mov	sp, r7
 8011616:	bd80      	pop	{r7, pc}

08011618 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
class LockFreeDMA_Queue : public DMA_Queue
 8011618:	b580      	push	{r7, lr}
 801161a:	b082      	sub	sp, #8
 801161c:	af00      	add	r7, sp, #0
 801161e:	6078      	str	r0, [r7, #4]
 8011620:	4a05      	ldr	r2, [pc, #20]	; (8011638 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev+0x20>)
 8011622:	687b      	ldr	r3, [r7, #4]
 8011624:	601a      	str	r2, [r3, #0]
 8011626:	687b      	ldr	r3, [r7, #4]
 8011628:	4618      	mov	r0, r3
 801162a:	f7ff fee7 	bl	80113fc <_ZN8touchgfx9DMA_QueueD1Ev>
 801162e:	687b      	ldr	r3, [r7, #4]
 8011630:	4618      	mov	r0, r3
 8011632:	3708      	adds	r7, #8
 8011634:	46bd      	mov	sp, r7
 8011636:	bd80      	pop	{r7, pc}
 8011638:	0802f110 	.word	0x0802f110

0801163c <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 801163c:	b580      	push	{r7, lr}
 801163e:	b082      	sub	sp, #8
 8011640:	af00      	add	r7, sp, #0
 8011642:	6078      	str	r0, [r7, #4]
 8011644:	6878      	ldr	r0, [r7, #4]
 8011646:	f7ff ffe7 	bl	8011618 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 801164a:	2114      	movs	r1, #20
 801164c:	6878      	ldr	r0, [r7, #4]
 801164e:	f019 f888 	bl	802a762 <_ZdlPvj>
 8011652:	687b      	ldr	r3, [r7, #4]
 8011654:	4618      	mov	r0, r3
 8011656:	3708      	adds	r7, #8
 8011658:	46bd      	mov	sp, r7
 801165a:	bd80      	pop	{r7, pc}

0801165c <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>:
     * Registers an array of texts. This function is called automatically from
     * touchgfx_generic_init(). Should not be called under normal circumstances.
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
 801165c:	b480      	push	{r7}
 801165e:	b083      	sub	sp, #12
 8011660:	af00      	add	r7, sp, #0
 8011662:	6078      	str	r0, [r7, #4]
    {
        texts = t;
 8011664:	4a04      	ldr	r2, [pc, #16]	; (8011678 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE+0x1c>)
 8011666:	687b      	ldr	r3, [r7, #4]
 8011668:	6013      	str	r3, [r2, #0]
    }
 801166a:	bf00      	nop
 801166c:	370c      	adds	r7, #12
 801166e:	46bd      	mov	sp, r7
 8011670:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011674:	4770      	bx	lr
 8011676:	bf00      	nop
 8011678:	200022b0 	.word	0x200022b0

0801167c <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>:
     * @param [in] scr  A memory partition containing enough memory to hold the largest view.
     * @param [in] tra  A memory partition containing enough memory to hold the largest
     *                  transition.
     * @param [in] app  A reference to the MVPApplication instance.
     */
    MVPHeap(AbstractPartition& pres,
 801167c:	b480      	push	{r7}
 801167e:	b085      	sub	sp, #20
 8011680:	af00      	add	r7, sp, #0
 8011682:	60f8      	str	r0, [r7, #12]
 8011684:	60b9      	str	r1, [r7, #8]
 8011686:	607a      	str	r2, [r7, #4]
 8011688:	603b      	str	r3, [r7, #0]
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 801168a:	4a0b      	ldr	r2, [pc, #44]	; (80116b8 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE+0x3c>)
 801168c:	68fb      	ldr	r3, [r7, #12]
 801168e:	601a      	str	r2, [r3, #0]
        : presenterStorage(pres),
 8011690:	68fb      	ldr	r3, [r7, #12]
 8011692:	68ba      	ldr	r2, [r7, #8]
 8011694:	605a      	str	r2, [r3, #4]
          screenStorage(scr),
 8011696:	68fb      	ldr	r3, [r7, #12]
 8011698:	687a      	ldr	r2, [r7, #4]
 801169a:	609a      	str	r2, [r3, #8]
          transitionStorage(tra),
 801169c:	68fb      	ldr	r3, [r7, #12]
 801169e:	683a      	ldr	r2, [r7, #0]
 80116a0:	60da      	str	r2, [r3, #12]
          frontendApplication(app)
 80116a2:	68fb      	ldr	r3, [r7, #12]
 80116a4:	69ba      	ldr	r2, [r7, #24]
 80116a6:	611a      	str	r2, [r3, #16]
    {
    }
 80116a8:	68fb      	ldr	r3, [r7, #12]
 80116aa:	4618      	mov	r0, r3
 80116ac:	3714      	adds	r7, #20
 80116ae:	46bd      	mov	sp, r7
 80116b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80116b4:	4770      	bx	lr
 80116b6:	bf00      	nop
 80116b8:	0802eb54 	.word	0x0802eb54

080116bc <_ZN8touchgfx7MVPHeapD1Ev>:

    /** Finalizes an instance of the MVPHeap class. */
    virtual ~MVPHeap()
 80116bc:	b480      	push	{r7}
 80116be:	b083      	sub	sp, #12
 80116c0:	af00      	add	r7, sp, #0
 80116c2:	6078      	str	r0, [r7, #4]
    {
 80116c4:	4a04      	ldr	r2, [pc, #16]	; (80116d8 <_ZN8touchgfx7MVPHeapD1Ev+0x1c>)
 80116c6:	687b      	ldr	r3, [r7, #4]
 80116c8:	601a      	str	r2, [r3, #0]
    }
 80116ca:	687b      	ldr	r3, [r7, #4]
 80116cc:	4618      	mov	r0, r3
 80116ce:	370c      	adds	r7, #12
 80116d0:	46bd      	mov	sp, r7
 80116d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80116d6:	4770      	bx	lr
 80116d8:	0802eb54 	.word	0x0802eb54

080116dc <_ZN8touchgfx7MVPHeapD0Ev>:
    virtual ~MVPHeap()
 80116dc:	b580      	push	{r7, lr}
 80116de:	b082      	sub	sp, #8
 80116e0:	af00      	add	r7, sp, #0
 80116e2:	6078      	str	r0, [r7, #4]
    }
 80116e4:	6878      	ldr	r0, [r7, #4]
 80116e6:	f7ff ffe9 	bl	80116bc <_ZN8touchgfx7MVPHeapD1Ev>
 80116ea:	2114      	movs	r1, #20
 80116ec:	6878      	ldr	r0, [r7, #4]
 80116ee:	f019 f838 	bl	802a762 <_ZdlPvj>
 80116f2:	687b      	ldr	r3, [r7, #4]
 80116f4:	4618      	mov	r0, r3
 80116f6:	3708      	adds	r7, #8
 80116f8:	46bd      	mov	sp, r7
 80116fa:	bd80      	pop	{r7, pc}

080116fc <_ZN8touchgfx3LCDD1Ev>:
        : textureMapperClass(0)
    {
    }

    /** Finalizes an instance of the LCD class. */
    virtual ~LCD()
 80116fc:	b480      	push	{r7}
 80116fe:	b083      	sub	sp, #12
 8011700:	af00      	add	r7, sp, #0
 8011702:	6078      	str	r0, [r7, #4]
    {
 8011704:	4a04      	ldr	r2, [pc, #16]	; (8011718 <_ZN8touchgfx3LCDD1Ev+0x1c>)
 8011706:	687b      	ldr	r3, [r7, #4]
 8011708:	601a      	str	r2, [r3, #0]
    }
 801170a:	687b      	ldr	r3, [r7, #4]
 801170c:	4618      	mov	r0, r3
 801170e:	370c      	adds	r7, #12
 8011710:	46bd      	mov	sp, r7
 8011712:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011716:	4770      	bx	lr
 8011718:	0802f910 	.word	0x0802f910

0801171c <_ZN8touchgfx3LCDD0Ev>:
    virtual ~LCD()
 801171c:	b580      	push	{r7, lr}
 801171e:	b082      	sub	sp, #8
 8011720:	af00      	add	r7, sp, #0
 8011722:	6078      	str	r0, [r7, #4]
    }
 8011724:	6878      	ldr	r0, [r7, #4]
 8011726:	f7ff ffe9 	bl	80116fc <_ZN8touchgfx3LCDD1Ev>
 801172a:	2108      	movs	r1, #8
 801172c:	6878      	ldr	r0, [r7, #4]
 801172e:	f019 f818 	bl	802a762 <_ZdlPvj>
 8011732:	687b      	ldr	r3, [r7, #4]
 8011734:	4618      	mov	r0, r3
 8011736:	3708      	adds	r7, #8
 8011738:	46bd      	mov	sp, r7
 801173a:	bd80      	pop	{r7, pc}

0801173c <_ZN8touchgfx8Gestures9DragStateC1Ev>:
    static const uint8_t MIN_VELOCITY_AT_RELEASE_BEFORE_SWIPE = 3;

    /** Defines the state of a drag. */
    struct DragState
    {
        DragState()
 801173c:	b480      	push	{r7}
 801173e:	b083      	sub	sp, #12
 8011740:	af00      	add	r7, sp, #0
 8011742:	6078      	str	r0, [r7, #4]
            : startX(0),
 8011744:	687b      	ldr	r3, [r7, #4]
 8011746:	2200      	movs	r2, #0
 8011748:	801a      	strh	r2, [r3, #0]
              startY(0),
 801174a:	687b      	ldr	r3, [r7, #4]
 801174c:	2200      	movs	r2, #0
 801174e:	805a      	strh	r2, [r3, #2]
              downX(0),
 8011750:	687b      	ldr	r3, [r7, #4]
 8011752:	2200      	movs	r2, #0
 8011754:	809a      	strh	r2, [r3, #4]
              downY(0),
 8011756:	687b      	ldr	r3, [r7, #4]
 8011758:	2200      	movs	r2, #0
 801175a:	80da      	strh	r2, [r3, #6]
              tickCount(0),
 801175c:	687b      	ldr	r3, [r7, #4]
 801175e:	2200      	movs	r2, #0
 8011760:	811a      	strh	r2, [r3, #8]
              velocityX(0),
 8011762:	687b      	ldr	r3, [r7, #4]
 8011764:	2200      	movs	r2, #0
 8011766:	815a      	strh	r2, [r3, #10]
              velocityY(0),
 8011768:	687b      	ldr	r3, [r7, #4]
 801176a:	2200      	movs	r2, #0
 801176c:	819a      	strh	r2, [r3, #12]
              inProgress(false)
 801176e:	687b      	ldr	r3, [r7, #4]
 8011770:	2200      	movs	r2, #0
 8011772:	739a      	strb	r2, [r3, #14]
        {
        }
 8011774:	687b      	ldr	r3, [r7, #4]
 8011776:	4618      	mov	r0, r3
 8011778:	370c      	adds	r7, #12
 801177a:	46bd      	mov	sp, r7
 801177c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011780:	4770      	bx	lr

08011782 <_ZN8touchgfx8GesturesC1Ev>:
        bool inProgress;    ///< Whether a drag is in progress or not
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
 8011782:	b580      	push	{r7, lr}
 8011784:	b082      	sub	sp, #8
 8011786:	af00      	add	r7, sp, #0
 8011788:	6078      	str	r0, [r7, #4]
        : drag(), listener(0), dragThresholdValue(0)
 801178a:	687b      	ldr	r3, [r7, #4]
 801178c:	4618      	mov	r0, r3
 801178e:	f7ff ffd5 	bl	801173c <_ZN8touchgfx8Gestures9DragStateC1Ev>
 8011792:	687b      	ldr	r3, [r7, #4]
 8011794:	2200      	movs	r2, #0
 8011796:	611a      	str	r2, [r3, #16]
 8011798:	687b      	ldr	r3, [r7, #4]
 801179a:	2200      	movs	r2, #0
 801179c:	829a      	strh	r2, [r3, #20]
    {
    }
 801179e:	687b      	ldr	r3, [r7, #4]
 80117a0:	4618      	mov	r0, r3
 80117a2:	3708      	adds	r7, #8
 80117a4:	46bd      	mov	sp, r7
 80117a6:	bd80      	pop	{r7, pc}

080117a8 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>:
    HAL(DMA_Interface& dmaInterface, LCD& display, TouchController& touchCtrl, uint16_t width, uint16_t height)
 80117a8:	b580      	push	{r7, lr}
 80117aa:	b084      	sub	sp, #16
 80117ac:	af00      	add	r7, sp, #0
 80117ae:	60f8      	str	r0, [r7, #12]
 80117b0:	60b9      	str	r1, [r7, #8]
 80117b2:	607a      	str	r2, [r7, #4]
 80117b4:	603b      	str	r3, [r7, #0]
          lastRenderMethod(HARDWARE)
 80117b6:	4a55      	ldr	r2, [pc, #340]	; (801190c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x164>)
 80117b8:	68fb      	ldr	r3, [r7, #12]
 80117ba:	601a      	str	r2, [r3, #0]
        : dma(dmaInterface),
 80117bc:	68fb      	ldr	r3, [r7, #12]
 80117be:	68ba      	ldr	r2, [r7, #8]
 80117c0:	605a      	str	r2, [r3, #4]
          lcdRef(display),
 80117c2:	68fb      	ldr	r3, [r7, #12]
 80117c4:	687a      	ldr	r2, [r7, #4]
 80117c6:	609a      	str	r2, [r3, #8]
          touchController(touchCtrl),
 80117c8:	68fb      	ldr	r3, [r7, #12]
 80117ca:	683a      	ldr	r2, [r7, #0]
 80117cc:	60da      	str	r2, [r3, #12]
          mcuInstrumentation(0),
 80117ce:	68fb      	ldr	r3, [r7, #12]
 80117d0:	2200      	movs	r2, #0
 80117d2:	611a      	str	r2, [r3, #16]
          buttonController(0),
 80117d4:	68fb      	ldr	r3, [r7, #12]
 80117d6:	2200      	movs	r2, #0
 80117d8:	615a      	str	r2, [r3, #20]
          frameBufferAllocator(0),
 80117da:	68fb      	ldr	r3, [r7, #12]
 80117dc:	2200      	movs	r2, #0
 80117de:	619a      	str	r2, [r3, #24]
          gestures(),
 80117e0:	68fb      	ldr	r3, [r7, #12]
 80117e2:	331c      	adds	r3, #28
 80117e4:	4618      	mov	r0, r3
 80117e6:	f7ff ffcc 	bl	8011782 <_ZN8touchgfx8GesturesC1Ev>
          nativeDisplayOrientation(ORIENTATION_LANDSCAPE),
 80117ea:	68fb      	ldr	r3, [r7, #12]
 80117ec:	2200      	movs	r2, #0
 80117ee:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
          taskDelayFunc(0),
 80117f2:	68fb      	ldr	r3, [r7, #12]
 80117f4:	2200      	movs	r2, #0
 80117f6:	639a      	str	r2, [r3, #56]	; 0x38
          frameBuffer0(0),
 80117f8:	68fb      	ldr	r3, [r7, #12]
 80117fa:	2200      	movs	r2, #0
 80117fc:	63da      	str	r2, [r3, #60]	; 0x3c
          frameBuffer1(0),
 80117fe:	68fb      	ldr	r3, [r7, #12]
 8011800:	2200      	movs	r2, #0
 8011802:	641a      	str	r2, [r3, #64]	; 0x40
          frameBuffer2(0),
 8011804:	68fb      	ldr	r3, [r7, #12]
 8011806:	2200      	movs	r2, #0
 8011808:	645a      	str	r2, [r3, #68]	; 0x44
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 801180a:	68fb      	ldr	r3, [r7, #12]
 801180c:	2200      	movs	r2, #0
 801180e:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
          fingerSize(1),
 8011812:	68fb      	ldr	r3, [r7, #12]
 8011814:	2201      	movs	r2, #1
 8011816:	f883 2049 	strb.w	r2, [r3, #73]	; 0x49
          lockDMAToPorch(false),
 801181a:	68fb      	ldr	r3, [r7, #12]
 801181c:	2200      	movs	r2, #0
 801181e:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
          frameBufferUpdatedThisFrame(false),
 8011822:	68fb      	ldr	r3, [r7, #12]
 8011824:	2200      	movs	r2, #0
 8011826:	f883 204b 	strb.w	r2, [r3, #75]	; 0x4b
          auxiliaryLCD(0),
 801182a:	68fb      	ldr	r3, [r7, #12]
 801182c:	2200      	movs	r2, #0
 801182e:	64da      	str	r2, [r3, #76]	; 0x4c
          partialFrameBufferRect(),
 8011830:	68fb      	ldr	r3, [r7, #12]
 8011832:	3350      	adds	r3, #80	; 0x50
 8011834:	4618      	mov	r0, r3
 8011836:	f7f8 f9e4 	bl	8009c02 <_ZN8touchgfx4RectC1Ev>
          useAuxiliaryLCD(false),
 801183a:	68fb      	ldr	r3, [r7, #12]
 801183c:	2200      	movs	r2, #0
 801183e:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
          listener(0),
 8011842:	68fb      	ldr	r3, [r7, #12]
 8011844:	2200      	movs	r2, #0
 8011846:	65da      	str	r2, [r3, #92]	; 0x5c
          lastX(0),
 8011848:	68fb      	ldr	r3, [r7, #12]
 801184a:	2200      	movs	r2, #0
 801184c:	661a      	str	r2, [r3, #96]	; 0x60
          lastY(0),
 801184e:	68fb      	ldr	r3, [r7, #12]
 8011850:	2200      	movs	r2, #0
 8011852:	665a      	str	r2, [r3, #100]	; 0x64
          touchSampleRate(1),
 8011854:	68fb      	ldr	r3, [r7, #12]
 8011856:	2201      	movs	r2, #1
 8011858:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
          mcuLoadPct(0),
 801185c:	68fb      	ldr	r3, [r7, #12]
 801185e:	2200      	movs	r2, #0
 8011860:	f883 2069 	strb.w	r2, [r3, #105]	; 0x69
          vSyncCnt(0),
 8011864:	68fb      	ldr	r3, [r7, #12]
 8011866:	2200      	movs	r2, #0
 8011868:	f883 206a 	strb.w	r2, [r3, #106]	; 0x6a
          vSyncForFrame(1),
 801186c:	68fb      	ldr	r3, [r7, #12]
 801186e:	2201      	movs	r2, #1
 8011870:	f883 206b 	strb.w	r2, [r3, #107]	; 0x6b
          vSyncCompensationEnabled(false),
 8011874:	68fb      	ldr	r3, [r7, #12]
 8011876:	2200      	movs	r2, #0
 8011878:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
          clientDirty(false),
 801187c:	68fb      	ldr	r3, [r7, #12]
 801187e:	2200      	movs	r2, #0
 8011880:	f883 206d 	strb.w	r2, [r3, #109]	; 0x6d
          swapRequested(false),
 8011884:	68fb      	ldr	r3, [r7, #12]
 8011886:	2200      	movs	r2, #0
 8011888:	f883 206e 	strb.w	r2, [r3, #110]	; 0x6e
          lastTouched(false),
 801188c:	68fb      	ldr	r3, [r7, #12]
 801188e:	2200      	movs	r2, #0
 8011890:	f883 206f 	strb.w	r2, [r3, #111]	; 0x6f
          updateMCULoad(0),
 8011894:	68fb      	ldr	r3, [r7, #12]
 8011896:	2200      	movs	r2, #0
 8011898:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
          cc_begin(0),
 801189c:	68fb      	ldr	r3, [r7, #12]
 801189e:	2200      	movs	r2, #0
 80118a0:	675a      	str	r2, [r3, #116]	; 0x74
          requestedOrientation(ORIENTATION_LANDSCAPE),
 80118a2:	68fb      	ldr	r3, [r7, #12]
 80118a4:	2200      	movs	r2, #0
 80118a6:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
          displayOrientationChangeRequested(false),
 80118aa:	68fb      	ldr	r3, [r7, #12]
 80118ac:	2200      	movs	r2, #0
 80118ae:	f883 2079 	strb.w	r2, [r3, #121]	; 0x79
          useDMAAcceleration(true),
 80118b2:	68fb      	ldr	r3, [r7, #12]
 80118b4:	2201      	movs	r2, #1
 80118b6:	f883 207a 	strb.w	r2, [r3, #122]	; 0x7a
          lastRenderMethod(HARDWARE)
 80118ba:	68fb      	ldr	r3, [r7, #12]
 80118bc:	2201      	movs	r2, #1
 80118be:	f883 207b 	strb.w	r2, [r3, #123]	; 0x7b
        instance = this;
 80118c2:	4a13      	ldr	r2, [pc, #76]	; (8011910 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x168>)
 80118c4:	68fb      	ldr	r3, [r7, #12]
 80118c6:	6013      	str	r3, [r2, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80118c8:	4a12      	ldr	r2, [pc, #72]	; (8011914 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 80118ca:	8b3b      	ldrh	r3, [r7, #24]
 80118cc:	8013      	strh	r3, [r2, #0]
 80118ce:	4b11      	ldr	r3, [pc, #68]	; (8011914 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 80118d0:	881a      	ldrh	r2, [r3, #0]
 80118d2:	4b11      	ldr	r3, [pc, #68]	; (8011918 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x170>)
 80118d4:	801a      	strh	r2, [r3, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80118d6:	4a11      	ldr	r2, [pc, #68]	; (801191c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 80118d8:	8bbb      	ldrh	r3, [r7, #28]
 80118da:	8013      	strh	r3, [r2, #0]
 80118dc:	4b0f      	ldr	r3, [pc, #60]	; (801191c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 80118de:	881a      	ldrh	r2, [r3, #0]
 80118e0:	4b0f      	ldr	r3, [pc, #60]	; (8011920 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x178>)
 80118e2:	801a      	strh	r2, [r3, #0]
        DISPLAY_ROTATION = rotate0;
 80118e4:	4b0f      	ldr	r3, [pc, #60]	; (8011924 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x17c>)
 80118e6:	2200      	movs	r2, #0
 80118e8:	701a      	strb	r2, [r3, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 80118ea:	8b3a      	ldrh	r2, [r7, #24]
 80118ec:	8bbb      	ldrh	r3, [r7, #28]
 80118ee:	429a      	cmp	r2, r3
 80118f0:	bf34      	ite	cc
 80118f2:	2301      	movcc	r3, #1
 80118f4:	2300      	movcs	r3, #0
 80118f6:	b2db      	uxtb	r3, r3
 80118f8:	461a      	mov	r2, r3
 80118fa:	68fb      	ldr	r3, [r7, #12]
 80118fc:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    }
 8011900:	68fb      	ldr	r3, [r7, #12]
 8011902:	4618      	mov	r0, r3
 8011904:	3710      	adds	r7, #16
 8011906:	46bd      	mov	sp, r7
 8011908:	bd80      	pop	{r7, pc}
 801190a:	bf00      	nop
 801190c:	0802efe8 	.word	0x0802efe8
 8011910:	2000224c 	.word	0x2000224c
 8011914:	20002240 	.word	0x20002240
 8011918:	20002246 	.word	0x20002246
 801191c:	20002242 	.word	0x20002242
 8011920:	20002248 	.word	0x20002248
 8011924:	20002244 	.word	0x20002244

08011928 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
 8011928:	b580      	push	{r7, lr}
 801192a:	b082      	sub	sp, #8
 801192c:	af00      	add	r7, sp, #0
 801192e:	6078      	str	r0, [r7, #4]
 8011930:	6039      	str	r1, [r7, #0]
    {
        app.gotoPressureScreenScreenNoTransition();
 8011932:	683b      	ldr	r3, [r7, #0]
 8011934:	4618      	mov	r0, r3
 8011936:	f7f9 fde7 	bl	800b508 <_ZN23FrontendApplicationBase36gotoPressureScreenScreenNoTransitionEv>
    }
 801193a:	bf00      	nop
 801193c:	3708      	adds	r7, #8
 801193e:	46bd      	mov	sp, r7
 8011940:	bd80      	pop	{r7, pc}
	...

08011944 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>:
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
 8011944:	b580      	push	{r7, lr}
 8011946:	b086      	sub	sp, #24
 8011948:	af02      	add	r7, sp, #8
 801194a:	60f8      	str	r0, [r7, #12]
 801194c:	60b9      	str	r1, [r7, #8]
 801194e:	607a      	str	r2, [r7, #4]
 8011950:	603b      	str	r3, [r7, #0]
        : MVPHeap(presenters, views, transitions, app)
 8011952:	68f8      	ldr	r0, [r7, #12]
 8011954:	69bb      	ldr	r3, [r7, #24]
 8011956:	9300      	str	r3, [sp, #0]
 8011958:	683b      	ldr	r3, [r7, #0]
 801195a:	687a      	ldr	r2, [r7, #4]
 801195c:	68b9      	ldr	r1, [r7, #8]
 801195e:	f7ff fe8d 	bl	801167c <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>
 8011962:	4a04      	ldr	r2, [pc, #16]	; (8011974 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication+0x30>)
 8011964:	68fb      	ldr	r3, [r7, #12]
 8011966:	601a      	str	r2, [r3, #0]
    {

    }
 8011968:	68fb      	ldr	r3, [r7, #12]
 801196a:	4618      	mov	r0, r3
 801196c:	3710      	adds	r7, #16
 801196e:	46bd      	mov	sp, r7
 8011970:	bd80      	pop	{r7, pc}
 8011972:	bf00      	nop
 8011974:	0802eb40 	.word	0x0802eb40

08011978 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8011978:	b580      	push	{r7, lr}
 801197a:	af00      	add	r7, sp, #0
 801197c:	4801      	ldr	r0, [pc, #4]	; (8011984 <__tcf_0+0xc>)
 801197e:	f000 f969 	bl	8011c54 <_ZN12FrontendHeapD1Ev>
 8011982:	bd80      	pop	{r7, pc}
 8011984:	2000044c 	.word	0x2000044c

08011988 <_ZN12FrontendHeap11getInstanceEv>:
    static FrontendHeap& getInstance()
 8011988:	b580      	push	{r7, lr}
 801198a:	af00      	add	r7, sp, #0
        static FrontendHeap instance;
 801198c:	4b11      	ldr	r3, [pc, #68]	; (80119d4 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 801198e:	681b      	ldr	r3, [r3, #0]
 8011990:	f3bf 8f5b 	dmb	ish
 8011994:	f003 0301 	and.w	r3, r3, #1
 8011998:	2b00      	cmp	r3, #0
 801199a:	bf0c      	ite	eq
 801199c:	2301      	moveq	r3, #1
 801199e:	2300      	movne	r3, #0
 80119a0:	b2db      	uxtb	r3, r3
 80119a2:	2b00      	cmp	r3, #0
 80119a4:	d013      	beq.n	80119ce <_ZN12FrontendHeap11getInstanceEv+0x46>
 80119a6:	480b      	ldr	r0, [pc, #44]	; (80119d4 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 80119a8:	f018 fedd 	bl	802a766 <__cxa_guard_acquire>
 80119ac:	4603      	mov	r3, r0
 80119ae:	2b00      	cmp	r3, #0
 80119b0:	bf14      	ite	ne
 80119b2:	2301      	movne	r3, #1
 80119b4:	2300      	moveq	r3, #0
 80119b6:	b2db      	uxtb	r3, r3
 80119b8:	2b00      	cmp	r3, #0
 80119ba:	d008      	beq.n	80119ce <_ZN12FrontendHeap11getInstanceEv+0x46>
 80119bc:	4806      	ldr	r0, [pc, #24]	; (80119d8 <_ZN12FrontendHeap11getInstanceEv+0x50>)
 80119be:	f000 f867 	bl	8011a90 <_ZN12FrontendHeapC1Ev>
 80119c2:	4806      	ldr	r0, [pc, #24]	; (80119dc <_ZN12FrontendHeap11getInstanceEv+0x54>)
 80119c4:	f019 fcdc 	bl	802b380 <atexit>
 80119c8:	4802      	ldr	r0, [pc, #8]	; (80119d4 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 80119ca:	f018 fed8 	bl	802a77e <__cxa_guard_release>
        return instance;
 80119ce:	4b02      	ldr	r3, [pc, #8]	; (80119d8 <_ZN12FrontendHeap11getInstanceEv+0x50>)
    }
 80119d0:	4618      	mov	r0, r3
 80119d2:	bd80      	pop	{r7, pc}
 80119d4:	20000a48 	.word	0x20000a48
 80119d8:	2000044c 	.word	0x2000044c
 80119dc:	08011979 	.word	0x08011979

080119e0 <_ZN16FrontendHeapBaseD1Ev>:
class FrontendHeapBase : public touchgfx::MVPHeap
 80119e0:	b580      	push	{r7, lr}
 80119e2:	b082      	sub	sp, #8
 80119e4:	af00      	add	r7, sp, #0
 80119e6:	6078      	str	r0, [r7, #4]
 80119e8:	4a05      	ldr	r2, [pc, #20]	; (8011a00 <_ZN16FrontendHeapBaseD1Ev+0x20>)
 80119ea:	687b      	ldr	r3, [r7, #4]
 80119ec:	601a      	str	r2, [r3, #0]
 80119ee:	687b      	ldr	r3, [r7, #4]
 80119f0:	4618      	mov	r0, r3
 80119f2:	f7ff fe63 	bl	80116bc <_ZN8touchgfx7MVPHeapD1Ev>
 80119f6:	687b      	ldr	r3, [r7, #4]
 80119f8:	4618      	mov	r0, r3
 80119fa:	3708      	adds	r7, #8
 80119fc:	46bd      	mov	sp, r7
 80119fe:	bd80      	pop	{r7, pc}
 8011a00:	0802eb40 	.word	0x0802eb40

08011a04 <_ZN16FrontendHeapBaseD0Ev>:
 8011a04:	b580      	push	{r7, lr}
 8011a06:	b082      	sub	sp, #8
 8011a08:	af00      	add	r7, sp, #0
 8011a0a:	6078      	str	r0, [r7, #4]
 8011a0c:	6878      	ldr	r0, [r7, #4]
 8011a0e:	f7ff ffe7 	bl	80119e0 <_ZN16FrontendHeapBaseD1Ev>
 8011a12:	2114      	movs	r1, #20
 8011a14:	6878      	ldr	r0, [r7, #4]
 8011a16:	f018 fea4 	bl	802a762 <_ZdlPvj>
 8011a1a:	687b      	ldr	r3, [r7, #4]
 8011a1c:	4618      	mov	r0, r3
 8011a1e:	3708      	adds	r7, #8
 8011a20:	46bd      	mov	sp, r7
 8011a22:	bd80      	pop	{r7, pc}

08011a24 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17COScreenPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 * @tparam NUMBER_OF_ELEMENTS Type of the number of elements.
 *
 * @see AbstractPartition
 */
template <typename ListOfTypes, uint16_t NUMBER_OF_ELEMENTS>
class Partition : public AbstractPartition
 8011a24:	b580      	push	{r7, lr}
 8011a26:	b082      	sub	sp, #8
 8011a28:	af00      	add	r7, sp, #0
 8011a2a:	6078      	str	r0, [r7, #4]
 8011a2c:	687b      	ldr	r3, [r7, #4]
 8011a2e:	4618      	mov	r0, r3
 8011a30:	f000 ff52 	bl	80128d8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8011a34:	4a03      	ldr	r2, [pc, #12]	; (8011a44 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17COScreenPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 8011a36:	687b      	ldr	r3, [r7, #4]
 8011a38:	601a      	str	r2, [r3, #0]
 8011a3a:	687b      	ldr	r3, [r7, #4]
 8011a3c:	4618      	mov	r0, r3
 8011a3e:	3708      	adds	r7, #8
 8011a40:	46bd      	mov	sp, r7
 8011a42:	bd80      	pop	{r7, pc}
 8011a44:	0802eb0c 	.word	0x0802eb0c

08011a48 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 8011a48:	b580      	push	{r7, lr}
 8011a4a:	b082      	sub	sp, #8
 8011a4c:	af00      	add	r7, sp, #0
 8011a4e:	6078      	str	r0, [r7, #4]
 8011a50:	687b      	ldr	r3, [r7, #4]
 8011a52:	4618      	mov	r0, r3
 8011a54:	f000 ff40 	bl	80128d8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8011a58:	4a03      	ldr	r2, [pc, #12]	; (8011a68 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 8011a5a:	687b      	ldr	r3, [r7, #4]
 8011a5c:	601a      	str	r2, [r3, #0]
 8011a5e:	687b      	ldr	r3, [r7, #4]
 8011a60:	4618      	mov	r0, r3
 8011a62:	3708      	adds	r7, #8
 8011a64:	46bd      	mov	sp, r7
 8011a66:	bd80      	pop	{r7, pc}
 8011a68:	0802ead8 	.word	0x0802ead8

08011a6c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EEC1Ev>:
 8011a6c:	b580      	push	{r7, lr}
 8011a6e:	b082      	sub	sp, #8
 8011a70:	af00      	add	r7, sp, #0
 8011a72:	6078      	str	r0, [r7, #4]
 8011a74:	687b      	ldr	r3, [r7, #4]
 8011a76:	4618      	mov	r0, r3
 8011a78:	f000 ff2e 	bl	80128d8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8011a7c:	4a03      	ldr	r2, [pc, #12]	; (8011a8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EEC1Ev+0x20>)
 8011a7e:	687b      	ldr	r3, [r7, #4]
 8011a80:	601a      	str	r2, [r3, #0]
 8011a82:	687b      	ldr	r3, [r7, #4]
 8011a84:	4618      	mov	r0, r3
 8011a86:	3708      	adds	r7, #8
 8011a88:	46bd      	mov	sp, r7
 8011a8a:	bd80      	pop	{r7, pc}
 8011a8c:	0802eaa4 	.word	0x0802eaa4

08011a90 <_ZN12FrontendHeapC1Ev>:
    touchgfx::Partition< CombinedTransitionTypes, 1 > transitions;
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 8011a90:	b590      	push	{r4, r7, lr}
 8011a92:	b085      	sub	sp, #20
 8011a94:	af02      	add	r7, sp, #8
 8011a96:	6078      	str	r0, [r7, #4]
                     app(model, *this)
 8011a98:	6878      	ldr	r0, [r7, #4]
 8011a9a:	687b      	ldr	r3, [r7, #4]
 8011a9c:	f103 0114 	add.w	r1, r3, #20
 8011aa0:	687b      	ldr	r3, [r7, #4]
 8011aa2:	f103 022c 	add.w	r2, r3, #44	; 0x2c
 8011aa6:	687b      	ldr	r3, [r7, #4]
 8011aa8:	f503 6488 	add.w	r4, r3, #1088	; 0x440
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 8011aac:	687b      	ldr	r3, [r7, #4]
 8011aae:	f503 6394 	add.w	r3, r3, #1184	; 0x4a0
                     app(model, *this)
 8011ab2:	9300      	str	r3, [sp, #0]
 8011ab4:	4623      	mov	r3, r4
 8011ab6:	f7ff ff45 	bl	8011944 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>
 8011aba:	4a18      	ldr	r2, [pc, #96]	; (8011b1c <_ZN12FrontendHeapC1Ev+0x8c>)
 8011abc:	687b      	ldr	r3, [r7, #4]
 8011abe:	601a      	str	r2, [r3, #0]
 8011ac0:	687b      	ldr	r3, [r7, #4]
 8011ac2:	3314      	adds	r3, #20
 8011ac4:	4618      	mov	r0, r3
 8011ac6:	f7ff ffad 	bl	8011a24 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17COScreenPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 8011aca:	687b      	ldr	r3, [r7, #4]
 8011acc:	332c      	adds	r3, #44	; 0x2c
 8011ace:	4618      	mov	r0, r3
 8011ad0:	f7ff ffba 	bl	8011a48 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 8011ad4:	687b      	ldr	r3, [r7, #4]
 8011ad6:	f503 6388 	add.w	r3, r3, #1088	; 0x440
 8011ada:	4618      	mov	r0, r3
 8011adc:	f7ff ffc6 	bl	8011a6c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EEC1Ev>
 8011ae0:	687b      	ldr	r3, [r7, #4]
 8011ae2:	f503 6391 	add.w	r3, r3, #1160	; 0x488
 8011ae6:	4618      	mov	r0, r3
 8011ae8:	f7fe fea0 	bl	801082c <_ZN5ModelC1Ev>
 8011aec:	687b      	ldr	r3, [r7, #4]
 8011aee:	f503 6094 	add.w	r0, r3, #1184	; 0x4a0
 8011af2:	687b      	ldr	r3, [r7, #4]
 8011af4:	f503 6391 	add.w	r3, r3, #1160	; 0x488
 8011af8:	687a      	ldr	r2, [r7, #4]
 8011afa:	4619      	mov	r1, r3
 8011afc:	f7fe fcdc 	bl	80104b8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
    {
        gotoStartScreen(app);
 8011b00:	687a      	ldr	r2, [r7, #4]
 8011b02:	687b      	ldr	r3, [r7, #4]
 8011b04:	f503 6394 	add.w	r3, r3, #1184	; 0x4a0
 8011b08:	4619      	mov	r1, r3
 8011b0a:	4610      	mov	r0, r2
 8011b0c:	f7ff ff0c 	bl	8011928 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>
    }
 8011b10:	687b      	ldr	r3, [r7, #4]
 8011b12:	4618      	mov	r0, r3
 8011b14:	370c      	adds	r7, #12
 8011b16:	46bd      	mov	sp, r7
 8011b18:	bd90      	pop	{r4, r7, pc}
 8011b1a:	bf00      	nop
 8011b1c:	0802ea90 	.word	0x0802ea90

08011b20 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXGeneratedHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) :
 8011b20:	b580      	push	{r7, lr}
 8011b22:	b086      	sub	sp, #24
 8011b24:	af02      	add	r7, sp, #8
 8011b26:	60f8      	str	r0, [r7, #12]
 8011b28:	60b9      	str	r1, [r7, #8]
 8011b2a:	607a      	str	r2, [r7, #4]
 8011b2c:	603b      	str	r3, [r7, #0]
        touchgfx::HAL(dma, display, tc, width, height)
 8011b2e:	68f8      	ldr	r0, [r7, #12]
 8011b30:	8bbb      	ldrh	r3, [r7, #28]
 8011b32:	9301      	str	r3, [sp, #4]
 8011b34:	8b3b      	ldrh	r3, [r7, #24]
 8011b36:	9300      	str	r3, [sp, #0]
 8011b38:	683b      	ldr	r3, [r7, #0]
 8011b3a:	687a      	ldr	r2, [r7, #4]
 8011b3c:	68b9      	ldr	r1, [r7, #8]
 8011b3e:	f7ff fe33 	bl	80117a8 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>
 8011b42:	4a04      	ldr	r2, [pc, #16]	; (8011b54 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 8011b44:	68fb      	ldr	r3, [r7, #12]
 8011b46:	601a      	str	r2, [r3, #0]
    }
 8011b48:	68fb      	ldr	r3, [r7, #12]
 8011b4a:	4618      	mov	r0, r3
 8011b4c:	3710      	adds	r7, #16
 8011b4e:	46bd      	mov	sp, r7
 8011b50:	bd80      	pop	{r7, pc}
 8011b52:	bf00      	nop
 8011b54:	0802eb90 	.word	0x0802eb90

08011b58 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8011b58:	b580      	push	{r7, lr}
 8011b5a:	b086      	sub	sp, #24
 8011b5c:	af02      	add	r7, sp, #8
 8011b5e:	60f8      	str	r0, [r7, #12]
 8011b60:	60b9      	str	r1, [r7, #8]
 8011b62:	607a      	str	r2, [r7, #4]
 8011b64:	603b      	str	r3, [r7, #0]
 8011b66:	68f8      	ldr	r0, [r7, #12]
 8011b68:	8bbb      	ldrh	r3, [r7, #28]
 8011b6a:	9301      	str	r3, [sp, #4]
 8011b6c:	8b3b      	ldrh	r3, [r7, #24]
 8011b6e:	9300      	str	r3, [sp, #0]
 8011b70:	683b      	ldr	r3, [r7, #0]
 8011b72:	687a      	ldr	r2, [r7, #4]
 8011b74:	68b9      	ldr	r1, [r7, #8]
 8011b76:	f7ff ffd3 	bl	8011b20 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 8011b7a:	4a04      	ldr	r2, [pc, #16]	; (8011b8c <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 8011b7c:	68fb      	ldr	r3, [r7, #12]
 8011b7e:	601a      	str	r2, [r3, #0]
    }
 8011b80:	68fb      	ldr	r3, [r7, #12]
 8011b82:	4618      	mov	r0, r3
 8011b84:	3710      	adds	r7, #16
 8011b86:	46bd      	mov	sp, r7
 8011b88:	bd80      	pop	{r7, pc}
 8011b8a:	bf00      	nop
 8011b8c:	0802e944 	.word	0x0802e944

08011b90 <_ZN8touchgfx15TouchControllerC1Ev>:
class TouchController
 8011b90:	b480      	push	{r7}
 8011b92:	b083      	sub	sp, #12
 8011b94:	af00      	add	r7, sp, #0
 8011b96:	6078      	str	r0, [r7, #4]
 8011b98:	4a04      	ldr	r2, [pc, #16]	; (8011bac <_ZN8touchgfx15TouchControllerC1Ev+0x1c>)
 8011b9a:	687b      	ldr	r3, [r7, #4]
 8011b9c:	601a      	str	r2, [r3, #0]
 8011b9e:	687b      	ldr	r3, [r7, #4]
 8011ba0:	4618      	mov	r0, r3
 8011ba2:	370c      	adds	r7, #12
 8011ba4:	46bd      	mov	sp, r7
 8011ba6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011baa:	4770      	bx	lr
 8011bac:	0802e92c 	.word	0x0802e92c

08011bb0 <_ZN20STM32TouchControllerC1Ev>:
{
public:

    STM32TouchController() {}
 8011bb0:	b580      	push	{r7, lr}
 8011bb2:	b082      	sub	sp, #8
 8011bb4:	af00      	add	r7, sp, #0
 8011bb6:	6078      	str	r0, [r7, #4]
 8011bb8:	687b      	ldr	r3, [r7, #4]
 8011bba:	4618      	mov	r0, r3
 8011bbc:	f7ff ffe8 	bl	8011b90 <_ZN8touchgfx15TouchControllerC1Ev>
 8011bc0:	4a03      	ldr	r2, [pc, #12]	; (8011bd0 <_ZN20STM32TouchControllerC1Ev+0x20>)
 8011bc2:	687b      	ldr	r3, [r7, #4]
 8011bc4:	601a      	str	r2, [r3, #0]
 8011bc6:	687b      	ldr	r3, [r7, #4]
 8011bc8:	4618      	mov	r0, r3
 8011bca:	3708      	adds	r7, #8
 8011bcc:	46bd      	mov	sp, r7
 8011bce:	bd80      	pop	{r7, pc}
 8011bd0:	0802e914 	.word	0x0802e914

08011bd4 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8011bd4:	b590      	push	{r4, r7, lr}
 8011bd6:	b085      	sub	sp, #20
 8011bd8:	af02      	add	r7, sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8011bda:	f7fe f8a1 	bl	800fd20 <_ZN14BitmapDatabase11getInstanceEv>
 8011bde:	4604      	mov	r4, r0
 8011be0:	f7fe f8a8 	bl	800fd34 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8011be4:	4603      	mov	r3, r0
 8011be6:	4619      	mov	r1, r3
 8011be8:	2300      	movs	r3, #0
 8011bea:	9300      	str	r3, [sp, #0]
 8011bec:	2300      	movs	r3, #0
 8011bee:	2200      	movs	r2, #0
 8011bf0:	4620      	mov	r0, r4
 8011bf2:	f00a fe47 	bl	801c884 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
    TypedText::registerTexts(&texts);
 8011bf6:	4809      	ldr	r0, [pc, #36]	; (8011c1c <touchgfx_init+0x48>)
 8011bf8:	f7ff fd30 	bl	801165c <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>
    Texts::setLanguage(0);
 8011bfc:	2000      	movs	r0, #0
 8011bfe:	f7fe f9dd 	bl	800ffbc <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8011c02:	4807      	ldr	r0, [pc, #28]	; (8011c20 <touchgfx_init+0x4c>)
 8011c04:	f00a fda6 	bl	801c754 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>

    FrontendHeap& heap = FrontendHeap::getInstance();
 8011c08:	f7ff febe 	bl	8011988 <_ZN12FrontendHeap11getInstanceEv>
 8011c0c:	6078      	str	r0, [r7, #4]
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8011c0e:	4805      	ldr	r0, [pc, #20]	; (8011c24 <touchgfx_init+0x50>)
 8011c10:	f7ff fab4 	bl	801117c <_ZN11TouchGFXHAL10initializeEv>
}
 8011c14:	bf00      	nop
 8011c16:	370c      	adds	r7, #12
 8011c18:	46bd      	mov	sp, r7
 8011c1a:	bd90      	pop	{r4, r7, pc}
 8011c1c:	20000b18 	.word	0x20000b18
 8011c20:	20000018 	.word	0x20000018
 8011c24:	20000b1c 	.word	0x20000b1c

08011c28 <touchgfx_components_init>:

void touchgfx_components_init()
{
 8011c28:	b480      	push	{r7}
 8011c2a:	af00      	add	r7, sp, #0
}
 8011c2c:	bf00      	nop
 8011c2e:	46bd      	mov	sp, r7
 8011c30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011c34:	4770      	bx	lr
	...

08011c38 <touchgfx_taskEntry>:

void touchgfx_taskEntry()
{
 8011c38:	b580      	push	{r7, lr}
 8011c3a:	af00      	add	r7, sp, #0
    /*
     * Main event loop will check for VSYNC signal, and then process next frame.
     *
     * Note This function returns immediately if there is no VSYNC signal.
     */
     if (OSWrappers::isVSyncAvailable())
 8011c3c:	f7ff fbb4 	bl	80113a8 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>
 8011c40:	4603      	mov	r3, r0
 8011c42:	2b00      	cmp	r3, #0
 8011c44:	d002      	beq.n	8011c4c <touchgfx_taskEntry+0x14>
     {
         hal.backPorchExited();
 8011c46:	4802      	ldr	r0, [pc, #8]	; (8011c50 <touchgfx_taskEntry+0x18>)
 8011c48:	f7ff f96a 	bl	8010f20 <_ZN8touchgfx3HAL15backPorchExitedEv>
     }
}
 8011c4c:	bf00      	nop
 8011c4e:	bd80      	pop	{r7, pc}
 8011c50:	20000b1c 	.word	0x20000b1c

08011c54 <_ZN12FrontendHeapD1Ev>:
class FrontendHeap : public FrontendHeapBase
 8011c54:	b580      	push	{r7, lr}
 8011c56:	b082      	sub	sp, #8
 8011c58:	af00      	add	r7, sp, #0
 8011c5a:	6078      	str	r0, [r7, #4]
 8011c5c:	4a10      	ldr	r2, [pc, #64]	; (8011ca0 <_ZN12FrontendHeapD1Ev+0x4c>)
 8011c5e:	687b      	ldr	r3, [r7, #4]
 8011c60:	601a      	str	r2, [r3, #0]
 8011c62:	687b      	ldr	r3, [r7, #4]
 8011c64:	f503 6394 	add.w	r3, r3, #1184	; 0x4a0
 8011c68:	4618      	mov	r0, r3
 8011c6a:	f7fe fbef 	bl	801044c <_ZN19FrontendApplicationD1Ev>
 8011c6e:	687b      	ldr	r3, [r7, #4]
 8011c70:	f503 6388 	add.w	r3, r3, #1088	; 0x440
 8011c74:	4618      	mov	r0, r3
 8011c76:	f000 f827 	bl	8011cc8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8011c7a:	687b      	ldr	r3, [r7, #4]
 8011c7c:	332c      	adds	r3, #44	; 0x2c
 8011c7e:	4618      	mov	r0, r3
 8011c80:	f000 f844 	bl	8011d0c <_ZN8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8011c84:	687b      	ldr	r3, [r7, #4]
 8011c86:	3314      	adds	r3, #20
 8011c88:	4618      	mov	r0, r3
 8011c8a:	f000 f863 	bl	8011d54 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17COScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8011c8e:	687b      	ldr	r3, [r7, #4]
 8011c90:	4618      	mov	r0, r3
 8011c92:	f7ff fea5 	bl	80119e0 <_ZN16FrontendHeapBaseD1Ev>
 8011c96:	687b      	ldr	r3, [r7, #4]
 8011c98:	4618      	mov	r0, r3
 8011c9a:	3708      	adds	r7, #8
 8011c9c:	46bd      	mov	sp, r7
 8011c9e:	bd80      	pop	{r7, pc}
 8011ca0:	0802ea90 	.word	0x0802ea90

08011ca4 <_ZN12FrontendHeapD0Ev>:
 8011ca4:	b580      	push	{r7, lr}
 8011ca6:	b082      	sub	sp, #8
 8011ca8:	af00      	add	r7, sp, #0
 8011caa:	6078      	str	r0, [r7, #4]
 8011cac:	6878      	ldr	r0, [r7, #4]
 8011cae:	f7ff ffd1 	bl	8011c54 <_ZN12FrontendHeapD1Ev>
 8011cb2:	f240 51fc 	movw	r1, #1532	; 0x5fc
 8011cb6:	6878      	ldr	r0, [r7, #4]
 8011cb8:	f018 fd53 	bl	802a762 <_ZdlPvj>
 8011cbc:	687b      	ldr	r3, [r7, #4]
 8011cbe:	4618      	mov	r0, r3
 8011cc0:	3708      	adds	r7, #8
 8011cc2:	46bd      	mov	sp, r7
 8011cc4:	bd80      	pop	{r7, pc}
	...

08011cc8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
 8011cc8:	b580      	push	{r7, lr}
 8011cca:	b082      	sub	sp, #8
 8011ccc:	af00      	add	r7, sp, #0
 8011cce:	6078      	str	r0, [r7, #4]
 8011cd0:	4a05      	ldr	r2, [pc, #20]	; (8011ce8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x20>)
 8011cd2:	687b      	ldr	r3, [r7, #4]
 8011cd4:	601a      	str	r2, [r3, #0]
 8011cd6:	687b      	ldr	r3, [r7, #4]
 8011cd8:	4618      	mov	r0, r3
 8011cda:	f000 fdfc 	bl	80128d6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8011cde:	687b      	ldr	r3, [r7, #4]
 8011ce0:	4618      	mov	r0, r3
 8011ce2:	3708      	adds	r7, #8
 8011ce4:	46bd      	mov	sp, r7
 8011ce6:	bd80      	pop	{r7, pc}
 8011ce8:	0802eaa4 	.word	0x0802eaa4

08011cec <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8011cec:	b580      	push	{r7, lr}
 8011cee:	b082      	sub	sp, #8
 8011cf0:	af00      	add	r7, sp, #0
 8011cf2:	6078      	str	r0, [r7, #4]
 8011cf4:	6878      	ldr	r0, [r7, #4]
 8011cf6:	f7ff ffe7 	bl	8011cc8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8011cfa:	2148      	movs	r1, #72	; 0x48
 8011cfc:	6878      	ldr	r0, [r7, #4]
 8011cfe:	f018 fd30 	bl	802a762 <_ZdlPvj>
 8011d02:	687b      	ldr	r3, [r7, #4]
 8011d04:	4618      	mov	r0, r3
 8011d06:	3708      	adds	r7, #8
 8011d08:	46bd      	mov	sp, r7
 8011d0a:	bd80      	pop	{r7, pc}

08011d0c <_ZN8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8011d0c:	b580      	push	{r7, lr}
 8011d0e:	b082      	sub	sp, #8
 8011d10:	af00      	add	r7, sp, #0
 8011d12:	6078      	str	r0, [r7, #4]
 8011d14:	4a05      	ldr	r2, [pc, #20]	; (8011d2c <_ZN8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 8011d16:	687b      	ldr	r3, [r7, #4]
 8011d18:	601a      	str	r2, [r3, #0]
 8011d1a:	687b      	ldr	r3, [r7, #4]
 8011d1c:	4618      	mov	r0, r3
 8011d1e:	f000 fdda 	bl	80128d6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8011d22:	687b      	ldr	r3, [r7, #4]
 8011d24:	4618      	mov	r0, r3
 8011d26:	3708      	adds	r7, #8
 8011d28:	46bd      	mov	sp, r7
 8011d2a:	bd80      	pop	{r7, pc}
 8011d2c:	0802ead8 	.word	0x0802ead8

08011d30 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8011d30:	b580      	push	{r7, lr}
 8011d32:	b082      	sub	sp, #8
 8011d34:	af00      	add	r7, sp, #0
 8011d36:	6078      	str	r0, [r7, #4]
 8011d38:	6878      	ldr	r0, [r7, #4]
 8011d3a:	f7ff ffe7 	bl	8011d0c <_ZN8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8011d3e:	f240 4114 	movw	r1, #1044	; 0x414
 8011d42:	6878      	ldr	r0, [r7, #4]
 8011d44:	f018 fd0d 	bl	802a762 <_ZdlPvj>
 8011d48:	687b      	ldr	r3, [r7, #4]
 8011d4a:	4618      	mov	r0, r3
 8011d4c:	3708      	adds	r7, #8
 8011d4e:	46bd      	mov	sp, r7
 8011d50:	bd80      	pop	{r7, pc}
	...

08011d54 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17COScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8011d54:	b580      	push	{r7, lr}
 8011d56:	b082      	sub	sp, #8
 8011d58:	af00      	add	r7, sp, #0
 8011d5a:	6078      	str	r0, [r7, #4]
 8011d5c:	4a05      	ldr	r2, [pc, #20]	; (8011d74 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17COScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 8011d5e:	687b      	ldr	r3, [r7, #4]
 8011d60:	601a      	str	r2, [r3, #0]
 8011d62:	687b      	ldr	r3, [r7, #4]
 8011d64:	4618      	mov	r0, r3
 8011d66:	f000 fdb6 	bl	80128d6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8011d6a:	687b      	ldr	r3, [r7, #4]
 8011d6c:	4618      	mov	r0, r3
 8011d6e:	3708      	adds	r7, #8
 8011d70:	46bd      	mov	sp, r7
 8011d72:	bd80      	pop	{r7, pc}
 8011d74:	0802eb0c 	.word	0x0802eb0c

08011d78 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17COScreenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8011d78:	b580      	push	{r7, lr}
 8011d7a:	b082      	sub	sp, #8
 8011d7c:	af00      	add	r7, sp, #0
 8011d7e:	6078      	str	r0, [r7, #4]
 8011d80:	6878      	ldr	r0, [r7, #4]
 8011d82:	f7ff ffe7 	bl	8011d54 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17COScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8011d86:	2118      	movs	r1, #24
 8011d88:	6878      	ldr	r0, [r7, #4]
 8011d8a:	f018 fcea 	bl	802a762 <_ZdlPvj>
 8011d8e:	687b      	ldr	r3, [r7, #4]
 8011d90:	4618      	mov	r0, r3
 8011d92:	3708      	adds	r7, #8
 8011d94:	46bd      	mov	sp, r7
 8011d96:	bd80      	pop	{r7, pc}

08011d98 <_ZN8touchgfx8LCD16bppD1Ev>:
 *
 * @see LCD
 *
 * @note All coordinates are expected to be in absolute coordinates!
 */
class LCD16bpp : public LCD
 8011d98:	b580      	push	{r7, lr}
 8011d9a:	b082      	sub	sp, #8
 8011d9c:	af00      	add	r7, sp, #0
 8011d9e:	6078      	str	r0, [r7, #4]
 8011da0:	4a05      	ldr	r2, [pc, #20]	; (8011db8 <_ZN8touchgfx8LCD16bppD1Ev+0x20>)
 8011da2:	687b      	ldr	r3, [r7, #4]
 8011da4:	601a      	str	r2, [r3, #0]
 8011da6:	687b      	ldr	r3, [r7, #4]
 8011da8:	4618      	mov	r0, r3
 8011daa:	f7ff fca7 	bl	80116fc <_ZN8touchgfx3LCDD1Ev>
 8011dae:	687b      	ldr	r3, [r7, #4]
 8011db0:	4618      	mov	r0, r3
 8011db2:	3708      	adds	r7, #8
 8011db4:	46bd      	mov	sp, r7
 8011db6:	bd80      	pop	{r7, pc}
 8011db8:	0802fd78 	.word	0x0802fd78

08011dbc <_ZN8touchgfx8LCD16bppD0Ev>:
 8011dbc:	b580      	push	{r7, lr}
 8011dbe:	b082      	sub	sp, #8
 8011dc0:	af00      	add	r7, sp, #0
 8011dc2:	6078      	str	r0, [r7, #4]
 8011dc4:	6878      	ldr	r0, [r7, #4]
 8011dc6:	f7ff ffe7 	bl	8011d98 <_ZN8touchgfx8LCD16bppD1Ev>
 8011dca:	2184      	movs	r1, #132	; 0x84
 8011dcc:	6878      	ldr	r0, [r7, #4]
 8011dce:	f018 fcc8 	bl	802a762 <_ZdlPvj>
 8011dd2:	687b      	ldr	r3, [r7, #4]
 8011dd4:	4618      	mov	r0, r3
 8011dd6:	3708      	adds	r7, #8
 8011dd8:	46bd      	mov	sp, r7
 8011dda:	bd80      	pop	{r7, pc}

08011ddc <_Z41__static_initialization_and_destruction_0ii>:
 8011ddc:	b580      	push	{r7, lr}
 8011dde:	b084      	sub	sp, #16
 8011de0:	af02      	add	r7, sp, #8
 8011de2:	6078      	str	r0, [r7, #4]
 8011de4:	6039      	str	r1, [r7, #0]
 8011de6:	687b      	ldr	r3, [r7, #4]
 8011de8:	2b01      	cmp	r3, #1
 8011dea:	d118      	bne.n	8011e1e <_Z41__static_initialization_and_destruction_0ii+0x42>
 8011dec:	683b      	ldr	r3, [r7, #0]
 8011dee:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8011df2:	4293      	cmp	r3, r2
 8011df4:	d113      	bne.n	8011e1e <_Z41__static_initialization_and_destruction_0ii+0x42>
static STM32TouchController tc;
 8011df6:	4817      	ldr	r0, [pc, #92]	; (8011e54 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 8011df8:	f7ff feda 	bl	8011bb0 <_ZN20STM32TouchControllerC1Ev>
static STM32DMA dma;
 8011dfc:	4816      	ldr	r0, [pc, #88]	; (8011e58 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 8011dfe:	f7ff fb8f 	bl	8011520 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8011e02:	4816      	ldr	r0, [pc, #88]	; (8011e5c <_Z41__static_initialization_and_destruction_0ii+0x80>)
 8011e04:	f00f f802 	bl	8020e0c <_ZN8touchgfx8LCD16bppC1Ev>
static TouchGFXHAL hal(dma, display, tc, 240, 320);
 8011e08:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8011e0c:	9301      	str	r3, [sp, #4]
 8011e0e:	23f0      	movs	r3, #240	; 0xf0
 8011e10:	9300      	str	r3, [sp, #0]
 8011e12:	4b10      	ldr	r3, [pc, #64]	; (8011e54 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 8011e14:	4a11      	ldr	r2, [pc, #68]	; (8011e5c <_Z41__static_initialization_and_destruction_0ii+0x80>)
 8011e16:	4910      	ldr	r1, [pc, #64]	; (8011e58 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 8011e18:	4811      	ldr	r0, [pc, #68]	; (8011e60 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 8011e1a:	f7ff fe9d 	bl	8011b58 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 8011e1e:	687b      	ldr	r3, [r7, #4]
 8011e20:	2b00      	cmp	r3, #0
 8011e22:	d113      	bne.n	8011e4c <_Z41__static_initialization_and_destruction_0ii+0x70>
 8011e24:	683b      	ldr	r3, [r7, #0]
 8011e26:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8011e2a:	4293      	cmp	r3, r2
 8011e2c:	d10e      	bne.n	8011e4c <_Z41__static_initialization_and_destruction_0ii+0x70>
 8011e2e:	480c      	ldr	r0, [pc, #48]	; (8011e60 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 8011e30:	f7ff fa34 	bl	801129c <_ZN11TouchGFXHALD1Ev>
static ApplicationFontProvider fontProvider;
 8011e34:	480b      	ldr	r0, [pc, #44]	; (8011e64 <_Z41__static_initialization_and_destruction_0ii+0x88>)
 8011e36:	f7f7 fbf9 	bl	800962c <_ZN23ApplicationFontProviderD1Ev>
static LCD16bpp display;
 8011e3a:	4808      	ldr	r0, [pc, #32]	; (8011e5c <_Z41__static_initialization_and_destruction_0ii+0x80>)
 8011e3c:	f7ff ffac 	bl	8011d98 <_ZN8touchgfx8LCD16bppD1Ev>
static STM32DMA dma;
 8011e40:	4805      	ldr	r0, [pc, #20]	; (8011e58 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 8011e42:	f7ff fbc1 	bl	80115c8 <_ZN8STM32DMAD1Ev>
static STM32TouchController tc;
 8011e46:	4803      	ldr	r0, [pc, #12]	; (8011e54 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 8011e48:	f7fe ff70 	bl	8010d2c <_ZN20STM32TouchControllerD1Ev>
}
 8011e4c:	bf00      	nop
 8011e4e:	3708      	adds	r7, #8
 8011e50:	46bd      	mov	sp, r7
 8011e52:	bd80      	pop	{r7, pc}
 8011e54:	20000a4c 	.word	0x20000a4c
 8011e58:	20000a50 	.word	0x20000a50
 8011e5c:	20000a94 	.word	0x20000a94
 8011e60:	20000b1c 	.word	0x20000b1c
 8011e64:	20000018 	.word	0x20000018

08011e68 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    {
        INTS_PR_ELEMENT = (sizeof(typename meta::select_type_maxsize<SupportedTypesList>::type) + sizeof(int) - 1) / sizeof(int),
        SIZE_OF_ELEMENT = INTS_PR_ELEMENT * sizeof(int)
    };

    virtual uint16_t capacity() const
 8011e68:	b480      	push	{r7}
 8011e6a:	b083      	sub	sp, #12
 8011e6c:	af00      	add	r7, sp, #0
 8011e6e:	6078      	str	r0, [r7, #4]
    {
        return NUMBER_OF_ELEMENTS;
 8011e70:	2301      	movs	r3, #1
    }
 8011e72:	4618      	mov	r0, r3
 8011e74:	370c      	adds	r7, #12
 8011e76:	46bd      	mov	sp, r7
 8011e78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011e7c:	4770      	bx	lr

08011e7e <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
 8011e7e:	b480      	push	{r7}
 8011e80:	b083      	sub	sp, #12
 8011e82:	af00      	add	r7, sp, #0
 8011e84:	6078      	str	r0, [r7, #4]
    {
        return sizeof(stBlocks[0]);
 8011e86:	2340      	movs	r3, #64	; 0x40
    }
 8011e88:	4618      	mov	r0, r3
 8011e8a:	370c      	adds	r7, #12
 8011e8c:	46bd      	mov	sp, r7
 8011e8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011e92:	4770      	bx	lr

08011e94 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
 8011e94:	b480      	push	{r7}
 8011e96:	b083      	sub	sp, #12
 8011e98:	af00      	add	r7, sp, #0
 8011e9a:	6078      	str	r0, [r7, #4]
 8011e9c:	460b      	mov	r3, r1
 8011e9e:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 8011ea0:	887b      	ldrh	r3, [r7, #2]
 8011ea2:	019b      	lsls	r3, r3, #6
 8011ea4:	3308      	adds	r3, #8
 8011ea6:	687a      	ldr	r2, [r7, #4]
 8011ea8:	4413      	add	r3, r2
    }
 8011eaa:	4618      	mov	r0, r3
 8011eac:	370c      	adds	r7, #12
 8011eae:	46bd      	mov	sp, r7
 8011eb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011eb4:	4770      	bx	lr

08011eb6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
 8011eb6:	b480      	push	{r7}
 8011eb8:	b083      	sub	sp, #12
 8011eba:	af00      	add	r7, sp, #0
 8011ebc:	6078      	str	r0, [r7, #4]
 8011ebe:	460b      	mov	r3, r1
 8011ec0:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 8011ec2:	887b      	ldrh	r3, [r7, #2]
 8011ec4:	019b      	lsls	r3, r3, #6
 8011ec6:	3308      	adds	r3, #8
 8011ec8:	687a      	ldr	r2, [r7, #4]
 8011eca:	4413      	add	r3, r2
    }
 8011ecc:	4618      	mov	r0, r3
 8011ece:	370c      	adds	r7, #12
 8011ed0:	46bd      	mov	sp, r7
 8011ed2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011ed6:	4770      	bx	lr

08011ed8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 8011ed8:	b480      	push	{r7}
 8011eda:	b083      	sub	sp, #12
 8011edc:	af00      	add	r7, sp, #0
 8011ede:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 8011ee0:	2301      	movs	r3, #1
    }
 8011ee2:	4618      	mov	r0, r3
 8011ee4:	370c      	adds	r7, #12
 8011ee6:	46bd      	mov	sp, r7
 8011ee8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011eec:	4770      	bx	lr

08011eee <_ZN8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 8011eee:	b480      	push	{r7}
 8011ef0:	b083      	sub	sp, #12
 8011ef2:	af00      	add	r7, sp, #0
 8011ef4:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 8011ef6:	f240 430c 	movw	r3, #1036	; 0x40c
    }
 8011efa:	4618      	mov	r0, r3
 8011efc:	370c      	adds	r7, #12
 8011efe:	46bd      	mov	sp, r7
 8011f00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011f04:	4770      	bx	lr

08011f06 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 8011f06:	b480      	push	{r7}
 8011f08:	b083      	sub	sp, #12
 8011f0a:	af00      	add	r7, sp, #0
 8011f0c:	6078      	str	r0, [r7, #4]
 8011f0e:	460b      	mov	r3, r1
 8011f10:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 8011f12:	887b      	ldrh	r3, [r7, #2]
 8011f14:	f240 420c 	movw	r2, #1036	; 0x40c
 8011f18:	fb02 f303 	mul.w	r3, r2, r3
 8011f1c:	3308      	adds	r3, #8
 8011f1e:	687a      	ldr	r2, [r7, #4]
 8011f20:	4413      	add	r3, r2
    }
 8011f22:	4618      	mov	r0, r3
 8011f24:	370c      	adds	r7, #12
 8011f26:	46bd      	mov	sp, r7
 8011f28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011f2c:	4770      	bx	lr

08011f2e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI14MainScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 8011f2e:	b480      	push	{r7}
 8011f30:	b083      	sub	sp, #12
 8011f32:	af00      	add	r7, sp, #0
 8011f34:	6078      	str	r0, [r7, #4]
 8011f36:	460b      	mov	r3, r1
 8011f38:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 8011f3a:	887b      	ldrh	r3, [r7, #2]
 8011f3c:	f240 420c 	movw	r2, #1036	; 0x40c
 8011f40:	fb02 f303 	mul.w	r3, r2, r3
 8011f44:	3308      	adds	r3, #8
 8011f46:	687a      	ldr	r2, [r7, #4]
 8011f48:	4413      	add	r3, r2
    }
 8011f4a:	4618      	mov	r0, r3
 8011f4c:	370c      	adds	r7, #12
 8011f4e:	46bd      	mov	sp, r7
 8011f50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011f54:	4770      	bx	lr

08011f56 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI17COScreenPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 8011f56:	b480      	push	{r7}
 8011f58:	b083      	sub	sp, #12
 8011f5a:	af00      	add	r7, sp, #0
 8011f5c:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 8011f5e:	2301      	movs	r3, #1
    }
 8011f60:	4618      	mov	r0, r3
 8011f62:	370c      	adds	r7, #12
 8011f64:	46bd      	mov	sp, r7
 8011f66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011f6a:	4770      	bx	lr

08011f6c <_ZN8touchgfx9PartitionINS_4meta8TypeListI17COScreenPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 8011f6c:	b480      	push	{r7}
 8011f6e:	b083      	sub	sp, #12
 8011f70:	af00      	add	r7, sp, #0
 8011f72:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 8011f74:	2310      	movs	r3, #16
    }
 8011f76:	4618      	mov	r0, r3
 8011f78:	370c      	adds	r7, #12
 8011f7a:	46bd      	mov	sp, r7
 8011f7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011f80:	4770      	bx	lr

08011f82 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17COScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 8011f82:	b480      	push	{r7}
 8011f84:	b083      	sub	sp, #12
 8011f86:	af00      	add	r7, sp, #0
 8011f88:	6078      	str	r0, [r7, #4]
 8011f8a:	460b      	mov	r3, r1
 8011f8c:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 8011f8e:	887b      	ldrh	r3, [r7, #2]
 8011f90:	011b      	lsls	r3, r3, #4
 8011f92:	3308      	adds	r3, #8
 8011f94:	687a      	ldr	r2, [r7, #4]
 8011f96:	4413      	add	r3, r2
    }
 8011f98:	4618      	mov	r0, r3
 8011f9a:	370c      	adds	r7, #12
 8011f9c:	46bd      	mov	sp, r7
 8011f9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011fa2:	4770      	bx	lr

08011fa4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI17COScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 8011fa4:	b480      	push	{r7}
 8011fa6:	b083      	sub	sp, #12
 8011fa8:	af00      	add	r7, sp, #0
 8011faa:	6078      	str	r0, [r7, #4]
 8011fac:	460b      	mov	r3, r1
 8011fae:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 8011fb0:	887b      	ldrh	r3, [r7, #2]
 8011fb2:	011b      	lsls	r3, r3, #4
 8011fb4:	3308      	adds	r3, #8
 8011fb6:	687a      	ldr	r2, [r7, #4]
 8011fb8:	4413      	add	r3, r2
    }
 8011fba:	4618      	mov	r0, r3
 8011fbc:	370c      	adds	r7, #12
 8011fbe:	46bd      	mov	sp, r7
 8011fc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011fc4:	4770      	bx	lr

08011fc6 <_GLOBAL__sub_I_touchgfx_init>:
 8011fc6:	b580      	push	{r7, lr}
 8011fc8:	af00      	add	r7, sp, #0
 8011fca:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8011fce:	2001      	movs	r0, #1
 8011fd0:	f7ff ff04 	bl	8011ddc <_Z41__static_initialization_and_destruction_0ii>
 8011fd4:	bd80      	pop	{r7, pc}

08011fd6 <_GLOBAL__sub_D_touchgfx_init>:
 8011fd6:	b580      	push	{r7, lr}
 8011fd8:	af00      	add	r7, sp, #0
 8011fda:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8011fde:	2000      	movs	r0, #0
 8011fe0:	f7ff fefc 	bl	8011ddc <_Z41__static_initialization_and_destruction_0ii>
 8011fe4:	bd80      	pop	{r7, pc}
	...

08011fe8 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>:
     * transferred and ready to reuse.
     */
    virtual void freeBlockAfterTransfer() = 0;

    /** Finalizes an instance of the FrameBufferAllocator class. */
    virtual ~FrameBufferAllocator()
 8011fe8:	b480      	push	{r7}
 8011fea:	b083      	sub	sp, #12
 8011fec:	af00      	add	r7, sp, #0
 8011fee:	6078      	str	r0, [r7, #4]
    {
 8011ff0:	4a04      	ldr	r2, [pc, #16]	; (8012004 <_ZN8touchgfx20FrameBufferAllocatorD1Ev+0x1c>)
 8011ff2:	687b      	ldr	r3, [r7, #4]
 8011ff4:	601a      	str	r2, [r3, #0]
    }
 8011ff6:	687b      	ldr	r3, [r7, #4]
 8011ff8:	4618      	mov	r0, r3
 8011ffa:	370c      	adds	r7, #12
 8011ffc:	46bd      	mov	sp, r7
 8011ffe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012002:	4770      	bx	lr
 8012004:	0802ec68 	.word	0x0802ec68

08012008 <_ZN8touchgfx20FrameBufferAllocatorD0Ev>:
    virtual ~FrameBufferAllocator()
 8012008:	b580      	push	{r7, lr}
 801200a:	b082      	sub	sp, #8
 801200c:	af00      	add	r7, sp, #0
 801200e:	6078      	str	r0, [r7, #4]
    }
 8012010:	6878      	ldr	r0, [r7, #4]
 8012012:	f7ff ffe9 	bl	8011fe8 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>
 8012016:	2104      	movs	r1, #4
 8012018:	6878      	ldr	r0, [r7, #4]
 801201a:	f018 fba2 	bl	802a762 <_ZdlPvj>
 801201e:	687b      	ldr	r3, [r7, #4]
 8012020:	4618      	mov	r0, r3
 8012022:	3708      	adds	r7, #8
 8012024:	46bd      	mov	sp, r7
 8012026:	bd80      	pop	{r7, pc}

08012028 <_ZN8touchgfx3HAL5vSyncEv>:
    void vSync()
 8012028:	b480      	push	{r7}
 801202a:	b083      	sub	sp, #12
 801202c:	af00      	add	r7, sp, #0
 801202e:	6078      	str	r0, [r7, #4]
        vSyncCnt++;
 8012030:	687b      	ldr	r3, [r7, #4]
 8012032:	f893 306a 	ldrb.w	r3, [r3, #106]	; 0x6a
 8012036:	3301      	adds	r3, #1
 8012038:	b2da      	uxtb	r2, r3
 801203a:	687b      	ldr	r3, [r7, #4]
 801203c:	f883 206a 	strb.w	r2, [r3, #106]	; 0x6a
    }
 8012040:	bf00      	nop
 8012042:	370c      	adds	r7, #12
 8012044:	46bd      	mov	sp, r7
 8012046:	f85d 7b04 	ldr.w	r7, [sp], #4
 801204a:	4770      	bx	lr

0801204c <_ZN8touchgfx3HAL23setFrameBufferAllocatorEPNS_20FrameBufferAllocatorE>:
    void setFrameBufferAllocator(FrameBufferAllocator* allocator)
 801204c:	b480      	push	{r7}
 801204e:	b083      	sub	sp, #12
 8012050:	af00      	add	r7, sp, #0
 8012052:	6078      	str	r0, [r7, #4]
 8012054:	6039      	str	r1, [r7, #0]
        frameBufferAllocator = allocator;
 8012056:	687b      	ldr	r3, [r7, #4]
 8012058:	683a      	ldr	r2, [r7, #0]
 801205a:	619a      	str	r2, [r3, #24]
    }
 801205c:	bf00      	nop
 801205e:	370c      	adds	r7, #12
 8012060:	46bd      	mov	sp, r7
 8012062:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012066:	4770      	bx	lr

08012068 <_ZN8touchgfx3HAL23getFrameBufferAllocatorEv>:
    FrameBufferAllocator* getFrameBufferAllocator()
 8012068:	b480      	push	{r7}
 801206a:	b083      	sub	sp, #12
 801206c:	af00      	add	r7, sp, #0
 801206e:	6078      	str	r0, [r7, #4]
        return frameBufferAllocator;
 8012070:	687b      	ldr	r3, [r7, #4]
 8012072:	699b      	ldr	r3, [r3, #24]
    }
 8012074:	4618      	mov	r0, r3
 8012076:	370c      	adds	r7, #12
 8012078:	46bd      	mov	sp, r7
 801207a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801207e:	4770      	bx	lr

08012080 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>:
    bool setFrameRefreshStrategy(FrameRefreshStrategy s)
 8012080:	b580      	push	{r7, lr}
 8012082:	b082      	sub	sp, #8
 8012084:	af00      	add	r7, sp, #0
 8012086:	6078      	str	r0, [r7, #4]
 8012088:	460b      	mov	r3, r1
 801208a:	70fb      	strb	r3, [r7, #3]
        if (s == REFRESH_STRATEGY_DEFAULT || s == REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER)
 801208c:	78fb      	ldrb	r3, [r7, #3]
 801208e:	2b00      	cmp	r3, #0
 8012090:	d002      	beq.n	8012098 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x18>
 8012092:	78fb      	ldrb	r3, [r7, #3]
 8012094:	2b02      	cmp	r3, #2
 8012096:	d105      	bne.n	80120a4 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x24>
            refreshStrategy = s;
 8012098:	687b      	ldr	r3, [r7, #4]
 801209a:	78fa      	ldrb	r2, [r7, #3]
 801209c:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
            return true;
 80120a0:	2301      	movs	r3, #1
 80120a2:	e027      	b.n	80120f4 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        if (s == REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL)
 80120a4:	78fb      	ldrb	r3, [r7, #3]
 80120a6:	2b01      	cmp	r3, #1
 80120a8:	d123      	bne.n	80120f2 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x72>
            if (taskDelayFunc != 0 && getTFTCurrentLine() != 0xFFFF && !USE_DOUBLE_BUFFERING)
 80120aa:	687b      	ldr	r3, [r7, #4]
 80120ac:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80120ae:	2b00      	cmp	r3, #0
 80120b0:	d014      	beq.n	80120dc <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 80120b2:	687b      	ldr	r3, [r7, #4]
 80120b4:	681b      	ldr	r3, [r3, #0]
 80120b6:	339c      	adds	r3, #156	; 0x9c
 80120b8:	681b      	ldr	r3, [r3, #0]
 80120ba:	6878      	ldr	r0, [r7, #4]
 80120bc:	4798      	blx	r3
 80120be:	4603      	mov	r3, r0
 80120c0:	461a      	mov	r2, r3
 80120c2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80120c6:	429a      	cmp	r2, r3
 80120c8:	d008      	beq.n	80120dc <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 80120ca:	4b0c      	ldr	r3, [pc, #48]	; (80120fc <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x7c>)
 80120cc:	781b      	ldrb	r3, [r3, #0]
 80120ce:	f083 0301 	eor.w	r3, r3, #1
 80120d2:	b2db      	uxtb	r3, r3
 80120d4:	2b00      	cmp	r3, #0
 80120d6:	d001      	beq.n	80120dc <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 80120d8:	2301      	movs	r3, #1
 80120da:	e000      	b.n	80120de <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5e>
 80120dc:	2300      	movs	r3, #0
 80120de:	2b00      	cmp	r3, #0
 80120e0:	d005      	beq.n	80120ee <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x6e>
                refreshStrategy = s;
 80120e2:	687b      	ldr	r3, [r7, #4]
 80120e4:	78fa      	ldrb	r2, [r7, #3]
 80120e6:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
                return true;
 80120ea:	2301      	movs	r3, #1
 80120ec:	e002      	b.n	80120f4 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
            return false;
 80120ee:	2300      	movs	r3, #0
 80120f0:	e000      	b.n	80120f4 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        return false;
 80120f2:	2300      	movs	r3, #0
    }
 80120f4:	4618      	mov	r0, r3
 80120f6:	3708      	adds	r7, #8
 80120f8:	46bd      	mov	sp, r7
 80120fa:	bd80      	pop	{r7, pc}
 80120fc:	2000224a 	.word	0x2000224a

08012100 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
                   3, /* number of blocks */
                   2  /* bytes per pixel */
                   > blockAllocator;

void TouchGFXGeneratedHAL::initialize()
{
 8012100:	b5b0      	push	{r4, r5, r7, lr}
 8012102:	b082      	sub	sp, #8
 8012104:	af00      	add	r7, sp, #0
 8012106:	6078      	str	r0, [r7, #4]
    HAL::initialize();
 8012108:	687b      	ldr	r3, [r7, #4]
 801210a:	4618      	mov	r0, r3
 801210c:	f001 fa37 	bl	801357e <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8012110:	687d      	ldr	r5, [r7, #4]
 8012112:	687b      	ldr	r3, [r7, #4]
 8012114:	681b      	ldr	r3, [r3, #0]
 8012116:	3364      	adds	r3, #100	; 0x64
 8012118:	681c      	ldr	r4, [r3, #0]
 801211a:	f007 f8c5 	bl	80192a8 <_ZN8touchgfx11Application11getInstanceEv>
 801211e:	4603      	mov	r3, r0
 8012120:	4619      	mov	r1, r3
 8012122:	4628      	mov	r0, r5
 8012124:	47a0      	blx	r4
    enableLCDControllerInterrupt();
 8012126:	687b      	ldr	r3, [r7, #4]
 8012128:	681b      	ldr	r3, [r3, #0]
 801212a:	3380      	adds	r3, #128	; 0x80
 801212c:	681b      	ldr	r3, [r3, #0]
 801212e:	6878      	ldr	r0, [r7, #4]
 8012130:	4798      	blx	r3
    enableInterrupts();
 8012132:	687b      	ldr	r3, [r7, #4]
 8012134:	681b      	ldr	r3, [r3, #0]
 8012136:	3378      	adds	r3, #120	; 0x78
 8012138:	681b      	ldr	r3, [r3, #0]
 801213a:	6878      	ldr	r0, [r7, #4]
 801213c:	4798      	blx	r3
    // Partial framebuffer strategy
    setFrameBufferAllocator(&blockAllocator);
 801213e:	687b      	ldr	r3, [r7, #4]
 8012140:	4906      	ldr	r1, [pc, #24]	; (801215c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5c>)
 8012142:	4618      	mov	r0, r3
 8012144:	f7ff ff82 	bl	801204c <_ZN8touchgfx3HAL23setFrameBufferAllocatorEPNS_20FrameBufferAllocatorE>
    setFrameRefreshStrategy(HAL::REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER);
 8012148:	687b      	ldr	r3, [r7, #4]
 801214a:	2102      	movs	r1, #2
 801214c:	4618      	mov	r0, r3
 801214e:	f7ff ff97 	bl	8012080 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>
}
 8012152:	bf00      	nop
 8012154:	3708      	adds	r7, #8
 8012156:	46bd      	mov	sp, r7
 8012158:	bdb0      	pop	{r4, r5, r7, pc}
 801215a:	bf00      	nop
 801215c:	20000b98 	.word	0x20000b98

08012160 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:

void TouchGFXGeneratedHAL::configureInterrupts()
{
 8012160:	b480      	push	{r7}
 8012162:	b083      	sub	sp, #12
 8012164:	af00      	add	r7, sp, #0
 8012166:	6078      	str	r0, [r7, #4]
}
 8012168:	bf00      	nop
 801216a:	370c      	adds	r7, #12
 801216c:	46bd      	mov	sp, r7
 801216e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012172:	4770      	bx	lr

08012174 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:

void TouchGFXGeneratedHAL::enableInterrupts()
{
 8012174:	b480      	push	{r7}
 8012176:	b083      	sub	sp, #12
 8012178:	af00      	add	r7, sp, #0
 801217a:	6078      	str	r0, [r7, #4]
}
 801217c:	bf00      	nop
 801217e:	370c      	adds	r7, #12
 8012180:	46bd      	mov	sp, r7
 8012182:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012186:	4770      	bx	lr

08012188 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:

void TouchGFXGeneratedHAL::disableInterrupts()
{
 8012188:	b480      	push	{r7}
 801218a:	b083      	sub	sp, #12
 801218c:	af00      	add	r7, sp, #0
 801218e:	6078      	str	r0, [r7, #4]
}
 8012190:	bf00      	nop
 8012192:	370c      	adds	r7, #12
 8012194:	46bd      	mov	sp, r7
 8012196:	f85d 7b04 	ldr.w	r7, [sp], #4
 801219a:	4770      	bx	lr

0801219c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
 801219c:	b480      	push	{r7}
 801219e:	b083      	sub	sp, #12
 80121a0:	af00      	add	r7, sp, #0
 80121a2:	6078      	str	r0, [r7, #4]
}
 80121a4:	bf00      	nop
 80121a6:	370c      	adds	r7, #12
 80121a8:	46bd      	mov	sp, r7
 80121aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80121ae:	4770      	bx	lr

080121b0 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:

bool TouchGFXGeneratedHAL::beginFrame()
{
 80121b0:	b580      	push	{r7, lr}
 80121b2:	b082      	sub	sp, #8
 80121b4:	af00      	add	r7, sp, #0
 80121b6:	6078      	str	r0, [r7, #4]
    return HAL::beginFrame();
 80121b8:	687b      	ldr	r3, [r7, #4]
 80121ba:	4618      	mov	r0, r3
 80121bc:	f001 f9c6 	bl	801354c <_ZN8touchgfx3HAL10beginFrameEv>
 80121c0:	4603      	mov	r3, r0
}
 80121c2:	4618      	mov	r0, r3
 80121c4:	3708      	adds	r7, #8
 80121c6:	46bd      	mov	sp, r7
 80121c8:	bd80      	pop	{r7, pc}

080121ca <_ZN20TouchGFXGeneratedHAL8endFrameEv>:

void TouchGFXGeneratedHAL::endFrame()
{
 80121ca:	b580      	push	{r7, lr}
 80121cc:	b082      	sub	sp, #8
 80121ce:	af00      	add	r7, sp, #0
 80121d0:	6078      	str	r0, [r7, #4]
    // We must guard the next frame until we're done transferring all blocks over our display interface
    // through either a semaphore if user is running an OS or a simple variable if not
    // Wait until all blocks have been transmitted
    while (touchgfxDisplayDriverTransmitActive()){}
 80121d2:	bf00      	nop
 80121d4:	f7f1 fb90 	bl	80038f8 <touchgfxDisplayDriverTransmitActive>
 80121d8:	4603      	mov	r3, r0
 80121da:	2b00      	cmp	r3, #0
 80121dc:	bf14      	ite	ne
 80121de:	2301      	movne	r3, #1
 80121e0:	2300      	moveq	r3, #0
 80121e2:	b2db      	uxtb	r3, r3
 80121e4:	2b00      	cmp	r3, #0
 80121e6:	d1f5      	bne.n	80121d4 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xa>

    HAL::endFrame();
 80121e8:	687b      	ldr	r3, [r7, #4]
 80121ea:	4618      	mov	r0, r3
 80121ec:	f001 f9ba 	bl	8013564 <_ZN8touchgfx3HAL8endFrameEv>
    touchgfx::OSWrappers::signalRenderingDone();
 80121f0:	f7ff f8ce 	bl	8011390 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>
}
 80121f4:	bf00      	nop
 80121f6:	3708      	adds	r7, #8
 80121f8:	46bd      	mov	sp, r7
 80121fa:	bd80      	pop	{r7, pc}

080121fc <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    fbPtr += rect.y * lcd().framebufferStride() + rect.x * 2;
    return fbPtr;
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
 80121fc:	b480      	push	{r7}
 80121fe:	b083      	sub	sp, #12
 8012200:	af00      	add	r7, sp, #0
 8012202:	6078      	str	r0, [r7, #4]
    //getTFTFrameBuffer() not used for selected Frame Buffer Strategy
    return 0;
 8012204:	2300      	movs	r3, #0
}
 8012206:	4618      	mov	r0, r3
 8012208:	370c      	adds	r7, #12
 801220a:	46bd      	mov	sp, r7
 801220c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012210:	4770      	bx	lr

08012212 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
 8012212:	b480      	push	{r7}
 8012214:	b083      	sub	sp, #12
 8012216:	af00      	add	r7, sp, #0
 8012218:	6078      	str	r0, [r7, #4]
 801221a:	6039      	str	r1, [r7, #0]
    //setTFTFrameBuffer() not used for selected display interface
}
 801221c:	bf00      	nop
 801221e:	370c      	adds	r7, #12
 8012220:	46bd      	mov	sp, r7
 8012222:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012226:	4770      	bx	lr

08012228 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 8012228:	b580      	push	{r7, lr}
 801222a:	b088      	sub	sp, #32
 801222c:	af02      	add	r7, sp, #8
 801222e:	6078      	str	r0, [r7, #4]
 8012230:	6039      	str	r1, [r7, #0]
    HAL::flushFrameBuffer(rect);
 8012232:	687b      	ldr	r3, [r7, #4]
 8012234:	6839      	ldr	r1, [r7, #0]
 8012236:	4618      	mov	r0, r3
 8012238:	f001 f952 	bl	80134e0 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>
    // Once flushFrameBuffer() is called by the framework a block is already for transfer
    // Mark it ready for transfer and transmit it if user defined method isTransmittingData() does not return false
    // If data is not being transmitted, transfer the data with user defined method transmitFrameBufferBlock().
    frameBufferAllocator->markBlockReadyForTransfer();
 801223c:	687b      	ldr	r3, [r7, #4]
 801223e:	699a      	ldr	r2, [r3, #24]
 8012240:	687b      	ldr	r3, [r7, #4]
 8012242:	699b      	ldr	r3, [r3, #24]
 8012244:	681b      	ldr	r3, [r3, #0]
 8012246:	3304      	adds	r3, #4
 8012248:	681b      	ldr	r3, [r3, #0]
 801224a:	4610      	mov	r0, r2
 801224c:	4798      	blx	r3
    if (!touchgfxDisplayDriverTransmitActive())
 801224e:	f7f1 fb53 	bl	80038f8 <touchgfxDisplayDriverTransmitActive>
 8012252:	4603      	mov	r3, r0
 8012254:	2b00      	cmp	r3, #0
 8012256:	bf0c      	ite	eq
 8012258:	2301      	moveq	r3, #1
 801225a:	2300      	movne	r3, #0
 801225c:	b2db      	uxtb	r3, r3
 801225e:	2b00      	cmp	r3, #0
 8012260:	d021      	beq.n	80122a6 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0x7e>
    {
        touchgfx::Rect r;
 8012262:	f107 030c 	add.w	r3, r7, #12
 8012266:	4618      	mov	r0, r3
 8012268:	f7f7 fccb 	bl	8009c02 <_ZN8touchgfx4RectC1Ev>
        // Get pointer to block buffer and coordinates of the rect
        const uint8_t* pixels = frameBufferAllocator->getBlockForTransfer(r);
 801226c:	687b      	ldr	r3, [r7, #4]
 801226e:	699a      	ldr	r2, [r3, #24]
 8012270:	687b      	ldr	r3, [r7, #4]
 8012272:	699b      	ldr	r3, [r3, #24]
 8012274:	681b      	ldr	r3, [r3, #0]
 8012276:	330c      	adds	r3, #12
 8012278:	681b      	ldr	r3, [r3, #0]
 801227a:	f107 010c 	add.w	r1, r7, #12
 801227e:	4610      	mov	r0, r2
 8012280:	4798      	blx	r3
 8012282:	6178      	str	r0, [r7, #20]
        // Start transmission of the block
        touchgfxDisplayDriverTransmitBlock((uint8_t*)pixels, r.x, r.y, r.width, r.height);
 8012284:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8012288:	b299      	uxth	r1, r3
 801228a:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 801228e:	b29a      	uxth	r2, r3
 8012290:	f9b7 3010 	ldrsh.w	r3, [r7, #16]
 8012294:	b298      	uxth	r0, r3
 8012296:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 801229a:	b29b      	uxth	r3, r3
 801229c:	9300      	str	r3, [sp, #0]
 801229e:	4603      	mov	r3, r0
 80122a0:	6978      	ldr	r0, [r7, #20]
 80122a2:	f7f1 fb3b 	bl	800391c <touchgfxDisplayDriverTransmitBlock>
    }
}
 80122a6:	bf00      	nop
 80122a8:	3718      	adds	r7, #24
 80122aa:	46bd      	mov	sp, r7
 80122ac:	bd80      	pop	{r7, pc}

080122ae <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 80122ae:	b580      	push	{r7, lr}
 80122b0:	b084      	sub	sp, #16
 80122b2:	af00      	add	r7, sp, #0
 80122b4:	60f8      	str	r0, [r7, #12]
 80122b6:	60b9      	str	r1, [r7, #8]
 80122b8:	607a      	str	r2, [r7, #4]
 80122ba:	603b      	str	r3, [r7, #0]
    return HAL::blockCopy(dest, src, numBytes);
 80122bc:	68f8      	ldr	r0, [r7, #12]
 80122be:	683b      	ldr	r3, [r7, #0]
 80122c0:	687a      	ldr	r2, [r7, #4]
 80122c2:	68b9      	ldr	r1, [r7, #8]
 80122c4:	f001 fa7d 	bl	80137c2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>
 80122c8:	4603      	mov	r3, r0
}
 80122ca:	4618      	mov	r0, r3
 80122cc:	3710      	adds	r7, #16
 80122ce:	46bd      	mov	sp, r7
 80122d0:	bd80      	pop	{r7, pc}

080122d2 <_ZN8touchgfx34FrameBufferAllocatorWaitOnTransferEv>:
/**
 * This function is called by FrameBufferAllocator if no block is
 * available.
 */
void FrameBufferAllocatorWaitOnTransfer()
{
 80122d2:	b480      	push	{r7}
 80122d4:	af00      	add	r7, sp, #0
  /* NOTE: This function should not be modified, when the fuction is needed,
   *       FrameBufferAllocatorWaitOnTransfer should be implemented in the user file
   */
}
 80122d6:	bf00      	nop
 80122d8:	46bd      	mov	sp, r7
 80122da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80122de:	4770      	bx	lr

080122e0 <_ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv>:
 * Called by FrameBufferAllocator when a block is drawn and
 * therefore ready for transfer. The LCD driver should use this
 * method to start a transfer.
 */
void FrameBufferAllocatorSignalBlockDrawn()
{
 80122e0:	b480      	push	{r7}
 80122e2:	af00      	add	r7, sp, #0
  /* NOTE: This function should not be modified, when the fuction is needed,
   *       FrameBufferAllocatorSignalBlockDrawn should be implemented in the user file
   */
}
 80122e4:	bf00      	nop
 80122e6:	46bd      	mov	sp, r7
 80122e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80122ec:	4770      	bx	lr

080122ee <_ZN8touchgfx16startNewTransferEv>:

// A user must call touchgfx::startNewTransfer(); once transmitFrameBufferBlock() has successfully sent a block.
void startNewTransfer()
{
 80122ee:	b580      	push	{r7, lr}
 80122f0:	b086      	sub	sp, #24
 80122f2:	af02      	add	r7, sp, #8
    FrameBufferAllocator* fba = HAL::getInstance()->getFrameBufferAllocator();
 80122f4:	f7f8 fe3a 	bl	800af6c <_ZN8touchgfx3HAL11getInstanceEv>
 80122f8:	4603      	mov	r3, r0
 80122fa:	4618      	mov	r0, r3
 80122fc:	f7ff feb4 	bl	8012068 <_ZN8touchgfx3HAL23getFrameBufferAllocatorEv>
 8012300:	60f8      	str	r0, [r7, #12]

  // Free the previous transmitted block, marking it ready for rendering
    fba->freeBlockAfterTransfer();
 8012302:	68fb      	ldr	r3, [r7, #12]
 8012304:	681b      	ldr	r3, [r3, #0]
 8012306:	3318      	adds	r3, #24
 8012308:	681b      	ldr	r3, [r3, #0]
 801230a:	68f8      	ldr	r0, [r7, #12]
 801230c:	4798      	blx	r3
    if (fba->hasBlockReadyForTransfer())
 801230e:	68fb      	ldr	r3, [r7, #12]
 8012310:	681b      	ldr	r3, [r3, #0]
 8012312:	3308      	adds	r3, #8
 8012314:	681b      	ldr	r3, [r3, #0]
 8012316:	68f8      	ldr	r0, [r7, #12]
 8012318:	4798      	blx	r3
 801231a:	4603      	mov	r3, r0
 801231c:	2b00      	cmp	r3, #0
 801231e:	d01d      	beq.n	801235c <_ZN8touchgfx16startNewTransferEv+0x6e>
    {
        touchgfx::Rect r;
 8012320:	463b      	mov	r3, r7
 8012322:	4618      	mov	r0, r3
 8012324:	f7f7 fc6d 	bl	8009c02 <_ZN8touchgfx4RectC1Ev>
        // Get pointer to block buffer and coordinates of the rect
        const uint8_t* pixels = fba->getBlockForTransfer(r);
 8012328:	68fb      	ldr	r3, [r7, #12]
 801232a:	681b      	ldr	r3, [r3, #0]
 801232c:	330c      	adds	r3, #12
 801232e:	681b      	ldr	r3, [r3, #0]
 8012330:	463a      	mov	r2, r7
 8012332:	4611      	mov	r1, r2
 8012334:	68f8      	ldr	r0, [r7, #12]
 8012336:	4798      	blx	r3
 8012338:	60b8      	str	r0, [r7, #8]
        // Start transmission of the block
        touchgfxDisplayDriverTransmitBlock((uint8_t*)pixels, r.x, r.y, r.width, r.height);
 801233a:	f9b7 3000 	ldrsh.w	r3, [r7]
 801233e:	b299      	uxth	r1, r3
 8012340:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8012344:	b29a      	uxth	r2, r3
 8012346:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 801234a:	b298      	uxth	r0, r3
 801234c:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8012350:	b29b      	uxth	r3, r3
 8012352:	9300      	str	r3, [sp, #0]
 8012354:	4603      	mov	r3, r0
 8012356:	68b8      	ldr	r0, [r7, #8]
 8012358:	f7f1 fae0 	bl	800391c <touchgfxDisplayDriverTransmitBlock>
    }
}
 801235c:	bf00      	nop
 801235e:	3710      	adds	r7, #16
 8012360:	46bd      	mov	sp, r7
 8012362:	bd80      	pop	{r7, pc}

08012364 <DisplayDriver_TransferCompleteCallback>:

extern "C"
void DisplayDriver_TransferCompleteCallback()
{
 8012364:	b580      	push	{r7, lr}
 8012366:	af00      	add	r7, sp, #0
  // After completed transmission start new transfer if blocks are ready.
    touchgfx::startNewTransfer();
 8012368:	f7ff ffc1 	bl	80122ee <_ZN8touchgfx16startNewTransferEv>
}
 801236c:	bf00      	nop
 801236e:	bd80      	pop	{r7, pc}

08012370 <touchgfxSignalVSync>:
}

extern "C"
void touchgfxSignalVSync(void)
{
 8012370:	b580      	push	{r7, lr}
 8012372:	af00      	add	r7, sp, #0
    /* VSync has occurred, increment TouchGFX engine vsync counter */
    touchgfx::HAL::getInstance()->vSync();
 8012374:	f7f8 fdfa 	bl	800af6c <_ZN8touchgfx3HAL11getInstanceEv>
 8012378:	4603      	mov	r3, r0
 801237a:	4618      	mov	r0, r3
 801237c:	f7ff fe54 	bl	8012028 <_ZN8touchgfx3HAL5vSyncEv>

    /* VSync has occurred, signal TouchGFX engine */
    touchgfx::OSWrappers::signalVSync();
 8012380:	f7fe fffa 	bl	8011378 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
}
 8012384:	bf00      	nop
 8012386:	bd80      	pop	{r7, pc}

08012388 <_ZN8touchgfx20FrameBufferAllocatorC1Ev>:
class FrameBufferAllocator
 8012388:	b480      	push	{r7}
 801238a:	b083      	sub	sp, #12
 801238c:	af00      	add	r7, sp, #0
 801238e:	6078      	str	r0, [r7, #4]
 8012390:	4a04      	ldr	r2, [pc, #16]	; (80123a4 <_ZN8touchgfx20FrameBufferAllocatorC1Ev+0x1c>)
 8012392:	687b      	ldr	r3, [r7, #4]
 8012394:	601a      	str	r2, [r3, #0]
 8012396:	687b      	ldr	r3, [r7, #4]
 8012398:	4618      	mov	r0, r3
 801239a:	370c      	adds	r7, #12
 801239c:	46bd      	mov	sp, r7
 801239e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80123a2:	4770      	bx	lr
 80123a4:	0802ec68 	.word	0x0802ec68

080123a8 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev>:
 */
template <uint32_t block_size, uint32_t blocks, uint32_t bytes_pr_pixel>
class ManyBlockAllocator : public FrameBufferAllocator
{
public:
    ManyBlockAllocator()
 80123a8:	b5b0      	push	{r4, r5, r7, lr}
 80123aa:	b084      	sub	sp, #16
 80123ac:	af00      	add	r7, sp, #0
 80123ae:	6078      	str	r0, [r7, #4]
    {
 80123b0:	687b      	ldr	r3, [r7, #4]
 80123b2:	4618      	mov	r0, r3
 80123b4:	f7ff ffe8 	bl	8012388 <_ZN8touchgfx20FrameBufferAllocatorC1Ev>
 80123b8:	4a1a      	ldr	r2, [pc, #104]	; (8012424 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x7c>)
 80123ba:	687b      	ldr	r3, [r7, #4]
 80123bc:	601a      	str	r2, [r3, #0]
 80123be:	687b      	ldr	r3, [r7, #4]
 80123c0:	f503 53b4 	add.w	r3, r3, #5760	; 0x1680
 80123c4:	3308      	adds	r3, #8
 80123c6:	2402      	movs	r4, #2
 80123c8:	461d      	mov	r5, r3
 80123ca:	e004      	b.n	80123d6 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x2e>
 80123cc:	4628      	mov	r0, r5
 80123ce:	f7f7 fc18 	bl	8009c02 <_ZN8touchgfx4RectC1Ev>
 80123d2:	3508      	adds	r5, #8
 80123d4:	3c01      	subs	r4, #1
 80123d6:	2c00      	cmp	r4, #0
 80123d8:	daf8      	bge.n	80123cc <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x24>
        sendingBlock = -1;
 80123da:	687b      	ldr	r3, [r7, #4]
 80123dc:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80123e0:	461a      	mov	r2, r3
 80123e2:	f04f 33ff 	mov.w	r3, #4294967295
 80123e6:	f8c2 36a0 	str.w	r3, [r2, #1696]	; 0x6a0
        drawingBlock = -1;
 80123ea:	687b      	ldr	r3, [r7, #4]
 80123ec:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80123f0:	461a      	mov	r2, r3
 80123f2:	f04f 33ff 	mov.w	r3, #4294967295
 80123f6:	f8c2 36a4 	str.w	r3, [r2, #1700]	; 0x6a4
        for (uint32_t i = 0; i < blocks; i++)
 80123fa:	2300      	movs	r3, #0
 80123fc:	60fb      	str	r3, [r7, #12]
 80123fe:	e008      	b.n	8012412 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x6a>
        {
            state[i] = EMPTY;
 8012400:	687a      	ldr	r2, [r7, #4]
 8012402:	68fb      	ldr	r3, [r7, #12]
 8012404:	4413      	add	r3, r2
 8012406:	3304      	adds	r3, #4
 8012408:	2200      	movs	r2, #0
 801240a:	701a      	strb	r2, [r3, #0]
        for (uint32_t i = 0; i < blocks; i++)
 801240c:	68fb      	ldr	r3, [r7, #12]
 801240e:	3301      	adds	r3, #1
 8012410:	60fb      	str	r3, [r7, #12]
 8012412:	68fb      	ldr	r3, [r7, #12]
 8012414:	2b02      	cmp	r3, #2
 8012416:	d9f3      	bls.n	8012400 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x58>
        }
    }
 8012418:	687b      	ldr	r3, [r7, #4]
 801241a:	4618      	mov	r0, r3
 801241c:	3710      	adds	r7, #16
 801241e:	46bd      	mov	sp, r7
 8012420:	bdb0      	pop	{r4, r5, r7, pc}
 8012422:	bf00      	nop
 8012424:	0802eb64 	.word	0x0802eb64

08012428 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED1Ev>:
class ManyBlockAllocator : public FrameBufferAllocator
 8012428:	b580      	push	{r7, lr}
 801242a:	b082      	sub	sp, #8
 801242c:	af00      	add	r7, sp, #0
 801242e:	6078      	str	r0, [r7, #4]
 8012430:	4a05      	ldr	r2, [pc, #20]	; (8012448 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED1Ev+0x20>)
 8012432:	687b      	ldr	r3, [r7, #4]
 8012434:	601a      	str	r2, [r3, #0]
 8012436:	687b      	ldr	r3, [r7, #4]
 8012438:	4618      	mov	r0, r3
 801243a:	f7ff fdd5 	bl	8011fe8 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>
 801243e:	687b      	ldr	r3, [r7, #4]
 8012440:	4618      	mov	r0, r3
 8012442:	3708      	adds	r7, #8
 8012444:	46bd      	mov	sp, r7
 8012446:	bd80      	pop	{r7, pc}
 8012448:	0802eb64 	.word	0x0802eb64

0801244c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED0Ev>:
 801244c:	b580      	push	{r7, lr}
 801244e:	b082      	sub	sp, #8
 8012450:	af00      	add	r7, sp, #0
 8012452:	6078      	str	r0, [r7, #4]
 8012454:	6878      	ldr	r0, [r7, #4]
 8012456:	f7ff ffe7 	bl	8012428 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED1Ev>
 801245a:	f241 61a8 	movw	r1, #5800	; 0x16a8
 801245e:	6878      	ldr	r0, [r7, #4]
 8012460:	f018 f97f 	bl	802a762 <_ZdlPvj>
 8012464:	687b      	ldr	r3, [r7, #4]
 8012466:	4618      	mov	r0, r3
 8012468:	3708      	adds	r7, #8
 801246a:	46bd      	mov	sp, r7
 801246c:	bd80      	pop	{r7, pc}
	...

08012470 <_Z41__static_initialization_and_destruction_0ii>:
 8012470:	b580      	push	{r7, lr}
 8012472:	b082      	sub	sp, #8
 8012474:	af00      	add	r7, sp, #0
 8012476:	6078      	str	r0, [r7, #4]
 8012478:	6039      	str	r1, [r7, #0]
 801247a:	687b      	ldr	r3, [r7, #4]
 801247c:	2b01      	cmp	r3, #1
 801247e:	d107      	bne.n	8012490 <_Z41__static_initialization_and_destruction_0ii+0x20>
 8012480:	683b      	ldr	r3, [r7, #0]
 8012482:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8012486:	4293      	cmp	r3, r2
 8012488:	d102      	bne.n	8012490 <_Z41__static_initialization_and_destruction_0ii+0x20>
                   > blockAllocator;
 801248a:	4809      	ldr	r0, [pc, #36]	; (80124b0 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 801248c:	f7ff ff8c 	bl	80123a8 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev>
 8012490:	687b      	ldr	r3, [r7, #4]
 8012492:	2b00      	cmp	r3, #0
 8012494:	d107      	bne.n	80124a6 <_Z41__static_initialization_and_destruction_0ii+0x36>
 8012496:	683b      	ldr	r3, [r7, #0]
 8012498:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801249c:	4293      	cmp	r3, r2
 801249e:	d102      	bne.n	80124a6 <_Z41__static_initialization_and_destruction_0ii+0x36>
 80124a0:	4803      	ldr	r0, [pc, #12]	; (80124b0 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 80124a2:	f7ff ffc1 	bl	8012428 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED1Ev>
}
 80124a6:	bf00      	nop
 80124a8:	3708      	adds	r7, #8
 80124aa:	46bd      	mov	sp, r7
 80124ac:	bd80      	pop	{r7, pc}
 80124ae:	bf00      	nop
 80124b0:	20000b98 	.word	0x20000b98

080124b4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh>:
     * @param          height The height of the block.
     * @param [in,out] block  Pointer to pointer to return the block address in.
     *
     * @return The height of the allocated block.
     */
    virtual uint16_t allocateBlock(const uint16_t x, const uint16_t y, const uint16_t width, const uint16_t height, uint8_t** block)
 80124b4:	b580      	push	{r7, lr}
 80124b6:	b086      	sub	sp, #24
 80124b8:	af00      	add	r7, sp, #0
 80124ba:	60f8      	str	r0, [r7, #12]
 80124bc:	4608      	mov	r0, r1
 80124be:	4611      	mov	r1, r2
 80124c0:	461a      	mov	r2, r3
 80124c2:	4603      	mov	r3, r0
 80124c4:	817b      	strh	r3, [r7, #10]
 80124c6:	460b      	mov	r3, r1
 80124c8:	813b      	strh	r3, [r7, #8]
 80124ca:	4613      	mov	r3, r2
 80124cc:	80fb      	strh	r3, [r7, #6]
    {
        drawingBlock++;
 80124ce:	68fb      	ldr	r3, [r7, #12]
 80124d0:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80124d4:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 80124d8:	3301      	adds	r3, #1
 80124da:	68fa      	ldr	r2, [r7, #12]
 80124dc:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 80124e0:	f8c2 36a4 	str.w	r3, [r2, #1700]	; 0x6a4
        if (drawingBlock == blocks)
 80124e4:	68fb      	ldr	r3, [r7, #12]
 80124e6:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80124ea:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 80124ee:	2b03      	cmp	r3, #3
 80124f0:	d109      	bne.n	8012506 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x52>
        {
            drawingBlock = 0;
 80124f2:	68fb      	ldr	r3, [r7, #12]
 80124f4:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80124f8:	461a      	mov	r2, r3
 80124fa:	2300      	movs	r3, #0
 80124fc:	f8c2 36a4 	str.w	r3, [r2, #1700]	; 0x6a4
        }
        while (state[drawingBlock] != EMPTY)
 8012500:	e001      	b.n	8012506 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x52>
        {
            FrameBufferAllocatorWaitOnTransfer();
 8012502:	f7ff fee6 	bl	80122d2 <_ZN8touchgfx34FrameBufferAllocatorWaitOnTransferEv>
        while (state[drawingBlock] != EMPTY)
 8012506:	68fb      	ldr	r3, [r7, #12]
 8012508:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 801250c:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 8012510:	68fa      	ldr	r2, [r7, #12]
 8012512:	4413      	add	r3, r2
 8012514:	791b      	ldrb	r3, [r3, #4]
 8012516:	b2db      	uxtb	r3, r3
 8012518:	2b00      	cmp	r3, #0
 801251a:	bf14      	ite	ne
 801251c:	2301      	movne	r3, #1
 801251e:	2300      	moveq	r3, #0
 8012520:	b2db      	uxtb	r3, r3
 8012522:	2b00      	cmp	r3, #0
 8012524:	d1ed      	bne.n	8012502 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x4e>
        }
        assert(state[drawingBlock] == EMPTY);
 8012526:	68fb      	ldr	r3, [r7, #12]
 8012528:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 801252c:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 8012530:	68fa      	ldr	r2, [r7, #12]
 8012532:	4413      	add	r3, r2
 8012534:	791b      	ldrb	r3, [r3, #4]
 8012536:	b2db      	uxtb	r3, r3
 8012538:	2b00      	cmp	r3, #0
 801253a:	d005      	beq.n	8012548 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x94>
 801253c:	4b38      	ldr	r3, [pc, #224]	; (8012620 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x16c>)
 801253e:	4a39      	ldr	r2, [pc, #228]	; (8012624 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x170>)
 8012540:	21aa      	movs	r1, #170	; 0xaa
 8012542:	4839      	ldr	r0, [pc, #228]	; (8012628 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x174>)
 8012544:	f018 fefe 	bl	802b344 <__assert_func>
        state[drawingBlock] = ALLOCATED;
 8012548:	68fb      	ldr	r3, [r7, #12]
 801254a:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 801254e:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 8012552:	68fa      	ldr	r2, [r7, #12]
 8012554:	4413      	add	r3, r2
 8012556:	2201      	movs	r2, #1
 8012558:	711a      	strb	r2, [r3, #4]
        const int32_t stride = width * bytes_pr_pixel;
 801255a:	88fb      	ldrh	r3, [r7, #6]
 801255c:	005b      	lsls	r3, r3, #1
 801255e:	617b      	str	r3, [r7, #20]
        const int32_t lines = block_size / stride;
 8012560:	697b      	ldr	r3, [r7, #20]
 8012562:	f44f 62f0 	mov.w	r2, #1920	; 0x780
 8012566:	fbb2 f3f3 	udiv	r3, r2, r3
 801256a:	613b      	str	r3, [r7, #16]
        *block = (uint8_t*)&memory[drawingBlock][0];
 801256c:	68fb      	ldr	r3, [r7, #12]
 801256e:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8012572:	f8d3 26a4 	ldr.w	r2, [r3, #1700]	; 0x6a4
 8012576:	4613      	mov	r3, r2
 8012578:	011b      	lsls	r3, r3, #4
 801257a:	1a9b      	subs	r3, r3, r2
 801257c:	01db      	lsls	r3, r3, #7
 801257e:	3308      	adds	r3, #8
 8012580:	68fa      	ldr	r2, [r7, #12]
 8012582:	441a      	add	r2, r3
 8012584:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8012586:	601a      	str	r2, [r3, #0]
        blockRect[drawingBlock].x = x;
 8012588:	68fb      	ldr	r3, [r7, #12]
 801258a:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 801258e:	f8d3 26a4 	ldr.w	r2, [r3, #1700]	; 0x6a4
 8012592:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 8012596:	68fb      	ldr	r3, [r7, #12]
 8012598:	f202 22d1 	addw	r2, r2, #721	; 0x2d1
 801259c:	f823 1032 	strh.w	r1, [r3, r2, lsl #3]
        blockRect[drawingBlock].y = y;
 80125a0:	68fb      	ldr	r3, [r7, #12]
 80125a2:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80125a6:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 80125aa:	f9b7 1008 	ldrsh.w	r1, [r7, #8]
 80125ae:	68fa      	ldr	r2, [r7, #12]
 80125b0:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 80125b4:	00db      	lsls	r3, r3, #3
 80125b6:	4413      	add	r3, r2
 80125b8:	460a      	mov	r2, r1
 80125ba:	805a      	strh	r2, [r3, #2]
        blockRect[drawingBlock].width = width;
 80125bc:	68fb      	ldr	r3, [r7, #12]
 80125be:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80125c2:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 80125c6:	f9b7 1006 	ldrsh.w	r1, [r7, #6]
 80125ca:	68fa      	ldr	r2, [r7, #12]
 80125cc:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 80125d0:	00db      	lsls	r3, r3, #3
 80125d2:	4413      	add	r3, r2
 80125d4:	460a      	mov	r2, r1
 80125d6:	809a      	strh	r2, [r3, #4]
        blockRect[drawingBlock].height = MIN(height, lines);
 80125d8:	8c3a      	ldrh	r2, [r7, #32]
 80125da:	693b      	ldr	r3, [r7, #16]
 80125dc:	429a      	cmp	r2, r3
 80125de:	bfa8      	it	ge
 80125e0:	461a      	movge	r2, r3
 80125e2:	68fb      	ldr	r3, [r7, #12]
 80125e4:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80125e8:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 80125ec:	b211      	sxth	r1, r2
 80125ee:	68fa      	ldr	r2, [r7, #12]
 80125f0:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 80125f4:	00db      	lsls	r3, r3, #3
 80125f6:	4413      	add	r3, r2
 80125f8:	460a      	mov	r2, r1
 80125fa:	80da      	strh	r2, [r3, #6]
        return blockRect[drawingBlock].height;
 80125fc:	68fb      	ldr	r3, [r7, #12]
 80125fe:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8012602:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 8012606:	68fa      	ldr	r2, [r7, #12]
 8012608:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 801260c:	00db      	lsls	r3, r3, #3
 801260e:	4413      	add	r3, r2
 8012610:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8012614:	b29b      	uxth	r3, r3
    }
 8012616:	4618      	mov	r0, r3
 8012618:	3718      	adds	r7, #24
 801261a:	46bd      	mov	sp, r7
 801261c:	bd80      	pop	{r7, pc}
 801261e:	bf00      	nop
 8012620:	0802d7c4 	.word	0x0802d7c4
 8012624:	0802d7e4 	.word	0x0802d7e4
 8012628:	0802d918 	.word	0x0802d918

0801262c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv>:

    /** Marks a previously allocated block as ready to be transferred to the LCD. */
    virtual void markBlockReadyForTransfer()
 801262c:	b580      	push	{r7, lr}
 801262e:	b082      	sub	sp, #8
 8012630:	af00      	add	r7, sp, #0
 8012632:	6078      	str	r0, [r7, #4]
    {
        assert(state[drawingBlock] == ALLOCATED);
 8012634:	687b      	ldr	r3, [r7, #4]
 8012636:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 801263a:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 801263e:	687a      	ldr	r2, [r7, #4]
 8012640:	4413      	add	r3, r2
 8012642:	791b      	ldrb	r3, [r3, #4]
 8012644:	b2db      	uxtb	r3, r3
 8012646:	2b01      	cmp	r3, #1
 8012648:	d005      	beq.n	8012656 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv+0x2a>
 801264a:	4b0a      	ldr	r3, [pc, #40]	; (8012674 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv+0x48>)
 801264c:	4a0a      	ldr	r2, [pc, #40]	; (8012678 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv+0x4c>)
 801264e:	21b9      	movs	r1, #185	; 0xb9
 8012650:	480a      	ldr	r0, [pc, #40]	; (801267c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv+0x50>)
 8012652:	f018 fe77 	bl	802b344 <__assert_func>
        state[drawingBlock] = DRAWN;
 8012656:	687b      	ldr	r3, [r7, #4]
 8012658:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 801265c:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 8012660:	687a      	ldr	r2, [r7, #4]
 8012662:	4413      	add	r3, r2
 8012664:	2202      	movs	r2, #2
 8012666:	711a      	strb	r2, [r3, #4]
        FrameBufferAllocatorSignalBlockDrawn();
 8012668:	f7ff fe3a 	bl	80122e0 <_ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv>
    }
 801266c:	bf00      	nop
 801266e:	3708      	adds	r7, #8
 8012670:	46bd      	mov	sp, r7
 8012672:	bd80      	pop	{r7, pc}
 8012674:	0802d96c 	.word	0x0802d96c
 8012678:	0802d990 	.word	0x0802d990
 801267c:	0802d918 	.word	0x0802d918

08012680 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv>:
    /**
     * Check if a block is ready for transfer to the LCD.
     *
     * @return True if a block is ready for transfer.
     */
    virtual bool hasBlockReadyForTransfer()
 8012680:	b480      	push	{r7}
 8012682:	b085      	sub	sp, #20
 8012684:	af00      	add	r7, sp, #0
 8012686:	6078      	str	r0, [r7, #4]
    {
        for (uint32_t i = 0; i < blocks; i++)
 8012688:	2300      	movs	r3, #0
 801268a:	60fb      	str	r3, [r7, #12]
 801268c:	e011      	b.n	80126b2 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv+0x32>
        {
            if (state[i] == DRAWN)
 801268e:	687a      	ldr	r2, [r7, #4]
 8012690:	68fb      	ldr	r3, [r7, #12]
 8012692:	4413      	add	r3, r2
 8012694:	3304      	adds	r3, #4
 8012696:	781b      	ldrb	r3, [r3, #0]
 8012698:	b2db      	uxtb	r3, r3
 801269a:	2b02      	cmp	r3, #2
 801269c:	bf0c      	ite	eq
 801269e:	2301      	moveq	r3, #1
 80126a0:	2300      	movne	r3, #0
 80126a2:	b2db      	uxtb	r3, r3
 80126a4:	2b00      	cmp	r3, #0
 80126a6:	d001      	beq.n	80126ac <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv+0x2c>
            {
                return true;
 80126a8:	2301      	movs	r3, #1
 80126aa:	e006      	b.n	80126ba <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv+0x3a>
        for (uint32_t i = 0; i < blocks; i++)
 80126ac:	68fb      	ldr	r3, [r7, #12]
 80126ae:	3301      	adds	r3, #1
 80126b0:	60fb      	str	r3, [r7, #12]
 80126b2:	68fb      	ldr	r3, [r7, #12]
 80126b4:	2b02      	cmp	r3, #2
 80126b6:	d9ea      	bls.n	801268e <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv+0xe>
            }
        }
        return false;
 80126b8:	2300      	movs	r3, #0
    }
 80126ba:	4618      	mov	r0, r3
 80126bc:	3714      	adds	r7, #20
 80126be:	46bd      	mov	sp, r7
 80126c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80126c4:	4770      	bx	lr
	...

080126c8 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE>:
     *
     * @param [in,out] rect Reference to rect to write block x, y, width, and height.
     *
     * @return Returns the address of the block ready for transfer.
     */
    virtual const uint8_t* getBlockForTransfer(Rect& rect)
 80126c8:	b580      	push	{r7, lr}
 80126ca:	b082      	sub	sp, #8
 80126cc:	af00      	add	r7, sp, #0
 80126ce:	6078      	str	r0, [r7, #4]
 80126d0:	6039      	str	r1, [r7, #0]
    {
        sendingBlock++;
 80126d2:	687b      	ldr	r3, [r7, #4]
 80126d4:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80126d8:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 80126dc:	3301      	adds	r3, #1
 80126de:	687a      	ldr	r2, [r7, #4]
 80126e0:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 80126e4:	f8c2 36a0 	str.w	r3, [r2, #1696]	; 0x6a0
        if (sendingBlock == blocks)
 80126e8:	687b      	ldr	r3, [r7, #4]
 80126ea:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80126ee:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 80126f2:	2b03      	cmp	r3, #3
 80126f4:	d106      	bne.n	8012704 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x3c>
        {
            sendingBlock = 0;
 80126f6:	687b      	ldr	r3, [r7, #4]
 80126f8:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80126fc:	461a      	mov	r2, r3
 80126fe:	2300      	movs	r3, #0
 8012700:	f8c2 36a0 	str.w	r3, [r2, #1696]	; 0x6a0
        }
        assert(state[sendingBlock] == DRAWN);
 8012704:	687b      	ldr	r3, [r7, #4]
 8012706:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 801270a:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 801270e:	687a      	ldr	r2, [r7, #4]
 8012710:	4413      	add	r3, r2
 8012712:	791b      	ldrb	r3, [r3, #4]
 8012714:	b2db      	uxtb	r3, r3
 8012716:	2b02      	cmp	r3, #2
 8012718:	d005      	beq.n	8012726 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x5e>
 801271a:	4b16      	ldr	r3, [pc, #88]	; (8012774 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xac>)
 801271c:	4a16      	ldr	r2, [pc, #88]	; (8012778 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xb0>)
 801271e:	21dd      	movs	r1, #221	; 0xdd
 8012720:	4816      	ldr	r0, [pc, #88]	; (801277c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xb4>)
 8012722:	f018 fe0f 	bl	802b344 <__assert_func>
        rect = blockRect[sendingBlock];
 8012726:	687b      	ldr	r3, [r7, #4]
 8012728:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 801272c:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 8012730:	683a      	ldr	r2, [r7, #0]
 8012732:	6879      	ldr	r1, [r7, #4]
 8012734:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 8012738:	00db      	lsls	r3, r3, #3
 801273a:	440b      	add	r3, r1
 801273c:	cb03      	ldmia	r3!, {r0, r1}
 801273e:	6010      	str	r0, [r2, #0]
 8012740:	6051      	str	r1, [r2, #4]
        state[sendingBlock] = SENDING;
 8012742:	687b      	ldr	r3, [r7, #4]
 8012744:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8012748:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 801274c:	687a      	ldr	r2, [r7, #4]
 801274e:	4413      	add	r3, r2
 8012750:	2203      	movs	r2, #3
 8012752:	711a      	strb	r2, [r3, #4]
        return (const uint8_t*)&memory[sendingBlock][0];
 8012754:	687b      	ldr	r3, [r7, #4]
 8012756:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 801275a:	f8d3 26a0 	ldr.w	r2, [r3, #1696]	; 0x6a0
 801275e:	4613      	mov	r3, r2
 8012760:	011b      	lsls	r3, r3, #4
 8012762:	1a9b      	subs	r3, r3, r2
 8012764:	01db      	lsls	r3, r3, #7
 8012766:	3308      	adds	r3, #8
 8012768:	687a      	ldr	r2, [r7, #4]
 801276a:	4413      	add	r3, r2
    }
 801276c:	4618      	mov	r0, r3
 801276e:	3708      	adds	r7, #8
 8012770:	46bd      	mov	sp, r7
 8012772:	bd80      	pop	{r7, pc}
 8012774:	0802da64 	.word	0x0802da64
 8012778:	0802da84 	.word	0x0802da84
 801277c:	0802d918 	.word	0x0802d918

08012780 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv>:

    virtual const Rect& peekBlockForTransfer()
 8012780:	b580      	push	{r7, lr}
 8012782:	b084      	sub	sp, #16
 8012784:	af00      	add	r7, sp, #0
 8012786:	6078      	str	r0, [r7, #4]
    {
        int nextSendingBlock = sendingBlock + 1;
 8012788:	687b      	ldr	r3, [r7, #4]
 801278a:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 801278e:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 8012792:	3301      	adds	r3, #1
 8012794:	60fb      	str	r3, [r7, #12]
        if (nextSendingBlock == blocks)
 8012796:	68fb      	ldr	r3, [r7, #12]
 8012798:	2b03      	cmp	r3, #3
 801279a:	d101      	bne.n	80127a0 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x20>
        {
            nextSendingBlock = 0;
 801279c:	2300      	movs	r3, #0
 801279e:	60fb      	str	r3, [r7, #12]
        }
        assert(state[nextSendingBlock] == DRAWN);
 80127a0:	687a      	ldr	r2, [r7, #4]
 80127a2:	68fb      	ldr	r3, [r7, #12]
 80127a4:	4413      	add	r3, r2
 80127a6:	3304      	adds	r3, #4
 80127a8:	781b      	ldrb	r3, [r3, #0]
 80127aa:	b2db      	uxtb	r3, r3
 80127ac:	2b02      	cmp	r3, #2
 80127ae:	d005      	beq.n	80127bc <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x3c>
 80127b0:	4b07      	ldr	r3, [pc, #28]	; (80127d0 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x50>)
 80127b2:	4a08      	ldr	r2, [pc, #32]	; (80127d4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x54>)
 80127b4:	21ea      	movs	r1, #234	; 0xea
 80127b6:	4808      	ldr	r0, [pc, #32]	; (80127d8 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x58>)
 80127b8:	f018 fdc4 	bl	802b344 <__assert_func>
        return blockRect[nextSendingBlock];
 80127bc:	68fb      	ldr	r3, [r7, #12]
 80127be:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 80127c2:	00db      	lsls	r3, r3, #3
 80127c4:	687a      	ldr	r2, [r7, #4]
 80127c6:	4413      	add	r3, r2
    }
 80127c8:	4618      	mov	r0, r3
 80127ca:	3710      	adds	r7, #16
 80127cc:	46bd      	mov	sp, r7
 80127ce:	bd80      	pop	{r7, pc}
 80127d0:	0802db84 	.word	0x0802db84
 80127d4:	0802dba8 	.word	0x0802dba8
 80127d8:	0802d918 	.word	0x0802d918

080127dc <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13hasEmptyBlockEv>:

    virtual bool hasEmptyBlock()
 80127dc:	b480      	push	{r7}
 80127de:	b085      	sub	sp, #20
 80127e0:	af00      	add	r7, sp, #0
 80127e2:	6078      	str	r0, [r7, #4]
    {
        int nextDrawingBlock = drawingBlock + 1;
 80127e4:	687b      	ldr	r3, [r7, #4]
 80127e6:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80127ea:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 80127ee:	3301      	adds	r3, #1
 80127f0:	60fb      	str	r3, [r7, #12]
        if (nextDrawingBlock == blocks)
 80127f2:	68fb      	ldr	r3, [r7, #12]
 80127f4:	2b03      	cmp	r3, #3
 80127f6:	d101      	bne.n	80127fc <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13hasEmptyBlockEv+0x20>
        {
            nextDrawingBlock = 0;
 80127f8:	2300      	movs	r3, #0
 80127fa:	60fb      	str	r3, [r7, #12]
        }
        return (state[nextDrawingBlock] == EMPTY);
 80127fc:	687a      	ldr	r2, [r7, #4]
 80127fe:	68fb      	ldr	r3, [r7, #12]
 8012800:	4413      	add	r3, r2
 8012802:	3304      	adds	r3, #4
 8012804:	781b      	ldrb	r3, [r3, #0]
 8012806:	b2db      	uxtb	r3, r3
 8012808:	2b00      	cmp	r3, #0
 801280a:	bf0c      	ite	eq
 801280c:	2301      	moveq	r3, #1
 801280e:	2300      	movne	r3, #0
 8012810:	b2db      	uxtb	r3, r3
    }
 8012812:	4618      	mov	r0, r3
 8012814:	3714      	adds	r7, #20
 8012816:	46bd      	mov	sp, r7
 8012818:	f85d 7b04 	ldr.w	r7, [sp], #4
 801281c:	4770      	bx	lr
	...

08012820 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv>:
    /**
     * Free a block after transfer to the LCD.
     *
     * Marks a previously allocated block as transferred and ready to reuse.
     */
    virtual void freeBlockAfterTransfer()
 8012820:	b580      	push	{r7, lr}
 8012822:	b082      	sub	sp, #8
 8012824:	af00      	add	r7, sp, #0
 8012826:	6078      	str	r0, [r7, #4]
    {
        assert(state[sendingBlock] == SENDING);
 8012828:	687b      	ldr	r3, [r7, #4]
 801282a:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 801282e:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 8012832:	687a      	ldr	r2, [r7, #4]
 8012834:	4413      	add	r3, r2
 8012836:	791b      	ldrb	r3, [r3, #4]
 8012838:	b2db      	uxtb	r3, r3
 801283a:	2b03      	cmp	r3, #3
 801283c:	d005      	beq.n	801284a <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv+0x2a>
 801283e:	4b09      	ldr	r3, [pc, #36]	; (8012864 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv+0x44>)
 8012840:	4a09      	ldr	r2, [pc, #36]	; (8012868 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv+0x48>)
 8012842:	21ff      	movs	r1, #255	; 0xff
 8012844:	4809      	ldr	r0, [pc, #36]	; (801286c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv+0x4c>)
 8012846:	f018 fd7d 	bl	802b344 <__assert_func>
        state[sendingBlock] = EMPTY;
 801284a:	687b      	ldr	r3, [r7, #4]
 801284c:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8012850:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 8012854:	687a      	ldr	r2, [r7, #4]
 8012856:	4413      	add	r3, r2
 8012858:	2200      	movs	r2, #0
 801285a:	711a      	strb	r2, [r3, #4]
    }
 801285c:	bf00      	nop
 801285e:	3708      	adds	r7, #8
 8012860:	46bd      	mov	sp, r7
 8012862:	bd80      	pop	{r7, pc}
 8012864:	0802dc88 	.word	0x0802dc88
 8012868:	0802dca8 	.word	0x0802dca8
 801286c:	0802d918 	.word	0x0802d918

08012870 <_GLOBAL__sub_I__ZN8touchgfx5paint12setL8PaletteEPKh>:
 8012870:	b580      	push	{r7, lr}
 8012872:	af00      	add	r7, sp, #0
 8012874:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8012878:	2001      	movs	r0, #1
 801287a:	f7ff fdf9 	bl	8012470 <_Z41__static_initialization_and_destruction_0ii>
 801287e:	bd80      	pop	{r7, pc}

08012880 <_GLOBAL__sub_D__ZN8touchgfx5paint12setL8PaletteEPKh>:
 8012880:	b580      	push	{r7, lr}
 8012882:	af00      	add	r7, sp, #0
 8012884:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8012888:	2000      	movs	r0, #0
 801288a:	f7ff fdf1 	bl	8012470 <_Z41__static_initialization_and_destruction_0ii>
 801288e:	bd80      	pop	{r7, pc}

08012890 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8012890:	8880      	ldrh	r0, [r0, #4]
 8012892:	4770      	bx	lr

08012894 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8012894:	b570      	push	{r4, r5, r6, lr}
 8012896:	6803      	ldr	r3, [r0, #0]
 8012898:	4605      	mov	r5, r0
 801289a:	460c      	mov	r4, r1
 801289c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801289e:	2100      	movs	r1, #0
 80128a0:	4798      	blx	r3
 80128a2:	682b      	ldr	r3, [r5, #0]
 80128a4:	4606      	mov	r6, r0
 80128a6:	6a1b      	ldr	r3, [r3, #32]
 80128a8:	4628      	mov	r0, r5
 80128aa:	4798      	blx	r3
 80128ac:	1ba4      	subs	r4, r4, r6
 80128ae:	b2a4      	uxth	r4, r4
 80128b0:	fbb4 f0f0 	udiv	r0, r4, r0
 80128b4:	bd70      	pop	{r4, r5, r6, pc}

080128b6 <_ZN8touchgfx17AbstractPartition5clearEv>:
 80128b6:	2300      	movs	r3, #0
 80128b8:	8083      	strh	r3, [r0, #4]
 80128ba:	4770      	bx	lr

080128bc <_ZN8touchgfx17AbstractPartition8allocateEt>:
 80128bc:	b510      	push	{r4, lr}
 80128be:	6803      	ldr	r3, [r0, #0]
 80128c0:	8881      	ldrh	r1, [r0, #4]
 80128c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80128c4:	4604      	mov	r4, r0
 80128c6:	4798      	blx	r3
 80128c8:	88a3      	ldrh	r3, [r4, #4]
 80128ca:	3301      	adds	r3, #1
 80128cc:	80a3      	strh	r3, [r4, #4]
 80128ce:	bd10      	pop	{r4, pc}

080128d0 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 80128d0:	6803      	ldr	r3, [r0, #0]
 80128d2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80128d4:	4718      	bx	r3

080128d6 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 80128d6:	4770      	bx	lr

080128d8 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 80128d8:	4a02      	ldr	r2, [pc, #8]	; (80128e4 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 80128da:	6002      	str	r2, [r0, #0]
 80128dc:	2200      	movs	r2, #0
 80128de:	8082      	strh	r2, [r0, #4]
 80128e0:	4770      	bx	lr
 80128e2:	bf00      	nop
 80128e4:	0802ec94 	.word	0x0802ec94

080128e8 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 80128e8:	b510      	push	{r4, lr}
 80128ea:	6803      	ldr	r3, [r0, #0]
 80128ec:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 80128f0:	4604      	mov	r4, r0
 80128f2:	4798      	blx	r3
 80128f4:	b110      	cbz	r0, 80128fc <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 80128f6:	4620      	mov	r0, r4
 80128f8:	f7f7 fa1a 	bl	8009d30 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 80128fc:	bd10      	pop	{r4, pc}

080128fe <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 80128fe:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 8012902:	4770      	bx	lr

08012904 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 8012904:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 8012908:	4770      	bx	lr

0801290a <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 801290a:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 801290e:	4770      	bx	lr

08012910 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 8012910:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 8012914:	4770      	bx	lr

08012916 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 8012916:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012918:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 801291c:	461e      	mov	r6, r3
 801291e:	6803      	ldr	r3, [r0, #0]
 8012920:	460f      	mov	r7, r1
 8012922:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8012926:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 801292a:	4604      	mov	r4, r0
 801292c:	4615      	mov	r5, r2
 801292e:	4798      	blx	r3
 8012930:	b93e      	cbnz	r6, 8012942 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 8012932:	1bed      	subs	r5, r5, r7
 8012934:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 8012938:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 801293c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8012940:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012942:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 8012946:	e7f7      	b.n	8012938 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

08012948 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 8012948:	b510      	push	{r4, lr}
 801294a:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 801294e:	600c      	str	r4, [r1, #0]
 8012950:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 8012954:	6011      	str	r1, [r2, #0]
 8012956:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 801295a:	801a      	strh	r2, [r3, #0]
 801295c:	9b02      	ldr	r3, [sp, #8]
 801295e:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 8012962:	801a      	strh	r2, [r3, #0]
 8012964:	bd10      	pop	{r4, pc}

08012966 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 8012966:	b510      	push	{r4, lr}
 8012968:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 801296c:	600c      	str	r4, [r1, #0]
 801296e:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 8012972:	6011      	str	r1, [r2, #0]
 8012974:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 8012978:	801a      	strh	r2, [r3, #0]
 801297a:	bd10      	pop	{r4, pc}

0801297c <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 801297c:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 8012980:	600b      	str	r3, [r1, #0]
 8012982:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 8012986:	6013      	str	r3, [r2, #0]
 8012988:	4770      	bx	lr

0801298a <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 801298a:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 801298e:	4770      	bx	lr

08012990 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 8012990:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 8012994:	4770      	bx	lr

08012996 <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 8012996:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 801299a:	4770      	bx	lr

0801299c <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 801299c:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 80129a0:	4770      	bx	lr

080129a2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 80129a2:	b570      	push	{r4, r5, r6, lr}
 80129a4:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 80129a8:	428d      	cmp	r5, r1
 80129aa:	bfb8      	it	lt
 80129ac:	460d      	movlt	r5, r1
 80129ae:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 80129b2:	428d      	cmp	r5, r1
 80129b4:	4604      	mov	r4, r0
 80129b6:	bfa8      	it	ge
 80129b8:	460d      	movge	r5, r1
 80129ba:	4616      	mov	r6, r2
 80129bc:	b99a      	cbnz	r2, 80129e6 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 80129be:	6803      	ldr	r3, [r0, #0]
 80129c0:	4629      	mov	r1, r5
 80129c2:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80129c6:	4798      	blx	r3
 80129c8:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 80129cc:	b368      	cbz	r0, 8012a2a <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 80129ce:	6803      	ldr	r3, [r0, #0]
 80129d0:	68db      	ldr	r3, [r3, #12]
 80129d2:	4798      	blx	r3
 80129d4:	b348      	cbz	r0, 8012a2a <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 80129d6:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 80129da:	6803      	ldr	r3, [r0, #0]
 80129dc:	4621      	mov	r1, r4
 80129de:	689b      	ldr	r3, [r3, #8]
 80129e0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80129e4:	4718      	bx	r3
 80129e6:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 80129ea:	2b00      	cmp	r3, #0
 80129ec:	dd08      	ble.n	8012a00 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 80129ee:	f006 fc5b 	bl	80192a8 <_ZN8touchgfx11Application11getInstanceEv>
 80129f2:	4621      	mov	r1, r4
 80129f4:	3004      	adds	r0, #4
 80129f6:	f006 fc7c 	bl	80192f2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 80129fa:	2300      	movs	r3, #0
 80129fc:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 8012a00:	6823      	ldr	r3, [r4, #0]
 8012a02:	4620      	mov	r0, r4
 8012a04:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8012a08:	4798      	blx	r3
 8012a0a:	2300      	movs	r3, #0
 8012a0c:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 8012a10:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 8012a14:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 8012a18:	f006 fc46 	bl	80192a8 <_ZN8touchgfx11Application11getInstanceEv>
 8012a1c:	4621      	mov	r1, r4
 8012a1e:	3004      	adds	r0, #4
 8012a20:	f006 fd10 	bl	8019444 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 8012a24:	2301      	movs	r3, #1
 8012a26:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 8012a2a:	bd70      	pop	{r4, r5, r6, pc}

08012a2c <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 8012a2c:	b510      	push	{r4, lr}
 8012a2e:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 8012a32:	4299      	cmp	r1, r3
 8012a34:	bfb8      	it	lt
 8012a36:	4619      	movlt	r1, r3
 8012a38:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 8012a3c:	4299      	cmp	r1, r3
 8012a3e:	bfa8      	it	ge
 8012a40:	4619      	movge	r1, r3
 8012a42:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 8012a46:	428b      	cmp	r3, r1
 8012a48:	4604      	mov	r4, r0
 8012a4a:	d010      	beq.n	8012a6e <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 8012a4c:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 8012a50:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 8012a54:	b158      	cbz	r0, 8012a6e <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 8012a56:	6803      	ldr	r3, [r0, #0]
 8012a58:	68db      	ldr	r3, [r3, #12]
 8012a5a:	4798      	blx	r3
 8012a5c:	b138      	cbz	r0, 8012a6e <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 8012a5e:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 8012a62:	6803      	ldr	r3, [r0, #0]
 8012a64:	4621      	mov	r1, r4
 8012a66:	689b      	ldr	r3, [r3, #8]
 8012a68:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012a6c:	4718      	bx	r3
 8012a6e:	bd10      	pop	{r4, pc}

08012a70 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 8012a70:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012a72:	4604      	mov	r4, r0
 8012a74:	460d      	mov	r5, r1
 8012a76:	b1a9      	cbz	r1, 8012aa4 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 8012a78:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 8012a7c:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 8012a80:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 8012a84:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 8012a88:	ab01      	add	r3, sp, #4
 8012a8a:	1a12      	subs	r2, r2, r0
 8012a8c:	1b89      	subs	r1, r1, r6
 8012a8e:	1a38      	subs	r0, r7, r0
 8012a90:	f007 fe98 	bl	801a7c4 <_ZN8touchgfx6muldivElllRl>
 8012a94:	4629      	mov	r1, r5
 8012a96:	ab01      	add	r3, sp, #4
 8012a98:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 8012a9c:	4430      	add	r0, r6
 8012a9e:	f007 fe91 	bl	801a7c4 <_ZN8touchgfx6muldivElllRl>
 8012aa2:	b285      	uxth	r5, r0
 8012aa4:	4628      	mov	r0, r5
 8012aa6:	b003      	add	sp, #12
 8012aa8:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012aaa <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 8012aaa:	b570      	push	{r4, r5, r6, lr}
 8012aac:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 8012ab0:	4604      	mov	r4, r0
 8012ab2:	2b00      	cmp	r3, #0
 8012ab4:	d035      	beq.n	8012b22 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8012ab6:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 8012aba:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 8012abe:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 8012ac2:	3001      	adds	r0, #1
 8012ac4:	1ad2      	subs	r2, r2, r3
 8012ac6:	b212      	sxth	r2, r2
 8012ac8:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 8012acc:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8012ad0:	2100      	movs	r1, #0
 8012ad2:	b280      	uxth	r0, r0
 8012ad4:	47a8      	blx	r5
 8012ad6:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 8012ada:	6823      	ldr	r3, [r4, #0]
 8012adc:	4401      	add	r1, r0
 8012ade:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8012ae2:	4620      	mov	r0, r4
 8012ae4:	4798      	blx	r3
 8012ae6:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8012aea:	429a      	cmp	r2, r3
 8012aec:	db19      	blt.n	8012b22 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8012aee:	2500      	movs	r5, #0
 8012af0:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 8012af4:	f006 fbd8 	bl	80192a8 <_ZN8touchgfx11Application11getInstanceEv>
 8012af8:	4621      	mov	r1, r4
 8012afa:	3004      	adds	r0, #4
 8012afc:	f006 fbf9 	bl	80192f2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8012b00:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8012b04:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 8012b08:	b158      	cbz	r0, 8012b22 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8012b0a:	6803      	ldr	r3, [r0, #0]
 8012b0c:	68db      	ldr	r3, [r3, #12]
 8012b0e:	4798      	blx	r3
 8012b10:	b138      	cbz	r0, 8012b22 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8012b12:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8012b16:	6803      	ldr	r3, [r0, #0]
 8012b18:	4621      	mov	r1, r4
 8012b1a:	689b      	ldr	r3, [r3, #8]
 8012b1c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012b20:	4718      	bx	r3
 8012b22:	bd70      	pop	{r4, r5, r6, pc}

08012b24 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 8012b24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012b28:	4604      	mov	r4, r0
 8012b2a:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 8012b2e:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 8012b32:	460e      	mov	r6, r1
 8012b34:	4615      	mov	r5, r2
 8012b36:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8012b3a:	4619      	mov	r1, r3
 8012b3c:	463a      	mov	r2, r7
 8012b3e:	3058      	adds	r0, #88	; 0x58
 8012b40:	4698      	mov	r8, r3
 8012b42:	f7f7 f9ae 	bl	8009ea2 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8012b46:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 8012b4a:	4446      	add	r6, r8
 8012b4c:	42b3      	cmp	r3, r6
 8012b4e:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8012b52:	bfb8      	it	lt
 8012b54:	8126      	strhlt	r6, [r4, #8]
 8012b56:	443d      	add	r5, r7
 8012b58:	42ab      	cmp	r3, r5
 8012b5a:	bfb8      	it	lt
 8012b5c:	8165      	strhlt	r5, [r4, #10]
 8012b5e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012b62 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 8012b62:	b510      	push	{r4, lr}
 8012b64:	4604      	mov	r4, r0
 8012b66:	302c      	adds	r0, #44	; 0x2c
 8012b68:	f003 ffaa 	bl	8016ac0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8012b6c:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 8012b70:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 8012b74:	4620      	mov	r0, r4
 8012b76:	f7f7 f994 	bl	8009ea2 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8012b7a:	bd10      	pop	{r4, pc}

08012b7c <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 8012b7c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012b7e:	4604      	mov	r4, r0
 8012b80:	4626      	mov	r6, r4
 8012b82:	2500      	movs	r5, #0
 8012b84:	f7f7 f884 	bl	8009c90 <_ZN8touchgfx8DrawableC1Ev>
 8012b88:	4b23      	ldr	r3, [pc, #140]	; (8012c18 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 8012b8a:	62a5      	str	r5, [r4, #40]	; 0x28
 8012b8c:	f846 3b2c 	str.w	r3, [r6], #44
 8012b90:	2226      	movs	r2, #38	; 0x26
 8012b92:	4629      	mov	r1, r5
 8012b94:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8012b98:	4630      	mov	r0, r6
 8012b9a:	f8ad 7004 	strh.w	r7, [sp, #4]
 8012b9e:	f018 fdd6 	bl	802b74e <memset>
 8012ba2:	4630      	mov	r0, r6
 8012ba4:	f7f7 f874 	bl	8009c90 <_ZN8touchgfx8DrawableC1Ev>
 8012ba8:	a902      	add	r1, sp, #8
 8012baa:	4b1c      	ldr	r3, [pc, #112]	; (8012c1c <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 8012bac:	62e3      	str	r3, [r4, #44]	; 0x2c
 8012bae:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 8012bb2:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 8012bb6:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 8012bba:	4630      	mov	r0, r6
 8012bbc:	f104 0758 	add.w	r7, r4, #88	; 0x58
 8012bc0:	f003 ff7e 	bl	8016ac0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8012bc4:	4638      	mov	r0, r7
 8012bc6:	f7f7 f863 	bl	8009c90 <_ZN8touchgfx8DrawableC1Ev>
 8012bca:	4b15      	ldr	r3, [pc, #84]	; (8012c20 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 8012bcc:	65a3      	str	r3, [r4, #88]	; 0x58
 8012bce:	2364      	movs	r3, #100	; 0x64
 8012bd0:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 8012bd4:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 8012bd8:	4b12      	ldr	r3, [pc, #72]	; (8012c24 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 8012bda:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 8012bde:	4629      	mov	r1, r5
 8012be0:	4630      	mov	r0, r6
 8012be2:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 8012be6:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 8012bea:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 8012bee:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 8012bf2:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 8012bf6:	f7f7 f8da 	bl	8009dae <_ZN8touchgfx8Drawable4setXEs>
 8012bfa:	4629      	mov	r1, r5
 8012bfc:	4630      	mov	r0, r6
 8012bfe:	f7f7 f8e5 	bl	8009dcc <_ZN8touchgfx8Drawable4setYEs>
 8012c02:	4631      	mov	r1, r6
 8012c04:	4620      	mov	r0, r4
 8012c06:	f000 f9d7 	bl	8012fb8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012c0a:	4620      	mov	r0, r4
 8012c0c:	4639      	mov	r1, r7
 8012c0e:	f000 f9d3 	bl	8012fb8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012c12:	4620      	mov	r0, r4
 8012c14:	b003      	add	sp, #12
 8012c16:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012c18:	0802ecc8 	.word	0x0802ecc8
 8012c1c:	0802f894 	.word	0x0802f894
 8012c20:	0802ef4c 	.word	0x0802ef4c
 8012c24:	0801ae8f 	.word	0x0801ae8f

08012c28 <_ZNK8touchgfx12DigitalClock14getDisplayModeEv>:
 8012c28:	f890 002f 	ldrb.w	r0, [r0, #47]	; 0x2f
 8012c2c:	4770      	bx	lr

08012c2e <_ZNK8touchgfx12DigitalClock17invalidateContentEv>:
 8012c2e:	b510      	push	{r4, lr}
 8012c30:	6803      	ldr	r3, [r0, #0]
 8012c32:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8012c36:	4604      	mov	r4, r0
 8012c38:	4798      	blx	r3
 8012c3a:	b110      	cbz	r0, 8012c42 <_ZNK8touchgfx12DigitalClock17invalidateContentEv+0x14>
 8012c3c:	4620      	mov	r0, r4
 8012c3e:	f7f7 f877 	bl	8009d30 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 8012c42:	bd10      	pop	{r4, pc}

08012c44 <_ZN8touchgfx12DigitalClock8setWidthEs>:
 8012c44:	b508      	push	{r3, lr}
 8012c46:	3034      	adds	r0, #52	; 0x34
 8012c48:	f820 1c2c 	strh.w	r1, [r0, #-44]
 8012c4c:	f7f7 fb08 	bl	800a260 <_ZN8touchgfx8TextArea8setWidthEs>
 8012c50:	bd08      	pop	{r3, pc}

08012c52 <_ZN8touchgfx12DigitalClock9setHeightEs>:
 8012c52:	b508      	push	{r3, lr}
 8012c54:	3034      	adds	r0, #52	; 0x34
 8012c56:	f820 1c2a 	strh.w	r1, [r0, #-42]
 8012c5a:	f7f7 fb21 	bl	800a2a0 <_ZN8touchgfx8TextArea9setHeightEs>
 8012c5e:	bd08      	pop	{r3, pc}

08012c60 <_ZN8touchgfx12DigitalClock12setBaselineYEs>:
 8012c60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012c64:	4a10      	ldr	r2, [pc, #64]	; (8012ca8 <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x48>)
 8012c66:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 8012c6a:	8812      	ldrh	r2, [r2, #0]
 8012c6c:	429a      	cmp	r2, r3
 8012c6e:	4604      	mov	r4, r0
 8012c70:	460d      	mov	r5, r1
 8012c72:	d916      	bls.n	8012ca2 <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x42>
 8012c74:	6802      	ldr	r2, [r0, #0]
 8012c76:	f9b0 7004 	ldrsh.w	r7, [r0, #4]
 8012c7a:	6d96      	ldr	r6, [r2, #88]	; 0x58
 8012c7c:	4a0b      	ldr	r2, [pc, #44]	; (8012cac <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x4c>)
 8012c7e:	6812      	ldr	r2, [r2, #0]
 8012c80:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8012c84:	4b0a      	ldr	r3, [pc, #40]	; (8012cb0 <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x50>)
 8012c86:	681b      	ldr	r3, [r3, #0]
 8012c88:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8012c8c:	6803      	ldr	r3, [r0, #0]
 8012c8e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012c90:	4798      	blx	r3
 8012c92:	1a2a      	subs	r2, r5, r0
 8012c94:	4639      	mov	r1, r7
 8012c96:	4620      	mov	r0, r4
 8012c98:	4633      	mov	r3, r6
 8012c9a:	b212      	sxth	r2, r2
 8012c9c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8012ca0:	4718      	bx	r3
 8012ca2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012ca6:	bf00      	nop
 8012ca8:	200022a8 	.word	0x200022a8
 8012cac:	200022a4 	.word	0x200022a4
 8012cb0:	200022ac 	.word	0x200022ac

08012cb4 <_ZN8touchgfx12DigitalClock8setAlphaEh>:
 8012cb4:	f880 106a 	strb.w	r1, [r0, #106]	; 0x6a
 8012cb8:	4770      	bx	lr

08012cba <_ZNK8touchgfx12DigitalClock8getAlphaEv>:
 8012cba:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 8012cbe:	4770      	bx	lr

08012cc0 <_ZN8touchgfx12DigitalClock8setColorENS_9colortypeE>:
 8012cc0:	b508      	push	{r3, lr}
 8012cc2:	3034      	adds	r0, #52	; 0x34
 8012cc4:	6301      	str	r1, [r0, #48]	; 0x30
 8012cc6:	f7f7 f833 	bl	8009d30 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 8012cca:	bd08      	pop	{r3, pc}

08012ccc <_ZNK8touchgfx12DigitalClock8getColorEv>:
 8012ccc:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8012cce:	4770      	bx	lr

08012cd0 <_ZNK8touchgfx12DigitalClock12getTextWidthEv>:
 8012cd0:	3034      	adds	r0, #52	; 0x34
 8012cd2:	f002 bf85 	b.w	8015be0 <_ZNK8touchgfx8TextArea12getTextWidthEv>

08012cd6 <_ZN8touchgfx12DigitalClock12setTypedTextENS_9TypedTextE>:
 8012cd6:	b538      	push	{r3, r4, r5, lr}
 8012cd8:	f100 0434 	add.w	r4, r0, #52	; 0x34
 8012cdc:	460d      	mov	r5, r1
 8012cde:	4620      	mov	r0, r4
 8012ce0:	f7f7 f826 	bl	8009d30 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 8012ce4:	4620      	mov	r0, r4
 8012ce6:	4629      	mov	r1, r5
 8012ce8:	f003 faae 	bl	8016248 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8012cec:	4620      	mov	r0, r4
 8012cee:	f7f7 f81f 	bl	8009d30 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 8012cf2:	bd38      	pop	{r3, r4, r5, pc}

08012cf4 <_ZN8touchgfx12DigitalClock11updateClockEv>:
 8012cf4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8012cf8:	4604      	mov	r4, r0
 8012cfa:	f100 0634 	add.w	r6, r0, #52	; 0x34
 8012cfe:	4630      	mov	r0, r6
 8012d00:	f7f7 f816 	bl	8009d30 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 8012d04:	f894 302f 	ldrb.w	r3, [r4, #47]	; 0x2f
 8012d08:	bb03      	cbnz	r3, 8012d4c <_ZN8touchgfx12DigitalClock11updateClockEv+0x58>
 8012d0a:	f894 3030 	ldrb.w	r3, [r4, #48]	; 0x30
 8012d0e:	4a41      	ldr	r2, [pc, #260]	; (8012e14 <_ZN8touchgfx12DigitalClock11updateClockEv+0x120>)
 8012d10:	4d41      	ldr	r5, [pc, #260]	; (8012e18 <_ZN8touchgfx12DigitalClock11updateClockEv+0x124>)
 8012d12:	4620      	mov	r0, r4
 8012d14:	2b00      	cmp	r3, #0
 8012d16:	bf08      	it	eq
 8012d18:	4615      	moveq	r5, r2
 8012d1a:	f000 f92a 	bl	8012f72 <_ZNK8touchgfx13AbstractClock16getCurrentHour12Ev>
 8012d1e:	4680      	mov	r8, r0
 8012d20:	4620      	mov	r0, r4
 8012d22:	f000 f939 	bl	8012f98 <_ZNK8touchgfx13AbstractClock16getCurrentMinuteEv>
 8012d26:	4681      	mov	r9, r0
 8012d28:	4620      	mov	r0, r4
 8012d2a:	f000 f92e 	bl	8012f8a <_ZNK8touchgfx13AbstractClock12getCurrentAMEv>
 8012d2e:	2800      	cmp	r0, #0
 8012d30:	bf14      	ite	ne
 8012d32:	2341      	movne	r3, #65	; 0x41
 8012d34:	2350      	moveq	r3, #80	; 0x50
 8012d36:	f104 0780 	add.w	r7, r4, #128	; 0x80
 8012d3a:	e9cd 9300 	strd	r9, r3, [sp]
 8012d3e:	462a      	mov	r2, r5
 8012d40:	4643      	mov	r3, r8
 8012d42:	210c      	movs	r1, #12
 8012d44:	4638      	mov	r0, r7
 8012d46:	f009 fcf7 	bl	801c738 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8012d4a:	e017      	b.n	8012d7c <_ZN8touchgfx12DigitalClock11updateClockEv+0x88>
 8012d4c:	2b01      	cmp	r3, #1
 8012d4e:	d11b      	bne.n	8012d88 <_ZN8touchgfx12DigitalClock11updateClockEv+0x94>
 8012d50:	f894 3030 	ldrb.w	r3, [r4, #48]	; 0x30
 8012d54:	4a31      	ldr	r2, [pc, #196]	; (8012e1c <_ZN8touchgfx12DigitalClock11updateClockEv+0x128>)
 8012d56:	4d32      	ldr	r5, [pc, #200]	; (8012e20 <_ZN8touchgfx12DigitalClock11updateClockEv+0x12c>)
 8012d58:	4620      	mov	r0, r4
 8012d5a:	2b00      	cmp	r3, #0
 8012d5c:	bf08      	it	eq
 8012d5e:	4615      	moveq	r5, r2
 8012d60:	f000 f904 	bl	8012f6c <_ZNK8touchgfx13AbstractClock16getCurrentHour24Ev>
 8012d64:	4607      	mov	r7, r0
 8012d66:	4620      	mov	r0, r4
 8012d68:	f000 f916 	bl	8012f98 <_ZNK8touchgfx13AbstractClock16getCurrentMinuteEv>
 8012d6c:	463b      	mov	r3, r7
 8012d6e:	9000      	str	r0, [sp, #0]
 8012d70:	462a      	mov	r2, r5
 8012d72:	210c      	movs	r1, #12
 8012d74:	f104 0080 	add.w	r0, r4, #128	; 0x80
 8012d78:	f009 fcde 	bl	801c738 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8012d7c:	4630      	mov	r0, r6
 8012d7e:	f7f6 ffd7 	bl	8009d30 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 8012d82:	b004      	add	sp, #16
 8012d84:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012d88:	2b02      	cmp	r3, #2
 8012d8a:	d126      	bne.n	8012dda <_ZN8touchgfx12DigitalClock11updateClockEv+0xe6>
 8012d8c:	f894 3030 	ldrb.w	r3, [r4, #48]	; 0x30
 8012d90:	4a24      	ldr	r2, [pc, #144]	; (8012e24 <_ZN8touchgfx12DigitalClock11updateClockEv+0x130>)
 8012d92:	4d25      	ldr	r5, [pc, #148]	; (8012e28 <_ZN8touchgfx12DigitalClock11updateClockEv+0x134>)
 8012d94:	4620      	mov	r0, r4
 8012d96:	2b00      	cmp	r3, #0
 8012d98:	bf08      	it	eq
 8012d9a:	4615      	moveq	r5, r2
 8012d9c:	f000 f8e9 	bl	8012f72 <_ZNK8touchgfx13AbstractClock16getCurrentHour12Ev>
 8012da0:	4680      	mov	r8, r0
 8012da2:	4620      	mov	r0, r4
 8012da4:	f000 f8f8 	bl	8012f98 <_ZNK8touchgfx13AbstractClock16getCurrentMinuteEv>
 8012da8:	4681      	mov	r9, r0
 8012daa:	4620      	mov	r0, r4
 8012dac:	f000 f8f7 	bl	8012f9e <_ZNK8touchgfx13AbstractClock16getCurrentSecondEv>
 8012db0:	4682      	mov	sl, r0
 8012db2:	4620      	mov	r0, r4
 8012db4:	f000 f8e9 	bl	8012f8a <_ZNK8touchgfx13AbstractClock12getCurrentAMEv>
 8012db8:	2800      	cmp	r0, #0
 8012dba:	bf14      	ite	ne
 8012dbc:	2341      	movne	r3, #65	; 0x41
 8012dbe:	2350      	moveq	r3, #80	; 0x50
 8012dc0:	f104 0780 	add.w	r7, r4, #128	; 0x80
 8012dc4:	e9cd a301 	strd	sl, r3, [sp, #4]
 8012dc8:	f8cd 9000 	str.w	r9, [sp]
 8012dcc:	4643      	mov	r3, r8
 8012dce:	462a      	mov	r2, r5
 8012dd0:	210c      	movs	r1, #12
 8012dd2:	4638      	mov	r0, r7
 8012dd4:	f009 fcb0 	bl	801c738 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8012dd8:	e7d0      	b.n	8012d7c <_ZN8touchgfx12DigitalClock11updateClockEv+0x88>
 8012dda:	2b03      	cmp	r3, #3
 8012ddc:	d1ce      	bne.n	8012d7c <_ZN8touchgfx12DigitalClock11updateClockEv+0x88>
 8012dde:	f894 3030 	ldrb.w	r3, [r4, #48]	; 0x30
 8012de2:	4a12      	ldr	r2, [pc, #72]	; (8012e2c <_ZN8touchgfx12DigitalClock11updateClockEv+0x138>)
 8012de4:	4d12      	ldr	r5, [pc, #72]	; (8012e30 <_ZN8touchgfx12DigitalClock11updateClockEv+0x13c>)
 8012de6:	4620      	mov	r0, r4
 8012de8:	2b00      	cmp	r3, #0
 8012dea:	bf08      	it	eq
 8012dec:	4615      	moveq	r5, r2
 8012dee:	f000 f8bd 	bl	8012f6c <_ZNK8touchgfx13AbstractClock16getCurrentHour24Ev>
 8012df2:	4607      	mov	r7, r0
 8012df4:	4620      	mov	r0, r4
 8012df6:	f000 f8cf 	bl	8012f98 <_ZNK8touchgfx13AbstractClock16getCurrentMinuteEv>
 8012dfa:	4680      	mov	r8, r0
 8012dfc:	4620      	mov	r0, r4
 8012dfe:	f000 f8ce 	bl	8012f9e <_ZNK8touchgfx13AbstractClock16getCurrentSecondEv>
 8012e02:	463b      	mov	r3, r7
 8012e04:	e9cd 8000 	strd	r8, r0, [sp]
 8012e08:	462a      	mov	r2, r5
 8012e0a:	210c      	movs	r1, #12
 8012e0c:	f104 0080 	add.w	r0, r4, #128	; 0x80
 8012e10:	e799      	b.n	8012d46 <_ZN8touchgfx12DigitalClock11updateClockEv+0x52>
 8012e12:	bf00      	nop
 8012e14:	0802ed94 	.word	0x0802ed94
 8012e18:	0802edbe 	.word	0x0802edbe
 8012e1c:	0802eda0 	.word	0x0802eda0
 8012e20:	0802edde 	.word	0x0802edde
 8012e24:	0802edbb 	.word	0x0802edbb
 8012e28:	0802eda8 	.word	0x0802eda8
 8012e2c:	0802eddb 	.word	0x0802eddb
 8012e30:	0802edcc 	.word	0x0802edcc

08012e34 <_ZN8touchgfx12DigitalClockC1Ev>:
 8012e34:	b510      	push	{r4, lr}
 8012e36:	4604      	mov	r4, r0
 8012e38:	f000 f87c 	bl	8012f34 <_ZN8touchgfx13AbstractClockC1Ev>
 8012e3c:	2201      	movs	r2, #1
 8012e3e:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8012e42:	4a20      	ldr	r2, [pc, #128]	; (8012ec4 <_ZN8touchgfx12DigitalClockC1Ev+0x90>)
 8012e44:	65e2      	str	r2, [r4, #92]	; 0x5c
 8012e46:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8012e4a:	f8a4 2060 	strh.w	r2, [r4, #96]	; 0x60
 8012e4e:	f8a4 2074 	strh.w	r2, [r4, #116]	; 0x74
 8012e52:	f8a4 2076 	strh.w	r2, [r4, #118]	; 0x76
 8012e56:	4b1c      	ldr	r3, [pc, #112]	; (8012ec8 <_ZN8touchgfx12DigitalClockC1Ev+0x94>)
 8012e58:	4a1c      	ldr	r2, [pc, #112]	; (8012ecc <_ZN8touchgfx12DigitalClockC1Ev+0x98>)
 8012e5a:	6023      	str	r3, [r4, #0]
 8012e5c:	6362      	str	r2, [r4, #52]	; 0x34
 8012e5e:	2303      	movs	r3, #3
 8012e60:	4622      	mov	r2, r4
 8012e62:	f884 302f 	strb.w	r3, [r4, #47]	; 0x2f
 8012e66:	f44f 017f 	mov.w	r1, #16711680	; 0xff0000
 8012e6a:	2300      	movs	r3, #0
 8012e6c:	66a1      	str	r1, [r4, #104]	; 0x68
 8012e6e:	f884 3030 	strb.w	r3, [r4, #48]	; 0x30
 8012e72:	8723      	strh	r3, [r4, #56]	; 0x38
 8012e74:	8763      	strh	r3, [r4, #58]	; 0x3a
 8012e76:	87a3      	strh	r3, [r4, #60]	; 0x3c
 8012e78:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8012e7a:	f8a4 3040 	strh.w	r3, [r4, #64]	; 0x40
 8012e7e:	f8a4 3042 	strh.w	r3, [r4, #66]	; 0x42
 8012e82:	f8a4 3044 	strh.w	r3, [r4, #68]	; 0x44
 8012e86:	f8a4 3046 	strh.w	r3, [r4, #70]	; 0x46
 8012e8a:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8012e8e:	6523      	str	r3, [r4, #80]	; 0x50
 8012e90:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8012e94:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8012e98:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8012e9c:	6663      	str	r3, [r4, #100]	; 0x64
 8012e9e:	f884 306c 	strb.w	r3, [r4, #108]	; 0x6c
 8012ea2:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 8012ea6:	f8a4 3070 	strh.w	r3, [r4, #112]	; 0x70
 8012eaa:	f8a4 3072 	strh.w	r3, [r4, #114]	; 0x72
 8012eae:	67a3      	str	r3, [r4, #120]	; 0x78
 8012eb0:	f822 3f80 	strh.w	r3, [r2, #128]!
 8012eb4:	4620      	mov	r0, r4
 8012eb6:	67e2      	str	r2, [r4, #124]	; 0x7c
 8012eb8:	f104 0134 	add.w	r1, r4, #52	; 0x34
 8012ebc:	f000 f87c 	bl	8012fb8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012ec0:	4620      	mov	r0, r4
 8012ec2:	bd10      	pop	{r4, pc}
 8012ec4:	0802de10 	.word	0x0802de10
 8012ec8:	0802edf0 	.word	0x0802edf0
 8012ecc:	0802df18 	.word	0x0802df18

08012ed0 <_ZN8touchgfx12DigitalClock34displayLeadingZeroForHourIndicatorEb>:
 8012ed0:	f880 1030 	strb.w	r1, [r0, #48]	; 0x30
 8012ed4:	4770      	bx	lr

08012ed6 <_ZN8touchgfx13AbstractClock13setTime24HourEhhh>:
 8012ed6:	b470      	push	{r4, r5, r6}
 8012ed8:	2518      	movs	r5, #24
 8012eda:	fbb1 f6f5 	udiv	r6, r1, r5
 8012ede:	fb06 1115 	mls	r1, r6, r5, r1
 8012ee2:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
 8012ee6:	213c      	movs	r1, #60	; 0x3c
 8012ee8:	fbb2 f5f1 	udiv	r5, r2, r1
 8012eec:	fb05 2211 	mls	r2, r5, r1, r2
 8012ef0:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
 8012ef4:	fbb3 f2f1 	udiv	r2, r3, r1
 8012ef8:	fb02 3311 	mls	r3, r2, r1, r3
 8012efc:	f880 302e 	strb.w	r3, [r0, #46]	; 0x2e
 8012f00:	6803      	ldr	r3, [r0, #0]
 8012f02:	bc70      	pop	{r4, r5, r6}
 8012f04:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8012f08:	4718      	bx	r3

08012f0a <_ZN8touchgfx13AbstractClock13setTime12HourEhhhb>:
 8012f0a:	b4f0      	push	{r4, r5, r6, r7}
 8012f0c:	6804      	ldr	r4, [r0, #0]
 8012f0e:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8012f12:	f8d4 5088 	ldr.w	r5, [r4, #136]	; 0x88
 8012f16:	2e00      	cmp	r6, #0
 8012f18:	f04f 040c 	mov.w	r4, #12
 8012f1c:	fbb1 f7f4 	udiv	r7, r1, r4
 8012f20:	fb07 1114 	mls	r1, r7, r4, r1
 8012f24:	bf18      	it	ne
 8012f26:	2400      	movne	r4, #0
 8012f28:	fa54 f181 	uxtab	r1, r4, r1
 8012f2c:	46ac      	mov	ip, r5
 8012f2e:	b2c9      	uxtb	r1, r1
 8012f30:	bcf0      	pop	{r4, r5, r6, r7}
 8012f32:	4760      	bx	ip

08012f34 <_ZN8touchgfx13AbstractClockC1Ev>:
 8012f34:	2101      	movs	r1, #1
 8012f36:	2200      	movs	r2, #0
 8012f38:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8012f3c:	490a      	ldr	r1, [pc, #40]	; (8012f68 <_ZN8touchgfx13AbstractClockC1Ev+0x34>)
 8012f3e:	8082      	strh	r2, [r0, #4]
 8012f40:	80c2      	strh	r2, [r0, #6]
 8012f42:	8102      	strh	r2, [r0, #8]
 8012f44:	8142      	strh	r2, [r0, #10]
 8012f46:	8182      	strh	r2, [r0, #12]
 8012f48:	81c2      	strh	r2, [r0, #14]
 8012f4a:	8202      	strh	r2, [r0, #16]
 8012f4c:	8242      	strh	r2, [r0, #18]
 8012f4e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8012f52:	61c2      	str	r2, [r0, #28]
 8012f54:	8402      	strh	r2, [r0, #32]
 8012f56:	8442      	strh	r2, [r0, #34]	; 0x22
 8012f58:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8012f5c:	6001      	str	r1, [r0, #0]
 8012f5e:	6282      	str	r2, [r0, #40]	; 0x28
 8012f60:	8582      	strh	r2, [r0, #44]	; 0x2c
 8012f62:	f880 202e 	strb.w	r2, [r0, #46]	; 0x2e
 8012f66:	4770      	bx	lr
 8012f68:	0802eeb0 	.word	0x0802eeb0

08012f6c <_ZNK8touchgfx13AbstractClock16getCurrentHour24Ev>:
 8012f6c:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8012f70:	4770      	bx	lr

08012f72 <_ZNK8touchgfx13AbstractClock16getCurrentHour12Ev>:
 8012f72:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8012f76:	220c      	movs	r2, #12
 8012f78:	f100 030b 	add.w	r3, r0, #11
 8012f7c:	fb93 f0f2 	sdiv	r0, r3, r2
 8012f80:	fb02 3010 	mls	r0, r2, r0, r3
 8012f84:	3001      	adds	r0, #1
 8012f86:	b2c0      	uxtb	r0, r0
 8012f88:	4770      	bx	lr

08012f8a <_ZNK8touchgfx13AbstractClock12getCurrentAMEv>:
 8012f8a:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8012f8e:	280b      	cmp	r0, #11
 8012f90:	bf8c      	ite	hi
 8012f92:	2000      	movhi	r0, #0
 8012f94:	2001      	movls	r0, #1
 8012f96:	4770      	bx	lr

08012f98 <_ZNK8touchgfx13AbstractClock16getCurrentMinuteEv>:
 8012f98:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 8012f9c:	4770      	bx	lr

08012f9e <_ZNK8touchgfx13AbstractClock16getCurrentSecondEv>:
 8012f9e:	f890 002e 	ldrb.w	r0, [r0, #46]	; 0x2e
 8012fa2:	4770      	bx	lr

08012fa4 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 8012fa4:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8012fa6:	2000      	movs	r0, #0
 8012fa8:	b12b      	cbz	r3, 8012fb6 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8012faa:	b920      	cbnz	r0, 8012fb6 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8012fac:	1a5a      	subs	r2, r3, r1
 8012fae:	4250      	negs	r0, r2
 8012fb0:	4150      	adcs	r0, r2
 8012fb2:	699b      	ldr	r3, [r3, #24]
 8012fb4:	e7f8      	b.n	8012fa8 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 8012fb6:	4770      	bx	lr

08012fb8 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8012fb8:	2300      	movs	r3, #0
 8012fba:	6148      	str	r0, [r1, #20]
 8012fbc:	618b      	str	r3, [r1, #24]
 8012fbe:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8012fc0:	b913      	cbnz	r3, 8012fc8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 8012fc2:	6281      	str	r1, [r0, #40]	; 0x28
 8012fc4:	4770      	bx	lr
 8012fc6:	4613      	mov	r3, r2
 8012fc8:	699a      	ldr	r2, [r3, #24]
 8012fca:	2a00      	cmp	r2, #0
 8012fcc:	d1fb      	bne.n	8012fc6 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 8012fce:	6199      	str	r1, [r3, #24]
 8012fd0:	4770      	bx	lr

08012fd2 <_ZN8touchgfx9Container9removeAllEv>:
 8012fd2:	2200      	movs	r2, #0
 8012fd4:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8012fd6:	b123      	cbz	r3, 8012fe2 <_ZN8touchgfx9Container9removeAllEv+0x10>
 8012fd8:	6999      	ldr	r1, [r3, #24]
 8012fda:	6281      	str	r1, [r0, #40]	; 0x28
 8012fdc:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8012fe0:	e7f8      	b.n	8012fd4 <_ZN8touchgfx9Container9removeAllEv+0x2>
 8012fe2:	4770      	bx	lr

08012fe4 <_ZN8touchgfx9Container6unlinkEv>:
 8012fe4:	2300      	movs	r3, #0
 8012fe6:	6283      	str	r3, [r0, #40]	; 0x28
 8012fe8:	4770      	bx	lr

08012fea <_ZNK8touchgfx9Container12getSolidRectEv>:
 8012fea:	2200      	movs	r2, #0
 8012fec:	8002      	strh	r2, [r0, #0]
 8012fee:	8042      	strh	r2, [r0, #2]
 8012ff0:	8082      	strh	r2, [r0, #4]
 8012ff2:	80c2      	strh	r2, [r0, #6]
 8012ff4:	4770      	bx	lr

08012ff6 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 8012ff6:	b570      	push	{r4, r5, r6, lr}
 8012ff8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8012ffa:	460d      	mov	r5, r1
 8012ffc:	4616      	mov	r6, r2
 8012ffe:	b13c      	cbz	r4, 8013010 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8013000:	6823      	ldr	r3, [r4, #0]
 8013002:	4620      	mov	r0, r4
 8013004:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8013006:	4632      	mov	r2, r6
 8013008:	4629      	mov	r1, r5
 801300a:	4798      	blx	r3
 801300c:	69a4      	ldr	r4, [r4, #24]
 801300e:	e7f6      	b.n	8012ffe <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8013010:	bd70      	pop	{r4, r5, r6, pc}

08013012 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 8013012:	b538      	push	{r3, r4, r5, lr}
 8013014:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8013016:	460d      	mov	r5, r1
 8013018:	b134      	cbz	r4, 8013028 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 801301a:	682b      	ldr	r3, [r5, #0]
 801301c:	4621      	mov	r1, r4
 801301e:	689b      	ldr	r3, [r3, #8]
 8013020:	4628      	mov	r0, r5
 8013022:	4798      	blx	r3
 8013024:	69a4      	ldr	r4, [r4, #24]
 8013026:	e7f7      	b.n	8013018 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8013028:	bd38      	pop	{r3, r4, r5, pc}

0801302a <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 801302a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801302c:	b19b      	cbz	r3, 8013056 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 801302e:	428b      	cmp	r3, r1
 8013030:	d109      	bne.n	8013046 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 8013032:	699a      	ldr	r2, [r3, #24]
 8013034:	2100      	movs	r1, #0
 8013036:	6159      	str	r1, [r3, #20]
 8013038:	6282      	str	r2, [r0, #40]	; 0x28
 801303a:	b902      	cbnz	r2, 801303e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 801303c:	4770      	bx	lr
 801303e:	6199      	str	r1, [r3, #24]
 8013040:	4770      	bx	lr
 8013042:	4613      	mov	r3, r2
 8013044:	b13a      	cbz	r2, 8013056 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8013046:	699a      	ldr	r2, [r3, #24]
 8013048:	428a      	cmp	r2, r1
 801304a:	d1fa      	bne.n	8013042 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 801304c:	698a      	ldr	r2, [r1, #24]
 801304e:	619a      	str	r2, [r3, #24]
 8013050:	2300      	movs	r3, #0
 8013052:	e9c1 3305 	strd	r3, r3, [r1, #20]
 8013056:	4770      	bx	lr

08013058 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8013058:	b410      	push	{r4}
 801305a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801305c:	4604      	mov	r4, r0
 801305e:	b92b      	cbnz	r3, 801306c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8013060:	6803      	ldr	r3, [r0, #0]
 8013062:	f85d 4b04 	ldr.w	r4, [sp], #4
 8013066:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8013068:	4611      	mov	r1, r2
 801306a:	4718      	bx	r3
 801306c:	b941      	cbnz	r1, 8013080 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 801306e:	6193      	str	r3, [r2, #24]
 8013070:	6282      	str	r2, [r0, #40]	; 0x28
 8013072:	6154      	str	r4, [r2, #20]
 8013074:	f85d 4b04 	ldr.w	r4, [sp], #4
 8013078:	4770      	bx	lr
 801307a:	4603      	mov	r3, r0
 801307c:	2800      	cmp	r0, #0
 801307e:	d0f9      	beq.n	8013074 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8013080:	4299      	cmp	r1, r3
 8013082:	6998      	ldr	r0, [r3, #24]
 8013084:	d1f9      	bne.n	801307a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8013086:	6190      	str	r0, [r2, #24]
 8013088:	618a      	str	r2, [r1, #24]
 801308a:	e7f2      	b.n	8013072 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0801308c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 801308c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013090:	461f      	mov	r7, r3
 8013092:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 8013096:	460d      	mov	r5, r1
 8013098:	4616      	mov	r6, r2
 801309a:	b103      	cbz	r3, 801309e <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 801309c:	6038      	str	r0, [r7, #0]
 801309e:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80130a0:	b314      	cbz	r4, 80130e8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 80130a2:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80130a6:	b1eb      	cbz	r3, 80130e4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80130a8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80130ac:	428d      	cmp	r5, r1
 80130ae:	db19      	blt.n	80130e4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80130b0:	8923      	ldrh	r3, [r4, #8]
 80130b2:	b289      	uxth	r1, r1
 80130b4:	440b      	add	r3, r1
 80130b6:	b21b      	sxth	r3, r3
 80130b8:	429d      	cmp	r5, r3
 80130ba:	da13      	bge.n	80130e4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80130bc:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80130c0:	4296      	cmp	r6, r2
 80130c2:	db0f      	blt.n	80130e4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80130c4:	8963      	ldrh	r3, [r4, #10]
 80130c6:	b292      	uxth	r2, r2
 80130c8:	4413      	add	r3, r2
 80130ca:	b21b      	sxth	r3, r3
 80130cc:	429e      	cmp	r6, r3
 80130ce:	da09      	bge.n	80130e4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80130d0:	6823      	ldr	r3, [r4, #0]
 80130d2:	1ab2      	subs	r2, r6, r2
 80130d4:	1a69      	subs	r1, r5, r1
 80130d6:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 80130da:	b212      	sxth	r2, r2
 80130dc:	463b      	mov	r3, r7
 80130de:	b209      	sxth	r1, r1
 80130e0:	4620      	mov	r0, r4
 80130e2:	47c0      	blx	r8
 80130e4:	69a4      	ldr	r4, [r4, #24]
 80130e6:	e7db      	b.n	80130a0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 80130e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080130ec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 80130ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80130f0:	4c6e      	ldr	r4, [pc, #440]	; (80132ac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 80130f2:	b0a1      	sub	sp, #132	; 0x84
 80130f4:	6824      	ldr	r4, [r4, #0]
 80130f6:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 80130f8:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 80130fc:	9303      	str	r3, [sp, #12]
 80130fe:	2400      	movs	r4, #0
 8013100:	802c      	strh	r4, [r5, #0]
 8013102:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 8013104:	802c      	strh	r4, [r5, #0]
 8013106:	601c      	str	r4, [r3, #0]
 8013108:	4606      	mov	r6, r0
 801310a:	e9cd 1201 	strd	r1, r2, [sp, #4]
 801310e:	f7ff ffbd 	bl	801308c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8013112:	f1b9 0f03 	cmp.w	r9, #3
 8013116:	f340 80c2 	ble.w	801329e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 801311a:	4631      	mov	r1, r6
 801311c:	a80c      	add	r0, sp, #48	; 0x30
 801311e:	f007 fa1f 	bl	801a560 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013122:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8013126:	9306      	str	r3, [sp, #24]
 8013128:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801312c:	9307      	str	r3, [sp, #28]
 801312e:	9b03      	ldr	r3, [sp, #12]
 8013130:	f8d3 a000 	ldr.w	sl, [r3]
 8013134:	f1ba 0f00 	cmp.w	sl, #0
 8013138:	f000 80b4 	beq.w	80132a4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 801313c:	4651      	mov	r1, sl
 801313e:	a810      	add	r0, sp, #64	; 0x40
 8013140:	f007 fa0e 	bl	801a560 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013144:	9b01      	ldr	r3, [sp, #4]
 8013146:	9a06      	ldr	r2, [sp, #24]
 8013148:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 801314c:	189d      	adds	r5, r3, r2
 801314e:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 8013152:	9a07      	ldr	r2, [sp, #28]
 8013154:	2002      	movs	r0, #2
 8013156:	fb91 f1f0 	sdiv	r1, r1, r0
 801315a:	4419      	add	r1, r3
 801315c:	1a6d      	subs	r5, r5, r1
 801315e:	9b02      	ldr	r3, [sp, #8]
 8013160:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8013164:	4413      	add	r3, r2
 8013166:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 801316a:	fb92 f2f0 	sdiv	r2, r2, r0
 801316e:	440a      	add	r2, r1
 8013170:	1a9b      	subs	r3, r3, r2
 8013172:	435b      	muls	r3, r3
 8013174:	fb05 3505 	mla	r5, r5, r5, r3
 8013178:	4f4d      	ldr	r7, [pc, #308]	; (80132b0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 801317a:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 801317c:	ac10      	add	r4, sp, #64	; 0x40
 801317e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8013180:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8013182:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8013184:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8013186:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8013188:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 801318c:	f1b9 0f0c 	cmp.w	r9, #12
 8013190:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8013194:	f04f 0303 	mov.w	r3, #3
 8013198:	bfc8      	it	gt
 801319a:	4698      	movgt	r8, r3
 801319c:	f8cd 9000 	str.w	r9, [sp]
 80131a0:	f04f 0400 	mov.w	r4, #0
 80131a4:	bfdc      	itt	le
 80131a6:	f109 32ff 	addle.w	r2, r9, #4294967295
 80131aa:	fb92 f8f3 	sdivle	r8, r2, r3
 80131ae:	1c63      	adds	r3, r4, #1
 80131b0:	aa10      	add	r2, sp, #64	; 0x40
 80131b2:	f004 0401 	and.w	r4, r4, #1
 80131b6:	9308      	str	r3, [sp, #32]
 80131b8:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 80131bc:	9b00      	ldr	r3, [sp, #0]
 80131be:	fb93 f3f8 	sdiv	r3, r3, r8
 80131c2:	b29b      	uxth	r3, r3
 80131c4:	3404      	adds	r4, #4
 80131c6:	f04f 0b00 	mov.w	fp, #0
 80131ca:	9304      	str	r3, [sp, #16]
 80131cc:	9a04      	ldr	r2, [sp, #16]
 80131ce:	f854 3c04 	ldr.w	r3, [r4, #-4]
 80131d2:	fb13 f302 	smulbb	r3, r3, r2
 80131d6:	9a01      	ldr	r2, [sp, #4]
 80131d8:	b29b      	uxth	r3, r3
 80131da:	1899      	adds	r1, r3, r2
 80131dc:	9305      	str	r3, [sp, #20]
 80131de:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 80131e2:	b209      	sxth	r1, r1
 80131e4:	4299      	cmp	r1, r3
 80131e6:	db4d      	blt.n	8013284 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80131e8:	8932      	ldrh	r2, [r6, #8]
 80131ea:	4413      	add	r3, r2
 80131ec:	b21b      	sxth	r3, r3
 80131ee:	4299      	cmp	r1, r3
 80131f0:	da48      	bge.n	8013284 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80131f2:	9b04      	ldr	r3, [sp, #16]
 80131f4:	6827      	ldr	r7, [r4, #0]
 80131f6:	fb17 f703 	smulbb	r7, r7, r3
 80131fa:	9b02      	ldr	r3, [sp, #8]
 80131fc:	b2bf      	uxth	r7, r7
 80131fe:	18fa      	adds	r2, r7, r3
 8013200:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8013204:	b212      	sxth	r2, r2
 8013206:	429a      	cmp	r2, r3
 8013208:	db3c      	blt.n	8013284 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801320a:	8970      	ldrh	r0, [r6, #10]
 801320c:	4403      	add	r3, r0
 801320e:	b21b      	sxth	r3, r3
 8013210:	429a      	cmp	r2, r3
 8013212:	da37      	bge.n	8013284 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8013214:	2300      	movs	r3, #0
 8013216:	930b      	str	r3, [sp, #44]	; 0x2c
 8013218:	4630      	mov	r0, r6
 801321a:	ab0b      	add	r3, sp, #44	; 0x2c
 801321c:	f7ff ff36 	bl	801308c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8013220:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8013222:	b37a      	cbz	r2, 8013284 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8013224:	4552      	cmp	r2, sl
 8013226:	d02d      	beq.n	8013284 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8013228:	4611      	mov	r1, r2
 801322a:	a80e      	add	r0, sp, #56	; 0x38
 801322c:	9209      	str	r2, [sp, #36]	; 0x24
 801322e:	f007 f997 	bl	801a560 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013232:	9a06      	ldr	r2, [sp, #24]
 8013234:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 8013238:	9b01      	ldr	r3, [sp, #4]
 801323a:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 801323e:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 8013242:	4413      	add	r3, r2
 8013244:	f04f 0e02 	mov.w	lr, #2
 8013248:	fb91 f1fe 	sdiv	r1, r1, lr
 801324c:	4401      	add	r1, r0
 801324e:	1a58      	subs	r0, r3, r1
 8013250:	9a07      	ldr	r2, [sp, #28]
 8013252:	9b02      	ldr	r3, [sp, #8]
 8013254:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 8013258:	fb9c fcfe 	sdiv	ip, ip, lr
 801325c:	4413      	add	r3, r2
 801325e:	448c      	add	ip, r1
 8013260:	eba3 030c 	sub.w	r3, r3, ip
 8013264:	435b      	muls	r3, r3
 8013266:	fb00 3300 	mla	r3, r0, r0, r3
 801326a:	42ab      	cmp	r3, r5
 801326c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801326e:	d208      	bcs.n	8013282 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8013270:	9803      	ldr	r0, [sp, #12]
 8013272:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8013274:	6001      	str	r1, [r0, #0]
 8013276:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8013278:	9805      	ldr	r0, [sp, #20]
 801327a:	8008      	strh	r0, [r1, #0]
 801327c:	992b      	ldr	r1, [sp, #172]	; 0xac
 801327e:	461d      	mov	r5, r3
 8013280:	800f      	strh	r7, [r1, #0]
 8013282:	4692      	mov	sl, r2
 8013284:	f10b 0b01 	add.w	fp, fp, #1
 8013288:	f1bb 0f04 	cmp.w	fp, #4
 801328c:	f104 0408 	add.w	r4, r4, #8
 8013290:	d19c      	bne.n	80131cc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 8013292:	9b00      	ldr	r3, [sp, #0]
 8013294:	9c08      	ldr	r4, [sp, #32]
 8013296:	444b      	add	r3, r9
 8013298:	4544      	cmp	r4, r8
 801329a:	9300      	str	r3, [sp, #0]
 801329c:	d187      	bne.n	80131ae <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 801329e:	b021      	add	sp, #132	; 0x84
 80132a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80132a4:	f04f 35ff 	mov.w	r5, #4294967295
 80132a8:	e766      	b.n	8013178 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 80132aa:	bf00      	nop
 80132ac:	2000224c 	.word	0x2000224c
 80132b0:	0802dd78 	.word	0x0802dd78

080132b4 <_ZN8touchgfx4RectaNERKS0_>:
 80132b4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80132b8:	f9b1 7000 	ldrsh.w	r7, [r1]
 80132bc:	888c      	ldrh	r4, [r1, #4]
 80132be:	f9b0 9000 	ldrsh.w	r9, [r0]
 80132c2:	443c      	add	r4, r7
 80132c4:	b2a4      	uxth	r4, r4
 80132c6:	fa0f f884 	sxth.w	r8, r4
 80132ca:	45c1      	cmp	r9, r8
 80132cc:	da2f      	bge.n	801332e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80132ce:	8882      	ldrh	r2, [r0, #4]
 80132d0:	444a      	add	r2, r9
 80132d2:	b292      	uxth	r2, r2
 80132d4:	fa0f fe82 	sxth.w	lr, r2
 80132d8:	4577      	cmp	r7, lr
 80132da:	da28      	bge.n	801332e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80132dc:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 80132e0:	88cb      	ldrh	r3, [r1, #6]
 80132e2:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 80132e6:	442b      	add	r3, r5
 80132e8:	b21b      	sxth	r3, r3
 80132ea:	429e      	cmp	r6, r3
 80132ec:	da1f      	bge.n	801332e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80132ee:	88c3      	ldrh	r3, [r0, #6]
 80132f0:	4433      	add	r3, r6
 80132f2:	b29b      	uxth	r3, r3
 80132f4:	fa0f fc83 	sxth.w	ip, r3
 80132f8:	4565      	cmp	r5, ip
 80132fa:	da18      	bge.n	801332e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80132fc:	454f      	cmp	r7, r9
 80132fe:	bfb8      	it	lt
 8013300:	464f      	movlt	r7, r9
 8013302:	42b5      	cmp	r5, r6
 8013304:	bfb8      	it	lt
 8013306:	4635      	movlt	r5, r6
 8013308:	45f0      	cmp	r8, lr
 801330a:	bfd8      	it	le
 801330c:	4622      	movle	r2, r4
 801330e:	1bd2      	subs	r2, r2, r7
 8013310:	8082      	strh	r2, [r0, #4]
 8013312:	884a      	ldrh	r2, [r1, #2]
 8013314:	88c9      	ldrh	r1, [r1, #6]
 8013316:	8007      	strh	r7, [r0, #0]
 8013318:	440a      	add	r2, r1
 801331a:	b292      	uxth	r2, r2
 801331c:	b211      	sxth	r1, r2
 801331e:	458c      	cmp	ip, r1
 8013320:	bfa8      	it	ge
 8013322:	4613      	movge	r3, r2
 8013324:	1b5b      	subs	r3, r3, r5
 8013326:	80c3      	strh	r3, [r0, #6]
 8013328:	8045      	strh	r5, [r0, #2]
 801332a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801332e:	2300      	movs	r3, #0
 8013330:	8003      	strh	r3, [r0, #0]
 8013332:	8043      	strh	r3, [r0, #2]
 8013334:	8083      	strh	r3, [r0, #4]
 8013336:	80c3      	strh	r3, [r0, #6]
 8013338:	e7f7      	b.n	801332a <_ZN8touchgfx4RectaNERKS0_+0x76>

0801333a <_ZNK8touchgfx4Rect7isEmptyEv>:
 801333a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801333e:	2b00      	cmp	r3, #0
 8013340:	dd06      	ble.n	8013350 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8013342:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8013346:	2800      	cmp	r0, #0
 8013348:	bfcc      	ite	gt
 801334a:	2000      	movgt	r0, #0
 801334c:	2001      	movle	r0, #1
 801334e:	4770      	bx	lr
 8013350:	2001      	movs	r0, #1
 8013352:	4770      	bx	lr

08013354 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8013354:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013358:	2300      	movs	r3, #0
 801335a:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 801335c:	8003      	strh	r3, [r0, #0]
 801335e:	4604      	mov	r4, r0
 8013360:	8043      	strh	r3, [r0, #2]
 8013362:	8083      	strh	r3, [r0, #4]
 8013364:	80c3      	strh	r3, [r0, #6]
 8013366:	2d00      	cmp	r5, #0
 8013368:	d040      	beq.n	80133ec <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 801336a:	1d28      	adds	r0, r5, #4
 801336c:	f7ff ffe5 	bl	801333a <_ZNK8touchgfx4Rect7isEmptyEv>
 8013370:	b988      	cbnz	r0, 8013396 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8013372:	4620      	mov	r0, r4
 8013374:	f7ff ffe1 	bl	801333a <_ZNK8touchgfx4Rect7isEmptyEv>
 8013378:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 801337c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8013380:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8013384:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8013388:	b138      	cbz	r0, 801339a <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 801338a:	8022      	strh	r2, [r4, #0]
 801338c:	8063      	strh	r3, [r4, #2]
 801338e:	f8a4 e004 	strh.w	lr, [r4, #4]
 8013392:	f8a4 c006 	strh.w	ip, [r4, #6]
 8013396:	69ad      	ldr	r5, [r5, #24]
 8013398:	e7e5      	b.n	8013366 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 801339a:	f9b4 0000 	ldrsh.w	r0, [r4]
 801339e:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80133a2:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 80133a6:	4290      	cmp	r0, r2
 80133a8:	4607      	mov	r7, r0
 80133aa:	bfa8      	it	ge
 80133ac:	4617      	movge	r7, r2
 80133ae:	4472      	add	r2, lr
 80133b0:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 80133b4:	8027      	strh	r7, [r4, #0]
 80133b6:	4299      	cmp	r1, r3
 80133b8:	460e      	mov	r6, r1
 80133ba:	4440      	add	r0, r8
 80133bc:	bfa8      	it	ge
 80133be:	461e      	movge	r6, r3
 80133c0:	4471      	add	r1, lr
 80133c2:	4463      	add	r3, ip
 80133c4:	b200      	sxth	r0, r0
 80133c6:	b212      	sxth	r2, r2
 80133c8:	b209      	sxth	r1, r1
 80133ca:	b21b      	sxth	r3, r3
 80133cc:	4290      	cmp	r0, r2
 80133ce:	bfac      	ite	ge
 80133d0:	ebc7 0200 	rsbge	r2, r7, r0
 80133d4:	ebc7 0202 	rsblt	r2, r7, r2
 80133d8:	4299      	cmp	r1, r3
 80133da:	bfac      	ite	ge
 80133dc:	ebc6 0301 	rsbge	r3, r6, r1
 80133e0:	ebc6 0303 	rsblt	r3, r6, r3
 80133e4:	8066      	strh	r6, [r4, #2]
 80133e6:	80a2      	strh	r2, [r4, #4]
 80133e8:	80e3      	strh	r3, [r4, #6]
 80133ea:	e7d4      	b.n	8013396 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 80133ec:	4620      	mov	r0, r4
 80133ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080133f2 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 80133f2:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80133f6:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 80133fa:	b383      	cbz	r3, 801345e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 80133fc:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80133fe:	b374      	cbz	r4, 801345e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8013400:	f9b1 5000 	ldrsh.w	r5, [r1]
 8013404:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8013408:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 801340c:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8013410:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8013414:	b303      	cbz	r3, 8013458 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8013416:	4668      	mov	r0, sp
 8013418:	1d21      	adds	r1, r4, #4
 801341a:	f8ad 5000 	strh.w	r5, [sp]
 801341e:	f8ad 6002 	strh.w	r6, [sp, #2]
 8013422:	f8ad 7004 	strh.w	r7, [sp, #4]
 8013426:	f8ad 8006 	strh.w	r8, [sp, #6]
 801342a:	f7ff ff43 	bl	80132b4 <_ZN8touchgfx4RectaNERKS0_>
 801342e:	4668      	mov	r0, sp
 8013430:	f7ff ff83 	bl	801333a <_ZNK8touchgfx4Rect7isEmptyEv>
 8013434:	b980      	cbnz	r0, 8013458 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8013436:	f8bd 3000 	ldrh.w	r3, [sp]
 801343a:	88a2      	ldrh	r2, [r4, #4]
 801343c:	1a9b      	subs	r3, r3, r2
 801343e:	f8ad 3000 	strh.w	r3, [sp]
 8013442:	88e2      	ldrh	r2, [r4, #6]
 8013444:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8013448:	1a9b      	subs	r3, r3, r2
 801344a:	f8ad 3002 	strh.w	r3, [sp, #2]
 801344e:	6823      	ldr	r3, [r4, #0]
 8013450:	4669      	mov	r1, sp
 8013452:	689b      	ldr	r3, [r3, #8]
 8013454:	4620      	mov	r0, r4
 8013456:	4798      	blx	r3
 8013458:	69a4      	ldr	r4, [r4, #24]
 801345a:	2c00      	cmp	r4, #0
 801345c:	d1d8      	bne.n	8013410 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 801345e:	b002      	add	sp, #8
 8013460:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08013464 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8013464:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8013466:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 801346a:	460d      	mov	r5, r1
 801346c:	4616      	mov	r6, r2
 801346e:	b323      	cbz	r3, 80134ba <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8013470:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8013472:	b314      	cbz	r4, 80134ba <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8013474:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8013478:	b1eb      	cbz	r3, 80134b6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 801347a:	6828      	ldr	r0, [r5, #0]
 801347c:	6869      	ldr	r1, [r5, #4]
 801347e:	466b      	mov	r3, sp
 8013480:	c303      	stmia	r3!, {r0, r1}
 8013482:	4668      	mov	r0, sp
 8013484:	1d21      	adds	r1, r4, #4
 8013486:	f7ff ff15 	bl	80132b4 <_ZN8touchgfx4RectaNERKS0_>
 801348a:	4668      	mov	r0, sp
 801348c:	f7ff ff55 	bl	801333a <_ZNK8touchgfx4Rect7isEmptyEv>
 8013490:	b988      	cbnz	r0, 80134b6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8013492:	f8bd 3000 	ldrh.w	r3, [sp]
 8013496:	88a2      	ldrh	r2, [r4, #4]
 8013498:	1a9b      	subs	r3, r3, r2
 801349a:	f8ad 3000 	strh.w	r3, [sp]
 801349e:	88e2      	ldrh	r2, [r4, #6]
 80134a0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80134a4:	1a9b      	subs	r3, r3, r2
 80134a6:	f8ad 3002 	strh.w	r3, [sp, #2]
 80134aa:	6823      	ldr	r3, [r4, #0]
 80134ac:	4632      	mov	r2, r6
 80134ae:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80134b0:	4669      	mov	r1, sp
 80134b2:	4620      	mov	r0, r4
 80134b4:	4798      	blx	r3
 80134b6:	69a4      	ldr	r4, [r4, #24]
 80134b8:	e7db      	b.n	8013472 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 80134ba:	b002      	add	sp, #8
 80134bc:	bd70      	pop	{r4, r5, r6, pc}

080134be <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 80134be:	b513      	push	{r0, r1, r4, lr}
 80134c0:	6803      	ldr	r3, [r0, #0]
 80134c2:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 80134c6:	2300      	movs	r3, #0
 80134c8:	e9cd 3300 	strd	r3, r3, [sp]
 80134cc:	466b      	mov	r3, sp
 80134ce:	47a0      	blx	r4
 80134d0:	b002      	add	sp, #8
 80134d2:	bd10      	pop	{r4, pc}

080134d4 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 80134d4:	2301      	movs	r3, #1
 80134d6:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 80134da:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 80134de:	4770      	bx	lr

080134e0 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 80134e0:	2301      	movs	r3, #1
 80134e2:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 80134e6:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 80134ea:	4770      	bx	lr

080134ec <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 80134ec:	6843      	ldr	r3, [r0, #4]
 80134ee:	2201      	movs	r2, #1
 80134f0:	725a      	strb	r2, [r3, #9]
 80134f2:	6840      	ldr	r0, [r0, #4]
 80134f4:	6803      	ldr	r3, [r0, #0]
 80134f6:	691b      	ldr	r3, [r3, #16]
 80134f8:	4718      	bx	r3

080134fa <_ZN8touchgfx3HAL8flushDMAEv>:
 80134fa:	6840      	ldr	r0, [r0, #4]
 80134fc:	6803      	ldr	r3, [r0, #0]
 80134fe:	689b      	ldr	r3, [r3, #8]
 8013500:	4718      	bx	r3

08013502 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8013502:	b530      	push	{r4, r5, lr}
 8013504:	b08b      	sub	sp, #44	; 0x2c
 8013506:	6804      	ldr	r4, [r0, #0]
 8013508:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801350c:	9509      	str	r5, [sp, #36]	; 0x24
 801350e:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 8013512:	9508      	str	r5, [sp, #32]
 8013514:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8013518:	9507      	str	r5, [sp, #28]
 801351a:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 801351e:	9506      	str	r5, [sp, #24]
 8013520:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8013524:	9505      	str	r5, [sp, #20]
 8013526:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 801352a:	9504      	str	r5, [sp, #16]
 801352c:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 8013530:	9503      	str	r5, [sp, #12]
 8013532:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8013536:	9502      	str	r5, [sp, #8]
 8013538:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 801353c:	e9cd 3500 	strd	r3, r5, [sp]
 8013540:	4613      	mov	r3, r2
 8013542:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 8013544:	2200      	movs	r2, #0
 8013546:	47a0      	blx	r4
 8013548:	b00b      	add	sp, #44	; 0x2c
 801354a:	bd30      	pop	{r4, r5, pc}

0801354c <_ZN8touchgfx3HAL10beginFrameEv>:
 801354c:	4b04      	ldr	r3, [pc, #16]	; (8013560 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 801354e:	781b      	ldrb	r3, [r3, #0]
 8013550:	b123      	cbz	r3, 801355c <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8013552:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 8013556:	f080 0001 	eor.w	r0, r0, #1
 801355a:	4770      	bx	lr
 801355c:	2001      	movs	r0, #1
 801355e:	4770      	bx	lr
 8013560:	2000224a 	.word	0x2000224a

08013564 <_ZN8touchgfx3HAL8endFrameEv>:
 8013564:	b510      	push	{r4, lr}
 8013566:	4604      	mov	r4, r0
 8013568:	6840      	ldr	r0, [r0, #4]
 801356a:	6803      	ldr	r3, [r0, #0]
 801356c:	689b      	ldr	r3, [r3, #8]
 801356e:	4798      	blx	r3
 8013570:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 8013574:	b113      	cbz	r3, 801357c <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8013576:	2301      	movs	r3, #1
 8013578:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 801357c:	bd10      	pop	{r4, pc}

0801357e <_ZN8touchgfx3HAL10initializeEv>:
 801357e:	b510      	push	{r4, lr}
 8013580:	4604      	mov	r4, r0
 8013582:	f7fd fead 	bl	80112e0 <_ZN8touchgfx10OSWrappers10initializeEv>
 8013586:	f7fd fbf3 	bl	8010d70 <_ZN8touchgfx4GPIO4initEv>
 801358a:	6860      	ldr	r0, [r4, #4]
 801358c:	6803      	ldr	r3, [r0, #0]
 801358e:	68db      	ldr	r3, [r3, #12]
 8013590:	4798      	blx	r3
 8013592:	68e0      	ldr	r0, [r4, #12]
 8013594:	6803      	ldr	r3, [r0, #0]
 8013596:	689b      	ldr	r3, [r3, #8]
 8013598:	4798      	blx	r3
 801359a:	6823      	ldr	r3, [r4, #0]
 801359c:	4620      	mov	r0, r4
 801359e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80135a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80135a4:	4718      	bx	r3

080135a6 <_ZN8touchgfx3HAL9taskEntryEv>:
 80135a6:	b508      	push	{r3, lr}
 80135a8:	6803      	ldr	r3, [r0, #0]
 80135aa:	4604      	mov	r4, r0
 80135ac:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80135b0:	4798      	blx	r3
 80135b2:	6823      	ldr	r3, [r4, #0]
 80135b4:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80135b6:	4620      	mov	r0, r4
 80135b8:	4798      	blx	r3
 80135ba:	f7fd ff05 	bl	80113c8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 80135be:	6823      	ldr	r3, [r4, #0]
 80135c0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80135c2:	e7f8      	b.n	80135b6 <_ZN8touchgfx3HAL9taskEntryEv+0x10>

080135c4 <_ZN8touchgfx3HAL4tickEv>:
 80135c4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80135c6:	6803      	ldr	r3, [r0, #0]
 80135c8:	4d5b      	ldr	r5, [pc, #364]	; (8013738 <_ZN8touchgfx3HAL4tickEv+0x174>)
 80135ca:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80135ce:	4604      	mov	r4, r0
 80135d0:	4798      	blx	r3
 80135d2:	2800      	cmp	r0, #0
 80135d4:	f000 8095 	beq.w	8013702 <_ZN8touchgfx3HAL4tickEv+0x13e>
 80135d8:	2001      	movs	r0, #1
 80135da:	f7fd fbd1 	bl	8010d80 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 80135de:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 80135e2:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 80135e6:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 80135ea:	2600      	movs	r6, #0
 80135ec:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 80135f0:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 80135f4:	b133      	cbz	r3, 8013604 <_ZN8touchgfx3HAL4tickEv+0x40>
 80135f6:	6823      	ldr	r3, [r4, #0]
 80135f8:	4620      	mov	r0, r4
 80135fa:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 80135fe:	4798      	blx	r3
 8013600:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 8013604:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8013608:	6862      	ldr	r2, [r4, #4]
 801360a:	f083 0301 	eor.w	r3, r3, #1
 801360e:	7253      	strb	r3, [r2, #9]
 8013610:	2601      	movs	r6, #1
 8013612:	702e      	strb	r6, [r5, #0]
 8013614:	f005 fe48 	bl	80192a8 <_ZN8touchgfx11Application11getInstanceEv>
 8013618:	6803      	ldr	r3, [r0, #0]
 801361a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801361c:	4798      	blx	r3
 801361e:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8013622:	b90b      	cbnz	r3, 8013628 <_ZN8touchgfx3HAL4tickEv+0x64>
 8013624:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 8013628:	f005 fe3e 	bl	80192a8 <_ZN8touchgfx11Application11getInstanceEv>
 801362c:	6803      	ldr	r3, [r0, #0]
 801362e:	695b      	ldr	r3, [r3, #20]
 8013630:	4798      	blx	r3
 8013632:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8013634:	6803      	ldr	r3, [r0, #0]
 8013636:	691b      	ldr	r3, [r3, #16]
 8013638:	4798      	blx	r3
 801363a:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 801363e:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 8013642:	3b01      	subs	r3, #1
 8013644:	b2db      	uxtb	r3, r3
 8013646:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 801364a:	b10a      	cbz	r2, 8013650 <_ZN8touchgfx3HAL4tickEv+0x8c>
 801364c:	2b00      	cmp	r3, #0
 801364e:	d1eb      	bne.n	8013628 <_ZN8touchgfx3HAL4tickEv+0x64>
 8013650:	4a3a      	ldr	r2, [pc, #232]	; (801373c <_ZN8touchgfx3HAL4tickEv+0x178>)
 8013652:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 8013656:	7813      	ldrb	r3, [r2, #0]
 8013658:	3301      	adds	r3, #1
 801365a:	b25b      	sxtb	r3, r3
 801365c:	4299      	cmp	r1, r3
 801365e:	7013      	strb	r3, [r2, #0]
 8013660:	dc10      	bgt.n	8013684 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8013662:	68e0      	ldr	r0, [r4, #12]
 8013664:	2300      	movs	r3, #0
 8013666:	7013      	strb	r3, [r2, #0]
 8013668:	6803      	ldr	r3, [r0, #0]
 801366a:	aa03      	add	r2, sp, #12
 801366c:	68db      	ldr	r3, [r3, #12]
 801366e:	a902      	add	r1, sp, #8
 8013670:	4798      	blx	r3
 8013672:	6823      	ldr	r3, [r4, #0]
 8013674:	2800      	cmp	r0, #0
 8013676:	d050      	beq.n	801371a <_ZN8touchgfx3HAL4tickEv+0x156>
 8013678:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 801367c:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8013680:	4620      	mov	r0, r4
 8013682:	4798      	blx	r3
 8013684:	6960      	ldr	r0, [r4, #20]
 8013686:	2300      	movs	r3, #0
 8013688:	f88d 3007 	strb.w	r3, [sp, #7]
 801368c:	b158      	cbz	r0, 80136a6 <_ZN8touchgfx3HAL4tickEv+0xe2>
 801368e:	6803      	ldr	r3, [r0, #0]
 8013690:	f10d 0107 	add.w	r1, sp, #7
 8013694:	68db      	ldr	r3, [r3, #12]
 8013696:	4798      	blx	r3
 8013698:	b128      	cbz	r0, 80136a6 <_ZN8touchgfx3HAL4tickEv+0xe2>
 801369a:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 801369c:	f89d 1007 	ldrb.w	r1, [sp, #7]
 80136a0:	6803      	ldr	r3, [r0, #0]
 80136a2:	68db      	ldr	r3, [r3, #12]
 80136a4:	4798      	blx	r3
 80136a6:	f104 001c 	add.w	r0, r4, #28
 80136aa:	f016 fc7b 	bl	8029fa4 <_ZN8touchgfx8Gestures4tickEv>
 80136ae:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 80136b2:	b30b      	cbz	r3, 80136f8 <_ZN8touchgfx3HAL4tickEv+0x134>
 80136b4:	6920      	ldr	r0, [r4, #16]
 80136b6:	6803      	ldr	r3, [r0, #0]
 80136b8:	691b      	ldr	r3, [r3, #16]
 80136ba:	4798      	blx	r3
 80136bc:	6f63      	ldr	r3, [r4, #116]	; 0x74
 80136be:	4606      	mov	r6, r0
 80136c0:	b903      	cbnz	r3, 80136c4 <_ZN8touchgfx3HAL4tickEv+0x100>
 80136c2:	6760      	str	r0, [r4, #116]	; 0x74
 80136c4:	6f63      	ldr	r3, [r4, #116]	; 0x74
 80136c6:	4a1e      	ldr	r2, [pc, #120]	; (8013740 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 80136c8:	1af3      	subs	r3, r6, r3
 80136ca:	4293      	cmp	r3, r2
 80136cc:	d914      	bls.n	80136f8 <_ZN8touchgfx3HAL4tickEv+0x134>
 80136ce:	6920      	ldr	r0, [r4, #16]
 80136d0:	6803      	ldr	r3, [r0, #0]
 80136d2:	699b      	ldr	r3, [r3, #24]
 80136d4:	4798      	blx	r3
 80136d6:	6f63      	ldr	r3, [r4, #116]	; 0x74
 80136d8:	2264      	movs	r2, #100	; 0x64
 80136da:	1af3      	subs	r3, r6, r3
 80136dc:	fbb3 f3f2 	udiv	r3, r3, r2
 80136e0:	fbb0 f0f3 	udiv	r0, r0, r3
 80136e4:	2800      	cmp	r0, #0
 80136e6:	dc1d      	bgt.n	8013724 <_ZN8touchgfx3HAL4tickEv+0x160>
 80136e8:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 80136ec:	6920      	ldr	r0, [r4, #16]
 80136ee:	6803      	ldr	r3, [r0, #0]
 80136f0:	2100      	movs	r1, #0
 80136f2:	69db      	ldr	r3, [r3, #28]
 80136f4:	4798      	blx	r3
 80136f6:	6766      	str	r6, [r4, #116]	; 0x74
 80136f8:	f005 fdd6 	bl	80192a8 <_ZN8touchgfx11Application11getInstanceEv>
 80136fc:	6803      	ldr	r3, [r0, #0]
 80136fe:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013700:	4798      	blx	r3
 8013702:	6823      	ldr	r3, [r4, #0]
 8013704:	4620      	mov	r0, r4
 8013706:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 801370a:	4798      	blx	r3
 801370c:	2001      	movs	r0, #1
 801370e:	f7fd fb53 	bl	8010db8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8013712:	2300      	movs	r3, #0
 8013714:	702b      	strb	r3, [r5, #0]
 8013716:	b004      	add	sp, #16
 8013718:	bd70      	pop	{r4, r5, r6, pc}
 801371a:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 801371e:	4620      	mov	r0, r4
 8013720:	4798      	blx	r3
 8013722:	e7af      	b.n	8013684 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8013724:	2863      	cmp	r0, #99	; 0x63
 8013726:	bfcb      	itete	gt
 8013728:	2300      	movgt	r3, #0
 801372a:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 801372e:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 8013732:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 8013736:	e7d9      	b.n	80136ec <_ZN8touchgfx3HAL4tickEv+0x128>
 8013738:	20002250 	.word	0x20002250
 801373c:	20002251 	.word	0x20002251
 8013740:	05f5e100 	.word	0x05f5e100

08013744 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8013744:	b510      	push	{r4, lr}
 8013746:	4604      	mov	r4, r0
 8013748:	f7fd fdf2 	bl	8011330 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 801374c:	6863      	ldr	r3, [r4, #4]
 801374e:	2200      	movs	r2, #0
 8013750:	729a      	strb	r2, [r3, #10]
 8013752:	bd10      	pop	{r4, pc}

08013754 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8013754:	65c1      	str	r1, [r0, #92]	; 0x5c
 8013756:	301c      	adds	r0, #28
 8013758:	f016 bc22 	b.w	8029fa0 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0801375c <_ZN8touchgfx3HAL5touchEll>:
 801375c:	b530      	push	{r4, r5, lr}
 801375e:	b087      	sub	sp, #28
 8013760:	4604      	mov	r4, r0
 8013762:	a804      	add	r0, sp, #16
 8013764:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8013768:	f005 fb74 	bl	8018e54 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 801376c:	9b04      	ldr	r3, [sp, #16]
 801376e:	f8ad 300c 	strh.w	r3, [sp, #12]
 8013772:	a906      	add	r1, sp, #24
 8013774:	9b05      	ldr	r3, [sp, #20]
 8013776:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 801377a:	a803      	add	r0, sp, #12
 801377c:	f005 fbbc 	bl	8018ef8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8013780:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 8013784:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8013788:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 801378c:	f104 001c 	add.w	r0, r4, #28
 8013790:	b189      	cbz	r1, 80137b6 <_ZN8touchgfx3HAL5touchEll+0x5a>
 8013792:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 8013796:	9300      	str	r3, [sp, #0]
 8013798:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 801379c:	4613      	mov	r3, r2
 801379e:	462a      	mov	r2, r5
 80137a0:	f016 fc0e 	bl	8029fc0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 80137a4:	b128      	cbz	r0, 80137b2 <_ZN8touchgfx3HAL5touchEll+0x56>
 80137a6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80137aa:	6623      	str	r3, [r4, #96]	; 0x60
 80137ac:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80137b0:	6663      	str	r3, [r4, #100]	; 0x64
 80137b2:	b007      	add	sp, #28
 80137b4:	bd30      	pop	{r4, r5, pc}
 80137b6:	f016 fc43 	bl	802a040 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 80137ba:	2301      	movs	r3, #1
 80137bc:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 80137c0:	e7f1      	b.n	80137a6 <_ZN8touchgfx3HAL5touchEll+0x4a>

080137c2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 80137c2:	b510      	push	{r4, lr}
 80137c4:	2b00      	cmp	r3, #0
 80137c6:	d046      	beq.n	8013856 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80137c8:	ea81 0002 	eor.w	r0, r1, r2
 80137cc:	07c4      	lsls	r4, r0, #31
 80137ce:	d508      	bpl.n	80137e2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 80137d0:	440b      	add	r3, r1
 80137d2:	3a01      	subs	r2, #1
 80137d4:	428b      	cmp	r3, r1
 80137d6:	d93e      	bls.n	8013856 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80137d8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 80137dc:	f801 0b01 	strb.w	r0, [r1], #1
 80137e0:	e7f8      	b.n	80137d4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 80137e2:	07d0      	lsls	r0, r2, #31
 80137e4:	bf42      	ittt	mi
 80137e6:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 80137ea:	f801 0b01 	strbmi.w	r0, [r1], #1
 80137ee:	f103 33ff 	addmi.w	r3, r3, #4294967295
 80137f2:	2b01      	cmp	r3, #1
 80137f4:	d911      	bls.n	801381a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80137f6:	ea81 0402 	eor.w	r4, r1, r2
 80137fa:	07a4      	lsls	r4, r4, #30
 80137fc:	4610      	mov	r0, r2
 80137fe:	d022      	beq.n	8013846 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8013800:	f023 0401 	bic.w	r4, r3, #1
 8013804:	440c      	add	r4, r1
 8013806:	428c      	cmp	r4, r1
 8013808:	4602      	mov	r2, r0
 801380a:	d904      	bls.n	8013816 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 801380c:	8812      	ldrh	r2, [r2, #0]
 801380e:	f821 2b02 	strh.w	r2, [r1], #2
 8013812:	3002      	adds	r0, #2
 8013814:	e7f7      	b.n	8013806 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 8013816:	f003 0301 	and.w	r3, r3, #1
 801381a:	f023 0003 	bic.w	r0, r3, #3
 801381e:	4408      	add	r0, r1
 8013820:	4288      	cmp	r0, r1
 8013822:	4614      	mov	r4, r2
 8013824:	d904      	bls.n	8013830 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 8013826:	6824      	ldr	r4, [r4, #0]
 8013828:	f841 4b04 	str.w	r4, [r1], #4
 801382c:	3204      	adds	r2, #4
 801382e:	e7f7      	b.n	8013820 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8013830:	f003 0303 	and.w	r3, r3, #3
 8013834:	440b      	add	r3, r1
 8013836:	3a01      	subs	r2, #1
 8013838:	428b      	cmp	r3, r1
 801383a:	d90c      	bls.n	8013856 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 801383c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8013840:	f801 0b01 	strb.w	r0, [r1], #1
 8013844:	e7f8      	b.n	8013838 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 8013846:	0790      	lsls	r0, r2, #30
 8013848:	d0e7      	beq.n	801381a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 801384a:	f832 0b02 	ldrh.w	r0, [r2], #2
 801384e:	f821 0b02 	strh.w	r0, [r1], #2
 8013852:	3b02      	subs	r3, #2
 8013854:	e7e1      	b.n	801381a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8013856:	2001      	movs	r0, #1
 8013858:	bd10      	pop	{r4, pc}

0801385a <_ZN8touchgfx3HAL7noTouchEv>:
 801385a:	b510      	push	{r4, lr}
 801385c:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 8013860:	4604      	mov	r4, r0
 8013862:	b153      	cbz	r3, 801387a <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8013864:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 8013868:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 801386c:	2101      	movs	r1, #1
 801386e:	301c      	adds	r0, #28
 8013870:	f016 fbe6 	bl	802a040 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8013874:	2300      	movs	r3, #0
 8013876:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 801387a:	bd10      	pop	{r4, pc}

0801387c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 801387c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013880:	b085      	sub	sp, #20
 8013882:	ad04      	add	r5, sp, #16
 8013884:	4604      	mov	r4, r0
 8013886:	2000      	movs	r0, #0
 8013888:	f845 0d04 	str.w	r0, [r5, #-4]!
 801388c:	69a0      	ldr	r0, [r4, #24]
 801388e:	6806      	ldr	r6, [r0, #0]
 8013890:	9501      	str	r5, [sp, #4]
 8013892:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 8013896:	9500      	str	r5, [sp, #0]
 8013898:	6835      	ldr	r5, [r6, #0]
 801389a:	4699      	mov	r9, r3
 801389c:	460f      	mov	r7, r1
 801389e:	4690      	mov	r8, r2
 80138a0:	47a8      	blx	r5
 80138a2:	4d10      	ldr	r5, [pc, #64]	; (80138e4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 80138a4:	4606      	mov	r6, r0
 80138a6:	f8a5 9000 	strh.w	r9, [r5]
 80138aa:	f7f7 fb6b 	bl	800af84 <_ZN8touchgfx3HAL3lcdEv>
 80138ae:	6803      	ldr	r3, [r0, #0]
 80138b0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80138b2:	4798      	blx	r3
 80138b4:	b128      	cbz	r0, 80138c2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 80138b6:	2801      	cmp	r0, #1
 80138b8:	d00b      	beq.n	80138d2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 80138ba:	4630      	mov	r0, r6
 80138bc:	b005      	add	sp, #20
 80138be:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80138c2:	882b      	ldrh	r3, [r5, #0]
 80138c4:	fb08 7203 	mla	r2, r8, r3, r7
 80138c8:	9b03      	ldr	r3, [sp, #12]
 80138ca:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 80138ce:	63e3      	str	r3, [r4, #60]	; 0x3c
 80138d0:	e7f3      	b.n	80138ba <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 80138d2:	882a      	ldrh	r2, [r5, #0]
 80138d4:	9b03      	ldr	r3, [sp, #12]
 80138d6:	fb08 7202 	mla	r2, r8, r2, r7
 80138da:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80138de:	1a9a      	subs	r2, r3, r2
 80138e0:	63e2      	str	r2, [r4, #60]	; 0x3c
 80138e2:	e7ea      	b.n	80138ba <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 80138e4:	20002246 	.word	0x20002246

080138e8 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 80138e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80138ea:	b08b      	sub	sp, #44	; 0x2c
 80138ec:	4617      	mov	r7, r2
 80138ee:	4604      	mov	r4, r0
 80138f0:	460e      	mov	r6, r1
 80138f2:	461d      	mov	r5, r3
 80138f4:	f7f7 fb46 	bl	800af84 <_ZN8touchgfx3HAL3lcdEv>
 80138f8:	6803      	ldr	r3, [r0, #0]
 80138fa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80138fc:	4798      	blx	r3
 80138fe:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8013902:	9007      	str	r0, [sp, #28]
 8013904:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8013908:	4b0d      	ldr	r3, [pc, #52]	; (8013940 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 801390a:	6822      	ldr	r2, [r4, #0]
 801390c:	881b      	ldrh	r3, [r3, #0]
 801390e:	9306      	str	r3, [sp, #24]
 8013910:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8013914:	9305      	str	r3, [sp, #20]
 8013916:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 801391a:	9304      	str	r3, [sp, #16]
 801391c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013920:	9303      	str	r3, [sp, #12]
 8013922:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013926:	9302      	str	r3, [sp, #8]
 8013928:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801392c:	e9cd 5300 	strd	r5, r3, [sp]
 8013930:	4631      	mov	r1, r6
 8013932:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8013934:	463b      	mov	r3, r7
 8013936:	2200      	movs	r2, #0
 8013938:	4620      	mov	r0, r4
 801393a:	47a8      	blx	r5
 801393c:	b00b      	add	sp, #44	; 0x2c
 801393e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013940:	20002246 	.word	0x20002246

08013944 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8013944:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013948:	4698      	mov	r8, r3
 801394a:	6803      	ldr	r3, [r0, #0]
 801394c:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 801394e:	4b15      	ldr	r3, [pc, #84]	; (80139a4 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8013950:	b08b      	sub	sp, #44	; 0x2c
 8013952:	4617      	mov	r7, r2
 8013954:	f8b3 9000 	ldrh.w	r9, [r3]
 8013958:	460e      	mov	r6, r1
 801395a:	4604      	mov	r4, r0
 801395c:	f7f7 fb12 	bl	800af84 <_ZN8touchgfx3HAL3lcdEv>
 8013960:	6803      	ldr	r3, [r0, #0]
 8013962:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013964:	4798      	blx	r3
 8013966:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 801396a:	e9cd 0308 	strd	r0, r3, [sp, #32]
 801396e:	2302      	movs	r3, #2
 8013970:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8013974:	2301      	movs	r3, #1
 8013976:	9305      	str	r3, [sp, #20]
 8013978:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 801397c:	9304      	str	r3, [sp, #16]
 801397e:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8013982:	9303      	str	r3, [sp, #12]
 8013984:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8013988:	9302      	str	r3, [sp, #8]
 801398a:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801398e:	2200      	movs	r2, #0
 8013990:	e9cd 8300 	strd	r8, r3, [sp]
 8013994:	4631      	mov	r1, r6
 8013996:	463b      	mov	r3, r7
 8013998:	4620      	mov	r0, r4
 801399a:	47a8      	blx	r5
 801399c:	b00b      	add	sp, #44	; 0x2c
 801399e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80139a2:	bf00      	nop
 80139a4:	20002246 	.word	0x20002246

080139a8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 80139a8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80139ac:	4698      	mov	r8, r3
 80139ae:	6803      	ldr	r3, [r0, #0]
 80139b0:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 80139b2:	4b11      	ldr	r3, [pc, #68]	; (80139f8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 80139b4:	b087      	sub	sp, #28
 80139b6:	f8b3 9000 	ldrh.w	r9, [r3]
 80139ba:	460e      	mov	r6, r1
 80139bc:	4617      	mov	r7, r2
 80139be:	4604      	mov	r4, r0
 80139c0:	f7f7 fae0 	bl	800af84 <_ZN8touchgfx3HAL3lcdEv>
 80139c4:	6803      	ldr	r3, [r0, #0]
 80139c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80139c8:	4798      	blx	r3
 80139ca:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 80139ce:	f8cd 900c 	str.w	r9, [sp, #12]
 80139d2:	e9cd 0304 	strd	r0, r3, [sp, #16]
 80139d6:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 80139da:	9302      	str	r3, [sp, #8]
 80139dc:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 80139e0:	9301      	str	r3, [sp, #4]
 80139e2:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80139e6:	9300      	str	r3, [sp, #0]
 80139e8:	463a      	mov	r2, r7
 80139ea:	4643      	mov	r3, r8
 80139ec:	4631      	mov	r1, r6
 80139ee:	4620      	mov	r0, r4
 80139f0:	47a8      	blx	r5
 80139f2:	b007      	add	sp, #28
 80139f4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80139f8:	20002246 	.word	0x20002246

080139fc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 80139fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013a00:	4604      	mov	r4, r0
 8013a02:	b08f      	sub	sp, #60	; 0x3c
 8013a04:	4610      	mov	r0, r2
 8013a06:	460d      	mov	r5, r1
 8013a08:	4691      	mov	r9, r2
 8013a0a:	461e      	mov	r6, r3
 8013a0c:	f008 feba 	bl	801c784 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8013a10:	2800      	cmp	r0, #0
 8013a12:	f000 809d 	beq.w	8013b50 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 8013a16:	6823      	ldr	r3, [r4, #0]
 8013a18:	f8df b198 	ldr.w	fp, [pc, #408]	; 8013bb4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8013a1c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013a1e:	f8df a198 	ldr.w	sl, [pc, #408]	; 8013bb8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 8013a22:	4f61      	ldr	r7, [pc, #388]	; (8013ba8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8013a24:	4620      	mov	r0, r4
 8013a26:	4798      	blx	r3
 8013a28:	6823      	ldr	r3, [r4, #0]
 8013a2a:	4620      	mov	r0, r4
 8013a2c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013a2e:	4798      	blx	r3
 8013a30:	f8bb 3000 	ldrh.w	r3, [fp]
 8013a34:	9301      	str	r3, [sp, #4]
 8013a36:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8013a3a:	f8ba 3000 	ldrh.w	r3, [sl]
 8013a3e:	9302      	str	r3, [sp, #8]
 8013a40:	883b      	ldrh	r3, [r7, #0]
 8013a42:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8013a46:	9303      	str	r3, [sp, #12]
 8013a48:	4b58      	ldr	r3, [pc, #352]	; (8013bac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8013a4a:	9305      	str	r3, [sp, #20]
 8013a4c:	881a      	ldrh	r2, [r3, #0]
 8013a4e:	9204      	str	r2, [sp, #16]
 8013a50:	4640      	mov	r0, r8
 8013a52:	f008 ff2b 	bl	801c8ac <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013a56:	8038      	strh	r0, [r7, #0]
 8013a58:	4640      	mov	r0, r8
 8013a5a:	f008 ff5b 	bl	801c914 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013a5e:	9b05      	ldr	r3, [sp, #20]
 8013a60:	b280      	uxth	r0, r0
 8013a62:	8018      	strh	r0, [r3, #0]
 8013a64:	4b52      	ldr	r3, [pc, #328]	; (8013bb0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8013a66:	781b      	ldrb	r3, [r3, #0]
 8013a68:	2b00      	cmp	r3, #0
 8013a6a:	d174      	bne.n	8013b56 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8013a6c:	883b      	ldrh	r3, [r7, #0]
 8013a6e:	f8ab 3000 	strh.w	r3, [fp]
 8013a72:	f8aa 0000 	strh.w	r0, [sl]
 8013a76:	4648      	mov	r0, r9
 8013a78:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8013a7c:	f008 fe82 	bl	801c784 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8013a80:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8013a84:	2200      	movs	r2, #0
 8013a86:	4611      	mov	r1, r2
 8013a88:	4628      	mov	r0, r5
 8013a8a:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8013a8e:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8013a92:	f7f6 f9aa 	bl	8009dea <_ZN8touchgfx8Drawable5setXYEss>
 8013a96:	2301      	movs	r3, #1
 8013a98:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8013a9c:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 8013aa0:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8013aa4:	2b00      	cmp	r3, #0
 8013aa6:	dd5c      	ble.n	8013b62 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8013aa8:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8013aac:	2b00      	cmp	r3, #0
 8013aae:	dd58      	ble.n	8013b62 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8013ab0:	462a      	mov	r2, r5
 8013ab2:	ab0a      	add	r3, sp, #40	; 0x28
 8013ab4:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8013ab8:	6851      	ldr	r1, [r2, #4]
 8013aba:	c303      	stmia	r3!, {r0, r1}
 8013abc:	4631      	mov	r1, r6
 8013abe:	a80a      	add	r0, sp, #40	; 0x28
 8013ac0:	f7ff fbf8 	bl	80132b4 <_ZN8touchgfx4RectaNERKS0_>
 8013ac4:	4b38      	ldr	r3, [pc, #224]	; (8013ba8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8013ac6:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013aca:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8013ace:	2100      	movs	r1, #0
 8013ad0:	aa0a      	add	r2, sp, #40	; 0x28
 8013ad2:	4b36      	ldr	r3, [pc, #216]	; (8013bac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8013ad4:	910c      	str	r1, [sp, #48]	; 0x30
 8013ad6:	e892 0003 	ldmia.w	r2, {r0, r1}
 8013ada:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013ade:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8013ae2:	ab08      	add	r3, sp, #32
 8013ae4:	e883 0003 	stmia.w	r3, {r0, r1}
 8013ae8:	4618      	mov	r0, r3
 8013aea:	a90c      	add	r1, sp, #48	; 0x30
 8013aec:	f7ff fbe2 	bl	80132b4 <_ZN8touchgfx4RectaNERKS0_>
 8013af0:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8013af2:	2b00      	cmp	r3, #0
 8013af4:	d13c      	bne.n	8013b70 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 8013af6:	2000      	movs	r0, #0
 8013af8:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 8013afc:	2600      	movs	r6, #0
 8013afe:	682a      	ldr	r2, [r5, #0]
 8013b00:	696b      	ldr	r3, [r5, #20]
 8013b02:	616e      	str	r6, [r5, #20]
 8013b04:	9305      	str	r3, [sp, #20]
 8013b06:	6892      	ldr	r2, [r2, #8]
 8013b08:	a908      	add	r1, sp, #32
 8013b0a:	4628      	mov	r0, r5
 8013b0c:	4790      	blx	r2
 8013b0e:	9b05      	ldr	r3, [sp, #20]
 8013b10:	616b      	str	r3, [r5, #20]
 8013b12:	4652      	mov	r2, sl
 8013b14:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 8013b18:	4649      	mov	r1, r9
 8013b1a:	4628      	mov	r0, r5
 8013b1c:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 8013b20:	f7f6 f963 	bl	8009dea <_ZN8touchgfx8Drawable5setXYEss>
 8013b24:	4b23      	ldr	r3, [pc, #140]	; (8013bb4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8013b26:	9a01      	ldr	r2, [sp, #4]
 8013b28:	801a      	strh	r2, [r3, #0]
 8013b2a:	4b23      	ldr	r3, [pc, #140]	; (8013bb8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 8013b2c:	9a02      	ldr	r2, [sp, #8]
 8013b2e:	801a      	strh	r2, [r3, #0]
 8013b30:	4b1d      	ldr	r3, [pc, #116]	; (8013ba8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8013b32:	9a03      	ldr	r2, [sp, #12]
 8013b34:	801a      	strh	r2, [r3, #0]
 8013b36:	4b1d      	ldr	r3, [pc, #116]	; (8013bac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8013b38:	9a04      	ldr	r2, [sp, #16]
 8013b3a:	801a      	strh	r2, [r3, #0]
 8013b3c:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 8013b40:	6823      	ldr	r3, [r4, #0]
 8013b42:	4620      	mov	r0, r4
 8013b44:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013b46:	4798      	blx	r3
 8013b48:	6823      	ldr	r3, [r4, #0]
 8013b4a:	4620      	mov	r0, r4
 8013b4c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013b4e:	4798      	blx	r3
 8013b50:	b00f      	add	sp, #60	; 0x3c
 8013b52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013b56:	883b      	ldrh	r3, [r7, #0]
 8013b58:	f8ab 0000 	strh.w	r0, [fp]
 8013b5c:	f8aa 3000 	strh.w	r3, [sl]
 8013b60:	e789      	b.n	8013a76 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 8013b62:	462a      	mov	r2, r5
 8013b64:	ab0a      	add	r3, sp, #40	; 0x28
 8013b66:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8013b6a:	6851      	ldr	r1, [r2, #4]
 8013b6c:	c303      	stmia	r3!, {r0, r1}
 8013b6e:	e7a9      	b.n	8013ac4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 8013b70:	a807      	add	r0, sp, #28
 8013b72:	f009 f80b 	bl	801cb8c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013b76:	4606      	mov	r6, r0
 8013b78:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8013b7a:	6803      	ldr	r3, [r0, #0]
 8013b7c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013b7e:	4798      	blx	r3
 8013b80:	4286      	cmp	r6, r0
 8013b82:	d1b8      	bne.n	8013af6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8013b84:	f7f7 f9fe 	bl	800af84 <_ZN8touchgfx3HAL3lcdEv>
 8013b88:	6803      	ldr	r3, [r0, #0]
 8013b8a:	4606      	mov	r6, r0
 8013b8c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8013b8e:	9305      	str	r3, [sp, #20]
 8013b90:	a807      	add	r0, sp, #28
 8013b92:	f008 fffb 	bl	801cb8c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013b96:	9b05      	ldr	r3, [sp, #20]
 8013b98:	4601      	mov	r1, r0
 8013b9a:	4630      	mov	r0, r6
 8013b9c:	4798      	blx	r3
 8013b9e:	f080 0001 	eor.w	r0, r0, #1
 8013ba2:	b2c0      	uxtb	r0, r0
 8013ba4:	e7a8      	b.n	8013af8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 8013ba6:	bf00      	nop
 8013ba8:	20002240 	.word	0x20002240
 8013bac:	20002242 	.word	0x20002242
 8013bb0:	20002244 	.word	0x20002244
 8013bb4:	20002246 	.word	0x20002246
 8013bb8:	20002248 	.word	0x20002248

08013bbc <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8013bbc:	b510      	push	{r4, lr}
 8013bbe:	4b07      	ldr	r3, [pc, #28]	; (8013bdc <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8013bc0:	781b      	ldrb	r3, [r3, #0]
 8013bc2:	4604      	mov	r4, r0
 8013bc4:	b13b      	cbz	r3, 8013bd6 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8013bc6:	6803      	ldr	r3, [r0, #0]
 8013bc8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013bca:	4798      	blx	r3
 8013bcc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8013bce:	4283      	cmp	r3, r0
 8013bd0:	d101      	bne.n	8013bd6 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8013bd2:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8013bd4:	bd10      	pop	{r4, pc}
 8013bd6:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8013bd8:	e7fc      	b.n	8013bd4 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8013bda:	bf00      	nop
 8013bdc:	2000224a 	.word	0x2000224a

08013be0 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8013be0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013be4:	b08a      	sub	sp, #40	; 0x28
 8013be6:	461d      	mov	r5, r3
 8013be8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8013bec:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8013bf0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8013bf4:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013bf8:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013bfc:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013c00:	2400      	movs	r4, #0
 8013c02:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013c06:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 8013c0a:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013c0e:	4690      	mov	r8, r2
 8013c10:	4607      	mov	r7, r0
 8013c12:	9404      	str	r4, [sp, #16]
 8013c14:	f88d 4020 	strb.w	r4, [sp, #32]
 8013c18:	f7ff ffd0 	bl	8013bbc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013c1c:	fb06 8505 	mla	r5, r6, r5, r8
 8013c20:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8013c24:	6878      	ldr	r0, [r7, #4]
 8013c26:	9505      	str	r5, [sp, #20]
 8013c28:	f8ad 601e 	strh.w	r6, [sp, #30]
 8013c2c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8013c30:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 8013c34:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8013c38:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8013c3c:	6803      	ldr	r3, [r0, #0]
 8013c3e:	a901      	add	r1, sp, #4
 8013c40:	685b      	ldr	r3, [r3, #4]
 8013c42:	4798      	blx	r3
 8013c44:	b00a      	add	sp, #40	; 0x28
 8013c46:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08013c4a <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8013c4a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013c4e:	b08b      	sub	sp, #44	; 0x2c
 8013c50:	2400      	movs	r4, #0
 8013c52:	461d      	mov	r5, r3
 8013c54:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8013c58:	4688      	mov	r8, r1
 8013c5a:	4691      	mov	r9, r2
 8013c5c:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 8013c60:	9404      	str	r4, [sp, #16]
 8013c62:	4607      	mov	r7, r0
 8013c64:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8013c68:	f7ff ffa8 	bl	8013bbc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013c6c:	fb06 9505 	mla	r5, r6, r5, r9
 8013c70:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013c74:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013c78:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8013c7c:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8013c80:	6878      	ldr	r0, [r7, #4]
 8013c82:	9505      	str	r5, [sp, #20]
 8013c84:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013c88:	f8ad 401c 	strh.w	r4, [sp, #28]
 8013c8c:	f8ad 601e 	strh.w	r6, [sp, #30]
 8013c90:	f8cd 8010 	str.w	r8, [sp, #16]
 8013c94:	f8ad 4020 	strh.w	r4, [sp, #32]
 8013c98:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8013c9c:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8013ca0:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8013ca4:	6803      	ldr	r3, [r0, #0]
 8013ca6:	a901      	add	r1, sp, #4
 8013ca8:	685b      	ldr	r3, [r3, #4]
 8013caa:	4798      	blx	r3
 8013cac:	b00b      	add	sp, #44	; 0x2c
 8013cae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08013cb4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8013cb4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013cb8:	b08a      	sub	sp, #40	; 0x28
 8013cba:	4698      	mov	r8, r3
 8013cbc:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 8013cc0:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 8013cc4:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 8013cc8:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 8013ccc:	2300      	movs	r3, #0
 8013cce:	2d0b      	cmp	r5, #11
 8013cd0:	4606      	mov	r6, r0
 8013cd2:	9304      	str	r3, [sp, #16]
 8013cd4:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8013cd8:	d138      	bne.n	8013d4c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 8013cda:	2380      	movs	r3, #128	; 0x80
 8013cdc:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8013ce0:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013ce4:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013ce8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013cec:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013cf0:	f88d 0020 	strb.w	r0, [sp, #32]
 8013cf4:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8013cf8:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013cfc:	4630      	mov	r0, r6
 8013cfe:	9203      	str	r2, [sp, #12]
 8013d00:	f7ff ff5c 	bl	8013bbc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013d04:	2c0b      	cmp	r4, #11
 8013d06:	bf98      	it	ls
 8013d08:	4b1b      	ldrls	r3, [pc, #108]	; (8013d78 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 8013d0a:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8013d0e:	bf98      	it	ls
 8013d10:	5d19      	ldrbls	r1, [r3, r4]
 8013d12:	f8ad 701e 	strh.w	r7, [sp, #30]
 8013d16:	bf88      	it	hi
 8013d18:	2100      	movhi	r1, #0
 8013d1a:	fb02 8307 	mla	r3, r2, r7, r8
 8013d1e:	10c9      	asrs	r1, r1, #3
 8013d20:	fb01 0003 	mla	r0, r1, r3, r0
 8013d24:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 8013d28:	9005      	str	r0, [sp, #20]
 8013d2a:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8013d2e:	6870      	ldr	r0, [r6, #4]
 8013d30:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 8013d34:	2300      	movs	r3, #0
 8013d36:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8013d3a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8013d3e:	6803      	ldr	r3, [r0, #0]
 8013d40:	a901      	add	r1, sp, #4
 8013d42:	685b      	ldr	r3, [r3, #4]
 8013d44:	4798      	blx	r3
 8013d46:	b00a      	add	sp, #40	; 0x28
 8013d48:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013d4c:	2d02      	cmp	r5, #2
 8013d4e:	d109      	bne.n	8013d64 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 8013d50:	28ff      	cmp	r0, #255	; 0xff
 8013d52:	d105      	bne.n	8013d60 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 8013d54:	f1bc 0f00 	cmp.w	ip, #0
 8013d58:	bf14      	ite	ne
 8013d5a:	2340      	movne	r3, #64	; 0x40
 8013d5c:	2320      	moveq	r3, #32
 8013d5e:	e7bd      	b.n	8013cdc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013d60:	2340      	movs	r3, #64	; 0x40
 8013d62:	e7bb      	b.n	8013cdc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013d64:	28ff      	cmp	r0, #255	; 0xff
 8013d66:	d105      	bne.n	8013d74 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 8013d68:	f1bc 0f00 	cmp.w	ip, #0
 8013d6c:	bf14      	ite	ne
 8013d6e:	2304      	movne	r3, #4
 8013d70:	2301      	moveq	r3, #1
 8013d72:	e7b3      	b.n	8013cdc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013d74:	2304      	movs	r3, #4
 8013d76:	e7b1      	b.n	8013cdc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013d78:	0802efd4 	.word	0x0802efd4

08013d7c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8013d7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013d80:	b08b      	sub	sp, #44	; 0x2c
 8013d82:	461d      	mov	r5, r3
 8013d84:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8013d88:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 8013d8c:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 8013d90:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8013d94:	bf14      	ite	ne
 8013d96:	2308      	movne	r3, #8
 8013d98:	2302      	moveq	r3, #2
 8013d9a:	2400      	movs	r4, #0
 8013d9c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8013da0:	4688      	mov	r8, r1
 8013da2:	4693      	mov	fp, r2
 8013da4:	9404      	str	r4, [sp, #16]
 8013da6:	4607      	mov	r7, r0
 8013da8:	f7ff ff08 	bl	8013bbc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013dac:	2e0b      	cmp	r6, #11
 8013dae:	bf98      	it	ls
 8013db0:	4b15      	ldrls	r3, [pc, #84]	; (8013e08 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 8013db2:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8013db6:	bf98      	it	ls
 8013db8:	5d9c      	ldrbls	r4, [r3, r6]
 8013dba:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8013dbe:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013dc2:	fb05 b50a 	mla	r5, r5, sl, fp
 8013dc6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8013dca:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013dce:	10e4      	asrs	r4, r4, #3
 8013dd0:	fb04 0405 	mla	r4, r4, r5, r0
 8013dd4:	2300      	movs	r3, #0
 8013dd6:	6878      	ldr	r0, [r7, #4]
 8013dd8:	9405      	str	r4, [sp, #20]
 8013dda:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013dde:	f8ad a01e 	strh.w	sl, [sp, #30]
 8013de2:	f8cd 8010 	str.w	r8, [sp, #16]
 8013de6:	f88d 9020 	strb.w	r9, [sp, #32]
 8013dea:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 8013dee:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8013df2:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 8013df6:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 8013dfa:	6803      	ldr	r3, [r0, #0]
 8013dfc:	a901      	add	r1, sp, #4
 8013dfe:	685b      	ldr	r3, [r3, #4]
 8013e00:	4798      	blx	r3
 8013e02:	b00b      	add	sp, #44	; 0x2c
 8013e04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013e08:	0802efd4 	.word	0x0802efd4

08013e0c <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8013e0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013e10:	461e      	mov	r6, r3
 8013e12:	4b0a      	ldr	r3, [pc, #40]	; (8013e3c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8013e14:	460f      	mov	r7, r1
 8013e16:	881d      	ldrh	r5, [r3, #0]
 8013e18:	4690      	mov	r8, r2
 8013e1a:	f7f7 f8b3 	bl	800af84 <_ZN8touchgfx3HAL3lcdEv>
 8013e1e:	6803      	ldr	r3, [r0, #0]
 8013e20:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013e22:	4798      	blx	r3
 8013e24:	280b      	cmp	r0, #11
 8013e26:	bf9a      	itte	ls
 8013e28:	4b05      	ldrls	r3, [pc, #20]	; (8013e40 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8013e2a:	5c1c      	ldrbls	r4, [r3, r0]
 8013e2c:	2400      	movhi	r4, #0
 8013e2e:	fb08 7005 	mla	r0, r8, r5, r7
 8013e32:	10e4      	asrs	r4, r4, #3
 8013e34:	fb04 6000 	mla	r0, r4, r0, r6
 8013e38:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013e3c:	20002246 	.word	0x20002246
 8013e40:	0802efd4 	.word	0x0802efd4

08013e44 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8013e44:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013e46:	b08b      	sub	sp, #44	; 0x2c
 8013e48:	461f      	mov	r7, r3
 8013e4a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8013e4e:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8013e52:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8013e56:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013e5a:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013e5e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013e62:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013e66:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013e6a:	2500      	movs	r5, #0
 8013e6c:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8013e70:	f88d 3020 	strb.w	r3, [sp, #32]
 8013e74:	4604      	mov	r4, r0
 8013e76:	4616      	mov	r6, r2
 8013e78:	9504      	str	r5, [sp, #16]
 8013e7a:	f7ff fe9f 	bl	8013bbc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013e7e:	463a      	mov	r2, r7
 8013e80:	4631      	mov	r1, r6
 8013e82:	4603      	mov	r3, r0
 8013e84:	4620      	mov	r0, r4
 8013e86:	f7ff ffc1 	bl	8013e0c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8013e8a:	4b0e      	ldr	r3, [pc, #56]	; (8013ec4 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8013e8c:	9005      	str	r0, [sp, #20]
 8013e8e:	881b      	ldrh	r3, [r3, #0]
 8013e90:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013e94:	f7f7 f876 	bl	800af84 <_ZN8touchgfx3HAL3lcdEv>
 8013e98:	6803      	ldr	r3, [r0, #0]
 8013e9a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013e9c:	4798      	blx	r3
 8013e9e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8013ea0:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 8013ea4:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8013ea8:	9304      	str	r3, [sp, #16]
 8013eaa:	6860      	ldr	r0, [r4, #4]
 8013eac:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8013eb0:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8013eb4:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 8013eb8:	6803      	ldr	r3, [r0, #0]
 8013eba:	a901      	add	r1, sp, #4
 8013ebc:	685b      	ldr	r3, [r3, #4]
 8013ebe:	4798      	blx	r3
 8013ec0:	b00b      	add	sp, #44	; 0x2c
 8013ec2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013ec4:	20002246 	.word	0x20002246

08013ec8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8013ec8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013eca:	b08d      	sub	sp, #52	; 0x34
 8013ecc:	466b      	mov	r3, sp
 8013ece:	e883 0006 	stmia.w	r3, {r1, r2}
 8013ed2:	2300      	movs	r3, #0
 8013ed4:	9306      	str	r3, [sp, #24]
 8013ed6:	6803      	ldr	r3, [r0, #0]
 8013ed8:	f8bd 6000 	ldrh.w	r6, [sp]
 8013edc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013ede:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8013ee2:	2501      	movs	r5, #1
 8013ee4:	9503      	str	r5, [sp, #12]
 8013ee6:	4604      	mov	r4, r0
 8013ee8:	4798      	blx	r3
 8013eea:	463a      	mov	r2, r7
 8013eec:	4631      	mov	r1, r6
 8013eee:	4603      	mov	r3, r0
 8013ef0:	4620      	mov	r0, r4
 8013ef2:	f7ff ff8b 	bl	8013e0c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8013ef6:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8013ef8:	9307      	str	r3, [sp, #28]
 8013efa:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8013efe:	f8ad 3020 	strh.w	r3, [sp, #32]
 8013f02:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8013f06:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8013f0a:	4b0f      	ldr	r3, [pc, #60]	; (8013f48 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 8013f0c:	9004      	str	r0, [sp, #16]
 8013f0e:	881b      	ldrh	r3, [r3, #0]
 8013f10:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8013f14:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8013f18:	f7f7 f834 	bl	800af84 <_ZN8touchgfx3HAL3lcdEv>
 8013f1c:	6803      	ldr	r3, [r0, #0]
 8013f1e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013f20:	4798      	blx	r3
 8013f22:	23ff      	movs	r3, #255	; 0xff
 8013f24:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8013f28:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8013f2c:	6860      	ldr	r0, [r4, #4]
 8013f2e:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8013f32:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8013f36:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8013f3a:	6803      	ldr	r3, [r0, #0]
 8013f3c:	a903      	add	r1, sp, #12
 8013f3e:	685b      	ldr	r3, [r3, #4]
 8013f40:	4798      	blx	r3
 8013f42:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8013f44:	b00d      	add	sp, #52	; 0x34
 8013f46:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013f48:	20002246 	.word	0x20002246

08013f4c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8013f4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013f50:	b08c      	sub	sp, #48	; 0x30
 8013f52:	461e      	mov	r6, r3
 8013f54:	466d      	mov	r5, sp
 8013f56:	2300      	movs	r3, #0
 8013f58:	e885 0006 	stmia.w	r5, {r1, r2}
 8013f5c:	9306      	str	r3, [sp, #24]
 8013f5e:	6803      	ldr	r3, [r0, #0]
 8013f60:	f8bd 7000 	ldrh.w	r7, [sp]
 8013f64:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013f66:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 8013f6a:	2501      	movs	r5, #1
 8013f6c:	9503      	str	r5, [sp, #12]
 8013f6e:	4604      	mov	r4, r0
 8013f70:	4798      	blx	r3
 8013f72:	4642      	mov	r2, r8
 8013f74:	4639      	mov	r1, r7
 8013f76:	4603      	mov	r3, r0
 8013f78:	4620      	mov	r0, r4
 8013f7a:	f7ff ff47 	bl	8013e0c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8013f7e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8013f82:	f8ad 3020 	strh.w	r3, [sp, #32]
 8013f86:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8013f8a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8013f8e:	4b11      	ldr	r3, [pc, #68]	; (8013fd4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 8013f90:	9004      	str	r0, [sp, #16]
 8013f92:	881b      	ldrh	r3, [r3, #0]
 8013f94:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8013f98:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8013f9a:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8013f9e:	9607      	str	r6, [sp, #28]
 8013fa0:	f7f6 fff0 	bl	800af84 <_ZN8touchgfx3HAL3lcdEv>
 8013fa4:	6803      	ldr	r3, [r0, #0]
 8013fa6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013fa8:	4798      	blx	r3
 8013faa:	23ff      	movs	r3, #255	; 0xff
 8013fac:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8013fb0:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8013fb4:	6860      	ldr	r0, [r4, #4]
 8013fb6:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8013fba:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8013fbe:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8013fc2:	6803      	ldr	r3, [r0, #0]
 8013fc4:	a903      	add	r1, sp, #12
 8013fc6:	685b      	ldr	r3, [r3, #4]
 8013fc8:	4798      	blx	r3
 8013fca:	4630      	mov	r0, r6
 8013fcc:	b00c      	add	sp, #48	; 0x30
 8013fce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013fd2:	bf00      	nop
 8013fd4:	20002246 	.word	0x20002246

08013fd8 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 8013fd8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013fda:	b085      	sub	sp, #20
 8013fdc:	ac02      	add	r4, sp, #8
 8013fde:	e884 0006 	stmia.w	r4, {r1, r2}
 8013fe2:	4605      	mov	r5, r0
 8013fe4:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 8013fe8:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8013fec:	f7ff fde6 	bl	8013bbc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013ff0:	463a      	mov	r2, r7
 8013ff2:	4603      	mov	r3, r0
 8013ff4:	4631      	mov	r1, r6
 8013ff6:	4628      	mov	r0, r5
 8013ff8:	f7ff ff08 	bl	8013e0c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8013ffc:	4a05      	ldr	r2, [pc, #20]	; (8014014 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 8013ffe:	682b      	ldr	r3, [r5, #0]
 8014000:	8812      	ldrh	r2, [r2, #0]
 8014002:	9200      	str	r2, [sp, #0]
 8014004:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8014006:	e894 0006 	ldmia.w	r4, {r1, r2}
 801400a:	4603      	mov	r3, r0
 801400c:	4628      	mov	r0, r5
 801400e:	47b0      	blx	r6
 8014010:	b005      	add	sp, #20
 8014012:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014014:	20002246 	.word	0x20002246

08014018 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8014018:	b570      	push	{r4, r5, r6, lr}
 801401a:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 801401e:	4604      	mov	r4, r0
 8014020:	b19b      	cbz	r3, 801404a <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8014022:	2002      	movs	r0, #2
 8014024:	f7fc fee4 	bl	8010df0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 8014028:	2300      	movs	r3, #0
 801402a:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 801402e:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 8014032:	6823      	ldr	r3, [r4, #0]
 8014034:	4620      	mov	r0, r4
 8014036:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 801403a:	f7ff fdbf 	bl	8013bbc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801403e:	462b      	mov	r3, r5
 8014040:	4601      	mov	r1, r0
 8014042:	4620      	mov	r0, r4
 8014044:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014048:	4718      	bx	r3
 801404a:	bd70      	pop	{r4, r5, r6, pc}

0801404c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 801404c:	b538      	push	{r3, r4, r5, lr}
 801404e:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 8014052:	428b      	cmp	r3, r1
 8014054:	4604      	mov	r4, r0
 8014056:	460d      	mov	r5, r1
 8014058:	d006      	beq.n	8014068 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 801405a:	6803      	ldr	r3, [r0, #0]
 801405c:	b929      	cbnz	r1, 801406a <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 801405e:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8014062:	4798      	blx	r3
 8014064:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 8014068:	bd38      	pop	{r3, r4, r5, pc}
 801406a:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 801406e:	e7f8      	b.n	8014062 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

08014070 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8014070:	b510      	push	{r4, lr}
 8014072:	4b0d      	ldr	r3, [pc, #52]	; (80140a8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8014074:	781b      	ldrb	r3, [r3, #0]
 8014076:	4604      	mov	r4, r0
 8014078:	b95b      	cbnz	r3, 8014092 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801407a:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 801407e:	2b02      	cmp	r3, #2
 8014080:	d007      	beq.n	8014092 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8014082:	6840      	ldr	r0, [r0, #4]
 8014084:	f000 f928 	bl	80142d8 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8014088:	b118      	cbz	r0, 8014092 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801408a:	6862      	ldr	r2, [r4, #4]
 801408c:	7a53      	ldrb	r3, [r2, #9]
 801408e:	2b00      	cmp	r3, #0
 8014090:	d0fc      	beq.n	801408c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 8014092:	f7fd f937 	bl	8011304 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8014096:	4620      	mov	r0, r4
 8014098:	2100      	movs	r1, #0
 801409a:	f7ff ffd7 	bl	801404c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 801409e:	4620      	mov	r0, r4
 80140a0:	f7ff fd8c 	bl	8013bbc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80140a4:	bd10      	pop	{r4, pc}
 80140a6:	bf00      	nop
 80140a8:	2000224a 	.word	0x2000224a

080140ac <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 80140ac:	b570      	push	{r4, r5, r6, lr}
 80140ae:	4604      	mov	r4, r0
 80140b0:	6803      	ldr	r3, [r0, #0]
 80140b2:	b919      	cbnz	r1, 80140bc <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 80140b4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80140b6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80140ba:	4718      	bx	r3
 80140bc:	2200      	movs	r2, #0
 80140be:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 80140c2:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 80140c6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80140c8:	4798      	blx	r3
 80140ca:	6863      	ldr	r3, [r4, #4]
 80140cc:	2101      	movs	r1, #1
 80140ce:	4605      	mov	r5, r0
 80140d0:	7299      	strb	r1, [r3, #10]
 80140d2:	4620      	mov	r0, r4
 80140d4:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 80140d8:	f7ff ffb8 	bl	801404c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80140dc:	4628      	mov	r0, r5
 80140de:	bd70      	pop	{r4, r5, r6, pc}

080140e0 <_ZN8touchgfx13DMA_Interface5flushEv>:
 80140e0:	6803      	ldr	r3, [r0, #0]
 80140e2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80140e4:	4718      	bx	r3

080140e6 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 80140e6:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 80140ea:	1a13      	subs	r3, r2, r0
 80140ec:	4258      	negs	r0, r3
 80140ee:	4158      	adcs	r0, r3
 80140f0:	4770      	bx	lr

080140f2 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 80140f2:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 80140f6:	1a9b      	subs	r3, r3, r2
 80140f8:	2b00      	cmp	r3, #0
 80140fa:	bfdc      	itt	le
 80140fc:	6882      	ldrle	r2, [r0, #8]
 80140fe:	189b      	addle	r3, r3, r2
 8014100:	2b01      	cmp	r3, #1
 8014102:	bfcc      	ite	gt
 8014104:	2000      	movgt	r0, #0
 8014106:	2001      	movle	r0, #1
 8014108:	4770      	bx	lr

0801410a <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 801410a:	6902      	ldr	r2, [r0, #16]
 801410c:	6843      	ldr	r3, [r0, #4]
 801410e:	2024      	movs	r0, #36	; 0x24
 8014110:	fb00 3002 	mla	r0, r0, r2, r3
 8014114:	4770      	bx	lr

08014116 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8014116:	6803      	ldr	r3, [r0, #0]
 8014118:	691b      	ldr	r3, [r3, #16]
 801411a:	4718      	bx	r3

0801411c <_ZN8touchgfx13DMA_Interface7executeEv>:
 801411c:	b570      	push	{r4, r5, r6, lr}
 801411e:	2301      	movs	r3, #1
 8014120:	7203      	strb	r3, [r0, #8]
 8014122:	4604      	mov	r4, r0
 8014124:	6840      	ldr	r0, [r0, #4]
 8014126:	6803      	ldr	r3, [r0, #0]
 8014128:	699b      	ldr	r3, [r3, #24]
 801412a:	4798      	blx	r3
 801412c:	6803      	ldr	r3, [r0, #0]
 801412e:	2b40      	cmp	r3, #64	; 0x40
 8014130:	4605      	mov	r5, r0
 8014132:	d00c      	beq.n	801414e <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8014134:	d810      	bhi.n	8014158 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 8014136:	2b04      	cmp	r3, #4
 8014138:	d01d      	beq.n	8014176 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 801413a:	d804      	bhi.n	8014146 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 801413c:	2b01      	cmp	r3, #1
 801413e:	d006      	beq.n	801414e <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8014140:	2b02      	cmp	r3, #2
 8014142:	d02c      	beq.n	801419e <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8014144:	bd70      	pop	{r4, r5, r6, pc}
 8014146:	2b08      	cmp	r3, #8
 8014148:	d01d      	beq.n	8014186 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 801414a:	2b20      	cmp	r3, #32
 801414c:	d1fa      	bne.n	8014144 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 801414e:	6823      	ldr	r3, [r4, #0]
 8014150:	4620      	mov	r0, r4
 8014152:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8014154:	4798      	blx	r3
 8014156:	e013      	b.n	8014180 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8014158:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801415c:	d0f7      	beq.n	801414e <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801415e:	d804      	bhi.n	801416a <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 8014160:	2b80      	cmp	r3, #128	; 0x80
 8014162:	d0f4      	beq.n	801414e <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8014164:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8014168:	e7f0      	b.n	801414c <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 801416a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801416e:	d0ee      	beq.n	801414e <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8014170:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8014174:	e7e5      	b.n	8014142 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8014176:	6823      	ldr	r3, [r4, #0]
 8014178:	7f01      	ldrb	r1, [r0, #28]
 801417a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801417c:	4620      	mov	r0, r4
 801417e:	4798      	blx	r3
 8014180:	6823      	ldr	r3, [r4, #0]
 8014182:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8014184:	e006      	b.n	8014194 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8014186:	6823      	ldr	r3, [r4, #0]
 8014188:	7f01      	ldrb	r1, [r0, #28]
 801418a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801418c:	4620      	mov	r0, r4
 801418e:	4798      	blx	r3
 8014190:	6823      	ldr	r3, [r4, #0]
 8014192:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8014194:	4629      	mov	r1, r5
 8014196:	4620      	mov	r0, r4
 8014198:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801419c:	4718      	bx	r3
 801419e:	6823      	ldr	r3, [r4, #0]
 80141a0:	4620      	mov	r0, r4
 80141a2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80141a4:	4798      	blx	r3
 80141a6:	e7f3      	b.n	8014190 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

080141a8 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 80141a8:	4770      	bx	lr

080141aa <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 80141aa:	4770      	bx	lr

080141ac <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 80141ac:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 80141b0:	1ad2      	subs	r2, r2, r3
 80141b2:	2a00      	cmp	r2, #0
 80141b4:	b510      	push	{r4, lr}
 80141b6:	bfdc      	itt	le
 80141b8:	6884      	ldrle	r4, [r0, #8]
 80141ba:	1912      	addle	r2, r2, r4
 80141bc:	2a01      	cmp	r2, #1
 80141be:	dd16      	ble.n	80141ee <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 80141c0:	6842      	ldr	r2, [r0, #4]
 80141c2:	2424      	movs	r4, #36	; 0x24
 80141c4:	fb04 2303 	mla	r3, r4, r3, r2
 80141c8:	f101 0220 	add.w	r2, r1, #32
 80141cc:	f851 4b04 	ldr.w	r4, [r1], #4
 80141d0:	f843 4b04 	str.w	r4, [r3], #4
 80141d4:	4291      	cmp	r1, r2
 80141d6:	d1f9      	bne.n	80141cc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 80141d8:	780a      	ldrb	r2, [r1, #0]
 80141da:	701a      	strb	r2, [r3, #0]
 80141dc:	68c3      	ldr	r3, [r0, #12]
 80141de:	6882      	ldr	r2, [r0, #8]
 80141e0:	f3bf 8f5b 	dmb	ish
 80141e4:	3301      	adds	r3, #1
 80141e6:	429a      	cmp	r2, r3
 80141e8:	bfd8      	it	le
 80141ea:	1a9b      	suble	r3, r3, r2
 80141ec:	60c3      	str	r3, [r0, #12]
 80141ee:	bd10      	pop	{r4, pc}

080141f0 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 80141f0:	6903      	ldr	r3, [r0, #16]
 80141f2:	6882      	ldr	r2, [r0, #8]
 80141f4:	f3bf 8f5b 	dmb	ish
 80141f8:	3301      	adds	r3, #1
 80141fa:	429a      	cmp	r2, r3
 80141fc:	bfd8      	it	le
 80141fe:	1a9b      	suble	r3, r3, r2
 8014200:	6103      	str	r3, [r0, #16]
 8014202:	4770      	bx	lr

08014204 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8014204:	b570      	push	{r4, r5, r6, lr}
 8014206:	4604      	mov	r4, r0
 8014208:	460e      	mov	r6, r1
 801420a:	6860      	ldr	r0, [r4, #4]
 801420c:	6803      	ldr	r3, [r0, #0]
 801420e:	685b      	ldr	r3, [r3, #4]
 8014210:	4798      	blx	r3
 8014212:	2800      	cmp	r0, #0
 8014214:	d1f9      	bne.n	801420a <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8014216:	4d0d      	ldr	r5, [pc, #52]	; (801424c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8014218:	6828      	ldr	r0, [r5, #0]
 801421a:	6803      	ldr	r3, [r0, #0]
 801421c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801421e:	4798      	blx	r3
 8014220:	f7fd f892 	bl	8011348 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8014224:	6828      	ldr	r0, [r5, #0]
 8014226:	2101      	movs	r1, #1
 8014228:	f7ff ff10 	bl	801404c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 801422c:	6860      	ldr	r0, [r4, #4]
 801422e:	6803      	ldr	r3, [r0, #0]
 8014230:	4631      	mov	r1, r6
 8014232:	689b      	ldr	r3, [r3, #8]
 8014234:	4798      	blx	r3
 8014236:	6823      	ldr	r3, [r4, #0]
 8014238:	4620      	mov	r0, r4
 801423a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801423c:	4798      	blx	r3
 801423e:	6828      	ldr	r0, [r5, #0]
 8014240:	6803      	ldr	r3, [r0, #0]
 8014242:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014246:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8014248:	4718      	bx	r3
 801424a:	bf00      	nop
 801424c:	2000224c 	.word	0x2000224c

08014250 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8014250:	b508      	push	{r3, lr}
 8014252:	f7fd f857 	bl	8011304 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8014256:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801425a:	f7fd b869 	b.w	8011330 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0801425e <_ZN8touchgfx13DMA_Interface5startEv>:
 801425e:	b510      	push	{r4, lr}
 8014260:	4604      	mov	r4, r0
 8014262:	6840      	ldr	r0, [r0, #4]
 8014264:	6803      	ldr	r3, [r0, #0]
 8014266:	681b      	ldr	r3, [r3, #0]
 8014268:	4798      	blx	r3
 801426a:	b948      	cbnz	r0, 8014280 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801426c:	7a63      	ldrb	r3, [r4, #9]
 801426e:	b13b      	cbz	r3, 8014280 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8014270:	7a23      	ldrb	r3, [r4, #8]
 8014272:	b92b      	cbnz	r3, 8014280 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8014274:	6823      	ldr	r3, [r4, #0]
 8014276:	4620      	mov	r0, r4
 8014278:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801427a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801427e:	4718      	bx	r3
 8014280:	bd10      	pop	{r4, pc}

08014282 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8014282:	b570      	push	{r4, r5, r6, lr}
 8014284:	4604      	mov	r4, r0
 8014286:	6840      	ldr	r0, [r0, #4]
 8014288:	6803      	ldr	r3, [r0, #0]
 801428a:	681b      	ldr	r3, [r3, #0]
 801428c:	4798      	blx	r3
 801428e:	4605      	mov	r5, r0
 8014290:	b930      	cbnz	r0, 80142a0 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8014292:	7a23      	ldrb	r3, [r4, #8]
 8014294:	b123      	cbz	r3, 80142a0 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8014296:	6860      	ldr	r0, [r4, #4]
 8014298:	6803      	ldr	r3, [r0, #0]
 801429a:	695b      	ldr	r3, [r3, #20]
 801429c:	4798      	blx	r3
 801429e:	7225      	strb	r5, [r4, #8]
 80142a0:	6860      	ldr	r0, [r4, #4]
 80142a2:	6803      	ldr	r3, [r0, #0]
 80142a4:	681b      	ldr	r3, [r3, #0]
 80142a6:	4798      	blx	r3
 80142a8:	b928      	cbnz	r0, 80142b6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 80142aa:	6823      	ldr	r3, [r4, #0]
 80142ac:	4620      	mov	r0, r4
 80142ae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80142b0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80142b4:	4718      	bx	r3
 80142b6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80142ba:	f7fd b851 	b.w	8011360 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>
	...

080142c0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 80142c0:	b510      	push	{r4, lr}
 80142c2:	4c04      	ldr	r4, [pc, #16]	; (80142d4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 80142c4:	6082      	str	r2, [r0, #8]
 80142c6:	2200      	movs	r2, #0
 80142c8:	e9c0 4100 	strd	r4, r1, [r0]
 80142cc:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80142d0:	bd10      	pop	{r4, pc}
 80142d2:	bf00      	nop
 80142d4:	0802f110 	.word	0x0802f110

080142d8 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 80142d8:	6840      	ldr	r0, [r0, #4]
 80142da:	6803      	ldr	r3, [r0, #0]
 80142dc:	681b      	ldr	r3, [r3, #0]
 80142de:	4718      	bx	r3

080142e0 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
 80142e0:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 80142e4:	4770      	bx	lr

080142e6 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:
 80142e6:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 80142ea:	4770      	bx	lr

080142ec <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
 80142ec:	2200      	movs	r2, #0
 80142ee:	8002      	strh	r2, [r0, #0]
 80142f0:	8042      	strh	r2, [r0, #2]
 80142f2:	8082      	strh	r2, [r0, #4]
 80142f4:	80c2      	strh	r2, [r0, #6]
 80142f6:	4770      	bx	lr

080142f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 80142f8:	b507      	push	{r0, r1, r2, lr}
 80142fa:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 80142fe:	ab01      	add	r3, sp, #4
 8014300:	6809      	ldr	r1, [r1, #0]
 8014302:	6800      	ldr	r0, [r0, #0]
 8014304:	f006 fa5e 	bl	801a7c4 <_ZN8touchgfx6muldivElllRl>
 8014308:	b003      	add	sp, #12
 801430a:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08014310 <_ZN8touchgfx7CWRUtil4sineEi>:
 8014310:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8014314:	fb90 f2f3 	sdiv	r2, r0, r3
 8014318:	fb02 0013 	mls	r0, r2, r3, r0
 801431c:	2800      	cmp	r0, #0
 801431e:	bfb8      	it	lt
 8014320:	18c0      	addlt	r0, r0, r3
 8014322:	285a      	cmp	r0, #90	; 0x5a
 8014324:	4b09      	ldr	r3, [pc, #36]	; (801434c <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 8014326:	dc02      	bgt.n	801432e <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 8014328:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801432c:	4770      	bx	lr
 801432e:	28b4      	cmp	r0, #180	; 0xb4
 8014330:	dc02      	bgt.n	8014338 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 8014332:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 8014336:	e7f7      	b.n	8014328 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 8014338:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 801433c:	bfd4      	ite	le
 801433e:	38b4      	suble	r0, #180	; 0xb4
 8014340:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 8014344:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8014348:	4240      	negs	r0, r0
 801434a:	4770      	bx	lr
 801434c:	0802f12c 	.word	0x0802f12c

08014350 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 8014350:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 8014354:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8014356:	fb90 f2f3 	sdiv	r2, r0, r3
 801435a:	fb02 0013 	mls	r0, r2, r3, r0
 801435e:	2800      	cmp	r0, #0
 8014360:	bfb8      	it	lt
 8014362:	18c0      	addlt	r0, r0, r3
 8014364:	1144      	asrs	r4, r0, #5
 8014366:	f000 061f 	and.w	r6, r0, #31
 801436a:	4620      	mov	r0, r4
 801436c:	f7ff ffd0 	bl	8014310 <_ZN8touchgfx7CWRUtil4sineEi>
 8014370:	4605      	mov	r5, r0
 8014372:	b90e      	cbnz	r6, 8014378 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 8014374:	b002      	add	sp, #8
 8014376:	bd70      	pop	{r4, r5, r6, pc}
 8014378:	1c60      	adds	r0, r4, #1
 801437a:	f7ff ffc9 	bl	8014310 <_ZN8touchgfx7CWRUtil4sineEi>
 801437e:	ab01      	add	r3, sp, #4
 8014380:	2220      	movs	r2, #32
 8014382:	4631      	mov	r1, r6
 8014384:	1b40      	subs	r0, r0, r5
 8014386:	f006 fa1d 	bl	801a7c4 <_ZN8touchgfx6muldivElllRl>
 801438a:	4428      	add	r0, r5
 801438c:	e7f2      	b.n	8014374 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

0801438e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 801438e:	b508      	push	{r3, lr}
 8014390:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 8014394:	f7ff ffdc 	bl	8014350 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8014398:	bd08      	pop	{r3, pc}
	...

0801439c <_ZN8touchgfx6CircleC1Ev>:
 801439c:	b510      	push	{r4, lr}
 801439e:	4604      	mov	r4, r0
 80143a0:	f000 fd68 	bl	8014e74 <_ZN8touchgfx12CanvasWidgetC1Ev>
 80143a4:	4b08      	ldr	r3, [pc, #32]	; (80143c8 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 80143a6:	6023      	str	r3, [r4, #0]
 80143a8:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 80143ac:	2300      	movs	r3, #0
 80143ae:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 80143b2:	f24b 4205 	movw	r2, #46085	; 0xb405
 80143b6:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 80143ba:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 80143be:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 80143c2:	60a3      	str	r3, [r4, #8]
 80143c4:	4620      	mov	r0, r4
 80143c6:	bd10      	pop	{r4, pc}
 80143c8:	0802f1ec 	.word	0x0802f1ec

080143cc <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 80143cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80143d0:	428a      	cmp	r2, r1
 80143d2:	4680      	mov	r8, r0
 80143d4:	4610      	mov	r0, r2
 80143d6:	4699      	mov	r9, r3
 80143d8:	bfa6      	itte	ge
 80143da:	460a      	movge	r2, r1
 80143dc:	4603      	movge	r3, r0
 80143de:	460b      	movlt	r3, r1
 80143e0:	1a99      	subs	r1, r3, r2
 80143e2:	b085      	sub	sp, #20
 80143e4:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 80143e8:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 80143ec:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80143ee:	bfa4      	itt	ge
 80143f0:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 80143f4:	2200      	movge	r2, #0
 80143f6:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 80143fa:	9300      	str	r3, [sp, #0]
 80143fc:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 8014400:	f102 0b01 	add.w	fp, r2, #1
 8014404:	2c00      	cmp	r4, #0
 8014406:	f040 80af 	bne.w	8014568 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 801440a:	4610      	mov	r0, r2
 801440c:	9201      	str	r2, [sp, #4]
 801440e:	f7ff ff9f 	bl	8014350 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8014412:	a903      	add	r1, sp, #12
 8014414:	9003      	str	r0, [sp, #12]
 8014416:	4650      	mov	r0, sl
 8014418:	f7ff ff6e 	bl	80142f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801441c:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8014420:	9a01      	ldr	r2, [sp, #4]
 8014422:	4408      	add	r0, r1
 8014424:	f8d9 1000 	ldr.w	r1, [r9]
 8014428:	4281      	cmp	r1, r0
 801442a:	bfc8      	it	gt
 801442c:	f8c9 0000 	strgt.w	r0, [r9]
 8014430:	6839      	ldr	r1, [r7, #0]
 8014432:	4288      	cmp	r0, r1
 8014434:	bfc8      	it	gt
 8014436:	6038      	strgt	r0, [r7, #0]
 8014438:	4610      	mov	r0, r2
 801443a:	f7ff ffa8 	bl	801438e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 801443e:	a903      	add	r1, sp, #12
 8014440:	9003      	str	r0, [sp, #12]
 8014442:	4650      	mov	r0, sl
 8014444:	f7ff ff58 	bl	80142f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014448:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 801444c:	1a10      	subs	r0, r2, r0
 801444e:	6832      	ldr	r2, [r6, #0]
 8014450:	4282      	cmp	r2, r0
 8014452:	bfc8      	it	gt
 8014454:	6030      	strgt	r0, [r6, #0]
 8014456:	682a      	ldr	r2, [r5, #0]
 8014458:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 801445c:	4290      	cmp	r0, r2
 801445e:	fb9b f2f1 	sdiv	r2, fp, r1
 8014462:	fb01 b212 	mls	r2, r1, r2, fp
 8014466:	eba1 0202 	sub.w	r2, r1, r2
 801446a:	bfc8      	it	gt
 801446c:	6028      	strgt	r0, [r5, #0]
 801446e:	fb92 f0f1 	sdiv	r0, r2, r1
 8014472:	fb01 2210 	mls	r2, r1, r0, r2
 8014476:	4493      	add	fp, r2
 8014478:	9b00      	ldr	r3, [sp, #0]
 801447a:	455b      	cmp	r3, fp
 801447c:	db2a      	blt.n	80144d4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 801447e:	4658      	mov	r0, fp
 8014480:	f7ff ff66 	bl	8014350 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8014484:	a903      	add	r1, sp, #12
 8014486:	9003      	str	r0, [sp, #12]
 8014488:	4650      	mov	r0, sl
 801448a:	f7ff ff35 	bl	80142f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801448e:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8014492:	4410      	add	r0, r2
 8014494:	f8d9 2000 	ldr.w	r2, [r9]
 8014498:	4282      	cmp	r2, r0
 801449a:	bfc8      	it	gt
 801449c:	f8c9 0000 	strgt.w	r0, [r9]
 80144a0:	683a      	ldr	r2, [r7, #0]
 80144a2:	4290      	cmp	r0, r2
 80144a4:	bfc8      	it	gt
 80144a6:	6038      	strgt	r0, [r7, #0]
 80144a8:	4658      	mov	r0, fp
 80144aa:	f7ff ff70 	bl	801438e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80144ae:	a903      	add	r1, sp, #12
 80144b0:	9003      	str	r0, [sp, #12]
 80144b2:	4650      	mov	r0, sl
 80144b4:	f7ff ff20 	bl	80142f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80144b8:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80144bc:	1a10      	subs	r0, r2, r0
 80144be:	6832      	ldr	r2, [r6, #0]
 80144c0:	4282      	cmp	r2, r0
 80144c2:	bfc8      	it	gt
 80144c4:	6030      	strgt	r0, [r6, #0]
 80144c6:	682a      	ldr	r2, [r5, #0]
 80144c8:	4290      	cmp	r0, r2
 80144ca:	bfc8      	it	gt
 80144cc:	6028      	strgt	r0, [r5, #0]
 80144ce:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 80144d2:	e7d1      	b.n	8014478 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 80144d4:	9b00      	ldr	r3, [sp, #0]
 80144d6:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 80144da:	455b      	cmp	r3, fp
 80144dc:	dd27      	ble.n	801452e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 80144de:	4618      	mov	r0, r3
 80144e0:	f7ff ff36 	bl	8014350 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80144e4:	a903      	add	r1, sp, #12
 80144e6:	9003      	str	r0, [sp, #12]
 80144e8:	4650      	mov	r0, sl
 80144ea:	f7ff ff05 	bl	80142f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80144ee:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80144f2:	4410      	add	r0, r2
 80144f4:	f8d9 2000 	ldr.w	r2, [r9]
 80144f8:	4282      	cmp	r2, r0
 80144fa:	bfc8      	it	gt
 80144fc:	f8c9 0000 	strgt.w	r0, [r9]
 8014500:	683a      	ldr	r2, [r7, #0]
 8014502:	4290      	cmp	r0, r2
 8014504:	bfc8      	it	gt
 8014506:	6038      	strgt	r0, [r7, #0]
 8014508:	9800      	ldr	r0, [sp, #0]
 801450a:	f7ff ff40 	bl	801438e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 801450e:	a903      	add	r1, sp, #12
 8014510:	9003      	str	r0, [sp, #12]
 8014512:	4650      	mov	r0, sl
 8014514:	f7ff fef0 	bl	80142f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014518:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 801451c:	1a10      	subs	r0, r2, r0
 801451e:	6832      	ldr	r2, [r6, #0]
 8014520:	4282      	cmp	r2, r0
 8014522:	bfc8      	it	gt
 8014524:	6030      	strgt	r0, [r6, #0]
 8014526:	682a      	ldr	r2, [r5, #0]
 8014528:	4290      	cmp	r0, r2
 801452a:	bfc8      	it	gt
 801452c:	6028      	strgt	r0, [r5, #0]
 801452e:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8014532:	f8d9 1000 	ldr.w	r1, [r9]
 8014536:	4291      	cmp	r1, r2
 8014538:	bfc8      	it	gt
 801453a:	f8c9 2000 	strgt.w	r2, [r9]
 801453e:	683a      	ldr	r2, [r7, #0]
 8014540:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 8014544:	429a      	cmp	r2, r3
 8014546:	bfb8      	it	lt
 8014548:	603b      	strlt	r3, [r7, #0]
 801454a:	6832      	ldr	r2, [r6, #0]
 801454c:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8014550:	429a      	cmp	r2, r3
 8014552:	bfc8      	it	gt
 8014554:	6033      	strgt	r3, [r6, #0]
 8014556:	682a      	ldr	r2, [r5, #0]
 8014558:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 801455c:	429a      	cmp	r2, r3
 801455e:	da00      	bge.n	8014562 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 8014560:	602b      	str	r3, [r5, #0]
 8014562:	b005      	add	sp, #20
 8014564:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014568:	2002      	movs	r0, #2
 801456a:	3401      	adds	r4, #1
 801456c:	fb94 f4f0 	sdiv	r4, r4, r0
 8014570:	4610      	mov	r0, r2
 8014572:	9201      	str	r2, [sp, #4]
 8014574:	f7ff feec 	bl	8014350 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8014578:	a903      	add	r1, sp, #12
 801457a:	9003      	str	r0, [sp, #12]
 801457c:	4650      	mov	r0, sl
 801457e:	f7ff febb 	bl	80142f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014582:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8014586:	9a01      	ldr	r2, [sp, #4]
 8014588:	4408      	add	r0, r1
 801458a:	f8d9 1000 	ldr.w	r1, [r9]
 801458e:	1b03      	subs	r3, r0, r4
 8014590:	4299      	cmp	r1, r3
 8014592:	bfc8      	it	gt
 8014594:	f8c9 3000 	strgt.w	r3, [r9]
 8014598:	6839      	ldr	r1, [r7, #0]
 801459a:	428b      	cmp	r3, r1
 801459c:	bfc8      	it	gt
 801459e:	603b      	strgt	r3, [r7, #0]
 80145a0:	f8d9 1000 	ldr.w	r1, [r9]
 80145a4:	4420      	add	r0, r4
 80145a6:	4281      	cmp	r1, r0
 80145a8:	bfc8      	it	gt
 80145aa:	f8c9 0000 	strgt.w	r0, [r9]
 80145ae:	6839      	ldr	r1, [r7, #0]
 80145b0:	4288      	cmp	r0, r1
 80145b2:	bfc8      	it	gt
 80145b4:	6038      	strgt	r0, [r7, #0]
 80145b6:	4610      	mov	r0, r2
 80145b8:	f7ff fee9 	bl	801438e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80145bc:	a903      	add	r1, sp, #12
 80145be:	9003      	str	r0, [sp, #12]
 80145c0:	4650      	mov	r0, sl
 80145c2:	f7ff fe99 	bl	80142f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80145c6:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80145ca:	1a10      	subs	r0, r2, r0
 80145cc:	6832      	ldr	r2, [r6, #0]
 80145ce:	1b01      	subs	r1, r0, r4
 80145d0:	428a      	cmp	r2, r1
 80145d2:	bfc8      	it	gt
 80145d4:	6031      	strgt	r1, [r6, #0]
 80145d6:	682a      	ldr	r2, [r5, #0]
 80145d8:	4291      	cmp	r1, r2
 80145da:	bfc8      	it	gt
 80145dc:	6029      	strgt	r1, [r5, #0]
 80145de:	6832      	ldr	r2, [r6, #0]
 80145e0:	4420      	add	r0, r4
 80145e2:	4282      	cmp	r2, r0
 80145e4:	bfc8      	it	gt
 80145e6:	6030      	strgt	r0, [r6, #0]
 80145e8:	682a      	ldr	r2, [r5, #0]
 80145ea:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 80145ee:	4290      	cmp	r0, r2
 80145f0:	fb9b f2f1 	sdiv	r2, fp, r1
 80145f4:	fb01 b212 	mls	r2, r1, r2, fp
 80145f8:	eba1 0202 	sub.w	r2, r1, r2
 80145fc:	bfc8      	it	gt
 80145fe:	6028      	strgt	r0, [r5, #0]
 8014600:	fb92 f0f1 	sdiv	r0, r2, r1
 8014604:	fb01 2210 	mls	r2, r1, r0, r2
 8014608:	4493      	add	fp, r2
 801460a:	9b00      	ldr	r3, [sp, #0]
 801460c:	455b      	cmp	r3, fp
 801460e:	db40      	blt.n	8014692 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 8014610:	4658      	mov	r0, fp
 8014612:	f7ff fe9d 	bl	8014350 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8014616:	a903      	add	r1, sp, #12
 8014618:	9003      	str	r0, [sp, #12]
 801461a:	4650      	mov	r0, sl
 801461c:	f7ff fe6c 	bl	80142f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014620:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8014624:	4410      	add	r0, r2
 8014626:	f8d9 2000 	ldr.w	r2, [r9]
 801462a:	1b01      	subs	r1, r0, r4
 801462c:	428a      	cmp	r2, r1
 801462e:	bfc8      	it	gt
 8014630:	f8c9 1000 	strgt.w	r1, [r9]
 8014634:	683a      	ldr	r2, [r7, #0]
 8014636:	4291      	cmp	r1, r2
 8014638:	bfc8      	it	gt
 801463a:	6039      	strgt	r1, [r7, #0]
 801463c:	f8d9 2000 	ldr.w	r2, [r9]
 8014640:	4420      	add	r0, r4
 8014642:	4282      	cmp	r2, r0
 8014644:	bfc8      	it	gt
 8014646:	f8c9 0000 	strgt.w	r0, [r9]
 801464a:	683a      	ldr	r2, [r7, #0]
 801464c:	4290      	cmp	r0, r2
 801464e:	bfc8      	it	gt
 8014650:	6038      	strgt	r0, [r7, #0]
 8014652:	4658      	mov	r0, fp
 8014654:	f7ff fe9b 	bl	801438e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8014658:	a903      	add	r1, sp, #12
 801465a:	9003      	str	r0, [sp, #12]
 801465c:	4650      	mov	r0, sl
 801465e:	f7ff fe4b 	bl	80142f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014662:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8014666:	1a10      	subs	r0, r2, r0
 8014668:	6832      	ldr	r2, [r6, #0]
 801466a:	1b01      	subs	r1, r0, r4
 801466c:	428a      	cmp	r2, r1
 801466e:	bfc8      	it	gt
 8014670:	6031      	strgt	r1, [r6, #0]
 8014672:	682a      	ldr	r2, [r5, #0]
 8014674:	4291      	cmp	r1, r2
 8014676:	bfc8      	it	gt
 8014678:	6029      	strgt	r1, [r5, #0]
 801467a:	6832      	ldr	r2, [r6, #0]
 801467c:	4420      	add	r0, r4
 801467e:	4282      	cmp	r2, r0
 8014680:	bfc8      	it	gt
 8014682:	6030      	strgt	r0, [r6, #0]
 8014684:	682a      	ldr	r2, [r5, #0]
 8014686:	4290      	cmp	r0, r2
 8014688:	bfc8      	it	gt
 801468a:	6028      	strgt	r0, [r5, #0]
 801468c:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 8014690:	e7bb      	b.n	801460a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 8014692:	9b00      	ldr	r3, [sp, #0]
 8014694:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8014698:	455b      	cmp	r3, fp
 801469a:	f77f af62 	ble.w	8014562 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 801469e:	4618      	mov	r0, r3
 80146a0:	f7ff fe56 	bl	8014350 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80146a4:	a903      	add	r1, sp, #12
 80146a6:	9003      	str	r0, [sp, #12]
 80146a8:	4650      	mov	r0, sl
 80146aa:	f7ff fe25 	bl	80142f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80146ae:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80146b2:	4410      	add	r0, r2
 80146b4:	f8d9 2000 	ldr.w	r2, [r9]
 80146b8:	1b01      	subs	r1, r0, r4
 80146ba:	428a      	cmp	r2, r1
 80146bc:	bfc8      	it	gt
 80146be:	f8c9 1000 	strgt.w	r1, [r9]
 80146c2:	683a      	ldr	r2, [r7, #0]
 80146c4:	4291      	cmp	r1, r2
 80146c6:	bfc8      	it	gt
 80146c8:	6039      	strgt	r1, [r7, #0]
 80146ca:	f8d9 2000 	ldr.w	r2, [r9]
 80146ce:	4420      	add	r0, r4
 80146d0:	4282      	cmp	r2, r0
 80146d2:	bfc8      	it	gt
 80146d4:	f8c9 0000 	strgt.w	r0, [r9]
 80146d8:	683b      	ldr	r3, [r7, #0]
 80146da:	4298      	cmp	r0, r3
 80146dc:	bfc8      	it	gt
 80146de:	6038      	strgt	r0, [r7, #0]
 80146e0:	9800      	ldr	r0, [sp, #0]
 80146e2:	f7ff fe54 	bl	801438e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80146e6:	a903      	add	r1, sp, #12
 80146e8:	9003      	str	r0, [sp, #12]
 80146ea:	4650      	mov	r0, sl
 80146ec:	f7ff fe04 	bl	80142f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80146f0:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 80146f4:	6832      	ldr	r2, [r6, #0]
 80146f6:	1a18      	subs	r0, r3, r0
 80146f8:	1b03      	subs	r3, r0, r4
 80146fa:	429a      	cmp	r2, r3
 80146fc:	bfc8      	it	gt
 80146fe:	6033      	strgt	r3, [r6, #0]
 8014700:	682a      	ldr	r2, [r5, #0]
 8014702:	4293      	cmp	r3, r2
 8014704:	bfc8      	it	gt
 8014706:	602b      	strgt	r3, [r5, #0]
 8014708:	6833      	ldr	r3, [r6, #0]
 801470a:	4404      	add	r4, r0
 801470c:	42a3      	cmp	r3, r4
 801470e:	bfc8      	it	gt
 8014710:	6034      	strgt	r4, [r6, #0]
 8014712:	682b      	ldr	r3, [r5, #0]
 8014714:	429c      	cmp	r4, r3
 8014716:	bfc8      	it	gt
 8014718:	602c      	strgt	r4, [r5, #0]
 801471a:	e722      	b.n	8014562 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

0801471c <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 801471c:	b530      	push	{r4, r5, lr}
 801471e:	4604      	mov	r4, r0
 8014720:	4608      	mov	r0, r1
 8014722:	4611      	mov	r1, r2
 8014724:	461a      	mov	r2, r3
 8014726:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 801472a:	b089      	sub	sp, #36	; 0x24
 801472c:	015b      	lsls	r3, r3, #5
 801472e:	9304      	str	r3, [sp, #16]
 8014730:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8014734:	2500      	movs	r5, #0
 8014736:	015b      	lsls	r3, r3, #5
 8014738:	e9cd 3506 	strd	r3, r5, [sp, #24]
 801473c:	ab07      	add	r3, sp, #28
 801473e:	9302      	str	r3, [sp, #8]
 8014740:	ab06      	add	r3, sp, #24
 8014742:	9301      	str	r3, [sp, #4]
 8014744:	ab05      	add	r3, sp, #20
 8014746:	9300      	str	r3, [sp, #0]
 8014748:	ab04      	add	r3, sp, #16
 801474a:	9505      	str	r5, [sp, #20]
 801474c:	f7ff fe3e 	bl	80143cc <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 8014750:	2520      	movs	r5, #32
 8014752:	9a04      	ldr	r2, [sp, #16]
 8014754:	9805      	ldr	r0, [sp, #20]
 8014756:	fb92 f2f5 	sdiv	r2, r2, r5
 801475a:	fb90 f0f5 	sdiv	r0, r0, r5
 801475e:	b292      	uxth	r2, r2
 8014760:	3002      	adds	r0, #2
 8014762:	1a80      	subs	r0, r0, r2
 8014764:	9b06      	ldr	r3, [sp, #24]
 8014766:	9907      	ldr	r1, [sp, #28]
 8014768:	fb93 f3f5 	sdiv	r3, r3, r5
 801476c:	fb91 f1f5 	sdiv	r1, r1, r5
 8014770:	b29b      	uxth	r3, r3
 8014772:	3102      	adds	r1, #2
 8014774:	1ac9      	subs	r1, r1, r3
 8014776:	3a01      	subs	r2, #1
 8014778:	3b01      	subs	r3, #1
 801477a:	80a0      	strh	r0, [r4, #4]
 801477c:	4620      	mov	r0, r4
 801477e:	8022      	strh	r2, [r4, #0]
 8014780:	8063      	strh	r3, [r4, #2]
 8014782:	80e1      	strh	r1, [r4, #6]
 8014784:	b009      	add	sp, #36	; 0x24
 8014786:	bd30      	pop	{r4, r5, pc}

08014788 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 8014788:	b510      	push	{r4, lr}
 801478a:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 801478e:	4604      	mov	r4, r0
 8014790:	f7ff ffc4 	bl	801471c <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8014794:	4620      	mov	r0, r4
 8014796:	bd10      	pop	{r4, pc}

08014798 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 8014798:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801479a:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 801479e:	4606      	mov	r6, r0
 80147a0:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 80147a4:	6813      	ldr	r3, [r2, #0]
 80147a6:	42a5      	cmp	r5, r4
 80147a8:	ea4f 1040 	mov.w	r0, r0, lsl #5
 80147ac:	da2b      	bge.n	8014806 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 80147ae:	42a3      	cmp	r3, r4
 80147b0:	dd14      	ble.n	80147dc <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 80147b2:	b168      	cbz	r0, 80147d0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80147b4:	4267      	negs	r7, r4
 80147b6:	fb97 f2f0 	sdiv	r2, r7, r0
 80147ba:	fb00 7212 	mls	r2, r0, r2, r7
 80147be:	1a82      	subs	r2, r0, r2
 80147c0:	fb92 f7f0 	sdiv	r7, r2, r0
 80147c4:	fb00 2017 	mls	r0, r0, r7, r2
 80147c8:	1a24      	subs	r4, r4, r0
 80147ca:	42ac      	cmp	r4, r5
 80147cc:	bfb8      	it	lt
 80147ce:	462c      	movlt	r4, r5
 80147d0:	4630      	mov	r0, r6
 80147d2:	4622      	mov	r2, r4
 80147d4:	f7ff ffa2 	bl	801471c <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 80147d8:	4630      	mov	r0, r6
 80147da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80147dc:	42ab      	cmp	r3, r5
 80147de:	dd0e      	ble.n	80147fe <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 80147e0:	b168      	cbz	r0, 80147fe <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 80147e2:	425f      	negs	r7, r3
 80147e4:	fb97 f2f0 	sdiv	r2, r7, r0
 80147e8:	fb00 7212 	mls	r2, r0, r2, r7
 80147ec:	1a82      	subs	r2, r0, r2
 80147ee:	fb92 f7f0 	sdiv	r7, r2, r0
 80147f2:	fb00 2017 	mls	r0, r0, r7, r2
 80147f6:	1a1b      	subs	r3, r3, r0
 80147f8:	42ab      	cmp	r3, r5
 80147fa:	bfb8      	it	lt
 80147fc:	462b      	movlt	r3, r5
 80147fe:	4622      	mov	r2, r4
 8014800:	461c      	mov	r4, r3
 8014802:	4613      	mov	r3, r2
 8014804:	e7e4      	b.n	80147d0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8014806:	42a3      	cmp	r3, r4
 8014808:	da10      	bge.n	801482c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 801480a:	b148      	cbz	r0, 8014820 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 801480c:	fb94 f2f0 	sdiv	r2, r4, r0
 8014810:	fb00 4212 	mls	r2, r0, r2, r4
 8014814:	1a82      	subs	r2, r0, r2
 8014816:	fb92 f7f0 	sdiv	r7, r2, r0
 801481a:	fb00 2017 	mls	r0, r0, r7, r2
 801481e:	4404      	add	r4, r0
 8014820:	42a5      	cmp	r5, r4
 8014822:	bfa8      	it	ge
 8014824:	4625      	movge	r5, r4
 8014826:	461c      	mov	r4, r3
 8014828:	462b      	mov	r3, r5
 801482a:	e7d1      	b.n	80147d0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 801482c:	42ab      	cmp	r3, r5
 801482e:	dacf      	bge.n	80147d0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8014830:	2800      	cmp	r0, #0
 8014832:	d0cd      	beq.n	80147d0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8014834:	fb93 f2f0 	sdiv	r2, r3, r0
 8014838:	fb00 3212 	mls	r2, r0, r2, r3
 801483c:	1a82      	subs	r2, r0, r2
 801483e:	fb92 f7f0 	sdiv	r7, r2, r0
 8014842:	fb00 2017 	mls	r0, r0, r7, r2
 8014846:	4403      	add	r3, r0
 8014848:	42ab      	cmp	r3, r5
 801484a:	bfa8      	it	ge
 801484c:	462b      	movge	r3, r5
 801484e:	e7bf      	b.n	80147d0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

08014850 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 8014850:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014854:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 8014858:	42ae      	cmp	r6, r5
 801485a:	bfa2      	ittt	ge
 801485c:	4633      	movge	r3, r6
 801485e:	462e      	movge	r6, r5
 8014860:	461d      	movge	r5, r3
 8014862:	1bab      	subs	r3, r5, r6
 8014864:	468b      	mov	fp, r1
 8014866:	6c01      	ldr	r1, [r0, #64]	; 0x40
 8014868:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 801486c:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 8014870:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8014874:	f04f 0220 	mov.w	r2, #32
 8014878:	b0ab      	sub	sp, #172	; 0xac
 801487a:	4604      	mov	r4, r0
 801487c:	bfa4      	itt	ge
 801487e:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 8014882:	2600      	movge	r6, #0
 8014884:	fb99 f9f2 	sdiv	r9, r9, r2
 8014888:	fb9a faf2 	sdiv	sl, sl, r2
 801488c:	6b43      	ldr	r3, [r0, #52]	; 0x34
 801488e:	2900      	cmp	r1, #0
 8014890:	f000 80f5 	beq.w	8014a7e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22e>
 8014894:	f9bb 0000 	ldrsh.w	r0, [fp]
 8014898:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 801489c:	eba9 0700 	sub.w	r7, r9, r0
 80148a0:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 80148a4:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 80148a8:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 80148ac:	ebaa 0802 	sub.w	r8, sl, r2
 80148b0:	4407      	add	r7, r0
 80148b2:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 80148b6:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 80148ba:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 80148be:	b23f      	sxth	r7, r7
 80148c0:	4490      	add	r8, r2
 80148c2:	eba9 0707 	sub.w	r7, r9, r7
 80148c6:	fa0f f888 	sxth.w	r8, r8
 80148ca:	ebaa 0808 	sub.w	r8, sl, r8
 80148ce:	2f00      	cmp	r7, #0
 80148d0:	bfb8      	it	lt
 80148d2:	427f      	neglt	r7, r7
 80148d4:	f1b8 0f00 	cmp.w	r8, #0
 80148d8:	bfb8      	it	lt
 80148da:	f1c8 0800 	rsblt	r8, r8, #0
 80148de:	45bc      	cmp	ip, r7
 80148e0:	bfcc      	ite	gt
 80148e2:	f10c 0701 	addgt.w	r7, ip, #1
 80148e6:	3701      	addle	r7, #1
 80148e8:	4540      	cmp	r0, r8
 80148ea:	bfc8      	it	gt
 80148ec:	f100 0801 	addgt.w	r8, r0, #1
 80148f0:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 80148f4:	f100 0001 	add.w	r0, r0, #1
 80148f8:	ea4f 0060 	mov.w	r0, r0, asr #1
 80148fc:	f04f 0202 	mov.w	r2, #2
 8014900:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8014904:	fb91 f1f2 	sdiv	r1, r1, r2
 8014908:	eba3 0301 	sub.w	r3, r3, r1
 801490c:	bfd8      	it	le
 801490e:	f108 0801 	addle.w	r8, r8, #1
 8014912:	9201      	str	r2, [sp, #4]
 8014914:	930d      	str	r3, [sp, #52]	; 0x34
 8014916:	f7ff fcfb 	bl	8014310 <_ZN8touchgfx7CWRUtil4sineEi>
 801491a:	a92a      	add	r1, sp, #168	; 0xa8
 801491c:	fb08 f808 	mul.w	r8, r8, r8
 8014920:	f841 0d70 	str.w	r0, [r1, #-112]!
 8014924:	a80d      	add	r0, sp, #52	; 0x34
 8014926:	f7ff fce7 	bl	80142f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801492a:	fb07 8707 	mla	r7, r7, r7, r8
 801492e:	f04f 0c20 	mov.w	ip, #32
 8014932:	fb90 f0fc 	sdiv	r0, r0, ip
 8014936:	4340      	muls	r0, r0
 8014938:	4287      	cmp	r7, r0
 801493a:	9a01      	ldr	r2, [sp, #4]
 801493c:	da04      	bge.n	8014948 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 801493e:	2401      	movs	r4, #1
 8014940:	4620      	mov	r0, r4
 8014942:	b02b      	add	sp, #172	; 0xac
 8014944:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014948:	6b60      	ldr	r0, [r4, #52]	; 0x34
 801494a:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801494c:	fb91 f3f2 	sdiv	r3, r1, r2
 8014950:	4403      	add	r3, r0
 8014952:	fb93 f3fc 	sdiv	r3, r3, ip
 8014956:	f9bb 1000 	ldrsh.w	r1, [fp]
 801495a:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 801495e:	440a      	add	r2, r1
 8014960:	b212      	sxth	r2, r2
 8014962:	454a      	cmp	r2, r9
 8014964:	bfa8      	it	ge
 8014966:	464a      	movge	r2, r9
 8014968:	428a      	cmp	r2, r1
 801496a:	bfac      	ite	ge
 801496c:	eba9 0902 	subge.w	r9, r9, r2
 8014970:	eba9 0901 	sublt.w	r9, r9, r1
 8014974:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 8014978:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 801497c:	440a      	add	r2, r1
 801497e:	b212      	sxth	r2, r2
 8014980:	4552      	cmp	r2, sl
 8014982:	bfa8      	it	ge
 8014984:	4652      	movge	r2, sl
 8014986:	428a      	cmp	r2, r1
 8014988:	bfac      	ite	ge
 801498a:	ebaa 0a02 	subge.w	sl, sl, r2
 801498e:	ebaa 0a01 	sublt.w	sl, sl, r1
 8014992:	3301      	adds	r3, #1
 8014994:	fb0a fa0a 	mul.w	sl, sl, sl
 8014998:	fb09 a909 	mla	r9, r9, r9, sl
 801499c:	435b      	muls	r3, r3
 801499e:	4599      	cmp	r9, r3
 80149a0:	dccd      	bgt.n	801493e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 80149a2:	465a      	mov	r2, fp
 80149a4:	4621      	mov	r1, r4
 80149a6:	a80e      	add	r0, sp, #56	; 0x38
 80149a8:	f015 fc9a 	bl	802a2e0 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 80149ac:	6b62      	ldr	r2, [r4, #52]	; 0x34
 80149ae:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80149b0:	9209      	str	r2, [sp, #36]	; 0x24
 80149b2:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 80149b6:	930a      	str	r3, [sp, #40]	; 0x28
 80149b8:	dd07      	ble.n	80149ca <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x17a>
 80149ba:	2102      	movs	r1, #2
 80149bc:	fb93 f3f1 	sdiv	r3, r3, r1
 80149c0:	4413      	add	r3, r2
 80149c2:	930a      	str	r3, [sp, #40]	; 0x28
 80149c4:	fb93 f3f1 	sdiv	r3, r3, r1
 80149c8:	9309      	str	r3, [sp, #36]	; 0x24
 80149ca:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80149ce:	4630      	mov	r0, r6
 80149d0:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80149d4:	930b      	str	r3, [sp, #44]	; 0x2c
 80149d6:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 80149da:	f7ff fcb9 	bl	8014350 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80149de:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 80149e2:	f04f 0a02 	mov.w	sl, #2
 80149e6:	f849 0d74 	str.w	r0, [r9, #-116]!
 80149ea:	a80b      	add	r0, sp, #44	; 0x2c
 80149ec:	4649      	mov	r1, r9
 80149ee:	f7ff fc83 	bl	80142f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80149f2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80149f4:	fb90 f0fa 	sdiv	r0, r0, sl
 80149f8:	eb00 0b03 	add.w	fp, r0, r3
 80149fc:	4630      	mov	r0, r6
 80149fe:	f7ff fcc6 	bl	801438e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8014a02:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 8014a06:	017f      	lsls	r7, r7, #5
 8014a08:	f848 0d78 	str.w	r0, [r8, #-120]!
 8014a0c:	a80b      	add	r0, sp, #44	; 0x2c
 8014a0e:	4641      	mov	r1, r8
 8014a10:	f7ff fc72 	bl	80142f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014a14:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8014a16:	fb90 f0fa 	sdiv	r0, r0, sl
 8014a1a:	4659      	mov	r1, fp
 8014a1c:	1a12      	subs	r2, r2, r0
 8014a1e:	a80e      	add	r0, sp, #56	; 0x38
 8014a20:	f015 fdde 	bl	802a5e0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8014a24:	f106 0a20 	add.w	sl, r6, #32
 8014a28:	bb67      	cbnz	r7, 8014a84 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x234>
 8014a2a:	46b3      	mov	fp, r6
 8014a2c:	45aa      	cmp	sl, r5
 8014a2e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014a30:	dc33      	bgt.n	8014a9a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x24a>
 8014a32:	9909      	ldr	r1, [sp, #36]	; 0x24
 8014a34:	4650      	mov	r0, sl
 8014a36:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8014a3a:	920b      	str	r2, [sp, #44]	; 0x2c
 8014a3c:	f7ff fc88 	bl	8014350 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8014a40:	4641      	mov	r1, r8
 8014a42:	900c      	str	r0, [sp, #48]	; 0x30
 8014a44:	a80b      	add	r0, sp, #44	; 0x2c
 8014a46:	f7ff fc57 	bl	80142f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014a4a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8014a4c:	2302      	movs	r3, #2
 8014a4e:	fb90 f0f3 	sdiv	r0, r0, r3
 8014a52:	eb00 0b02 	add.w	fp, r0, r2
 8014a56:	4650      	mov	r0, sl
 8014a58:	f7ff fc99 	bl	801438e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8014a5c:	4649      	mov	r1, r9
 8014a5e:	900d      	str	r0, [sp, #52]	; 0x34
 8014a60:	a80b      	add	r0, sp, #44	; 0x2c
 8014a62:	f7ff fc49 	bl	80142f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014a66:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8014a68:	2302      	movs	r3, #2
 8014a6a:	4659      	mov	r1, fp
 8014a6c:	fb90 f0f3 	sdiv	r0, r0, r3
 8014a70:	1a12      	subs	r2, r2, r0
 8014a72:	a80e      	add	r0, sp, #56	; 0x38
 8014a74:	46d3      	mov	fp, sl
 8014a76:	f015 fe00 	bl	802a67a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014a7a:	44ba      	add	sl, r7
 8014a7c:	e7d6      	b.n	8014a2c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1dc>
 8014a7e:	fb93 f3f2 	sdiv	r3, r3, r2
 8014a82:	e768      	b.n	8014956 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 8014a84:	fb9a f2f7 	sdiv	r2, sl, r7
 8014a88:	fb07 a212 	mls	r2, r7, r2, sl
 8014a8c:	1aba      	subs	r2, r7, r2
 8014a8e:	fb92 f1f7 	sdiv	r1, r2, r7
 8014a92:	fb07 2211 	mls	r2, r7, r1, r2
 8014a96:	4492      	add	sl, r2
 8014a98:	e7c7      	b.n	8014a2a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1da>
 8014a9a:	45ab      	cmp	fp, r5
 8014a9c:	da23      	bge.n	8014ae6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 8014a9e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014aa0:	4628      	mov	r0, r5
 8014aa2:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 8014aa6:	920b      	str	r2, [sp, #44]	; 0x2c
 8014aa8:	f7ff fc52 	bl	8014350 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8014aac:	4641      	mov	r1, r8
 8014aae:	900c      	str	r0, [sp, #48]	; 0x30
 8014ab0:	a80b      	add	r0, sp, #44	; 0x2c
 8014ab2:	f7ff fc21 	bl	80142f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014ab6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8014ab8:	f04f 0a02 	mov.w	sl, #2
 8014abc:	fb90 f0fa 	sdiv	r0, r0, sl
 8014ac0:	4403      	add	r3, r0
 8014ac2:	4628      	mov	r0, r5
 8014ac4:	9301      	str	r3, [sp, #4]
 8014ac6:	f7ff fc62 	bl	801438e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8014aca:	4649      	mov	r1, r9
 8014acc:	900d      	str	r0, [sp, #52]	; 0x34
 8014ace:	a80b      	add	r0, sp, #44	; 0x2c
 8014ad0:	f7ff fc12 	bl	80142f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014ad4:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8014ad6:	9b01      	ldr	r3, [sp, #4]
 8014ad8:	fb90 f0fa 	sdiv	r0, r0, sl
 8014adc:	4619      	mov	r1, r3
 8014ade:	1a12      	subs	r2, r2, r0
 8014ae0:	a80e      	add	r0, sp, #56	; 0x38
 8014ae2:	f015 fdca 	bl	802a67a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014ae6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014ae8:	b99b      	cbnz	r3, 8014b12 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 8014aea:	1bad      	subs	r5, r5, r6
 8014aec:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 8014af0:	da04      	bge.n	8014afc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8014af2:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 8014af6:	a80e      	add	r0, sp, #56	; 0x38
 8014af8:	f015 fdbf 	bl	802a67a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014afc:	21ff      	movs	r1, #255	; 0xff
 8014afe:	a80e      	add	r0, sp, #56	; 0x38
 8014b00:	f015 fcaa 	bl	802a458 <_ZN8touchgfx6Canvas6renderEh>
 8014b04:	4604      	mov	r4, r0
 8014b06:	4b8a      	ldr	r3, [pc, #552]	; (8014d30 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e0>)
 8014b08:	930e      	str	r3, [sp, #56]	; 0x38
 8014b0a:	a816      	add	r0, sp, #88	; 0x58
 8014b0c:	f002 f84e 	bl	8016bac <_ZN8touchgfx7OutlineD1Ev>
 8014b10:	e716      	b.n	8014940 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 8014b12:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 8014b16:	429a      	cmp	r2, r3
 8014b18:	f0c0 8107 	bcc.w	8014d2a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4da>
 8014b1c:	1bab      	subs	r3, r5, r6
 8014b1e:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 8014b22:	9301      	str	r3, [sp, #4]
 8014b24:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8014b28:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 8014b2c:	da43      	bge.n	8014bb6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8014b2e:	4628      	mov	r0, r5
 8014b30:	f7ff fc0e 	bl	8014350 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8014b34:	4649      	mov	r1, r9
 8014b36:	900d      	str	r0, [sp, #52]	; 0x34
 8014b38:	a809      	add	r0, sp, #36	; 0x24
 8014b3a:	f7ff fbdd 	bl	80142f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014b3e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8014b40:	18c3      	adds	r3, r0, r3
 8014b42:	4628      	mov	r0, r5
 8014b44:	9303      	str	r3, [sp, #12]
 8014b46:	f7ff fc22 	bl	801438e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8014b4a:	4649      	mov	r1, r9
 8014b4c:	900d      	str	r0, [sp, #52]	; 0x34
 8014b4e:	a809      	add	r0, sp, #36	; 0x24
 8014b50:	f7ff fbd2 	bl	80142f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014b54:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8014b56:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 8014b5a:	1a1b      	subs	r3, r3, r0
 8014b5c:	9302      	str	r3, [sp, #8]
 8014b5e:	9204      	str	r2, [sp, #16]
 8014b60:	eb0a 0305 	add.w	r3, sl, r5
 8014b64:	9a04      	ldr	r2, [sp, #16]
 8014b66:	4293      	cmp	r3, r2
 8014b68:	da25      	bge.n	8014bb6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8014b6a:	4618      	mov	r0, r3
 8014b6c:	9306      	str	r3, [sp, #24]
 8014b6e:	f7ff fbef 	bl	8014350 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8014b72:	4649      	mov	r1, r9
 8014b74:	900d      	str	r0, [sp, #52]	; 0x34
 8014b76:	a80a      	add	r0, sp, #40	; 0x28
 8014b78:	f7ff fbbe 	bl	80142f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014b7c:	9b03      	ldr	r3, [sp, #12]
 8014b7e:	2202      	movs	r2, #2
 8014b80:	fb90 f0f2 	sdiv	r0, r0, r2
 8014b84:	18c3      	adds	r3, r0, r3
 8014b86:	9305      	str	r3, [sp, #20]
 8014b88:	9b06      	ldr	r3, [sp, #24]
 8014b8a:	9207      	str	r2, [sp, #28]
 8014b8c:	4618      	mov	r0, r3
 8014b8e:	f7ff fbfe 	bl	801438e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8014b92:	a92a      	add	r1, sp, #168	; 0xa8
 8014b94:	f841 0d78 	str.w	r0, [r1, #-120]!
 8014b98:	a80a      	add	r0, sp, #40	; 0x28
 8014b9a:	f7ff fbad 	bl	80142f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014b9e:	9b02      	ldr	r3, [sp, #8]
 8014ba0:	9a07      	ldr	r2, [sp, #28]
 8014ba2:	9905      	ldr	r1, [sp, #20]
 8014ba4:	fb90 f2f2 	sdiv	r2, r0, r2
 8014ba8:	a80e      	add	r0, sp, #56	; 0x38
 8014baa:	1a9a      	subs	r2, r3, r2
 8014bac:	f015 fd65 	bl	802a67a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014bb0:	9b06      	ldr	r3, [sp, #24]
 8014bb2:	4453      	add	r3, sl
 8014bb4:	e7d6      	b.n	8014b64 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x314>
 8014bb6:	45ab      	cmp	fp, r5
 8014bb8:	da25      	bge.n	8014c06 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b6>
 8014bba:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8014bbe:	4628      	mov	r0, r5
 8014bc0:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8014bc4:	930b      	str	r3, [sp, #44]	; 0x2c
 8014bc6:	f7ff fbc3 	bl	8014350 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8014bca:	4641      	mov	r1, r8
 8014bcc:	900c      	str	r0, [sp, #48]	; 0x30
 8014bce:	a80b      	add	r0, sp, #44	; 0x2c
 8014bd0:	f7ff fb92 	bl	80142f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014bd4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8014bd6:	2202      	movs	r2, #2
 8014bd8:	fb90 f0f2 	sdiv	r0, r0, r2
 8014bdc:	eb00 0903 	add.w	r9, r0, r3
 8014be0:	4628      	mov	r0, r5
 8014be2:	9202      	str	r2, [sp, #8]
 8014be4:	f7ff fbd3 	bl	801438e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8014be8:	a92a      	add	r1, sp, #168	; 0xa8
 8014bea:	f841 0d74 	str.w	r0, [r1, #-116]!
 8014bee:	a80b      	add	r0, sp, #44	; 0x2c
 8014bf0:	f7ff fb82 	bl	80142f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014bf4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8014bf6:	9a02      	ldr	r2, [sp, #8]
 8014bf8:	fb90 f2f2 	sdiv	r2, r0, r2
 8014bfc:	4649      	mov	r1, r9
 8014bfe:	1a9a      	subs	r2, r3, r2
 8014c00:	a80e      	add	r0, sp, #56	; 0x38
 8014c02:	f015 fd3a 	bl	802a67a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014c06:	46d9      	mov	r9, fp
 8014c08:	2502      	movs	r5, #2
 8014c0a:	45b1      	cmp	r9, r6
 8014c0c:	db25      	blt.n	8014c5a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x40a>
 8014c0e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8014c12:	4648      	mov	r0, r9
 8014c14:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8014c18:	930b      	str	r3, [sp, #44]	; 0x2c
 8014c1a:	f7ff fb99 	bl	8014350 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8014c1e:	4641      	mov	r1, r8
 8014c20:	900c      	str	r0, [sp, #48]	; 0x30
 8014c22:	a80b      	add	r0, sp, #44	; 0x2c
 8014c24:	f7ff fb68 	bl	80142f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014c28:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8014c2a:	fb90 f0f5 	sdiv	r0, r0, r5
 8014c2e:	eb00 0b03 	add.w	fp, r0, r3
 8014c32:	4648      	mov	r0, r9
 8014c34:	f7ff fbab 	bl	801438e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8014c38:	a90d      	add	r1, sp, #52	; 0x34
 8014c3a:	900d      	str	r0, [sp, #52]	; 0x34
 8014c3c:	a80b      	add	r0, sp, #44	; 0x2c
 8014c3e:	f7ff fb5b 	bl	80142f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014c42:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8014c44:	fb90 f0f5 	sdiv	r0, r0, r5
 8014c48:	4659      	mov	r1, fp
 8014c4a:	1a12      	subs	r2, r2, r0
 8014c4c:	a80e      	add	r0, sp, #56	; 0x38
 8014c4e:	46cb      	mov	fp, r9
 8014c50:	f015 fd13 	bl	802a67a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014c54:	eba9 0907 	sub.w	r9, r9, r7
 8014c58:	e7d7      	b.n	8014c0a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ba>
 8014c5a:	455e      	cmp	r6, fp
 8014c5c:	da22      	bge.n	8014ca4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x454>
 8014c5e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8014c62:	4630      	mov	r0, r6
 8014c64:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8014c68:	930b      	str	r3, [sp, #44]	; 0x2c
 8014c6a:	f7ff fb71 	bl	8014350 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8014c6e:	4641      	mov	r1, r8
 8014c70:	900c      	str	r0, [sp, #48]	; 0x30
 8014c72:	a80b      	add	r0, sp, #44	; 0x2c
 8014c74:	f7ff fb40 	bl	80142f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014c78:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8014c7a:	2502      	movs	r5, #2
 8014c7c:	fb90 f0f5 	sdiv	r0, r0, r5
 8014c80:	4407      	add	r7, r0
 8014c82:	4630      	mov	r0, r6
 8014c84:	f7ff fb83 	bl	801438e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8014c88:	a92a      	add	r1, sp, #168	; 0xa8
 8014c8a:	f841 0d74 	str.w	r0, [r1, #-116]!
 8014c8e:	a80b      	add	r0, sp, #44	; 0x2c
 8014c90:	f7ff fb32 	bl	80142f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014c94:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8014c96:	fb90 f0f5 	sdiv	r0, r0, r5
 8014c9a:	4639      	mov	r1, r7
 8014c9c:	1a12      	subs	r2, r2, r0
 8014c9e:	a80e      	add	r0, sp, #56	; 0x38
 8014ca0:	f015 fceb 	bl	802a67a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014ca4:	9b01      	ldr	r3, [sp, #4]
 8014ca6:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8014caa:	f6bf af27 	bge.w	8014afc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8014cae:	4630      	mov	r0, r6
 8014cb0:	f7ff fb4e 	bl	8014350 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8014cb4:	ad2a      	add	r5, sp, #168	; 0xa8
 8014cb6:	f04f 0b02 	mov.w	fp, #2
 8014cba:	f845 0d74 	str.w	r0, [r5, #-116]!
 8014cbe:	a809      	add	r0, sp, #36	; 0x24
 8014cc0:	4629      	mov	r1, r5
 8014cc2:	f7ff fb19 	bl	80142f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014cc6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8014cc8:	eb00 0903 	add.w	r9, r0, r3
 8014ccc:	4630      	mov	r0, r6
 8014cce:	f7ff fb5e 	bl	801438e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8014cd2:	4629      	mov	r1, r5
 8014cd4:	900d      	str	r0, [sp, #52]	; 0x34
 8014cd6:	a809      	add	r0, sp, #36	; 0x24
 8014cd8:	f7ff fb0e 	bl	80142f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014cdc:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8014cde:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 8014ce2:	eba3 0800 	sub.w	r8, r3, r0
 8014ce6:	4454      	add	r4, sl
 8014ce8:	42a6      	cmp	r6, r4
 8014cea:	f77f af07 	ble.w	8014afc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8014cee:	4620      	mov	r0, r4
 8014cf0:	f7ff fb2e 	bl	8014350 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8014cf4:	4629      	mov	r1, r5
 8014cf6:	900d      	str	r0, [sp, #52]	; 0x34
 8014cf8:	a80a      	add	r0, sp, #40	; 0x28
 8014cfa:	f7ff fafd 	bl	80142f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014cfe:	fb90 f0fb 	sdiv	r0, r0, fp
 8014d02:	eb00 0709 	add.w	r7, r0, r9
 8014d06:	4620      	mov	r0, r4
 8014d08:	f7ff fb41 	bl	801438e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8014d0c:	a90c      	add	r1, sp, #48	; 0x30
 8014d0e:	900c      	str	r0, [sp, #48]	; 0x30
 8014d10:	a80a      	add	r0, sp, #40	; 0x28
 8014d12:	f7ff faf1 	bl	80142f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014d16:	4639      	mov	r1, r7
 8014d18:	fb90 f2fb 	sdiv	r2, r0, fp
 8014d1c:	a80e      	add	r0, sp, #56	; 0x38
 8014d1e:	eba8 0202 	sub.w	r2, r8, r2
 8014d22:	f015 fcaa 	bl	802a67a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014d26:	4454      	add	r4, sl
 8014d28:	e7de      	b.n	8014ce8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x498>
 8014d2a:	2400      	movs	r4, #0
 8014d2c:	e6eb      	b.n	8014b06 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b6>
 8014d2e:	bf00      	nop
 8014d30:	0802fdd0 	.word	0x0802fdd0

08014d34 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
 8014d34:	b510      	push	{r4, lr}
 8014d36:	2200      	movs	r2, #0
 8014d38:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8014d3c:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8014d40:	8002      	strh	r2, [r0, #0]
 8014d42:	8042      	strh	r2, [r0, #2]
 8014d44:	8084      	strh	r4, [r0, #4]
 8014d46:	80c1      	strh	r1, [r0, #6]
 8014d48:	bd10      	pop	{r4, pc}
	...

08014d4c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 8014d4c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8014d4e:	6803      	ldr	r3, [r0, #0]
 8014d50:	460d      	mov	r5, r1
 8014d52:	4604      	mov	r4, r0
 8014d54:	4601      	mov	r1, r0
 8014d56:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8014d58:	a802      	add	r0, sp, #8
 8014d5a:	4798      	blx	r3
 8014d5c:	6828      	ldr	r0, [r5, #0]
 8014d5e:	6869      	ldr	r1, [r5, #4]
 8014d60:	466b      	mov	r3, sp
 8014d62:	c303      	stmia	r3!, {r0, r1}
 8014d64:	4668      	mov	r0, sp
 8014d66:	4619      	mov	r1, r3
 8014d68:	f7fe faa4 	bl	80132b4 <_ZN8touchgfx4RectaNERKS0_>
 8014d6c:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8014d6e:	b188      	cbz	r0, 8014d94 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8014d70:	6803      	ldr	r3, [r0, #0]
 8014d72:	1d21      	adds	r1, r4, #4
 8014d74:	68db      	ldr	r3, [r3, #12]
 8014d76:	4798      	blx	r3
 8014d78:	b160      	cbz	r0, 8014d94 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8014d7a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8014d7e:	2b00      	cmp	r3, #0
 8014d80:	dd08      	ble.n	8014d94 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8014d82:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 8014d86:	2d00      	cmp	r5, #0
 8014d88:	dd04      	ble.n	8014d94 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8014d8a:	4a2b      	ldr	r2, [pc, #172]	; (8014e38 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 8014d8c:	7812      	ldrb	r2, [r2, #0]
 8014d8e:	b11a      	cbz	r2, 8014d98 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 8014d90:	2a01      	cmp	r2, #1
 8014d92:	d029      	beq.n	8014de8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 8014d94:	b004      	add	sp, #16
 8014d96:	bd70      	pop	{r4, r5, r6, pc}
 8014d98:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8014d9c:	441d      	add	r5, r3
 8014d9e:	b2ad      	uxth	r5, r5
 8014da0:	b22e      	sxth	r6, r5
 8014da2:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8014da6:	42b3      	cmp	r3, r6
 8014da8:	daf4      	bge.n	8014d94 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8014daa:	6823      	ldr	r3, [r4, #0]
 8014dac:	4669      	mov	r1, sp
 8014dae:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8014db0:	4620      	mov	r0, r4
 8014db2:	4798      	blx	r3
 8014db4:	b940      	cbnz	r0, 8014dc8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8014db6:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8014dba:	2b01      	cmp	r3, #1
 8014dbc:	d004      	beq.n	8014dc8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8014dbe:	3301      	adds	r3, #1
 8014dc0:	105b      	asrs	r3, r3, #1
 8014dc2:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014dc6:	e7f0      	b.n	8014daa <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8014dc8:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8014dcc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8014dd0:	4413      	add	r3, r2
 8014dd2:	b29b      	uxth	r3, r3
 8014dd4:	441a      	add	r2, r3
 8014dd6:	b212      	sxth	r2, r2
 8014dd8:	4296      	cmp	r6, r2
 8014dda:	f8ad 3002 	strh.w	r3, [sp, #2]
 8014dde:	dae0      	bge.n	8014da2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8014de0:	1aeb      	subs	r3, r5, r3
 8014de2:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014de6:	e7dc      	b.n	8014da2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8014de8:	f8bd 5000 	ldrh.w	r5, [sp]
 8014dec:	441d      	add	r5, r3
 8014dee:	b2ad      	uxth	r5, r5
 8014df0:	b22e      	sxth	r6, r5
 8014df2:	f9bd 3000 	ldrsh.w	r3, [sp]
 8014df6:	42b3      	cmp	r3, r6
 8014df8:	dacc      	bge.n	8014d94 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8014dfa:	6823      	ldr	r3, [r4, #0]
 8014dfc:	4669      	mov	r1, sp
 8014dfe:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8014e00:	4620      	mov	r0, r4
 8014e02:	4798      	blx	r3
 8014e04:	b940      	cbnz	r0, 8014e18 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8014e06:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8014e0a:	2b01      	cmp	r3, #1
 8014e0c:	d004      	beq.n	8014e18 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8014e0e:	3301      	adds	r3, #1
 8014e10:	105b      	asrs	r3, r3, #1
 8014e12:	f8ad 3004 	strh.w	r3, [sp, #4]
 8014e16:	e7f0      	b.n	8014dfa <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8014e18:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8014e1c:	f8bd 3000 	ldrh.w	r3, [sp]
 8014e20:	4413      	add	r3, r2
 8014e22:	b29b      	uxth	r3, r3
 8014e24:	441a      	add	r2, r3
 8014e26:	b212      	sxth	r2, r2
 8014e28:	4296      	cmp	r6, r2
 8014e2a:	f8ad 3000 	strh.w	r3, [sp]
 8014e2e:	dae0      	bge.n	8014df2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8014e30:	1aeb      	subs	r3, r5, r3
 8014e32:	f8ad 3004 	strh.w	r3, [sp, #4]
 8014e36:	e7dc      	b.n	8014df2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8014e38:	20002244 	.word	0x20002244

08014e3c <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 8014e3c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8014e3e:	6803      	ldr	r3, [r0, #0]
 8014e40:	4604      	mov	r4, r0
 8014e42:	4601      	mov	r1, r0
 8014e44:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8014e46:	4668      	mov	r0, sp
 8014e48:	4798      	blx	r3
 8014e4a:	2100      	movs	r1, #0
 8014e4c:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8014e50:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8014e54:	9102      	str	r1, [sp, #8]
 8014e56:	4668      	mov	r0, sp
 8014e58:	a902      	add	r1, sp, #8
 8014e5a:	f8ad 200c 	strh.w	r2, [sp, #12]
 8014e5e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8014e62:	f7fe fa27 	bl	80132b4 <_ZN8touchgfx4RectaNERKS0_>
 8014e66:	6823      	ldr	r3, [r4, #0]
 8014e68:	4669      	mov	r1, sp
 8014e6a:	691b      	ldr	r3, [r3, #16]
 8014e6c:	4620      	mov	r0, r4
 8014e6e:	4798      	blx	r3
 8014e70:	b004      	add	sp, #16
 8014e72:	bd10      	pop	{r4, pc}

08014e74 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 8014e74:	2101      	movs	r1, #1
 8014e76:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8014e7a:	490b      	ldr	r1, [pc, #44]	; (8014ea8 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 8014e7c:	6001      	str	r1, [r0, #0]
 8014e7e:	2200      	movs	r2, #0
 8014e80:	21ff      	movs	r1, #255	; 0xff
 8014e82:	8082      	strh	r2, [r0, #4]
 8014e84:	80c2      	strh	r2, [r0, #6]
 8014e86:	8102      	strh	r2, [r0, #8]
 8014e88:	8142      	strh	r2, [r0, #10]
 8014e8a:	8182      	strh	r2, [r0, #12]
 8014e8c:	81c2      	strh	r2, [r0, #14]
 8014e8e:	8202      	strh	r2, [r0, #16]
 8014e90:	8242      	strh	r2, [r0, #18]
 8014e92:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8014e96:	61c2      	str	r2, [r0, #28]
 8014e98:	8402      	strh	r2, [r0, #32]
 8014e9a:	8442      	strh	r2, [r0, #34]	; 0x22
 8014e9c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8014ea0:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 8014ea4:	6282      	str	r2, [r0, #40]	; 0x28
 8014ea6:	4770      	bx	lr
 8014ea8:	0802f264 	.word	0x0802f264

08014eac <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8014eac:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8014eb0:	4770      	bx	lr

08014eb2 <_ZN8touchgfx14AbstractButton13executeActionEv>:
 8014eb2:	b510      	push	{r4, lr}
 8014eb4:	4604      	mov	r4, r0
 8014eb6:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8014eb8:	b150      	cbz	r0, 8014ed0 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8014eba:	6803      	ldr	r3, [r0, #0]
 8014ebc:	68db      	ldr	r3, [r3, #12]
 8014ebe:	4798      	blx	r3
 8014ec0:	b130      	cbz	r0, 8014ed0 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8014ec2:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8014ec4:	6803      	ldr	r3, [r0, #0]
 8014ec6:	4621      	mov	r1, r4
 8014ec8:	689b      	ldr	r3, [r3, #8]
 8014eca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014ece:	4718      	bx	r3
 8014ed0:	bd10      	pop	{r4, pc}

08014ed2 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8014ed2:	b570      	push	{r4, r5, r6, lr}
 8014ed4:	790b      	ldrb	r3, [r1, #4]
 8014ed6:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8014eda:	2b00      	cmp	r3, #0
 8014edc:	bf0c      	ite	eq
 8014ede:	2301      	moveq	r3, #1
 8014ee0:	2300      	movne	r3, #0
 8014ee2:	4604      	mov	r4, r0
 8014ee4:	460e      	mov	r6, r1
 8014ee6:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8014eea:	d109      	bne.n	8014f00 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8014eec:	b14d      	cbz	r5, 8014f02 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8014eee:	7933      	ldrb	r3, [r6, #4]
 8014ef0:	2b01      	cmp	r3, #1
 8014ef2:	d10c      	bne.n	8014f0e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8014ef4:	6823      	ldr	r3, [r4, #0]
 8014ef6:	4620      	mov	r0, r4
 8014ef8:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8014efa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014efe:	4718      	bx	r3
 8014f00:	b12d      	cbz	r5, 8014f0e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8014f02:	6823      	ldr	r3, [r4, #0]
 8014f04:	4620      	mov	r0, r4
 8014f06:	695b      	ldr	r3, [r3, #20]
 8014f08:	4798      	blx	r3
 8014f0a:	2d00      	cmp	r5, #0
 8014f0c:	d1ef      	bne.n	8014eee <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8014f0e:	bd70      	pop	{r4, r5, r6, pc}

08014f10 <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 8014f10:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8014f14:	4770      	bx	lr

08014f16 <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 8014f16:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 8014f1a:	4770      	bx	lr

08014f1c <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 8014f1c:	6802      	ldr	r2, [r0, #0]
 8014f1e:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8014f22:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8014f24:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8014f28:	4710      	bx	r2

08014f2a <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 8014f2a:	6802      	ldr	r2, [r0, #0]
 8014f2c:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8014f30:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8014f32:	eef0 0a40 	vmov.f32	s1, s0
 8014f36:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8014f3a:	4710      	bx	r2

08014f3c <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 8014f3c:	6802      	ldr	r2, [r0, #0]
 8014f3e:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8014f42:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8014f44:	eeb0 1a40 	vmov.f32	s2, s0
 8014f48:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8014f4c:	4710      	bx	r2

08014f4e <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 8014f4e:	6802      	ldr	r2, [r0, #0]
 8014f50:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8014f54:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8014f56:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8014f5a:	4710      	bx	r2

08014f5c <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 8014f5c:	6802      	ldr	r2, [r0, #0]
 8014f5e:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8014f62:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8014f64:	eef0 0a40 	vmov.f32	s1, s0
 8014f68:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8014f6c:	4710      	bx	r2

08014f6e <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 8014f6e:	6802      	ldr	r2, [r0, #0]
 8014f70:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8014f74:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8014f76:	eeb0 1a40 	vmov.f32	s2, s0
 8014f7a:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8014f7e:	4710      	bx	r2

08014f80 <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 8014f80:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8014f84:	4770      	bx	lr

08014f86 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 8014f86:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 8014f8a:	4770      	bx	lr

08014f8c <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 8014f8c:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 8014f90:	4770      	bx	lr

08014f92 <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 8014f92:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 8014f96:	4770      	bx	lr

08014f98 <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 8014f98:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 8014f9c:	4770      	bx	lr

08014f9e <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 8014f9e:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 8014fa2:	4770      	bx	lr

08014fa4 <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 8014fa4:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 8014fa8:	4770      	bx	lr

08014faa <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 8014faa:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 8014fae:	4770      	bx	lr

08014fb0 <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 8014fb0:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 8014fb4:	4770      	bx	lr

08014fb6 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 8014fb6:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 8014fba:	4770      	bx	lr

08014fbc <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 8014fbc:	ee07 2a90 	vmov	s15, r2
 8014fc0:	6803      	ldr	r3, [r0, #0]
 8014fc2:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8014fc6:	ee07 1a90 	vmov	s15, r1
 8014fca:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8014fce:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8014fd2:	4718      	bx	r3

08014fd4 <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 8014fd4:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 8014fd8:	4770      	bx	lr

08014fda <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 8014fda:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 8014fde:	4770      	bx	lr

08014fe0 <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 8014fe0:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 8014fe4:	4770      	bx	lr

08014fe6 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 8014fe6:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 8014fea:	4770      	bx	lr

08014fec <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 8014fec:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 8014ff0:	4770      	bx	lr

08014ff2 <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 8014ff2:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 8014ff6:	4770      	bx	lr

08014ff8 <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 8014ff8:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 8014ffc:	4770      	bx	lr

08014ffe <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 8014ffe:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 8015002:	4770      	bx	lr

08015004 <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 8015004:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 8015008:	4770      	bx	lr

0801500a <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 801500a:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 801500e:	4770      	bx	lr

08015010 <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 8015010:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 8015014:	4770      	bx	lr

08015016 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 8015016:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 801501a:	4770      	bx	lr

0801501c <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 801501c:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 8015020:	4770      	bx	lr

08015022 <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 8015022:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 8015026:	4770      	bx	lr

08015028 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 8015028:	b510      	push	{r4, lr}
 801502a:	ed2d 8b04 	vpush	{d8-d9}
 801502e:	6803      	ldr	r3, [r0, #0]
 8015030:	4604      	mov	r4, r0
 8015032:	699b      	ldr	r3, [r3, #24]
 8015034:	eeb0 8a40 	vmov.f32	s16, s0
 8015038:	eef0 8a60 	vmov.f32	s17, s1
 801503c:	eeb0 9a41 	vmov.f32	s18, s2
 8015040:	4798      	blx	r3
 8015042:	6823      	ldr	r3, [r4, #0]
 8015044:	4620      	mov	r0, r4
 8015046:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8015048:	eeb0 1a49 	vmov.f32	s2, s18
 801504c:	eef0 0a68 	vmov.f32	s1, s17
 8015050:	eeb0 0a48 	vmov.f32	s0, s16
 8015054:	4798      	blx	r3
 8015056:	ecbd 8b04 	vpop	{d8-d9}
 801505a:	6823      	ldr	r3, [r4, #0]
 801505c:	4620      	mov	r0, r4
 801505e:	699b      	ldr	r3, [r3, #24]
 8015060:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015064:	4718      	bx	r3

08015066 <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 8015066:	b510      	push	{r4, lr}
 8015068:	ed2d 8b02 	vpush	{d8}
 801506c:	6803      	ldr	r3, [r0, #0]
 801506e:	4604      	mov	r4, r0
 8015070:	699b      	ldr	r3, [r3, #24]
 8015072:	eeb0 8a40 	vmov.f32	s16, s0
 8015076:	4798      	blx	r3
 8015078:	6823      	ldr	r3, [r4, #0]
 801507a:	4620      	mov	r0, r4
 801507c:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8015080:	eeb0 0a48 	vmov.f32	s0, s16
 8015084:	4798      	blx	r3
 8015086:	ecbd 8b02 	vpop	{d8}
 801508a:	6823      	ldr	r3, [r4, #0]
 801508c:	4620      	mov	r0, r4
 801508e:	699b      	ldr	r3, [r3, #24]
 8015090:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015094:	4718      	bx	r3

08015096 <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 8015096:	2200      	movs	r2, #0
 8015098:	8002      	strh	r2, [r0, #0]
 801509a:	8042      	strh	r2, [r0, #2]
 801509c:	8082      	strh	r2, [r0, #4]
 801509e:	80c2      	strh	r2, [r0, #6]
 80150a0:	4770      	bx	lr
	...

080150a4 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 80150a4:	b538      	push	{r3, r4, r5, lr}
 80150a6:	2500      	movs	r5, #0
 80150a8:	e9c0 5505 	strd	r5, r5, [r0, #20]
 80150ac:	2301      	movs	r3, #1
 80150ae:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 80150b2:	4b1f      	ldr	r3, [pc, #124]	; (8015130 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 80150b4:	8085      	strh	r5, [r0, #4]
 80150b6:	80c5      	strh	r5, [r0, #6]
 80150b8:	8105      	strh	r5, [r0, #8]
 80150ba:	8145      	strh	r5, [r0, #10]
 80150bc:	8185      	strh	r5, [r0, #12]
 80150be:	81c5      	strh	r5, [r0, #14]
 80150c0:	8205      	strh	r5, [r0, #16]
 80150c2:	8245      	strh	r5, [r0, #18]
 80150c4:	61c5      	str	r5, [r0, #28]
 80150c6:	8405      	strh	r5, [r0, #32]
 80150c8:	8445      	strh	r5, [r0, #34]	; 0x22
 80150ca:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 80150ce:	6003      	str	r3, [r0, #0]
 80150d0:	880b      	ldrh	r3, [r1, #0]
 80150d2:	84c3      	strh	r3, [r0, #38]	; 0x26
 80150d4:	23ff      	movs	r3, #255	; 0xff
 80150d6:	4604      	mov	r4, r0
 80150d8:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 80150dc:	f001 fcf0 	bl	8016ac0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80150e0:	4b14      	ldr	r3, [pc, #80]	; (8015134 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 80150e2:	6023      	str	r3, [r4, #0]
 80150e4:	2300      	movs	r3, #0
 80150e6:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 80150ea:	4913      	ldr	r1, [pc, #76]	; (8015138 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 80150ec:	62e3      	str	r3, [r4, #44]	; 0x2c
 80150ee:	6323      	str	r3, [r4, #48]	; 0x30
 80150f0:	6363      	str	r3, [r4, #52]	; 0x34
 80150f2:	63a3      	str	r3, [r4, #56]	; 0x38
 80150f4:	63e3      	str	r3, [r4, #60]	; 0x3c
 80150f6:	6463      	str	r3, [r4, #68]	; 0x44
 80150f8:	64a3      	str	r3, [r4, #72]	; 0x48
 80150fa:	6523      	str	r3, [r4, #80]	; 0x50
 80150fc:	6563      	str	r3, [r4, #84]	; 0x54
 80150fe:	65e3      	str	r3, [r4, #92]	; 0x5c
 8015100:	6623      	str	r3, [r4, #96]	; 0x60
 8015102:	66a3      	str	r3, [r4, #104]	; 0x68
 8015104:	66e3      	str	r3, [r4, #108]	; 0x6c
 8015106:	6763      	str	r3, [r4, #116]	; 0x74
 8015108:	67a3      	str	r3, [r4, #120]	; 0x78
 801510a:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 801510e:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 8015112:	230c      	movs	r3, #12
 8015114:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 8015118:	6422      	str	r2, [r4, #64]	; 0x40
 801511a:	64e1      	str	r1, [r4, #76]	; 0x4c
 801511c:	65a1      	str	r1, [r4, #88]	; 0x58
 801511e:	6662      	str	r2, [r4, #100]	; 0x64
 8015120:	6722      	str	r2, [r4, #112]	; 0x70
 8015122:	67e2      	str	r2, [r4, #124]	; 0x7c
 8015124:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 8015128:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 801512c:	4620      	mov	r0, r4
 801512e:	bd38      	pop	{r3, r4, r5, pc}
 8015130:	0802f894 	.word	0x0802f894
 8015134:	0802f34c 	.word	0x0802f34c
 8015138:	447a0000 	.word	0x447a0000

0801513c <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 801513c:	b570      	push	{r4, r5, r6, lr}
 801513e:	ed2d 8b04 	vpush	{d8-d9}
 8015142:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 8015146:	add0      	add	r5, sp, #832	; 0x340
 8015148:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 801514a:	f825 3d40 	strh.w	r3, [r5, #-64]!
 801514e:	4604      	mov	r4, r0
 8015150:	4628      	mov	r0, r5
 8015152:	f007 fbab 	bl	801c8ac <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015156:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8015158:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 801515c:	4606      	mov	r6, r0
 801515e:	4628      	mov	r0, r5
 8015160:	f007 fbd8 	bl	801c914 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015164:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8015168:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 801516c:	6da3      	ldr	r3, [r4, #88]	; 0x58
 801516e:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 8015172:	9312      	str	r3, [sp, #72]	; 0x48
 8015174:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8015178:	1c72      	adds	r2, r6, #1
 801517a:	3001      	adds	r0, #1
 801517c:	ee76 5ac7 	vsub.f32	s11, s13, s14
 8015180:	ee07 2a90 	vmov	s15, r2
 8015184:	ee06 0a90 	vmov	s13, r0
 8015188:	ee36 6a47 	vsub.f32	s12, s12, s14
 801518c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015190:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8015194:	ee77 7a86 	vadd.f32	s15, s15, s12
 8015198:	ee76 6aa5 	vadd.f32	s13, s13, s11
 801519c:	9316      	str	r3, [sp, #88]	; 0x58
 801519e:	931a      	str	r3, [sp, #104]	; 0x68
 80151a0:	931e      	str	r3, [sp, #120]	; 0x78
 80151a2:	2300      	movs	r3, #0
 80151a4:	9320      	str	r3, [sp, #128]	; 0x80
 80151a6:	9321      	str	r3, [sp, #132]	; 0x84
 80151a8:	9322      	str	r3, [sp, #136]	; 0x88
 80151aa:	9324      	str	r3, [sp, #144]	; 0x90
 80151ac:	9325      	str	r3, [sp, #148]	; 0x94
 80151ae:	9326      	str	r3, [sp, #152]	; 0x98
 80151b0:	9328      	str	r3, [sp, #160]	; 0xa0
 80151b2:	9329      	str	r3, [sp, #164]	; 0xa4
 80151b4:	932a      	str	r3, [sp, #168]	; 0xa8
 80151b6:	932c      	str	r3, [sp, #176]	; 0xb0
 80151b8:	932d      	str	r3, [sp, #180]	; 0xb4
 80151ba:	932e      	str	r3, [sp, #184]	; 0xb8
 80151bc:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80151c0:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 80151c4:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 80151c8:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 80151cc:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 80151d0:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 80151d4:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 80151d8:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 80151dc:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 80151e0:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 80151e4:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 80151e8:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 80151ec:	a830      	add	r0, sp, #192	; 0xc0
 80151ee:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 80151f2:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 80151f6:	f006 fbef 	bl	801b9d8 <_ZN8touchgfx9Matrix4x4C1Ev>
 80151fa:	eeb1 0a49 	vneg.f32	s0, s18
 80151fe:	a830      	add	r0, sp, #192	; 0xc0
 8015200:	f006 fcbe 	bl	801bb80 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8015204:	eeb1 0a68 	vneg.f32	s0, s17
 8015208:	f006 fcc8 	bl	801bb9c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 801520c:	eeb1 0a48 	vneg.f32	s0, s16
 8015210:	f006 fcd3 	bl	801bbba <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8015214:	a840      	add	r0, sp, #256	; 0x100
 8015216:	f006 fbdf 	bl	801b9d8 <_ZN8touchgfx9Matrix4x4C1Ev>
 801521a:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 801521e:	a840      	add	r0, sp, #256	; 0x100
 8015220:	f006 fc32 	bl	801ba88 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 8015224:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 8015228:	f006 fc58 	bl	801badc <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 801522c:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 8015230:	f006 fc7d 	bl	801bb2e <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 8015234:	a850      	add	r0, sp, #320	; 0x140
 8015236:	f006 fbcf 	bl	801b9d8 <_ZN8touchgfx9Matrix4x4C1Ev>
 801523a:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 801523e:	a850      	add	r0, sp, #320	; 0x140
 8015240:	f006 fcca 	bl	801bbd8 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 8015244:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8015248:	f006 fcd2 	bl	801bbf0 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 801524c:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8015250:	f006 fcdb 	bl	801bc0a <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 8015254:	a860      	add	r0, sp, #384	; 0x180
 8015256:	f006 fbbf 	bl	801b9d8 <_ZN8touchgfx9Matrix4x4C1Ev>
 801525a:	eeb0 0a49 	vmov.f32	s0, s18
 801525e:	a860      	add	r0, sp, #384	; 0x180
 8015260:	f006 fc8e 	bl	801bb80 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8015264:	eeb0 0a68 	vmov.f32	s0, s17
 8015268:	f006 fc98 	bl	801bb9c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 801526c:	eeb0 0a48 	vmov.f32	s0, s16
 8015270:	f006 fca3 	bl	801bbba <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8015274:	aa50      	add	r2, sp, #320	; 0x140
 8015276:	a960      	add	r1, sp, #384	; 0x180
 8015278:	a8b0      	add	r0, sp, #704	; 0x2c0
 801527a:	f006 fbc7 	bl	801ba0c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 801527e:	4628      	mov	r0, r5
 8015280:	aa40      	add	r2, sp, #256	; 0x100
 8015282:	a9b0      	add	r1, sp, #704	; 0x2c0
 8015284:	f006 fbc2 	bl	801ba0c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8015288:	4629      	mov	r1, r5
 801528a:	aa30      	add	r2, sp, #192	; 0xc0
 801528c:	a870      	add	r0, sp, #448	; 0x1c0
 801528e:	f006 fbbd 	bl	801ba0c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8015292:	a880      	add	r0, sp, #512	; 0x200
 8015294:	f006 fba0 	bl	801b9d8 <_ZN8touchgfx9Matrix4x4C1Ev>
 8015298:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 801529c:	a880      	add	r0, sp, #512	; 0x200
 801529e:	eeb1 0a40 	vneg.f32	s0, s0
 80152a2:	f006 fc6d 	bl	801bb80 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 80152a6:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 80152aa:	a880      	add	r0, sp, #512	; 0x200
 80152ac:	eeb1 0a40 	vneg.f32	s0, s0
 80152b0:	f006 fc74 	bl	801bb9c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 80152b4:	a890      	add	r0, sp, #576	; 0x240
 80152b6:	f006 fb8f 	bl	801b9d8 <_ZN8touchgfx9Matrix4x4C1Ev>
 80152ba:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 80152be:	a890      	add	r0, sp, #576	; 0x240
 80152c0:	f006 fbd2 	bl	801ba68 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 80152c4:	a8a0      	add	r0, sp, #640	; 0x280
 80152c6:	f006 fb87 	bl	801b9d8 <_ZN8touchgfx9Matrix4x4C1Ev>
 80152ca:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 80152ce:	a8a0      	add	r0, sp, #640	; 0x280
 80152d0:	f006 fc56 	bl	801bb80 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 80152d4:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 80152d8:	f006 fc60 	bl	801bb9c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 80152dc:	aa90      	add	r2, sp, #576	; 0x240
 80152de:	a9a0      	add	r1, sp, #640	; 0x280
 80152e0:	a8b0      	add	r0, sp, #704	; 0x2c0
 80152e2:	f006 fb93 	bl	801ba0c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80152e6:	4628      	mov	r0, r5
 80152e8:	aa80      	add	r2, sp, #512	; 0x200
 80152ea:	a9b0      	add	r1, sp, #704	; 0x2c0
 80152ec:	f006 fb8e 	bl	801ba0c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80152f0:	4629      	mov	r1, r5
 80152f2:	aa70      	add	r2, sp, #448	; 0x1c0
 80152f4:	4668      	mov	r0, sp
 80152f6:	466d      	mov	r5, sp
 80152f8:	f006 fb88 	bl	801ba0c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80152fc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80152fe:	ae70      	add	r6, sp, #448	; 0x1c0
 8015300:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8015302:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8015304:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8015306:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8015308:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 801530a:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 801530e:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 8015312:	2500      	movs	r5, #0
 8015314:	0129      	lsls	r1, r5, #4
 8015316:	ab20      	add	r3, sp, #128	; 0x80
 8015318:	185e      	adds	r6, r3, r1
 801531a:	ab10      	add	r3, sp, #64	; 0x40
 801531c:	4419      	add	r1, r3
 801531e:	a870      	add	r0, sp, #448	; 0x1c0
 8015320:	f006 fb2a 	bl	801b978 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 8015324:	3501      	adds	r5, #1
 8015326:	2d04      	cmp	r5, #4
 8015328:	ed86 0a00 	vstr	s0, [r6]
 801532c:	edc6 0a01 	vstr	s1, [r6, #4]
 8015330:	ed86 1a02 	vstr	s2, [r6, #8]
 8015334:	edc6 1a03 	vstr	s3, [r6, #12]
 8015338:	d1ec      	bne.n	8015314 <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 801533a:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 801533e:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 8015342:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 8015346:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801534a:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 801534e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8015352:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 8015356:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 801535a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801535e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8015362:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 8015366:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801536a:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 801536e:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8015372:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 8015376:	ee86 6a87 	vdiv.f32	s12, s13, s14
 801537a:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 801537e:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 8015382:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8015386:	ee86 6a87 	vdiv.f32	s12, s13, s14
 801538a:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 801538e:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 8015392:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 8015396:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801539a:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 801539e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80153a2:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 80153a6:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 80153aa:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80153ae:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80153b2:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 80153b6:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 80153ba:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 80153be:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80153c2:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 80153c6:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80153ca:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 80153ce:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 80153d2:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80153d6:	eec7 6a87 	vdiv.f32	s13, s15, s14
 80153da:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 80153de:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 80153e2:	ecbd 8b04 	vpop	{d8-d9}
 80153e6:	bd70      	pop	{r4, r5, r6, pc}

080153e8 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 80153e8:	b510      	push	{r4, lr}
 80153ea:	4604      	mov	r4, r0
 80153ec:	f001 fb68 	bl	8016ac0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80153f0:	4620      	mov	r0, r4
 80153f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80153f6:	f7ff bea1 	b.w	801513c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080153fa <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 80153fa:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 80153fe:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 8015402:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 8015406:	f7ff be99 	b.w	801513c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0801540a <_ZN8touchgfx13TextureMapper8setScaleEf>:
 801540a:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 801540e:	f7ff be95 	b.w	801513c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08015412 <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 8015412:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 8015416:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 801541a:	f7ff be8f 	b.w	801513c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0801541e <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 801541e:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8015422:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8015426:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801542a:	bfd8      	it	le
 801542c:	eeb0 0a67 	vmovle.f32	s0, s15
 8015430:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 8015434:	f7ff be82 	b.w	801513c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08015438 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 8015438:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 801543c:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 8015440:	f7ff be7c 	b.w	801513c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08015444 <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 8015444:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8015448:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 801544c:	f7ff be76 	b.w	801513c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08015450 <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 8015450:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8015454:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8015458:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 801545c:	f7ff be6e 	b.w	801513c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08015460 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 8015460:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015464:	ed2d 8b04 	vpush	{d8-d9}
 8015468:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 801546c:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 8015470:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 8015474:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 8015478:	eeb4 8ae9 	vcmpe.f32	s16, s19
 801547c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015480:	bf54      	ite	pl
 8015482:	eeb0 0a69 	vmovpl.f32	s0, s19
 8015486:	eeb0 0a48 	vmovmi.f32	s0, s16
 801548a:	eeb4 9ac0 	vcmpe.f32	s18, s0
 801548e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015492:	bfd8      	it	le
 8015494:	eeb0 0a49 	vmovle.f32	s0, s18
 8015498:	eef4 8ac0 	vcmpe.f32	s17, s0
 801549c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80154a0:	bfd8      	it	le
 80154a2:	eeb0 0a68 	vmovle.f32	s0, s17
 80154a6:	460c      	mov	r4, r1
 80154a8:	4607      	mov	r7, r0
 80154aa:	f015 fa4f 	bl	802a94c <floorf>
 80154ae:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80154b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80154b6:	bf58      	it	pl
 80154b8:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 80154bc:	eeb4 8ae9 	vcmpe.f32	s16, s19
 80154c0:	bf56      	itet	pl
 80154c2:	ee10 3a10 	vmovpl	r3, s0
 80154c6:	2600      	movmi	r6, #0
 80154c8:	b21e      	sxthpl	r6, r3
 80154ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80154ce:	bfd8      	it	le
 80154d0:	eeb0 8a69 	vmovle.f32	s16, s19
 80154d4:	eeb4 9ac8 	vcmpe.f32	s18, s16
 80154d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80154dc:	bf58      	it	pl
 80154de:	eeb0 8a49 	vmovpl.f32	s16, s18
 80154e2:	eef4 8ac8 	vcmpe.f32	s17, s16
 80154e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80154ea:	bf54      	ite	pl
 80154ec:	eeb0 0a68 	vmovpl.f32	s0, s17
 80154f0:	eeb0 0a48 	vmovmi.f32	s0, s16
 80154f4:	f015 f9e8 	bl	802a8c8 <ceilf>
 80154f8:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 80154fc:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 8015500:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 8015504:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 8015508:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 801550c:	ee07 8a90 	vmov	s15, r8
 8015510:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015514:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8015518:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801551c:	bfd8      	it	le
 801551e:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 8015522:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8015526:	bfdc      	itt	le
 8015528:	ee10 3a10 	vmovle	r3, s0
 801552c:	fa0f f883 	sxthle.w	r8, r3
 8015530:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015534:	bf54      	ite	pl
 8015536:	eeb0 0a69 	vmovpl.f32	s0, s19
 801553a:	eeb0 0a48 	vmovmi.f32	s0, s16
 801553e:	eeb4 9ac0 	vcmpe.f32	s18, s0
 8015542:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015546:	bfd8      	it	le
 8015548:	eeb0 0a49 	vmovle.f32	s0, s18
 801554c:	eef4 8ac0 	vcmpe.f32	s17, s0
 8015550:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015554:	bfd8      	it	le
 8015556:	eeb0 0a68 	vmovle.f32	s0, s17
 801555a:	f015 f9f7 	bl	802a94c <floorf>
 801555e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8015562:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015566:	bf58      	it	pl
 8015568:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 801556c:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8015570:	bf56      	itet	pl
 8015572:	ee10 3a10 	vmovpl	r3, s0
 8015576:	2500      	movmi	r5, #0
 8015578:	b21d      	sxthpl	r5, r3
 801557a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801557e:	bfd8      	it	le
 8015580:	eeb0 8a69 	vmovle.f32	s16, s19
 8015584:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8015588:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801558c:	bf58      	it	pl
 801558e:	eeb0 8a49 	vmovpl.f32	s16, s18
 8015592:	eef4 8ac8 	vcmpe.f32	s17, s16
 8015596:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801559a:	bf54      	ite	pl
 801559c:	eeb0 0a68 	vmovpl.f32	s0, s17
 80155a0:	eeb0 0a48 	vmovmi.f32	s0, s16
 80155a4:	f015 f990 	bl	802a8c8 <ceilf>
 80155a8:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80155ac:	803e      	strh	r6, [r7, #0]
 80155ae:	ee07 3a90 	vmov	s15, r3
 80155b2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80155b6:	807d      	strh	r5, [r7, #2]
 80155b8:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80155bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80155c0:	bfd8      	it	le
 80155c2:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 80155c6:	eba8 0606 	sub.w	r6, r8, r6
 80155ca:	bfdc      	itt	le
 80155cc:	ee10 3a10 	vmovle	r3, s0
 80155d0:	b21b      	sxthle	r3, r3
 80155d2:	1b5d      	subs	r5, r3, r5
 80155d4:	80be      	strh	r6, [r7, #4]
 80155d6:	80fd      	strh	r5, [r7, #6]
 80155d8:	ecbd 8b04 	vpop	{d8-d9}
 80155dc:	4638      	mov	r0, r7
 80155de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080155e2 <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 80155e2:	b513      	push	{r0, r1, r4, lr}
 80155e4:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 80155e8:	4604      	mov	r4, r0
 80155ea:	b143      	cbz	r3, 80155fe <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 80155ec:	4601      	mov	r1, r0
 80155ee:	4668      	mov	r0, sp
 80155f0:	f7ff ff36 	bl	8015460 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 80155f4:	6823      	ldr	r3, [r4, #0]
 80155f6:	4669      	mov	r1, sp
 80155f8:	691b      	ldr	r3, [r3, #16]
 80155fa:	4620      	mov	r0, r4
 80155fc:	4798      	blx	r3
 80155fe:	b002      	add	sp, #8
 8015600:	bd10      	pop	{r4, pc}

08015602 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 8015602:	4603      	mov	r3, r0
 8015604:	3026      	adds	r0, #38	; 0x26
 8015606:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 801560a:	b90b      	cbnz	r3, 8015610 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 801560c:	f005 b84c 	b.w	801a6a8 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 8015610:	f005 b85a 	b.w	801a6c8 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

08015614 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 8015614:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015618:	ed2d 8b04 	vpush	{d8-d9}
 801561c:	4604      	mov	r4, r0
 801561e:	469b      	mov	fp, r3
 8015620:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 8015624:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8015628:	f9b1 6000 	ldrsh.w	r6, [r1]
 801562c:	8888      	ldrh	r0, [r1, #4]
 801562e:	b0b3      	sub	sp, #204	; 0xcc
 8015630:	4430      	add	r0, r6
 8015632:	b280      	uxth	r0, r0
 8015634:	9206      	str	r2, [sp, #24]
 8015636:	fa0f fe80 	sxth.w	lr, r0
 801563a:	2200      	movs	r2, #0
 801563c:	4596      	cmp	lr, r2
 801563e:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 8015642:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 8015646:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 801564a:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 801564c:	9211      	str	r2, [sp, #68]	; 0x44
 801564e:	f340 8129 	ble.w	80158a4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8015652:	45b4      	cmp	ip, r6
 8015654:	f340 8126 	ble.w	80158a4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8015658:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 801565c:	88ca      	ldrh	r2, [r1, #6]
 801565e:	442a      	add	r2, r5
 8015660:	b292      	uxth	r2, r2
 8015662:	b211      	sxth	r1, r2
 8015664:	2900      	cmp	r1, #0
 8015666:	f340 811d 	ble.w	80158a4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 801566a:	42ab      	cmp	r3, r5
 801566c:	f340 811a 	ble.w	80158a4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8015670:	45f4      	cmp	ip, lr
 8015672:	bfb8      	it	lt
 8015674:	fa1f f08c 	uxthlt.w	r0, ip
 8015678:	428b      	cmp	r3, r1
 801567a:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 801567e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8015682:	bfb8      	it	lt
 8015684:	b29a      	uxthlt	r2, r3
 8015686:	1b80      	subs	r0, r0, r6
 8015688:	1b52      	subs	r2, r2, r5
 801568a:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 801568e:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 8015692:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8015696:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 801569a:	ab11      	add	r3, sp, #68	; 0x44
 801569c:	e893 0003 	ldmia.w	r3, {r0, r1}
 80156a0:	6822      	ldr	r2, [r4, #0]
 80156a2:	9307      	str	r3, [sp, #28]
 80156a4:	ad13      	add	r5, sp, #76	; 0x4c
 80156a6:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 80156a8:	e885 0003 	stmia.w	r5, {r0, r1}
 80156ac:	4629      	mov	r1, r5
 80156ae:	4620      	mov	r0, r4
 80156b0:	4790      	blx	r2
 80156b2:	4621      	mov	r1, r4
 80156b4:	a815      	add	r0, sp, #84	; 0x54
 80156b6:	f004 ff53 	bl	801a560 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80156ba:	a815      	add	r0, sp, #84	; 0x54
 80156bc:	f003 fc4a 	bl	8018f54 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80156c0:	9b07      	ldr	r3, [sp, #28]
 80156c2:	1d26      	adds	r6, r4, #4
 80156c4:	4618      	mov	r0, r3
 80156c6:	4631      	mov	r1, r6
 80156c8:	f003 fc88 	bl	8018fdc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80156cc:	4628      	mov	r0, r5
 80156ce:	f104 0526 	add.w	r5, r4, #38	; 0x26
 80156d2:	f003 fc3f 	bl	8018f54 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80156d6:	4628      	mov	r0, r5
 80156d8:	f007 f9d4 	bl	801ca84 <_ZNK8touchgfx6Bitmap7getDataEv>
 80156dc:	9007      	str	r0, [sp, #28]
 80156de:	2800      	cmp	r0, #0
 80156e0:	f000 80db 	beq.w	801589a <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 80156e4:	f8db 2000 	ldr.w	r2, [fp]
 80156e8:	9209      	str	r2, [sp, #36]	; 0x24
 80156ea:	f8db 2004 	ldr.w	r2, [fp, #4]
 80156ee:	920a      	str	r2, [sp, #40]	; 0x28
 80156f0:	f8db 2008 	ldr.w	r2, [fp, #8]
 80156f4:	920b      	str	r2, [sp, #44]	; 0x2c
 80156f6:	f8db 200c 	ldr.w	r2, [fp, #12]
 80156fa:	920c      	str	r2, [sp, #48]	; 0x30
 80156fc:	f8da 2000 	ldr.w	r2, [sl]
 8015700:	920d      	str	r2, [sp, #52]	; 0x34
 8015702:	f8da 2004 	ldr.w	r2, [sl, #4]
 8015706:	920e      	str	r2, [sp, #56]	; 0x38
 8015708:	f8da 2008 	ldr.w	r2, [sl, #8]
 801570c:	920f      	str	r2, [sp, #60]	; 0x3c
 801570e:	f8da 200c 	ldr.w	r2, [sl, #12]
 8015712:	9210      	str	r2, [sp, #64]	; 0x40
 8015714:	a90d      	add	r1, sp, #52	; 0x34
 8015716:	4632      	mov	r2, r6
 8015718:	a809      	add	r0, sp, #36	; 0x24
 801571a:	f003 fc43 	bl	8018fa4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 801571e:	4632      	mov	r2, r6
 8015720:	a90e      	add	r1, sp, #56	; 0x38
 8015722:	a80a      	add	r0, sp, #40	; 0x28
 8015724:	f003 fc3e 	bl	8018fa4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8015728:	4632      	mov	r2, r6
 801572a:	a90f      	add	r1, sp, #60	; 0x3c
 801572c:	a80b      	add	r0, sp, #44	; 0x2c
 801572e:	f003 fc39 	bl	8018fa4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8015732:	4632      	mov	r2, r6
 8015734:	a910      	add	r1, sp, #64	; 0x40
 8015736:	a80c      	add	r0, sp, #48	; 0x30
 8015738:	f003 fc34 	bl	8018fa4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 801573c:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 8015740:	edd7 4a00 	vldr	s9, [r7]
 8015744:	edd7 5a01 	vldr	s11, [r7, #4]
 8015748:	ed98 4a00 	vldr	s8, [r8]
 801574c:	ed98 5a01 	vldr	s10, [r8, #4]
 8015750:	ed99 9a00 	vldr	s18, [r9]
 8015754:	ed99 8a01 	vldr	s16, [r9, #4]
 8015758:	edd9 8a02 	vldr	s17, [r9, #8]
 801575c:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 8015760:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 8015764:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 8015768:	eef0 6a67 	vmov.f32	s13, s15
 801576c:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 8015770:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 8015774:	eeb0 7a67 	vmov.f32	s14, s15
 8015778:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 801577c:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 8015780:	eeb0 6a67 	vmov.f32	s12, s15
 8015784:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8015788:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 801578c:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 8015790:	ee16 6a10 	vmov	r6, s12
 8015794:	eeb0 6a67 	vmov.f32	s12, s15
 8015798:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 801579c:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 80157a0:	f8d7 a008 	ldr.w	sl, [r7, #8]
 80157a4:	f8d8 b008 	ldr.w	fp, [r8, #8]
 80157a8:	68ff      	ldr	r7, [r7, #12]
 80157aa:	9624      	str	r6, [sp, #144]	; 0x90
 80157ac:	ee16 0a10 	vmov	r0, s12
 80157b0:	eeb0 6a67 	vmov.f32	s12, s15
 80157b4:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80157b8:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 80157bc:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 80157c0:	ee16 1a10 	vmov	r1, s12
 80157c4:	eeb0 6a67 	vmov.f32	s12, s15
 80157c8:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80157cc:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 80157d0:	ee16 2a10 	vmov	r2, s12
 80157d4:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 80157d8:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 80157dc:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 80157e0:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 80157e4:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80157e8:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 80157ec:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 80157f0:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 80157f4:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 80157f8:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 80157fc:	922d      	str	r2, [sp, #180]	; 0xb4
 80157fe:	4a2b      	ldr	r2, [pc, #172]	; (80158ac <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 8015800:	9b06      	ldr	r3, [sp, #24]
 8015802:	8812      	ldrh	r2, [r2, #0]
 8015804:	9317      	str	r3, [sp, #92]	; 0x5c
 8015806:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 801580a:	9b07      	ldr	r3, [sp, #28]
 801580c:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 8015810:	4628      	mov	r0, r5
 8015812:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 8015816:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 801581a:	9218      	str	r2, [sp, #96]	; 0x60
 801581c:	9319      	str	r3, [sp, #100]	; 0x64
 801581e:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 8015822:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 8015826:	9731      	str	r7, [sp, #196]	; 0xc4
 8015828:	f007 f95c 	bl	801cae4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801582c:	901a      	str	r0, [sp, #104]	; 0x68
 801582e:	4628      	mov	r0, r5
 8015830:	f007 f83c 	bl	801c8ac <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015834:	901b      	str	r0, [sp, #108]	; 0x6c
 8015836:	4628      	mov	r0, r5
 8015838:	f007 f86c 	bl	801c914 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801583c:	901c      	str	r0, [sp, #112]	; 0x70
 801583e:	4628      	mov	r0, r5
 8015840:	f007 f834 	bl	801c8ac <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015844:	eeb4 9a48 	vcmp.f32	s18, s16
 8015848:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801584c:	901d      	str	r0, [sp, #116]	; 0x74
 801584e:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 8015852:	d107      	bne.n	8015864 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 8015854:	eeb4 8a68 	vcmp.f32	s16, s17
 8015858:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801585c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8015860:	bf08      	it	eq
 8015862:	461e      	moveq	r6, r3
 8015864:	4b12      	ldr	r3, [pc, #72]	; (80158b0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 8015866:	681b      	ldr	r3, [r3, #0]
 8015868:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801586c:	b10a      	cbz	r2, 8015872 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 801586e:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 8015870:	b905      	cbnz	r5, 8015874 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 8015872:	689d      	ldr	r5, [r3, #8]
 8015874:	682b      	ldr	r3, [r5, #0]
 8015876:	4620      	mov	r0, r4
 8015878:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 801587a:	f7ff fec2 	bl	8015602 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 801587e:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8015882:	9604      	str	r6, [sp, #16]
 8015884:	e9cd 0302 	strd	r0, r3, [sp, #8]
 8015888:	ab13      	add	r3, sp, #76	; 0x4c
 801588a:	9301      	str	r3, [sp, #4]
 801588c:	ab15      	add	r3, sp, #84	; 0x54
 801588e:	9300      	str	r3, [sp, #0]
 8015890:	aa1e      	add	r2, sp, #120	; 0x78
 8015892:	ab19      	add	r3, sp, #100	; 0x64
 8015894:	a917      	add	r1, sp, #92	; 0x5c
 8015896:	4628      	mov	r0, r5
 8015898:	47b8      	blx	r7
 801589a:	b033      	add	sp, #204	; 0xcc
 801589c:	ecbd 8b04 	vpop	{d8-d9}
 80158a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80158a4:	2300      	movs	r3, #0
 80158a6:	9312      	str	r3, [sp, #72]	; 0x48
 80158a8:	e6f7      	b.n	801569a <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 80158aa:	bf00      	nop
 80158ac:	20002246 	.word	0x20002246
 80158b0:	2000224c 	.word	0x2000224c

080158b4 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 80158b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80158b8:	ed2d 8b02 	vpush	{d8}
 80158bc:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 80158c0:	b098      	sub	sp, #96	; 0x60
 80158c2:	4604      	mov	r4, r0
 80158c4:	4688      	mov	r8, r1
 80158c6:	2b00      	cmp	r3, #0
 80158c8:	d077      	beq.n	80159ba <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 80158ca:	f100 0526 	add.w	r5, r0, #38	; 0x26
 80158ce:	4628      	mov	r0, r5
 80158d0:	f006 ffec 	bl	801c8ac <_ZNK8touchgfx6Bitmap8getWidthEv>
 80158d4:	ee07 0a90 	vmov	s15, r0
 80158d8:	4628      	mov	r0, r5
 80158da:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 80158de:	f007 f819 	bl	801c914 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80158e2:	4b4e      	ldr	r3, [pc, #312]	; (8015a1c <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 80158e4:	781b      	ldrb	r3, [r3, #0]
 80158e6:	ee07 0a90 	vmov	s15, r0
 80158ea:	2b01      	cmp	r3, #1
 80158ec:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80158f0:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 80158f4:	d066      	beq.n	80159c4 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 80158f6:	eeb0 6a47 	vmov.f32	s12, s14
 80158fa:	ee17 3a10 	vmov	r3, s14
 80158fe:	eeb0 4a48 	vmov.f32	s8, s16
 8015902:	eeb0 7a48 	vmov.f32	s14, s16
 8015906:	eef0 4a67 	vmov.f32	s9, s15
 801590a:	eeb0 8a67 	vmov.f32	s16, s15
 801590e:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 8015912:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 8015916:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 801591a:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 801591e:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 8015922:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 8015926:	6f25      	ldr	r5, [r4, #112]	; 0x70
 8015928:	6e66      	ldr	r6, [r4, #100]	; 0x64
 801592a:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 801592c:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 8015930:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 8015934:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8015938:	ee73 1a65 	vsub.f32	s3, s6, s11
 801593c:	ee72 6ac5 	vsub.f32	s13, s5, s10
 8015940:	ee32 1a45 	vsub.f32	s2, s4, s10
 8015944:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 8015948:	ee73 1ae5 	vsub.f32	s3, s7, s11
 801594c:	eee1 6a21 	vfma.f32	s13, s2, s3
 8015950:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8015954:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015958:	dd3d      	ble.n	80159d6 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 801595a:	ed8d 5a04 	vstr	s10, [sp, #16]
 801595e:	ed8d 2a05 	vstr	s4, [sp, #20]
 8015962:	edcd 2a06 	vstr	s5, [sp, #24]
 8015966:	f8cd c01c 	str.w	ip, [sp, #28]
 801596a:	edcd 5a08 	vstr	s11, [sp, #32]
 801596e:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 8015972:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 8015976:	970b      	str	r7, [sp, #44]	; 0x2c
 8015978:	960c      	str	r6, [sp, #48]	; 0x30
 801597a:	950d      	str	r5, [sp, #52]	; 0x34
 801597c:	920e      	str	r2, [sp, #56]	; 0x38
 801597e:	900f      	str	r0, [sp, #60]	; 0x3c
 8015980:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 8015984:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 8015988:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 801598c:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 8015990:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 8015994:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 8015998:	9316      	str	r3, [sp, #88]	; 0x58
 801599a:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 801599e:	ab14      	add	r3, sp, #80	; 0x50
 80159a0:	9303      	str	r3, [sp, #12]
 80159a2:	ab10      	add	r3, sp, #64	; 0x40
 80159a4:	9302      	str	r3, [sp, #8]
 80159a6:	ab0c      	add	r3, sp, #48	; 0x30
 80159a8:	9301      	str	r3, [sp, #4]
 80159aa:	ab08      	add	r3, sp, #32
 80159ac:	9300      	str	r3, [sp, #0]
 80159ae:	2200      	movs	r2, #0
 80159b0:	ab04      	add	r3, sp, #16
 80159b2:	4641      	mov	r1, r8
 80159b4:	4620      	mov	r0, r4
 80159b6:	f7ff fe2d 	bl	8015614 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 80159ba:	b018      	add	sp, #96	; 0x60
 80159bc:	ecbd 8b02 	vpop	{d8}
 80159c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80159c4:	eeb0 6a48 	vmov.f32	s12, s16
 80159c8:	eef0 4a47 	vmov.f32	s9, s14
 80159cc:	ee17 3a90 	vmov	r3, s15
 80159d0:	eeb0 4a67 	vmov.f32	s8, s15
 80159d4:	e79b      	b.n	801590e <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 80159d6:	ed8d 5a05 	vstr	s10, [sp, #20]
 80159da:	ed8d 2a04 	vstr	s4, [sp, #16]
 80159de:	f8cd c018 	str.w	ip, [sp, #24]
 80159e2:	edcd 2a07 	vstr	s5, [sp, #28]
 80159e6:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 80159ea:	ed8d 3a08 	vstr	s6, [sp, #32]
 80159ee:	970a      	str	r7, [sp, #40]	; 0x28
 80159f0:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 80159f4:	960d      	str	r6, [sp, #52]	; 0x34
 80159f6:	950c      	str	r5, [sp, #48]	; 0x30
 80159f8:	900e      	str	r0, [sp, #56]	; 0x38
 80159fa:	920f      	str	r2, [sp, #60]	; 0x3c
 80159fc:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 8015a00:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 8015a04:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 8015a08:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8015a0c:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 8015a10:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8015a14:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 8015a18:	9317      	str	r3, [sp, #92]	; 0x5c
 8015a1a:	e7c0      	b.n	801599e <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 8015a1c:	20002244 	.word	0x20002244

08015a20 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv>:
 8015a20:	b508      	push	{r3, lr}
 8015a22:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8015a26:	b10b      	cbz	r3, 8015a2c <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv+0xc>
 8015a28:	f7f4 f982 	bl	8009d30 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 8015a2c:	bd08      	pop	{r3, pc}

08015a2e <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>:
 8015a2e:	6803      	ldr	r3, [r0, #0]
 8015a30:	f64f 71fe 	movw	r1, #65534	; 0xfffe
 8015a34:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8015a36:	4718      	bx	r3

08015a38 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv>:
 8015a38:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8015a3c:	2bff      	cmp	r3, #255	; 0xff
 8015a3e:	b510      	push	{r4, lr}
 8015a40:	d104      	bne.n	8015a4c <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x14>
 8015a42:	8cca      	ldrh	r2, [r1, #38]	; 0x26
 8015a44:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8015a48:	429a      	cmp	r2, r3
 8015a4a:	d105      	bne.n	8015a58 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x20>
 8015a4c:	2300      	movs	r3, #0
 8015a4e:	8003      	strh	r3, [r0, #0]
 8015a50:	8043      	strh	r3, [r0, #2]
 8015a52:	8083      	strh	r3, [r0, #4]
 8015a54:	80c3      	strh	r3, [r0, #6]
 8015a56:	bd10      	pop	{r4, pc}
 8015a58:	2300      	movs	r3, #0
 8015a5a:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8015a5e:	f9b1 200a 	ldrsh.w	r2, [r1, #10]
 8015a62:	8003      	strh	r3, [r0, #0]
 8015a64:	8043      	strh	r3, [r0, #2]
 8015a66:	8084      	strh	r4, [r0, #4]
 8015a68:	80c2      	strh	r2, [r0, #6]
 8015a6a:	e7f4      	b.n	8015a56 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x1e>

08015a6c <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE>:
 8015a6c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8015a70:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8015a74:	b087      	sub	sp, #28
 8015a76:	4604      	mov	r4, r0
 8015a78:	4689      	mov	r9, r1
 8015a7a:	b363      	cbz	r3, 8015ad6 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
 8015a7c:	8cc2      	ldrh	r2, [r0, #38]	; 0x26
 8015a7e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8015a82:	429a      	cmp	r2, r3
 8015a84:	d027      	beq.n	8015ad6 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
 8015a86:	ad06      	add	r5, sp, #24
 8015a88:	2700      	movs	r7, #0
 8015a8a:	f825 2d0c 	strh.w	r2, [r5, #-12]!
 8015a8e:	4628      	mov	r0, r5
 8015a90:	f006 ff0c 	bl	801c8ac <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015a94:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8015a98:	f8ad 3016 	strh.w	r3, [sp, #22]
 8015a9c:	6823      	ldr	r3, [r4, #0]
 8015a9e:	f8ad 0014 	strh.w	r0, [sp, #20]
 8015aa2:	a904      	add	r1, sp, #16
 8015aa4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015aa6:	9704      	str	r7, [sp, #16]
 8015aa8:	4620      	mov	r0, r4
 8015aaa:	4798      	blx	r3
 8015aac:	f7f5 fa6a 	bl	800af84 <_ZN8touchgfx3HAL3lcdEv>
 8015ab0:	6803      	ldr	r3, [r0, #0]
 8015ab2:	4606      	mov	r6, r0
 8015ab4:	f8d3 800c 	ldr.w	r8, [r3, #12]
 8015ab8:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8015aba:	f8ad 300c 	strh.w	r3, [sp, #12]
 8015abe:	4628      	mov	r0, r5
 8015ac0:	f006 ffe0 	bl	801ca84 <_ZNK8touchgfx6Bitmap7getDataEv>
 8015ac4:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8015ac8:	9300      	str	r3, [sp, #0]
 8015aca:	4601      	mov	r1, r0
 8015acc:	9701      	str	r7, [sp, #4]
 8015ace:	464b      	mov	r3, r9
 8015ad0:	aa04      	add	r2, sp, #16
 8015ad2:	4630      	mov	r0, r6
 8015ad4:	47c0      	blx	r8
 8015ad6:	b007      	add	sp, #28
 8015ad8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08015adc <_ZN8touchgfx14SnapshotWidget12makeSnapshotEt>:
 8015adc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8015ade:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8015ae2:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015ae6:	6803      	ldr	r3, [r0, #0]
 8015ae8:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 8015aec:	f8ad 2004 	strh.w	r2, [sp, #4]
 8015af0:	460d      	mov	r5, r1
 8015af2:	2100      	movs	r1, #0
 8015af4:	4604      	mov	r4, r0
 8015af6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015af8:	9100      	str	r1, [sp, #0]
 8015afa:	4669      	mov	r1, sp
 8015afc:	4798      	blx	r3
 8015afe:	4621      	mov	r1, r4
 8015b00:	a802      	add	r0, sp, #8
 8015b02:	f004 fd2d 	bl	801a560 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015b06:	f7f5 fa3d 	bl	800af84 <_ZN8touchgfx3HAL3lcdEv>
 8015b0a:	6803      	ldr	r3, [r0, #0]
 8015b0c:	aa02      	add	r2, sp, #8
 8015b0e:	695e      	ldr	r6, [r3, #20]
 8015b10:	4669      	mov	r1, sp
 8015b12:	462b      	mov	r3, r5
 8015b14:	47b0      	blx	r6
 8015b16:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8015b1a:	2800      	cmp	r0, #0
 8015b1c:	bf08      	it	eq
 8015b1e:	461d      	moveq	r5, r3
 8015b20:	84e5      	strh	r5, [r4, #38]	; 0x26
 8015b22:	b004      	add	sp, #16
 8015b24:	bd70      	pop	{r4, r5, r6, pc}
	...

08015b28 <_ZN8touchgfx14SnapshotWidgetC1Ev>:
 8015b28:	2200      	movs	r2, #0
 8015b2a:	8082      	strh	r2, [r0, #4]
 8015b2c:	80c2      	strh	r2, [r0, #6]
 8015b2e:	8102      	strh	r2, [r0, #8]
 8015b30:	8142      	strh	r2, [r0, #10]
 8015b32:	8182      	strh	r2, [r0, #12]
 8015b34:	81c2      	strh	r2, [r0, #14]
 8015b36:	8202      	strh	r2, [r0, #16]
 8015b38:	8242      	strh	r2, [r0, #18]
 8015b3a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8015b3e:	61c2      	str	r2, [r0, #28]
 8015b40:	8402      	strh	r2, [r0, #32]
 8015b42:	8442      	strh	r2, [r0, #34]	; 0x22
 8015b44:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8015b48:	2201      	movs	r2, #1
 8015b4a:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 8015b4e:	4a04      	ldr	r2, [pc, #16]	; (8015b60 <_ZN8touchgfx14SnapshotWidgetC1Ev+0x38>)
 8015b50:	6002      	str	r2, [r0, #0]
 8015b52:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8015b56:	84c2      	strh	r2, [r0, #38]	; 0x26
 8015b58:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
 8015b5c:	4770      	bx	lr
 8015b5e:	bf00      	nop
 8015b60:	0802f460 	.word	0x0802f460

08015b64 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8015b64:	2000      	movs	r0, #0
 8015b66:	4770      	bx	lr

08015b68 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8015b68:	4b07      	ldr	r3, [pc, #28]	; (8015b88 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 8015b6a:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8015b6c:	881b      	ldrh	r3, [r3, #0]
 8015b6e:	4293      	cmp	r3, r2
 8015b70:	bf81      	itttt	hi
 8015b72:	4b06      	ldrhi	r3, [pc, #24]	; (8015b8c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8015b74:	681b      	ldrhi	r3, [r3, #0]
 8015b76:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 8015b7a:	7858      	ldrbhi	r0, [r3, #1]
 8015b7c:	bf8c      	ite	hi
 8015b7e:	f000 0003 	andhi.w	r0, r0, #3
 8015b82:	2000      	movls	r0, #0
 8015b84:	4770      	bx	lr
 8015b86:	bf00      	nop
 8015b88:	200022a8 	.word	0x200022a8
 8015b8c:	200022a4 	.word	0x200022a4

08015b90 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8015b90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015b94:	4b10      	ldr	r3, [pc, #64]	; (8015bd8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 8015b96:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8015b98:	881b      	ldrh	r3, [r3, #0]
 8015b9a:	428b      	cmp	r3, r1
 8015b9c:	4604      	mov	r4, r0
 8015b9e:	d918      	bls.n	8015bd2 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8015ba0:	6803      	ldr	r3, [r0, #0]
 8015ba2:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 8015ba4:	4b0d      	ldr	r3, [pc, #52]	; (8015bdc <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 8015ba6:	6818      	ldr	r0, [r3, #0]
 8015ba8:	f7fa fa5e 	bl	8010068 <_ZNK8touchgfx5Texts7getTextEt>
 8015bac:	6823      	ldr	r3, [r4, #0]
 8015bae:	4606      	mov	r6, r0
 8015bb0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8015bb2:	4620      	mov	r0, r4
 8015bb4:	4798      	blx	r3
 8015bb6:	6823      	ldr	r3, [r4, #0]
 8015bb8:	4607      	mov	r7, r0
 8015bba:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8015bbe:	4620      	mov	r0, r4
 8015bc0:	4798      	blx	r3
 8015bc2:	463a      	mov	r2, r7
 8015bc4:	4603      	mov	r3, r0
 8015bc6:	4631      	mov	r1, r6
 8015bc8:	4620      	mov	r0, r4
 8015bca:	46ac      	mov	ip, r5
 8015bcc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8015bd0:	4760      	bx	ip
 8015bd2:	2000      	movs	r0, #0
 8015bd4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015bd8:	200022a8 	.word	0x200022a8
 8015bdc:	200022b0 	.word	0x200022b0

08015be0 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8015be0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8015be4:	4b17      	ldr	r3, [pc, #92]	; (8015c44 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8015be6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8015be8:	881b      	ldrh	r3, [r3, #0]
 8015bea:	428b      	cmp	r3, r1
 8015bec:	4604      	mov	r4, r0
 8015bee:	d926      	bls.n	8015c3e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8015bf0:	4b15      	ldr	r3, [pc, #84]	; (8015c48 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8015bf2:	681b      	ldr	r3, [r3, #0]
 8015bf4:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8015bf8:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8015bfc:	4b13      	ldr	r3, [pc, #76]	; (8015c4c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8015bfe:	7855      	ldrb	r5, [r2, #1]
 8015c00:	681b      	ldr	r3, [r3, #0]
 8015c02:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 8015c06:	6833      	ldr	r3, [r6, #0]
 8015c08:	69df      	ldr	r7, [r3, #28]
 8015c0a:	4b11      	ldr	r3, [pc, #68]	; (8015c50 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8015c0c:	6818      	ldr	r0, [r3, #0]
 8015c0e:	f7fa fa2b 	bl	8010068 <_ZNK8touchgfx5Texts7getTextEt>
 8015c12:	6823      	ldr	r3, [r4, #0]
 8015c14:	4680      	mov	r8, r0
 8015c16:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8015c18:	4620      	mov	r0, r4
 8015c1a:	4798      	blx	r3
 8015c1c:	6823      	ldr	r3, [r4, #0]
 8015c1e:	4681      	mov	r9, r0
 8015c20:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8015c24:	4620      	mov	r0, r4
 8015c26:	4798      	blx	r3
 8015c28:	f3c5 0581 	ubfx	r5, r5, #2, #2
 8015c2c:	9000      	str	r0, [sp, #0]
 8015c2e:	464b      	mov	r3, r9
 8015c30:	4642      	mov	r2, r8
 8015c32:	4629      	mov	r1, r5
 8015c34:	4630      	mov	r0, r6
 8015c36:	47b8      	blx	r7
 8015c38:	b003      	add	sp, #12
 8015c3a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8015c3e:	2000      	movs	r0, #0
 8015c40:	e7fa      	b.n	8015c38 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 8015c42:	bf00      	nop
 8015c44:	200022a8 	.word	0x200022a8
 8015c48:	200022a4 	.word	0x200022a4
 8015c4c:	200022ac 	.word	0x200022ac
 8015c50:	200022b0 	.word	0x200022b0

08015c54 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8015c54:	b40e      	push	{r1, r2, r3}
 8015c56:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8015c5a:	4b2f      	ldr	r3, [pc, #188]	; (8015d18 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 8015c5c:	881a      	ldrh	r2, [r3, #0]
 8015c5e:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8015c60:	429a      	cmp	r2, r3
 8015c62:	b09d      	sub	sp, #116	; 0x74
 8015c64:	4604      	mov	r4, r0
 8015c66:	d954      	bls.n	8015d12 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8015c68:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8015d1c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8015c6c:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8015d20 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8015c70:	aa26      	add	r2, sp, #152	; 0x98
 8015c72:	9202      	str	r2, [sp, #8]
 8015c74:	f8d9 2000 	ldr.w	r2, [r9]
 8015c78:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8015c7c:	f8d8 3000 	ldr.w	r3, [r8]
 8015c80:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8015c84:	682b      	ldr	r3, [r5, #0]
 8015c86:	4628      	mov	r0, r5
 8015c88:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015c8a:	4798      	blx	r3
 8015c8c:	b207      	sxth	r7, r0
 8015c8e:	4606      	mov	r6, r0
 8015c90:	a803      	add	r0, sp, #12
 8015c92:	f005 f929 	bl	801aee8 <_ZN8touchgfx12TextProviderC1Ev>
 8015c96:	682b      	ldr	r3, [r5, #0]
 8015c98:	4628      	mov	r0, r5
 8015c9a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015c9c:	4798      	blx	r3
 8015c9e:	682b      	ldr	r3, [r5, #0]
 8015ca0:	4682      	mov	sl, r0
 8015ca2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015ca4:	4628      	mov	r0, r5
 8015ca6:	4798      	blx	r3
 8015ca8:	4653      	mov	r3, sl
 8015caa:	9000      	str	r0, [sp, #0]
 8015cac:	9a02      	ldr	r2, [sp, #8]
 8015cae:	9925      	ldr	r1, [sp, #148]	; 0x94
 8015cb0:	a803      	add	r0, sp, #12
 8015cb2:	f005 f974 	bl	801af9e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015cb6:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8015cb8:	f8d9 3000 	ldr.w	r3, [r9]
 8015cbc:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8015cc0:	8925      	ldrh	r5, [r4, #8]
 8015cc2:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8015cc6:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 8015cca:	eba5 050c 	sub.w	r5, r5, ip
 8015cce:	784a      	ldrb	r2, [r1, #1]
 8015cd0:	f8d8 3000 	ldr.w	r3, [r8]
 8015cd4:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8015cd8:	b22d      	sxth	r5, r5
 8015cda:	9500      	str	r5, [sp, #0]
 8015cdc:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8015ce0:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8015ce4:	a803      	add	r0, sp, #12
 8015ce6:	f002 fe3b 	bl	8018960 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8015cea:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 8015cee:	18b9      	adds	r1, r7, r2
 8015cf0:	2900      	cmp	r1, #0
 8015cf2:	b203      	sxth	r3, r0
 8015cf4:	dd0b      	ble.n	8015d0e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 8015cf6:	3b01      	subs	r3, #1
 8015cf8:	fb13 f302 	smulbb	r3, r3, r2
 8015cfc:	fb16 3300 	smlabb	r3, r6, r0, r3
 8015d00:	b21f      	sxth	r7, r3
 8015d02:	4638      	mov	r0, r7
 8015d04:	b01d      	add	sp, #116	; 0x74
 8015d06:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8015d0a:	b003      	add	sp, #12
 8015d0c:	4770      	bx	lr
 8015d0e:	2b00      	cmp	r3, #0
 8015d10:	dcf7      	bgt.n	8015d02 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8015d12:	2700      	movs	r7, #0
 8015d14:	e7f5      	b.n	8015d02 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8015d16:	bf00      	nop
 8015d18:	200022a8 	.word	0x200022a8
 8015d1c:	200022a4 	.word	0x200022a4
 8015d20:	200022ac 	.word	0x200022ac

08015d24 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 8015d24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015d28:	4bbc      	ldr	r3, [pc, #752]	; (801601c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 8015d2a:	460c      	mov	r4, r1
 8015d2c:	881b      	ldrh	r3, [r3, #0]
 8015d2e:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 8015d30:	428b      	cmp	r3, r1
 8015d32:	b0a9      	sub	sp, #164	; 0xa4
 8015d34:	4680      	mov	r8, r0
 8015d36:	d809      	bhi.n	8015d4c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8015d38:	2300      	movs	r3, #0
 8015d3a:	f04f 32ff 	mov.w	r2, #4294967295
 8015d3e:	e9c0 3200 	strd	r3, r2, [r0]
 8015d42:	6083      	str	r3, [r0, #8]
 8015d44:	4640      	mov	r0, r8
 8015d46:	b029      	add	sp, #164	; 0xa4
 8015d48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015d4c:	4eb4      	ldr	r6, [pc, #720]	; (8016020 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 8015d4e:	6833      	ldr	r3, [r6, #0]
 8015d50:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8015d54:	4bb3      	ldr	r3, [pc, #716]	; (8016024 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 8015d56:	681b      	ldr	r3, [r3, #0]
 8015d58:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8015d5c:	4bb2      	ldr	r3, [pc, #712]	; (8016028 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8015d5e:	6818      	ldr	r0, [r3, #0]
 8015d60:	f7fa f982 	bl	8010068 <_ZNK8touchgfx5Texts7getTextEt>
 8015d64:	682b      	ldr	r3, [r5, #0]
 8015d66:	4681      	mov	r9, r0
 8015d68:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015d6a:	4628      	mov	r0, r5
 8015d6c:	4798      	blx	r3
 8015d6e:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 8015d70:	b203      	sxth	r3, r0
 8015d72:	4407      	add	r7, r0
 8015d74:	9304      	str	r3, [sp, #16]
 8015d76:	b2bb      	uxth	r3, r7
 8015d78:	9303      	str	r3, [sp, #12]
 8015d7a:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8015d7e:	4682      	mov	sl, r0
 8015d80:	a80f      	add	r0, sp, #60	; 0x3c
 8015d82:	2b00      	cmp	r3, #0
 8015d84:	f040 80a6 	bne.w	8015ed4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8015d88:	f005 f8ae 	bl	801aee8 <_ZN8touchgfx12TextProviderC1Ev>
 8015d8c:	682b      	ldr	r3, [r5, #0]
 8015d8e:	4628      	mov	r0, r5
 8015d90:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015d92:	4798      	blx	r3
 8015d94:	682b      	ldr	r3, [r5, #0]
 8015d96:	4606      	mov	r6, r0
 8015d98:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015d9a:	4628      	mov	r0, r5
 8015d9c:	4798      	blx	r3
 8015d9e:	6823      	ldr	r3, [r4, #0]
 8015da0:	4607      	mov	r7, r0
 8015da2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8015da4:	4620      	mov	r0, r4
 8015da6:	4798      	blx	r3
 8015da8:	6823      	ldr	r3, [r4, #0]
 8015daa:	4683      	mov	fp, r0
 8015dac:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8015db0:	4620      	mov	r0, r4
 8015db2:	4798      	blx	r3
 8015db4:	463b      	mov	r3, r7
 8015db6:	e9cd b000 	strd	fp, r0, [sp]
 8015dba:	4649      	mov	r1, r9
 8015dbc:	4632      	mov	r2, r6
 8015dbe:	a80f      	add	r0, sp, #60	; 0x3c
 8015dc0:	f005 f902 	bl	801afc8 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8015dc4:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8015dc8:	f8df b254 	ldr.w	fp, [pc, #596]	; 8016020 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 8015dcc:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8015dd0:	f04f 0600 	mov.w	r6, #0
 8015dd4:	bf0c      	ite	eq
 8015dd6:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 8015dda:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 8015dde:	4637      	mov	r7, r6
 8015de0:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8015de2:	f8db 3000 	ldr.w	r3, [fp]
 8015de6:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8015dea:	4629      	mov	r1, r5
 8015dec:	785b      	ldrb	r3, [r3, #1]
 8015dee:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8015df2:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8015df6:	a80f      	add	r0, sp, #60	; 0x3c
 8015df8:	f002 facd 	bl	8018396 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8015dfc:	9b03      	ldr	r3, [sp, #12]
 8015dfe:	4286      	cmp	r6, r0
 8015e00:	bfb8      	it	lt
 8015e02:	4606      	movlt	r6, r0
 8015e04:	3701      	adds	r7, #1
 8015e06:	eba9 0903 	sub.w	r9, r9, r3
 8015e0a:	a80f      	add	r0, sp, #60	; 0x3c
 8015e0c:	b236      	sxth	r6, r6
 8015e0e:	b2bf      	uxth	r7, r7
 8015e10:	fa0f f989 	sxth.w	r9, r9
 8015e14:	f005 f88f 	bl	801af36 <_ZN8touchgfx12TextProvider11endOfStringEv>
 8015e18:	b918      	cbnz	r0, 8015e22 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8015e1a:	7a2b      	ldrb	r3, [r5, #8]
 8015e1c:	444b      	add	r3, r9
 8015e1e:	2b00      	cmp	r3, #0
 8015e20:	dcde      	bgt.n	8015de0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 8015e22:	9b03      	ldr	r3, [sp, #12]
 8015e24:	9a04      	ldr	r2, [sp, #16]
 8015e26:	f895 9009 	ldrb.w	r9, [r5, #9]
 8015e2a:	fb13 f707 	smulbb	r7, r3, r7
 8015e2e:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8015e30:	1aff      	subs	r7, r7, r3
 8015e32:	b2bf      	uxth	r7, r7
 8015e34:	b23b      	sxth	r3, r7
 8015e36:	429a      	cmp	r2, r3
 8015e38:	bfa8      	it	ge
 8015e3a:	4657      	movge	r7, sl
 8015e3c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8015e40:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8015e44:	6823      	ldr	r3, [r4, #0]
 8015e46:	bf08      	it	eq
 8015e48:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 8015e4c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8015e4e:	bf18      	it	ne
 8015e50:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 8015e54:	4620      	mov	r0, r4
 8015e56:	4798      	blx	r3
 8015e58:	444f      	add	r7, r9
 8015e5a:	fa1f f987 	uxth.w	r9, r7
 8015e5e:	2801      	cmp	r0, #1
 8015e60:	fa0f f789 	sxth.w	r7, r9
 8015e64:	b2b3      	uxth	r3, r6
 8015e66:	f000 80e1 	beq.w	801602c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 8015e6a:	2802      	cmp	r0, #2
 8015e6c:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 8015e70:	f000 80e2 	beq.w	8016038 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 8015e74:	7aea      	ldrb	r2, [r5, #11]
 8015e76:	7b2d      	ldrb	r5, [r5, #12]
 8015e78:	b236      	sxth	r6, r6
 8015e7a:	1ab6      	subs	r6, r6, r2
 8015e7c:	442a      	add	r2, r5
 8015e7e:	4413      	add	r3, r2
 8015e80:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 8015e84:	fa1f fa86 	uxth.w	sl, r6
 8015e88:	b29b      	uxth	r3, r3
 8015e8a:	2a02      	cmp	r2, #2
 8015e8c:	fa0f fb8a 	sxth.w	fp, sl
 8015e90:	b21e      	sxth	r6, r3
 8015e92:	f000 80d5 	beq.w	8016040 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 8015e96:	2a03      	cmp	r2, #3
 8015e98:	f000 80dd 	beq.w	8016056 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 8015e9c:	2a01      	cmp	r2, #1
 8015e9e:	f040 80e5 	bne.w	801606c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 8015ea2:	8925      	ldrh	r5, [r4, #8]
 8015ea4:	4633      	mov	r3, r6
 8015ea6:	eba5 0909 	sub.w	r9, r5, r9
 8015eaa:	463e      	mov	r6, r7
 8015eac:	465d      	mov	r5, fp
 8015eae:	461f      	mov	r7, r3
 8015eb0:	fa0f fb89 	sxth.w	fp, r9
 8015eb4:	4b5c      	ldr	r3, [pc, #368]	; (8016028 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8015eb6:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8015eb8:	6818      	ldr	r0, [r3, #0]
 8015eba:	f7fa f8d5 	bl	8010068 <_ZNK8touchgfx5Texts7getTextEt>
 8015ebe:	f8a8 b000 	strh.w	fp, [r8]
 8015ec2:	f8a8 5002 	strh.w	r5, [r8, #2]
 8015ec6:	f8a8 6004 	strh.w	r6, [r8, #4]
 8015eca:	f8a8 7006 	strh.w	r7, [r8, #6]
 8015ece:	f8c8 0008 	str.w	r0, [r8, #8]
 8015ed2:	e737      	b.n	8015d44 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 8015ed4:	f005 f808 	bl	801aee8 <_ZN8touchgfx12TextProviderC1Ev>
 8015ed8:	682b      	ldr	r3, [r5, #0]
 8015eda:	4628      	mov	r0, r5
 8015edc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015ede:	4798      	blx	r3
 8015ee0:	682b      	ldr	r3, [r5, #0]
 8015ee2:	4607      	mov	r7, r0
 8015ee4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015ee6:	4628      	mov	r0, r5
 8015ee8:	4798      	blx	r3
 8015eea:	6823      	ldr	r3, [r4, #0]
 8015eec:	4683      	mov	fp, r0
 8015eee:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8015ef0:	4620      	mov	r0, r4
 8015ef2:	4798      	blx	r3
 8015ef4:	6822      	ldr	r2, [r4, #0]
 8015ef6:	9005      	str	r0, [sp, #20]
 8015ef8:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 8015efc:	4620      	mov	r0, r4
 8015efe:	4790      	blx	r2
 8015f00:	9b05      	ldr	r3, [sp, #20]
 8015f02:	9001      	str	r0, [sp, #4]
 8015f04:	463a      	mov	r2, r7
 8015f06:	4649      	mov	r1, r9
 8015f08:	9300      	str	r3, [sp, #0]
 8015f0a:	a80f      	add	r0, sp, #60	; 0x3c
 8015f0c:	465b      	mov	r3, fp
 8015f0e:	f005 f85b 	bl	801afc8 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8015f12:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8015f16:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 8015f1a:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8015f1c:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 8015f20:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8015f24:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8015f28:	bf0a      	itet	eq
 8015f2a:	464a      	moveq	r2, r9
 8015f2c:	461a      	movne	r2, r3
 8015f2e:	4699      	moveq	r9, r3
 8015f30:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 8015f34:	1ad2      	subs	r2, r2, r3
 8015f36:	6833      	ldr	r3, [r6, #0]
 8015f38:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 8015f3c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8015f40:	af0f      	add	r7, sp, #60	; 0x3c
 8015f42:	7859      	ldrb	r1, [r3, #1]
 8015f44:	9707      	str	r7, [sp, #28]
 8015f46:	2300      	movs	r3, #0
 8015f48:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8015f4c:	f8ad 3018 	strh.w	r3, [sp, #24]
 8015f50:	f88d 1020 	strb.w	r1, [sp, #32]
 8015f54:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8015f58:	9509      	str	r5, [sp, #36]	; 0x24
 8015f5a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8015f5e:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8015f62:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8015f66:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8015f6a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8015f6e:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8015f72:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8015f76:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8015f7a:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8015f7e:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 8015f82:	b350      	cbz	r0, 8015fda <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8015f84:	682b      	ldr	r3, [r5, #0]
 8015f86:	4628      	mov	r0, r5
 8015f88:	695b      	ldr	r3, [r3, #20]
 8015f8a:	4798      	blx	r3
 8015f8c:	4607      	mov	r7, r0
 8015f8e:	b320      	cbz	r0, 8015fda <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8015f90:	9809      	ldr	r0, [sp, #36]	; 0x24
 8015f92:	6803      	ldr	r3, [r0, #0]
 8015f94:	4639      	mov	r1, r7
 8015f96:	68db      	ldr	r3, [r3, #12]
 8015f98:	4798      	blx	r3
 8015f9a:	4606      	mov	r6, r0
 8015f9c:	b1e8      	cbz	r0, 8015fda <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8015f9e:	7b43      	ldrb	r3, [r0, #13]
 8015fa0:	7a82      	ldrb	r2, [r0, #10]
 8015fa2:	005b      	lsls	r3, r3, #1
 8015fa4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8015fa8:	4313      	orrs	r3, r2
 8015faa:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8015fae:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 8015fb2:	2b06      	cmp	r3, #6
 8015fb4:	d111      	bne.n	8015fda <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8015fb6:	9809      	ldr	r0, [sp, #36]	; 0x24
 8015fb8:	6803      	ldr	r3, [r0, #0]
 8015fba:	4632      	mov	r2, r6
 8015fbc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015fbe:	4639      	mov	r1, r7
 8015fc0:	4798      	blx	r3
 8015fc2:	7b73      	ldrb	r3, [r6, #13]
 8015fc4:	005b      	lsls	r3, r3, #1
 8015fc6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8015fca:	7ab3      	ldrb	r3, [r6, #10]
 8015fcc:	4313      	orrs	r3, r2
 8015fce:	4418      	add	r0, r3
 8015fd0:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8015fd4:	4418      	add	r0, r3
 8015fd6:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 8015fda:	2600      	movs	r6, #0
 8015fdc:	4637      	mov	r7, r6
 8015fde:	a806      	add	r0, sp, #24
 8015fe0:	f002 fbba 	bl	8018758 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8015fe4:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 8015fe8:	9b03      	ldr	r3, [sp, #12]
 8015fea:	4286      	cmp	r6, r0
 8015fec:	eba9 0903 	sub.w	r9, r9, r3
 8015ff0:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8015ff4:	bfb8      	it	lt
 8015ff6:	4606      	movlt	r6, r0
 8015ff8:	3701      	adds	r7, #1
 8015ffa:	b236      	sxth	r6, r6
 8015ffc:	b2bf      	uxth	r7, r7
 8015ffe:	fa0f f989 	sxth.w	r9, r9
 8016002:	2b00      	cmp	r3, #0
 8016004:	f43f af0d 	beq.w	8015e22 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8016008:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 801600c:	2b00      	cmp	r3, #0
 801600e:	f47f af08 	bne.w	8015e22 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8016012:	7a2b      	ldrb	r3, [r5, #8]
 8016014:	444b      	add	r3, r9
 8016016:	2b00      	cmp	r3, #0
 8016018:	dce1      	bgt.n	8015fde <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 801601a:	e702      	b.n	8015e22 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 801601c:	200022a8 	.word	0x200022a8
 8016020:	200022a4 	.word	0x200022a4
 8016024:	200022ac 	.word	0x200022ac
 8016028:	200022b0 	.word	0x200022b0
 801602c:	ebaa 0606 	sub.w	r6, sl, r6
 8016030:	2002      	movs	r0, #2
 8016032:	fb96 f6f0 	sdiv	r6, r6, r0
 8016036:	e71d      	b.n	8015e74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8016038:	441e      	add	r6, r3
 801603a:	ebaa 0606 	sub.w	r6, sl, r6
 801603e:	e719      	b.n	8015e74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8016040:	8925      	ldrh	r5, [r4, #8]
 8016042:	1aed      	subs	r5, r5, r3
 8016044:	eba5 050a 	sub.w	r5, r5, sl
 8016048:	fa0f fb85 	sxth.w	fp, r5
 801604c:	8965      	ldrh	r5, [r4, #10]
 801604e:	eba5 0509 	sub.w	r5, r5, r9
 8016052:	b22d      	sxth	r5, r5
 8016054:	e72e      	b.n	8015eb4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8016056:	8965      	ldrh	r5, [r4, #10]
 8016058:	1aed      	subs	r5, r5, r3
 801605a:	eba5 050a 	sub.w	r5, r5, sl
 801605e:	4633      	mov	r3, r6
 8016060:	b22d      	sxth	r5, r5
 8016062:	463e      	mov	r6, r7
 8016064:	f04f 0b00 	mov.w	fp, #0
 8016068:	461f      	mov	r7, r3
 801606a:	e723      	b.n	8015eb4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 801606c:	2500      	movs	r5, #0
 801606e:	e721      	b.n	8015eb4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

08016070 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8016070:	b513      	push	{r0, r1, r4, lr}
 8016072:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 8016076:	4604      	mov	r4, r0
 8016078:	b1fb      	cbz	r3, 80160ba <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801607a:	4b16      	ldr	r3, [pc, #88]	; (80160d4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 801607c:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 801607e:	881b      	ldrh	r3, [r3, #0]
 8016080:	428b      	cmp	r3, r1
 8016082:	d91a      	bls.n	80160ba <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8016084:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8016088:	2b00      	cmp	r3, #0
 801608a:	dd16      	ble.n	80160ba <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801608c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8016090:	2b00      	cmp	r3, #0
 8016092:	dd12      	ble.n	80160ba <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8016094:	4b10      	ldr	r3, [pc, #64]	; (80160d8 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 8016096:	6818      	ldr	r0, [r3, #0]
 8016098:	f7f9 ffe6 	bl	8010068 <_ZNK8touchgfx5Texts7getTextEt>
 801609c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 80160a0:	6822      	ldr	r2, [r4, #0]
 80160a2:	2b00      	cmp	r3, #0
 80160a4:	db06      	blt.n	80160b4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 80160a6:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 80160aa:	2b00      	cmp	r3, #0
 80160ac:	db02      	blt.n	80160b4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 80160ae:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80160b0:	4298      	cmp	r0, r3
 80160b2:	d004      	beq.n	80160be <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 80160b4:	6953      	ldr	r3, [r2, #20]
 80160b6:	4620      	mov	r0, r4
 80160b8:	4798      	blx	r3
 80160ba:	b002      	add	sp, #8
 80160bc:	bd10      	pop	{r4, pc}
 80160be:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 80160c2:	c903      	ldmia	r1, {r0, r1}
 80160c4:	466b      	mov	r3, sp
 80160c6:	e883 0003 	stmia.w	r3, {r0, r1}
 80160ca:	6912      	ldr	r2, [r2, #16]
 80160cc:	4619      	mov	r1, r3
 80160ce:	4620      	mov	r0, r4
 80160d0:	4790      	blx	r2
 80160d2:	e7f2      	b.n	80160ba <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80160d4:	200022a8 	.word	0x200022a8
 80160d8:	200022b0 	.word	0x200022b0

080160dc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 80160dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80160e0:	4b44      	ldr	r3, [pc, #272]	; (80161f4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 80160e2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80160e4:	881b      	ldrh	r3, [r3, #0]
 80160e6:	4293      	cmp	r3, r2
 80160e8:	b08e      	sub	sp, #56	; 0x38
 80160ea:	4604      	mov	r4, r0
 80160ec:	d97e      	bls.n	80161ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80160ee:	6808      	ldr	r0, [r1, #0]
 80160f0:	4d41      	ldr	r5, [pc, #260]	; (80161f8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 80160f2:	6849      	ldr	r1, [r1, #4]
 80160f4:	ab05      	add	r3, sp, #20
 80160f6:	c303      	stmia	r3!, {r0, r1}
 80160f8:	4611      	mov	r1, r2
 80160fa:	6828      	ldr	r0, [r5, #0]
 80160fc:	f7f9 ffb4 	bl	8010068 <_ZNK8touchgfx5Texts7getTextEt>
 8016100:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8016104:	2b00      	cmp	r3, #0
 8016106:	db11      	blt.n	801612c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8016108:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 801610c:	2b00      	cmp	r3, #0
 801610e:	db0d      	blt.n	801612c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8016110:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8016112:	4298      	cmp	r0, r3
 8016114:	d10a      	bne.n	801612c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8016116:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 801611a:	e892 0003 	ldmia.w	r2, {r0, r1}
 801611e:	ab09      	add	r3, sp, #36	; 0x24
 8016120:	e883 0003 	stmia.w	r3, {r0, r1}
 8016124:	4619      	mov	r1, r3
 8016126:	a805      	add	r0, sp, #20
 8016128:	f7fd f8c4 	bl	80132b4 <_ZN8touchgfx4RectaNERKS0_>
 801612c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8016130:	2b00      	cmp	r3, #0
 8016132:	dd5b      	ble.n	80161ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8016134:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8016138:	2b00      	cmp	r3, #0
 801613a:	dd57      	ble.n	80161ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801613c:	4f2f      	ldr	r7, [pc, #188]	; (80161fc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 801613e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8016140:	683b      	ldr	r3, [r7, #0]
 8016142:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8016146:	4b2e      	ldr	r3, [pc, #184]	; (8016200 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8016148:	681b      	ldr	r3, [r3, #0]
 801614a:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801614e:	2e00      	cmp	r6, #0
 8016150:	d04c      	beq.n	80161ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8016152:	6823      	ldr	r3, [r4, #0]
 8016154:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 8016158:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 801615a:	4620      	mov	r0, r4
 801615c:	4798      	blx	r3
 801615e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8016160:	683b      	ldr	r3, [r7, #0]
 8016162:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 8016166:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 801616a:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 801616e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8016170:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8016174:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8016178:	785b      	ldrb	r3, [r3, #1]
 801617a:	9609      	str	r6, [sp, #36]	; 0x24
 801617c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8016180:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8016184:	4b1f      	ldr	r3, [pc, #124]	; (8016204 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 8016186:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 801618a:	681b      	ldr	r3, [r3, #0]
 801618c:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 8016190:	910b      	str	r1, [sp, #44]	; 0x2c
 8016192:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 8016196:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 801619a:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 801619e:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 80161a2:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80161a6:	b10a      	cbz	r2, 80161ac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 80161a8:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 80161aa:	b906      	cbnz	r6, 80161ae <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 80161ac:	689e      	ldr	r6, [r3, #8]
 80161ae:	af07      	add	r7, sp, #28
 80161b0:	4621      	mov	r1, r4
 80161b2:	4638      	mov	r0, r7
 80161b4:	f004 f9d4 	bl	801a560 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80161b8:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80161ba:	6828      	ldr	r0, [r5, #0]
 80161bc:	f7f9 ff54 	bl	8010068 <_ZNK8touchgfx5Texts7getTextEt>
 80161c0:	6823      	ldr	r3, [r4, #0]
 80161c2:	4605      	mov	r5, r0
 80161c4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80161c6:	4620      	mov	r0, r4
 80161c8:	4798      	blx	r3
 80161ca:	6823      	ldr	r3, [r4, #0]
 80161cc:	4680      	mov	r8, r0
 80161ce:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80161d2:	4620      	mov	r0, r4
 80161d4:	4798      	blx	r3
 80161d6:	e9cd 8002 	strd	r8, r0, [sp, #8]
 80161da:	ab09      	add	r3, sp, #36	; 0x24
 80161dc:	9300      	str	r3, [sp, #0]
 80161de:	9501      	str	r5, [sp, #4]
 80161e0:	ab05      	add	r3, sp, #20
 80161e2:	e897 0006 	ldmia.w	r7, {r1, r2}
 80161e6:	4630      	mov	r0, r6
 80161e8:	f7f9 fecf 	bl	800ff8a <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80161ec:	b00e      	add	sp, #56	; 0x38
 80161ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80161f2:	bf00      	nop
 80161f4:	200022a8 	.word	0x200022a8
 80161f8:	200022b0 	.word	0x200022b0
 80161fc:	200022a4 	.word	0x200022a4
 8016200:	200022ac 	.word	0x200022ac
 8016204:	2000224c 	.word	0x2000224c

08016208 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8016208:	b538      	push	{r3, r4, r5, lr}
 801620a:	4b0e      	ldr	r3, [pc, #56]	; (8016244 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 801620c:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 801620e:	881b      	ldrh	r3, [r3, #0]
 8016210:	429a      	cmp	r2, r3
 8016212:	4604      	mov	r4, r0
 8016214:	d214      	bcs.n	8016240 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 8016216:	6803      	ldr	r3, [r0, #0]
 8016218:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 801621a:	4798      	blx	r3
 801621c:	6823      	ldr	r3, [r4, #0]
 801621e:	4605      	mov	r5, r0
 8016220:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8016222:	4620      	mov	r0, r4
 8016224:	4798      	blx	r3
 8016226:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801622a:	b22d      	sxth	r5, r5
 801622c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8016230:	4601      	mov	r1, r0
 8016232:	bf06      	itte	eq
 8016234:	4602      	moveq	r2, r0
 8016236:	4629      	moveq	r1, r5
 8016238:	462a      	movne	r2, r5
 801623a:	4620      	mov	r0, r4
 801623c:	f7f3 fe31 	bl	8009ea2 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8016240:	bd38      	pop	{r3, r4, r5, pc}
 8016242:	bf00      	nop
 8016244:	200022a8 	.word	0x200022a8

08016248 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8016248:	b530      	push	{r4, r5, lr}
 801624a:	888b      	ldrh	r3, [r1, #4]
 801624c:	8583      	strh	r3, [r0, #44]	; 0x2c
 801624e:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8016252:	b085      	sub	sp, #20
 8016254:	4604      	mov	r4, r0
 8016256:	b923      	cbnz	r3, 8016262 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8016258:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 801625c:	b90b      	cbnz	r3, 8016262 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 801625e:	f7ff ffd3 	bl	8016208 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8016262:	6823      	ldr	r3, [r4, #0]
 8016264:	466d      	mov	r5, sp
 8016266:	4621      	mov	r1, r4
 8016268:	4628      	mov	r0, r5
 801626a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 801626e:	4798      	blx	r3
 8016270:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8016274:	343c      	adds	r4, #60	; 0x3c
 8016276:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 801627a:	b005      	add	sp, #20
 801627c:	bd30      	pop	{r4, r5, pc}

0801627e <_ZNK8touchgfx3Box12getSolidRectEv>:
 801627e:	2300      	movs	r3, #0
 8016280:	8083      	strh	r3, [r0, #4]
 8016282:	80c3      	strh	r3, [r0, #6]
 8016284:	8003      	strh	r3, [r0, #0]
 8016286:	8043      	strh	r3, [r0, #2]
 8016288:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 801628c:	2bff      	cmp	r3, #255	; 0xff
 801628e:	bf01      	itttt	eq
 8016290:	890b      	ldrheq	r3, [r1, #8]
 8016292:	8083      	strheq	r3, [r0, #4]
 8016294:	894b      	ldrheq	r3, [r1, #10]
 8016296:	80c3      	strheq	r3, [r0, #6]
 8016298:	4770      	bx	lr
	...

0801629c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 801629c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801629e:	4604      	mov	r4, r0
 80162a0:	6808      	ldr	r0, [r1, #0]
 80162a2:	6849      	ldr	r1, [r1, #4]
 80162a4:	466b      	mov	r3, sp
 80162a6:	c303      	stmia	r3!, {r0, r1}
 80162a8:	6823      	ldr	r3, [r4, #0]
 80162aa:	4669      	mov	r1, sp
 80162ac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80162ae:	4620      	mov	r0, r4
 80162b0:	4798      	blx	r3
 80162b2:	4b08      	ldr	r3, [pc, #32]	; (80162d4 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 80162b4:	681b      	ldr	r3, [r3, #0]
 80162b6:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80162ba:	b10a      	cbz	r2, 80162c0 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 80162bc:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80162be:	b900      	cbnz	r0, 80162c2 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 80162c0:	6898      	ldr	r0, [r3, #8]
 80162c2:	6803      	ldr	r3, [r0, #0]
 80162c4:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80162c6:	6a1d      	ldr	r5, [r3, #32]
 80162c8:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 80162cc:	4669      	mov	r1, sp
 80162ce:	47a8      	blx	r5
 80162d0:	b003      	add	sp, #12
 80162d2:	bd30      	pop	{r4, r5, pc}
 80162d4:	2000224c 	.word	0x2000224c

080162d8 <_ZNK8touchgfx3Box17invalidateContentEv>:
 80162d8:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 80162dc:	b12a      	cbz	r2, 80162ea <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 80162de:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80162e2:	b112      	cbz	r2, 80162ea <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 80162e4:	6803      	ldr	r3, [r0, #0]
 80162e6:	695b      	ldr	r3, [r3, #20]
 80162e8:	4718      	bx	r3
 80162ea:	4770      	bx	lr

080162ec <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 80162ec:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 80162f0:	600b      	str	r3, [r1, #0]
 80162f2:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 80162f6:	6013      	str	r3, [r2, #0]
 80162f8:	4770      	bx	lr

080162fa <_ZN8touchgfx5Gauge8setWidthEs>:
 80162fa:	8101      	strh	r1, [r0, #8]
 80162fc:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 8016300:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 8016304:	4770      	bx	lr

08016306 <_ZN8touchgfx5Gauge9setHeightEs>:
 8016306:	8141      	strh	r1, [r0, #10]
 8016308:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 801630c:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 8016310:	4770      	bx	lr

08016312 <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 8016312:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 8016316:	4770      	bx	lr

08016318 <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 8016318:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 801631c:	4770      	bx	lr

0801631e <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 801631e:	4770      	bx	lr

08016320 <_ZN8touchgfx5Gauge8setAlphaEh>:
 8016320:	b538      	push	{r3, r4, r5, lr}
 8016322:	4604      	mov	r4, r0
 8016324:	460d      	mov	r5, r1
 8016326:	f7fc fb36 	bl	8012996 <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 801632a:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 801632e:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 8016332:	bd38      	pop	{r3, r4, r5, pc}

08016334 <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 8016334:	b510      	push	{r4, lr}
 8016336:	6803      	ldr	r3, [r0, #0]
 8016338:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 801633c:	4604      	mov	r4, r0
 801633e:	4798      	blx	r3
 8016340:	b170      	cbz	r0, 8016360 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8016342:	6823      	ldr	r3, [r4, #0]
 8016344:	4620      	mov	r0, r4
 8016346:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 801634a:	4798      	blx	r3
 801634c:	b140      	cbz	r0, 8016360 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 801634e:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8016352:	b12b      	cbz	r3, 8016360 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8016354:	6823      	ldr	r3, [r4, #0]
 8016356:	4620      	mov	r0, r4
 8016358:	695b      	ldr	r3, [r3, #20]
 801635a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801635e:	4718      	bx	r3
 8016360:	bd10      	pop	{r4, pc}
	...

08016364 <_ZN8touchgfx5GaugeC1Ev>:
 8016364:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8016366:	4604      	mov	r4, r0
 8016368:	4626      	mov	r6, r4
 801636a:	f7fc fc07 	bl	8012b7c <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 801636e:	4b18      	ldr	r3, [pc, #96]	; (80163d0 <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 8016370:	f846 3bb4 	str.w	r3, [r6], #180
 8016374:	a902      	add	r1, sp, #8
 8016376:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801637a:	f821 3d04 	strh.w	r3, [r1, #-4]!
 801637e:	4630      	mov	r0, r6
 8016380:	f7fe fe90 	bl	80150a4 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 8016384:	2500      	movs	r5, #0
 8016386:	2301      	movs	r3, #1
 8016388:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 801638c:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 8016390:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 8016394:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 8016398:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 801639c:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 80163a0:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 80163a4:	4638      	mov	r0, r7
 80163a6:	f7fd fff9 	bl	801439c <_ZN8touchgfx6CircleC1Ev>
 80163aa:	f104 0158 	add.w	r1, r4, #88	; 0x58
 80163ae:	4620      	mov	r0, r4
 80163b0:	f7fc fe3b 	bl	801302a <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 80163b4:	4639      	mov	r1, r7
 80163b6:	4620      	mov	r0, r4
 80163b8:	f7fc fdfe 	bl	8012fb8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80163bc:	4620      	mov	r0, r4
 80163be:	4631      	mov	r1, r6
 80163c0:	f7fc fdfa 	bl	8012fb8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80163c4:	4620      	mov	r0, r4
 80163c6:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 80163ca:	b003      	add	sp, #12
 80163cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80163ce:	bf00      	nop
 80163d0:	0802f5c8 	.word	0x0802f5c8

080163d4 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 80163d4:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 80163d8:	4770      	bx	lr

080163da <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 80163da:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 80163de:	4770      	bx	lr

080163e0 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 80163e0:	b538      	push	{r3, r4, r5, lr}
 80163e2:	8902      	ldrh	r2, [r0, #8]
 80163e4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80163e8:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 80163ec:	4604      	mov	r4, r0
 80163ee:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 80163f2:	2200      	movs	r2, #0
 80163f4:	4611      	mov	r1, r2
 80163f6:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 80163fa:	4628      	mov	r0, r5
 80163fc:	f7f3 fcf5 	bl	8009dea <_ZN8touchgfx8Drawable5setXYEss>
 8016400:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 8016404:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8016408:	1a9b      	subs	r3, r3, r2
 801640a:	ee07 3a90 	vmov	s15, r3
 801640e:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 8016412:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 8016416:	1a9b      	subs	r3, r3, r2
 8016418:	ee07 3a10 	vmov	s14, r3
 801641c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016420:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8016424:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 8016428:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 801642c:	4628      	mov	r0, r5
 801642e:	f7fe fe85 	bl	801513c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8016432:	4b16      	ldr	r3, [pc, #88]	; (801648c <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 8016434:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 8016438:	4628      	mov	r0, r5
 801643a:	f7fe fe7f 	bl	801513c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 801643e:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8016442:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 8016446:	ee07 3a90 	vmov	s15, r3
 801644a:	ee07 2a10 	vmov	s14, r2
 801644e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016452:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8016456:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 801645a:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 801645e:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 8016462:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8016466:	4628      	mov	r0, r5
 8016468:	f7fe fe68 	bl	801513c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 801646c:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 8016470:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 8016474:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8016478:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 801647c:	4628      	mov	r0, r5
 801647e:	f7fe fe5d 	bl	801513c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8016482:	2301      	movs	r3, #1
 8016484:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8016488:	bd38      	pop	{r3, r4, r5, pc}
 801648a:	bf00      	nop
 801648c:	43960000 	.word	0x43960000

08016490 <_ZN8touchgfx5Gauge9setNeedleEtss>:
 8016490:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8016492:	4604      	mov	r4, r0
 8016494:	a802      	add	r0, sp, #8
 8016496:	4616      	mov	r6, r2
 8016498:	f820 1d04 	strh.w	r1, [r0, #-4]!
 801649c:	461d      	mov	r5, r3
 801649e:	4601      	mov	r1, r0
 80164a0:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 80164a4:	f7fe ffa0 	bl	80153e8 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 80164a8:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 80164ac:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 80164b0:	4620      	mov	r0, r4
 80164b2:	f7ff ff95 	bl	80163e0 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 80164b6:	b002      	add	sp, #8
 80164b8:	bd70      	pop	{r4, r5, r6, pc}

080164ba <_ZN8touchgfx5Gauge9setCenterEii>:
 80164ba:	b570      	push	{r4, r5, r6, lr}
 80164bc:	4606      	mov	r6, r0
 80164be:	460d      	mov	r5, r1
 80164c0:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 80164c4:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 80164c8:	4614      	mov	r4, r2
 80164ca:	f7ff ff89 	bl	80163e0 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 80164ce:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 80164d2:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 80164d6:	1aa4      	subs	r4, r4, r2
 80164d8:	1a6d      	subs	r5, r5, r1
 80164da:	0164      	lsls	r4, r4, #5
 80164dc:	016d      	lsls	r5, r5, #5
 80164de:	3410      	adds	r4, #16
 80164e0:	3510      	adds	r5, #16
 80164e2:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 80164e6:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 80164ea:	bd70      	pop	{r4, r5, r6, pc}

080164ec <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 80164ec:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80164ee:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 80164f0:	0149      	lsls	r1, r1, #5
 80164f2:	4299      	cmp	r1, r3
 80164f4:	4604      	mov	r4, r0
 80164f6:	9101      	str	r1, [sp, #4]
 80164f8:	d00b      	beq.n	8016512 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 80164fa:	4601      	mov	r1, r0
 80164fc:	aa01      	add	r2, sp, #4
 80164fe:	a802      	add	r0, sp, #8
 8016500:	f7fe f94a 	bl	8014798 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 8016504:	9b01      	ldr	r3, [sp, #4]
 8016506:	63e3      	str	r3, [r4, #60]	; 0x3c
 8016508:	6823      	ldr	r3, [r4, #0]
 801650a:	a902      	add	r1, sp, #8
 801650c:	691b      	ldr	r3, [r3, #16]
 801650e:	4620      	mov	r0, r4
 8016510:	4798      	blx	r3
 8016512:	b004      	add	sp, #16
 8016514:	bd10      	pop	{r4, pc}
	...

08016518 <_ZN8touchgfx5Gauge8setValueEi>:
 8016518:	b570      	push	{r4, r5, r6, lr}
 801651a:	4604      	mov	r4, r0
 801651c:	f7fc fa86 	bl	8012a2c <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 8016520:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8016524:	429a      	cmp	r2, r3
 8016526:	bfac      	ite	ge
 8016528:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 801652c:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 8016530:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8016534:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 8016538:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 801653c:	1ac9      	subs	r1, r1, r3
 801653e:	2900      	cmp	r1, #0
 8016540:	bfb8      	it	lt
 8016542:	4249      	neglt	r1, r1
 8016544:	b289      	uxth	r1, r1
 8016546:	4620      	mov	r0, r4
 8016548:	f7fc fa92 	bl	8012a70 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 801654c:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8016550:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8016554:	eddf 6a19 	vldr	s13, [pc, #100]	; 80165bc <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 8016558:	ed9f 7a19 	vldr	s14, [pc, #100]	; 80165c0 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 801655c:	429a      	cmp	r2, r3
 801655e:	4605      	mov	r5, r0
 8016560:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 8016564:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8016568:	da15      	bge.n	8016596 <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 801656a:	1b5b      	subs	r3, r3, r5
 801656c:	ee07 3a90 	vmov	s15, r3
 8016570:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016574:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8016578:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 801657c:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8016580:	ee21 1a07 	vmul.f32	s2, s2, s14
 8016584:	f7fe fd50 	bl	8015028 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8016588:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 801658c:	1b49      	subs	r1, r1, r5
 801658e:	4630      	mov	r0, r6
 8016590:	f7ff ffac 	bl	80164ec <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 8016594:	bd70      	pop	{r4, r5, r6, pc}
 8016596:	442b      	add	r3, r5
 8016598:	ee07 3a90 	vmov	s15, r3
 801659c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80165a0:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 80165a4:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 80165a8:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 80165ac:	ee21 1a07 	vmul.f32	s2, s2, s14
 80165b0:	f7fe fd3a 	bl	8015028 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 80165b4:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 80165b8:	4429      	add	r1, r5
 80165ba:	e7e8      	b.n	801658e <_ZN8touchgfx5Gauge8setValueEi+0x76>
 80165bc:	43340000 	.word	0x43340000
 80165c0:	40490fdb 	.word	0x40490fdb

080165c4 <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 80165c4:	b510      	push	{r4, lr}
 80165c6:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 80165ca:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 80165ce:	0149      	lsls	r1, r1, #5
 80165d0:	0152      	lsls	r2, r2, #5
 80165d2:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 80165d6:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 80165da:	4604      	mov	r4, r0
 80165dc:	f7fc f9d8 	bl	8012990 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 80165e0:	4601      	mov	r1, r0
 80165e2:	4620      	mov	r0, r4
 80165e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80165e8:	f7ff bf96 	b.w	8016518 <_ZN8touchgfx5Gauge8setValueEi>

080165ec <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 80165ec:	b570      	push	{r4, r5, r6, lr}
 80165ee:	880b      	ldrh	r3, [r1, #0]
 80165f0:	85c3      	strh	r3, [r0, #46]	; 0x2e
 80165f2:	4605      	mov	r5, r0
 80165f4:	8813      	ldrh	r3, [r2, #0]
 80165f6:	f825 3f30 	strh.w	r3, [r5, #48]!
 80165fa:	4604      	mov	r4, r0
 80165fc:	4628      	mov	r0, r5
 80165fe:	f006 f955 	bl	801c8ac <_ZNK8touchgfx6Bitmap8getWidthEv>
 8016602:	4606      	mov	r6, r0
 8016604:	4628      	mov	r0, r5
 8016606:	f006 f985 	bl	801c914 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801660a:	6823      	ldr	r3, [r4, #0]
 801660c:	4605      	mov	r5, r0
 801660e:	4631      	mov	r1, r6
 8016610:	4620      	mov	r0, r4
 8016612:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016614:	4798      	blx	r3
 8016616:	6823      	ldr	r3, [r4, #0]
 8016618:	4629      	mov	r1, r5
 801661a:	4620      	mov	r0, r4
 801661c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801661e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016622:	4718      	bx	r3

08016624 <_ZNK8touchgfx6Button12getSolidRectEv>:
 8016624:	b510      	push	{r4, lr}
 8016626:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 801662a:	2bff      	cmp	r3, #255	; 0xff
 801662c:	4604      	mov	r4, r0
 801662e:	d006      	beq.n	801663e <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8016630:	2300      	movs	r3, #0
 8016632:	8003      	strh	r3, [r0, #0]
 8016634:	8043      	strh	r3, [r0, #2]
 8016636:	8083      	strh	r3, [r0, #4]
 8016638:	80c3      	strh	r3, [r0, #6]
 801663a:	4620      	mov	r0, r4
 801663c:	bd10      	pop	{r4, pc}
 801663e:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8016642:	b11b      	cbz	r3, 801664c <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8016644:	3130      	adds	r1, #48	; 0x30
 8016646:	f006 f999 	bl	801c97c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801664a:	e7f6      	b.n	801663a <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 801664c:	312e      	adds	r1, #46	; 0x2e
 801664e:	e7fa      	b.n	8016646 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

08016650 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8016650:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016654:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8016658:	b08a      	sub	sp, #40	; 0x28
 801665a:	4604      	mov	r4, r0
 801665c:	4688      	mov	r8, r1
 801665e:	2b00      	cmp	r3, #0
 8016660:	d066      	beq.n	8016730 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 8016662:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8016664:	f8ad 3014 	strh.w	r3, [sp, #20]
 8016668:	a805      	add	r0, sp, #20
 801666a:	f006 f91f 	bl	801c8ac <_ZNK8touchgfx6Bitmap8getWidthEv>
 801666e:	4607      	mov	r7, r0
 8016670:	a805      	add	r0, sp, #20
 8016672:	f006 f94f 	bl	801c914 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8016676:	f9b8 6000 	ldrsh.w	r6, [r8]
 801667a:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 801667e:	4432      	add	r2, r6
 8016680:	b292      	uxth	r2, r2
 8016682:	2300      	movs	r3, #0
 8016684:	fa0f fc82 	sxth.w	ip, r2
 8016688:	459c      	cmp	ip, r3
 801668a:	9306      	str	r3, [sp, #24]
 801668c:	dd52      	ble.n	8016734 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801668e:	42b7      	cmp	r7, r6
 8016690:	dd50      	ble.n	8016734 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8016692:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 8016696:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 801669a:	442b      	add	r3, r5
 801669c:	b29b      	uxth	r3, r3
 801669e:	b219      	sxth	r1, r3
 80166a0:	2900      	cmp	r1, #0
 80166a2:	dd47      	ble.n	8016734 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80166a4:	42a8      	cmp	r0, r5
 80166a6:	dd45      	ble.n	8016734 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80166a8:	4567      	cmp	r7, ip
 80166aa:	bfb8      	it	lt
 80166ac:	b2ba      	uxthlt	r2, r7
 80166ae:	4288      	cmp	r0, r1
 80166b0:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 80166b4:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80166b8:	bfb8      	it	lt
 80166ba:	b283      	uxthlt	r3, r0
 80166bc:	1b92      	subs	r2, r2, r6
 80166be:	1b5b      	subs	r3, r3, r5
 80166c0:	f8ad 201c 	strh.w	r2, [sp, #28]
 80166c4:	f8ad 301e 	strh.w	r3, [sp, #30]
 80166c8:	f8ad 6018 	strh.w	r6, [sp, #24]
 80166cc:	f8ad 501a 	strh.w	r5, [sp, #26]
 80166d0:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80166d4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80166d8:	429a      	cmp	r2, r3
 80166da:	d026      	beq.n	801672a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 80166dc:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80166e0:	2b00      	cmp	r3, #0
 80166e2:	dd22      	ble.n	801672a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 80166e4:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 80166e8:	2b00      	cmp	r3, #0
 80166ea:	dd1e      	ble.n	801672a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 80166ec:	2300      	movs	r3, #0
 80166ee:	e9cd 3308 	strd	r3, r3, [sp, #32]
 80166f2:	6823      	ldr	r3, [r4, #0]
 80166f4:	a908      	add	r1, sp, #32
 80166f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80166f8:	4620      	mov	r0, r4
 80166fa:	4798      	blx	r3
 80166fc:	4b0f      	ldr	r3, [pc, #60]	; (801673c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 80166fe:	681b      	ldr	r3, [r3, #0]
 8016700:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8016704:	b10a      	cbz	r2, 801670a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 8016706:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8016708:	b900      	cbnz	r0, 801670c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 801670a:	6898      	ldr	r0, [r3, #8]
 801670c:	6801      	ldr	r1, [r0, #0]
 801670e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8016712:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8016716:	2501      	movs	r5, #1
 8016718:	9502      	str	r5, [sp, #8]
 801671a:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 801671e:	9401      	str	r4, [sp, #4]
 8016720:	ac06      	add	r4, sp, #24
 8016722:	9400      	str	r4, [sp, #0]
 8016724:	688c      	ldr	r4, [r1, #8]
 8016726:	a905      	add	r1, sp, #20
 8016728:	47a0      	blx	r4
 801672a:	b00a      	add	sp, #40	; 0x28
 801672c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016730:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8016732:	e797      	b.n	8016664 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8016734:	2300      	movs	r3, #0
 8016736:	9307      	str	r3, [sp, #28]
 8016738:	e7ca      	b.n	80166d0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 801673a:	bf00      	nop
 801673c:	2000224c 	.word	0x2000224c

08016740 <_ZNK8touchgfx6Button17invalidateContentEv>:
 8016740:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 8016744:	b12a      	cbz	r2, 8016752 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8016746:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 801674a:	b112      	cbz	r2, 8016752 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 801674c:	6803      	ldr	r3, [r0, #0]
 801674e:	695b      	ldr	r3, [r3, #20]
 8016750:	4718      	bx	r3
 8016752:	4770      	bx	lr

08016754 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 8016754:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016758:	4b2f      	ldr	r3, [pc, #188]	; (8016818 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 801675a:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 801675c:	881b      	ldrh	r3, [r3, #0]
 801675e:	4293      	cmp	r3, r2
 8016760:	b08d      	sub	sp, #52	; 0x34
 8016762:	4604      	mov	r4, r0
 8016764:	460f      	mov	r7, r1
 8016766:	d954      	bls.n	8016812 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8016768:	4b2c      	ldr	r3, [pc, #176]	; (801681c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 801676a:	6819      	ldr	r1, [r3, #0]
 801676c:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 8016770:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 8016774:	4a2a      	ldr	r2, [pc, #168]	; (8016820 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 8016776:	6812      	ldr	r2, [r2, #0]
 8016778:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 801677c:	2900      	cmp	r1, #0
 801677e:	d048      	beq.n	8016812 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8016780:	785a      	ldrb	r2, [r3, #1]
 8016782:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8016786:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 801678a:	4b26      	ldr	r3, [pc, #152]	; (8016824 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 801678c:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 8016790:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 8016794:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8016798:	6b26      	ldr	r6, [r4, #48]	; 0x30
 801679a:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 801679e:	9107      	str	r1, [sp, #28]
 80167a0:	f3c2 0801 	ubfx	r8, r2, #0, #2
 80167a4:	f3c2 0281 	ubfx	r2, r2, #2, #2
 80167a8:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 80167ac:	681a      	ldr	r2, [r3, #0]
 80167ae:	f88d 8020 	strb.w	r8, [sp, #32]
 80167b2:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 80167b6:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 80167ba:	9609      	str	r6, [sp, #36]	; 0x24
 80167bc:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 80167c0:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 80167c4:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 80167c8:	b10b      	cbz	r3, 80167ce <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 80167ca:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 80167cc:	b905      	cbnz	r5, 80167d0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 80167ce:	6895      	ldr	r5, [r2, #8]
 80167d0:	ae05      	add	r6, sp, #20
 80167d2:	4621      	mov	r1, r4
 80167d4:	4630      	mov	r0, r6
 80167d6:	f003 fec3 	bl	801a560 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80167da:	4b13      	ldr	r3, [pc, #76]	; (8016828 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 80167dc:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80167de:	6818      	ldr	r0, [r3, #0]
 80167e0:	f7f9 fc42 	bl	8010068 <_ZNK8touchgfx5Texts7getTextEt>
 80167e4:	6823      	ldr	r3, [r4, #0]
 80167e6:	4680      	mov	r8, r0
 80167e8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80167ea:	4620      	mov	r0, r4
 80167ec:	4798      	blx	r3
 80167ee:	6823      	ldr	r3, [r4, #0]
 80167f0:	4681      	mov	r9, r0
 80167f2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80167f6:	4620      	mov	r0, r4
 80167f8:	4798      	blx	r3
 80167fa:	e9cd 9002 	strd	r9, r0, [sp, #8]
 80167fe:	ab07      	add	r3, sp, #28
 8016800:	9300      	str	r3, [sp, #0]
 8016802:	f8cd 8004 	str.w	r8, [sp, #4]
 8016806:	463b      	mov	r3, r7
 8016808:	e896 0006 	ldmia.w	r6, {r1, r2}
 801680c:	4628      	mov	r0, r5
 801680e:	f7f9 fbbc 	bl	800ff8a <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8016812:	b00d      	add	sp, #52	; 0x34
 8016814:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8016818:	200022a8 	.word	0x200022a8
 801681c:	200022a4 	.word	0x200022a4
 8016820:	200022ac 	.word	0x200022ac
 8016824:	2000224c 	.word	0x2000224c
 8016828:	200022b0 	.word	0x200022b0

0801682c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 801682c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016830:	4604      	mov	r4, r0
 8016832:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8016834:	8962      	ldrh	r2, [r4, #10]
 8016836:	b218      	sxth	r0, r3
 8016838:	460e      	mov	r6, r1
 801683a:	005b      	lsls	r3, r3, #1
 801683c:	8921      	ldrh	r1, [r4, #8]
 801683e:	b29b      	uxth	r3, r3
 8016840:	1ac9      	subs	r1, r1, r3
 8016842:	b08e      	sub	sp, #56	; 0x38
 8016844:	b209      	sxth	r1, r1
 8016846:	1ad3      	subs	r3, r2, r3
 8016848:	b21b      	sxth	r3, r3
 801684a:	2900      	cmp	r1, #0
 801684c:	f8ad 0000 	strh.w	r0, [sp]
 8016850:	f8ad 0002 	strh.w	r0, [sp, #2]
 8016854:	f8ad 1004 	strh.w	r1, [sp, #4]
 8016858:	f8ad 3006 	strh.w	r3, [sp, #6]
 801685c:	dd5e      	ble.n	801691c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 801685e:	2b00      	cmp	r3, #0
 8016860:	dd5c      	ble.n	801691c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 8016862:	6830      	ldr	r0, [r6, #0]
 8016864:	6871      	ldr	r1, [r6, #4]
 8016866:	ab02      	add	r3, sp, #8
 8016868:	c303      	stmia	r3!, {r0, r1}
 801686a:	4669      	mov	r1, sp
 801686c:	a802      	add	r0, sp, #8
 801686e:	f7fc fd21 	bl	80132b4 <_ZN8touchgfx4RectaNERKS0_>
 8016872:	4620      	mov	r0, r4
 8016874:	a902      	add	r1, sp, #8
 8016876:	f7ff fd11 	bl	801629c <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 801687a:	8e20      	ldrh	r0, [r4, #48]	; 0x30
 801687c:	2800      	cmp	r0, #0
 801687e:	d05f      	beq.n	8016940 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 8016880:	8963      	ldrh	r3, [r4, #10]
 8016882:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8016886:	f8ad 101c 	strh.w	r1, [sp, #28]
 801688a:	1a1f      	subs	r7, r3, r0
 801688c:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 8016890:	b202      	sxth	r2, r0
 8016892:	2500      	movs	r5, #0
 8016894:	b21b      	sxth	r3, r3
 8016896:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 801689a:	1a09      	subs	r1, r1, r0
 801689c:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 80168a0:	9506      	str	r5, [sp, #24]
 80168a2:	f8ad 201e 	strh.w	r2, [sp, #30]
 80168a6:	f8ad 5020 	strh.w	r5, [sp, #32]
 80168aa:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 80168ae:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 80168b2:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 80168b6:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80168ba:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80168be:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 80168c2:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 80168c6:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80168ca:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80168ce:	af04      	add	r7, sp, #16
 80168d0:	ab06      	add	r3, sp, #24
 80168d2:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80168d6:	e893 0003 	ldmia.w	r3, {r0, r1}
 80168da:	e887 0003 	stmia.w	r7, {r0, r1}
 80168de:	4631      	mov	r1, r6
 80168e0:	4638      	mov	r0, r7
 80168e2:	f7fc fce7 	bl	80132b4 <_ZN8touchgfx4RectaNERKS0_>
 80168e6:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80168ea:	2b00      	cmp	r3, #0
 80168ec:	dd12      	ble.n	8016914 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 80168ee:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80168f2:	2b00      	cmp	r3, #0
 80168f4:	dd0e      	ble.n	8016914 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 80168f6:	6823      	ldr	r3, [r4, #0]
 80168f8:	4639      	mov	r1, r7
 80168fa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80168fc:	4620      	mov	r0, r4
 80168fe:	4798      	blx	r3
 8016900:	f7f4 fb40 	bl	800af84 <_ZN8touchgfx3HAL3lcdEv>
 8016904:	6803      	ldr	r3, [r0, #0]
 8016906:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8016908:	f8d3 8020 	ldr.w	r8, [r3, #32]
 801690c:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8016910:	4639      	mov	r1, r7
 8016912:	47c0      	blx	r8
 8016914:	3501      	adds	r5, #1
 8016916:	2d04      	cmp	r5, #4
 8016918:	d1da      	bne.n	80168d0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 801691a:	e011      	b.n	8016940 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 801691c:	6830      	ldr	r0, [r6, #0]
 801691e:	6871      	ldr	r1, [r6, #4]
 8016920:	ab06      	add	r3, sp, #24
 8016922:	c303      	stmia	r3!, {r0, r1}
 8016924:	6823      	ldr	r3, [r4, #0]
 8016926:	a906      	add	r1, sp, #24
 8016928:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801692a:	4620      	mov	r0, r4
 801692c:	4798      	blx	r3
 801692e:	f7f4 fb29 	bl	800af84 <_ZN8touchgfx3HAL3lcdEv>
 8016932:	6803      	ldr	r3, [r0, #0]
 8016934:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8016936:	6a1d      	ldr	r5, [r3, #32]
 8016938:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 801693c:	a906      	add	r1, sp, #24
 801693e:	47a8      	blx	r5
 8016940:	b00e      	add	sp, #56	; 0x38
 8016942:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08016946 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 8016946:	4770      	bx	lr

08016948 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 8016948:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801694c:	461c      	mov	r4, r3
 801694e:	4606      	mov	r6, r0
 8016950:	9f06      	ldr	r7, [sp, #24]
 8016952:	f7ff fe4b 	bl	80165ec <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8016956:	8823      	ldrh	r3, [r4, #0]
 8016958:	86b3      	strh	r3, [r6, #52]	; 0x34
 801695a:	883b      	ldrh	r3, [r7, #0]
 801695c:	86f3      	strh	r3, [r6, #54]	; 0x36
 801695e:	4638      	mov	r0, r7
 8016960:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 8016964:	f005 ffa2 	bl	801c8ac <_ZNK8touchgfx6Bitmap8getWidthEv>
 8016968:	f04f 0802 	mov.w	r8, #2
 801696c:	fb95 f5f8 	sdiv	r5, r5, r8
 8016970:	b2ad      	uxth	r5, r5
 8016972:	fb90 f0f8 	sdiv	r0, r0, r8
 8016976:	1a2d      	subs	r5, r5, r0
 8016978:	8735      	strh	r5, [r6, #56]	; 0x38
 801697a:	4638      	mov	r0, r7
 801697c:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 8016980:	fb94 f4f8 	sdiv	r4, r4, r8
 8016984:	f005 ffc6 	bl	801c914 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8016988:	b2a4      	uxth	r4, r4
 801698a:	fb90 f0f8 	sdiv	r0, r0, r8
 801698e:	1a24      	subs	r4, r4, r0
 8016990:	8774      	strh	r4, [r6, #58]	; 0x3a
 8016992:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08016998 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 8016998:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801699c:	4604      	mov	r4, r0
 801699e:	b08c      	sub	sp, #48	; 0x30
 80169a0:	460d      	mov	r5, r1
 80169a2:	f7ff fe55 	bl	8016650 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 80169a6:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 80169aa:	2b00      	cmp	r3, #0
 80169ac:	d05d      	beq.n	8016a6a <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 80169ae:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80169b0:	f8ad 3014 	strh.w	r3, [sp, #20]
 80169b4:	a805      	add	r0, sp, #20
 80169b6:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 80169ba:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 80169be:	f005 ff75 	bl	801c8ac <_ZNK8touchgfx6Bitmap8getWidthEv>
 80169c2:	4606      	mov	r6, r0
 80169c4:	a805      	add	r0, sp, #20
 80169c6:	f005 ffa5 	bl	801c914 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80169ca:	6869      	ldr	r1, [r5, #4]
 80169cc:	f8ad 001e 	strh.w	r0, [sp, #30]
 80169d0:	6828      	ldr	r0, [r5, #0]
 80169d2:	f8ad 8018 	strh.w	r8, [sp, #24]
 80169d6:	ab08      	add	r3, sp, #32
 80169d8:	ad08      	add	r5, sp, #32
 80169da:	c303      	stmia	r3!, {r0, r1}
 80169dc:	a906      	add	r1, sp, #24
 80169de:	4628      	mov	r0, r5
 80169e0:	f8ad 701a 	strh.w	r7, [sp, #26]
 80169e4:	f8ad 601c 	strh.w	r6, [sp, #28]
 80169e8:	f7fc fc64 	bl	80132b4 <_ZN8touchgfx4RectaNERKS0_>
 80169ec:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80169f0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80169f4:	429a      	cmp	r2, r3
 80169f6:	d035      	beq.n	8016a64 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80169f8:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80169fc:	2b00      	cmp	r3, #0
 80169fe:	dd31      	ble.n	8016a64 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8016a00:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 8016a04:	2b00      	cmp	r3, #0
 8016a06:	dd2d      	ble.n	8016a64 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8016a08:	2300      	movs	r3, #0
 8016a0a:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 8016a0e:	6823      	ldr	r3, [r4, #0]
 8016a10:	a90a      	add	r1, sp, #40	; 0x28
 8016a12:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016a14:	4620      	mov	r0, r4
 8016a16:	4798      	blx	r3
 8016a18:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8016a1c:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 8016a1e:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8016a22:	1a9b      	subs	r3, r3, r2
 8016a24:	f8ad 3020 	strh.w	r3, [sp, #32]
 8016a28:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 8016a2a:	1ac9      	subs	r1, r1, r3
 8016a2c:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 8016a30:	490f      	ldr	r1, [pc, #60]	; (8016a70 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 8016a32:	6809      	ldr	r1, [r1, #0]
 8016a34:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
 8016a38:	b108      	cbz	r0, 8016a3e <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 8016a3a:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 8016a3c:	b900      	cbnz	r0, 8016a40 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 8016a3e:	6888      	ldr	r0, [r1, #8]
 8016a40:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 8016a44:	440b      	add	r3, r1
 8016a46:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8016a4a:	2601      	movs	r6, #1
 8016a4c:	440a      	add	r2, r1
 8016a4e:	6801      	ldr	r1, [r0, #0]
 8016a50:	9602      	str	r6, [sp, #8]
 8016a52:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8016a56:	e9cd 5400 	strd	r5, r4, [sp]
 8016a5a:	b21b      	sxth	r3, r3
 8016a5c:	688c      	ldr	r4, [r1, #8]
 8016a5e:	b212      	sxth	r2, r2
 8016a60:	a905      	add	r1, sp, #20
 8016a62:	47a0      	blx	r4
 8016a64:	b00c      	add	sp, #48	; 0x30
 8016a66:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016a6a:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8016a6c:	e7a0      	b.n	80169b0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 8016a6e:	bf00      	nop
 8016a70:	2000224c 	.word	0x2000224c

08016a74 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 8016a74:	b510      	push	{r4, lr}
 8016a76:	2101      	movs	r1, #1
 8016a78:	2200      	movs	r2, #0
 8016a7a:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8016a7e:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8016a82:	4c0e      	ldr	r4, [pc, #56]	; (8016abc <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 8016a84:	8082      	strh	r2, [r0, #4]
 8016a86:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8016a8a:	80c2      	strh	r2, [r0, #6]
 8016a8c:	8102      	strh	r2, [r0, #8]
 8016a8e:	8142      	strh	r2, [r0, #10]
 8016a90:	8182      	strh	r2, [r0, #12]
 8016a92:	81c2      	strh	r2, [r0, #14]
 8016a94:	8202      	strh	r2, [r0, #16]
 8016a96:	8242      	strh	r2, [r0, #18]
 8016a98:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8016a9c:	61c2      	str	r2, [r0, #28]
 8016a9e:	8402      	strh	r2, [r0, #32]
 8016aa0:	8442      	strh	r2, [r0, #34]	; 0x22
 8016aa2:	6282      	str	r2, [r0, #40]	; 0x28
 8016aa4:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8016aa8:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8016aaa:	8601      	strh	r1, [r0, #48]	; 0x30
 8016aac:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8016ab0:	6004      	str	r4, [r0, #0]
 8016ab2:	8681      	strh	r1, [r0, #52]	; 0x34
 8016ab4:	86c1      	strh	r1, [r0, #54]	; 0x36
 8016ab6:	8702      	strh	r2, [r0, #56]	; 0x38
 8016ab8:	8742      	strh	r2, [r0, #58]	; 0x3a
 8016aba:	bd10      	pop	{r4, pc}
 8016abc:	0802f81c 	.word	0x0802f81c

08016ac0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 8016ac0:	b570      	push	{r4, r5, r6, lr}
 8016ac2:	880b      	ldrh	r3, [r1, #0]
 8016ac4:	84c3      	strh	r3, [r0, #38]	; 0x26
 8016ac6:	4604      	mov	r4, r0
 8016ac8:	4608      	mov	r0, r1
 8016aca:	460d      	mov	r5, r1
 8016acc:	f005 feee 	bl	801c8ac <_ZNK8touchgfx6Bitmap8getWidthEv>
 8016ad0:	4606      	mov	r6, r0
 8016ad2:	4628      	mov	r0, r5
 8016ad4:	f005 ff1e 	bl	801c914 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8016ad8:	6823      	ldr	r3, [r4, #0]
 8016ada:	4605      	mov	r5, r0
 8016adc:	4631      	mov	r1, r6
 8016ade:	4620      	mov	r0, r4
 8016ae0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016ae2:	4798      	blx	r3
 8016ae4:	6823      	ldr	r3, [r4, #0]
 8016ae6:	4629      	mov	r1, r5
 8016ae8:	4620      	mov	r0, r4
 8016aea:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8016aec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016af0:	4718      	bx	r3

08016af2 <_ZNK8touchgfx5Image12getSolidRectEv>:
 8016af2:	b510      	push	{r4, lr}
 8016af4:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8016af8:	2bff      	cmp	r3, #255	; 0xff
 8016afa:	4604      	mov	r4, r0
 8016afc:	d006      	beq.n	8016b0c <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 8016afe:	2300      	movs	r3, #0
 8016b00:	8003      	strh	r3, [r0, #0]
 8016b02:	8043      	strh	r3, [r0, #2]
 8016b04:	8083      	strh	r3, [r0, #4]
 8016b06:	80c3      	strh	r3, [r0, #6]
 8016b08:	4620      	mov	r0, r4
 8016b0a:	bd10      	pop	{r4, pc}
 8016b0c:	3126      	adds	r1, #38	; 0x26
 8016b0e:	f005 ff35 	bl	801c97c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8016b12:	e7f9      	b.n	8016b08 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

08016b14 <_ZNK8touchgfx5Image17invalidateContentEv>:
 8016b14:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 8016b18:	b12a      	cbz	r2, 8016b26 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8016b1a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8016b1e:	b112      	cbz	r2, 8016b26 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8016b20:	6803      	ldr	r3, [r0, #0]
 8016b22:	695b      	ldr	r3, [r3, #20]
 8016b24:	4718      	bx	r3
 8016b26:	4770      	bx	lr

08016b28 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8016b28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016b2c:	4604      	mov	r4, r0
 8016b2e:	b088      	sub	sp, #32
 8016b30:	f854 3b26 	ldr.w	r3, [r4], #38
 8016b34:	2500      	movs	r5, #0
 8016b36:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016b38:	460f      	mov	r7, r1
 8016b3a:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8016b3e:	a904      	add	r1, sp, #16
 8016b40:	4606      	mov	r6, r0
 8016b42:	4798      	blx	r3
 8016b44:	4620      	mov	r0, r4
 8016b46:	f005 feb1 	bl	801c8ac <_ZNK8touchgfx6Bitmap8getWidthEv>
 8016b4a:	4680      	mov	r8, r0
 8016b4c:	4620      	mov	r0, r4
 8016b4e:	f005 fee1 	bl	801c914 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8016b52:	9506      	str	r5, [sp, #24]
 8016b54:	ad06      	add	r5, sp, #24
 8016b56:	f8ad 001e 	strh.w	r0, [sp, #30]
 8016b5a:	4639      	mov	r1, r7
 8016b5c:	4628      	mov	r0, r5
 8016b5e:	f8ad 801c 	strh.w	r8, [sp, #28]
 8016b62:	f7fc fba7 	bl	80132b4 <_ZN8touchgfx4RectaNERKS0_>
 8016b66:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8016b6a:	2b00      	cmp	r3, #0
 8016b6c:	dd19      	ble.n	8016ba2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8016b6e:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8016b72:	2b00      	cmp	r3, #0
 8016b74:	dd15      	ble.n	8016ba2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8016b76:	4b0c      	ldr	r3, [pc, #48]	; (8016ba8 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8016b78:	681b      	ldr	r3, [r3, #0]
 8016b7a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8016b7e:	b10a      	cbz	r2, 8016b84 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 8016b80:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8016b82:	b900      	cbnz	r0, 8016b86 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8016b84:	6898      	ldr	r0, [r3, #8]
 8016b86:	6801      	ldr	r1, [r0, #0]
 8016b88:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8016b8c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8016b90:	2701      	movs	r7, #1
 8016b92:	9702      	str	r7, [sp, #8]
 8016b94:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 8016b98:	e9cd 5600 	strd	r5, r6, [sp]
 8016b9c:	688d      	ldr	r5, [r1, #8]
 8016b9e:	4621      	mov	r1, r4
 8016ba0:	47a8      	blx	r5
 8016ba2:	b008      	add	sp, #32
 8016ba4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016ba8:	2000224c 	.word	0x2000224c

08016bac <_ZN8touchgfx7OutlineD1Ev>:
 8016bac:	4770      	bx	lr

08016bae <_ZN8touchgfx7OutlineD0Ev>:
 8016bae:	b510      	push	{r4, lr}
 8016bb0:	2130      	movs	r1, #48	; 0x30
 8016bb2:	4604      	mov	r4, r0
 8016bb4:	f013 fdd5 	bl	802a762 <_ZdlPvj>
 8016bb8:	4620      	mov	r0, r4
 8016bba:	bd10      	pop	{r4, pc}

08016bbc <_ZN8touchgfx7Outline5resetEv>:
 8016bbc:	b510      	push	{r4, lr}
 8016bbe:	4604      	mov	r4, r0
 8016bc0:	f000 fe82 	bl	80178c8 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 8016bc4:	60e0      	str	r0, [r4, #12]
 8016bc6:	f000 fe85 	bl	80178d4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 8016bca:	68e3      	ldr	r3, [r4, #12]
 8016bcc:	6123      	str	r3, [r4, #16]
 8016bce:	08c0      	lsrs	r0, r0, #3
 8016bd0:	2200      	movs	r2, #0
 8016bd2:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8016bd6:	3801      	subs	r0, #1
 8016bd8:	6060      	str	r0, [r4, #4]
 8016bda:	60a2      	str	r2, [r4, #8]
 8016bdc:	8019      	strh	r1, [r3, #0]
 8016bde:	8059      	strh	r1, [r3, #2]
 8016be0:	809a      	strh	r2, [r3, #4]
 8016be2:	80da      	strh	r2, [r3, #6]
 8016be4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8016be6:	f023 0301 	bic.w	r3, r3, #1
 8016bea:	f043 0302 	orr.w	r3, r3, #2
 8016bee:	6263      	str	r3, [r4, #36]	; 0x24
 8016bf0:	bd10      	pop	{r4, pc}
	...

08016bf4 <_ZN8touchgfx7OutlineC1Ev>:
 8016bf4:	b510      	push	{r4, lr}
 8016bf6:	4b0a      	ldr	r3, [pc, #40]	; (8016c20 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 8016bf8:	6003      	str	r3, [r0, #0]
 8016bfa:	2300      	movs	r3, #0
 8016bfc:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8016c00:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8016c04:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8016c08:	e9c0 3307 	strd	r3, r3, [r0, #28]
 8016c0c:	6243      	str	r3, [r0, #36]	; 0x24
 8016c0e:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8016c12:	4604      	mov	r4, r0
 8016c14:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 8016c18:	f7ff ffd0 	bl	8016bbc <_ZN8touchgfx7Outline5resetEv>
 8016c1c:	4620      	mov	r0, r4
 8016c1e:	bd10      	pop	{r4, pc}
 8016c20:	0802f900 	.word	0x0802f900

08016c24 <_ZN8touchgfx7Outline10renderLineEiiii>:
 8016c24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016c28:	b093      	sub	sp, #76	; 0x4c
 8016c2a:	1156      	asrs	r6, r2, #5
 8016c2c:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8016c2e:	9305      	str	r3, [sp, #20]
 8016c30:	f004 051f 	and.w	r5, r4, #31
 8016c34:	1153      	asrs	r3, r2, #5
 8016c36:	9504      	str	r5, [sp, #16]
 8016c38:	1165      	asrs	r5, r4, #5
 8016c3a:	9303      	str	r3, [sp, #12]
 8016c3c:	42ae      	cmp	r6, r5
 8016c3e:	ea4f 1364 	mov.w	r3, r4, asr #5
 8016c42:	9306      	str	r3, [sp, #24]
 8016c44:	f002 031f 	and.w	r3, r2, #31
 8016c48:	f040 80f8 	bne.w	8016e3c <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 8016c4c:	9c04      	ldr	r4, [sp, #16]
 8016c4e:	9a05      	ldr	r2, [sp, #20]
 8016c50:	42a3      	cmp	r3, r4
 8016c52:	ea4f 1e62 	mov.w	lr, r2, asr #5
 8016c56:	6902      	ldr	r2, [r0, #16]
 8016c58:	d125      	bne.n	8016ca6 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 8016c5a:	f9b2 3000 	ldrsh.w	r3, [r2]
 8016c5e:	459e      	cmp	lr, r3
 8016c60:	d103      	bne.n	8016c6a <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 8016c62:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8016c66:	429e      	cmp	r6, r3
 8016c68:	d035      	beq.n	8016cd6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8016c6a:	88d1      	ldrh	r1, [r2, #6]
 8016c6c:	8893      	ldrh	r3, [r2, #4]
 8016c6e:	430b      	orrs	r3, r1
 8016c70:	d010      	beq.n	8016c94 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8016c72:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8016c76:	2b00      	cmp	r3, #0
 8016c78:	db0c      	blt.n	8016c94 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8016c7a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8016c7c:	428b      	cmp	r3, r1
 8016c7e:	da09      	bge.n	8016c94 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8016c80:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8016c84:	428b      	cmp	r3, r1
 8016c86:	bf38      	it	cc
 8016c88:	3208      	addcc	r2, #8
 8016c8a:	f103 0301 	add.w	r3, r3, #1
 8016c8e:	bf38      	it	cc
 8016c90:	6102      	strcc	r2, [r0, #16]
 8016c92:	6083      	str	r3, [r0, #8]
 8016c94:	6903      	ldr	r3, [r0, #16]
 8016c96:	9a03      	ldr	r2, [sp, #12]
 8016c98:	f8a3 e000 	strh.w	lr, [r3]
 8016c9c:	805a      	strh	r2, [r3, #2]
 8016c9e:	2200      	movs	r2, #0
 8016ca0:	809a      	strh	r2, [r3, #4]
 8016ca2:	80da      	strh	r2, [r3, #6]
 8016ca4:	e017      	b.n	8016cd6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8016ca6:	9c05      	ldr	r4, [sp, #20]
 8016ca8:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 8016cac:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 8016cb0:	f004 041f 	and.w	r4, r4, #31
 8016cb4:	114e      	asrs	r6, r1, #5
 8016cb6:	9402      	str	r4, [sp, #8]
 8016cb8:	9c04      	ldr	r4, [sp, #16]
 8016cba:	4576      	cmp	r6, lr
 8016cbc:	f001 0c1f 	and.w	ip, r1, #31
 8016cc0:	eba4 0403 	sub.w	r4, r4, r3
 8016cc4:	d10a      	bne.n	8016cdc <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 8016cc6:	9b02      	ldr	r3, [sp, #8]
 8016cc8:	449c      	add	ip, r3
 8016cca:	44a0      	add	r8, r4
 8016ccc:	fb04 a40c 	mla	r4, r4, ip, sl
 8016cd0:	f8a2 8004 	strh.w	r8, [r2, #4]
 8016cd4:	80d4      	strh	r4, [r2, #6]
 8016cd6:	b013      	add	sp, #76	; 0x4c
 8016cd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016cdc:	9d05      	ldr	r5, [sp, #20]
 8016cde:	1a69      	subs	r1, r5, r1
 8016ce0:	bf5b      	ittet	pl
 8016ce2:	f1cc 0520 	rsbpl	r5, ip, #32
 8016ce6:	436c      	mulpl	r4, r5
 8016ce8:	2500      	movmi	r5, #0
 8016cea:	2520      	movpl	r5, #32
 8016cec:	bf44      	itt	mi
 8016cee:	fb04 f40c 	mulmi.w	r4, r4, ip
 8016cf2:	4249      	negmi	r1, r1
 8016cf4:	9501      	str	r5, [sp, #4]
 8016cf6:	9f01      	ldr	r7, [sp, #4]
 8016cf8:	fb94 f5f1 	sdiv	r5, r4, r1
 8016cfc:	fb01 4415 	mls	r4, r1, r5, r4
 8016d00:	bf54      	ite	pl
 8016d02:	f04f 0901 	movpl.w	r9, #1
 8016d06:	f04f 39ff 	movmi.w	r9, #4294967295
 8016d0a:	2c00      	cmp	r4, #0
 8016d0c:	bfb8      	it	lt
 8016d0e:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8016d12:	44bc      	add	ip, r7
 8016d14:	44a8      	add	r8, r5
 8016d16:	fb05 ac0c 	mla	ip, r5, ip, sl
 8016d1a:	f8a2 8004 	strh.w	r8, [r2, #4]
 8016d1e:	f8a2 c006 	strh.w	ip, [r2, #6]
 8016d22:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016d26:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8016d2a:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 8016d2e:	bfb8      	it	lt
 8016d30:	1864      	addlt	r4, r4, r1
 8016d32:	ea58 0202 	orrs.w	r2, r8, r2
 8016d36:	444e      	add	r6, r9
 8016d38:	d011      	beq.n	8016d5e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8016d3a:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8016d3e:	f1b8 0f00 	cmp.w	r8, #0
 8016d42:	db0c      	blt.n	8016d5e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8016d44:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8016d46:	4590      	cmp	r8, r2
 8016d48:	da09      	bge.n	8016d5e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8016d4a:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 8016d4e:	4590      	cmp	r8, r2
 8016d50:	bf3c      	itt	cc
 8016d52:	f10c 0208 	addcc.w	r2, ip, #8
 8016d56:	6102      	strcc	r2, [r0, #16]
 8016d58:	f108 0201 	add.w	r2, r8, #1
 8016d5c:	6082      	str	r2, [r0, #8]
 8016d5e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016d62:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8016d66:	f8ac 6000 	strh.w	r6, [ip]
 8016d6a:	2700      	movs	r7, #0
 8016d6c:	45b6      	cmp	lr, r6
 8016d6e:	f8ac 2002 	strh.w	r2, [ip, #2]
 8016d72:	f8ac 7004 	strh.w	r7, [ip, #4]
 8016d76:	f8ac 7006 	strh.w	r7, [ip, #6]
 8016d7a:	442b      	add	r3, r5
 8016d7c:	d04d      	beq.n	8016e1a <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 8016d7e:	9f04      	ldr	r7, [sp, #16]
 8016d80:	1aff      	subs	r7, r7, r3
 8016d82:	443d      	add	r5, r7
 8016d84:	016d      	lsls	r5, r5, #5
 8016d86:	fb95 f8f1 	sdiv	r8, r5, r1
 8016d8a:	fb01 5518 	mls	r5, r1, r8, r5
 8016d8e:	2d00      	cmp	r5, #0
 8016d90:	bfb8      	it	lt
 8016d92:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8016d96:	f108 0701 	add.w	r7, r8, #1
 8016d9a:	bfb8      	it	lt
 8016d9c:	186d      	addlt	r5, r5, r1
 8016d9e:	1a64      	subs	r4, r4, r1
 8016da0:	9703      	str	r7, [sp, #12]
 8016da2:	f04f 0a00 	mov.w	sl, #0
 8016da6:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016daa:	1964      	adds	r4, r4, r5
 8016dac:	bf58      	it	pl
 8016dae:	9f03      	ldrpl	r7, [sp, #12]
 8016db0:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8016db4:	bf48      	it	mi
 8016db6:	4647      	movmi	r7, r8
 8016db8:	44bb      	add	fp, r7
 8016dba:	f8ac b004 	strh.w	fp, [ip, #4]
 8016dbe:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8016dc2:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8016dc6:	f8ac b006 	strh.w	fp, [ip, #6]
 8016dca:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016dce:	443b      	add	r3, r7
 8016dd0:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8016dd4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8016dd8:	bf58      	it	pl
 8016dda:	1a64      	subpl	r4, r4, r1
 8016ddc:	ea5b 0707 	orrs.w	r7, fp, r7
 8016de0:	444e      	add	r6, r9
 8016de2:	d011      	beq.n	8016e08 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8016de4:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8016de8:	f1bb 0f00 	cmp.w	fp, #0
 8016dec:	db0c      	blt.n	8016e08 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8016dee:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8016df0:	45bb      	cmp	fp, r7
 8016df2:	da09      	bge.n	8016e08 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8016df4:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8016df8:	45bb      	cmp	fp, r7
 8016dfa:	bf3c      	itt	cc
 8016dfc:	f10c 0708 	addcc.w	r7, ip, #8
 8016e00:	6107      	strcc	r7, [r0, #16]
 8016e02:	f10b 0701 	add.w	r7, fp, #1
 8016e06:	6087      	str	r7, [r0, #8]
 8016e08:	6907      	ldr	r7, [r0, #16]
 8016e0a:	45b6      	cmp	lr, r6
 8016e0c:	803e      	strh	r6, [r7, #0]
 8016e0e:	807a      	strh	r2, [r7, #2]
 8016e10:	f8a7 a004 	strh.w	sl, [r7, #4]
 8016e14:	f8a7 a006 	strh.w	sl, [r7, #6]
 8016e18:	d1c5      	bne.n	8016da6 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 8016e1a:	9a04      	ldr	r2, [sp, #16]
 8016e1c:	1ad3      	subs	r3, r2, r3
 8016e1e:	6902      	ldr	r2, [r0, #16]
 8016e20:	8891      	ldrh	r1, [r2, #4]
 8016e22:	88d6      	ldrh	r6, [r2, #6]
 8016e24:	4419      	add	r1, r3
 8016e26:	8091      	strh	r1, [r2, #4]
 8016e28:	9902      	ldr	r1, [sp, #8]
 8016e2a:	f101 0c20 	add.w	ip, r1, #32
 8016e2e:	9901      	ldr	r1, [sp, #4]
 8016e30:	ebac 0c01 	sub.w	ip, ip, r1
 8016e34:	fb03 630c 	mla	r3, r3, ip, r6
 8016e38:	80d3      	strh	r3, [r2, #6]
 8016e3a:	e74c      	b.n	8016cd6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8016e3c:	9d05      	ldr	r5, [sp, #20]
 8016e3e:	1aa2      	subs	r2, r4, r2
 8016e40:	eba5 0501 	sub.w	r5, r5, r1
 8016e44:	9508      	str	r5, [sp, #32]
 8016e46:	9202      	str	r2, [sp, #8]
 8016e48:	f140 8128 	bpl.w	801709c <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 8016e4c:	9a03      	ldr	r2, [sp, #12]
 8016e4e:	2a00      	cmp	r2, #0
 8016e50:	f6ff af41 	blt.w	8016cd6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8016e54:	9a02      	ldr	r2, [sp, #8]
 8016e56:	4252      	negs	r2, r2
 8016e58:	9202      	str	r2, [sp, #8]
 8016e5a:	9a06      	ldr	r2, [sp, #24]
 8016e5c:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8016e60:	f04f 34ff 	mov.w	r4, #4294967295
 8016e64:	9206      	str	r2, [sp, #24]
 8016e66:	462a      	mov	r2, r5
 8016e68:	940b      	str	r4, [sp, #44]	; 0x2c
 8016e6a:	435a      	muls	r2, r3
 8016e6c:	2400      	movs	r4, #0
 8016e6e:	9d02      	ldr	r5, [sp, #8]
 8016e70:	9401      	str	r4, [sp, #4]
 8016e72:	9c02      	ldr	r4, [sp, #8]
 8016e74:	fb92 f4f4 	sdiv	r4, r2, r4
 8016e78:	fb05 2214 	mls	r2, r5, r4, r2
 8016e7c:	2a00      	cmp	r2, #0
 8016e7e:	9207      	str	r2, [sp, #28]
 8016e80:	bfbc      	itt	lt
 8016e82:	1952      	addlt	r2, r2, r5
 8016e84:	9207      	strlt	r2, [sp, #28]
 8016e86:	9a01      	ldr	r2, [sp, #4]
 8016e88:	6905      	ldr	r5, [r0, #16]
 8016e8a:	bfb8      	it	lt
 8016e8c:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8016e90:	eb04 0901 	add.w	r9, r4, r1
 8016e94:	429a      	cmp	r2, r3
 8016e96:	ea4f 1669 	mov.w	r6, r9, asr #5
 8016e9a:	f040 8112 	bne.w	80170c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 8016e9e:	f9b5 3000 	ldrsh.w	r3, [r5]
 8016ea2:	429e      	cmp	r6, r3
 8016ea4:	d104      	bne.n	8016eb0 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 8016ea6:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8016eaa:	9a03      	ldr	r2, [sp, #12]
 8016eac:	429a      	cmp	r2, r3
 8016eae:	d01b      	beq.n	8016ee8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8016eb0:	88ea      	ldrh	r2, [r5, #6]
 8016eb2:	88ab      	ldrh	r3, [r5, #4]
 8016eb4:	4313      	orrs	r3, r2
 8016eb6:	d010      	beq.n	8016eda <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8016eb8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8016ebc:	2a00      	cmp	r2, #0
 8016ebe:	db0c      	blt.n	8016eda <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8016ec0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8016ec2:	429a      	cmp	r2, r3
 8016ec4:	da09      	bge.n	8016eda <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8016ec6:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 8016eca:	429a      	cmp	r2, r3
 8016ecc:	bf38      	it	cc
 8016ece:	3508      	addcc	r5, #8
 8016ed0:	f102 0201 	add.w	r2, r2, #1
 8016ed4:	bf38      	it	cc
 8016ed6:	6105      	strcc	r5, [r0, #16]
 8016ed8:	6082      	str	r2, [r0, #8]
 8016eda:	6903      	ldr	r3, [r0, #16]
 8016edc:	9a03      	ldr	r2, [sp, #12]
 8016ede:	805a      	strh	r2, [r3, #2]
 8016ee0:	2200      	movs	r2, #0
 8016ee2:	801e      	strh	r6, [r3, #0]
 8016ee4:	809a      	strh	r2, [r3, #4]
 8016ee6:	80da      	strh	r2, [r3, #6]
 8016ee8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016eea:	9a03      	ldr	r2, [sp, #12]
 8016eec:	6901      	ldr	r1, [r0, #16]
 8016eee:	441a      	add	r2, r3
 8016ef0:	f9b1 3000 	ldrsh.w	r3, [r1]
 8016ef4:	42b3      	cmp	r3, r6
 8016ef6:	d103      	bne.n	8016f00 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 8016ef8:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8016efc:	429a      	cmp	r2, r3
 8016efe:	d01a      	beq.n	8016f36 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 8016f00:	88cc      	ldrh	r4, [r1, #6]
 8016f02:	888b      	ldrh	r3, [r1, #4]
 8016f04:	4323      	orrs	r3, r4
 8016f06:	d010      	beq.n	8016f2a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8016f08:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8016f0c:	2c00      	cmp	r4, #0
 8016f0e:	db0c      	blt.n	8016f2a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8016f10:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8016f12:	429c      	cmp	r4, r3
 8016f14:	da09      	bge.n	8016f2a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8016f16:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8016f1a:	429c      	cmp	r4, r3
 8016f1c:	bf38      	it	cc
 8016f1e:	3108      	addcc	r1, #8
 8016f20:	f104 0401 	add.w	r4, r4, #1
 8016f24:	bf38      	it	cc
 8016f26:	6101      	strcc	r1, [r0, #16]
 8016f28:	6084      	str	r4, [r0, #8]
 8016f2a:	6903      	ldr	r3, [r0, #16]
 8016f2c:	2100      	movs	r1, #0
 8016f2e:	801e      	strh	r6, [r3, #0]
 8016f30:	805a      	strh	r2, [r3, #2]
 8016f32:	8099      	strh	r1, [r3, #4]
 8016f34:	80d9      	strh	r1, [r3, #6]
 8016f36:	9b06      	ldr	r3, [sp, #24]
 8016f38:	4293      	cmp	r3, r2
 8016f3a:	f000 8082 	beq.w	8017042 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 8016f3e:	9b08      	ldr	r3, [sp, #32]
 8016f40:	9c02      	ldr	r4, [sp, #8]
 8016f42:	9902      	ldr	r1, [sp, #8]
 8016f44:	015b      	lsls	r3, r3, #5
 8016f46:	fb93 f1f1 	sdiv	r1, r3, r1
 8016f4a:	fb04 3311 	mls	r3, r4, r1, r3
 8016f4e:	2b00      	cmp	r3, #0
 8016f50:	9103      	str	r1, [sp, #12]
 8016f52:	9308      	str	r3, [sp, #32]
 8016f54:	da04      	bge.n	8016f60 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 8016f56:	1e4b      	subs	r3, r1, #1
 8016f58:	9303      	str	r3, [sp, #12]
 8016f5a:	9b08      	ldr	r3, [sp, #32]
 8016f5c:	4423      	add	r3, r4
 8016f5e:	9308      	str	r3, [sp, #32]
 8016f60:	9b07      	ldr	r3, [sp, #28]
 8016f62:	9902      	ldr	r1, [sp, #8]
 8016f64:	1a5b      	subs	r3, r3, r1
 8016f66:	9307      	str	r3, [sp, #28]
 8016f68:	9b01      	ldr	r3, [sp, #4]
 8016f6a:	f1c3 0320 	rsb	r3, r3, #32
 8016f6e:	930e      	str	r3, [sp, #56]	; 0x38
 8016f70:	990e      	ldr	r1, [sp, #56]	; 0x38
 8016f72:	9b01      	ldr	r3, [sp, #4]
 8016f74:	1a5b      	subs	r3, r3, r1
 8016f76:	464f      	mov	r7, r9
 8016f78:	930a      	str	r3, [sp, #40]	; 0x28
 8016f7a:	2600      	movs	r6, #0
 8016f7c:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8016f80:	185b      	adds	r3, r3, r1
 8016f82:	bf58      	it	pl
 8016f84:	9902      	ldrpl	r1, [sp, #8]
 8016f86:	9307      	str	r3, [sp, #28]
 8016f88:	bf5d      	ittte	pl
 8016f8a:	1a5b      	subpl	r3, r3, r1
 8016f8c:	9307      	strpl	r3, [sp, #28]
 8016f8e:	9b03      	ldrpl	r3, [sp, #12]
 8016f90:	9903      	ldrmi	r1, [sp, #12]
 8016f92:	bf58      	it	pl
 8016f94:	1c59      	addpl	r1, r3, #1
 8016f96:	4489      	add	r9, r1
 8016f98:	2a00      	cmp	r2, #0
 8016f9a:	ea4f 1a69 	mov.w	sl, r9, asr #5
 8016f9e:	db2e      	blt.n	8016ffe <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8016fa0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8016fa2:	4293      	cmp	r3, r2
 8016fa4:	dd2b      	ble.n	8016ffe <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8016fa6:	9c01      	ldr	r4, [sp, #4]
 8016fa8:	6905      	ldr	r5, [r0, #16]
 8016faa:	46a0      	mov	r8, r4
 8016fac:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8016fae:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 8016fb2:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 8016fb6:	45a0      	cmp	r8, r4
 8016fb8:	f040 814f 	bne.w	801725a <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 8016fbc:	f9b5 1000 	ldrsh.w	r1, [r5]
 8016fc0:	4551      	cmp	r1, sl
 8016fc2:	d103      	bne.n	8016fcc <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 8016fc4:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8016fc8:	4291      	cmp	r1, r2
 8016fca:	d018      	beq.n	8016ffe <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8016fcc:	ea5c 010e 	orrs.w	r1, ip, lr
 8016fd0:	d00f      	beq.n	8016ff2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8016fd2:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8016fd6:	2900      	cmp	r1, #0
 8016fd8:	db0b      	blt.n	8016ff2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8016fda:	428b      	cmp	r3, r1
 8016fdc:	dd09      	ble.n	8016ff2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8016fde:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 8016fe2:	4299      	cmp	r1, r3
 8016fe4:	bf38      	it	cc
 8016fe6:	3508      	addcc	r5, #8
 8016fe8:	f101 0101 	add.w	r1, r1, #1
 8016fec:	bf38      	it	cc
 8016fee:	6105      	strcc	r5, [r0, #16]
 8016ff0:	6081      	str	r1, [r0, #8]
 8016ff2:	6903      	ldr	r3, [r0, #16]
 8016ff4:	f8a3 a000 	strh.w	sl, [r3]
 8016ff8:	805a      	strh	r2, [r3, #2]
 8016ffa:	809e      	strh	r6, [r3, #4]
 8016ffc:	80de      	strh	r6, [r3, #6]
 8016ffe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017000:	6901      	ldr	r1, [r0, #16]
 8017002:	441a      	add	r2, r3
 8017004:	88cc      	ldrh	r4, [r1, #6]
 8017006:	888b      	ldrh	r3, [r1, #4]
 8017008:	4323      	orrs	r3, r4
 801700a:	d010      	beq.n	801702e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 801700c:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8017010:	2c00      	cmp	r4, #0
 8017012:	db0c      	blt.n	801702e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8017014:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8017016:	429c      	cmp	r4, r3
 8017018:	da09      	bge.n	801702e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 801701a:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 801701e:	429c      	cmp	r4, r3
 8017020:	bf38      	it	cc
 8017022:	3108      	addcc	r1, #8
 8017024:	f104 0401 	add.w	r4, r4, #1
 8017028:	bf38      	it	cc
 801702a:	6101      	strcc	r1, [r0, #16]
 801702c:	6084      	str	r4, [r0, #8]
 801702e:	6903      	ldr	r3, [r0, #16]
 8017030:	f8a3 a000 	strh.w	sl, [r3]
 8017034:	805a      	strh	r2, [r3, #2]
 8017036:	809e      	strh	r6, [r3, #4]
 8017038:	80de      	strh	r6, [r3, #6]
 801703a:	9b06      	ldr	r3, [sp, #24]
 801703c:	4293      	cmp	r3, r2
 801703e:	464f      	mov	r7, r9
 8017040:	d19c      	bne.n	8016f7c <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 8017042:	9b01      	ldr	r3, [sp, #4]
 8017044:	6907      	ldr	r7, [r0, #16]
 8017046:	f1c3 0620 	rsb	r6, r3, #32
 801704a:	9b05      	ldr	r3, [sp, #20]
 801704c:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8017050:	9b04      	ldr	r3, [sp, #16]
 8017052:	429e      	cmp	r6, r3
 8017054:	f040 81cc 	bne.w	80173f0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 8017058:	f9b7 3000 	ldrsh.w	r3, [r7]
 801705c:	459e      	cmp	lr, r3
 801705e:	d104      	bne.n	801706a <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8017060:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8017064:	429a      	cmp	r2, r3
 8017066:	f43f ae36 	beq.w	8016cd6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801706a:	88f9      	ldrh	r1, [r7, #6]
 801706c:	88bb      	ldrh	r3, [r7, #4]
 801706e:	430b      	orrs	r3, r1
 8017070:	d010      	beq.n	8017094 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8017072:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8017076:	2b00      	cmp	r3, #0
 8017078:	db0c      	blt.n	8017094 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 801707a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 801707c:	428b      	cmp	r3, r1
 801707e:	da09      	bge.n	8017094 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8017080:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8017084:	428b      	cmp	r3, r1
 8017086:	bf38      	it	cc
 8017088:	3708      	addcc	r7, #8
 801708a:	f103 0301 	add.w	r3, r3, #1
 801708e:	bf38      	it	cc
 8017090:	6107      	strcc	r7, [r0, #16]
 8017092:	6083      	str	r3, [r0, #8]
 8017094:	6903      	ldr	r3, [r0, #16]
 8017096:	f8a3 e000 	strh.w	lr, [r3]
 801709a:	e5ff      	b.n	8016c9c <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 801709c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 801709e:	9c03      	ldr	r4, [sp, #12]
 80170a0:	42a2      	cmp	r2, r4
 80170a2:	f6ff ae18 	blt.w	8016cd6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80170a6:	9c06      	ldr	r4, [sp, #24]
 80170a8:	42a2      	cmp	r2, r4
 80170aa:	bfb8      	it	lt
 80170ac:	3201      	addlt	r2, #1
 80170ae:	9c08      	ldr	r4, [sp, #32]
 80170b0:	bfb8      	it	lt
 80170b2:	9206      	strlt	r2, [sp, #24]
 80170b4:	f1c3 0220 	rsb	r2, r3, #32
 80170b8:	4362      	muls	r2, r4
 80170ba:	2401      	movs	r4, #1
 80170bc:	940b      	str	r4, [sp, #44]	; 0x2c
 80170be:	2420      	movs	r4, #32
 80170c0:	e6d5      	b.n	8016e6e <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 80170c2:	f009 021f 	and.w	r2, r9, #31
 80170c6:	ea4f 1861 	mov.w	r8, r1, asr #5
 80170ca:	920c      	str	r2, [sp, #48]	; 0x30
 80170cc:	9a01      	ldr	r2, [sp, #4]
 80170ce:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 80170d2:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 80170d6:	45b0      	cmp	r8, r6
 80170d8:	f001 011f 	and.w	r1, r1, #31
 80170dc:	eba2 0203 	sub.w	r2, r2, r3
 80170e0:	d108      	bne.n	80170f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 80170e2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80170e4:	4419      	add	r1, r3
 80170e6:	4496      	add	lr, r2
 80170e8:	fb02 a101 	mla	r1, r2, r1, sl
 80170ec:	f8a5 e004 	strh.w	lr, [r5, #4]
 80170f0:	80e9      	strh	r1, [r5, #6]
 80170f2:	e6f9      	b.n	8016ee8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 80170f4:	2c00      	cmp	r4, #0
 80170f6:	f2c0 80a9 	blt.w	801724c <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 80170fa:	2701      	movs	r7, #1
 80170fc:	f1c1 0c20 	rsb	ip, r1, #32
 8017100:	970a      	str	r7, [sp, #40]	; 0x28
 8017102:	fb02 f20c 	mul.w	r2, r2, ip
 8017106:	2720      	movs	r7, #32
 8017108:	9709      	str	r7, [sp, #36]	; 0x24
 801710a:	fb92 fcf4 	sdiv	ip, r2, r4
 801710e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8017110:	fb04 221c 	mls	r2, r4, ip, r2
 8017114:	2a00      	cmp	r2, #0
 8017116:	bfb8      	it	lt
 8017118:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 801711c:	4439      	add	r1, r7
 801711e:	fb0c a101 	mla	r1, ip, r1, sl
 8017122:	80e9      	strh	r1, [r5, #6]
 8017124:	44e6      	add	lr, ip
 8017126:	990a      	ldr	r1, [sp, #40]	; 0x28
 8017128:	f8a5 e004 	strh.w	lr, [r5, #4]
 801712c:	eb08 0501 	add.w	r5, r8, r1
 8017130:	6901      	ldr	r1, [r0, #16]
 8017132:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 8017136:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 801713a:	bfb8      	it	lt
 801713c:	1912      	addlt	r2, r2, r4
 801713e:	ea58 070e 	orrs.w	r7, r8, lr
 8017142:	d010      	beq.n	8017166 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8017144:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 8017148:	f1be 0f00 	cmp.w	lr, #0
 801714c:	db0b      	blt.n	8017166 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 801714e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8017150:	45be      	cmp	lr, r7
 8017152:	da08      	bge.n	8017166 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8017154:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8017158:	45be      	cmp	lr, r7
 801715a:	bf3c      	itt	cc
 801715c:	3108      	addcc	r1, #8
 801715e:	6101      	strcc	r1, [r0, #16]
 8017160:	f10e 0101 	add.w	r1, lr, #1
 8017164:	6081      	str	r1, [r0, #8]
 8017166:	6901      	ldr	r1, [r0, #16]
 8017168:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801716c:	800d      	strh	r5, [r1, #0]
 801716e:	f04f 0e00 	mov.w	lr, #0
 8017172:	42ae      	cmp	r6, r5
 8017174:	f8a1 8002 	strh.w	r8, [r1, #2]
 8017178:	f8a1 e004 	strh.w	lr, [r1, #4]
 801717c:	f8a1 e006 	strh.w	lr, [r1, #6]
 8017180:	4463      	add	r3, ip
 8017182:	d054      	beq.n	801722e <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8017184:	9901      	ldr	r1, [sp, #4]
 8017186:	1ac9      	subs	r1, r1, r3
 8017188:	4461      	add	r1, ip
 801718a:	0149      	lsls	r1, r1, #5
 801718c:	fb91 fef4 	sdiv	lr, r1, r4
 8017190:	fb04 111e 	mls	r1, r4, lr, r1
 8017194:	2900      	cmp	r1, #0
 8017196:	bfb8      	it	lt
 8017198:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 801719c:	f10e 0701 	add.w	r7, lr, #1
 80171a0:	bfb8      	it	lt
 80171a2:	1909      	addlt	r1, r1, r4
 80171a4:	1b12      	subs	r2, r2, r4
 80171a6:	970d      	str	r7, [sp, #52]	; 0x34
 80171a8:	f8d0 a010 	ldr.w	sl, [r0, #16]
 80171ac:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80171ae:	f8ba b004 	ldrh.w	fp, [sl, #4]
 80171b2:	1852      	adds	r2, r2, r1
 80171b4:	bf54      	ite	pl
 80171b6:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 80171ba:	46f4      	movmi	ip, lr
 80171bc:	44e3      	add	fp, ip
 80171be:	f8aa b004 	strh.w	fp, [sl, #4]
 80171c2:	f8ba b006 	ldrh.w	fp, [sl, #6]
 80171c6:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 80171ca:	f8aa b006 	strh.w	fp, [sl, #6]
 80171ce:	4463      	add	r3, ip
 80171d0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80171d4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80171d8:	f8bc a004 	ldrh.w	sl, [ip, #4]
 80171dc:	bf58      	it	pl
 80171de:	1b12      	subpl	r2, r2, r4
 80171e0:	443d      	add	r5, r7
 80171e2:	ea5b 070a 	orrs.w	r7, fp, sl
 80171e6:	d014      	beq.n	8017212 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80171e8:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 80171ec:	f1ba 0f00 	cmp.w	sl, #0
 80171f0:	db0f      	blt.n	8017212 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80171f2:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80171f4:	45ba      	cmp	sl, r7
 80171f6:	da0c      	bge.n	8017212 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80171f8:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 80171fc:	45ba      	cmp	sl, r7
 80171fe:	bf38      	it	cc
 8017200:	f10c 0c08 	addcc.w	ip, ip, #8
 8017204:	f10a 0a01 	add.w	sl, sl, #1
 8017208:	bf38      	it	cc
 801720a:	f8c0 c010 	strcc.w	ip, [r0, #16]
 801720e:	f8c0 a008 	str.w	sl, [r0, #8]
 8017212:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8017216:	f04f 0700 	mov.w	r7, #0
 801721a:	42ae      	cmp	r6, r5
 801721c:	f8ac 5000 	strh.w	r5, [ip]
 8017220:	f8ac 8002 	strh.w	r8, [ip, #2]
 8017224:	f8ac 7004 	strh.w	r7, [ip, #4]
 8017228:	f8ac 7006 	strh.w	r7, [ip, #6]
 801722c:	d1bc      	bne.n	80171a8 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 801722e:	6904      	ldr	r4, [r0, #16]
 8017230:	9a01      	ldr	r2, [sp, #4]
 8017232:	990c      	ldr	r1, [sp, #48]	; 0x30
 8017234:	1ad3      	subs	r3, r2, r3
 8017236:	88a2      	ldrh	r2, [r4, #4]
 8017238:	441a      	add	r2, r3
 801723a:	80a2      	strh	r2, [r4, #4]
 801723c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801723e:	3120      	adds	r1, #32
 8017240:	1a89      	subs	r1, r1, r2
 8017242:	88e2      	ldrh	r2, [r4, #6]
 8017244:	fb03 2301 	mla	r3, r3, r1, r2
 8017248:	80e3      	strh	r3, [r4, #6]
 801724a:	e64d      	b.n	8016ee8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 801724c:	f04f 37ff 	mov.w	r7, #4294967295
 8017250:	970a      	str	r7, [sp, #40]	; 0x28
 8017252:	434a      	muls	r2, r1
 8017254:	4264      	negs	r4, r4
 8017256:	2700      	movs	r7, #0
 8017258:	e756      	b.n	8017108 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 801725a:	ea4f 1867 	mov.w	r8, r7, asr #5
 801725e:	f009 031f 	and.w	r3, r9, #31
 8017262:	45d0      	cmp	r8, sl
 8017264:	f007 071f 	and.w	r7, r7, #31
 8017268:	930f      	str	r3, [sp, #60]	; 0x3c
 801726a:	fa1f fc8c 	uxth.w	ip, ip
 801726e:	fa1f fe8e 	uxth.w	lr, lr
 8017272:	d10a      	bne.n	801728a <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8017274:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017276:	449c      	add	ip, r3
 8017278:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801727a:	f8a5 c004 	strh.w	ip, [r5, #4]
 801727e:	441f      	add	r7, r3
 8017280:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017282:	fb03 e707 	mla	r7, r3, r7, lr
 8017286:	80ef      	strh	r7, [r5, #6]
 8017288:	e6b9      	b.n	8016ffe <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801728a:	2900      	cmp	r1, #0
 801728c:	f2c0 80a8 	blt.w	80173e0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8017290:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8017292:	f1c7 0320 	rsb	r3, r7, #32
 8017296:	4363      	muls	r3, r4
 8017298:	2401      	movs	r4, #1
 801729a:	940d      	str	r4, [sp, #52]	; 0x34
 801729c:	2420      	movs	r4, #32
 801729e:	940c      	str	r4, [sp, #48]	; 0x30
 80172a0:	fb93 f4f1 	sdiv	r4, r3, r1
 80172a4:	fb01 3b14 	mls	fp, r1, r4, r3
 80172a8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80172aa:	f1bb 0f00 	cmp.w	fp, #0
 80172ae:	bfb8      	it	lt
 80172b0:	f104 34ff 	addlt.w	r4, r4, #4294967295
 80172b4:	441f      	add	r7, r3
 80172b6:	fb04 e707 	mla	r7, r4, r7, lr
 80172ba:	44a4      	add	ip, r4
 80172bc:	f8a5 c004 	strh.w	ip, [r5, #4]
 80172c0:	80ef      	strh	r7, [r5, #6]
 80172c2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80172c6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80172c8:	f8bc e006 	ldrh.w	lr, [ip, #6]
 80172cc:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80172d0:	bfb8      	it	lt
 80172d2:	448b      	addlt	fp, r1
 80172d4:	eb08 0503 	add.w	r5, r8, r3
 80172d8:	ea5e 0307 	orrs.w	r3, lr, r7
 80172dc:	d011      	beq.n	8017302 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 80172de:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 80172e2:	f1be 0f00 	cmp.w	lr, #0
 80172e6:	db0c      	blt.n	8017302 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 80172e8:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80172ea:	45be      	cmp	lr, r7
 80172ec:	da09      	bge.n	8017302 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 80172ee:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 80172f2:	45be      	cmp	lr, r7
 80172f4:	bf3c      	itt	cc
 80172f6:	f10c 0708 	addcc.w	r7, ip, #8
 80172fa:	6107      	strcc	r7, [r0, #16]
 80172fc:	f10e 0701 	add.w	r7, lr, #1
 8017300:	6087      	str	r7, [r0, #8]
 8017302:	6907      	ldr	r7, [r0, #16]
 8017304:	b213      	sxth	r3, r2
 8017306:	9310      	str	r3, [sp, #64]	; 0x40
 8017308:	807b      	strh	r3, [r7, #2]
 801730a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801730c:	803d      	strh	r5, [r7, #0]
 801730e:	4555      	cmp	r5, sl
 8017310:	80be      	strh	r6, [r7, #4]
 8017312:	80fe      	strh	r6, [r7, #6]
 8017314:	eb04 0c03 	add.w	ip, r4, r3
 8017318:	d051      	beq.n	80173be <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 801731a:	9b01      	ldr	r3, [sp, #4]
 801731c:	eba3 070c 	sub.w	r7, r3, ip
 8017320:	443c      	add	r4, r7
 8017322:	0164      	lsls	r4, r4, #5
 8017324:	fb94 f8f1 	sdiv	r8, r4, r1
 8017328:	fb01 4418 	mls	r4, r1, r8, r4
 801732c:	2c00      	cmp	r4, #0
 801732e:	bfb8      	it	lt
 8017330:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8017334:	ebab 0301 	sub.w	r3, fp, r1
 8017338:	f108 0701 	add.w	r7, r8, #1
 801733c:	bfb8      	it	lt
 801733e:	1864      	addlt	r4, r4, r1
 8017340:	9309      	str	r3, [sp, #36]	; 0x24
 8017342:	9711      	str	r7, [sp, #68]	; 0x44
 8017344:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017346:	f8d0 e010 	ldr.w	lr, [r0, #16]
 801734a:	191b      	adds	r3, r3, r4
 801734c:	bf58      	it	pl
 801734e:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 8017350:	f8be b004 	ldrh.w	fp, [lr, #4]
 8017354:	9309      	str	r3, [sp, #36]	; 0x24
 8017356:	bf48      	it	mi
 8017358:	4647      	movmi	r7, r8
 801735a:	44bb      	add	fp, r7
 801735c:	f8ae b004 	strh.w	fp, [lr, #4]
 8017360:	f8be b006 	ldrh.w	fp, [lr, #6]
 8017364:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8017368:	f8ae b006 	strh.w	fp, [lr, #6]
 801736c:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8017370:	44bc      	add	ip, r7
 8017372:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8017374:	f8be b006 	ldrh.w	fp, [lr, #6]
 8017378:	443d      	add	r5, r7
 801737a:	f8be 7004 	ldrh.w	r7, [lr, #4]
 801737e:	bf5c      	itt	pl
 8017380:	1a5b      	subpl	r3, r3, r1
 8017382:	9309      	strpl	r3, [sp, #36]	; 0x24
 8017384:	ea5b 0307 	orrs.w	r3, fp, r7
 8017388:	d011      	beq.n	80173ae <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 801738a:	f9be b002 	ldrsh.w	fp, [lr, #2]
 801738e:	f1bb 0f00 	cmp.w	fp, #0
 8017392:	db0c      	blt.n	80173ae <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8017394:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8017396:	45bb      	cmp	fp, r7
 8017398:	da09      	bge.n	80173ae <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 801739a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 801739e:	45bb      	cmp	fp, r7
 80173a0:	bf3c      	itt	cc
 80173a2:	f10e 0708 	addcc.w	r7, lr, #8
 80173a6:	6107      	strcc	r7, [r0, #16]
 80173a8:	f10b 0701 	add.w	r7, fp, #1
 80173ac:	6087      	str	r7, [r0, #8]
 80173ae:	6907      	ldr	r7, [r0, #16]
 80173b0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80173b2:	803d      	strh	r5, [r7, #0]
 80173b4:	4555      	cmp	r5, sl
 80173b6:	807b      	strh	r3, [r7, #2]
 80173b8:	80be      	strh	r6, [r7, #4]
 80173ba:	80fe      	strh	r6, [r7, #6]
 80173bc:	d1c2      	bne.n	8017344 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 80173be:	9b01      	ldr	r3, [sp, #4]
 80173c0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80173c2:	eba3 0c0c 	sub.w	ip, r3, ip
 80173c6:	6903      	ldr	r3, [r0, #16]
 80173c8:	8899      	ldrh	r1, [r3, #4]
 80173ca:	4461      	add	r1, ip
 80173cc:	8099      	strh	r1, [r3, #4]
 80173ce:	990c      	ldr	r1, [sp, #48]	; 0x30
 80173d0:	3720      	adds	r7, #32
 80173d2:	1a7f      	subs	r7, r7, r1
 80173d4:	88d9      	ldrh	r1, [r3, #6]
 80173d6:	fb0c 1c07 	mla	ip, ip, r7, r1
 80173da:	f8a3 c006 	strh.w	ip, [r3, #6]
 80173de:	e60e      	b.n	8016ffe <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80173e0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80173e2:	f04f 34ff 	mov.w	r4, #4294967295
 80173e6:	940d      	str	r4, [sp, #52]	; 0x34
 80173e8:	437b      	muls	r3, r7
 80173ea:	4249      	negs	r1, r1
 80173ec:	2400      	movs	r4, #0
 80173ee:	e756      	b.n	801729e <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 80173f0:	9905      	ldr	r1, [sp, #20]
 80173f2:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 80173f6:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 80173fa:	f001 011f 	and.w	r1, r1, #31
 80173fe:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8017402:	9102      	str	r1, [sp, #8]
 8017404:	9904      	ldr	r1, [sp, #16]
 8017406:	45f3      	cmp	fp, lr
 8017408:	f009 0c1f 	and.w	ip, r9, #31
 801740c:	eba1 0406 	sub.w	r4, r1, r6
 8017410:	d108      	bne.n	8017424 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8017412:	9b02      	ldr	r3, [sp, #8]
 8017414:	449c      	add	ip, r3
 8017416:	44a0      	add	r8, r4
 8017418:	fb04 a40c 	mla	r4, r4, ip, sl
 801741c:	f8a7 8004 	strh.w	r8, [r7, #4]
 8017420:	80fc      	strh	r4, [r7, #6]
 8017422:	e458      	b.n	8016cd6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8017424:	9905      	ldr	r1, [sp, #20]
 8017426:	ebb1 0109 	subs.w	r1, r1, r9
 801742a:	bf5b      	ittet	pl
 801742c:	f1cc 0520 	rsbpl	r5, ip, #32
 8017430:	436c      	mulpl	r4, r5
 8017432:	2500      	movmi	r5, #0
 8017434:	2520      	movpl	r5, #32
 8017436:	bf44      	itt	mi
 8017438:	fb04 f40c 	mulmi.w	r4, r4, ip
 801743c:	4249      	negmi	r1, r1
 801743e:	9501      	str	r5, [sp, #4]
 8017440:	9b01      	ldr	r3, [sp, #4]
 8017442:	fb94 f5f1 	sdiv	r5, r4, r1
 8017446:	fb01 4415 	mls	r4, r1, r5, r4
 801744a:	bf54      	ite	pl
 801744c:	f04f 0901 	movpl.w	r9, #1
 8017450:	f04f 39ff 	movmi.w	r9, #4294967295
 8017454:	2c00      	cmp	r4, #0
 8017456:	bfb8      	it	lt
 8017458:	f105 35ff 	addlt.w	r5, r5, #4294967295
 801745c:	449c      	add	ip, r3
 801745e:	44a8      	add	r8, r5
 8017460:	fb05 ac0c 	mla	ip, r5, ip, sl
 8017464:	f8a7 8004 	strh.w	r8, [r7, #4]
 8017468:	f8a7 c006 	strh.w	ip, [r7, #6]
 801746c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8017470:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8017474:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8017478:	bfb8      	it	lt
 801747a:	1864      	addlt	r4, r4, r1
 801747c:	ea58 0707 	orrs.w	r7, r8, r7
 8017480:	eb0b 0309 	add.w	r3, fp, r9
 8017484:	d011      	beq.n	80174aa <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8017486:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 801748a:	f1b8 0f00 	cmp.w	r8, #0
 801748e:	db0c      	blt.n	80174aa <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8017490:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8017492:	45b8      	cmp	r8, r7
 8017494:	da09      	bge.n	80174aa <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8017496:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 801749a:	45b8      	cmp	r8, r7
 801749c:	bf3c      	itt	cc
 801749e:	f10c 0708 	addcc.w	r7, ip, #8
 80174a2:	6107      	strcc	r7, [r0, #16]
 80174a4:	f108 0701 	add.w	r7, r8, #1
 80174a8:	6087      	str	r7, [r0, #8]
 80174aa:	6907      	ldr	r7, [r0, #16]
 80174ac:	f04f 0c00 	mov.w	ip, #0
 80174b0:	b212      	sxth	r2, r2
 80174b2:	459e      	cmp	lr, r3
 80174b4:	803b      	strh	r3, [r7, #0]
 80174b6:	807a      	strh	r2, [r7, #2]
 80174b8:	f8a7 c004 	strh.w	ip, [r7, #4]
 80174bc:	f8a7 c006 	strh.w	ip, [r7, #6]
 80174c0:	442e      	add	r6, r5
 80174c2:	d04d      	beq.n	8017560 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 80174c4:	9f04      	ldr	r7, [sp, #16]
 80174c6:	1bbf      	subs	r7, r7, r6
 80174c8:	443d      	add	r5, r7
 80174ca:	016d      	lsls	r5, r5, #5
 80174cc:	fb95 f8f1 	sdiv	r8, r5, r1
 80174d0:	fb01 5518 	mls	r5, r1, r8, r5
 80174d4:	4565      	cmp	r5, ip
 80174d6:	bfb8      	it	lt
 80174d8:	f108 38ff 	addlt.w	r8, r8, #4294967295
 80174dc:	f108 0701 	add.w	r7, r8, #1
 80174e0:	bfb8      	it	lt
 80174e2:	186d      	addlt	r5, r5, r1
 80174e4:	1a64      	subs	r4, r4, r1
 80174e6:	9703      	str	r7, [sp, #12]
 80174e8:	f04f 0a00 	mov.w	sl, #0
 80174ec:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80174f0:	1964      	adds	r4, r4, r5
 80174f2:	bf58      	it	pl
 80174f4:	9f03      	ldrpl	r7, [sp, #12]
 80174f6:	f8bc b004 	ldrh.w	fp, [ip, #4]
 80174fa:	bf48      	it	mi
 80174fc:	4647      	movmi	r7, r8
 80174fe:	44bb      	add	fp, r7
 8017500:	f8ac b004 	strh.w	fp, [ip, #4]
 8017504:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8017508:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 801750c:	f8ac b006 	strh.w	fp, [ip, #6]
 8017510:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8017514:	443e      	add	r6, r7
 8017516:	f8bc b006 	ldrh.w	fp, [ip, #6]
 801751a:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 801751e:	bf58      	it	pl
 8017520:	1a64      	subpl	r4, r4, r1
 8017522:	ea5b 0707 	orrs.w	r7, fp, r7
 8017526:	444b      	add	r3, r9
 8017528:	d011      	beq.n	801754e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 801752a:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 801752e:	f1bb 0f00 	cmp.w	fp, #0
 8017532:	db0c      	blt.n	801754e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8017534:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8017536:	45bb      	cmp	fp, r7
 8017538:	da09      	bge.n	801754e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 801753a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 801753e:	45bb      	cmp	fp, r7
 8017540:	bf3c      	itt	cc
 8017542:	f10c 0708 	addcc.w	r7, ip, #8
 8017546:	6107      	strcc	r7, [r0, #16]
 8017548:	f10b 0701 	add.w	r7, fp, #1
 801754c:	6087      	str	r7, [r0, #8]
 801754e:	6907      	ldr	r7, [r0, #16]
 8017550:	459e      	cmp	lr, r3
 8017552:	803b      	strh	r3, [r7, #0]
 8017554:	807a      	strh	r2, [r7, #2]
 8017556:	f8a7 a004 	strh.w	sl, [r7, #4]
 801755a:	f8a7 a006 	strh.w	sl, [r7, #6]
 801755e:	d1c5      	bne.n	80174ec <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8017560:	9b04      	ldr	r3, [sp, #16]
 8017562:	1b9e      	subs	r6, r3, r6
 8017564:	6903      	ldr	r3, [r0, #16]
 8017566:	889a      	ldrh	r2, [r3, #4]
 8017568:	4432      	add	r2, r6
 801756a:	809a      	strh	r2, [r3, #4]
 801756c:	9a02      	ldr	r2, [sp, #8]
 801756e:	f102 0c20 	add.w	ip, r2, #32
 8017572:	9a01      	ldr	r2, [sp, #4]
 8017574:	ebac 0c02 	sub.w	ip, ip, r2
 8017578:	88da      	ldrh	r2, [r3, #6]
 801757a:	fb06 260c 	mla	r6, r6, ip, r2
 801757e:	80de      	strh	r6, [r3, #6]
 8017580:	f7ff bba9 	b.w	8016cd6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

08017584 <_ZN8touchgfx7Outline6lineToEii>:
 8017584:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8017586:	079b      	lsls	r3, r3, #30
 8017588:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801758a:	460e      	mov	r6, r1
 801758c:	4615      	mov	r5, r2
 801758e:	d511      	bpl.n	80175b4 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8017590:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8017594:	ea86 0701 	eor.w	r7, r6, r1
 8017598:	ea85 0302 	eor.w	r3, r5, r2
 801759c:	433b      	orrs	r3, r7
 801759e:	d009      	beq.n	80175b4 <_ZN8touchgfx7Outline6lineToEii+0x30>
 80175a0:	4633      	mov	r3, r6
 80175a2:	9500      	str	r5, [sp, #0]
 80175a4:	f7ff fb3e 	bl	8016c24 <_ZN8touchgfx7Outline10renderLineEiiii>
 80175a8:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80175aa:	e9c0 6505 	strd	r6, r5, [r0, #20]
 80175ae:	f043 0301 	orr.w	r3, r3, #1
 80175b2:	6243      	str	r3, [r0, #36]	; 0x24
 80175b4:	b003      	add	sp, #12
 80175b6:	bdf0      	pop	{r4, r5, r6, r7, pc}

080175b8 <_ZN8touchgfx7Outline6moveToEii>:
 80175b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80175ba:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80175bc:	4615      	mov	r5, r2
 80175be:	079a      	lsls	r2, r3, #30
 80175c0:	4604      	mov	r4, r0
 80175c2:	460e      	mov	r6, r1
 80175c4:	d401      	bmi.n	80175ca <_ZN8touchgfx7Outline6moveToEii+0x12>
 80175c6:	f7ff faf9 	bl	8016bbc <_ZN8touchgfx7Outline5resetEv>
 80175ca:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80175cc:	07db      	lsls	r3, r3, #31
 80175ce:	d504      	bpl.n	80175da <_ZN8touchgfx7Outline6moveToEii+0x22>
 80175d0:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 80175d4:	4620      	mov	r0, r4
 80175d6:	f7ff ffd5 	bl	8017584 <_ZN8touchgfx7Outline6lineToEii>
 80175da:	6923      	ldr	r3, [r4, #16]
 80175dc:	f9b3 2000 	ldrsh.w	r2, [r3]
 80175e0:	1170      	asrs	r0, r6, #5
 80175e2:	4290      	cmp	r0, r2
 80175e4:	ea4f 1165 	mov.w	r1, r5, asr #5
 80175e8:	d103      	bne.n	80175f2 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 80175ea:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80175ee:	4291      	cmp	r1, r2
 80175f0:	d01a      	beq.n	8017628 <_ZN8touchgfx7Outline6moveToEii+0x70>
 80175f2:	88df      	ldrh	r7, [r3, #6]
 80175f4:	889a      	ldrh	r2, [r3, #4]
 80175f6:	433a      	orrs	r2, r7
 80175f8:	d010      	beq.n	801761c <_ZN8touchgfx7Outline6moveToEii+0x64>
 80175fa:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80175fe:	2a00      	cmp	r2, #0
 8017600:	db0c      	blt.n	801761c <_ZN8touchgfx7Outline6moveToEii+0x64>
 8017602:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8017604:	42ba      	cmp	r2, r7
 8017606:	da09      	bge.n	801761c <_ZN8touchgfx7Outline6moveToEii+0x64>
 8017608:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 801760c:	42ba      	cmp	r2, r7
 801760e:	bf38      	it	cc
 8017610:	3308      	addcc	r3, #8
 8017612:	f102 0201 	add.w	r2, r2, #1
 8017616:	bf38      	it	cc
 8017618:	6123      	strcc	r3, [r4, #16]
 801761a:	60a2      	str	r2, [r4, #8]
 801761c:	6923      	ldr	r3, [r4, #16]
 801761e:	2200      	movs	r2, #0
 8017620:	8018      	strh	r0, [r3, #0]
 8017622:	8059      	strh	r1, [r3, #2]
 8017624:	809a      	strh	r2, [r3, #4]
 8017626:	80da      	strh	r2, [r3, #6]
 8017628:	6166      	str	r6, [r4, #20]
 801762a:	e9c4 5606 	strd	r5, r6, [r4, #24]
 801762e:	6225      	str	r5, [r4, #32]
 8017630:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08017632 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8017632:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017636:	b0d0      	sub	sp, #320	; 0x140
 8017638:	466c      	mov	r4, sp
 801763a:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 801763e:	4627      	mov	r7, r4
 8017640:	1a0d      	subs	r5, r1, r0
 8017642:	2d48      	cmp	r5, #72	; 0x48
 8017644:	f100 0308 	add.w	r3, r0, #8
 8017648:	f340 80d5 	ble.w	80177f6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 801764c:	112d      	asrs	r5, r5, #4
 801764e:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 8017652:	f9b0 9000 	ldrsh.w	r9, [r0]
 8017656:	6816      	ldr	r6, [r2, #0]
 8017658:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 801765c:	6006      	str	r6, [r0, #0]
 801765e:	6856      	ldr	r6, [r2, #4]
 8017660:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8017664:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8017668:	6046      	str	r6, [r0, #4]
 801766a:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 801766e:	f8a2 8002 	strh.w	r8, [r2, #2]
 8017672:	f8a2 e004 	strh.w	lr, [r2, #4]
 8017676:	f8a2 c006 	strh.w	ip, [r2, #6]
 801767a:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 801767e:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 8017682:	4565      	cmp	r5, ip
 8017684:	f1a1 0208 	sub.w	r2, r1, #8
 8017688:	db06      	blt.n	8017698 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 801768a:	d119      	bne.n	80176c0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 801768c:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8017690:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8017694:	42ae      	cmp	r6, r5
 8017696:	dd13      	ble.n	80176c0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8017698:	460e      	mov	r6, r1
 801769a:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 801769e:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 80176a2:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 80176a6:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 80176aa:	601d      	str	r5, [r3, #0]
 80176ac:	6875      	ldr	r5, [r6, #4]
 80176ae:	605d      	str	r5, [r3, #4]
 80176b0:	f821 9c08 	strh.w	r9, [r1, #-8]
 80176b4:	f821 cc06 	strh.w	ip, [r1, #-6]
 80176b8:	f821 8c04 	strh.w	r8, [r1, #-4]
 80176bc:	f821 ec02 	strh.w	lr, [r1, #-2]
 80176c0:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 80176c4:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 80176c8:	42ae      	cmp	r6, r5
 80176ca:	db06      	blt.n	80176da <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 80176cc:	d116      	bne.n	80176fc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 80176ce:	f9b0 c000 	ldrsh.w	ip, [r0]
 80176d2:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 80176d6:	45ac      	cmp	ip, r5
 80176d8:	da10      	bge.n	80176fc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 80176da:	681d      	ldr	r5, [r3, #0]
 80176dc:	f9b0 8000 	ldrsh.w	r8, [r0]
 80176e0:	6005      	str	r5, [r0, #0]
 80176e2:	685d      	ldr	r5, [r3, #4]
 80176e4:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 80176e8:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 80176ec:	f8a0 8008 	strh.w	r8, [r0, #8]
 80176f0:	6045      	str	r5, [r0, #4]
 80176f2:	8146      	strh	r6, [r0, #10]
 80176f4:	f8a0 e00c 	strh.w	lr, [r0, #12]
 80176f8:	f8a0 c00e 	strh.w	ip, [r0, #14]
 80176fc:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8017700:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8017704:	4565      	cmp	r5, ip
 8017706:	db06      	blt.n	8017716 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 8017708:	d119      	bne.n	801773e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801770a:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 801770e:	f9b0 5000 	ldrsh.w	r5, [r0]
 8017712:	42ae      	cmp	r6, r5
 8017714:	da13      	bge.n	801773e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8017716:	460e      	mov	r6, r1
 8017718:	f9b0 9000 	ldrsh.w	r9, [r0]
 801771c:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8017720:	6005      	str	r5, [r0, #0]
 8017722:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 8017726:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 801772a:	6875      	ldr	r5, [r6, #4]
 801772c:	6045      	str	r5, [r0, #4]
 801772e:	f821 9c08 	strh.w	r9, [r1, #-8]
 8017732:	f821 cc06 	strh.w	ip, [r1, #-6]
 8017736:	f821 8c04 	strh.w	r8, [r1, #-4]
 801773a:	f821 ec02 	strh.w	lr, [r1, #-2]
 801773e:	3308      	adds	r3, #8
 8017740:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8017744:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8017748:	45e6      	cmp	lr, ip
 801774a:	dbf8      	blt.n	801773e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801774c:	d105      	bne.n	801775a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 801774e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8017752:	f9b0 5000 	ldrsh.w	r5, [r0]
 8017756:	42ae      	cmp	r6, r5
 8017758:	dbf1      	blt.n	801773e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801775a:	4615      	mov	r5, r2
 801775c:	3a08      	subs	r2, #8
 801775e:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 8017762:	45b4      	cmp	ip, r6
 8017764:	dbf9      	blt.n	801775a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8017766:	d105      	bne.n	8017774 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 8017768:	f9b0 8000 	ldrsh.w	r8, [r0]
 801776c:	f9b2 6000 	ldrsh.w	r6, [r2]
 8017770:	45b0      	cmp	r8, r6
 8017772:	dbf2      	blt.n	801775a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8017774:	4293      	cmp	r3, r2
 8017776:	f1a5 0608 	sub.w	r6, r5, #8
 801777a:	d816      	bhi.n	80177aa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 801777c:	f8d6 c000 	ldr.w	ip, [r6]
 8017780:	f9b3 a000 	ldrsh.w	sl, [r3]
 8017784:	f8c3 c000 	str.w	ip, [r3]
 8017788:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 801778c:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8017790:	f8d6 c004 	ldr.w	ip, [r6, #4]
 8017794:	f8c3 c004 	str.w	ip, [r3, #4]
 8017798:	f825 ac08 	strh.w	sl, [r5, #-8]
 801779c:	f825 ec06 	strh.w	lr, [r5, #-6]
 80177a0:	f825 9c04 	strh.w	r9, [r5, #-4]
 80177a4:	f825 8c02 	strh.w	r8, [r5, #-2]
 80177a8:	e7c9      	b.n	801773e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80177aa:	f8d6 e000 	ldr.w	lr, [r6]
 80177ae:	f9b0 a000 	ldrsh.w	sl, [r0]
 80177b2:	f8c0 e000 	str.w	lr, [r0]
 80177b6:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 80177ba:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 80177be:	f8d6 e004 	ldr.w	lr, [r6, #4]
 80177c2:	f8c0 e004 	str.w	lr, [r0, #4]
 80177c6:	f825 ac08 	strh.w	sl, [r5, #-8]
 80177ca:	f825 cc06 	strh.w	ip, [r5, #-6]
 80177ce:	f825 9c04 	strh.w	r9, [r5, #-4]
 80177d2:	f825 8c02 	strh.w	r8, [r5, #-2]
 80177d6:	1acd      	subs	r5, r1, r3
 80177d8:	1a16      	subs	r6, r2, r0
 80177da:	10ed      	asrs	r5, r5, #3
 80177dc:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 80177e0:	bfb5      	itete	lt
 80177e2:	e9c4 0200 	strdlt	r0, r2, [r4]
 80177e6:	e9c4 3100 	strdge	r3, r1, [r4]
 80177ea:	460a      	movlt	r2, r1
 80177ec:	4603      	movge	r3, r0
 80177ee:	3408      	adds	r4, #8
 80177f0:	4618      	mov	r0, r3
 80177f2:	4611      	mov	r1, r2
 80177f4:	e724      	b.n	8017640 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 80177f6:	4299      	cmp	r1, r3
 80177f8:	d928      	bls.n	801784c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 80177fa:	f1a3 0210 	sub.w	r2, r3, #16
 80177fe:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 8017802:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 8017806:	45ac      	cmp	ip, r5
 8017808:	db06      	blt.n	8017818 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 801780a:	d11d      	bne.n	8017848 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 801780c:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 8017810:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 8017814:	42ae      	cmp	r6, r5
 8017816:	da17      	bge.n	8017848 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8017818:	4615      	mov	r5, r2
 801781a:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 801781e:	f855 6f08 	ldr.w	r6, [r5, #8]!
 8017822:	6116      	str	r6, [r2, #16]
 8017824:	686e      	ldr	r6, [r5, #4]
 8017826:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 801782a:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 801782e:	f8a2 9008 	strh.w	r9, [r2, #8]
 8017832:	42a8      	cmp	r0, r5
 8017834:	6156      	str	r6, [r2, #20]
 8017836:	f8a2 c00a 	strh.w	ip, [r2, #10]
 801783a:	f8a2 800c 	strh.w	r8, [r2, #12]
 801783e:	f8a2 e00e 	strh.w	lr, [r2, #14]
 8017842:	f1a2 0208 	sub.w	r2, r2, #8
 8017846:	d1da      	bne.n	80177fe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 8017848:	3308      	adds	r3, #8
 801784a:	e7d4      	b.n	80177f6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 801784c:	42bc      	cmp	r4, r7
 801784e:	d903      	bls.n	8017858 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 8017850:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8017854:	3c08      	subs	r4, #8
 8017856:	e6f3      	b.n	8017640 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8017858:	b050      	add	sp, #320	; 0x140
 801785a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801785e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 801785e:	b510      	push	{r4, lr}
 8017860:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8017862:	07da      	lsls	r2, r3, #31
 8017864:	4604      	mov	r4, r0
 8017866:	d507      	bpl.n	8017878 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 8017868:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 801786c:	f7ff fe8a 	bl	8017584 <_ZN8touchgfx7Outline6lineToEii>
 8017870:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8017872:	f023 0301 	bic.w	r3, r3, #1
 8017876:	6243      	str	r3, [r0, #36]	; 0x24
 8017878:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801787a:	079b      	lsls	r3, r3, #30
 801787c:	d521      	bpl.n	80178c2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 801787e:	6923      	ldr	r3, [r4, #16]
 8017880:	88d9      	ldrh	r1, [r3, #6]
 8017882:	889a      	ldrh	r2, [r3, #4]
 8017884:	430a      	orrs	r2, r1
 8017886:	d010      	beq.n	80178aa <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8017888:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801788c:	2a00      	cmp	r2, #0
 801788e:	db0c      	blt.n	80178aa <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8017890:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8017892:	428a      	cmp	r2, r1
 8017894:	da09      	bge.n	80178aa <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8017896:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 801789a:	4291      	cmp	r1, r2
 801789c:	bf88      	it	hi
 801789e:	3308      	addhi	r3, #8
 80178a0:	f102 0201 	add.w	r2, r2, #1
 80178a4:	bf88      	it	hi
 80178a6:	6123      	strhi	r3, [r4, #16]
 80178a8:	60a2      	str	r2, [r4, #8]
 80178aa:	68a1      	ldr	r1, [r4, #8]
 80178ac:	b129      	cbz	r1, 80178ba <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 80178ae:	6863      	ldr	r3, [r4, #4]
 80178b0:	4299      	cmp	r1, r3
 80178b2:	d802      	bhi.n	80178ba <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 80178b4:	68e0      	ldr	r0, [r4, #12]
 80178b6:	f7ff febc 	bl	8017632 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 80178ba:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80178bc:	f023 0302 	bic.w	r3, r3, #2
 80178c0:	6263      	str	r3, [r4, #36]	; 0x24
 80178c2:	68e0      	ldr	r0, [r4, #12]
 80178c4:	bd10      	pop	{r4, pc}
	...

080178c8 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 80178c8:	4b01      	ldr	r3, [pc, #4]	; (80178d0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 80178ca:	6818      	ldr	r0, [r3, #0]
 80178cc:	4770      	bx	lr
 80178ce:	bf00      	nop
 80178d0:	20002254 	.word	0x20002254

080178d4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 80178d4:	4b01      	ldr	r3, [pc, #4]	; (80178dc <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 80178d6:	6818      	ldr	r0, [r3, #0]
 80178d8:	4770      	bx	lr
 80178da:	bf00      	nop
 80178dc:	20002258 	.word	0x20002258

080178e0 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 80178e0:	b510      	push	{r4, lr}
 80178e2:	6803      	ldr	r3, [r0, #0]
 80178e4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80178e6:	460c      	mov	r4, r1
 80178e8:	4798      	blx	r3
 80178ea:	1b03      	subs	r3, r0, r4
 80178ec:	4258      	negs	r0, r3
 80178ee:	4158      	adcs	r0, r3
 80178f0:	bd10      	pop	{r4, pc}
	...

080178f4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 80178f4:	4b01      	ldr	r3, [pc, #4]	; (80178fc <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 80178f6:	6019      	str	r1, [r3, #0]
 80178f8:	4770      	bx	lr
 80178fa:	bf00      	nop
 80178fc:	2000225c 	.word	0x2000225c

08017900 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8017900:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017904:	4696      	mov	lr, r2
 8017906:	4605      	mov	r5, r0
 8017908:	4614      	mov	r4, r2
 801790a:	460e      	mov	r6, r1
 801790c:	461f      	mov	r7, r3
 801790e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8017912:	b097      	sub	sp, #92	; 0x5c
 8017914:	f10d 0c1c 	add.w	ip, sp, #28
 8017918:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801791c:	f8de 3000 	ldr.w	r3, [lr]
 8017920:	f8cc 3000 	str.w	r3, [ip]
 8017924:	f104 0e14 	add.w	lr, r4, #20
 8017928:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801792c:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8017930:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8017934:	f8de 3000 	ldr.w	r3, [lr]
 8017938:	f8cc 3000 	str.w	r3, [ip]
 801793c:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8017940:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8017944:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8017948:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801794c:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8017950:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 8017954:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8017958:	f8de 3000 	ldr.w	r3, [lr]
 801795c:	f8cc 3000 	str.w	r3, [ip]
 8017960:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8017962:	682b      	ldr	r3, [r5, #0]
 8017964:	9201      	str	r2, [sp, #4]
 8017966:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 801796a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801796c:	9200      	str	r2, [sp, #0]
 801796e:	f8cd 8008 	str.w	r8, [sp, #8]
 8017972:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 8017976:	aa07      	add	r2, sp, #28
 8017978:	463b      	mov	r3, r7
 801797a:	4631      	mov	r1, r6
 801797c:	4628      	mov	r0, r5
 801797e:	47d8      	blx	fp
 8017980:	46a6      	mov	lr, r4
 8017982:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8017986:	f10d 0c1c 	add.w	ip, sp, #28
 801798a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801798e:	f8de 3000 	ldr.w	r3, [lr]
 8017992:	f8cc 3000 	str.w	r3, [ip]
 8017996:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 801799a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801799e:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80179a2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80179a6:	343c      	adds	r4, #60	; 0x3c
 80179a8:	f8de 3000 	ldr.w	r3, [lr]
 80179ac:	f8cc 3000 	str.w	r3, [ip]
 80179b0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80179b2:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 80179b6:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80179ba:	6823      	ldr	r3, [r4, #0]
 80179bc:	f8cc 3000 	str.w	r3, [ip]
 80179c0:	682b      	ldr	r3, [r5, #0]
 80179c2:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80179c6:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80179c8:	9201      	str	r2, [sp, #4]
 80179ca:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80179cc:	9200      	str	r2, [sp, #0]
 80179ce:	f8cd 8008 	str.w	r8, [sp, #8]
 80179d2:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 80179d4:	aa07      	add	r2, sp, #28
 80179d6:	463b      	mov	r3, r7
 80179d8:	4631      	mov	r1, r6
 80179da:	4628      	mov	r0, r5
 80179dc:	47a0      	blx	r4
 80179de:	b017      	add	sp, #92	; 0x5c
 80179e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080179e4 <_ZN8touchgfx3LCD28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 80179e4:	2000      	movs	r0, #0
 80179e6:	4770      	bx	lr

080179e8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 80179e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80179ec:	b08d      	sub	sp, #52	; 0x34
 80179ee:	4688      	mov	r8, r1
 80179f0:	9916      	ldr	r1, [sp, #88]	; 0x58
 80179f2:	f8d3 c000 	ldr.w	ip, [r3]
 80179f6:	680f      	ldr	r7, [r1, #0]
 80179f8:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 80179fc:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8017a00:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8017a04:	edd3 6a07 	vldr	s13, [r3, #28]
 8017a08:	9918      	ldr	r1, [sp, #96]	; 0x60
 8017a0a:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8017a0e:	f9b1 9000 	ldrsh.w	r9, [r1]
 8017a12:	f9ba 1000 	ldrsh.w	r1, [sl]
 8017a16:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 8017a1a:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8017a1e:	eba7 070c 	sub.w	r7, r7, ip
 8017a22:	42bc      	cmp	r4, r7
 8017a24:	bfa8      	it	ge
 8017a26:	463c      	movge	r4, r7
 8017a28:	ee07 4a90 	vmov	s15, r4
 8017a2c:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8017a30:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8017a34:	ee25 4a04 	vmul.f32	s8, s10, s8
 8017a38:	ee65 4a24 	vmul.f32	s9, s10, s9
 8017a3c:	ee25 5a27 	vmul.f32	s10, s10, s15
 8017a40:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8017a44:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8017a48:	eb09 0e0c 	add.w	lr, r9, ip
 8017a4c:	4571      	cmp	r1, lr
 8017a4e:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8017a52:	ee32 1a05 	vadd.f32	s2, s4, s10
 8017a56:	ee36 0a84 	vadd.f32	s0, s13, s8
 8017a5a:	ee61 1a87 	vmul.f32	s3, s3, s14
 8017a5e:	ee22 2a07 	vmul.f32	s4, s4, s14
 8017a62:	f340 808d 	ble.w	8017b80 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 8017a66:	eba1 060e 	sub.w	r6, r1, lr
 8017a6a:	fb96 f5f4 	sdiv	r5, r6, r4
 8017a6e:	ee07 5a10 	vmov	s14, r5
 8017a72:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017a76:	2d00      	cmp	r5, #0
 8017a78:	fb04 6615 	mls	r6, r4, r5, r6
 8017a7c:	eea7 0a04 	vfma.f32	s0, s14, s8
 8017a80:	eee7 0a24 	vfma.f32	s1, s14, s9
 8017a84:	eea7 1a05 	vfma.f32	s2, s14, s10
 8017a88:	dd13      	ble.n	8017ab2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 8017a8a:	ee70 6a44 	vsub.f32	s13, s0, s8
 8017a8e:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8017a92:	eef5 6a40 	vcmp.f32	s13, #0.0
 8017a96:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017a9a:	bf18      	it	ne
 8017a9c:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8017aa0:	ee31 2a45 	vsub.f32	s4, s2, s10
 8017aa4:	bf08      	it	eq
 8017aa6:	eeb0 7a67 	vmoveq.f32	s14, s15
 8017aaa:	ee61 1a87 	vmul.f32	s3, s3, s14
 8017aae:	ee22 2a07 	vmul.f32	s4, s4, s14
 8017ab2:	fb05 f204 	mul.w	r2, r5, r4
 8017ab6:	1abf      	subs	r7, r7, r2
 8017ab8:	4494      	add	ip, r2
 8017aba:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8017abe:	4411      	add	r1, r2
 8017ac0:	eb09 020c 	add.w	r2, r9, ip
 8017ac4:	443a      	add	r2, r7
 8017ac6:	b209      	sxth	r1, r1
 8017ac8:	428a      	cmp	r2, r1
 8017aca:	bfc4      	itt	gt
 8017acc:	eba1 0209 	subgt.w	r2, r1, r9
 8017ad0:	eba2 070c 	subgt.w	r7, r2, ip
 8017ad4:	2f00      	cmp	r7, #0
 8017ad6:	dd50      	ble.n	8017b7a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 8017ad8:	fb97 f1f4 	sdiv	r1, r7, r4
 8017adc:	fb04 7211 	mls	r2, r4, r1, r7
 8017ae0:	b90a      	cbnz	r2, 8017ae6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 8017ae2:	3901      	subs	r1, #1
 8017ae4:	4622      	mov	r2, r4
 8017ae6:	eec7 3a80 	vdiv.f32	s7, s15, s0
 8017aea:	6840      	ldr	r0, [r0, #4]
 8017aec:	900b      	str	r0, [sp, #44]	; 0x2c
 8017aee:	f8d0 a000 	ldr.w	sl, [r0]
 8017af2:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8017af4:	9008      	str	r0, [sp, #32]
 8017af6:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 8017afa:	9818      	ldr	r0, [sp, #96]	; 0x60
 8017afc:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8017b00:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8017b04:	695b      	ldr	r3, [r3, #20]
 8017b06:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8017b08:	445b      	add	r3, fp
 8017b0a:	eef0 6a42 	vmov.f32	s13, s4
 8017b0e:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8017b12:	ee21 3a23 	vmul.f32	s6, s2, s7
 8017b16:	ee72 7ae1 	vsub.f32	s15, s5, s3
 8017b1a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017b1e:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8017b22:	9307      	str	r3, [sp, #28]
 8017b24:	ee17 7a90 	vmov	r7, s15
 8017b28:	ee73 7a42 	vsub.f32	s15, s6, s4
 8017b2c:	eeb0 7a61 	vmov.f32	s14, s3
 8017b30:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8017b34:	ee16 3a90 	vmov	r3, s13
 8017b38:	fb97 f7f4 	sdiv	r7, r7, r4
 8017b3c:	ee17 ca90 	vmov	ip, s15
 8017b40:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8017b44:	fb9c fcf4 	sdiv	ip, ip, r4
 8017b48:	fb0c 3306 	mla	r3, ip, r6, r3
 8017b4c:	9302      	str	r3, [sp, #8]
 8017b4e:	ee17 3a10 	vmov	r3, s14
 8017b52:	44b6      	add	lr, r6
 8017b54:	fb04 e505 	mla	r5, r4, r5, lr
 8017b58:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8017b5c:	fb07 3706 	mla	r7, r7, r6, r3
 8017b60:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8017b64:	e9cd 4700 	strd	r4, r7, [sp]
 8017b68:	2900      	cmp	r1, #0
 8017b6a:	bfcc      	ite	gt
 8017b6c:	46a1      	movgt	r9, r4
 8017b6e:	4691      	movle	r9, r2
 8017b70:	eba9 0306 	sub.w	r3, r9, r6
 8017b74:	f8da 4008 	ldr.w	r4, [sl, #8]
 8017b78:	47a0      	blx	r4
 8017b7a:	b00d      	add	sp, #52	; 0x34
 8017b7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017b80:	2500      	movs	r5, #0
 8017b82:	462e      	mov	r6, r5
 8017b84:	e799      	b.n	8017aba <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

08017b88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8017b88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017b8c:	b0db      	sub	sp, #364	; 0x16c
 8017b8e:	461d      	mov	r5, r3
 8017b90:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8017b94:	930a      	str	r3, [sp, #40]	; 0x28
 8017b96:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 8017b9a:	930b      	str	r3, [sp, #44]	; 0x2c
 8017b9c:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8017ba0:	9310      	str	r3, [sp, #64]	; 0x40
 8017ba2:	6803      	ldr	r3, [r0, #0]
 8017ba4:	910f      	str	r1, [sp, #60]	; 0x3c
 8017ba6:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 8017ba8:	9009      	str	r0, [sp, #36]	; 0x24
 8017baa:	4614      	mov	r4, r2
 8017bac:	4629      	mov	r1, r5
 8017bae:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8017bb2:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 8017bb6:	47b8      	blx	r7
 8017bb8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017bba:	6058      	str	r0, [r3, #4]
 8017bbc:	2800      	cmp	r0, #0
 8017bbe:	f000 83a1 	beq.w	8018304 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017bc2:	682b      	ldr	r3, [r5, #0]
 8017bc4:	9314      	str	r3, [sp, #80]	; 0x50
 8017bc6:	686b      	ldr	r3, [r5, #4]
 8017bc8:	9315      	str	r3, [sp, #84]	; 0x54
 8017bca:	4bc4      	ldr	r3, [pc, #784]	; (8017edc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8017bcc:	ed94 7a02 	vldr	s14, [r4, #8]
 8017bd0:	7819      	ldrb	r1, [r3, #0]
 8017bd2:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 8017bd6:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 8017bda:	2900      	cmp	r1, #0
 8017bdc:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8017be0:	bf16      	itet	ne
 8017be2:	4619      	movne	r1, r3
 8017be4:	4611      	moveq	r1, r2
 8017be6:	4613      	movne	r3, r2
 8017be8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017bec:	9116      	str	r1, [sp, #88]	; 0x58
 8017bee:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 8017bf2:	f240 8387 	bls.w	8018304 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017bf6:	ed94 7a07 	vldr	s14, [r4, #28]
 8017bfa:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8017bfe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017c02:	f240 837f 	bls.w	8018304 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017c06:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 8017c0a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8017c0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017c12:	f240 8377 	bls.w	8018304 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017c16:	6822      	ldr	r2, [r4, #0]
 8017c18:	4bb1      	ldr	r3, [pc, #708]	; (8017ee0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 8017c1a:	429a      	cmp	r2, r3
 8017c1c:	f2c0 8372 	blt.w	8018304 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017c20:	49b0      	ldr	r1, [pc, #704]	; (8017ee4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8017c22:	6963      	ldr	r3, [r4, #20]
 8017c24:	428a      	cmp	r2, r1
 8017c26:	f300 836d 	bgt.w	8018304 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017c2a:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8017c2e:	48ae      	ldr	r0, [pc, #696]	; (8017ee8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8017c30:	33ff      	adds	r3, #255	; 0xff
 8017c32:	4283      	cmp	r3, r0
 8017c34:	f200 8366 	bhi.w	8018304 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017c38:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8017c3a:	4dac      	ldr	r5, [pc, #688]	; (8017eec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8017c3c:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8017c40:	33ff      	adds	r3, #255	; 0xff
 8017c42:	42ab      	cmp	r3, r5
 8017c44:	f200 835e 	bhi.w	8018304 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017c48:	6862      	ldr	r2, [r4, #4]
 8017c4a:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8017c4e:	33ff      	adds	r3, #255	; 0xff
 8017c50:	4283      	cmp	r3, r0
 8017c52:	f200 8357 	bhi.w	8018304 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017c56:	69a1      	ldr	r1, [r4, #24]
 8017c58:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8017c5c:	33ff      	adds	r3, #255	; 0xff
 8017c5e:	4283      	cmp	r3, r0
 8017c60:	f200 8350 	bhi.w	8018304 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017c64:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8017c66:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 8017c6a:	30ff      	adds	r0, #255	; 0xff
 8017c6c:	42a8      	cmp	r0, r5
 8017c6e:	f200 8349 	bhi.w	8018304 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017c72:	428a      	cmp	r2, r1
 8017c74:	f280 8110 	bge.w	8017e98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8017c78:	429a      	cmp	r2, r3
 8017c7a:	f300 8119 	bgt.w	8017eb0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8017c7e:	4299      	cmp	r1, r3
 8017c80:	f280 811d 	bge.w	8017ebe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8017c84:	2502      	movs	r5, #2
 8017c86:	2701      	movs	r7, #1
 8017c88:	46a9      	mov	r9, r5
 8017c8a:	46b8      	mov	r8, r7
 8017c8c:	f04f 0a00 	mov.w	sl, #0
 8017c90:	4621      	mov	r1, r4
 8017c92:	a849      	add	r0, sp, #292	; 0x124
 8017c94:	f003 ffc6 	bl	801bc24 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8017c98:	4622      	mov	r2, r4
 8017c9a:	4653      	mov	r3, sl
 8017c9c:	a949      	add	r1, sp, #292	; 0x124
 8017c9e:	f8cd 9000 	str.w	r9, [sp]
 8017ca2:	a819      	add	r0, sp, #100	; 0x64
 8017ca4:	f004 f8ee 	bl	801be84 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8017ca8:	4622      	mov	r2, r4
 8017caa:	4653      	mov	r3, sl
 8017cac:	a949      	add	r1, sp, #292	; 0x124
 8017cae:	f8cd 8000 	str.w	r8, [sp]
 8017cb2:	a829      	add	r0, sp, #164	; 0xa4
 8017cb4:	f004 f8e6 	bl	801be84 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8017cb8:	4643      	mov	r3, r8
 8017cba:	4622      	mov	r2, r4
 8017cbc:	a949      	add	r1, sp, #292	; 0x124
 8017cbe:	f8cd 9000 	str.w	r9, [sp]
 8017cc2:	a839      	add	r0, sp, #228	; 0xe4
 8017cc4:	f004 f8de 	bl	801be84 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8017cc8:	42af      	cmp	r7, r5
 8017cca:	bfb5      	itete	lt
 8017ccc:	2300      	movlt	r3, #0
 8017cce:	2301      	movge	r3, #1
 8017cd0:	930e      	strlt	r3, [sp, #56]	; 0x38
 8017cd2:	930e      	strge	r3, [sp, #56]	; 0x38
 8017cd4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8017cd6:	e893 0003 	ldmia.w	r3, {r0, r1}
 8017cda:	af12      	add	r7, sp, #72	; 0x48
 8017cdc:	bfb9      	ittee	lt
 8017cde:	ad29      	addlt	r5, sp, #164	; 0xa4
 8017ce0:	ac19      	addlt	r4, sp, #100	; 0x64
 8017ce2:	ad19      	addge	r5, sp, #100	; 0x64
 8017ce4:	ac29      	addge	r4, sp, #164	; 0xa4
 8017ce6:	e887 0003 	stmia.w	r7, {r0, r1}
 8017cea:	b928      	cbnz	r0, 8017cf8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8017cec:	4b80      	ldr	r3, [pc, #512]	; (8017ef0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 8017cee:	6818      	ldr	r0, [r3, #0]
 8017cf0:	6803      	ldr	r3, [r0, #0]
 8017cf2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017cf4:	4798      	blx	r3
 8017cf6:	6038      	str	r0, [r7, #0]
 8017cf8:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8017cfa:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8017cfe:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8017d02:	930c      	str	r3, [sp, #48]	; 0x30
 8017d04:	990c      	ldr	r1, [sp, #48]	; 0x30
 8017d06:	6963      	ldr	r3, [r4, #20]
 8017d08:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8017d0a:	440b      	add	r3, r1
 8017d0c:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8017d10:	4408      	add	r0, r1
 8017d12:	b200      	sxth	r0, r0
 8017d14:	4283      	cmp	r3, r0
 8017d16:	900d      	str	r0, [sp, #52]	; 0x34
 8017d18:	f280 80dd 	bge.w	8017ed6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8017d1c:	428b      	cmp	r3, r1
 8017d1e:	da08      	bge.n	8017d32 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8017d20:	2a00      	cmp	r2, #0
 8017d22:	dd06      	ble.n	8017d32 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8017d24:	1acb      	subs	r3, r1, r3
 8017d26:	429a      	cmp	r2, r3
 8017d28:	f2c0 80e4 	blt.w	8017ef4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8017d2c:	2b00      	cmp	r3, #0
 8017d2e:	f300 80e2 	bgt.w	8017ef6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8017d32:	6967      	ldr	r7, [r4, #20]
 8017d34:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017d36:	443b      	add	r3, r7
 8017d38:	461f      	mov	r7, r3
 8017d3a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017d3c:	1bdf      	subs	r7, r3, r7
 8017d3e:	4297      	cmp	r7, r2
 8017d40:	bfa8      	it	ge
 8017d42:	4617      	movge	r7, r2
 8017d44:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8017d48:	2f00      	cmp	r7, #0
 8017d4a:	f340 8166 	ble.w	801801a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8017d4e:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8017d50:	6829      	ldr	r1, [r5, #0]
 8017d52:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017d56:	f9bb 3000 	ldrsh.w	r3, [fp]
 8017d5a:	6820      	ldr	r0, [r4, #0]
 8017d5c:	4411      	add	r1, r2
 8017d5e:	4299      	cmp	r1, r3
 8017d60:	dd1a      	ble.n	8017d98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8017d62:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8017d66:	440b      	add	r3, r1
 8017d68:	4402      	add	r2, r0
 8017d6a:	b21b      	sxth	r3, r3
 8017d6c:	429a      	cmp	r2, r3
 8017d6e:	dc13      	bgt.n	8017d98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8017d70:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017d72:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017d74:	681b      	ldr	r3, [r3, #0]
 8017d76:	9206      	str	r2, [sp, #24]
 8017d78:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8017d7a:	9205      	str	r2, [sp, #20]
 8017d7c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8017d7e:	9500      	str	r5, [sp, #0]
 8017d80:	e9cd b203 	strd	fp, r2, [sp, #12]
 8017d84:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8017d86:	9809      	ldr	r0, [sp, #36]	; 0x24
 8017d88:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8017d8c:	a912      	add	r1, sp, #72	; 0x48
 8017d8e:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8017d92:	aa49      	add	r2, sp, #292	; 0x124
 8017d94:	4623      	mov	r3, r4
 8017d96:	47c8      	blx	r9
 8017d98:	e9d4 2300 	ldrd	r2, r3, [r4]
 8017d9c:	441a      	add	r2, r3
 8017d9e:	6963      	ldr	r3, [r4, #20]
 8017da0:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8017da4:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8017da8:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8017dac:	68a1      	ldr	r1, [r4, #8]
 8017dae:	ed94 6a08 	vldr	s12, [r4, #32]
 8017db2:	6022      	str	r2, [r4, #0]
 8017db4:	3301      	adds	r3, #1
 8017db6:	6163      	str	r3, [r4, #20]
 8017db8:	69a3      	ldr	r3, [r4, #24]
 8017dba:	ee37 7a27 	vadd.f32	s14, s14, s15
 8017dbe:	3b01      	subs	r3, #1
 8017dc0:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8017dc4:	61a3      	str	r3, [r4, #24]
 8017dc6:	6923      	ldr	r3, [r4, #16]
 8017dc8:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8017dcc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8017dd0:	edd4 6a07 	vldr	s13, [r4, #28]
 8017dd4:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8017dd8:	440b      	add	r3, r1
 8017dda:	68e1      	ldr	r1, [r4, #12]
 8017ddc:	6123      	str	r3, [r4, #16]
 8017dde:	ee76 6a86 	vadd.f32	s13, s13, s12
 8017de2:	428b      	cmp	r3, r1
 8017de4:	edc4 6a07 	vstr	s13, [r4, #28]
 8017de8:	db15      	blt.n	8017e16 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 8017dea:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8017dee:	ee76 6a26 	vadd.f32	s13, s12, s13
 8017df2:	3201      	adds	r2, #1
 8017df4:	edc4 6a07 	vstr	s13, [r4, #28]
 8017df8:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8017dfc:	6022      	str	r2, [r4, #0]
 8017dfe:	ee36 7a87 	vadd.f32	s14, s13, s14
 8017e02:	1a5b      	subs	r3, r3, r1
 8017e04:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8017e08:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8017e0c:	6123      	str	r3, [r4, #16]
 8017e0e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8017e12:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8017e16:	e9d5 2300 	ldrd	r2, r3, [r5]
 8017e1a:	441a      	add	r2, r3
 8017e1c:	696b      	ldr	r3, [r5, #20]
 8017e1e:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8017e22:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8017e26:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8017e2a:	68a9      	ldr	r1, [r5, #8]
 8017e2c:	ed95 6a08 	vldr	s12, [r5, #32]
 8017e30:	602a      	str	r2, [r5, #0]
 8017e32:	3301      	adds	r3, #1
 8017e34:	616b      	str	r3, [r5, #20]
 8017e36:	69ab      	ldr	r3, [r5, #24]
 8017e38:	ee37 7a27 	vadd.f32	s14, s14, s15
 8017e3c:	3b01      	subs	r3, #1
 8017e3e:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8017e42:	61ab      	str	r3, [r5, #24]
 8017e44:	692b      	ldr	r3, [r5, #16]
 8017e46:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8017e4a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8017e4e:	edd5 6a07 	vldr	s13, [r5, #28]
 8017e52:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8017e56:	440b      	add	r3, r1
 8017e58:	68e9      	ldr	r1, [r5, #12]
 8017e5a:	612b      	str	r3, [r5, #16]
 8017e5c:	ee76 6a86 	vadd.f32	s13, s13, s12
 8017e60:	428b      	cmp	r3, r1
 8017e62:	edc5 6a07 	vstr	s13, [r5, #28]
 8017e66:	db15      	blt.n	8017e94 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8017e68:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8017e6c:	ee76 6a26 	vadd.f32	s13, s12, s13
 8017e70:	3201      	adds	r2, #1
 8017e72:	edc5 6a07 	vstr	s13, [r5, #28]
 8017e76:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8017e7a:	602a      	str	r2, [r5, #0]
 8017e7c:	ee36 7a87 	vadd.f32	s14, s13, s14
 8017e80:	1a5b      	subs	r3, r3, r1
 8017e82:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8017e86:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8017e8a:	612b      	str	r3, [r5, #16]
 8017e8c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8017e90:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8017e94:	3f01      	subs	r7, #1
 8017e96:	e757      	b.n	8017d48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8017e98:	4299      	cmp	r1, r3
 8017e9a:	dc13      	bgt.n	8017ec4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8017e9c:	429a      	cmp	r2, r3
 8017e9e:	da14      	bge.n	8017eca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8017ea0:	2502      	movs	r5, #2
 8017ea2:	2703      	movs	r7, #3
 8017ea4:	46a9      	mov	r9, r5
 8017ea6:	f04f 0800 	mov.w	r8, #0
 8017eaa:	f04f 0a01 	mov.w	sl, #1
 8017eae:	e6ef      	b.n	8017c90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8017eb0:	2501      	movs	r5, #1
 8017eb2:	2700      	movs	r7, #0
 8017eb4:	46a9      	mov	r9, r5
 8017eb6:	46b8      	mov	r8, r7
 8017eb8:	f04f 0a02 	mov.w	sl, #2
 8017ebc:	e6e8      	b.n	8017c90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8017ebe:	2501      	movs	r5, #1
 8017ec0:	2702      	movs	r7, #2
 8017ec2:	e6e1      	b.n	8017c88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8017ec4:	2500      	movs	r5, #0
 8017ec6:	2701      	movs	r7, #1
 8017ec8:	e7f4      	b.n	8017eb4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 8017eca:	2702      	movs	r7, #2
 8017ecc:	2503      	movs	r5, #3
 8017ece:	f04f 0900 	mov.w	r9, #0
 8017ed2:	46b8      	mov	r8, r7
 8017ed4:	e7e9      	b.n	8017eaa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 8017ed6:	4613      	mov	r3, r2
 8017ed8:	e728      	b.n	8017d2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 8017eda:	bf00      	nop
 8017edc:	20002244 	.word	0x20002244
 8017ee0:	fffd8f01 	.word	0xfffd8f01
 8017ee4:	00027100 	.word	0x00027100
 8017ee8:	0004e1ff 	.word	0x0004e1ff
 8017eec:	0004e1fe 	.word	0x0004e1fe
 8017ef0:	2000224c 	.word	0x2000224c
 8017ef4:	4613      	mov	r3, r2
 8017ef6:	992b      	ldr	r1, [sp, #172]	; 0xac
 8017ef8:	9111      	str	r1, [sp, #68]	; 0x44
 8017efa:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 8017efe:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 8017f02:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 8017f04:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 8017f08:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 8017f0c:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8017f10:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 8017f14:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 8017f18:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8017f1c:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8017f20:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8017f24:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 8017f28:	469e      	mov	lr, r3
 8017f2a:	469c      	mov	ip, r3
 8017f2c:	f04f 0900 	mov.w	r9, #0
 8017f30:	f1bc 0f00 	cmp.w	ip, #0
 8017f34:	d147      	bne.n	8017fc6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 8017f36:	eb03 0c07 	add.w	ip, r3, r7
 8017f3a:	1ad7      	subs	r7, r2, r3
 8017f3c:	f1b9 0f00 	cmp.w	r9, #0
 8017f40:	d009      	beq.n	8017f56 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8017f42:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 8017f46:	9029      	str	r0, [sp, #164]	; 0xa4
 8017f48:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8017f4c:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8017f50:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8017f54:	912d      	str	r1, [sp, #180]	; 0xb4
 8017f56:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8017f58:	9111      	str	r1, [sp, #68]	; 0x44
 8017f5a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8017f5e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8017f62:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8017f66:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8017f6a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8017f6e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8017f72:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8017f76:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8017f7a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8017f7e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8017f82:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8017f86:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8017f8a:	f04f 0800 	mov.w	r8, #0
 8017f8e:	f1be 0f00 	cmp.w	lr, #0
 8017f92:	d031      	beq.n	8017ff8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8017f94:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8017f96:	4431      	add	r1, r6
 8017f98:	4549      	cmp	r1, r9
 8017f9a:	4450      	add	r0, sl
 8017f9c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8017fa0:	ee37 7a04 	vadd.f32	s14, s14, s8
 8017fa4:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8017fa8:	db08      	blt.n	8017fbc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 8017faa:	ee77 7a85 	vadd.f32	s15, s15, s10
 8017fae:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8017fb2:	ee37 7a06 	vadd.f32	s14, s14, s12
 8017fb6:	3001      	adds	r0, #1
 8017fb8:	eba1 0109 	sub.w	r1, r1, r9
 8017fbc:	f10e 3eff 	add.w	lr, lr, #4294967295
 8017fc0:	f04f 0801 	mov.w	r8, #1
 8017fc4:	e7e3      	b.n	8017f8e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 8017fc6:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8017fc8:	4431      	add	r1, r6
 8017fca:	4541      	cmp	r1, r8
 8017fcc:	4450      	add	r0, sl
 8017fce:	ee37 7a24 	vadd.f32	s14, s14, s9
 8017fd2:	ee77 7a84 	vadd.f32	s15, s15, s8
 8017fd6:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8017fda:	db08      	blt.n	8017fee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8017fdc:	ee76 6a85 	vadd.f32	s13, s13, s10
 8017fe0:	ee37 7a25 	vadd.f32	s14, s14, s11
 8017fe4:	ee77 7a86 	vadd.f32	s15, s15, s12
 8017fe8:	3001      	adds	r0, #1
 8017fea:	eba1 0108 	sub.w	r1, r1, r8
 8017fee:	f10c 3cff 	add.w	ip, ip, #4294967295
 8017ff2:	f04f 0901 	mov.w	r9, #1
 8017ff6:	e79b      	b.n	8017f30 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8017ff8:	449c      	add	ip, r3
 8017ffa:	1aff      	subs	r7, r7, r3
 8017ffc:	f1b8 0f00 	cmp.w	r8, #0
 8018000:	d009      	beq.n	8018016 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8018002:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8018006:	9019      	str	r0, [sp, #100]	; 0x64
 8018008:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 801800c:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8018010:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8018014:	911d      	str	r1, [sp, #116]	; 0x74
 8018016:	1ad2      	subs	r2, r2, r3
 8018018:	e68b      	b.n	8017d32 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 801801a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801801c:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 801801e:	2b00      	cmp	r3, #0
 8018020:	f000 80d1 	beq.w	80181c6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8018024:	ad19      	add	r5, sp, #100	; 0x64
 8018026:	ac39      	add	r4, sp, #228	; 0xe4
 8018028:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801802a:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 801802e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8018032:	930c      	str	r3, [sp, #48]	; 0x30
 8018034:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018036:	6963      	ldr	r3, [r4, #20]
 8018038:	440b      	add	r3, r1
 801803a:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 801803e:	4408      	add	r0, r1
 8018040:	b200      	sxth	r0, r0
 8018042:	4283      	cmp	r3, r0
 8018044:	900d      	str	r0, [sp, #52]	; 0x34
 8018046:	f280 80c1 	bge.w	80181cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 801804a:	428b      	cmp	r3, r1
 801804c:	da08      	bge.n	8018060 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 801804e:	2a00      	cmp	r2, #0
 8018050:	dd06      	ble.n	8018060 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8018052:	1acb      	subs	r3, r1, r3
 8018054:	429a      	cmp	r2, r3
 8018056:	f2c0 80bb 	blt.w	80181d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 801805a:	2b00      	cmp	r3, #0
 801805c:	f300 80b9 	bgt.w	80181d2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8018060:	6967      	ldr	r7, [r4, #20]
 8018062:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018064:	443b      	add	r3, r7
 8018066:	461f      	mov	r7, r3
 8018068:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801806a:	1bdf      	subs	r7, r3, r7
 801806c:	4297      	cmp	r7, r2
 801806e:	bfa8      	it	ge
 8018070:	4617      	movge	r7, r2
 8018072:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8018076:	2f00      	cmp	r7, #0
 8018078:	f340 813c 	ble.w	80182f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 801807c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801807e:	6829      	ldr	r1, [r5, #0]
 8018080:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018084:	f9bb 3000 	ldrsh.w	r3, [fp]
 8018088:	6820      	ldr	r0, [r4, #0]
 801808a:	4411      	add	r1, r2
 801808c:	4299      	cmp	r1, r3
 801808e:	dd1a      	ble.n	80180c6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8018090:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8018094:	440b      	add	r3, r1
 8018096:	4402      	add	r2, r0
 8018098:	b21b      	sxth	r3, r3
 801809a:	429a      	cmp	r2, r3
 801809c:	dc13      	bgt.n	80180c6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 801809e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80180a0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80180a2:	681b      	ldr	r3, [r3, #0]
 80180a4:	9206      	str	r2, [sp, #24]
 80180a6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80180a8:	9205      	str	r2, [sp, #20]
 80180aa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80180ac:	9500      	str	r5, [sp, #0]
 80180ae:	e9cd b203 	strd	fp, r2, [sp, #12]
 80180b2:	9a64      	ldr	r2, [sp, #400]	; 0x190
 80180b4:	9809      	ldr	r0, [sp, #36]	; 0x24
 80180b6:	e9cd 8201 	strd	r8, r2, [sp, #4]
 80180ba:	a912      	add	r1, sp, #72	; 0x48
 80180bc:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 80180c0:	aa49      	add	r2, sp, #292	; 0x124
 80180c2:	4623      	mov	r3, r4
 80180c4:	47c8      	blx	r9
 80180c6:	e9d4 2300 	ldrd	r2, r3, [r4]
 80180ca:	441a      	add	r2, r3
 80180cc:	6963      	ldr	r3, [r4, #20]
 80180ce:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 80180d2:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 80180d6:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 80180da:	68a1      	ldr	r1, [r4, #8]
 80180dc:	ed94 6a08 	vldr	s12, [r4, #32]
 80180e0:	6022      	str	r2, [r4, #0]
 80180e2:	3301      	adds	r3, #1
 80180e4:	6163      	str	r3, [r4, #20]
 80180e6:	69a3      	ldr	r3, [r4, #24]
 80180e8:	ee37 7a27 	vadd.f32	s14, s14, s15
 80180ec:	3b01      	subs	r3, #1
 80180ee:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 80180f2:	61a3      	str	r3, [r4, #24]
 80180f4:	6923      	ldr	r3, [r4, #16]
 80180f6:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80180fa:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80180fe:	edd4 6a07 	vldr	s13, [r4, #28]
 8018102:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8018106:	440b      	add	r3, r1
 8018108:	68e1      	ldr	r1, [r4, #12]
 801810a:	6123      	str	r3, [r4, #16]
 801810c:	ee76 6a86 	vadd.f32	s13, s13, s12
 8018110:	428b      	cmp	r3, r1
 8018112:	edc4 6a07 	vstr	s13, [r4, #28]
 8018116:	db15      	blt.n	8018144 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8018118:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 801811c:	ee76 6a26 	vadd.f32	s13, s12, s13
 8018120:	3201      	adds	r2, #1
 8018122:	edc4 6a07 	vstr	s13, [r4, #28]
 8018126:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 801812a:	6022      	str	r2, [r4, #0]
 801812c:	ee36 7a87 	vadd.f32	s14, s13, s14
 8018130:	1a5b      	subs	r3, r3, r1
 8018132:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8018136:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 801813a:	6123      	str	r3, [r4, #16]
 801813c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8018140:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8018144:	e9d5 2300 	ldrd	r2, r3, [r5]
 8018148:	441a      	add	r2, r3
 801814a:	696b      	ldr	r3, [r5, #20]
 801814c:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8018150:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8018154:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8018158:	68a9      	ldr	r1, [r5, #8]
 801815a:	ed95 6a08 	vldr	s12, [r5, #32]
 801815e:	602a      	str	r2, [r5, #0]
 8018160:	3301      	adds	r3, #1
 8018162:	616b      	str	r3, [r5, #20]
 8018164:	69ab      	ldr	r3, [r5, #24]
 8018166:	ee37 7a27 	vadd.f32	s14, s14, s15
 801816a:	3b01      	subs	r3, #1
 801816c:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8018170:	61ab      	str	r3, [r5, #24]
 8018172:	692b      	ldr	r3, [r5, #16]
 8018174:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8018178:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801817c:	edd5 6a07 	vldr	s13, [r5, #28]
 8018180:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8018184:	440b      	add	r3, r1
 8018186:	68e9      	ldr	r1, [r5, #12]
 8018188:	612b      	str	r3, [r5, #16]
 801818a:	ee76 6a86 	vadd.f32	s13, s13, s12
 801818e:	428b      	cmp	r3, r1
 8018190:	edc5 6a07 	vstr	s13, [r5, #28]
 8018194:	db15      	blt.n	80181c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8018196:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 801819a:	ee76 6a26 	vadd.f32	s13, s12, s13
 801819e:	3201      	adds	r2, #1
 80181a0:	edc5 6a07 	vstr	s13, [r5, #28]
 80181a4:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 80181a8:	602a      	str	r2, [r5, #0]
 80181aa:	ee36 7a87 	vadd.f32	s14, s13, s14
 80181ae:	1a5b      	subs	r3, r3, r1
 80181b0:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80181b4:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 80181b8:	612b      	str	r3, [r5, #16]
 80181ba:	ee77 7a27 	vadd.f32	s15, s14, s15
 80181be:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80181c2:	3f01      	subs	r7, #1
 80181c4:	e757      	b.n	8018076 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 80181c6:	ad39      	add	r5, sp, #228	; 0xe4
 80181c8:	ac19      	add	r4, sp, #100	; 0x64
 80181ca:	e72d      	b.n	8018028 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 80181cc:	4613      	mov	r3, r2
 80181ce:	e744      	b.n	801805a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 80181d0:	4613      	mov	r3, r2
 80181d2:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 80181d6:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 80181d8:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 80181dc:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 80181e0:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 80181e4:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 80181e8:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 80181ec:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 80181f0:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 80181f4:	993d      	ldr	r1, [sp, #244]	; 0xf4
 80181f6:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 80181fa:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 80181fe:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8018202:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 8018206:	960e      	str	r6, [sp, #56]	; 0x38
 8018208:	469e      	mov	lr, r3
 801820a:	461f      	mov	r7, r3
 801820c:	f04f 0900 	mov.w	r9, #0
 8018210:	2f00      	cmp	r7, #0
 8018212:	d146      	bne.n	80182a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8018214:	449c      	add	ip, r3
 8018216:	1ad7      	subs	r7, r2, r3
 8018218:	f1b9 0f00 	cmp.w	r9, #0
 801821c:	d009      	beq.n	8018232 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 801821e:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8018222:	9039      	str	r0, [sp, #228]	; 0xe4
 8018224:	913d      	str	r1, [sp, #244]	; 0xf4
 8018226:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 801822a:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 801822e:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 8018232:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8018234:	910e      	str	r1, [sp, #56]	; 0x38
 8018236:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 801823a:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 801823e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8018242:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8018246:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 801824a:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 801824e:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8018252:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8018256:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 801825a:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 801825e:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8018262:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8018266:	f04f 0800 	mov.w	r8, #0
 801826a:	f1be 0f00 	cmp.w	lr, #0
 801826e:	d030      	beq.n	80182d2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8018270:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8018272:	4431      	add	r1, r6
 8018274:	4549      	cmp	r1, r9
 8018276:	4450      	add	r0, sl
 8018278:	ee76 6aa4 	vadd.f32	s13, s13, s9
 801827c:	ee37 7a04 	vadd.f32	s14, s14, s8
 8018280:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8018284:	db08      	blt.n	8018298 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8018286:	ee77 7a85 	vadd.f32	s15, s15, s10
 801828a:	ee76 6aa5 	vadd.f32	s13, s13, s11
 801828e:	ee37 7a06 	vadd.f32	s14, s14, s12
 8018292:	3001      	adds	r0, #1
 8018294:	eba1 0109 	sub.w	r1, r1, r9
 8018298:	f10e 3eff 	add.w	lr, lr, #4294967295
 801829c:	f04f 0801 	mov.w	r8, #1
 80182a0:	e7e3      	b.n	801826a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 80182a2:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80182a4:	4431      	add	r1, r6
 80182a6:	4541      	cmp	r1, r8
 80182a8:	4450      	add	r0, sl
 80182aa:	ee37 7a24 	vadd.f32	s14, s14, s9
 80182ae:	ee77 7a84 	vadd.f32	s15, s15, s8
 80182b2:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80182b6:	db08      	blt.n	80182ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 80182b8:	ee76 6a85 	vadd.f32	s13, s13, s10
 80182bc:	ee37 7a25 	vadd.f32	s14, s14, s11
 80182c0:	ee77 7a86 	vadd.f32	s15, s15, s12
 80182c4:	3001      	adds	r0, #1
 80182c6:	eba1 0108 	sub.w	r1, r1, r8
 80182ca:	3f01      	subs	r7, #1
 80182cc:	f04f 0901 	mov.w	r9, #1
 80182d0:	e79e      	b.n	8018210 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 80182d2:	449c      	add	ip, r3
 80182d4:	1aff      	subs	r7, r7, r3
 80182d6:	f1b8 0f00 	cmp.w	r8, #0
 80182da:	d009      	beq.n	80182f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 80182dc:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 80182e0:	9019      	str	r0, [sp, #100]	; 0x64
 80182e2:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 80182e6:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 80182ea:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 80182ee:	911d      	str	r1, [sp, #116]	; 0x74
 80182f0:	1ad2      	subs	r2, r2, r3
 80182f2:	e6b5      	b.n	8018060 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80182f4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80182f6:	681b      	ldr	r3, [r3, #0]
 80182f8:	b923      	cbnz	r3, 8018304 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80182fa:	4b04      	ldr	r3, [pc, #16]	; (801830c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 80182fc:	6818      	ldr	r0, [r3, #0]
 80182fe:	6803      	ldr	r3, [r0, #0]
 8018300:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018302:	4798      	blx	r3
 8018304:	b05b      	add	sp, #364	; 0x16c
 8018306:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801830a:	bf00      	nop
 801830c:	2000224c 	.word	0x2000224c

08018310 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8018310:	b570      	push	{r4, r5, r6, lr}
 8018312:	4604      	mov	r4, r0
 8018314:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8018318:	9805      	ldr	r0, [sp, #20]
 801831a:	6061      	str	r1, [r4, #4]
 801831c:	2500      	movs	r5, #0
 801831e:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8018322:	8263      	strh	r3, [r4, #18]
 8018324:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8018328:	8025      	strh	r5, [r4, #0]
 801832a:	7221      	strb	r1, [r4, #8]
 801832c:	7266      	strb	r6, [r4, #9]
 801832e:	60e0      	str	r0, [r4, #12]
 8018330:	8222      	strh	r2, [r4, #16]
 8018332:	82a3      	strh	r3, [r4, #20]
 8018334:	82e5      	strh	r5, [r4, #22]
 8018336:	8325      	strh	r5, [r4, #24]
 8018338:	8365      	strh	r5, [r4, #26]
 801833a:	83a5      	strh	r5, [r4, #28]
 801833c:	83e5      	strh	r5, [r4, #30]
 801833e:	8425      	strh	r5, [r4, #32]
 8018340:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8018344:	b32e      	cbz	r6, 8018392 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8018346:	6803      	ldr	r3, [r0, #0]
 8018348:	695b      	ldr	r3, [r3, #20]
 801834a:	4798      	blx	r3
 801834c:	4606      	mov	r6, r0
 801834e:	b300      	cbz	r0, 8018392 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8018350:	68e0      	ldr	r0, [r4, #12]
 8018352:	6803      	ldr	r3, [r0, #0]
 8018354:	4631      	mov	r1, r6
 8018356:	68db      	ldr	r3, [r3, #12]
 8018358:	4798      	blx	r3
 801835a:	4605      	mov	r5, r0
 801835c:	b1c8      	cbz	r0, 8018392 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 801835e:	7b43      	ldrb	r3, [r0, #13]
 8018360:	7a82      	ldrb	r2, [r0, #10]
 8018362:	005b      	lsls	r3, r3, #1
 8018364:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8018368:	4313      	orrs	r3, r2
 801836a:	8423      	strh	r3, [r4, #32]
 801836c:	7a63      	ldrb	r3, [r4, #9]
 801836e:	2b06      	cmp	r3, #6
 8018370:	d10f      	bne.n	8018392 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8018372:	68e0      	ldr	r0, [r4, #12]
 8018374:	6803      	ldr	r3, [r0, #0]
 8018376:	462a      	mov	r2, r5
 8018378:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801837a:	4631      	mov	r1, r6
 801837c:	4798      	blx	r3
 801837e:	7b6b      	ldrb	r3, [r5, #13]
 8018380:	005b      	lsls	r3, r3, #1
 8018382:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8018386:	7aab      	ldrb	r3, [r5, #10]
 8018388:	4313      	orrs	r3, r2
 801838a:	4418      	add	r0, r3
 801838c:	8c23      	ldrh	r3, [r4, #32]
 801838e:	4418      	add	r0, r3
 8018390:	8420      	strh	r0, [r4, #32]
 8018392:	4620      	mov	r0, r4
 8018394:	bd70      	pop	{r4, r5, r6, pc}

08018396 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8018396:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801839a:	2400      	movs	r4, #0
 801839c:	b085      	sub	sp, #20
 801839e:	4681      	mov	r9, r0
 80183a0:	4688      	mov	r8, r1
 80183a2:	4692      	mov	sl, r2
 80183a4:	469b      	mov	fp, r3
 80183a6:	4627      	mov	r7, r4
 80183a8:	4625      	mov	r5, r4
 80183aa:	4626      	mov	r6, r4
 80183ac:	4554      	cmp	r4, sl
 80183ae:	da2a      	bge.n	8018406 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80183b0:	2300      	movs	r3, #0
 80183b2:	9303      	str	r3, [sp, #12]
 80183b4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80183b8:	429d      	cmp	r5, r3
 80183ba:	d004      	beq.n	80183c6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 80183bc:	f242 030b 	movw	r3, #8203	; 0x200b
 80183c0:	429d      	cmp	r5, r3
 80183c2:	bf18      	it	ne
 80183c4:	462f      	movne	r7, r5
 80183c6:	ab03      	add	r3, sp, #12
 80183c8:	4642      	mov	r2, r8
 80183ca:	4659      	mov	r1, fp
 80183cc:	4648      	mov	r0, r9
 80183ce:	f003 f8e9 	bl	801b5a4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80183d2:	4605      	mov	r5, r0
 80183d4:	b1b8      	cbz	r0, 8018406 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80183d6:	280a      	cmp	r0, #10
 80183d8:	d015      	beq.n	8018406 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80183da:	9a03      	ldr	r2, [sp, #12]
 80183dc:	b18a      	cbz	r2, 8018402 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 80183de:	7b50      	ldrb	r0, [r2, #13]
 80183e0:	7a93      	ldrb	r3, [r2, #10]
 80183e2:	8895      	ldrh	r5, [r2, #4]
 80183e4:	0040      	lsls	r0, r0, #1
 80183e6:	f400 7080 	and.w	r0, r0, #256	; 0x100
 80183ea:	4303      	orrs	r3, r0
 80183ec:	9301      	str	r3, [sp, #4]
 80183ee:	f8d8 3000 	ldr.w	r3, [r8]
 80183f2:	4639      	mov	r1, r7
 80183f4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80183f6:	4640      	mov	r0, r8
 80183f8:	4798      	blx	r3
 80183fa:	9b01      	ldr	r3, [sp, #4]
 80183fc:	4418      	add	r0, r3
 80183fe:	4406      	add	r6, r0
 8018400:	b2b6      	uxth	r6, r6
 8018402:	3401      	adds	r4, #1
 8018404:	e7d2      	b.n	80183ac <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8018406:	4630      	mov	r0, r6
 8018408:	b005      	add	sp, #20
 801840a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801840e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 801840e:	2a02      	cmp	r2, #2
 8018410:	b530      	push	{r4, r5, lr}
 8018412:	d011      	beq.n	8018438 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8018414:	2a03      	cmp	r2, #3
 8018416:	d01c      	beq.n	8018452 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8018418:	2a01      	cmp	r2, #1
 801841a:	d10c      	bne.n	8018436 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 801841c:	888b      	ldrh	r3, [r1, #4]
 801841e:	8801      	ldrh	r1, [r0, #0]
 8018420:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8018424:	8844      	ldrh	r4, [r0, #2]
 8018426:	8004      	strh	r4, [r0, #0]
 8018428:	1a5b      	subs	r3, r3, r1
 801842a:	1a9b      	subs	r3, r3, r2
 801842c:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8018430:	8043      	strh	r3, [r0, #2]
 8018432:	8081      	strh	r1, [r0, #4]
 8018434:	80c2      	strh	r2, [r0, #6]
 8018436:	bd30      	pop	{r4, r5, pc}
 8018438:	88cb      	ldrh	r3, [r1, #6]
 801843a:	8842      	ldrh	r2, [r0, #2]
 801843c:	1a9b      	subs	r3, r3, r2
 801843e:	88c2      	ldrh	r2, [r0, #6]
 8018440:	1a9b      	subs	r3, r3, r2
 8018442:	888a      	ldrh	r2, [r1, #4]
 8018444:	8801      	ldrh	r1, [r0, #0]
 8018446:	8043      	strh	r3, [r0, #2]
 8018448:	1a52      	subs	r2, r2, r1
 801844a:	8881      	ldrh	r1, [r0, #4]
 801844c:	1a52      	subs	r2, r2, r1
 801844e:	8002      	strh	r2, [r0, #0]
 8018450:	e7f1      	b.n	8018436 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8018452:	88cb      	ldrh	r3, [r1, #6]
 8018454:	8841      	ldrh	r1, [r0, #2]
 8018456:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 801845a:	f9b0 5000 	ldrsh.w	r5, [r0]
 801845e:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8018462:	8045      	strh	r5, [r0, #2]
 8018464:	1a5b      	subs	r3, r3, r1
 8018466:	1a9b      	subs	r3, r3, r2
 8018468:	8003      	strh	r3, [r0, #0]
 801846a:	8082      	strh	r2, [r0, #4]
 801846c:	80c4      	strh	r4, [r0, #6]
 801846e:	e7e2      	b.n	8018436 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08018470 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8018470:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018474:	b09f      	sub	sp, #124	; 0x7c
 8018476:	9116      	str	r1, [sp, #88]	; 0x58
 8018478:	9317      	str	r3, [sp, #92]	; 0x5c
 801847a:	9929      	ldr	r1, [sp, #164]	; 0xa4
 801847c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801847e:	8809      	ldrh	r1, [r1, #0]
 8018480:	889b      	ldrh	r3, [r3, #4]
 8018482:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8018486:	9212      	str	r2, [sp, #72]	; 0x48
 8018488:	440b      	add	r3, r1
 801848a:	b21b      	sxth	r3, r3
 801848c:	9310      	str	r3, [sp, #64]	; 0x40
 801848e:	f8d8 3000 	ldr.w	r3, [r8]
 8018492:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8018496:	7b19      	ldrb	r1, [r3, #12]
 8018498:	7adb      	ldrb	r3, [r3, #11]
 801849a:	9011      	str	r0, [sp, #68]	; 0x44
 801849c:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 80184a0:	9114      	str	r1, [sp, #80]	; 0x50
 80184a2:	9315      	str	r3, [sp, #84]	; 0x54
 80184a4:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 80184a8:	2a00      	cmp	r2, #0
 80184aa:	d06a      	beq.n	8018582 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 80184ac:	f898 3010 	ldrb.w	r3, [r8, #16]
 80184b0:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80184b2:	2b06      	cmp	r3, #6
 80184b4:	bf14      	ite	ne
 80184b6:	2301      	movne	r3, #1
 80184b8:	2302      	moveq	r3, #2
 80184ba:	4413      	add	r3, r2
 80184bc:	f04f 0900 	mov.w	r9, #0
 80184c0:	930f      	str	r3, [sp, #60]	; 0x3c
 80184c2:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 80184c6:	464c      	mov	r4, r9
 80184c8:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 80184cc:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 80184d0:	4293      	cmp	r3, r2
 80184d2:	f280 808f 	bge.w	80185f4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 80184d6:	2300      	movs	r3, #0
 80184d8:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 80184dc:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 80184e0:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80184e4:	429c      	cmp	r4, r3
 80184e6:	d006      	beq.n	80184f6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 80184e8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80184ea:	f242 020b 	movw	r2, #8203	; 0x200b
 80184ee:	4294      	cmp	r4, r2
 80184f0:	bf18      	it	ne
 80184f2:	4623      	movne	r3, r4
 80184f4:	930d      	str	r3, [sp, #52]	; 0x34
 80184f6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80184f8:	992d      	ldr	r1, [sp, #180]	; 0xb4
 80184fa:	f8d8 2000 	ldr.w	r2, [r8]
 80184fe:	428b      	cmp	r3, r1
 8018500:	db41      	blt.n	8018586 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8018502:	6813      	ldr	r3, [r2, #0]
 8018504:	4610      	mov	r0, r2
 8018506:	695b      	ldr	r3, [r3, #20]
 8018508:	4798      	blx	r3
 801850a:	4604      	mov	r4, r0
 801850c:	f8d8 0000 	ldr.w	r0, [r8]
 8018510:	6803      	ldr	r3, [r0, #0]
 8018512:	aa1d      	add	r2, sp, #116	; 0x74
 8018514:	689d      	ldr	r5, [r3, #8]
 8018516:	4621      	mov	r1, r4
 8018518:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 801851c:	47a8      	blx	r5
 801851e:	901c      	str	r0, [sp, #112]	; 0x70
 8018520:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8018524:	429c      	cmp	r4, r3
 8018526:	f000 80eb 	beq.w	8018700 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 801852a:	f242 030b 	movw	r3, #8203	; 0x200b
 801852e:	429c      	cmp	r4, r3
 8018530:	f000 80e6 	beq.w	8018700 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8018534:	2c00      	cmp	r4, #0
 8018536:	f000 80f8 	beq.w	801872a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 801853a:	2c0a      	cmp	r4, #10
 801853c:	d060      	beq.n	8018600 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 801853e:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8018540:	b36a      	cbz	r2, 801859e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8018542:	8894      	ldrh	r4, [r2, #4]
 8018544:	f1bb 0f00 	cmp.w	fp, #0
 8018548:	d03b      	beq.n	80185c2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 801854a:	f892 900d 	ldrb.w	r9, [r2, #13]
 801854e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8018552:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8018556:	f892 900a 	ldrb.w	r9, [r2, #10]
 801855a:	f1bb 0f01 	cmp.w	fp, #1
 801855e:	ea49 0903 	orr.w	r9, r9, r3
 8018562:	d134      	bne.n	80185ce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8018564:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018566:	eba6 0609 	sub.w	r6, r6, r9
 801856a:	2b00      	cmp	r3, #0
 801856c:	d14f      	bne.n	801860e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 801856e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8018570:	eb09 0306 	add.w	r3, r9, r6
 8018574:	4413      	add	r3, r2
 8018576:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8018578:	f9b2 2000 	ldrsh.w	r2, [r2]
 801857c:	4293      	cmp	r3, r2
 801857e:	da51      	bge.n	8018624 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8018580:	e038      	b.n	80185f4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8018582:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8018584:	e79a      	b.n	80184bc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 8018586:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 801858a:	9301      	str	r3, [sp, #4]
 801858c:	ab1d      	add	r3, sp, #116	; 0x74
 801858e:	9300      	str	r3, [sp, #0]
 8018590:	4659      	mov	r1, fp
 8018592:	ab1c      	add	r3, sp, #112	; 0x70
 8018594:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8018596:	f003 f84e 	bl	801b636 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 801859a:	4604      	mov	r4, r0
 801859c:	e7c0      	b.n	8018520 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 801859e:	f8d8 0000 	ldr.w	r0, [r8]
 80185a2:	6803      	ldr	r3, [r0, #0]
 80185a4:	691b      	ldr	r3, [r3, #16]
 80185a6:	4798      	blx	r3
 80185a8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80185ac:	4298      	cmp	r0, r3
 80185ae:	f000 80a7 	beq.w	8018700 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80185b2:	f242 030b 	movw	r3, #8203	; 0x200b
 80185b6:	4298      	cmp	r0, r3
 80185b8:	f000 80a2 	beq.w	8018700 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80185bc:	f1bb 0f00 	cmp.w	fp, #0
 80185c0:	d100      	bne.n	80185c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 80185c2:	444e      	add	r6, r9
 80185c4:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80185c6:	2a00      	cmp	r2, #0
 80185c8:	d1bf      	bne.n	801854a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 80185ca:	4691      	mov	r9, r2
 80185cc:	e098      	b.n	8018700 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80185ce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80185d0:	2b00      	cmp	r3, #0
 80185d2:	f000 80ac 	beq.w	801872e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 80185d6:	f1bb 0f00 	cmp.w	fp, #0
 80185da:	d118      	bne.n	801860e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 80185dc:	f8d8 0000 	ldr.w	r0, [r8]
 80185e0:	990d      	ldr	r1, [sp, #52]	; 0x34
 80185e2:	6803      	ldr	r3, [r0, #0]
 80185e4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80185e6:	4798      	blx	r3
 80185e8:	4406      	add	r6, r0
 80185ea:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80185ec:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80185ee:	1af3      	subs	r3, r6, r3
 80185f0:	4293      	cmp	r3, r2
 80185f2:	dd17      	ble.n	8018624 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 80185f4:	2c00      	cmp	r4, #0
 80185f6:	f000 8098 	beq.w	801872a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 80185fa:	2c0a      	cmp	r4, #10
 80185fc:	f040 8086 	bne.w	801870c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 8018600:	240a      	movs	r4, #10
 8018602:	fab4 f084 	clz	r0, r4
 8018606:	0940      	lsrs	r0, r0, #5
 8018608:	b01f      	add	sp, #124	; 0x7c
 801860a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801860e:	f8d8 0000 	ldr.w	r0, [r8]
 8018612:	990d      	ldr	r1, [sp, #52]	; 0x34
 8018614:	6803      	ldr	r3, [r0, #0]
 8018616:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8018618:	4798      	blx	r3
 801861a:	f1bb 0f01 	cmp.w	fp, #1
 801861e:	eba6 0600 	sub.w	r6, r6, r0
 8018622:	d0a4      	beq.n	801856e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8018624:	981c      	ldr	r0, [sp, #112]	; 0x70
 8018626:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018628:	f990 1009 	ldrsb.w	r1, [r0, #9]
 801862c:	f9b3 7000 	ldrsh.w	r7, [r3]
 8018630:	7b43      	ldrb	r3, [r0, #13]
 8018632:	015b      	lsls	r3, r3, #5
 8018634:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8018638:	7983      	ldrb	r3, [r0, #6]
 801863a:	4431      	add	r1, r6
 801863c:	4313      	orrs	r3, r2
 801863e:	440b      	add	r3, r1
 8018640:	42bb      	cmp	r3, r7
 8018642:	db5d      	blt.n	8018700 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8018644:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018646:	4299      	cmp	r1, r3
 8018648:	da5a      	bge.n	8018700 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 801864a:	f8d8 0000 	ldr.w	r0, [r8]
 801864e:	6803      	ldr	r3, [r0, #0]
 8018650:	42b7      	cmp	r7, r6
 8018652:	bfc8      	it	gt
 8018654:	1bbf      	subgt	r7, r7, r6
 8018656:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8018658:	bfcc      	ite	gt
 801865a:	b2bf      	uxthgt	r7, r7
 801865c:	2700      	movle	r7, #0
 801865e:	4798      	blx	r3
 8018660:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8018662:	7b5a      	ldrb	r2, [r3, #13]
 8018664:	00d1      	lsls	r1, r2, #3
 8018666:	f401 7580 	and.w	r5, r1, #256	; 0x100
 801866a:	7a19      	ldrb	r1, [r3, #8]
 801866c:	4329      	orrs	r1, r5
 801866e:	0655      	lsls	r5, r2, #25
 8018670:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8018672:	bf44      	itt	mi
 8018674:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 8018678:	b209      	sxthmi	r1, r1
 801867a:	1945      	adds	r5, r0, r5
 801867c:	1a6d      	subs	r5, r5, r1
 801867e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8018680:	b2ad      	uxth	r5, r5
 8018682:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8018686:	fa0f fa85 	sxth.w	sl, r5
 801868a:	4551      	cmp	r1, sl
 801868c:	dd3c      	ble.n	8018708 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 801868e:	0112      	lsls	r2, r2, #4
 8018690:	79d8      	ldrb	r0, [r3, #7]
 8018692:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8018696:	4302      	orrs	r2, r0
 8018698:	4492      	add	sl, r2
 801869a:	4551      	cmp	r1, sl
 801869c:	dc30      	bgt.n	8018700 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 801869e:	1b4d      	subs	r5, r1, r5
 80186a0:	b22d      	sxth	r5, r5
 80186a2:	468a      	mov	sl, r1
 80186a4:	9319      	str	r3, [sp, #100]	; 0x64
 80186a6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80186a8:	f8d8 0000 	ldr.w	r0, [r8]
 80186ac:	681a      	ldr	r2, [r3, #0]
 80186ae:	6801      	ldr	r1, [r0, #0]
 80186b0:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 80186b2:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 80186b4:	9313      	str	r3, [sp, #76]	; 0x4c
 80186b6:	9218      	str	r2, [sp, #96]	; 0x60
 80186b8:	6c09      	ldr	r1, [r1, #64]	; 0x40
 80186ba:	4788      	blx	r1
 80186bc:	f898 1006 	ldrb.w	r1, [r8, #6]
 80186c0:	910b      	str	r1, [sp, #44]	; 0x2c
 80186c2:	f898 100e 	ldrb.w	r1, [r8, #14]
 80186c6:	910a      	str	r1, [sp, #40]	; 0x28
 80186c8:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 80186cc:	9109      	str	r1, [sp, #36]	; 0x24
 80186ce:	f8d8 1008 	ldr.w	r1, [r8, #8]
 80186d2:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80186d4:	9305      	str	r3, [sp, #20]
 80186d6:	b2ad      	uxth	r5, r5
 80186d8:	e9cd 0107 	strd	r0, r1, [sp, #28]
 80186dc:	e9cd 7502 	strd	r7, r5, [sp, #8]
 80186e0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80186e2:	9304      	str	r3, [sp, #16]
 80186e4:	4437      	add	r7, r6
 80186e6:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80186e8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80186ea:	9206      	str	r2, [sp, #24]
 80186ec:	b23f      	sxth	r7, r7
 80186ee:	f8cd a004 	str.w	sl, [sp, #4]
 80186f2:	9700      	str	r7, [sp, #0]
 80186f4:	681a      	ldr	r2, [r3, #0]
 80186f6:	9916      	ldr	r1, [sp, #88]	; 0x58
 80186f8:	685b      	ldr	r3, [r3, #4]
 80186fa:	9811      	ldr	r0, [sp, #68]	; 0x44
 80186fc:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80186fe:	47a8      	blx	r5
 8018700:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018702:	3301      	adds	r3, #1
 8018704:	930e      	str	r3, [sp, #56]	; 0x38
 8018706:	e6e1      	b.n	80184cc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 8018708:	2500      	movs	r5, #0
 801870a:	e7cb      	b.n	80186a4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 801870c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801870e:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8018710:	3501      	adds	r5, #1
 8018712:	429d      	cmp	r5, r3
 8018714:	f6bf af75 	bge.w	8018602 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8018718:	4659      	mov	r1, fp
 801871a:	982c      	ldr	r0, [sp, #176]	; 0xb0
 801871c:	f7f7 fb84 	bl	800fe28 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8018720:	4604      	mov	r4, r0
 8018722:	b110      	cbz	r0, 801872a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8018724:	280a      	cmp	r0, #10
 8018726:	d1f2      	bne.n	801870e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 8018728:	e76a      	b.n	8018600 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 801872a:	2400      	movs	r4, #0
 801872c:	e769      	b.n	8018602 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 801872e:	f1bb 0f00 	cmp.w	fp, #0
 8018732:	f43f af5a 	beq.w	80185ea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 8018736:	e775      	b.n	8018624 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

08018738 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8018738:	b530      	push	{r4, r5, lr}
 801873a:	8ac4      	ldrh	r4, [r0, #22]
 801873c:	8b45      	ldrh	r5, [r0, #26]
 801873e:	8343      	strh	r3, [r0, #26]
 8018740:	442c      	add	r4, r5
 8018742:	1ae4      	subs	r4, r4, r3
 8018744:	82c4      	strh	r4, [r0, #22]
 8018746:	8b83      	ldrh	r3, [r0, #28]
 8018748:	8b04      	ldrh	r4, [r0, #24]
 801874a:	4422      	add	r2, r4
 801874c:	440c      	add	r4, r1
 801874e:	1a59      	subs	r1, r3, r1
 8018750:	83c2      	strh	r2, [r0, #30]
 8018752:	8304      	strh	r4, [r0, #24]
 8018754:	8381      	strh	r1, [r0, #28]
 8018756:	bd30      	pop	{r4, r5, pc}

08018758 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 8018758:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801875c:	4604      	mov	r4, r0
 801875e:	8a47      	ldrh	r7, [r0, #18]
 8018760:	68c0      	ldr	r0, [r0, #12]
 8018762:	6803      	ldr	r3, [r0, #0]
 8018764:	b085      	sub	sp, #20
 8018766:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018768:	4798      	blx	r3
 801876a:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 801876e:	7a63      	ldrb	r3, [r4, #9]
 8018770:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8018774:	42b7      	cmp	r7, r6
 8018776:	f103 33ff 	add.w	r3, r3, #4294967295
 801877a:	bfac      	ite	ge
 801877c:	f04f 0900 	movge.w	r9, #0
 8018780:	f04f 0901 	movlt.w	r9, #1
 8018784:	2b05      	cmp	r3, #5
 8018786:	d804      	bhi.n	8018792 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 8018788:	e8df f003 	tbb	[pc, r3]
 801878c:	470e0854 	.word	0x470e0854
 8018790:	4c4c      	.short	0x4c4c
 8018792:	2500      	movs	r5, #0
 8018794:	46a9      	mov	r9, r5
 8018796:	462e      	mov	r6, r5
 8018798:	462f      	mov	r7, r5
 801879a:	e00d      	b.n	80187b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 801879c:	42b7      	cmp	r7, r6
 801879e:	bfb4      	ite	lt
 80187a0:	2600      	movlt	r6, #0
 80187a2:	2601      	movge	r6, #1
 80187a4:	2500      	movs	r5, #0
 80187a6:	e7f7      	b.n	8018798 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 80187a8:	42b7      	cmp	r7, r6
 80187aa:	464d      	mov	r5, r9
 80187ac:	f04f 0900 	mov.w	r9, #0
 80187b0:	bfb4      	ite	lt
 80187b2:	2600      	movlt	r6, #0
 80187b4:	2601      	movge	r6, #1
 80187b6:	464f      	mov	r7, r9
 80187b8:	f04f 0800 	mov.w	r8, #0
 80187bc:	f8a4 8016 	strh.w	r8, [r4, #22]
 80187c0:	f8a4 8018 	strh.w	r8, [r4, #24]
 80187c4:	f8cd 8004 	str.w	r8, [sp, #4]
 80187c8:	2300      	movs	r3, #0
 80187ca:	9303      	str	r3, [sp, #12]
 80187cc:	8823      	ldrh	r3, [r4, #0]
 80187ce:	2b20      	cmp	r3, #32
 80187d0:	d034      	beq.n	801883c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 80187d2:	f242 010b 	movw	r1, #8203	; 0x200b
 80187d6:	1a5a      	subs	r2, r3, r1
 80187d8:	f1d2 0a00 	rsbs	sl, r2, #0
 80187dc:	eb4a 0a02 	adc.w	sl, sl, r2
 80187e0:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80187e4:	4293      	cmp	r3, r2
 80187e6:	d009      	beq.n	80187fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 80187e8:	428b      	cmp	r3, r1
 80187ea:	9a01      	ldr	r2, [sp, #4]
 80187ec:	bf18      	it	ne
 80187ee:	461a      	movne	r2, r3
 80187f0:	9201      	str	r2, [sp, #4]
 80187f2:	bf0c      	ite	eq
 80187f4:	f04f 0a01 	moveq.w	sl, #1
 80187f8:	f04f 0a00 	movne.w	sl, #0
 80187fc:	ab03      	add	r3, sp, #12
 80187fe:	68e2      	ldr	r2, [r4, #12]
 8018800:	7a21      	ldrb	r1, [r4, #8]
 8018802:	6860      	ldr	r0, [r4, #4]
 8018804:	f002 fece 	bl	801b5a4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8018808:	8020      	strh	r0, [r4, #0]
 801880a:	b9d8      	cbnz	r0, 8018844 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 801880c:	8ba2      	ldrh	r2, [r4, #28]
 801880e:	2300      	movs	r3, #0
 8018810:	4611      	mov	r1, r2
 8018812:	4620      	mov	r0, r4
 8018814:	f7ff ff90 	bl	8018738 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8018818:	e06e      	b.n	80188f8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 801881a:	2500      	movs	r5, #0
 801881c:	46a9      	mov	r9, r5
 801881e:	462e      	mov	r6, r5
 8018820:	2701      	movs	r7, #1
 8018822:	e7c9      	b.n	80187b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8018824:	42b7      	cmp	r7, r6
 8018826:	f04f 0500 	mov.w	r5, #0
 801882a:	bfb4      	ite	lt
 801882c:	2700      	movlt	r7, #0
 801882e:	2701      	movge	r7, #1
 8018830:	462e      	mov	r6, r5
 8018832:	e7c1      	b.n	80187b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8018834:	2500      	movs	r5, #0
 8018836:	46a9      	mov	r9, r5
 8018838:	2601      	movs	r6, #1
 801883a:	e7ad      	b.n	8018798 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 801883c:	9301      	str	r3, [sp, #4]
 801883e:	f04f 0a01 	mov.w	sl, #1
 8018842:	e7db      	b.n	80187fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8018844:	8b63      	ldrh	r3, [r4, #26]
 8018846:	280a      	cmp	r0, #10
 8018848:	f103 0301 	add.w	r3, r3, #1
 801884c:	8363      	strh	r3, [r4, #26]
 801884e:	d0dd      	beq.n	801880c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8018850:	9a03      	ldr	r2, [sp, #12]
 8018852:	bb62      	cbnz	r2, 80188ae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8018854:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8018858:	4298      	cmp	r0, r3
 801885a:	d003      	beq.n	8018864 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 801885c:	f242 030b 	movw	r3, #8203	; 0x200b
 8018860:	4298      	cmp	r0, r3
 8018862:	d1b1      	bne.n	80187c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8018864:	8823      	ldrh	r3, [r4, #0]
 8018866:	8ba1      	ldrh	r1, [r4, #28]
 8018868:	2b20      	cmp	r3, #32
 801886a:	d003      	beq.n	8018874 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 801886c:	f242 000b 	movw	r0, #8203	; 0x200b
 8018870:	4283      	cmp	r3, r0
 8018872:	d131      	bne.n	80188d8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8018874:	f1ba 0f00 	cmp.w	sl, #0
 8018878:	bf0a      	itet	eq
 801887a:	4688      	moveq	r8, r1
 801887c:	4650      	movne	r0, sl
 801887e:	2001      	moveq	r0, #1
 8018880:	440a      	add	r2, r1
 8018882:	8b23      	ldrh	r3, [r4, #24]
 8018884:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8018888:	b292      	uxth	r2, r2
 801888a:	83a2      	strh	r2, [r4, #28]
 801888c:	4413      	add	r3, r2
 801888e:	f1b9 0f00 	cmp.w	r9, #0
 8018892:	d102      	bne.n	801889a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8018894:	2d00      	cmp	r5, #0
 8018896:	d042      	beq.n	801891e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 8018898:	b300      	cbz	r0, 80188dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 801889a:	8c21      	ldrh	r1, [r4, #32]
 801889c:	4419      	add	r1, r3
 801889e:	458c      	cmp	ip, r1
 80188a0:	da37      	bge.n	8018912 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 80188a2:	8ae1      	ldrh	r1, [r4, #22]
 80188a4:	2900      	cmp	r1, #0
 80188a6:	d034      	beq.n	8018912 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 80188a8:	4563      	cmp	r3, ip
 80188aa:	dd8d      	ble.n	80187c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80188ac:	e01d      	b.n	80188ea <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 80188ae:	8893      	ldrh	r3, [r2, #4]
 80188b0:	8023      	strh	r3, [r4, #0]
 80188b2:	f892 b00d 	ldrb.w	fp, [r2, #13]
 80188b6:	9901      	ldr	r1, [sp, #4]
 80188b8:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 80188bc:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 80188c0:	f892 b00a 	ldrb.w	fp, [r2, #10]
 80188c4:	ea4b 0b00 	orr.w	fp, fp, r0
 80188c8:	68e0      	ldr	r0, [r4, #12]
 80188ca:	6803      	ldr	r3, [r0, #0]
 80188cc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80188ce:	4798      	blx	r3
 80188d0:	eb0b 0200 	add.w	r2, fp, r0
 80188d4:	b292      	uxth	r2, r2
 80188d6:	e7c5      	b.n	8018864 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 80188d8:	2000      	movs	r0, #0
 80188da:	e7d1      	b.n	8018880 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 80188dc:	4563      	cmp	r3, ip
 80188de:	f77f af73 	ble.w	80187c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80188e2:	8ae3      	ldrh	r3, [r4, #22]
 80188e4:	2b00      	cmp	r3, #0
 80188e6:	f43f af6f 	beq.w	80187c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80188ea:	2301      	movs	r3, #1
 80188ec:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 80188f0:	8c22      	ldrh	r2, [r4, #32]
 80188f2:	8be3      	ldrh	r3, [r4, #30]
 80188f4:	4413      	add	r3, r2
 80188f6:	83e3      	strh	r3, [r4, #30]
 80188f8:	68e0      	ldr	r0, [r4, #12]
 80188fa:	6803      	ldr	r3, [r0, #0]
 80188fc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80188fe:	4798      	blx	r3
 8018900:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8018904:	4418      	add	r0, r3
 8018906:	8a63      	ldrh	r3, [r4, #18]
 8018908:	1a18      	subs	r0, r3, r0
 801890a:	8260      	strh	r0, [r4, #18]
 801890c:	b005      	add	sp, #20
 801890e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018912:	2300      	movs	r3, #0
 8018914:	4611      	mov	r1, r2
 8018916:	4620      	mov	r0, r4
 8018918:	f7ff ff0e 	bl	8018738 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 801891c:	e754      	b.n	80187c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801891e:	4563      	cmp	r3, ip
 8018920:	dd14      	ble.n	801894c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 8018922:	b117      	cbz	r7, 801892a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8018924:	2301      	movs	r3, #1
 8018926:	460a      	mov	r2, r1
 8018928:	e772      	b.n	8018810 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 801892a:	2e00      	cmp	r6, #0
 801892c:	f43f af4c 	beq.w	80187c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8018930:	2800      	cmp	r0, #0
 8018932:	f47f af49 	bne.w	80187c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8018936:	f1ba 0f00 	cmp.w	sl, #0
 801893a:	d002      	beq.n	8018942 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 801893c:	2301      	movs	r3, #1
 801893e:	4642      	mov	r2, r8
 8018940:	e767      	b.n	8018812 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 8018942:	8ae3      	ldrh	r3, [r4, #22]
 8018944:	2b00      	cmp	r3, #0
 8018946:	f43f af3f 	beq.w	80187c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801894a:	e7d5      	b.n	80188f8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 801894c:	2800      	cmp	r0, #0
 801894e:	f47f af3b 	bne.w	80187c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8018952:	f1ba 0f00 	cmp.w	sl, #0
 8018956:	f43f af37 	beq.w	80187c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801895a:	2301      	movs	r3, #1
 801895c:	4642      	mov	r2, r8
 801895e:	e7da      	b.n	8018916 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08018960 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8018960:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018962:	4605      	mov	r5, r0
 8018964:	b08f      	sub	sp, #60	; 0x3c
 8018966:	4617      	mov	r7, r2
 8018968:	461c      	mov	r4, r3
 801896a:	460e      	mov	r6, r1
 801896c:	b1d1      	cbz	r1, 80189a4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 801896e:	681b      	ldr	r3, [r3, #0]
 8018970:	4620      	mov	r0, r4
 8018972:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018974:	4798      	blx	r3
 8018976:	4240      	negs	r0, r0
 8018978:	b200      	sxth	r0, r0
 801897a:	e9cd 4001 	strd	r4, r0, [sp, #4]
 801897e:	9603      	str	r6, [sp, #12]
 8018980:	9700      	str	r7, [sp, #0]
 8018982:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8018986:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801898a:	4629      	mov	r1, r5
 801898c:	a805      	add	r0, sp, #20
 801898e:	f7ff fcbf 	bl	8018310 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8018992:	2401      	movs	r4, #1
 8018994:	a805      	add	r0, sp, #20
 8018996:	f7ff fedf 	bl	8018758 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801899a:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 801899e:	b163      	cbz	r3, 80189ba <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 80189a0:	3401      	adds	r4, #1
 80189a2:	e7f7      	b.n	8018994 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 80189a4:	f002 fecc 	bl	801b740 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80189a8:	2401      	movs	r4, #1
 80189aa:	280a      	cmp	r0, #10
 80189ac:	4628      	mov	r0, r5
 80189ae:	bf08      	it	eq
 80189b0:	3401      	addeq	r4, #1
 80189b2:	f002 fec5 	bl	801b740 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80189b6:	2800      	cmp	r0, #0
 80189b8:	d1f7      	bne.n	80189aa <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 80189ba:	b2a0      	uxth	r0, r4
 80189bc:	b00f      	add	sp, #60	; 0x3c
 80189be:	bdf0      	pop	{r4, r5, r6, r7, pc}

080189c0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 80189c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80189c4:	b0e3      	sub	sp, #396	; 0x18c
 80189c6:	461c      	mov	r4, r3
 80189c8:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 80189ca:	4683      	mov	fp, r0
 80189cc:	4688      	mov	r8, r1
 80189ce:	2b00      	cmp	r3, #0
 80189d0:	f000 8112 	beq.w	8018bf8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80189d4:	6823      	ldr	r3, [r4, #0]
 80189d6:	2b00      	cmp	r3, #0
 80189d8:	f000 810e 	beq.w	8018bf8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80189dc:	7ba3      	ldrb	r3, [r4, #14]
 80189de:	2b00      	cmp	r3, #0
 80189e0:	f000 810a 	beq.w	8018bf8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80189e4:	6810      	ldr	r0, [r2, #0]
 80189e6:	6851      	ldr	r1, [r2, #4]
 80189e8:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 80189ec:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80189f0:	ad0a      	add	r5, sp, #40	; 0x28
 80189f2:	462b      	mov	r3, r5
 80189f4:	c303      	stmia	r3!, {r0, r1}
 80189f6:	2100      	movs	r1, #0
 80189f8:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 80189fc:	910c      	str	r1, [sp, #48]	; 0x30
 80189fe:	79a2      	ldrb	r2, [r4, #6]
 8018a00:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8018a04:	a90c      	add	r1, sp, #48	; 0x30
 8018a06:	4628      	mov	r0, r5
 8018a08:	f7ff fd01 	bl	801840e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8018a0c:	a90c      	add	r1, sp, #48	; 0x30
 8018a0e:	4608      	mov	r0, r1
 8018a10:	79a2      	ldrb	r2, [r4, #6]
 8018a12:	f7ff fcfc 	bl	801840e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8018a16:	a817      	add	r0, sp, #92	; 0x5c
 8018a18:	f002 fa66 	bl	801aee8 <_ZN8touchgfx12TextProviderC1Ev>
 8018a1c:	6820      	ldr	r0, [r4, #0]
 8018a1e:	6803      	ldr	r3, [r0, #0]
 8018a20:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8018a22:	4798      	blx	r3
 8018a24:	4606      	mov	r6, r0
 8018a26:	6820      	ldr	r0, [r4, #0]
 8018a28:	6803      	ldr	r3, [r0, #0]
 8018a2a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8018a2c:	4798      	blx	r3
 8018a2e:	4633      	mov	r3, r6
 8018a30:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8018a32:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8018a34:	9000      	str	r0, [sp, #0]
 8018a36:	a817      	add	r0, sp, #92	; 0x5c
 8018a38:	f002 fab1 	bl	801af9e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8018a3c:	6820      	ldr	r0, [r4, #0]
 8018a3e:	f894 a004 	ldrb.w	sl, [r4, #4]
 8018a42:	6803      	ldr	r3, [r0, #0]
 8018a44:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018a46:	4798      	blx	r3
 8018a48:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8018a4c:	6823      	ldr	r3, [r4, #0]
 8018a4e:	4607      	mov	r7, r0
 8018a50:	4406      	add	r6, r0
 8018a52:	a830      	add	r0, sp, #192	; 0xc0
 8018a54:	f893 9009 	ldrb.w	r9, [r3, #9]
 8018a58:	f002 fa46 	bl	801aee8 <_ZN8touchgfx12TextProviderC1Ev>
 8018a5c:	7c23      	ldrb	r3, [r4, #16]
 8018a5e:	b17b      	cbz	r3, 8018a80 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8018a60:	6820      	ldr	r0, [r4, #0]
 8018a62:	6803      	ldr	r3, [r0, #0]
 8018a64:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8018a66:	4798      	blx	r3
 8018a68:	9009      	str	r0, [sp, #36]	; 0x24
 8018a6a:	6820      	ldr	r0, [r4, #0]
 8018a6c:	6802      	ldr	r2, [r0, #0]
 8018a6e:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8018a70:	4790      	blx	r2
 8018a72:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018a74:	9000      	str	r0, [sp, #0]
 8018a76:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8018a78:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8018a7a:	a830      	add	r0, sp, #192	; 0xc0
 8018a7c:	f002 fa8f 	bl	801af9e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8018a80:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8018a84:	7be2      	ldrb	r2, [r4, #15]
 8018a86:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8018a8a:	1a8a      	subs	r2, r1, r2
 8018a8c:	7c21      	ldrb	r1, [r4, #16]
 8018a8e:	9103      	str	r1, [sp, #12]
 8018a90:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8018a94:	9102      	str	r1, [sp, #8]
 8018a96:	6821      	ldr	r1, [r4, #0]
 8018a98:	9101      	str	r1, [sp, #4]
 8018a9a:	7961      	ldrb	r1, [r4, #5]
 8018a9c:	9100      	str	r1, [sp, #0]
 8018a9e:	b292      	uxth	r2, r2
 8018aa0:	a930      	add	r1, sp, #192	; 0xc0
 8018aa2:	a80e      	add	r0, sp, #56	; 0x38
 8018aa4:	f7ff fc34 	bl	8018310 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8018aa8:	2e00      	cmp	r6, #0
 8018aaa:	dc5b      	bgt.n	8018b64 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8018aac:	af17      	add	r7, sp, #92	; 0x5c
 8018aae:	f04f 0900 	mov.w	r9, #0
 8018ab2:	7c23      	ldrb	r3, [r4, #16]
 8018ab4:	2b00      	cmp	r3, #0
 8018ab6:	f000 80b1 	beq.w	8018c1c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 8018aba:	a80e      	add	r0, sp, #56	; 0x38
 8018abc:	f7ff fe4c 	bl	8018758 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8018ac0:	f1ba 0f00 	cmp.w	sl, #0
 8018ac4:	f000 80a5 	beq.w	8018c12 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8018ac8:	7c23      	ldrb	r3, [r4, #16]
 8018aca:	9309      	str	r3, [sp, #36]	; 0x24
 8018acc:	2264      	movs	r2, #100	; 0x64
 8018ace:	4639      	mov	r1, r7
 8018ad0:	a849      	add	r0, sp, #292	; 0x124
 8018ad2:	f012 ff0c 	bl	802b8ee <memcpy>
 8018ad6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018ad8:	2b00      	cmp	r3, #0
 8018ada:	f000 80a7 	beq.w	8018c2c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 8018ade:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8018ae2:	7922      	ldrb	r2, [r4, #4]
 8018ae4:	2a01      	cmp	r2, #1
 8018ae6:	f040 808a 	bne.w	8018bfe <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 8018aea:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 8018aee:	1ac0      	subs	r0, r0, r3
 8018af0:	2302      	movs	r3, #2
 8018af2:	fb90 f0f3 	sdiv	r0, r0, r3
 8018af6:	b200      	sxth	r0, r0
 8018af8:	7c23      	ldrb	r3, [r4, #16]
 8018afa:	2b00      	cmp	r3, #0
 8018afc:	f000 808b 	beq.w	8018c16 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8018b00:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 8018b04:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 8018b08:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8018b0c:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8018b10:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8018b14:	4410      	add	r0, r2
 8018b16:	b200      	sxth	r0, r0
 8018b18:	9000      	str	r0, [sp, #0]
 8018b1a:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8018b1e:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8018b22:	4642      	mov	r2, r8
 8018b24:	2100      	movs	r1, #0
 8018b26:	4658      	mov	r0, fp
 8018b28:	f7ff fca2 	bl	8018470 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8018b2c:	2800      	cmp	r0, #0
 8018b2e:	d163      	bne.n	8018bf8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8018b30:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8018b34:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8018b38:	b2b2      	uxth	r2, r6
 8018b3a:	4413      	add	r3, r2
 8018b3c:	1a8a      	subs	r2, r1, r2
 8018b3e:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 8018b42:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 8018b46:	b21b      	sxth	r3, r3
 8018b48:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8018b4c:	2a00      	cmp	r2, #0
 8018b4e:	d153      	bne.n	8018bf8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8018b50:	6822      	ldr	r2, [r4, #0]
 8018b52:	8869      	ldrh	r1, [r5, #2]
 8018b54:	7a12      	ldrb	r2, [r2, #8]
 8018b56:	1a9b      	subs	r3, r3, r2
 8018b58:	88ea      	ldrh	r2, [r5, #6]
 8018b5a:	440a      	add	r2, r1
 8018b5c:	b212      	sxth	r2, r2
 8018b5e:	4293      	cmp	r3, r2
 8018b60:	dda7      	ble.n	8018ab2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8018b62:	e049      	b.n	8018bf8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8018b64:	7c23      	ldrb	r3, [r4, #16]
 8018b66:	444f      	add	r7, r9
 8018b68:	b1c3      	cbz	r3, 8018b9c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 8018b6a:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8018b6e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8018b72:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8018b76:	443b      	add	r3, r7
 8018b78:	4293      	cmp	r3, r2
 8018b7a:	da97      	bge.n	8018aac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8018b7c:	a80e      	add	r0, sp, #56	; 0x38
 8018b7e:	f7ff fdeb 	bl	8018758 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8018b82:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 8018b86:	3b01      	subs	r3, #1
 8018b88:	b29b      	uxth	r3, r3
 8018b8a:	454b      	cmp	r3, r9
 8018b8c:	9309      	str	r3, [sp, #36]	; 0x24
 8018b8e:	d021      	beq.n	8018bd4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8018b90:	7961      	ldrb	r1, [r4, #5]
 8018b92:	a817      	add	r0, sp, #92	; 0x5c
 8018b94:	f7f7 f948 	bl	800fe28 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8018b98:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018b9a:	e7f4      	b.n	8018b86 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8018b9c:	fa1f f986 	uxth.w	r9, r6
 8018ba0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8018ba4:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8018ba8:	443b      	add	r3, r7
 8018baa:	4293      	cmp	r3, r2
 8018bac:	f6bf af7e 	bge.w	8018aac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8018bb0:	a817      	add	r0, sp, #92	; 0x5c
 8018bb2:	f002 fdc5 	bl	801b740 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8018bb6:	b1f8      	cbz	r0, 8018bf8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8018bb8:	280a      	cmp	r0, #10
 8018bba:	d1f1      	bne.n	8018ba0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8018bbc:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8018bc0:	444b      	add	r3, r9
 8018bc2:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8018bc6:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8018bca:	eba3 0309 	sub.w	r3, r3, r9
 8018bce:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8018bd2:	e7e5      	b.n	8018ba0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8018bd4:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8018bd8:	b2b3      	uxth	r3, r6
 8018bda:	441a      	add	r2, r3
 8018bdc:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8018be0:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 8018be4:	1ad3      	subs	r3, r2, r3
 8018be6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8018bea:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8018bee:	b11b      	cbz	r3, 8018bf8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8018bf0:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 8018bf4:	2b00      	cmp	r3, #0
 8018bf6:	d0ba      	beq.n	8018b6e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 8018bf8:	b063      	add	sp, #396	; 0x18c
 8018bfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018bfe:	2a02      	cmp	r2, #2
 8018c00:	d105      	bne.n	8018c0e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8018c02:	7be2      	ldrb	r2, [r4, #15]
 8018c04:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8018c08:	1a80      	subs	r0, r0, r2
 8018c0a:	1ac0      	subs	r0, r0, r3
 8018c0c:	e773      	b.n	8018af6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8018c0e:	2000      	movs	r0, #0
 8018c10:	e772      	b.n	8018af8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8018c12:	7be0      	ldrb	r0, [r4, #15]
 8018c14:	e770      	b.n	8018af8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8018c16:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8018c1a:	e773      	b.n	8018b04 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8018c1c:	f1ba 0f00 	cmp.w	sl, #0
 8018c20:	d0f7      	beq.n	8018c12 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8018c22:	2264      	movs	r2, #100	; 0x64
 8018c24:	4639      	mov	r1, r7
 8018c26:	a849      	add	r0, sp, #292	; 0x124
 8018c28:	f012 fe61 	bl	802b8ee <memcpy>
 8018c2c:	2300      	movs	r3, #0
 8018c2e:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8018c32:	6821      	ldr	r1, [r4, #0]
 8018c34:	a849      	add	r0, sp, #292	; 0x124
 8018c36:	f7ff fbae 	bl	8018396 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8018c3a:	b203      	sxth	r3, r0
 8018c3c:	e751      	b.n	8018ae2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08018c3e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8018c3e:	2b03      	cmp	r3, #3
 8018c40:	d818      	bhi.n	8018c74 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8018c42:	e8df f003 	tbb	[pc, r3]
 8018c46:	0602      	.short	0x0602
 8018c48:	130d      	.short	0x130d
 8018c4a:	f9b0 2000 	ldrsh.w	r2, [r0]
 8018c4e:	1850      	adds	r0, r2, r1
 8018c50:	4770      	bx	lr
 8018c52:	8803      	ldrh	r3, [r0, #0]
 8018c54:	8880      	ldrh	r0, [r0, #4]
 8018c56:	4418      	add	r0, r3
 8018c58:	b200      	sxth	r0, r0
 8018c5a:	1a80      	subs	r0, r0, r2
 8018c5c:	3801      	subs	r0, #1
 8018c5e:	4770      	bx	lr
 8018c60:	8803      	ldrh	r3, [r0, #0]
 8018c62:	8880      	ldrh	r0, [r0, #4]
 8018c64:	4418      	add	r0, r3
 8018c66:	b200      	sxth	r0, r0
 8018c68:	1a40      	subs	r0, r0, r1
 8018c6a:	e7f7      	b.n	8018c5c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8018c6c:	f9b0 0000 	ldrsh.w	r0, [r0]
 8018c70:	4410      	add	r0, r2
 8018c72:	4770      	bx	lr
 8018c74:	2000      	movs	r0, #0
 8018c76:	4770      	bx	lr

08018c78 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8018c78:	2b03      	cmp	r3, #3
 8018c7a:	d817      	bhi.n	8018cac <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8018c7c:	e8df f003 	tbb	[pc, r3]
 8018c80:	10090602 	.word	0x10090602
 8018c84:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8018c88:	1850      	adds	r0, r2, r1
 8018c8a:	4770      	bx	lr
 8018c8c:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8018c90:	e7fa      	b.n	8018c88 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8018c92:	8843      	ldrh	r3, [r0, #2]
 8018c94:	88c0      	ldrh	r0, [r0, #6]
 8018c96:	4418      	add	r0, r3
 8018c98:	b200      	sxth	r0, r0
 8018c9a:	1a80      	subs	r0, r0, r2
 8018c9c:	3801      	subs	r0, #1
 8018c9e:	4770      	bx	lr
 8018ca0:	8843      	ldrh	r3, [r0, #2]
 8018ca2:	88c0      	ldrh	r0, [r0, #6]
 8018ca4:	4418      	add	r0, r3
 8018ca6:	b200      	sxth	r0, r0
 8018ca8:	1a40      	subs	r0, r0, r1
 8018caa:	e7f7      	b.n	8018c9c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8018cac:	2000      	movs	r0, #0
 8018cae:	4770      	bx	lr

08018cb0 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8018cb0:	4b01      	ldr	r3, [pc, #4]	; (8018cb8 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8018cb2:	2200      	movs	r2, #0
 8018cb4:	601a      	str	r2, [r3, #0]
 8018cb6:	4770      	bx	lr
 8018cb8:	2000225c 	.word	0x2000225c

08018cbc <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8018cbc:	4603      	mov	r3, r0
 8018cbe:	b1c8      	cbz	r0, 8018cf4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8018cc0:	0c02      	lsrs	r2, r0, #16
 8018cc2:	0412      	lsls	r2, r2, #16
 8018cc4:	b9a2      	cbnz	r2, 8018cf0 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8018cc6:	0403      	lsls	r3, r0, #16
 8018cc8:	2010      	movs	r0, #16
 8018cca:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8018cce:	bf04      	itt	eq
 8018cd0:	021b      	lsleq	r3, r3, #8
 8018cd2:	3008      	addeq	r0, #8
 8018cd4:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8018cd8:	bf04      	itt	eq
 8018cda:	011b      	lsleq	r3, r3, #4
 8018cdc:	3004      	addeq	r0, #4
 8018cde:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8018ce2:	bf04      	itt	eq
 8018ce4:	009b      	lsleq	r3, r3, #2
 8018ce6:	3002      	addeq	r0, #2
 8018ce8:	2b00      	cmp	r3, #0
 8018cea:	db04      	blt.n	8018cf6 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8018cec:	3001      	adds	r0, #1
 8018cee:	4770      	bx	lr
 8018cf0:	2000      	movs	r0, #0
 8018cf2:	e7ea      	b.n	8018cca <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8018cf4:	2020      	movs	r0, #32
 8018cf6:	4770      	bx	lr

08018cf8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8018cf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018cfc:	b087      	sub	sp, #28
 8018cfe:	460d      	mov	r5, r1
 8018d00:	4616      	mov	r6, r2
 8018d02:	4698      	mov	r8, r3
 8018d04:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 8018d08:	4601      	mov	r1, r0
 8018d0a:	b120      	cbz	r0, 8018d16 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8018d0c:	b11a      	cbz	r2, 8018d16 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8018d0e:	2d1f      	cmp	r5, #31
 8018d10:	d801      	bhi.n	8018d16 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8018d12:	2b1f      	cmp	r3, #31
 8018d14:	d904      	bls.n	8018d20 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 8018d16:	2000      	movs	r0, #0
 8018d18:	6038      	str	r0, [r7, #0]
 8018d1a:	b007      	add	sp, #28
 8018d1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018d20:	b97d      	cbnz	r5, 8018d42 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8018d22:	b143      	cbz	r3, 8018d36 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8018d24:	4602      	mov	r2, r0
 8018d26:	e9cd 4700 	strd	r4, r7, [sp]
 8018d2a:	462b      	mov	r3, r5
 8018d2c:	4641      	mov	r1, r8
 8018d2e:	4630      	mov	r0, r6
 8018d30:	f7ff ffe2 	bl	8018cf8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8018d34:	e7f1      	b.n	8018d1a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8018d36:	f04f 33ff 	mov.w	r3, #4294967295
 8018d3a:	603b      	str	r3, [r7, #0]
 8018d3c:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8018d40:	e7eb      	b.n	8018d1a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8018d42:	fa32 fa05 	lsrs.w	sl, r2, r5
 8018d46:	d106      	bne.n	8018d56 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 8018d48:	4346      	muls	r6, r0
 8018d4a:	fbb6 f0f4 	udiv	r0, r6, r4
 8018d4e:	fb04 6610 	mls	r6, r4, r0, r6
 8018d52:	603e      	str	r6, [r7, #0]
 8018d54:	e7e1      	b.n	8018d1a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8018d56:	2201      	movs	r2, #1
 8018d58:	40aa      	lsls	r2, r5
 8018d5a:	3a01      	subs	r2, #1
 8018d5c:	4016      	ands	r6, r2
 8018d5e:	fa00 fb05 	lsl.w	fp, r0, r5
 8018d62:	4630      	mov	r0, r6
 8018d64:	fbbb f9f4 	udiv	r9, fp, r4
 8018d68:	fb0a f309 	mul.w	r3, sl, r9
 8018d6c:	9303      	str	r3, [sp, #12]
 8018d6e:	f7ff ffa5 	bl	8018cbc <_ZN8touchgfx16TouchCalibration4clzuEm>
 8018d72:	462b      	mov	r3, r5
 8018d74:	460a      	mov	r2, r1
 8018d76:	e9cd 4700 	strd	r4, r7, [sp]
 8018d7a:	4601      	mov	r1, r0
 8018d7c:	4630      	mov	r0, r6
 8018d7e:	f7ff ffbb 	bl	8018cf8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8018d82:	fb04 b919 	mls	r9, r4, r9, fp
 8018d86:	4606      	mov	r6, r0
 8018d88:	4648      	mov	r0, r9
 8018d8a:	eb05 0108 	add.w	r1, r5, r8
 8018d8e:	f7ff ff95 	bl	8018cbc <_ZN8touchgfx16TouchCalibration4clzuEm>
 8018d92:	ab05      	add	r3, sp, #20
 8018d94:	e9cd 4300 	strd	r4, r3, [sp]
 8018d98:	464a      	mov	r2, r9
 8018d9a:	4603      	mov	r3, r0
 8018d9c:	4650      	mov	r0, sl
 8018d9e:	f7ff ffab 	bl	8018cf8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8018da2:	6839      	ldr	r1, [r7, #0]
 8018da4:	9a05      	ldr	r2, [sp, #20]
 8018da6:	9b03      	ldr	r3, [sp, #12]
 8018da8:	4411      	add	r1, r2
 8018daa:	fbb1 f2f4 	udiv	r2, r1, r4
 8018dae:	18d3      	adds	r3, r2, r3
 8018db0:	441e      	add	r6, r3
 8018db2:	fb04 1412 	mls	r4, r4, r2, r1
 8018db6:	4430      	add	r0, r6
 8018db8:	603c      	str	r4, [r7, #0]
 8018dba:	e7ae      	b.n	8018d1a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08018dbc <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8018dbc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8018dc0:	b085      	sub	sp, #20
 8018dc2:	f1b0 0900 	subs.w	r9, r0, #0
 8018dc6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8018dc8:	461d      	mov	r5, r3
 8018dca:	bfbf      	itttt	lt
 8018dcc:	6823      	ldrlt	r3, [r4, #0]
 8018dce:	425b      	neglt	r3, r3
 8018dd0:	f1c9 0900 	rsblt	r9, r9, #0
 8018dd4:	6023      	strlt	r3, [r4, #0]
 8018dd6:	bfb4      	ite	lt
 8018dd8:	f04f 36ff 	movlt.w	r6, #4294967295
 8018ddc:	2601      	movge	r6, #1
 8018dde:	2a00      	cmp	r2, #0
 8018de0:	4617      	mov	r7, r2
 8018de2:	da04      	bge.n	8018dee <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8018de4:	6823      	ldr	r3, [r4, #0]
 8018de6:	425b      	negs	r3, r3
 8018de8:	4257      	negs	r7, r2
 8018dea:	4276      	negs	r6, r6
 8018dec:	6023      	str	r3, [r4, #0]
 8018dee:	2d00      	cmp	r5, #0
 8018df0:	4638      	mov	r0, r7
 8018df2:	bfba      	itte	lt
 8018df4:	426d      	neglt	r5, r5
 8018df6:	f04f 38ff 	movlt.w	r8, #4294967295
 8018dfa:	f04f 0801 	movge.w	r8, #1
 8018dfe:	f7ff ff5d 	bl	8018cbc <_ZN8touchgfx16TouchCalibration4clzuEm>
 8018e02:	ab03      	add	r3, sp, #12
 8018e04:	e9cd 5300 	strd	r5, r3, [sp]
 8018e08:	463a      	mov	r2, r7
 8018e0a:	4603      	mov	r3, r0
 8018e0c:	4648      	mov	r0, r9
 8018e0e:	f7ff ff73 	bl	8018cf8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8018e12:	6823      	ldr	r3, [r4, #0]
 8018e14:	9a03      	ldr	r2, [sp, #12]
 8018e16:	4546      	cmp	r6, r8
 8018e18:	441a      	add	r2, r3
 8018e1a:	fb92 f3f5 	sdiv	r3, r2, r5
 8018e1e:	4418      	add	r0, r3
 8018e20:	bf18      	it	ne
 8018e22:	4240      	negne	r0, r0
 8018e24:	fb05 2313 	mls	r3, r5, r3, r2
 8018e28:	1c72      	adds	r2, r6, #1
 8018e2a:	6023      	str	r3, [r4, #0]
 8018e2c:	d105      	bne.n	8018e3a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8018e2e:	2b00      	cmp	r3, #0
 8018e30:	f1c3 0200 	rsb	r2, r3, #0
 8018e34:	db0b      	blt.n	8018e4e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8018e36:	6022      	str	r2, [r4, #0]
 8018e38:	e006      	b.n	8018e48 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8018e3a:	2e01      	cmp	r6, #1
 8018e3c:	d104      	bne.n	8018e48 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8018e3e:	2b00      	cmp	r3, #0
 8018e40:	da02      	bge.n	8018e48 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8018e42:	442b      	add	r3, r5
 8018e44:	3801      	subs	r0, #1
 8018e46:	6023      	str	r3, [r4, #0]
 8018e48:	b005      	add	sp, #20
 8018e4a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8018e4e:	3801      	subs	r0, #1
 8018e50:	1b52      	subs	r2, r2, r5
 8018e52:	e7f0      	b.n	8018e36 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08018e54 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8018e54:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8018e58:	4c1c      	ldr	r4, [pc, #112]	; (8018ecc <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8018e5a:	6807      	ldr	r7, [r0, #0]
 8018e5c:	69a3      	ldr	r3, [r4, #24]
 8018e5e:	4605      	mov	r5, r0
 8018e60:	b92b      	cbnz	r3, 8018e6e <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8018e62:	6840      	ldr	r0, [r0, #4]
 8018e64:	e9c5 7000 	strd	r7, r0, [r5]
 8018e68:	b004      	add	sp, #16
 8018e6a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018e6e:	68a2      	ldr	r2, [r4, #8]
 8018e70:	6820      	ldr	r0, [r4, #0]
 8018e72:	ae04      	add	r6, sp, #16
 8018e74:	f04f 0802 	mov.w	r8, #2
 8018e78:	fb93 f1f8 	sdiv	r1, r3, r8
 8018e7c:	440a      	add	r2, r1
 8018e7e:	f846 2d04 	str.w	r2, [r6, #-4]!
 8018e82:	69e1      	ldr	r1, [r4, #28]
 8018e84:	9600      	str	r6, [sp, #0]
 8018e86:	463a      	mov	r2, r7
 8018e88:	f7ff ff98 	bl	8018dbc <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8018e8c:	69a3      	ldr	r3, [r4, #24]
 8018e8e:	686a      	ldr	r2, [r5, #4]
 8018e90:	6a21      	ldr	r1, [r4, #32]
 8018e92:	9600      	str	r6, [sp, #0]
 8018e94:	4607      	mov	r7, r0
 8018e96:	6860      	ldr	r0, [r4, #4]
 8018e98:	f7ff ff90 	bl	8018dbc <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8018e9c:	6962      	ldr	r2, [r4, #20]
 8018e9e:	69a3      	ldr	r3, [r4, #24]
 8018ea0:	fb93 f8f8 	sdiv	r8, r3, r8
 8018ea4:	4442      	add	r2, r8
 8018ea6:	9203      	str	r2, [sp, #12]
 8018ea8:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8018eaa:	682a      	ldr	r2, [r5, #0]
 8018eac:	9600      	str	r6, [sp, #0]
 8018eae:	4407      	add	r7, r0
 8018eb0:	68e0      	ldr	r0, [r4, #12]
 8018eb2:	f7ff ff83 	bl	8018dbc <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8018eb6:	9600      	str	r6, [sp, #0]
 8018eb8:	4680      	mov	r8, r0
 8018eba:	69a3      	ldr	r3, [r4, #24]
 8018ebc:	686a      	ldr	r2, [r5, #4]
 8018ebe:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8018ec0:	6920      	ldr	r0, [r4, #16]
 8018ec2:	f7ff ff7b 	bl	8018dbc <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8018ec6:	4440      	add	r0, r8
 8018ec8:	e7cc      	b.n	8018e64 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8018eca:	bf00      	nop
 8018ecc:	20002260 	.word	0x20002260

08018ed0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8018ed0:	4b07      	ldr	r3, [pc, #28]	; (8018ef0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8018ed2:	781b      	ldrb	r3, [r3, #0]
 8018ed4:	2b01      	cmp	r3, #1
 8018ed6:	d109      	bne.n	8018eec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8018ed8:	f9b1 3000 	ldrsh.w	r3, [r1]
 8018edc:	f9b0 2000 	ldrsh.w	r2, [r0]
 8018ee0:	8003      	strh	r3, [r0, #0]
 8018ee2:	4b04      	ldr	r3, [pc, #16]	; (8018ef4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8018ee4:	881b      	ldrh	r3, [r3, #0]
 8018ee6:	3b01      	subs	r3, #1
 8018ee8:	1a9b      	subs	r3, r3, r2
 8018eea:	800b      	strh	r3, [r1, #0]
 8018eec:	4770      	bx	lr
 8018eee:	bf00      	nop
 8018ef0:	20002244 	.word	0x20002244
 8018ef4:	20002240 	.word	0x20002240

08018ef8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8018ef8:	b510      	push	{r4, lr}
 8018efa:	4b07      	ldr	r3, [pc, #28]	; (8018f18 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8018efc:	781b      	ldrb	r3, [r3, #0]
 8018efe:	2b01      	cmp	r3, #1
 8018f00:	d108      	bne.n	8018f14 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8018f02:	4b06      	ldr	r3, [pc, #24]	; (8018f1c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8018f04:	880c      	ldrh	r4, [r1, #0]
 8018f06:	881b      	ldrh	r3, [r3, #0]
 8018f08:	f9b0 2000 	ldrsh.w	r2, [r0]
 8018f0c:	3b01      	subs	r3, #1
 8018f0e:	1b1b      	subs	r3, r3, r4
 8018f10:	8003      	strh	r3, [r0, #0]
 8018f12:	800a      	strh	r2, [r1, #0]
 8018f14:	bd10      	pop	{r4, pc}
 8018f16:	bf00      	nop
 8018f18:	20002244 	.word	0x20002244
 8018f1c:	20002240 	.word	0x20002240

08018f20 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8018f20:	b510      	push	{r4, lr}
 8018f22:	4b0a      	ldr	r3, [pc, #40]	; (8018f4c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8018f24:	781b      	ldrb	r3, [r3, #0]
 8018f26:	2b01      	cmp	r3, #1
 8018f28:	d10e      	bne.n	8018f48 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8018f2a:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8018f2e:	8843      	ldrh	r3, [r0, #2]
 8018f30:	f9b0 4000 	ldrsh.w	r4, [r0]
 8018f34:	8044      	strh	r4, [r0, #2]
 8018f36:	18ca      	adds	r2, r1, r3
 8018f38:	4b05      	ldr	r3, [pc, #20]	; (8018f50 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8018f3a:	881b      	ldrh	r3, [r3, #0]
 8018f3c:	1a9b      	subs	r3, r3, r2
 8018f3e:	8003      	strh	r3, [r0, #0]
 8018f40:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8018f44:	80c3      	strh	r3, [r0, #6]
 8018f46:	8081      	strh	r1, [r0, #4]
 8018f48:	bd10      	pop	{r4, pc}
 8018f4a:	bf00      	nop
 8018f4c:	20002244 	.word	0x20002244
 8018f50:	20002240 	.word	0x20002240

08018f54 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8018f54:	4b08      	ldr	r3, [pc, #32]	; (8018f78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8018f56:	781b      	ldrb	r3, [r3, #0]
 8018f58:	2b01      	cmp	r3, #1
 8018f5a:	d10c      	bne.n	8018f76 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8018f5c:	8803      	ldrh	r3, [r0, #0]
 8018f5e:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8018f62:	8842      	ldrh	r2, [r0, #2]
 8018f64:	8002      	strh	r2, [r0, #0]
 8018f66:	185a      	adds	r2, r3, r1
 8018f68:	4b04      	ldr	r3, [pc, #16]	; (8018f7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8018f6a:	881b      	ldrh	r3, [r3, #0]
 8018f6c:	1a9b      	subs	r3, r3, r2
 8018f6e:	8043      	strh	r3, [r0, #2]
 8018f70:	88c3      	ldrh	r3, [r0, #6]
 8018f72:	8083      	strh	r3, [r0, #4]
 8018f74:	80c1      	strh	r1, [r0, #6]
 8018f76:	4770      	bx	lr
 8018f78:	20002244 	.word	0x20002244
 8018f7c:	20002240 	.word	0x20002240

08018f80 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8018f80:	b510      	push	{r4, lr}
 8018f82:	4b07      	ldr	r3, [pc, #28]	; (8018fa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8018f84:	781b      	ldrb	r3, [r3, #0]
 8018f86:	2b01      	cmp	r3, #1
 8018f88:	d108      	bne.n	8018f9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8018f8a:	f9b1 3000 	ldrsh.w	r3, [r1]
 8018f8e:	f9b0 4000 	ldrsh.w	r4, [r0]
 8018f92:	8003      	strh	r3, [r0, #0]
 8018f94:	8893      	ldrh	r3, [r2, #4]
 8018f96:	3b01      	subs	r3, #1
 8018f98:	1b1b      	subs	r3, r3, r4
 8018f9a:	800b      	strh	r3, [r1, #0]
 8018f9c:	bd10      	pop	{r4, pc}
 8018f9e:	bf00      	nop
 8018fa0:	20002244 	.word	0x20002244

08018fa4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 8018fa4:	4b0b      	ldr	r3, [pc, #44]	; (8018fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 8018fa6:	781b      	ldrb	r3, [r3, #0]
 8018fa8:	2b01      	cmp	r3, #1
 8018faa:	d111      	bne.n	8018fd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 8018fac:	680b      	ldr	r3, [r1, #0]
 8018fae:	ed90 7a00 	vldr	s14, [r0]
 8018fb2:	6003      	str	r3, [r0, #0]
 8018fb4:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8018fb8:	eddf 6a07 	vldr	s13, [pc, #28]	; 8018fd8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 8018fbc:	ee07 3a90 	vmov	s15, r3
 8018fc0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018fc4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8018fc8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8018fcc:	edc1 7a00 	vstr	s15, [r1]
 8018fd0:	4770      	bx	lr
 8018fd2:	bf00      	nop
 8018fd4:	20002244 	.word	0x20002244
 8018fd8:	38d1b717 	.word	0x38d1b717

08018fdc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8018fdc:	b510      	push	{r4, lr}
 8018fde:	4b0a      	ldr	r3, [pc, #40]	; (8019008 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8018fe0:	781b      	ldrb	r3, [r3, #0]
 8018fe2:	2b01      	cmp	r3, #1
 8018fe4:	460a      	mov	r2, r1
 8018fe6:	d10d      	bne.n	8019004 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8018fe8:	8881      	ldrh	r1, [r0, #4]
 8018fea:	8803      	ldrh	r3, [r0, #0]
 8018fec:	440b      	add	r3, r1
 8018fee:	4601      	mov	r1, r0
 8018ff0:	3b01      	subs	r3, #1
 8018ff2:	f821 3b02 	strh.w	r3, [r1], #2
 8018ff6:	f7ff ffc3 	bl	8018f80 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8018ffa:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8018ffe:	88c2      	ldrh	r2, [r0, #6]
 8019000:	8082      	strh	r2, [r0, #4]
 8019002:	80c3      	strh	r3, [r0, #6]
 8019004:	bd10      	pop	{r4, pc}
 8019006:	bf00      	nop
 8019008:	20002244 	.word	0x20002244

0801900c <_ZN8touchgfx11Application13requestRedrawEv>:
 801900c:	4b06      	ldr	r3, [pc, #24]	; (8019028 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 801900e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8019012:	4b06      	ldr	r3, [pc, #24]	; (801902c <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8019014:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 8019018:	f9b3 3000 	ldrsh.w	r3, [r3]
 801901c:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 8019020:	2100      	movs	r1, #0
 8019022:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 8019026:	4770      	bx	lr
 8019028:	20002240 	.word	0x20002240
 801902c:	20002242 	.word	0x20002242

08019030 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8019030:	4b03      	ldr	r3, [pc, #12]	; (8019040 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8019032:	6818      	ldr	r0, [r3, #0]
 8019034:	b110      	cbz	r0, 801903c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8019036:	6803      	ldr	r3, [r0, #0]
 8019038:	699b      	ldr	r3, [r3, #24]
 801903a:	4718      	bx	r3
 801903c:	4770      	bx	lr
 801903e:	bf00      	nop
 8019040:	20002290 	.word	0x20002290

08019044 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8019044:	4770      	bx	lr
	...

08019048 <_ZN8touchgfx11Application4drawEv>:
 8019048:	b507      	push	{r0, r1, r2, lr}
 801904a:	4b09      	ldr	r3, [pc, #36]	; (8019070 <_ZN8touchgfx11Application4drawEv+0x28>)
 801904c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8019050:	4b08      	ldr	r3, [pc, #32]	; (8019074 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8019052:	f8ad 2004 	strh.w	r2, [sp, #4]
 8019056:	f9b3 3000 	ldrsh.w	r3, [r3]
 801905a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801905e:	6803      	ldr	r3, [r0, #0]
 8019060:	2100      	movs	r1, #0
 8019062:	9100      	str	r1, [sp, #0]
 8019064:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8019066:	4669      	mov	r1, sp
 8019068:	4798      	blx	r3
 801906a:	b003      	add	sp, #12
 801906c:	f85d fb04 	ldr.w	pc, [sp], #4
 8019070:	20002240 	.word	0x20002240
 8019074:	20002242 	.word	0x20002242

08019078 <_ZN8touchgfx11Application10invalidateEv>:
 8019078:	4b09      	ldr	r3, [pc, #36]	; (80190a0 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 801907a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801907e:	4b09      	ldr	r3, [pc, #36]	; (80190a4 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8019080:	b082      	sub	sp, #8
 8019082:	f9b3 3000 	ldrsh.w	r3, [r3]
 8019086:	f8ad 2004 	strh.w	r2, [sp, #4]
 801908a:	2100      	movs	r1, #0
 801908c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8019090:	9100      	str	r1, [sp, #0]
 8019092:	6803      	ldr	r3, [r0, #0]
 8019094:	aa02      	add	r2, sp, #8
 8019096:	e912 0006 	ldmdb	r2, {r1, r2}
 801909a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801909c:	b002      	add	sp, #8
 801909e:	4718      	bx	r3
 80190a0:	20002240 	.word	0x20002240
 80190a4:	20002242 	.word	0x20002242

080190a8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 80190a8:	4b03      	ldr	r3, [pc, #12]	; (80190b8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 80190aa:	6818      	ldr	r0, [r3, #0]
 80190ac:	b110      	cbz	r0, 80190b4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 80190ae:	6803      	ldr	r3, [r0, #0]
 80190b0:	69db      	ldr	r3, [r3, #28]
 80190b2:	4718      	bx	r3
 80190b4:	4770      	bx	lr
 80190b6:	bf00      	nop
 80190b8:	20002290 	.word	0x20002290

080190bc <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 80190bc:	4b03      	ldr	r3, [pc, #12]	; (80190cc <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 80190be:	6818      	ldr	r0, [r3, #0]
 80190c0:	b110      	cbz	r0, 80190c8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 80190c2:	6803      	ldr	r3, [r0, #0]
 80190c4:	6a1b      	ldr	r3, [r3, #32]
 80190c6:	4718      	bx	r3
 80190c8:	4770      	bx	lr
 80190ca:	bf00      	nop
 80190cc:	20002290 	.word	0x20002290

080190d0 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 80190d0:	2300      	movs	r3, #0
 80190d2:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 80190d6:	4770      	bx	lr

080190d8 <_ZN8touchgfx11Application14handleKeyEventEh>:
 80190d8:	4b03      	ldr	r3, [pc, #12]	; (80190e8 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 80190da:	6818      	ldr	r0, [r3, #0]
 80190dc:	b110      	cbz	r0, 80190e4 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 80190de:	6803      	ldr	r3, [r0, #0]
 80190e0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80190e2:	4718      	bx	r3
 80190e4:	4770      	bx	lr
 80190e6:	bf00      	nop
 80190e8:	20002290 	.word	0x20002290

080190ec <_ZNK8touchgfx4Rect9intersectERKS0_>:
 80190ec:	b510      	push	{r4, lr}
 80190ee:	f9b1 4000 	ldrsh.w	r4, [r1]
 80190f2:	888a      	ldrh	r2, [r1, #4]
 80190f4:	f9b0 3000 	ldrsh.w	r3, [r0]
 80190f8:	4422      	add	r2, r4
 80190fa:	b212      	sxth	r2, r2
 80190fc:	4293      	cmp	r3, r2
 80190fe:	da15      	bge.n	801912c <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8019100:	8882      	ldrh	r2, [r0, #4]
 8019102:	4413      	add	r3, r2
 8019104:	b21b      	sxth	r3, r3
 8019106:	429c      	cmp	r4, r3
 8019108:	da10      	bge.n	801912c <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801910a:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 801910e:	88c9      	ldrh	r1, [r1, #6]
 8019110:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8019114:	4419      	add	r1, r3
 8019116:	b209      	sxth	r1, r1
 8019118:	428a      	cmp	r2, r1
 801911a:	da07      	bge.n	801912c <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801911c:	88c0      	ldrh	r0, [r0, #6]
 801911e:	4410      	add	r0, r2
 8019120:	b200      	sxth	r0, r0
 8019122:	4283      	cmp	r3, r0
 8019124:	bfac      	ite	ge
 8019126:	2000      	movge	r0, #0
 8019128:	2001      	movlt	r0, #1
 801912a:	bd10      	pop	{r4, pc}
 801912c:	2000      	movs	r0, #0
 801912e:	e7fc      	b.n	801912a <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08019130 <_ZN8touchgfx4Rect10restrictToEss>:
 8019130:	f9b0 3000 	ldrsh.w	r3, [r0]
 8019134:	2b00      	cmp	r3, #0
 8019136:	b510      	push	{r4, lr}
 8019138:	da04      	bge.n	8019144 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 801913a:	8884      	ldrh	r4, [r0, #4]
 801913c:	4423      	add	r3, r4
 801913e:	8083      	strh	r3, [r0, #4]
 8019140:	2300      	movs	r3, #0
 8019142:	8003      	strh	r3, [r0, #0]
 8019144:	f9b0 4000 	ldrsh.w	r4, [r0]
 8019148:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801914c:	1b09      	subs	r1, r1, r4
 801914e:	428b      	cmp	r3, r1
 8019150:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8019154:	bfc8      	it	gt
 8019156:	8081      	strhgt	r1, [r0, #4]
 8019158:	2b00      	cmp	r3, #0
 801915a:	da04      	bge.n	8019166 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 801915c:	88c1      	ldrh	r1, [r0, #6]
 801915e:	440b      	add	r3, r1
 8019160:	80c3      	strh	r3, [r0, #6]
 8019162:	2300      	movs	r3, #0
 8019164:	8043      	strh	r3, [r0, #2]
 8019166:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801916a:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 801916e:	1a52      	subs	r2, r2, r1
 8019170:	4293      	cmp	r3, r2
 8019172:	bfc8      	it	gt
 8019174:	80c2      	strhgt	r2, [r0, #6]
 8019176:	bd10      	pop	{r4, pc}

08019178 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8019178:	b510      	push	{r4, lr}
 801917a:	4b10      	ldr	r3, [pc, #64]	; (80191bc <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 801917c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8019180:	4b0f      	ldr	r3, [pc, #60]	; (80191c0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8019182:	460c      	mov	r4, r1
 8019184:	4620      	mov	r0, r4
 8019186:	f9b3 1000 	ldrsh.w	r1, [r3]
 801918a:	f7ff ffd1 	bl	8019130 <_ZN8touchgfx4Rect10restrictToEss>
 801918e:	4b0d      	ldr	r3, [pc, #52]	; (80191c4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8019190:	6818      	ldr	r0, [r3, #0]
 8019192:	b190      	cbz	r0, 80191ba <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8019194:	6803      	ldr	r3, [r0, #0]
 8019196:	4621      	mov	r1, r4
 8019198:	689b      	ldr	r3, [r3, #8]
 801919a:	4798      	blx	r3
 801919c:	4b0a      	ldr	r3, [pc, #40]	; (80191c8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 801919e:	6818      	ldr	r0, [r3, #0]
 80191a0:	b118      	cbz	r0, 80191aa <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 80191a2:	6803      	ldr	r3, [r0, #0]
 80191a4:	4621      	mov	r1, r4
 80191a6:	689b      	ldr	r3, [r3, #8]
 80191a8:	4798      	blx	r3
 80191aa:	4b08      	ldr	r3, [pc, #32]	; (80191cc <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 80191ac:	6818      	ldr	r0, [r3, #0]
 80191ae:	6803      	ldr	r3, [r0, #0]
 80191b0:	4621      	mov	r1, r4
 80191b2:	69db      	ldr	r3, [r3, #28]
 80191b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80191b8:	4718      	bx	r3
 80191ba:	bd10      	pop	{r4, pc}
 80191bc:	20002242 	.word	0x20002242
 80191c0:	20002240 	.word	0x20002240
 80191c4:	20002290 	.word	0x20002290
 80191c8:	2000228c 	.word	0x2000228c
 80191cc:	2000224c 	.word	0x2000224c

080191d0 <_ZNK8touchgfx4Rect8includesERKS0_>:
 80191d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80191d2:	4606      	mov	r6, r0
 80191d4:	4608      	mov	r0, r1
 80191d6:	460f      	mov	r7, r1
 80191d8:	f7fa f8af 	bl	801333a <_ZNK8touchgfx4Rect7isEmptyEv>
 80191dc:	b9e8      	cbnz	r0, 801921a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80191de:	f9b7 5000 	ldrsh.w	r5, [r7]
 80191e2:	f9b6 4000 	ldrsh.w	r4, [r6]
 80191e6:	42a5      	cmp	r5, r4
 80191e8:	db17      	blt.n	801921a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80191ea:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 80191ee:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 80191f2:	429a      	cmp	r2, r3
 80191f4:	db11      	blt.n	801921a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80191f6:	88b9      	ldrh	r1, [r7, #4]
 80191f8:	440d      	add	r5, r1
 80191fa:	88b1      	ldrh	r1, [r6, #4]
 80191fc:	440c      	add	r4, r1
 80191fe:	b22d      	sxth	r5, r5
 8019200:	b224      	sxth	r4, r4
 8019202:	42a5      	cmp	r5, r4
 8019204:	dc09      	bgt.n	801921a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8019206:	88f8      	ldrh	r0, [r7, #6]
 8019208:	4410      	add	r0, r2
 801920a:	88f2      	ldrh	r2, [r6, #6]
 801920c:	4413      	add	r3, r2
 801920e:	b200      	sxth	r0, r0
 8019210:	b21b      	sxth	r3, r3
 8019212:	4298      	cmp	r0, r3
 8019214:	bfcc      	ite	gt
 8019216:	2000      	movgt	r0, #0
 8019218:	2001      	movle	r0, #1
 801921a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0801921c <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 801921c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801921e:	4604      	mov	r4, r0
 8019220:	4608      	mov	r0, r1
 8019222:	460d      	mov	r5, r1
 8019224:	f7fa f889 	bl	801333a <_ZNK8touchgfx4Rect7isEmptyEv>
 8019228:	b978      	cbnz	r0, 801924a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 801922a:	4620      	mov	r0, r4
 801922c:	f7fa f885 	bl	801333a <_ZNK8touchgfx4Rect7isEmptyEv>
 8019230:	f9b5 6000 	ldrsh.w	r6, [r5]
 8019234:	b150      	cbz	r0, 801924c <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8019236:	8026      	strh	r6, [r4, #0]
 8019238:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801923c:	8063      	strh	r3, [r4, #2]
 801923e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8019242:	80a3      	strh	r3, [r4, #4]
 8019244:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8019248:	80e3      	strh	r3, [r4, #6]
 801924a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801924c:	f9b4 1000 	ldrsh.w	r1, [r4]
 8019250:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8019254:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8019258:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 801925c:	88ed      	ldrh	r5, [r5, #6]
 801925e:	42b1      	cmp	r1, r6
 8019260:	460f      	mov	r7, r1
 8019262:	bfa8      	it	ge
 8019264:	4637      	movge	r7, r6
 8019266:	4293      	cmp	r3, r2
 8019268:	4618      	mov	r0, r3
 801926a:	4466      	add	r6, ip
 801926c:	bfa8      	it	ge
 801926e:	4610      	movge	r0, r2
 8019270:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8019274:	8027      	strh	r7, [r4, #0]
 8019276:	442a      	add	r2, r5
 8019278:	88e5      	ldrh	r5, [r4, #6]
 801927a:	8060      	strh	r0, [r4, #2]
 801927c:	4461      	add	r1, ip
 801927e:	442b      	add	r3, r5
 8019280:	b236      	sxth	r6, r6
 8019282:	b209      	sxth	r1, r1
 8019284:	b212      	sxth	r2, r2
 8019286:	b21b      	sxth	r3, r3
 8019288:	428e      	cmp	r6, r1
 801928a:	bfac      	ite	ge
 801928c:	ebc7 0106 	rsbge	r1, r7, r6
 8019290:	ebc7 0101 	rsblt	r1, r7, r1
 8019294:	429a      	cmp	r2, r3
 8019296:	bfac      	ite	ge
 8019298:	ebc0 0202 	rsbge	r2, r0, r2
 801929c:	ebc0 0203 	rsblt	r2, r0, r3
 80192a0:	80a1      	strh	r1, [r4, #4]
 80192a2:	80e2      	strh	r2, [r4, #6]
 80192a4:	e7d1      	b.n	801924a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

080192a8 <_ZN8touchgfx11Application11getInstanceEv>:
 80192a8:	4b01      	ldr	r3, [pc, #4]	; (80192b0 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 80192aa:	6818      	ldr	r0, [r3, #0]
 80192ac:	4770      	bx	lr
 80192ae:	bf00      	nop
 80192b0:	200022a0 	.word	0x200022a0

080192b4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 80192b4:	b510      	push	{r4, lr}
 80192b6:	2300      	movs	r3, #0
 80192b8:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 80192bc:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 80192c0:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 80192c4:	4604      	mov	r4, r0
 80192c6:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 80192ca:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 80192ce:	429a      	cmp	r2, r3
 80192d0:	d90e      	bls.n	80192f0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 80192d2:	18e2      	adds	r2, r4, r3
 80192d4:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 80192d8:	b122      	cbz	r2, 80192e4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 80192da:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 80192de:	6803      	ldr	r3, [r0, #0]
 80192e0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80192e2:	4798      	blx	r3
 80192e4:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 80192e8:	3301      	adds	r3, #1
 80192ea:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 80192ee:	e7ea      	b.n	80192c6 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 80192f0:	bd10      	pop	{r4, pc}

080192f2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 80192f2:	b530      	push	{r4, r5, lr}
 80192f4:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 80192f8:	2200      	movs	r2, #0
 80192fa:	b293      	uxth	r3, r2
 80192fc:	429d      	cmp	r5, r3
 80192fe:	d90e      	bls.n	801931e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8019300:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 8019304:	428b      	cmp	r3, r1
 8019306:	d10b      	bne.n	8019320 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8019308:	1884      	adds	r4, r0, r2
 801930a:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 801930e:	b13b      	cbz	r3, 8019320 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8019310:	3b01      	subs	r3, #1
 8019312:	b2db      	uxtb	r3, r3
 8019314:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8019318:	b90b      	cbnz	r3, 801931e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 801931a:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 801931e:	bd30      	pop	{r4, r5, pc}
 8019320:	3201      	adds	r2, #1
 8019322:	e7ea      	b.n	80192fa <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

08019324 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8019324:	2300      	movs	r3, #0
 8019326:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 801932a:	f100 0284 	add.w	r2, r0, #132	; 0x84
 801932e:	30a4      	adds	r0, #164	; 0xa4
 8019330:	f802 3b01 	strb.w	r3, [r2], #1
 8019334:	4282      	cmp	r2, r0
 8019336:	d1fb      	bne.n	8019330 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8019338:	4770      	bx	lr
	...

0801933c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 801933c:	b570      	push	{r4, r5, r6, lr}
 801933e:	4c0b      	ldr	r4, [pc, #44]	; (801936c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8019340:	4605      	mov	r5, r0
 8019342:	6820      	ldr	r0, [r4, #0]
 8019344:	460e      	mov	r6, r1
 8019346:	b110      	cbz	r0, 801934e <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8019348:	6803      	ldr	r3, [r0, #0]
 801934a:	695b      	ldr	r3, [r3, #20]
 801934c:	4798      	blx	r3
 801934e:	1d28      	adds	r0, r5, #4
 8019350:	f7ff ffe8 	bl	8019324 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8019354:	6026      	str	r6, [r4, #0]
 8019356:	6833      	ldr	r3, [r6, #0]
 8019358:	4630      	mov	r0, r6
 801935a:	68db      	ldr	r3, [r3, #12]
 801935c:	4798      	blx	r3
 801935e:	682b      	ldr	r3, [r5, #0]
 8019360:	4628      	mov	r0, r5
 8019362:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8019364:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019368:	4718      	bx	r3
 801936a:	bf00      	nop
 801936c:	20002290 	.word	0x20002290

08019370 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8019370:	2300      	movs	r3, #0
 8019372:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 8019376:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 801937a:	b5f0      	push	{r4, r5, r6, r7, lr}
 801937c:	461a      	mov	r2, r3
 801937e:	461c      	mov	r4, r3
 8019380:	461d      	mov	r5, r3
 8019382:	459c      	cmp	ip, r3
 8019384:	dd1a      	ble.n	80193bc <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8019386:	18c6      	adds	r6, r0, r3
 8019388:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 801938c:	b16e      	cbz	r6, 80193aa <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 801938e:	429a      	cmp	r2, r3
 8019390:	d008      	beq.n	80193a4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8019392:	fa1f fe82 	uxth.w	lr, r2
 8019396:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 801939a:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 801939e:	1887      	adds	r7, r0, r2
 80193a0:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 80193a4:	3201      	adds	r2, #1
 80193a6:	3301      	adds	r3, #1
 80193a8:	e7eb      	b.n	8019382 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 80193aa:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 80193ae:	4299      	cmp	r1, r3
 80193b0:	bfa8      	it	ge
 80193b2:	3501      	addge	r5, #1
 80193b4:	429e      	cmp	r6, r3
 80193b6:	bfc8      	it	gt
 80193b8:	3401      	addgt	r4, #1
 80193ba:	e7f4      	b.n	80193a6 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 80193bc:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 80193c0:	1b49      	subs	r1, r1, r5
 80193c2:	1b1b      	subs	r3, r3, r4
 80193c4:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 80193c8:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 80193cc:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 80193d0:	4293      	cmp	r3, r2
 80193d2:	dd03      	ble.n	80193dc <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 80193d4:	3b01      	subs	r3, #1
 80193d6:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 80193da:	e7f7      	b.n	80193cc <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 80193dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

080193e0 <_ZN8touchgfx11Application15handleTickEventEv>:
 80193e0:	b570      	push	{r4, r5, r6, lr}
 80193e2:	4d16      	ldr	r5, [pc, #88]	; (801943c <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 80193e4:	4604      	mov	r4, r0
 80193e6:	6828      	ldr	r0, [r5, #0]
 80193e8:	b140      	cbz	r0, 80193fc <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 80193ea:	7a03      	ldrb	r3, [r0, #8]
 80193ec:	b933      	cbnz	r3, 80193fc <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 80193ee:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 80193f2:	6803      	ldr	r3, [r0, #0]
 80193f4:	689b      	ldr	r3, [r3, #8]
 80193f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80193fa:	4718      	bx	r3
 80193fc:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8019400:	4e0f      	ldr	r6, [pc, #60]	; (8019440 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8019402:	b973      	cbnz	r3, 8019422 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8019404:	b168      	cbz	r0, 8019422 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8019406:	7a03      	ldrb	r3, [r0, #8]
 8019408:	b15b      	cbz	r3, 8019422 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801940a:	6830      	ldr	r0, [r6, #0]
 801940c:	b110      	cbz	r0, 8019414 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 801940e:	6803      	ldr	r3, [r0, #0]
 8019410:	691b      	ldr	r3, [r3, #16]
 8019412:	4798      	blx	r3
 8019414:	6828      	ldr	r0, [r5, #0]
 8019416:	6803      	ldr	r3, [r0, #0]
 8019418:	68db      	ldr	r3, [r3, #12]
 801941a:	4798      	blx	r3
 801941c:	2301      	movs	r3, #1
 801941e:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8019422:	3404      	adds	r4, #4
 8019424:	4620      	mov	r0, r4
 8019426:	f7ff ff45 	bl	80192b4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 801942a:	4620      	mov	r0, r4
 801942c:	f7ff ffa0 	bl	8019370 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8019430:	6830      	ldr	r0, [r6, #0]
 8019432:	b110      	cbz	r0, 801943a <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8019434:	6803      	ldr	r3, [r0, #0]
 8019436:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8019438:	e7dd      	b.n	80193f6 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 801943a:	bd70      	pop	{r4, r5, r6, pc}
 801943c:	20002294 	.word	0x20002294
 8019440:	20002290 	.word	0x20002290

08019444 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 8019444:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8019446:	2300      	movs	r3, #0
 8019448:	4604      	mov	r4, r0
 801944a:	460d      	mov	r5, r1
 801944c:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8019450:	4618      	mov	r0, r3
 8019452:	b29a      	uxth	r2, r3
 8019454:	4291      	cmp	r1, r2
 8019456:	d911      	bls.n	801947c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8019458:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 801945c:	18e6      	adds	r6, r4, r3
 801945e:	42af      	cmp	r7, r5
 8019460:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 8019464:	d105      	bne.n	8019472 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 8019466:	2aff      	cmp	r2, #255	; 0xff
 8019468:	d002      	beq.n	8019470 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 801946a:	3201      	adds	r2, #1
 801946c:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 8019470:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8019472:	2a00      	cmp	r2, #0
 8019474:	bf08      	it	eq
 8019476:	2001      	moveq	r0, #1
 8019478:	3301      	adds	r3, #1
 801947a:	e7ea      	b.n	8019452 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 801947c:	b120      	cbz	r0, 8019488 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 801947e:	2920      	cmp	r1, #32
 8019480:	d102      	bne.n	8019488 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8019482:	4620      	mov	r0, r4
 8019484:	f7ff ff74 	bl	8019370 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8019488:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 801948c:	2b1f      	cmp	r3, #31
 801948e:	d8ef      	bhi.n	8019470 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8019490:	18e2      	adds	r2, r4, r3
 8019492:	2101      	movs	r1, #1
 8019494:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 8019498:	185a      	adds	r2, r3, r1
 801949a:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 801949e:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 80194a2:	e7e5      	b.n	8019470 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

080194a4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 80194a4:	4603      	mov	r3, r0
 80194a6:	f100 0140 	add.w	r1, r0, #64	; 0x40
 80194aa:	2200      	movs	r2, #0
 80194ac:	801a      	strh	r2, [r3, #0]
 80194ae:	805a      	strh	r2, [r3, #2]
 80194b0:	809a      	strh	r2, [r3, #4]
 80194b2:	80da      	strh	r2, [r3, #6]
 80194b4:	3308      	adds	r3, #8
 80194b6:	428b      	cmp	r3, r1
 80194b8:	d1f8      	bne.n	80194ac <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 80194ba:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 80194be:	4770      	bx	lr

080194c0 <_ZN8touchgfx11ApplicationC1Ev>:
 80194c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80194c2:	4606      	mov	r6, r0
 80194c4:	4b1c      	ldr	r3, [pc, #112]	; (8019538 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 80194c6:	f846 3b04 	str.w	r3, [r6], #4
 80194ca:	4604      	mov	r4, r0
 80194cc:	2500      	movs	r5, #0
 80194ce:	22a8      	movs	r2, #168	; 0xa8
 80194d0:	2100      	movs	r1, #0
 80194d2:	4630      	mov	r0, r6
 80194d4:	f012 f93b 	bl	802b74e <memset>
 80194d8:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 80194dc:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 80194e0:	f7ff ffe0 	bl	80194a4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80194e4:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 80194e8:	f7ff ffdc 	bl	80194a4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80194ec:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 80194f0:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 80194f4:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 80194f8:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 80194fc:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 8019500:	490e      	ldr	r1, [pc, #56]	; (801953c <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8019502:	480f      	ldr	r0, [pc, #60]	; (8019540 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8019504:	4f0f      	ldr	r7, [pc, #60]	; (8019544 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8019506:	f010 fcf9 	bl	8029efc <CRC_Lock>
 801950a:	4b0f      	ldr	r3, [pc, #60]	; (8019548 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 801950c:	b158      	cbz	r0, 8019526 <_ZN8touchgfx11ApplicationC1Ev+0x66>
 801950e:	801d      	strh	r5, [r3, #0]
 8019510:	4a0e      	ldr	r2, [pc, #56]	; (801954c <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8019512:	2300      	movs	r3, #0
 8019514:	6013      	str	r3, [r2, #0]
 8019516:	4a0e      	ldr	r2, [pc, #56]	; (8019550 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8019518:	603b      	str	r3, [r7, #0]
 801951a:	4630      	mov	r0, r6
 801951c:	6013      	str	r3, [r2, #0]
 801951e:	f7ff ff01 	bl	8019324 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8019522:	4620      	mov	r0, r4
 8019524:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8019526:	f44f 6280 	mov.w	r2, #1024	; 0x400
 801952a:	2002      	movs	r0, #2
 801952c:	801a      	strh	r2, [r3, #0]
 801952e:	6038      	str	r0, [r7, #0]
 8019530:	f001 fb00 	bl	801ab34 <_ZN8touchgfx6Screen4drawEv>
 8019534:	e7ec      	b.n	8019510 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8019536:	bf00      	nop
 8019538:	0802f968 	.word	0x0802f968
 801953c:	b5e8b5cd 	.word	0xb5e8b5cd
 8019540:	f407a5c2 	.word	0xf407a5c2
 8019544:	20002290 	.word	0x20002290
 8019548:	2000001c 	.word	0x2000001c
 801954c:	200022a0 	.word	0x200022a0
 8019550:	20002294 	.word	0x20002294

08019554 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8019554:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8019558:	3b01      	subs	r3, #1
 801955a:	b29b      	uxth	r3, r3
 801955c:	428b      	cmp	r3, r1
 801955e:	b510      	push	{r4, lr}
 8019560:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8019564:	d908      	bls.n	8019578 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8019566:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 801956a:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 801956e:	681a      	ldr	r2, [r3, #0]
 8019570:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8019574:	685a      	ldr	r2, [r3, #4]
 8019576:	6062      	str	r2, [r4, #4]
 8019578:	bd10      	pop	{r4, pc}
	...

0801957c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 801957c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019580:	4b8f      	ldr	r3, [pc, #572]	; (80197c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 8019582:	b08f      	sub	sp, #60	; 0x3c
 8019584:	ac0a      	add	r4, sp, #40	; 0x28
 8019586:	e884 0006 	stmia.w	r4, {r1, r2}
 801958a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801958e:	4b8d      	ldr	r3, [pc, #564]	; (80197c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8019590:	4683      	mov	fp, r0
 8019592:	f9b3 1000 	ldrsh.w	r1, [r3]
 8019596:	4620      	mov	r0, r4
 8019598:	f7ff fdca 	bl	8019130 <_ZN8touchgfx4Rect10restrictToEss>
 801959c:	4620      	mov	r0, r4
 801959e:	f7f9 fecc 	bl	801333a <_ZNK8touchgfx4Rect7isEmptyEv>
 80195a2:	2800      	cmp	r0, #0
 80195a4:	d16a      	bne.n	801967c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80195a6:	9403      	str	r4, [sp, #12]
 80195a8:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 80195ac:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 80195b0:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 80195b4:	35a4      	adds	r5, #164	; 0xa4
 80195b6:	9301      	str	r3, [sp, #4]
 80195b8:	b15c      	cbz	r4, 80195d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 80195ba:	4629      	mov	r1, r5
 80195bc:	9803      	ldr	r0, [sp, #12]
 80195be:	f7ff fe07 	bl	80191d0 <_ZNK8touchgfx4Rect8includesERKS0_>
 80195c2:	3c01      	subs	r4, #1
 80195c4:	b118      	cbz	r0, 80195ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 80195c6:	b2a1      	uxth	r1, r4
 80195c8:	9801      	ldr	r0, [sp, #4]
 80195ca:	f7ff ffc3 	bl	8019554 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80195ce:	3d08      	subs	r5, #8
 80195d0:	e7f2      	b.n	80195b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 80195d2:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 80195d6:	f8cd a010 	str.w	sl, [sp, #16]
 80195da:	f10a 33ff 	add.w	r3, sl, #4294967295
 80195de:	9302      	str	r3, [sp, #8]
 80195e0:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 80195e4:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 80195e8:	9306      	str	r3, [sp, #24]
 80195ea:	445c      	add	r4, fp
 80195ec:	2500      	movs	r5, #0
 80195ee:	4626      	mov	r6, r4
 80195f0:	f8cd a014 	str.w	sl, [sp, #20]
 80195f4:	462f      	mov	r7, r5
 80195f6:	9b05      	ldr	r3, [sp, #20]
 80195f8:	2b00      	cmp	r3, #0
 80195fa:	d073      	beq.n	80196e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80195fc:	9903      	ldr	r1, [sp, #12]
 80195fe:	4630      	mov	r0, r6
 8019600:	f7ff fd74 	bl	80190ec <_ZNK8touchgfx4Rect9intersectERKS0_>
 8019604:	b350      	cbz	r0, 801965c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8019606:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 801960a:	f9b6 c000 	ldrsh.w	ip, [r6]
 801960e:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 8019612:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8019616:	45e6      	cmp	lr, ip
 8019618:	db33      	blt.n	8019682 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 801961a:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801961e:	88b3      	ldrh	r3, [r6, #4]
 8019620:	4472      	add	r2, lr
 8019622:	4463      	add	r3, ip
 8019624:	b212      	sxth	r2, r2
 8019626:	b21b      	sxth	r3, r3
 8019628:	429a      	cmp	r2, r3
 801962a:	dc2a      	bgt.n	8019682 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 801962c:	88f3      	ldrh	r3, [r6, #6]
 801962e:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8019632:	fa1f f289 	uxth.w	r2, r9
 8019636:	4413      	add	r3, r2
 8019638:	b29b      	uxth	r3, r3
 801963a:	45c8      	cmp	r8, r9
 801963c:	fa1f fc88 	uxth.w	ip, r8
 8019640:	fa0f fe83 	sxth.w	lr, r3
 8019644:	db0f      	blt.n	8019666 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8019646:	eba3 030c 	sub.w	r3, r3, ip
 801964a:	1ac9      	subs	r1, r1, r3
 801964c:	b209      	sxth	r1, r1
 801964e:	2900      	cmp	r1, #0
 8019650:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8019654:	dd12      	ble.n	801967c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8019656:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 801965a:	4605      	mov	r5, r0
 801965c:	9b05      	ldr	r3, [sp, #20]
 801965e:	3b01      	subs	r3, #1
 8019660:	9305      	str	r3, [sp, #20]
 8019662:	3e08      	subs	r6, #8
 8019664:	e7c7      	b.n	80195f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 8019666:	4461      	add	r1, ip
 8019668:	b209      	sxth	r1, r1
 801966a:	4571      	cmp	r1, lr
 801966c:	dc38      	bgt.n	80196e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801966e:	eba2 020c 	sub.w	r2, r2, ip
 8019672:	b212      	sxth	r2, r2
 8019674:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8019678:	2a00      	cmp	r2, #0
 801967a:	dcee      	bgt.n	801965a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 801967c:	b00f      	add	sp, #60	; 0x3c
 801967e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019682:	45c8      	cmp	r8, r9
 8019684:	db2c      	blt.n	80196e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8019686:	88f3      	ldrh	r3, [r6, #6]
 8019688:	4499      	add	r9, r3
 801968a:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 801968e:	4498      	add	r8, r3
 8019690:	fa0f f989 	sxth.w	r9, r9
 8019694:	fa0f f888 	sxth.w	r8, r8
 8019698:	45c1      	cmp	r9, r8
 801969a:	db21      	blt.n	80196e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801969c:	88b3      	ldrh	r3, [r6, #4]
 801969e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80196a2:	fa1f f28c 	uxth.w	r2, ip
 80196a6:	4413      	add	r3, r2
 80196a8:	b29b      	uxth	r3, r3
 80196aa:	45e6      	cmp	lr, ip
 80196ac:	fa1f f88e 	uxth.w	r8, lr
 80196b0:	fa0f f983 	sxth.w	r9, r3
 80196b4:	db0a      	blt.n	80196cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 80196b6:	eba3 0308 	sub.w	r3, r3, r8
 80196ba:	1ac9      	subs	r1, r1, r3
 80196bc:	b209      	sxth	r1, r1
 80196be:	2900      	cmp	r1, #0
 80196c0:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 80196c4:	ddda      	ble.n	801967c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80196c6:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 80196ca:	e7c6      	b.n	801965a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80196cc:	4441      	add	r1, r8
 80196ce:	b209      	sxth	r1, r1
 80196d0:	4549      	cmp	r1, r9
 80196d2:	dc05      	bgt.n	80196e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80196d4:	eba2 0208 	sub.w	r2, r2, r8
 80196d8:	b212      	sxth	r2, r2
 80196da:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80196de:	e7cb      	b.n	8019678 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 80196e0:	4607      	mov	r7, r0
 80196e2:	e7bb      	b.n	801965c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80196e4:	2d00      	cmp	r5, #0
 80196e6:	d181      	bne.n	80195ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 80196e8:	2f00      	cmp	r7, #0
 80196ea:	f000 81dd 	beq.w	8019aa8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80196ee:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 80196f2:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 80196f6:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 80196fa:	b2b3      	uxth	r3, r6
 80196fc:	9305      	str	r3, [sp, #20]
 80196fe:	9a05      	ldr	r2, [sp, #20]
 8019700:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8019704:	4413      	add	r3, r2
 8019706:	b2ba      	uxth	r2, r7
 8019708:	4492      	add	sl, r2
 801970a:	b29b      	uxth	r3, r3
 801970c:	fa1f fa8a 	uxth.w	sl, sl
 8019710:	fa0f f883 	sxth.w	r8, r3
 8019714:	fa0f f98a 	sxth.w	r9, sl
 8019718:	e9cd 2307 	strd	r2, r3, [sp, #28]
 801971c:	9b04      	ldr	r3, [sp, #16]
 801971e:	2b00      	cmp	r3, #0
 8019720:	d052      	beq.n	80197c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 8019722:	9903      	ldr	r1, [sp, #12]
 8019724:	4620      	mov	r0, r4
 8019726:	f7ff fce1 	bl	80190ec <_ZNK8touchgfx4Rect9intersectERKS0_>
 801972a:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 801972e:	b1c0      	cbz	r0, 8019762 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8019730:	f9b4 e000 	ldrsh.w	lr, [r4]
 8019734:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8019738:	4576      	cmp	r6, lr
 801973a:	dc22      	bgt.n	8019782 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 801973c:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8019740:	44f4      	add	ip, lr
 8019742:	fa0f fc8c 	sxth.w	ip, ip
 8019746:	45e0      	cmp	r8, ip
 8019748:	db1b      	blt.n	8019782 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 801974a:	428f      	cmp	r7, r1
 801974c:	fa1f fc81 	uxth.w	ip, r1
 8019750:	88e1      	ldrh	r1, [r4, #6]
 8019752:	dc0d      	bgt.n	8019770 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8019754:	ebaa 0c0c 	sub.w	ip, sl, ip
 8019758:	eba1 010c 	sub.w	r1, r1, ip
 801975c:	f8a4 9002 	strh.w	r9, [r4, #2]
 8019760:	80e1      	strh	r1, [r4, #6]
 8019762:	4628      	mov	r0, r5
 8019764:	9904      	ldr	r1, [sp, #16]
 8019766:	3901      	subs	r1, #1
 8019768:	9104      	str	r1, [sp, #16]
 801976a:	3c08      	subs	r4, #8
 801976c:	4605      	mov	r5, r0
 801976e:	e7d3      	b.n	8019718 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8019770:	4461      	add	r1, ip
 8019772:	b209      	sxth	r1, r1
 8019774:	4549      	cmp	r1, r9
 8019776:	dcf5      	bgt.n	8019764 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8019778:	eba2 0c0c 	sub.w	ip, r2, ip
 801977c:	f8a4 c006 	strh.w	ip, [r4, #6]
 8019780:	e7ef      	b.n	8019762 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8019782:	428f      	cmp	r7, r1
 8019784:	dcee      	bgt.n	8019764 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8019786:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 801978a:	4461      	add	r1, ip
 801978c:	b209      	sxth	r1, r1
 801978e:	4589      	cmp	r9, r1
 8019790:	dbe8      	blt.n	8019764 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8019792:	4576      	cmp	r6, lr
 8019794:	fa1f fc8e 	uxth.w	ip, lr
 8019798:	88a1      	ldrh	r1, [r4, #4]
 801979a:	dc07      	bgt.n	80197ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 801979c:	eba3 0c0c 	sub.w	ip, r3, ip
 80197a0:	eba1 010c 	sub.w	r1, r1, ip
 80197a4:	f8a4 8000 	strh.w	r8, [r4]
 80197a8:	80a1      	strh	r1, [r4, #4]
 80197aa:	e7da      	b.n	8019762 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80197ac:	4461      	add	r1, ip
 80197ae:	b209      	sxth	r1, r1
 80197b0:	4588      	cmp	r8, r1
 80197b2:	dbd7      	blt.n	8019764 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80197b4:	9905      	ldr	r1, [sp, #20]
 80197b6:	eba1 0c0c 	sub.w	ip, r1, ip
 80197ba:	f8a4 c004 	strh.w	ip, [r4, #4]
 80197be:	e7d0      	b.n	8019762 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80197c0:	20002242 	.word	0x20002242
 80197c4:	20002240 	.word	0x20002240
 80197c8:	2d00      	cmp	r5, #0
 80197ca:	f000 816d 	beq.w	8019aa8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80197ce:	9b06      	ldr	r3, [sp, #24]
 80197d0:	445b      	add	r3, fp
 80197d2:	461c      	mov	r4, r3
 80197d4:	9b02      	ldr	r3, [sp, #8]
 80197d6:	3301      	adds	r3, #1
 80197d8:	f000 8166 	beq.w	8019aa8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80197dc:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 80197e0:	4629      	mov	r1, r5
 80197e2:	9803      	ldr	r0, [sp, #12]
 80197e4:	f7ff fcf4 	bl	80191d0 <_ZNK8touchgfx4Rect8includesERKS0_>
 80197e8:	b120      	cbz	r0, 80197f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 80197ea:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80197ee:	9801      	ldr	r0, [sp, #4]
 80197f0:	f7ff feb0 	bl	8019554 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80197f4:	9903      	ldr	r1, [sp, #12]
 80197f6:	4628      	mov	r0, r5
 80197f8:	f7ff fc78 	bl	80190ec <_ZNK8touchgfx4Rect9intersectERKS0_>
 80197fc:	2800      	cmp	r0, #0
 80197fe:	f000 809c 	beq.w	801993a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8019802:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 8019806:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 801980a:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 801980e:	9309      	str	r3, [sp, #36]	; 0x24
 8019810:	fa1f f189 	uxth.w	r1, r9
 8019814:	eb01 0c03 	add.w	ip, r1, r3
 8019818:	fa1f fa8c 	uxth.w	sl, ip
 801981c:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8019820:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 8019824:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8019828:	b283      	uxth	r3, r0
 801982a:	eb03 050c 	add.w	r5, r3, ip
 801982e:	b2ad      	uxth	r5, r5
 8019830:	9505      	str	r5, [sp, #20]
 8019832:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8019836:	9504      	str	r5, [sp, #16]
 8019838:	4548      	cmp	r0, r9
 801983a:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 801983e:	f340 8099 	ble.w	8019974 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 8019842:	1a5b      	subs	r3, r3, r1
 8019844:	b29b      	uxth	r3, r3
 8019846:	4596      	cmp	lr, r2
 8019848:	fa0f f08a 	sxth.w	r0, sl
 801984c:	b21e      	sxth	r6, r3
 801984e:	dd2e      	ble.n	80198ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8019850:	9f02      	ldr	r7, [sp, #8]
 8019852:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 8019856:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 801985a:	9f04      	ldr	r7, [sp, #16]
 801985c:	1a3f      	subs	r7, r7, r0
 801985e:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 8019862:	fa1f fe8e 	uxth.w	lr, lr
 8019866:	b292      	uxth	r2, r2
 8019868:	ebae 0102 	sub.w	r1, lr, r2
 801986c:	44a6      	add	lr, r4
 801986e:	4402      	add	r2, r0
 8019870:	b289      	uxth	r1, r1
 8019872:	fa0f fe8e 	sxth.w	lr, lr
 8019876:	b212      	sxth	r2, r2
 8019878:	b20d      	sxth	r5, r1
 801987a:	ebae 0202 	sub.w	r2, lr, r2
 801987e:	436f      	muls	r7, r5
 8019880:	4372      	muls	r2, r6
 8019882:	4297      	cmp	r7, r2
 8019884:	db09      	blt.n	801989a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 8019886:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 801988a:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 801988e:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8019892:	449c      	add	ip, r3
 8019894:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8019898:	e686      	b.n	80195a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801989a:	4421      	add	r1, r4
 801989c:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 80198a0:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 80198a4:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80198a8:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80198ac:	e67c      	b.n	80195a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80198ae:	9f04      	ldr	r7, [sp, #16]
 80198b0:	42b8      	cmp	r0, r7
 80198b2:	da27      	bge.n	8019904 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 80198b4:	9902      	ldr	r1, [sp, #8]
 80198b6:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 80198ba:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 80198be:	eb05 010e 	add.w	r1, r5, lr
 80198c2:	fa1f f881 	uxth.w	r8, r1
 80198c6:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 80198ca:	4411      	add	r1, r2
 80198cc:	eba1 0108 	sub.w	r1, r1, r8
 80198d0:	b289      	uxth	r1, r1
 80198d2:	fa0f f988 	sxth.w	r9, r8
 80198d6:	eba2 020e 	sub.w	r2, r2, lr
 80198da:	fa0f f881 	sxth.w	r8, r1
 80198de:	1a3f      	subs	r7, r7, r0
 80198e0:	4372      	muls	r2, r6
 80198e2:	fb08 f707 	mul.w	r7, r8, r7
 80198e6:	42ba      	cmp	r2, r7
 80198e8:	dc06      	bgt.n	80198f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 80198ea:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 80198ee:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 80198f2:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 80198f6:	e7ca      	b.n	801988e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 80198f8:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 80198fc:	4429      	add	r1, r5
 80198fe:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8019902:	e651      	b.n	80195a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8019904:	9805      	ldr	r0, [sp, #20]
 8019906:	ebaa 0000 	sub.w	r0, sl, r0
 801990a:	b280      	uxth	r0, r0
 801990c:	2d06      	cmp	r5, #6
 801990e:	fa0f fe80 	sxth.w	lr, r0
 8019912:	d817      	bhi.n	8019944 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 8019914:	9b04      	ldr	r3, [sp, #16]
 8019916:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 801991a:	1c6b      	adds	r3, r5, #1
 801991c:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8019920:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 8019924:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8019928:	9b01      	ldr	r3, [sp, #4]
 801992a:	9801      	ldr	r0, [sp, #4]
 801992c:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8019930:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8019934:	805a      	strh	r2, [r3, #2]
 8019936:	809e      	strh	r6, [r3, #4]
 8019938:	80d9      	strh	r1, [r3, #6]
 801993a:	9b02      	ldr	r3, [sp, #8]
 801993c:	3b01      	subs	r3, #1
 801993e:	9302      	str	r3, [sp, #8]
 8019940:	3c08      	subs	r4, #8
 8019942:	e747      	b.n	80197d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 8019944:	9a02      	ldr	r2, [sp, #8]
 8019946:	45b6      	cmp	lr, r6
 8019948:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 801994c:	db0d      	blt.n	801996a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 801994e:	449c      	add	ip, r3
 8019950:	fa1f fc8c 	uxth.w	ip, ip
 8019954:	445a      	add	r2, fp
 8019956:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 801995a:	448c      	add	ip, r1
 801995c:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8019960:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 8019964:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 8019968:	e61e      	b.n	80195a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801996a:	445a      	add	r2, fp
 801996c:	4484      	add	ip, r0
 801996e:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 8019972:	e78f      	b.n	8019894 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8019974:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8019978:	fa1f f18e 	uxth.w	r1, lr
 801997c:	eb01 0806 	add.w	r8, r1, r6
 8019980:	b293      	uxth	r3, r2
 8019982:	fa1f f888 	uxth.w	r8, r8
 8019986:	9306      	str	r3, [sp, #24]
 8019988:	fa0f f388 	sxth.w	r3, r8
 801998c:	9307      	str	r3, [sp, #28]
 801998e:	9f06      	ldr	r7, [sp, #24]
 8019990:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8019994:	443b      	add	r3, r7
 8019996:	b29b      	uxth	r3, r3
 8019998:	4596      	cmp	lr, r2
 801999a:	9308      	str	r3, [sp, #32]
 801999c:	da24      	bge.n	80199e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 801999e:	9905      	ldr	r1, [sp, #20]
 80199a0:	eba3 0308 	sub.w	r3, r3, r8
 80199a4:	ebaa 0401 	sub.w	r4, sl, r1
 80199a8:	b2a4      	uxth	r4, r4
 80199aa:	b29b      	uxth	r3, r3
 80199ac:	b225      	sxth	r5, r4
 80199ae:	b219      	sxth	r1, r3
 80199b0:	eba2 020e 	sub.w	r2, r2, lr
 80199b4:	eba9 0000 	sub.w	r0, r9, r0
 80199b8:	436a      	muls	r2, r5
 80199ba:	4348      	muls	r0, r1
 80199bc:	4282      	cmp	r2, r0
 80199be:	9a02      	ldr	r2, [sp, #8]
 80199c0:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80199c4:	445a      	add	r2, fp
 80199c6:	dc06      	bgt.n	80199d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 80199c8:	9b07      	ldr	r3, [sp, #28]
 80199ca:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 80199ce:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 80199d2:	44a4      	add	ip, r4
 80199d4:	e75e      	b.n	8019894 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80199d6:	9904      	ldr	r1, [sp, #16]
 80199d8:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 80199dc:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 80199e0:	4433      	add	r3, r6
 80199e2:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80199e6:	e5df      	b.n	80195a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80199e8:	9f06      	ldr	r7, [sp, #24]
 80199ea:	9b04      	ldr	r3, [sp, #16]
 80199ec:	1bc9      	subs	r1, r1, r7
 80199ee:	fa0f f78a 	sxth.w	r7, sl
 80199f2:	b289      	uxth	r1, r1
 80199f4:	429f      	cmp	r7, r3
 80199f6:	fa0f fe81 	sxth.w	lr, r1
 80199fa:	dd23      	ble.n	8019a44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 80199fc:	9a05      	ldr	r2, [sp, #20]
 80199fe:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8019a02:	9d07      	ldr	r5, [sp, #28]
 8019a04:	ebaa 0202 	sub.w	r2, sl, r2
 8019a08:	b292      	uxth	r2, r2
 8019a0a:	eba5 0a03 	sub.w	sl, r5, r3
 8019a0e:	b214      	sxth	r4, r2
 8019a10:	eba9 0000 	sub.w	r0, r9, r0
 8019a14:	9b02      	ldr	r3, [sp, #8]
 8019a16:	fb0e f000 	mul.w	r0, lr, r0
 8019a1a:	fb04 fa0a 	mul.w	sl, r4, sl
 8019a1e:	00db      	lsls	r3, r3, #3
 8019a20:	4550      	cmp	r0, sl
 8019a22:	445b      	add	r3, fp
 8019a24:	db03      	blt.n	8019a2e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 8019a26:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8019a2a:	4494      	add	ip, r2
 8019a2c:	e732      	b.n	8019894 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8019a2e:	9a04      	ldr	r2, [sp, #16]
 8019a30:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 8019a34:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8019a38:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8019a3c:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8019a40:	4431      	add	r1, r6
 8019a42:	e75c      	b.n	80198fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 8019a44:	9b08      	ldr	r3, [sp, #32]
 8019a46:	eba3 0308 	sub.w	r3, r3, r8
 8019a4a:	b29b      	uxth	r3, r3
 8019a4c:	2d06      	cmp	r5, #6
 8019a4e:	b218      	sxth	r0, r3
 8019a50:	d813      	bhi.n	8019a7a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 8019a52:	9b07      	ldr	r3, [sp, #28]
 8019a54:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8019a58:	1c6b      	adds	r3, r5, #1
 8019a5a:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 8019a5e:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8019a62:	9b01      	ldr	r3, [sp, #4]
 8019a64:	9901      	ldr	r1, [sp, #4]
 8019a66:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8019a6a:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8019a6e:	805a      	strh	r2, [r3, #2]
 8019a70:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019a72:	809a      	strh	r2, [r3, #4]
 8019a74:	f8a3 e006 	strh.w	lr, [r3, #6]
 8019a78:	e75f      	b.n	801993a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8019a7a:	9c02      	ldr	r4, [sp, #8]
 8019a7c:	4570      	cmp	r0, lr
 8019a7e:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8019a82:	db0d      	blt.n	8019aa0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 8019a84:	4431      	add	r1, r6
 8019a86:	9b06      	ldr	r3, [sp, #24]
 8019a88:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8019a8c:	b289      	uxth	r1, r1
 8019a8e:	445c      	add	r4, fp
 8019a90:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8019a94:	4419      	add	r1, r3
 8019a96:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 8019a9a:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 8019a9e:	e583      	b.n	80195a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8019aa0:	445c      	add	r4, fp
 8019aa2:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 8019aa6:	e79b      	b.n	80199e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8019aa8:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8019aac:	1e65      	subs	r5, r4, #1
 8019aae:	b2ad      	uxth	r5, r5
 8019ab0:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 8019ab4:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8019ab8:	42b5      	cmp	r5, r6
 8019aba:	d044      	beq.n	8019b46 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8019abc:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8019ac0:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 8019ac4:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8019ac8:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 8019acc:	4282      	cmp	r2, r0
 8019ace:	d11f      	bne.n	8019b10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8019ad0:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 8019ad4:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8019ad8:	459c      	cmp	ip, r3
 8019ada:	d119      	bne.n	8019b10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8019adc:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8019ae0:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8019ae4:	19d8      	adds	r0, r3, r7
 8019ae6:	b200      	sxth	r0, r0
 8019ae8:	4288      	cmp	r0, r1
 8019aea:	d109      	bne.n	8019b00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8019aec:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8019af0:	4413      	add	r3, r2
 8019af2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8019af6:	4629      	mov	r1, r5
 8019af8:	9801      	ldr	r0, [sp, #4]
 8019afa:	f7ff fd2b 	bl	8019554 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8019afe:	e003      	b.n	8019b08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8019b00:	4411      	add	r1, r2
 8019b02:	b209      	sxth	r1, r1
 8019b04:	42b9      	cmp	r1, r7
 8019b06:	d0f3      	beq.n	8019af0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8019b08:	3d01      	subs	r5, #1
 8019b0a:	b2ad      	uxth	r5, r5
 8019b0c:	3c08      	subs	r4, #8
 8019b0e:	e7d3      	b.n	8019ab8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8019b10:	42b9      	cmp	r1, r7
 8019b12:	d1f9      	bne.n	8019b08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8019b14:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8019b18:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8019b1c:	4299      	cmp	r1, r3
 8019b1e:	d1f3      	bne.n	8019b08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8019b20:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8019b24:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8019b28:	181f      	adds	r7, r3, r0
 8019b2a:	b23f      	sxth	r7, r7
 8019b2c:	42ba      	cmp	r2, r7
 8019b2e:	d105      	bne.n	8019b3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8019b30:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 8019b34:	440b      	add	r3, r1
 8019b36:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8019b3a:	e7dc      	b.n	8019af6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8019b3c:	440a      	add	r2, r1
 8019b3e:	b212      	sxth	r2, r2
 8019b40:	4290      	cmp	r0, r2
 8019b42:	d1e1      	bne.n	8019b08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8019b44:	e7f6      	b.n	8019b34 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 8019b46:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 8019b4a:	2e07      	cmp	r6, #7
 8019b4c:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8019b50:	d812      	bhi.n	8019b78 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 8019b52:	1c75      	adds	r5, r6, #1
 8019b54:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8019b58:	9d01      	ldr	r5, [sp, #4]
 8019b5a:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8019b5e:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8019b62:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8019b66:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8019b6a:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8019b6e:	442c      	add	r4, r5
 8019b70:	8061      	strh	r1, [r4, #2]
 8019b72:	80a2      	strh	r2, [r4, #4]
 8019b74:	80e3      	strh	r3, [r4, #6]
 8019b76:	e581      	b.n	801967c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8019b78:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8019b7c:	3e01      	subs	r6, #1
 8019b7e:	445c      	add	r4, fp
 8019b80:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8019b84:	f04f 37ff 	mov.w	r7, #4294967295
 8019b88:	2500      	movs	r5, #0
 8019b8a:	9305      	str	r3, [sp, #20]
 8019b8c:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8019b90:	9302      	str	r3, [sp, #8]
 8019b92:	1e72      	subs	r2, r6, #1
 8019b94:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8019b98:	9304      	str	r3, [sp, #16]
 8019b9a:	4691      	mov	r9, r2
 8019b9c:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 8019ba0:	f1b9 3fff 	cmp.w	r9, #4294967295
 8019ba4:	bf14      	ite	ne
 8019ba6:	9905      	ldrne	r1, [sp, #20]
 8019ba8:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8019bac:	6818      	ldr	r0, [r3, #0]
 8019bae:	9207      	str	r2, [sp, #28]
 8019bb0:	bf18      	it	ne
 8019bb2:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8019bb6:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8019bba:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8019bbe:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8019bc2:	9306      	str	r3, [sp, #24]
 8019bc4:	fb18 f801 	smulbb	r8, r8, r1
 8019bc8:	6859      	ldr	r1, [r3, #4]
 8019bca:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8019bce:	4671      	mov	r1, lr
 8019bd0:	a80c      	add	r0, sp, #48	; 0x30
 8019bd2:	f7ff fb23 	bl	801921c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8019bd6:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8019bda:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8019bde:	9b04      	ldr	r3, [sp, #16]
 8019be0:	9a02      	ldr	r2, [sp, #8]
 8019be2:	fb10 f001 	smulbb	r0, r0, r1
 8019be6:	fb02 8803 	mla	r8, r2, r3, r8
 8019bea:	eba0 0108 	sub.w	r1, r0, r8
 8019bee:	f04f 0c08 	mov.w	ip, #8
 8019bf2:	fb90 f0fc 	sdiv	r0, r0, ip
 8019bf6:	4288      	cmp	r0, r1
 8019bf8:	dc20      	bgt.n	8019c3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8019bfa:	4551      	cmp	r1, sl
 8019bfc:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8019c00:	da03      	bge.n	8019c0a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 8019c02:	b1d9      	cbz	r1, 8019c3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8019c04:	468a      	mov	sl, r1
 8019c06:	464f      	mov	r7, r9
 8019c08:	4635      	mov	r5, r6
 8019c0a:	f109 39ff 	add.w	r9, r9, #4294967295
 8019c0e:	f119 0f02 	cmn.w	r9, #2
 8019c12:	d1c5      	bne.n	8019ba0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 8019c14:	4616      	mov	r6, r2
 8019c16:	3201      	adds	r2, #1
 8019c18:	f1a4 0408 	sub.w	r4, r4, #8
 8019c1c:	d1b6      	bne.n	8019b8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8019c1e:	9b01      	ldr	r3, [sp, #4]
 8019c20:	b2ac      	uxth	r4, r5
 8019c22:	00ed      	lsls	r5, r5, #3
 8019c24:	1958      	adds	r0, r3, r5
 8019c26:	1c7b      	adds	r3, r7, #1
 8019c28:	d10b      	bne.n	8019c42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 8019c2a:	4601      	mov	r1, r0
 8019c2c:	9803      	ldr	r0, [sp, #12]
 8019c2e:	f7ff faf5 	bl	801921c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8019c32:	4621      	mov	r1, r4
 8019c34:	9801      	ldr	r0, [sp, #4]
 8019c36:	f7ff fc8d 	bl	8019554 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8019c3a:	e4b5      	b.n	80195a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8019c3c:	464f      	mov	r7, r9
 8019c3e:	4635      	mov	r5, r6
 8019c40:	e7ed      	b.n	8019c1e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 8019c42:	9b01      	ldr	r3, [sp, #4]
 8019c44:	00ff      	lsls	r7, r7, #3
 8019c46:	19d9      	adds	r1, r3, r7
 8019c48:	f7ff fae8 	bl	801921c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8019c4c:	9b03      	ldr	r3, [sp, #12]
 8019c4e:	cb03      	ldmia	r3!, {r0, r1}
 8019c50:	445f      	add	r7, fp
 8019c52:	445d      	add	r5, fp
 8019c54:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 8019c58:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 8019c5c:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8019c60:	9b03      	ldr	r3, [sp, #12]
 8019c62:	6869      	ldr	r1, [r5, #4]
 8019c64:	c303      	stmia	r3!, {r0, r1}
 8019c66:	e7e4      	b.n	8019c32 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

08019c68 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8019c68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019c6c:	f500 7698 	add.w	r6, r0, #304	; 0x130
 8019c70:	b09b      	sub	sp, #108	; 0x6c
 8019c72:	4604      	mov	r4, r0
 8019c74:	4630      	mov	r0, r6
 8019c76:	f7f9 fb60 	bl	801333a <_ZNK8touchgfx4Rect7isEmptyEv>
 8019c7a:	4605      	mov	r5, r0
 8019c7c:	b948      	cbnz	r0, 8019c92 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8019c7e:	6823      	ldr	r3, [r4, #0]
 8019c80:	e896 0006 	ldmia.w	r6, {r1, r2}
 8019c84:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8019c86:	4620      	mov	r0, r4
 8019c88:	4798      	blx	r3
 8019c8a:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8019c8e:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 8019c92:	4bc6      	ldr	r3, [pc, #792]	; (8019fac <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 8019c94:	681b      	ldr	r3, [r3, #0]
 8019c96:	2b00      	cmp	r3, #0
 8019c98:	d03f      	beq.n	8019d1a <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8019c9a:	4dc5      	ldr	r5, [pc, #788]	; (8019fb0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8019c9c:	4628      	mov	r0, r5
 8019c9e:	f7f9 fb4c 	bl	801333a <_ZNK8touchgfx4Rect7isEmptyEv>
 8019ca2:	4606      	mov	r6, r0
 8019ca4:	2800      	cmp	r0, #0
 8019ca6:	d138      	bne.n	8019d1a <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8019ca8:	4628      	mov	r0, r5
 8019caa:	f7ff f939 	bl	8018f20 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8019cae:	6823      	ldr	r3, [r4, #0]
 8019cb0:	6829      	ldr	r1, [r5, #0]
 8019cb2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8019cb4:	686a      	ldr	r2, [r5, #4]
 8019cb6:	4620      	mov	r0, r4
 8019cb8:	4798      	blx	r3
 8019cba:	802e      	strh	r6, [r5, #0]
 8019cbc:	806e      	strh	r6, [r5, #2]
 8019cbe:	80ae      	strh	r6, [r5, #4]
 8019cc0:	80ee      	strh	r6, [r5, #6]
 8019cc2:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 8019cc6:	4dbb      	ldr	r5, [pc, #748]	; (8019fb4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8019cc8:	4640      	mov	r0, r8
 8019cca:	f7ff fbeb 	bl	80194a4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8019cce:	882e      	ldrh	r6, [r5, #0]
 8019cd0:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8019cd4:	4633      	mov	r3, r6
 8019cd6:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8019cda:	42bb      	cmp	r3, r7
 8019cdc:	d224      	bcs.n	8019d28 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8019cde:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 8019ce2:	2907      	cmp	r1, #7
 8019ce4:	d816      	bhi.n	8019d14 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 8019ce6:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8019cea:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8019cee:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 8019cf2:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 8019cf6:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8019cfa:	1c4a      	adds	r2, r1, #1
 8019cfc:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8019d00:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 8019d04:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8019d08:	f8a2 a002 	strh.w	sl, [r2, #2]
 8019d0c:	f8a2 e004 	strh.w	lr, [r2, #4]
 8019d10:	f8a2 c006 	strh.w	ip, [r2, #6]
 8019d14:	3301      	adds	r3, #1
 8019d16:	b29b      	uxth	r3, r3
 8019d18:	e7df      	b.n	8019cda <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8019d1a:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8019d1e:	2b00      	cmp	r3, #0
 8019d20:	d1cf      	bne.n	8019cc2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 8019d22:	b01b      	add	sp, #108	; 0x6c
 8019d24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019d28:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 8019d2c:	42b3      	cmp	r3, r6
 8019d2e:	d90c      	bls.n	8019d4a <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8019d30:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8019d34:	6822      	ldr	r2, [r4, #0]
 8019d36:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 8019d3a:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8019d3c:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 8019d40:	4620      	mov	r0, r4
 8019d42:	3601      	adds	r6, #1
 8019d44:	47b8      	blx	r7
 8019d46:	b2b6      	uxth	r6, r6
 8019d48:	e7ee      	b.n	8019d28 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8019d4a:	4a9b      	ldr	r2, [pc, #620]	; (8019fb8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8019d4c:	6813      	ldr	r3, [r2, #0]
 8019d4e:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8019d52:	2b01      	cmp	r3, #1
 8019d54:	4691      	mov	r9, r2
 8019d56:	f040 80e2 	bne.w	8019f1e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 8019d5a:	8829      	ldrh	r1, [r5, #0]
 8019d5c:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8019d60:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 8019d64:	33ae      	adds	r3, #174	; 0xae
 8019d66:	2600      	movs	r6, #0
 8019d68:	428f      	cmp	r7, r1
 8019d6a:	f103 0308 	add.w	r3, r3, #8
 8019d6e:	dd0a      	ble.n	8019d86 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8019d70:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 8019d74:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8019d78:	4402      	add	r2, r0
 8019d7a:	b212      	sxth	r2, r2
 8019d7c:	4296      	cmp	r6, r2
 8019d7e:	bfb8      	it	lt
 8019d80:	4616      	movlt	r6, r2
 8019d82:	3101      	adds	r1, #1
 8019d84:	e7f0      	b.n	8019d68 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 8019d86:	4b8d      	ldr	r3, [pc, #564]	; (8019fbc <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8019d88:	f8df 922c 	ldr.w	r9, [pc, #556]	; 8019fb8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 8019d8c:	881b      	ldrh	r3, [r3, #0]
 8019d8e:	2b0f      	cmp	r3, #15
 8019d90:	bf88      	it	hi
 8019d92:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 8019d96:	f04f 0300 	mov.w	r3, #0
 8019d9a:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8019d9e:	bf98      	it	ls
 8019da0:	f04f 0b01 	movls.w	fp, #1
 8019da4:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8019da8:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8019dac:	4b82      	ldr	r3, [pc, #520]	; (8019fb8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8019dae:	4438      	add	r0, r7
 8019db0:	b207      	sxth	r7, r0
 8019db2:	6818      	ldr	r0, [r3, #0]
 8019db4:	42b7      	cmp	r7, r6
 8019db6:	6803      	ldr	r3, [r0, #0]
 8019db8:	f280 8083 	bge.w	8019ec2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8019dbc:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8019dc0:	4798      	blx	r3
 8019dc2:	eb07 030b 	add.w	r3, r7, fp
 8019dc6:	4298      	cmp	r0, r3
 8019dc8:	da07      	bge.n	8019dda <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8019dca:	42b0      	cmp	r0, r6
 8019dcc:	da05      	bge.n	8019dda <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8019dce:	4287      	cmp	r7, r0
 8019dd0:	dd6c      	ble.n	8019eac <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8019dd2:	2f00      	cmp	r7, #0
 8019dd4:	dd6a      	ble.n	8019eac <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8019dd6:	4630      	mov	r0, r6
 8019dd8:	e004      	b.n	8019de4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8019dda:	4287      	cmp	r7, r0
 8019ddc:	dcfb      	bgt.n	8019dd6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8019dde:	42b0      	cmp	r0, r6
 8019de0:	bfa8      	it	ge
 8019de2:	4630      	movge	r0, r6
 8019de4:	4b76      	ldr	r3, [pc, #472]	; (8019fc0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8019de6:	f8ad 7016 	strh.w	r7, [sp, #22]
 8019dea:	1bc0      	subs	r0, r0, r7
 8019dec:	f9b3 3000 	ldrsh.w	r3, [r3]
 8019df0:	882f      	ldrh	r7, [r5, #0]
 8019df2:	f8ad 3018 	strh.w	r3, [sp, #24]
 8019df6:	2200      	movs	r2, #0
 8019df8:	f8ad 2014 	strh.w	r2, [sp, #20]
 8019dfc:	f8ad 001a 	strh.w	r0, [sp, #26]
 8019e00:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8019e04:	42bb      	cmp	r3, r7
 8019e06:	d9cd      	bls.n	8019da4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8019e08:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8019e0c:	ab07      	add	r3, sp, #28
 8019e0e:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8019e12:	6851      	ldr	r1, [r2, #4]
 8019e14:	c303      	stmia	r3!, {r0, r1}
 8019e16:	a905      	add	r1, sp, #20
 8019e18:	a807      	add	r0, sp, #28
 8019e1a:	f7ff f967 	bl	80190ec <_ZNK8touchgfx4Rect9intersectERKS0_>
 8019e1e:	2800      	cmp	r0, #0
 8019e20:	d04c      	beq.n	8019ebc <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 8019e22:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8019e26:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8019e2a:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8019e2e:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8019e32:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8019e36:	9302      	str	r3, [sp, #8]
 8019e38:	4686      	mov	lr, r0
 8019e3a:	4290      	cmp	r0, r2
 8019e3c:	4450      	add	r0, sl
 8019e3e:	f8bd a018 	ldrh.w	sl, [sp, #24]
 8019e42:	bfb8      	it	lt
 8019e44:	4696      	movlt	lr, r2
 8019e46:	4452      	add	r2, sl
 8019e48:	4299      	cmp	r1, r3
 8019e4a:	b280      	uxth	r0, r0
 8019e4c:	b292      	uxth	r2, r2
 8019e4e:	468c      	mov	ip, r1
 8019e50:	fa0f fa82 	sxth.w	sl, r2
 8019e54:	bfb8      	it	lt
 8019e56:	469c      	movlt	ip, r3
 8019e58:	b203      	sxth	r3, r0
 8019e5a:	4553      	cmp	r3, sl
 8019e5c:	bfb8      	it	lt
 8019e5e:	4602      	movlt	r2, r0
 8019e60:	eba2 020e 	sub.w	r2, r2, lr
 8019e64:	f8ad 2020 	strh.w	r2, [sp, #32]
 8019e68:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8019e6c:	9b02      	ldr	r3, [sp, #8]
 8019e6e:	f8ad e01c 	strh.w	lr, [sp, #28]
 8019e72:	4411      	add	r1, r2
 8019e74:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8019e78:	f8ad c01e 	strh.w	ip, [sp, #30]
 8019e7c:	4413      	add	r3, r2
 8019e7e:	b289      	uxth	r1, r1
 8019e80:	b29b      	uxth	r3, r3
 8019e82:	b208      	sxth	r0, r1
 8019e84:	b21a      	sxth	r2, r3
 8019e86:	4290      	cmp	r0, r2
 8019e88:	bfb8      	it	lt
 8019e8a:	460b      	movlt	r3, r1
 8019e8c:	eba3 030c 	sub.w	r3, r3, ip
 8019e90:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8019e94:	a807      	add	r0, sp, #28
 8019e96:	f7f9 fa50 	bl	801333a <_ZNK8touchgfx4Rect7isEmptyEv>
 8019e9a:	b920      	cbnz	r0, 8019ea6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8019e9c:	6823      	ldr	r3, [r4, #0]
 8019e9e:	a907      	add	r1, sp, #28
 8019ea0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8019ea2:	4620      	mov	r0, r4
 8019ea4:	4798      	blx	r3
 8019ea6:	3701      	adds	r7, #1
 8019ea8:	b2bf      	uxth	r7, r7
 8019eaa:	e7a9      	b.n	8019e00 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8019eac:	f8d9 0000 	ldr.w	r0, [r9]
 8019eb0:	6803      	ldr	r3, [r0, #0]
 8019eb2:	2101      	movs	r1, #1
 8019eb4:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8019eb8:	4798      	blx	r3
 8019eba:	e773      	b.n	8019da4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8019ebc:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8019ec0:	e7e8      	b.n	8019e94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 8019ec2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8019ec4:	4798      	blx	r3
 8019ec6:	4b3f      	ldr	r3, [pc, #252]	; (8019fc4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8019ec8:	781b      	ldrb	r3, [r3, #0]
 8019eca:	2b00      	cmp	r3, #0
 8019ecc:	f43f af29 	beq.w	8019d22 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8019ed0:	2300      	movs	r3, #0
 8019ed2:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 8019ed6:	882b      	ldrh	r3, [r5, #0]
 8019ed8:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8019edc:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8019ee0:	42ab      	cmp	r3, r5
 8019ee2:	f4bf af1e 	bcs.w	8019d22 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8019ee6:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 8019eea:	2907      	cmp	r1, #7
 8019eec:	d814      	bhi.n	8019f18 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8019eee:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 8019ef2:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 8019ef6:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8019efa:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8019efe:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 8019f02:	1c4a      	adds	r2, r1, #1
 8019f04:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8019f08:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8019f0c:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8019f10:	f8a2 c002 	strh.w	ip, [r2, #2]
 8019f14:	8097      	strh	r7, [r2, #4]
 8019f16:	80d6      	strh	r6, [r2, #6]
 8019f18:	3301      	adds	r3, #1
 8019f1a:	b29b      	uxth	r3, r3
 8019f1c:	e7e0      	b.n	8019ee0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8019f1e:	2b02      	cmp	r3, #2
 8019f20:	f040 8133 	bne.w	801a18a <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 8019f24:	4b28      	ldr	r3, [pc, #160]	; (8019fc8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 8019f26:	781b      	ldrb	r3, [r3, #0]
 8019f28:	2b01      	cmp	r3, #1
 8019f2a:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 8019f2e:	f000 8098 	beq.w	801a062 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8019f32:	882a      	ldrh	r2, [r5, #0]
 8019f34:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 8019f38:	3201      	adds	r2, #1
 8019f3a:	b292      	uxth	r2, r2
 8019f3c:	2900      	cmp	r1, #0
 8019f3e:	d0c2      	beq.n	8019ec6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8019f40:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 8019f44:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 8019f48:	441e      	add	r6, r3
 8019f4a:	b236      	sxth	r6, r6
 8019f4c:	4694      	mov	ip, r2
 8019f4e:	f04f 0900 	mov.w	r9, #0
 8019f52:	fa1f f38c 	uxth.w	r3, ip
 8019f56:	4299      	cmp	r1, r3
 8019f58:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8019f5c:	f240 80bf 	bls.w	801a0de <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 8019f60:	4427      	add	r7, r4
 8019f62:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8019f66:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 8019f6a:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 8019f6e:	4283      	cmp	r3, r0
 8019f70:	f340 80a1 	ble.w	801a0b6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 8019f74:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 8019f78:	4406      	add	r6, r0
 8019f7a:	b236      	sxth	r6, r6
 8019f7c:	429e      	cmp	r6, r3
 8019f7e:	bfa8      	it	ge
 8019f80:	461e      	movge	r6, r3
 8019f82:	46e1      	mov	r9, ip
 8019f84:	f10c 0c01 	add.w	ip, ip, #1
 8019f88:	e7e3      	b.n	8019f52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 8019f8a:	d10a      	bne.n	8019fa2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8019f8c:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 8019f90:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 8019f94:	4562      	cmp	r2, ip
 8019f96:	bfb8      	it	lt
 8019f98:	4662      	movlt	r2, ip
 8019f9a:	4288      	cmp	r0, r1
 8019f9c:	bfb8      	it	lt
 8019f9e:	461f      	movlt	r7, r3
 8019fa0:	e087      	b.n	801a0b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8019fa2:	428a      	cmp	r2, r1
 8019fa4:	bfb8      	it	lt
 8019fa6:	460a      	movlt	r2, r1
 8019fa8:	e083      	b.n	801a0b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8019faa:	bf00      	nop
 8019fac:	2000228c 	.word	0x2000228c
 8019fb0:	20002298 	.word	0x20002298
 8019fb4:	2000001c 	.word	0x2000001c
 8019fb8:	2000224c 	.word	0x2000224c
 8019fbc:	20002242 	.word	0x20002242
 8019fc0:	20002240 	.word	0x20002240
 8019fc4:	2000224a 	.word	0x2000224a
 8019fc8:	20002244 	.word	0x20002244
 8019fcc:	19a1      	adds	r1, r4, r6
 8019fce:	ab07      	add	r3, sp, #28
 8019fd0:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8019fd4:	6849      	ldr	r1, [r1, #4]
 8019fd6:	c303      	stmia	r3!, {r0, r1}
 8019fd8:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8019fdc:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8019fe0:	2b13      	cmp	r3, #19
 8019fe2:	bfd8      	it	le
 8019fe4:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8019fe8:	f8ad 201c 	strh.w	r2, [sp, #28]
 8019fec:	440b      	add	r3, r1
 8019fee:	1a9b      	subs	r3, r3, r2
 8019ff0:	a807      	add	r0, sp, #28
 8019ff2:	f8ad 3020 	strh.w	r3, [sp, #32]
 8019ff6:	f7fe ffad 	bl	8018f54 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019ffa:	a807      	add	r0, sp, #28
 8019ffc:	f7f9 f99d 	bl	801333a <_ZNK8touchgfx4Rect7isEmptyEv>
 801a000:	bb78      	cbnz	r0, 801a062 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801a002:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 801a006:	f8d9 0000 	ldr.w	r0, [r9]
 801a00a:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801a00e:	f8d0 e000 	ldr.w	lr, [r0]
 801a012:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 801a016:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 801a01a:	f1bc 0f14 	cmp.w	ip, #20
 801a01e:	bfa8      	it	ge
 801a020:	f04f 0c14 	movge.w	ip, #20
 801a024:	fa1f fc8c 	uxth.w	ip, ip
 801a028:	f8cd c000 	str.w	ip, [sp]
 801a02c:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 801a030:	47d8      	blx	fp
 801a032:	4683      	mov	fp, r0
 801a034:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801a038:	a807      	add	r0, sp, #28
 801a03a:	f7fe ff71 	bl	8018f20 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801a03e:	6823      	ldr	r3, [r4, #0]
 801a040:	4426      	add	r6, r4
 801a042:	4620      	mov	r0, r4
 801a044:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801a046:	a907      	add	r1, sp, #28
 801a048:	4798      	blx	r3
 801a04a:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 801a04e:	eba0 000b 	sub.w	r0, r0, fp
 801a052:	b200      	sxth	r0, r0
 801a054:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 801a058:	b918      	cbnz	r0, 801a062 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801a05a:	b2b9      	uxth	r1, r7
 801a05c:	4650      	mov	r0, sl
 801a05e:	f7ff fa79 	bl	8019554 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801a062:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 801a066:	f1bb 0f00 	cmp.w	fp, #0
 801a06a:	f43f af2c 	beq.w	8019ec6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 801a06e:	882b      	ldrh	r3, [r5, #0]
 801a070:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 801a074:	3301      	adds	r3, #1
 801a076:	b29b      	uxth	r3, r3
 801a078:	2700      	movs	r7, #0
 801a07a:	b299      	uxth	r1, r3
 801a07c:	458b      	cmp	fp, r1
 801a07e:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 801a082:	d9a3      	bls.n	8019fcc <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 801a084:	4426      	add	r6, r4
 801a086:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 801a08a:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 801a08e:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 801a092:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 801a096:	4408      	add	r0, r1
 801a098:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 801a09c:	4461      	add	r1, ip
 801a09e:	b200      	sxth	r0, r0
 801a0a0:	b209      	sxth	r1, r1
 801a0a2:	4288      	cmp	r0, r1
 801a0a4:	f6bf af71 	bge.w	8019f8a <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 801a0a8:	4584      	cmp	ip, r0
 801a0aa:	4662      	mov	r2, ip
 801a0ac:	461f      	mov	r7, r3
 801a0ae:	bfb8      	it	lt
 801a0b0:	4602      	movlt	r2, r0
 801a0b2:	3301      	adds	r3, #1
 801a0b4:	e7e1      	b.n	801a07a <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 801a0b6:	d10e      	bne.n	801a0d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 801a0b8:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 801a0bc:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 801a0c0:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 801a0c4:	4473      	add	r3, lr
 801a0c6:	b21b      	sxth	r3, r3
 801a0c8:	429e      	cmp	r6, r3
 801a0ca:	bfa8      	it	ge
 801a0cc:	461e      	movge	r6, r3
 801a0ce:	4287      	cmp	r7, r0
 801a0d0:	bfb8      	it	lt
 801a0d2:	46e1      	movlt	r9, ip
 801a0d4:	e756      	b.n	8019f84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 801a0d6:	4286      	cmp	r6, r0
 801a0d8:	bfa8      	it	ge
 801a0da:	4606      	movge	r6, r0
 801a0dc:	e752      	b.n	8019f84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 801a0de:	eb0a 0007 	add.w	r0, sl, r7
 801a0e2:	4427      	add	r7, r4
 801a0e4:	e9cd 2102 	strd	r2, r1, [sp, #8]
 801a0e8:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 801a0ec:	f1bb 0f13 	cmp.w	fp, #19
 801a0f0:	bfde      	ittt	le
 801a0f2:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 801a0f6:	445e      	addle	r6, fp
 801a0f8:	b236      	sxthle	r6, r6
 801a0fa:	f7f9 f91e 	bl	801333a <_ZNK8touchgfx4Rect7isEmptyEv>
 801a0fe:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 801a102:	2800      	cmp	r0, #0
 801a104:	f47f af1a 	bne.w	8019f3c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 801a108:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 801a10c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801a110:	482a      	ldr	r0, [pc, #168]	; (801a1bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 801a112:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 801a116:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 801a11a:	6800      	ldr	r0, [r0, #0]
 801a11c:	f8ad 101c 	strh.w	r1, [sp, #28]
 801a120:	1ab6      	subs	r6, r6, r2
 801a122:	2e14      	cmp	r6, #20
 801a124:	f8ad 201e 	strh.w	r2, [sp, #30]
 801a128:	f8ad 3020 	strh.w	r3, [sp, #32]
 801a12c:	bfa8      	it	ge
 801a12e:	2614      	movge	r6, #20
 801a130:	f8d0 c000 	ldr.w	ip, [r0]
 801a134:	b2b6      	uxth	r6, r6
 801a136:	fa1f fb8b 	uxth.w	fp, fp
 801a13a:	455e      	cmp	r6, fp
 801a13c:	bf94      	ite	ls
 801a13e:	9600      	strls	r6, [sp, #0]
 801a140:	f8cd b000 	strhi.w	fp, [sp]
 801a144:	b292      	uxth	r2, r2
 801a146:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 801a14a:	b29b      	uxth	r3, r3
 801a14c:	b289      	uxth	r1, r1
 801a14e:	47b0      	blx	r6
 801a150:	6823      	ldr	r3, [r4, #0]
 801a152:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801a156:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801a158:	a907      	add	r1, sp, #28
 801a15a:	4620      	mov	r0, r4
 801a15c:	4798      	blx	r3
 801a15e:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 801a162:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 801a166:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 801a16a:	1a5b      	subs	r3, r3, r1
 801a16c:	440a      	add	r2, r1
 801a16e:	b21b      	sxth	r3, r3
 801a170:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 801a174:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 801a178:	2b00      	cmp	r3, #0
 801a17a:	f47f aeda 	bne.w	8019f32 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 801a17e:	fa1f f189 	uxth.w	r1, r9
 801a182:	4650      	mov	r0, sl
 801a184:	f7ff f9e6 	bl	8019554 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801a188:	e6d3      	b.n	8019f32 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 801a18a:	882e      	ldrh	r6, [r5, #0]
 801a18c:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 801a190:	42b3      	cmp	r3, r6
 801a192:	f67f ae98 	bls.w	8019ec6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 801a196:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 801a19a:	ab07      	add	r3, sp, #28
 801a19c:	f852 0fac 	ldr.w	r0, [r2, #172]!
 801a1a0:	6851      	ldr	r1, [r2, #4]
 801a1a2:	c303      	stmia	r3!, {r0, r1}
 801a1a4:	a807      	add	r0, sp, #28
 801a1a6:	f7f9 f8c8 	bl	801333a <_ZNK8touchgfx4Rect7isEmptyEv>
 801a1aa:	b920      	cbnz	r0, 801a1b6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 801a1ac:	6823      	ldr	r3, [r4, #0]
 801a1ae:	a907      	add	r1, sp, #28
 801a1b0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801a1b2:	4620      	mov	r0, r4
 801a1b4:	4798      	blx	r3
 801a1b6:	3601      	adds	r6, #1
 801a1b8:	b2b6      	uxth	r6, r6
 801a1ba:	e7e7      	b.n	801a18c <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 801a1bc:	2000224c 	.word	0x2000224c

0801a1c0 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 801a1c0:	4b03      	ldr	r3, [pc, #12]	; (801a1d0 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 801a1c2:	2200      	movs	r2, #0
 801a1c4:	801a      	strh	r2, [r3, #0]
 801a1c6:	805a      	strh	r2, [r3, #2]
 801a1c8:	809a      	strh	r2, [r3, #4]
 801a1ca:	80da      	strh	r2, [r3, #6]
 801a1cc:	4770      	bx	lr
 801a1ce:	bf00      	nop
 801a1d0:	20002298 	.word	0x20002298

0801a1d4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 801a1d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a1d8:	4606      	mov	r6, r0
 801a1da:	b09d      	sub	sp, #116	; 0x74
 801a1dc:	a803      	add	r0, sp, #12
 801a1de:	4614      	mov	r4, r2
 801a1e0:	468a      	mov	sl, r1
 801a1e2:	461d      	mov	r5, r3
 801a1e4:	f000 fe80 	bl	801aee8 <_ZN8touchgfx12TextProviderC1Ev>
 801a1e8:	6833      	ldr	r3, [r6, #0]
 801a1ea:	4630      	mov	r0, r6
 801a1ec:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801a1ee:	4798      	blx	r3
 801a1f0:	6833      	ldr	r3, [r6, #0]
 801a1f2:	4607      	mov	r7, r0
 801a1f4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801a1f6:	4630      	mov	r0, r6
 801a1f8:	4798      	blx	r3
 801a1fa:	462a      	mov	r2, r5
 801a1fc:	9000      	str	r0, [sp, #0]
 801a1fe:	4621      	mov	r1, r4
 801a200:	463b      	mov	r3, r7
 801a202:	a803      	add	r0, sp, #12
 801a204:	f000 fecb 	bl	801af9e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801a208:	2500      	movs	r5, #0
 801a20a:	462c      	mov	r4, r5
 801a20c:	46a9      	mov	r9, r5
 801a20e:	46a8      	mov	r8, r5
 801a210:	f242 0b0b 	movw	fp, #8203	; 0x200b
 801a214:	2300      	movs	r3, #0
 801a216:	9302      	str	r3, [sp, #8]
 801a218:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801a21c:	429c      	cmp	r4, r3
 801a21e:	d002      	beq.n	801a226 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 801a220:	455c      	cmp	r4, fp
 801a222:	bf18      	it	ne
 801a224:	4625      	movne	r5, r4
 801a226:	ab02      	add	r3, sp, #8
 801a228:	4632      	mov	r2, r6
 801a22a:	4651      	mov	r1, sl
 801a22c:	a803      	add	r0, sp, #12
 801a22e:	f001 f9b9 	bl	801b5a4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801a232:	4604      	mov	r4, r0
 801a234:	b108      	cbz	r0, 801a23a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 801a236:	280a      	cmp	r0, #10
 801a238:	d10a      	bne.n	801a250 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 801a23a:	45c1      	cmp	r9, r8
 801a23c:	bf38      	it	cc
 801a23e:	46c1      	movcc	r9, r8
 801a240:	f04f 0800 	mov.w	r8, #0
 801a244:	2c00      	cmp	r4, #0
 801a246:	d1e5      	bne.n	801a214 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801a248:	4648      	mov	r0, r9
 801a24a:	b01d      	add	sp, #116	; 0x74
 801a24c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a250:	9a02      	ldr	r2, [sp, #8]
 801a252:	2a00      	cmp	r2, #0
 801a254:	d0de      	beq.n	801a214 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801a256:	7b57      	ldrb	r7, [r2, #13]
 801a258:	6833      	ldr	r3, [r6, #0]
 801a25a:	8894      	ldrh	r4, [r2, #4]
 801a25c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801a25e:	007f      	lsls	r7, r7, #1
 801a260:	f407 7080 	and.w	r0, r7, #256	; 0x100
 801a264:	7a97      	ldrb	r7, [r2, #10]
 801a266:	4629      	mov	r1, r5
 801a268:	4307      	orrs	r7, r0
 801a26a:	4630      	mov	r0, r6
 801a26c:	4798      	blx	r3
 801a26e:	4438      	add	r0, r7
 801a270:	4480      	add	r8, r0
 801a272:	fa1f f888 	uxth.w	r8, r8
 801a276:	e7e5      	b.n	801a244 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0801a278 <_ZNK8touchgfx4Font12getCharWidthEt>:
 801a278:	b508      	push	{r3, lr}
 801a27a:	6803      	ldr	r3, [r0, #0]
 801a27c:	68db      	ldr	r3, [r3, #12]
 801a27e:	4798      	blx	r3
 801a280:	b128      	cbz	r0, 801a28e <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 801a282:	7b43      	ldrb	r3, [r0, #13]
 801a284:	7a80      	ldrb	r0, [r0, #10]
 801a286:	005b      	lsls	r3, r3, #1
 801a288:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801a28c:	4318      	orrs	r0, r3
 801a28e:	bd08      	pop	{r3, pc}

0801a290 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 801a290:	b40e      	push	{r1, r2, r3}
 801a292:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a294:	b09e      	sub	sp, #120	; 0x78
 801a296:	ab23      	add	r3, sp, #140	; 0x8c
 801a298:	4605      	mov	r5, r0
 801a29a:	f853 4b04 	ldr.w	r4, [r3], #4
 801a29e:	9303      	str	r3, [sp, #12]
 801a2a0:	a805      	add	r0, sp, #20
 801a2a2:	f000 fe21 	bl	801aee8 <_ZN8touchgfx12TextProviderC1Ev>
 801a2a6:	682b      	ldr	r3, [r5, #0]
 801a2a8:	4628      	mov	r0, r5
 801a2aa:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801a2ac:	4798      	blx	r3
 801a2ae:	682b      	ldr	r3, [r5, #0]
 801a2b0:	4606      	mov	r6, r0
 801a2b2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801a2b4:	4628      	mov	r0, r5
 801a2b6:	4798      	blx	r3
 801a2b8:	4633      	mov	r3, r6
 801a2ba:	ae1e      	add	r6, sp, #120	; 0x78
 801a2bc:	4621      	mov	r1, r4
 801a2be:	9000      	str	r0, [sp, #0]
 801a2c0:	9a03      	ldr	r2, [sp, #12]
 801a2c2:	2400      	movs	r4, #0
 801a2c4:	a805      	add	r0, sp, #20
 801a2c6:	f000 fe6a 	bl	801af9e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801a2ca:	f846 4d68 	str.w	r4, [r6, #-104]!
 801a2ce:	462a      	mov	r2, r5
 801a2d0:	4633      	mov	r3, r6
 801a2d2:	4621      	mov	r1, r4
 801a2d4:	a805      	add	r0, sp, #20
 801a2d6:	f001 f965 	bl	801b5a4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801a2da:	b1f0      	cbz	r0, 801a31a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 801a2dc:	280a      	cmp	r0, #10
 801a2de:	d018      	beq.n	801a312 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 801a2e0:	9f04      	ldr	r7, [sp, #16]
 801a2e2:	b1b7      	cbz	r7, 801a312 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 801a2e4:	7b78      	ldrb	r0, [r7, #13]
 801a2e6:	7a3b      	ldrb	r3, [r7, #8]
 801a2e8:	88ea      	ldrh	r2, [r5, #6]
 801a2ea:	00c1      	lsls	r1, r0, #3
 801a2ec:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801a2f0:	4319      	orrs	r1, r3
 801a2f2:	0643      	lsls	r3, r0, #25
 801a2f4:	bf44      	itt	mi
 801a2f6:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 801a2fa:	b219      	sxthmi	r1, r3
 801a2fc:	0100      	lsls	r0, r0, #4
 801a2fe:	79fb      	ldrb	r3, [r7, #7]
 801a300:	f400 7080 	and.w	r0, r0, #256	; 0x100
 801a304:	4303      	orrs	r3, r0
 801a306:	4413      	add	r3, r2
 801a308:	1a5b      	subs	r3, r3, r1
 801a30a:	b21b      	sxth	r3, r3
 801a30c:	429c      	cmp	r4, r3
 801a30e:	bfb8      	it	lt
 801a310:	461c      	movlt	r4, r3
 801a312:	4633      	mov	r3, r6
 801a314:	462a      	mov	r2, r5
 801a316:	2100      	movs	r1, #0
 801a318:	e7dc      	b.n	801a2d4 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 801a31a:	b2a0      	uxth	r0, r4
 801a31c:	b01e      	add	sp, #120	; 0x78
 801a31e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801a322:	b003      	add	sp, #12
 801a324:	4770      	bx	lr

0801a326 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 801a326:	7a43      	ldrb	r3, [r0, #9]
 801a328:	8880      	ldrh	r0, [r0, #4]
 801a32a:	4418      	add	r0, r3
 801a32c:	b280      	uxth	r0, r0
 801a32e:	4770      	bx	lr

0801a330 <_ZNK8touchgfx4Font13getFontHeightEv>:
 801a330:	6803      	ldr	r3, [r0, #0]
 801a332:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801a334:	4718      	bx	r3

0801a336 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 801a336:	b40e      	push	{r1, r2, r3}
 801a338:	b570      	push	{r4, r5, r6, lr}
 801a33a:	b09d      	sub	sp, #116	; 0x74
 801a33c:	ab21      	add	r3, sp, #132	; 0x84
 801a33e:	4604      	mov	r4, r0
 801a340:	f853 5b04 	ldr.w	r5, [r3], #4
 801a344:	9302      	str	r3, [sp, #8]
 801a346:	a803      	add	r0, sp, #12
 801a348:	f000 fdce 	bl	801aee8 <_ZN8touchgfx12TextProviderC1Ev>
 801a34c:	6823      	ldr	r3, [r4, #0]
 801a34e:	4620      	mov	r0, r4
 801a350:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801a352:	4798      	blx	r3
 801a354:	6823      	ldr	r3, [r4, #0]
 801a356:	4606      	mov	r6, r0
 801a358:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801a35a:	4620      	mov	r0, r4
 801a35c:	4798      	blx	r3
 801a35e:	4633      	mov	r3, r6
 801a360:	9000      	str	r0, [sp, #0]
 801a362:	9a02      	ldr	r2, [sp, #8]
 801a364:	4629      	mov	r1, r5
 801a366:	a803      	add	r0, sp, #12
 801a368:	f000 fe19 	bl	801af9e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801a36c:	a803      	add	r0, sp, #12
 801a36e:	f001 f9e7 	bl	801b740 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801a372:	2401      	movs	r4, #1
 801a374:	b2a3      	uxth	r3, r4
 801a376:	b140      	cbz	r0, 801a38a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 801a378:	280a      	cmp	r0, #10
 801a37a:	bf08      	it	eq
 801a37c:	3301      	addeq	r3, #1
 801a37e:	a803      	add	r0, sp, #12
 801a380:	bf08      	it	eq
 801a382:	b21c      	sxtheq	r4, r3
 801a384:	f001 f9dc 	bl	801b740 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801a388:	e7f4      	b.n	801a374 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 801a38a:	4618      	mov	r0, r3
 801a38c:	b01d      	add	sp, #116	; 0x74
 801a38e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801a392:	b003      	add	sp, #12
 801a394:	4770      	bx	lr

0801a396 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 801a396:	b40e      	push	{r1, r2, r3}
 801a398:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a39a:	b09e      	sub	sp, #120	; 0x78
 801a39c:	ab23      	add	r3, sp, #140	; 0x8c
 801a39e:	4604      	mov	r4, r0
 801a3a0:	f853 5b04 	ldr.w	r5, [r3], #4
 801a3a4:	9303      	str	r3, [sp, #12]
 801a3a6:	a805      	add	r0, sp, #20
 801a3a8:	f000 fd9e 	bl	801aee8 <_ZN8touchgfx12TextProviderC1Ev>
 801a3ac:	6823      	ldr	r3, [r4, #0]
 801a3ae:	4620      	mov	r0, r4
 801a3b0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801a3b2:	4798      	blx	r3
 801a3b4:	6823      	ldr	r3, [r4, #0]
 801a3b6:	4606      	mov	r6, r0
 801a3b8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801a3ba:	4620      	mov	r0, r4
 801a3bc:	4798      	blx	r3
 801a3be:	4633      	mov	r3, r6
 801a3c0:	4629      	mov	r1, r5
 801a3c2:	9000      	str	r0, [sp, #0]
 801a3c4:	9a03      	ldr	r2, [sp, #12]
 801a3c6:	a805      	add	r0, sp, #20
 801a3c8:	ad1e      	add	r5, sp, #120	; 0x78
 801a3ca:	f000 fde8 	bl	801af9e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801a3ce:	2100      	movs	r1, #0
 801a3d0:	f845 1d68 	str.w	r1, [r5, #-104]!
 801a3d4:	4622      	mov	r2, r4
 801a3d6:	462b      	mov	r3, r5
 801a3d8:	a805      	add	r0, sp, #20
 801a3da:	f001 f8e3 	bl	801b5a4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801a3de:	f647 76ff 	movw	r6, #32767	; 0x7fff
 801a3e2:	b1d8      	cbz	r0, 801a41c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 801a3e4:	280a      	cmp	r0, #10
 801a3e6:	d012      	beq.n	801a40e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 801a3e8:	9804      	ldr	r0, [sp, #16]
 801a3ea:	b180      	cbz	r0, 801a40e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 801a3ec:	7b47      	ldrb	r7, [r0, #13]
 801a3ee:	88e2      	ldrh	r2, [r4, #6]
 801a3f0:	00fb      	lsls	r3, r7, #3
 801a3f2:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801a3f6:	7a03      	ldrb	r3, [r0, #8]
 801a3f8:	430b      	orrs	r3, r1
 801a3fa:	0679      	lsls	r1, r7, #25
 801a3fc:	bf44      	itt	mi
 801a3fe:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801a402:	b21b      	sxthmi	r3, r3
 801a404:	1ad3      	subs	r3, r2, r3
 801a406:	b21b      	sxth	r3, r3
 801a408:	429e      	cmp	r6, r3
 801a40a:	bfa8      	it	ge
 801a40c:	461e      	movge	r6, r3
 801a40e:	462b      	mov	r3, r5
 801a410:	4622      	mov	r2, r4
 801a412:	2100      	movs	r1, #0
 801a414:	a805      	add	r0, sp, #20
 801a416:	f001 f8c5 	bl	801b5a4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801a41a:	e7e2      	b.n	801a3e2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 801a41c:	4630      	mov	r0, r6
 801a41e:	b01e      	add	sp, #120	; 0x78
 801a420:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801a424:	b003      	add	sp, #12
 801a426:	4770      	bx	lr

0801a428 <_ZNK8touchgfx8Drawable10invalidateEv>:
 801a428:	b513      	push	{r0, r1, r4, lr}
 801a42a:	6803      	ldr	r3, [r0, #0]
 801a42c:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801a430:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801a434:	f8ad 1004 	strh.w	r1, [sp, #4]
 801a438:	2400      	movs	r4, #0
 801a43a:	9400      	str	r4, [sp, #0]
 801a43c:	f8ad 2006 	strh.w	r2, [sp, #6]
 801a440:	691b      	ldr	r3, [r3, #16]
 801a442:	4669      	mov	r1, sp
 801a444:	4798      	blx	r3
 801a446:	b002      	add	sp, #8
 801a448:	bd10      	pop	{r4, pc}

0801a44a <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 801a44a:	b538      	push	{r3, r4, r5, lr}
 801a44c:	680b      	ldr	r3, [r1, #0]
 801a44e:	460c      	mov	r4, r1
 801a450:	68db      	ldr	r3, [r3, #12]
 801a452:	4605      	mov	r5, r0
 801a454:	4798      	blx	r3
 801a456:	6823      	ldr	r3, [r4, #0]
 801a458:	4620      	mov	r0, r4
 801a45a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a45c:	4629      	mov	r1, r5
 801a45e:	4798      	blx	r3
 801a460:	4628      	mov	r0, r5
 801a462:	bd38      	pop	{r3, r4, r5, pc}

0801a464 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 801a464:	b410      	push	{r4}
 801a466:	880a      	ldrh	r2, [r1, #0]
 801a468:	8884      	ldrh	r4, [r0, #4]
 801a46a:	4422      	add	r2, r4
 801a46c:	800a      	strh	r2, [r1, #0]
 801a46e:	88c4      	ldrh	r4, [r0, #6]
 801a470:	884a      	ldrh	r2, [r1, #2]
 801a472:	4422      	add	r2, r4
 801a474:	804a      	strh	r2, [r1, #2]
 801a476:	6940      	ldr	r0, [r0, #20]
 801a478:	b120      	cbz	r0, 801a484 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 801a47a:	6803      	ldr	r3, [r0, #0]
 801a47c:	f85d 4b04 	ldr.w	r4, [sp], #4
 801a480:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a482:	4718      	bx	r3
 801a484:	f85d 4b04 	ldr.w	r4, [sp], #4
 801a488:	4770      	bx	lr

0801a48a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 801a48a:	b570      	push	{r4, r5, r6, lr}
 801a48c:	8882      	ldrh	r2, [r0, #4]
 801a48e:	880b      	ldrh	r3, [r1, #0]
 801a490:	4413      	add	r3, r2
 801a492:	800b      	strh	r3, [r1, #0]
 801a494:	88c2      	ldrh	r2, [r0, #6]
 801a496:	884b      	ldrh	r3, [r1, #2]
 801a498:	460c      	mov	r4, r1
 801a49a:	4413      	add	r3, r2
 801a49c:	804b      	strh	r3, [r1, #2]
 801a49e:	4605      	mov	r5, r0
 801a4a0:	1d01      	adds	r1, r0, #4
 801a4a2:	4620      	mov	r0, r4
 801a4a4:	f7f8 ff06 	bl	80132b4 <_ZN8touchgfx4RectaNERKS0_>
 801a4a8:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801a4ac:	2b00      	cmp	r3, #0
 801a4ae:	dd0b      	ble.n	801a4c8 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801a4b0:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801a4b4:	2b00      	cmp	r3, #0
 801a4b6:	dd07      	ble.n	801a4c8 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801a4b8:	6968      	ldr	r0, [r5, #20]
 801a4ba:	b128      	cbz	r0, 801a4c8 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801a4bc:	6803      	ldr	r3, [r0, #0]
 801a4be:	4621      	mov	r1, r4
 801a4c0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a4c2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801a4c6:	4718      	bx	r3
 801a4c8:	bd70      	pop	{r4, r5, r6, pc}
	...

0801a4cc <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 801a4cc:	b570      	push	{r4, r5, r6, lr}
 801a4ce:	8882      	ldrh	r2, [r0, #4]
 801a4d0:	880b      	ldrh	r3, [r1, #0]
 801a4d2:	4413      	add	r3, r2
 801a4d4:	800b      	strh	r3, [r1, #0]
 801a4d6:	88c2      	ldrh	r2, [r0, #6]
 801a4d8:	884b      	ldrh	r3, [r1, #2]
 801a4da:	460c      	mov	r4, r1
 801a4dc:	4413      	add	r3, r2
 801a4de:	804b      	strh	r3, [r1, #2]
 801a4e0:	4605      	mov	r5, r0
 801a4e2:	1d01      	adds	r1, r0, #4
 801a4e4:	4620      	mov	r0, r4
 801a4e6:	f7f8 fee5 	bl	80132b4 <_ZN8touchgfx4RectaNERKS0_>
 801a4ea:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801a4ee:	2b00      	cmp	r3, #0
 801a4f0:	dd19      	ble.n	801a526 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801a4f2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801a4f6:	2b00      	cmp	r3, #0
 801a4f8:	dd15      	ble.n	801a526 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801a4fa:	6968      	ldr	r0, [r5, #20]
 801a4fc:	b128      	cbz	r0, 801a50a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 801a4fe:	6803      	ldr	r3, [r0, #0]
 801a500:	4621      	mov	r1, r4
 801a502:	691b      	ldr	r3, [r3, #16]
 801a504:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801a508:	4718      	bx	r3
 801a50a:	4b07      	ldr	r3, [pc, #28]	; (801a528 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 801a50c:	681b      	ldr	r3, [r3, #0]
 801a50e:	3304      	adds	r3, #4
 801a510:	429d      	cmp	r5, r3
 801a512:	d108      	bne.n	801a526 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801a514:	f7fe fec8 	bl	80192a8 <_ZN8touchgfx11Application11getInstanceEv>
 801a518:	6803      	ldr	r3, [r0, #0]
 801a51a:	6821      	ldr	r1, [r4, #0]
 801a51c:	6862      	ldr	r2, [r4, #4]
 801a51e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801a520:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801a524:	4718      	bx	r3
 801a526:	bd70      	pop	{r4, r5, r6, pc}
 801a528:	20002290 	.word	0x20002290

0801a52c <_ZN8touchgfx8Drawable12moveRelativeEss>:
 801a52c:	b570      	push	{r4, r5, r6, lr}
 801a52e:	4604      	mov	r4, r0
 801a530:	4616      	mov	r6, r2
 801a532:	460d      	mov	r5, r1
 801a534:	b901      	cbnz	r1, 801a538 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 801a536:	b192      	cbz	r2, 801a55e <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 801a538:	6823      	ldr	r3, [r4, #0]
 801a53a:	4620      	mov	r0, r4
 801a53c:	699b      	ldr	r3, [r3, #24]
 801a53e:	4798      	blx	r3
 801a540:	88e2      	ldrh	r2, [r4, #6]
 801a542:	88a1      	ldrh	r1, [r4, #4]
 801a544:	4432      	add	r2, r6
 801a546:	4429      	add	r1, r5
 801a548:	4620      	mov	r0, r4
 801a54a:	b212      	sxth	r2, r2
 801a54c:	b209      	sxth	r1, r1
 801a54e:	f7ef fc4c 	bl	8009dea <_ZN8touchgfx8Drawable5setXYEss>
 801a552:	6823      	ldr	r3, [r4, #0]
 801a554:	4620      	mov	r0, r4
 801a556:	699b      	ldr	r3, [r3, #24]
 801a558:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801a55c:	4718      	bx	r3
 801a55e:	bd70      	pop	{r4, r5, r6, pc}

0801a560 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 801a560:	b510      	push	{r4, lr}
 801a562:	4604      	mov	r4, r0
 801a564:	4608      	mov	r0, r1
 801a566:	2300      	movs	r3, #0
 801a568:	8023      	strh	r3, [r4, #0]
 801a56a:	8063      	strh	r3, [r4, #2]
 801a56c:	6803      	ldr	r3, [r0, #0]
 801a56e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801a572:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 801a576:	80a1      	strh	r1, [r4, #4]
 801a578:	80e2      	strh	r2, [r4, #6]
 801a57a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a57c:	4621      	mov	r1, r4
 801a57e:	4798      	blx	r3
 801a580:	4620      	mov	r0, r4
 801a582:	bd10      	pop	{r4, pc}

0801a584 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 801a584:	b530      	push	{r4, r5, lr}
 801a586:	8083      	strh	r3, [r0, #4]
 801a588:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 801a58c:	80c3      	strh	r3, [r0, #6]
 801a58e:	f89d 3010 	ldrb.w	r3, [sp, #16]
 801a592:	7203      	strb	r3, [r0, #8]
 801a594:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801a598:	f89d 5018 	ldrb.w	r5, [sp, #24]
 801a59c:	7243      	strb	r3, [r0, #9]
 801a59e:	7a83      	ldrb	r3, [r0, #10]
 801a5a0:	6141      	str	r1, [r0, #20]
 801a5a2:	f365 0306 	bfi	r3, r5, #0, #7
 801a5a6:	f89d 501c 	ldrb.w	r5, [sp, #28]
 801a5aa:	8302      	strh	r2, [r0, #24]
 801a5ac:	f365 13c7 	bfi	r3, r5, #7, #1
 801a5b0:	7283      	strb	r3, [r0, #10]
 801a5b2:	f89d 3020 	ldrb.w	r3, [sp, #32]
 801a5b6:	72c3      	strb	r3, [r0, #11]
 801a5b8:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 801a5bc:	7303      	strb	r3, [r0, #12]
 801a5be:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801a5c2:	81c3      	strh	r3, [r0, #14]
 801a5c4:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 801a5c8:	8203      	strh	r3, [r0, #16]
 801a5ca:	4b01      	ldr	r3, [pc, #4]	; (801a5d0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 801a5cc:	6003      	str	r3, [r0, #0]
 801a5ce:	bd30      	pop	{r4, r5, pc}
 801a5d0:	0802fa24 	.word	0x0802fa24

0801a5d4 <_ZNK8touchgfx9ConstFont4findEt>:
 801a5d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a5d6:	6944      	ldr	r4, [r0, #20]
 801a5d8:	b3bc      	cbz	r4, 801a64a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801a5da:	88a3      	ldrh	r3, [r4, #4]
 801a5dc:	8b02      	ldrh	r2, [r0, #24]
 801a5de:	1acb      	subs	r3, r1, r3
 801a5e0:	f102 32ff 	add.w	r2, r2, #4294967295
 801a5e4:	d431      	bmi.n	801a64a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801a5e6:	4293      	cmp	r3, r2
 801a5e8:	dd0c      	ble.n	801a604 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 801a5ea:	230e      	movs	r3, #14
 801a5ec:	fb03 4302 	mla	r3, r3, r2, r4
 801a5f0:	889b      	ldrh	r3, [r3, #4]
 801a5f2:	1a5b      	subs	r3, r3, r1
 801a5f4:	1ad3      	subs	r3, r2, r3
 801a5f6:	429a      	cmp	r2, r3
 801a5f8:	db27      	blt.n	801a64a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801a5fa:	2b00      	cmp	r3, #0
 801a5fc:	bfbc      	itt	lt
 801a5fe:	2302      	movlt	r3, #2
 801a600:	fb92 f3f3 	sdivlt	r3, r2, r3
 801a604:	2500      	movs	r5, #0
 801a606:	260e      	movs	r6, #14
 801a608:	4295      	cmp	r5, r2
 801a60a:	dc1e      	bgt.n	801a64a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801a60c:	fb06 4003 	mla	r0, r6, r3, r4
 801a610:	8887      	ldrh	r7, [r0, #4]
 801a612:	42b9      	cmp	r1, r7
 801a614:	d01a      	beq.n	801a64c <_ZNK8touchgfx9ConstFont4findEt+0x78>
 801a616:	d20d      	bcs.n	801a634 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 801a618:	1e5a      	subs	r2, r3, #1
 801a61a:	4295      	cmp	r5, r2
 801a61c:	dc15      	bgt.n	801a64a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801a61e:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 801a622:	1a5b      	subs	r3, r3, r1
 801a624:	1ad3      	subs	r3, r2, r3
 801a626:	429a      	cmp	r2, r3
 801a628:	db0f      	blt.n	801a64a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801a62a:	429d      	cmp	r5, r3
 801a62c:	ddec      	ble.n	801a608 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801a62e:	1953      	adds	r3, r2, r5
 801a630:	105b      	asrs	r3, r3, #1
 801a632:	e7e9      	b.n	801a608 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801a634:	1c5d      	adds	r5, r3, #1
 801a636:	42aa      	cmp	r2, r5
 801a638:	db07      	blt.n	801a64a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801a63a:	8a43      	ldrh	r3, [r0, #18]
 801a63c:	1acb      	subs	r3, r1, r3
 801a63e:	442b      	add	r3, r5
 801a640:	429d      	cmp	r5, r3
 801a642:	dc02      	bgt.n	801a64a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801a644:	429a      	cmp	r2, r3
 801a646:	dadf      	bge.n	801a608 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801a648:	e7f1      	b.n	801a62e <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 801a64a:	2000      	movs	r0, #0
 801a64c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801a64e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 801a64e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801a650:	4604      	mov	r4, r0
 801a652:	4617      	mov	r7, r2
 801a654:	461e      	mov	r6, r3
 801a656:	b911      	cbnz	r1, 801a65e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 801a658:	2500      	movs	r5, #0
 801a65a:	4628      	mov	r0, r5
 801a65c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801a65e:	290a      	cmp	r1, #10
 801a660:	d0fa      	beq.n	801a658 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801a662:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 801a666:	4291      	cmp	r1, r2
 801a668:	d0f6      	beq.n	801a658 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801a66a:	f242 020b 	movw	r2, #8203	; 0x200b
 801a66e:	4291      	cmp	r1, r2
 801a670:	d0f2      	beq.n	801a658 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801a672:	f7ff ffaf 	bl	801a5d4 <_ZNK8touchgfx9ConstFont4findEt>
 801a676:	4605      	mov	r5, r0
 801a678:	b950      	cbnz	r0, 801a690 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 801a67a:	6823      	ldr	r3, [r4, #0]
 801a67c:	4620      	mov	r0, r4
 801a67e:	691b      	ldr	r3, [r3, #16]
 801a680:	4798      	blx	r3
 801a682:	4601      	mov	r1, r0
 801a684:	4620      	mov	r0, r4
 801a686:	f7ff ffa5 	bl	801a5d4 <_ZNK8touchgfx9ConstFont4findEt>
 801a68a:	4605      	mov	r5, r0
 801a68c:	2800      	cmp	r0, #0
 801a68e:	d0e3      	beq.n	801a658 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801a690:	6823      	ldr	r3, [r4, #0]
 801a692:	4629      	mov	r1, r5
 801a694:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801a696:	4620      	mov	r0, r4
 801a698:	4798      	blx	r3
 801a69a:	6038      	str	r0, [r7, #0]
 801a69c:	6823      	ldr	r3, [r4, #0]
 801a69e:	4620      	mov	r0, r4
 801a6a0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801a6a2:	4798      	blx	r3
 801a6a4:	7030      	strb	r0, [r6, #0]
 801a6a6:	e7d8      	b.n	801a65a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0801a6a8 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 801a6a8:	b538      	push	{r3, r4, r5, lr}
 801a6aa:	4605      	mov	r5, r0
 801a6ac:	f002 fa6e 	bl	801cb8c <_ZNK8touchgfx6Bitmap9getFormatEv>
 801a6b0:	4604      	mov	r4, r0
 801a6b2:	4628      	mov	r0, r5
 801a6b4:	f002 f9ae 	bl	801ca14 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801a6b8:	2800      	cmp	r0, #0
 801a6ba:	bf14      	ite	ne
 801a6bc:	2002      	movne	r0, #2
 801a6be:	2000      	moveq	r0, #0
 801a6c0:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 801a6c4:	b280      	uxth	r0, r0
 801a6c6:	bd38      	pop	{r3, r4, r5, pc}

0801a6c8 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 801a6c8:	b538      	push	{r3, r4, r5, lr}
 801a6ca:	4605      	mov	r5, r0
 801a6cc:	f002 fa5e 	bl	801cb8c <_ZNK8touchgfx6Bitmap9getFormatEv>
 801a6d0:	4604      	mov	r4, r0
 801a6d2:	4628      	mov	r0, r5
 801a6d4:	f002 f99e 	bl	801ca14 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801a6d8:	2800      	cmp	r0, #0
 801a6da:	bf14      	ite	ne
 801a6dc:	2002      	movne	r0, #2
 801a6de:	2000      	moveq	r0, #0
 801a6e0:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 801a6e4:	f040 0001 	orr.w	r0, r0, #1
 801a6e8:	b280      	uxth	r0, r0
 801a6ea:	bd38      	pop	{r3, r4, r5, pc}

0801a6ec <_ZN8touchgfx4clzuEm>:
 801a6ec:	4603      	mov	r3, r0
 801a6ee:	b1c8      	cbz	r0, 801a724 <_ZN8touchgfx4clzuEm+0x38>
 801a6f0:	0c02      	lsrs	r2, r0, #16
 801a6f2:	0412      	lsls	r2, r2, #16
 801a6f4:	b9a2      	cbnz	r2, 801a720 <_ZN8touchgfx4clzuEm+0x34>
 801a6f6:	0403      	lsls	r3, r0, #16
 801a6f8:	2010      	movs	r0, #16
 801a6fa:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 801a6fe:	bf04      	itt	eq
 801a700:	021b      	lsleq	r3, r3, #8
 801a702:	3008      	addeq	r0, #8
 801a704:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 801a708:	bf04      	itt	eq
 801a70a:	011b      	lsleq	r3, r3, #4
 801a70c:	3004      	addeq	r0, #4
 801a70e:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 801a712:	bf04      	itt	eq
 801a714:	009b      	lsleq	r3, r3, #2
 801a716:	3002      	addeq	r0, #2
 801a718:	2b00      	cmp	r3, #0
 801a71a:	db04      	blt.n	801a726 <_ZN8touchgfx4clzuEm+0x3a>
 801a71c:	3001      	adds	r0, #1
 801a71e:	4770      	bx	lr
 801a720:	2000      	movs	r0, #0
 801a722:	e7ea      	b.n	801a6fa <_ZN8touchgfx4clzuEm+0xe>
 801a724:	2020      	movs	r0, #32
 801a726:	4770      	bx	lr

0801a728 <_ZN8touchgfx7muldivuEmmmRm>:
 801a728:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 801a72c:	460f      	mov	r7, r1
 801a72e:	4615      	mov	r5, r2
 801a730:	461e      	mov	r6, r3
 801a732:	4601      	mov	r1, r0
 801a734:	b100      	cbz	r0, 801a738 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 801a736:	b927      	cbnz	r7, 801a742 <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 801a738:	2000      	movs	r0, #0
 801a73a:	6030      	str	r0, [r6, #0]
 801a73c:	b002      	add	sp, #8
 801a73e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a742:	f7ff ffd3 	bl	801a6ec <_ZN8touchgfx4clzuEm>
 801a746:	b980      	cbnz	r0, 801a76a <_ZN8touchgfx7muldivuEmmmRm+0x42>
 801a748:	4638      	mov	r0, r7
 801a74a:	f7ff ffcf 	bl	801a6ec <_ZN8touchgfx4clzuEm>
 801a74e:	2800      	cmp	r0, #0
 801a750:	dd05      	ble.n	801a75e <_ZN8touchgfx7muldivuEmmmRm+0x36>
 801a752:	4633      	mov	r3, r6
 801a754:	462a      	mov	r2, r5
 801a756:	4638      	mov	r0, r7
 801a758:	f7ff ffe6 	bl	801a728 <_ZN8touchgfx7muldivuEmmmRm>
 801a75c:	e7ee      	b.n	801a73c <_ZN8touchgfx7muldivuEmmmRm+0x14>
 801a75e:	f04f 33ff 	mov.w	r3, #4294967295
 801a762:	6033      	str	r3, [r6, #0]
 801a764:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 801a768:	e7e8      	b.n	801a73c <_ZN8touchgfx7muldivuEmmmRm+0x14>
 801a76a:	fa37 f800 	lsrs.w	r8, r7, r0
 801a76e:	fb07 f301 	mul.w	r3, r7, r1
 801a772:	d105      	bne.n	801a780 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 801a774:	fbb3 f0f5 	udiv	r0, r3, r5
 801a778:	fb05 3510 	mls	r5, r5, r0, r3
 801a77c:	6035      	str	r5, [r6, #0]
 801a77e:	e7dd      	b.n	801a73c <_ZN8touchgfx7muldivuEmmmRm+0x14>
 801a780:	2301      	movs	r3, #1
 801a782:	fa01 fa00 	lsl.w	sl, r1, r0
 801a786:	fa03 f000 	lsl.w	r0, r3, r0
 801a78a:	3801      	subs	r0, #1
 801a78c:	462a      	mov	r2, r5
 801a78e:	4633      	mov	r3, r6
 801a790:	4038      	ands	r0, r7
 801a792:	f7ff ffc9 	bl	801a728 <_ZN8touchgfx7muldivuEmmmRm>
 801a796:	fbba f9f5 	udiv	r9, sl, r5
 801a79a:	462a      	mov	r2, r5
 801a79c:	4607      	mov	r7, r0
 801a79e:	ab01      	add	r3, sp, #4
 801a7a0:	fb05 a119 	mls	r1, r5, r9, sl
 801a7a4:	4640      	mov	r0, r8
 801a7a6:	f7ff ffbf 	bl	801a728 <_ZN8touchgfx7muldivuEmmmRm>
 801a7aa:	9b01      	ldr	r3, [sp, #4]
 801a7ac:	6832      	ldr	r2, [r6, #0]
 801a7ae:	fb08 f409 	mul.w	r4, r8, r9
 801a7b2:	441a      	add	r2, r3
 801a7b4:	fbb2 f3f5 	udiv	r3, r2, r5
 801a7b8:	441c      	add	r4, r3
 801a7ba:	443c      	add	r4, r7
 801a7bc:	4420      	add	r0, r4
 801a7be:	fb05 2513 	mls	r5, r5, r3, r2
 801a7c2:	e7db      	b.n	801a77c <_ZN8touchgfx7muldivuEmmmRm+0x54>

0801a7c4 <_ZN8touchgfx6muldivElllRl>:
 801a7c4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801a7c6:	2800      	cmp	r0, #0
 801a7c8:	bfba      	itte	lt
 801a7ca:	4240      	neglt	r0, r0
 801a7cc:	f04f 34ff 	movlt.w	r4, #4294967295
 801a7d0:	2401      	movge	r4, #1
 801a7d2:	2900      	cmp	r1, #0
 801a7d4:	bfbc      	itt	lt
 801a7d6:	4249      	neglt	r1, r1
 801a7d8:	4264      	neglt	r4, r4
 801a7da:	2a00      	cmp	r2, #0
 801a7dc:	bfb6      	itet	lt
 801a7de:	4265      	neglt	r5, r4
 801a7e0:	4625      	movge	r5, r4
 801a7e2:	4252      	neglt	r2, r2
 801a7e4:	4288      	cmp	r0, r1
 801a7e6:	461e      	mov	r6, r3
 801a7e8:	bfc2      	ittt	gt
 801a7ea:	4603      	movgt	r3, r0
 801a7ec:	4608      	movgt	r0, r1
 801a7ee:	4619      	movgt	r1, r3
 801a7f0:	ab01      	add	r3, sp, #4
 801a7f2:	f7ff ff99 	bl	801a728 <_ZN8touchgfx7muldivuEmmmRm>
 801a7f6:	9b01      	ldr	r3, [sp, #4]
 801a7f8:	4368      	muls	r0, r5
 801a7fa:	435c      	muls	r4, r3
 801a7fc:	6034      	str	r4, [r6, #0]
 801a7fe:	b002      	add	sp, #8
 801a800:	bd70      	pop	{r4, r5, r6, pc}

0801a802 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 801a802:	2000      	movs	r0, #0
 801a804:	4770      	bx	lr

0801a806 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 801a806:	2001      	movs	r0, #1
 801a808:	4770      	bx	lr

0801a80a <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 801a80a:	2002      	movs	r0, #2
 801a80c:	4770      	bx	lr

0801a80e <_ZN8touchgfx12GestureEventD1Ev>:
 801a80e:	4770      	bx	lr

0801a810 <_ZN8touchgfx9DragEventD1Ev>:
 801a810:	4770      	bx	lr

0801a812 <_ZN8touchgfx10ClickEventD1Ev>:
 801a812:	4770      	bx	lr

0801a814 <_ZN8touchgfx10ClickEventD0Ev>:
 801a814:	b510      	push	{r4, lr}
 801a816:	210c      	movs	r1, #12
 801a818:	4604      	mov	r4, r0
 801a81a:	f00f ffa2 	bl	802a762 <_ZdlPvj>
 801a81e:	4620      	mov	r0, r4
 801a820:	bd10      	pop	{r4, pc}

0801a822 <_ZN8touchgfx9DragEventD0Ev>:
 801a822:	b510      	push	{r4, lr}
 801a824:	2110      	movs	r1, #16
 801a826:	4604      	mov	r4, r0
 801a828:	f00f ff9b 	bl	802a762 <_ZdlPvj>
 801a82c:	4620      	mov	r0, r4
 801a82e:	bd10      	pop	{r4, pc}

0801a830 <_ZN8touchgfx12GestureEventD0Ev>:
 801a830:	b510      	push	{r4, lr}
 801a832:	210c      	movs	r1, #12
 801a834:	4604      	mov	r4, r0
 801a836:	f00f ff94 	bl	802a762 <_ZdlPvj>
 801a83a:	4620      	mov	r0, r4
 801a83c:	bd10      	pop	{r4, pc}
	...

0801a840 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 801a840:	b530      	push	{r4, r5, lr}
 801a842:	460d      	mov	r5, r1
 801a844:	6b01      	ldr	r1, [r0, #48]	; 0x30
 801a846:	b087      	sub	sp, #28
 801a848:	4604      	mov	r4, r0
 801a84a:	b301      	cbz	r1, 801a88e <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 801a84c:	a801      	add	r0, sp, #4
 801a84e:	f7ff fe87 	bl	801a560 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a852:	892a      	ldrh	r2, [r5, #8]
 801a854:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801a858:	7928      	ldrb	r0, [r5, #4]
 801a85a:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801a85e:	f88d 0010 	strb.w	r0, [sp, #16]
 801a862:	1ad2      	subs	r2, r2, r3
 801a864:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 801a866:	6b20      	ldr	r0, [r4, #48]	; 0x30
 801a868:	f8ad 1012 	strh.w	r1, [sp, #18]
 801a86c:	441a      	add	r2, r3
 801a86e:	896b      	ldrh	r3, [r5, #10]
 801a870:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 801a874:	f8ad 2014 	strh.w	r2, [sp, #20]
 801a878:	1b5b      	subs	r3, r3, r5
 801a87a:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 801a87c:	442b      	add	r3, r5
 801a87e:	4d05      	ldr	r5, [pc, #20]	; (801a894 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 801a880:	9503      	str	r5, [sp, #12]
 801a882:	f8ad 3016 	strh.w	r3, [sp, #22]
 801a886:	6803      	ldr	r3, [r0, #0]
 801a888:	a903      	add	r1, sp, #12
 801a88a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801a88c:	4798      	blx	r3
 801a88e:	b007      	add	sp, #28
 801a890:	bd30      	pop	{r4, r5, pc}
 801a892:	bf00      	nop
 801a894:	0802faac 	.word	0x0802faac

0801a898 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 801a898:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801a89c:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801a89e:	b08a      	sub	sp, #40	; 0x28
 801a8a0:	4604      	mov	r4, r0
 801a8a2:	460d      	mov	r5, r1
 801a8a4:	b113      	cbz	r3, 801a8ac <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 801a8a6:	790b      	ldrb	r3, [r1, #4]
 801a8a8:	2b00      	cmp	r3, #0
 801a8aa:	d044      	beq.n	801a936 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801a8ac:	f104 0804 	add.w	r8, r4, #4
 801a8b0:	4641      	mov	r1, r8
 801a8b2:	a803      	add	r0, sp, #12
 801a8b4:	f7ff fe54 	bl	801a560 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a8b8:	792b      	ldrb	r3, [r5, #4]
 801a8ba:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801a8be:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801a8c2:	b983      	cbnz	r3, 801a8e6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 801a8c4:	892a      	ldrh	r2, [r5, #8]
 801a8c6:	88e9      	ldrh	r1, [r5, #6]
 801a8c8:	f104 0336 	add.w	r3, r4, #54	; 0x36
 801a8cc:	1b92      	subs	r2, r2, r6
 801a8ce:	1bc9      	subs	r1, r1, r7
 801a8d0:	9301      	str	r3, [sp, #4]
 801a8d2:	f104 0334 	add.w	r3, r4, #52	; 0x34
 801a8d6:	9300      	str	r3, [sp, #0]
 801a8d8:	b212      	sxth	r2, r2
 801a8da:	f104 0330 	add.w	r3, r4, #48	; 0x30
 801a8de:	b209      	sxth	r1, r1
 801a8e0:	4640      	mov	r0, r8
 801a8e2:	f7f8 fc03 	bl	80130ec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 801a8e6:	6b21      	ldr	r1, [r4, #48]	; 0x30
 801a8e8:	b329      	cbz	r1, 801a936 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801a8ea:	a805      	add	r0, sp, #20
 801a8ec:	f7ff fe38 	bl	801a560 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a8f0:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801a8f4:	792b      	ldrb	r3, [r5, #4]
 801a8f6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 801a8f8:	f88d 3020 	strb.w	r3, [sp, #32]
 801a8fc:	1abf      	subs	r7, r7, r2
 801a8fe:	88ea      	ldrh	r2, [r5, #6]
 801a900:	4417      	add	r7, r2
 801a902:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 801a904:	4417      	add	r7, r2
 801a906:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 801a90a:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 801a90e:	1ab6      	subs	r6, r6, r2
 801a910:	892a      	ldrh	r2, [r5, #8]
 801a912:	4416      	add	r6, r2
 801a914:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801a916:	4416      	add	r6, r2
 801a918:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 801a91c:	4a07      	ldr	r2, [pc, #28]	; (801a93c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 801a91e:	9207      	str	r2, [sp, #28]
 801a920:	2600      	movs	r6, #0
 801a922:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 801a926:	6803      	ldr	r3, [r0, #0]
 801a928:	a907      	add	r1, sp, #28
 801a92a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801a92c:	4798      	blx	r3
 801a92e:	792b      	ldrb	r3, [r5, #4]
 801a930:	b10b      	cbz	r3, 801a936 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801a932:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 801a936:	b00a      	add	sp, #40	; 0x28
 801a938:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801a93c:	0802fa84 	.word	0x0802fa84

0801a940 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 801a940:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801a944:	460c      	mov	r4, r1
 801a946:	6b01      	ldr	r1, [r0, #48]	; 0x30
 801a948:	b088      	sub	sp, #32
 801a94a:	4605      	mov	r5, r0
 801a94c:	2900      	cmp	r1, #0
 801a94e:	d06d      	beq.n	801aa2c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 801a950:	4668      	mov	r0, sp
 801a952:	f7ff fe05 	bl	801a560 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a956:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 801a958:	88e3      	ldrh	r3, [r4, #6]
 801a95a:	f9bd 8000 	ldrsh.w	r8, [sp]
 801a95e:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 801a962:	440b      	add	r3, r1
 801a964:	b21b      	sxth	r3, r3
 801a966:	4543      	cmp	r3, r8
 801a968:	db31      	blt.n	801a9ce <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a96a:	f8bd c004 	ldrh.w	ip, [sp, #4]
 801a96e:	44c4      	add	ip, r8
 801a970:	fa0f fc8c 	sxth.w	ip, ip
 801a974:	4563      	cmp	r3, ip
 801a976:	da2a      	bge.n	801a9ce <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a978:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 801a97a:	8926      	ldrh	r6, [r4, #8]
 801a97c:	4416      	add	r6, r2
 801a97e:	b236      	sxth	r6, r6
 801a980:	42be      	cmp	r6, r7
 801a982:	db24      	blt.n	801a9ce <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a984:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 801a988:	4438      	add	r0, r7
 801a98a:	b200      	sxth	r0, r0
 801a98c:	4286      	cmp	r6, r0
 801a98e:	da1e      	bge.n	801a9ce <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a990:	8963      	ldrh	r3, [r4, #10]
 801a992:	4419      	add	r1, r3
 801a994:	b209      	sxth	r1, r1
 801a996:	4541      	cmp	r1, r8
 801a998:	db08      	blt.n	801a9ac <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801a99a:	4561      	cmp	r1, ip
 801a99c:	da06      	bge.n	801a9ac <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801a99e:	89a3      	ldrh	r3, [r4, #12]
 801a9a0:	441a      	add	r2, r3
 801a9a2:	b212      	sxth	r2, r2
 801a9a4:	42ba      	cmp	r2, r7
 801a9a6:	db01      	blt.n	801a9ac <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801a9a8:	4282      	cmp	r2, r0
 801a9aa:	db10      	blt.n	801a9ce <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a9ac:	4b21      	ldr	r3, [pc, #132]	; (801aa34 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801a9ae:	9304      	str	r3, [sp, #16]
 801a9b0:	2302      	movs	r3, #2
 801a9b2:	f88d 3014 	strb.w	r3, [sp, #20]
 801a9b6:	6b28      	ldr	r0, [r5, #48]	; 0x30
 801a9b8:	2300      	movs	r3, #0
 801a9ba:	f8ad 3016 	strh.w	r3, [sp, #22]
 801a9be:	f8ad 3018 	strh.w	r3, [sp, #24]
 801a9c2:	f8ad 301a 	strh.w	r3, [sp, #26]
 801a9c6:	6803      	ldr	r3, [r0, #0]
 801a9c8:	a904      	add	r1, sp, #16
 801a9ca:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801a9cc:	4798      	blx	r3
 801a9ce:	1d29      	adds	r1, r5, #4
 801a9d0:	a802      	add	r0, sp, #8
 801a9d2:	f7ff fdc5 	bl	801a560 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a9d6:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801a9da:	88e0      	ldrh	r0, [r4, #6]
 801a9dc:	7921      	ldrb	r1, [r4, #4]
 801a9de:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 801a9e2:	8922      	ldrh	r2, [r4, #8]
 801a9e4:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 801a9e6:	f88d 1014 	strb.w	r1, [sp, #20]
 801a9ea:	eba3 0808 	sub.w	r8, r3, r8
 801a9ee:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801a9f2:	1bdf      	subs	r7, r3, r7
 801a9f4:	b2bb      	uxth	r3, r7
 801a9f6:	fa1f f888 	uxth.w	r8, r8
 801a9fa:	8967      	ldrh	r7, [r4, #10]
 801a9fc:	89a4      	ldrh	r4, [r4, #12]
 801a9fe:	4440      	add	r0, r8
 801aa00:	4460      	add	r0, ip
 801aa02:	441a      	add	r2, r3
 801aa04:	44b8      	add	r8, r7
 801aa06:	4423      	add	r3, r4
 801aa08:	f8ad 0016 	strh.w	r0, [sp, #22]
 801aa0c:	4433      	add	r3, r6
 801aa0e:	4432      	add	r2, r6
 801aa10:	44e0      	add	r8, ip
 801aa12:	4c09      	ldr	r4, [pc, #36]	; (801aa38 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 801aa14:	6b28      	ldr	r0, [r5, #48]	; 0x30
 801aa16:	9404      	str	r4, [sp, #16]
 801aa18:	f8ad 2018 	strh.w	r2, [sp, #24]
 801aa1c:	f8ad 801a 	strh.w	r8, [sp, #26]
 801aa20:	f8ad 301c 	strh.w	r3, [sp, #28]
 801aa24:	6803      	ldr	r3, [r0, #0]
 801aa26:	a904      	add	r1, sp, #16
 801aa28:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801aa2a:	4798      	blx	r3
 801aa2c:	b008      	add	sp, #32
 801aa2e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801aa32:	bf00      	nop
 801aa34:	0802fa84 	.word	0x0802fa84
 801aa38:	0802fa98 	.word	0x0802fa98

0801aa3c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 801aa3c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801aa3e:	4604      	mov	r4, r0
 801aa40:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 801aa44:	3201      	adds	r2, #1
 801aa46:	d112      	bne.n	801aa6e <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 801aa48:	6803      	ldr	r3, [r0, #0]
 801aa4a:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801aa4e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801aa52:	f8ad 1004 	strh.w	r1, [sp, #4]
 801aa56:	2500      	movs	r5, #0
 801aa58:	9500      	str	r5, [sp, #0]
 801aa5a:	466d      	mov	r5, sp
 801aa5c:	4629      	mov	r1, r5
 801aa5e:	f8ad 2006 	strh.w	r2, [sp, #6]
 801aa62:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801aa64:	4798      	blx	r3
 801aa66:	e895 0003 	ldmia.w	r5, {r0, r1}
 801aa6a:	e884 0003 	stmia.w	r4, {r0, r1}
 801aa6e:	4620      	mov	r0, r4
 801aa70:	b003      	add	sp, #12
 801aa72:	bd30      	pop	{r4, r5, pc}

0801aa74 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 801aa74:	b513      	push	{r0, r1, r4, lr}
 801aa76:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 801aa7a:	3301      	adds	r3, #1
 801aa7c:	4604      	mov	r4, r0
 801aa7e:	d109      	bne.n	801aa94 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 801aa80:	4601      	mov	r1, r0
 801aa82:	4668      	mov	r0, sp
 801aa84:	f7ff fd6c 	bl	801a560 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801aa88:	f8bd 3000 	ldrh.w	r3, [sp]
 801aa8c:	8423      	strh	r3, [r4, #32]
 801aa8e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801aa92:	8463      	strh	r3, [r4, #34]	; 0x22
 801aa94:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 801aa98:	b002      	add	sp, #8
 801aa9a:	bd10      	pop	{r4, pc}

0801aa9c <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 801aa9c:	b513      	push	{r0, r1, r4, lr}
 801aa9e:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 801aaa2:	3301      	adds	r3, #1
 801aaa4:	4604      	mov	r4, r0
 801aaa6:	d109      	bne.n	801aabc <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 801aaa8:	4601      	mov	r1, r0
 801aaaa:	4668      	mov	r0, sp
 801aaac:	f7ff fd58 	bl	801a560 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801aab0:	f8bd 3000 	ldrh.w	r3, [sp]
 801aab4:	8423      	strh	r3, [r4, #32]
 801aab6:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801aaba:	8463      	strh	r3, [r4, #34]	; 0x22
 801aabc:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 801aac0:	b002      	add	sp, #8
 801aac2:	bd10      	pop	{r4, pc}

0801aac4 <_ZN8touchgfx6ScreenC1Ev>:
 801aac4:	b570      	push	{r4, r5, r6, lr}
 801aac6:	4605      	mov	r5, r0
 801aac8:	4b16      	ldr	r3, [pc, #88]	; (801ab24 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 801aaca:	f845 3b04 	str.w	r3, [r5], #4
 801aace:	2300      	movs	r3, #0
 801aad0:	8103      	strh	r3, [r0, #8]
 801aad2:	8143      	strh	r3, [r0, #10]
 801aad4:	8183      	strh	r3, [r0, #12]
 801aad6:	81c3      	strh	r3, [r0, #14]
 801aad8:	8203      	strh	r3, [r0, #16]
 801aada:	8243      	strh	r3, [r0, #18]
 801aadc:	8283      	strh	r3, [r0, #20]
 801aade:	82c3      	strh	r3, [r0, #22]
 801aae0:	e9c0 3306 	strd	r3, r3, [r0, #24]
 801aae4:	6203      	str	r3, [r0, #32]
 801aae6:	8483      	strh	r3, [r0, #36]	; 0x24
 801aae8:	84c3      	strh	r3, [r0, #38]	; 0x26
 801aaea:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 801aaee:	4a0e      	ldr	r2, [pc, #56]	; (801ab28 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 801aaf0:	6343      	str	r3, [r0, #52]	; 0x34
 801aaf2:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 801aaf6:	4b0d      	ldr	r3, [pc, #52]	; (801ab2c <_ZN8touchgfx6ScreenC1Ev+0x68>)
 801aaf8:	6042      	str	r2, [r0, #4]
 801aafa:	f9b3 6000 	ldrsh.w	r6, [r3]
 801aafe:	6b93      	ldr	r3, [r2, #56]	; 0x38
 801ab00:	4a0b      	ldr	r2, [pc, #44]	; (801ab30 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 801ab02:	4604      	mov	r4, r0
 801ab04:	2101      	movs	r1, #1
 801ab06:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 801ab0a:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 801ab0e:	f9b2 1000 	ldrsh.w	r1, [r2]
 801ab12:	4628      	mov	r0, r5
 801ab14:	4798      	blx	r3
 801ab16:	6863      	ldr	r3, [r4, #4]
 801ab18:	4628      	mov	r0, r5
 801ab1a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801ab1c:	4631      	mov	r1, r6
 801ab1e:	4798      	blx	r3
 801ab20:	4620      	mov	r0, r4
 801ab22:	bd70      	pop	{r4, r5, r6, pc}
 801ab24:	0802fac0 	.word	0x0802fac0
 801ab28:	0802ef4c 	.word	0x0802ef4c
 801ab2c:	20002242 	.word	0x20002242
 801ab30:	20002240 	.word	0x20002240

0801ab34 <_ZN8touchgfx6Screen4drawEv>:
 801ab34:	b507      	push	{r0, r1, r2, lr}
 801ab36:	4b09      	ldr	r3, [pc, #36]	; (801ab5c <_ZN8touchgfx6Screen4drawEv+0x28>)
 801ab38:	f9b3 2000 	ldrsh.w	r2, [r3]
 801ab3c:	4b08      	ldr	r3, [pc, #32]	; (801ab60 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801ab3e:	f8ad 2004 	strh.w	r2, [sp, #4]
 801ab42:	f9b3 3000 	ldrsh.w	r3, [r3]
 801ab46:	f8ad 3006 	strh.w	r3, [sp, #6]
 801ab4a:	6803      	ldr	r3, [r0, #0]
 801ab4c:	2100      	movs	r1, #0
 801ab4e:	9100      	str	r1, [sp, #0]
 801ab50:	689b      	ldr	r3, [r3, #8]
 801ab52:	4669      	mov	r1, sp
 801ab54:	4798      	blx	r3
 801ab56:	b003      	add	sp, #12
 801ab58:	f85d fb04 	ldr.w	pc, [sp], #4
 801ab5c:	20002240 	.word	0x20002240
 801ab60:	20002242 	.word	0x20002242

0801ab64 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 801ab64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ab68:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 801ab6c:	2b00      	cmp	r3, #0
 801ab6e:	b089      	sub	sp, #36	; 0x24
 801ab70:	4680      	mov	r8, r0
 801ab72:	460c      	mov	r4, r1
 801ab74:	4615      	mov	r5, r2
 801ab76:	dd0e      	ble.n	801ab96 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801ab78:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 801ab7c:	2b00      	cmp	r3, #0
 801ab7e:	dd0a      	ble.n	801ab96 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801ab80:	4628      	mov	r0, r5
 801ab82:	f7ff ff5b 	bl	801aa3c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801ab86:	4621      	mov	r1, r4
 801ab88:	f7fe fab0 	bl	80190ec <_ZNK8touchgfx4Rect9intersectERKS0_>
 801ab8c:	69eb      	ldr	r3, [r5, #28]
 801ab8e:	b928      	cbnz	r0, 801ab9c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801ab90:	461d      	mov	r5, r3
 801ab92:	2b00      	cmp	r3, #0
 801ab94:	d1f4      	bne.n	801ab80 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 801ab96:	b009      	add	sp, #36	; 0x24
 801ab98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ab9c:	ae04      	add	r6, sp, #16
 801ab9e:	2b00      	cmp	r3, #0
 801aba0:	f000 80b5 	beq.w	801ad0e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801aba4:	682b      	ldr	r3, [r5, #0]
 801aba6:	4629      	mov	r1, r5
 801aba8:	68db      	ldr	r3, [r3, #12]
 801abaa:	a802      	add	r0, sp, #8
 801abac:	4798      	blx	r3
 801abae:	4628      	mov	r0, r5
 801abb0:	f7ff ff60 	bl	801aa74 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801abb4:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 801abb8:	4407      	add	r7, r0
 801abba:	4628      	mov	r0, r5
 801abbc:	f7ff ff6e 	bl	801aa9c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801abc0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801abc4:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 801abc8:	f8ad 2014 	strh.w	r2, [sp, #20]
 801abcc:	4418      	add	r0, r3
 801abce:	4621      	mov	r1, r4
 801abd0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801abd4:	f8ad 0012 	strh.w	r0, [sp, #18]
 801abd8:	b23f      	sxth	r7, r7
 801abda:	4630      	mov	r0, r6
 801abdc:	f8ad 3016 	strh.w	r3, [sp, #22]
 801abe0:	f8ad 7010 	strh.w	r7, [sp, #16]
 801abe4:	f7f8 fb66 	bl	80132b4 <_ZN8touchgfx4RectaNERKS0_>
 801abe8:	4628      	mov	r0, r5
 801abea:	f7ff ff27 	bl	801aa3c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801abee:	4602      	mov	r2, r0
 801abf0:	e896 0003 	ldmia.w	r6, {r0, r1}
 801abf4:	ab06      	add	r3, sp, #24
 801abf6:	e883 0003 	stmia.w	r3, {r0, r1}
 801abfa:	4611      	mov	r1, r2
 801abfc:	4618      	mov	r0, r3
 801abfe:	f7f8 fb59 	bl	80132b4 <_ZN8touchgfx4RectaNERKS0_>
 801ac02:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801ac06:	f9b4 1000 	ldrsh.w	r1, [r4]
 801ac0a:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 801ac0e:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 801ac12:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 801ac16:	4299      	cmp	r1, r3
 801ac18:	d10b      	bne.n	801ac32 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801ac1a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801ac1e:	4552      	cmp	r2, sl
 801ac20:	d107      	bne.n	801ac32 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801ac22:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801ac26:	455a      	cmp	r2, fp
 801ac28:	d103      	bne.n	801ac32 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801ac2a:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801ac2e:	454a      	cmp	r2, r9
 801ac30:	d06d      	beq.n	801ad0e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801ac32:	f1bb 0f00 	cmp.w	fp, #0
 801ac36:	dd65      	ble.n	801ad04 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801ac38:	f1b9 0f00 	cmp.w	r9, #0
 801ac3c:	dd62      	ble.n	801ad04 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801ac3e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801ac42:	fa1f f08a 	uxth.w	r0, sl
 801ac46:	4552      	cmp	r2, sl
 801ac48:	9000      	str	r0, [sp, #0]
 801ac4a:	da12      	bge.n	801ac72 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 801ac4c:	9301      	str	r3, [sp, #4]
 801ac4e:	9b00      	ldr	r3, [sp, #0]
 801ac50:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801ac54:	f8ad 2012 	strh.w	r2, [sp, #18]
 801ac58:	1a9a      	subs	r2, r3, r2
 801ac5a:	f8ad 1010 	strh.w	r1, [sp, #16]
 801ac5e:	f8ad 0014 	strh.w	r0, [sp, #20]
 801ac62:	f8ad 2016 	strh.w	r2, [sp, #22]
 801ac66:	69ea      	ldr	r2, [r5, #28]
 801ac68:	4631      	mov	r1, r6
 801ac6a:	4640      	mov	r0, r8
 801ac6c:	f7ff ff7a 	bl	801ab64 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801ac70:	9b01      	ldr	r3, [sp, #4]
 801ac72:	f9b4 2000 	ldrsh.w	r2, [r4]
 801ac76:	429a      	cmp	r2, r3
 801ac78:	b29f      	uxth	r7, r3
 801ac7a:	da0d      	bge.n	801ac98 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 801ac7c:	f8ad 2010 	strh.w	r2, [sp, #16]
 801ac80:	1aba      	subs	r2, r7, r2
 801ac82:	f8ad a012 	strh.w	sl, [sp, #18]
 801ac86:	f8ad 2014 	strh.w	r2, [sp, #20]
 801ac8a:	f8ad 9016 	strh.w	r9, [sp, #22]
 801ac8e:	69ea      	ldr	r2, [r5, #28]
 801ac90:	4631      	mov	r1, r6
 801ac92:	4640      	mov	r0, r8
 801ac94:	f7ff ff66 	bl	801ab64 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801ac98:	8822      	ldrh	r2, [r4, #0]
 801ac9a:	88a3      	ldrh	r3, [r4, #4]
 801ac9c:	445f      	add	r7, fp
 801ac9e:	4413      	add	r3, r2
 801aca0:	b29b      	uxth	r3, r3
 801aca2:	b2bf      	uxth	r7, r7
 801aca4:	b23a      	sxth	r2, r7
 801aca6:	b219      	sxth	r1, r3
 801aca8:	4291      	cmp	r1, r2
 801acaa:	dd0d      	ble.n	801acc8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 801acac:	1bdb      	subs	r3, r3, r7
 801acae:	f8ad 2010 	strh.w	r2, [sp, #16]
 801acb2:	f8ad a012 	strh.w	sl, [sp, #18]
 801acb6:	f8ad 3014 	strh.w	r3, [sp, #20]
 801acba:	f8ad 9016 	strh.w	r9, [sp, #22]
 801acbe:	69ea      	ldr	r2, [r5, #28]
 801acc0:	4631      	mov	r1, r6
 801acc2:	4640      	mov	r0, r8
 801acc4:	f7ff ff4e 	bl	801ab64 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801acc8:	88e2      	ldrh	r2, [r4, #6]
 801acca:	8863      	ldrh	r3, [r4, #2]
 801accc:	4413      	add	r3, r2
 801acce:	9a00      	ldr	r2, [sp, #0]
 801acd0:	444a      	add	r2, r9
 801acd2:	b29b      	uxth	r3, r3
 801acd4:	fa1f f982 	uxth.w	r9, r2
 801acd8:	fa0f f289 	sxth.w	r2, r9
 801acdc:	b219      	sxth	r1, r3
 801acde:	428a      	cmp	r2, r1
 801ace0:	da15      	bge.n	801ad0e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801ace2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801ace6:	f9b4 0000 	ldrsh.w	r0, [r4]
 801acea:	f8ad 1014 	strh.w	r1, [sp, #20]
 801acee:	eba3 0309 	sub.w	r3, r3, r9
 801acf2:	f8ad 0010 	strh.w	r0, [sp, #16]
 801acf6:	f8ad 2012 	strh.w	r2, [sp, #18]
 801acfa:	f8ad 3016 	strh.w	r3, [sp, #22]
 801acfe:	69ea      	ldr	r2, [r5, #28]
 801ad00:	4631      	mov	r1, r6
 801ad02:	e001      	b.n	801ad08 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 801ad04:	69ea      	ldr	r2, [r5, #28]
 801ad06:	4621      	mov	r1, r4
 801ad08:	4640      	mov	r0, r8
 801ad0a:	f7ff ff2b 	bl	801ab64 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801ad0e:	4628      	mov	r0, r5
 801ad10:	f7ff fe94 	bl	801aa3c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801ad14:	6861      	ldr	r1, [r4, #4]
 801ad16:	4602      	mov	r2, r0
 801ad18:	6820      	ldr	r0, [r4, #0]
 801ad1a:	4633      	mov	r3, r6
 801ad1c:	c303      	stmia	r3!, {r0, r1}
 801ad1e:	4611      	mov	r1, r2
 801ad20:	4630      	mov	r0, r6
 801ad22:	f7f8 fac7 	bl	80132b4 <_ZN8touchgfx4RectaNERKS0_>
 801ad26:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801ad2a:	2b00      	cmp	r3, #0
 801ad2c:	f77f af33 	ble.w	801ab96 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801ad30:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801ad34:	2b00      	cmp	r3, #0
 801ad36:	f77f af2e 	ble.w	801ab96 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801ad3a:	4628      	mov	r0, r5
 801ad3c:	f7ff fe9a 	bl	801aa74 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801ad40:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 801ad44:	1a18      	subs	r0, r3, r0
 801ad46:	f8ad 0010 	strh.w	r0, [sp, #16]
 801ad4a:	4628      	mov	r0, r5
 801ad4c:	f7ff fea6 	bl	801aa9c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801ad50:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801ad54:	1a18      	subs	r0, r3, r0
 801ad56:	f8ad 0012 	strh.w	r0, [sp, #18]
 801ad5a:	682b      	ldr	r3, [r5, #0]
 801ad5c:	4631      	mov	r1, r6
 801ad5e:	689b      	ldr	r3, [r3, #8]
 801ad60:	4628      	mov	r0, r5
 801ad62:	4798      	blx	r3
 801ad64:	e717      	b.n	801ab96 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0801ad66 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 801ad66:	b570      	push	{r4, r5, r6, lr}
 801ad68:	460c      	mov	r4, r1
 801ad6a:	b086      	sub	sp, #24
 801ad6c:	1d06      	adds	r6, r0, #4
 801ad6e:	2300      	movs	r3, #0
 801ad70:	4631      	mov	r1, r6
 801ad72:	4605      	mov	r5, r0
 801ad74:	a802      	add	r0, sp, #8
 801ad76:	9301      	str	r3, [sp, #4]
 801ad78:	f7ff fbf2 	bl	801a560 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801ad7c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801ad80:	8822      	ldrh	r2, [r4, #0]
 801ad82:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 801ad86:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801ad8a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801ad8e:	1ad2      	subs	r2, r2, r3
 801ad90:	8863      	ldrh	r3, [r4, #2]
 801ad92:	f8ad 2010 	strh.w	r2, [sp, #16]
 801ad96:	1a5b      	subs	r3, r3, r1
 801ad98:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 801ad9c:	f8ad 1016 	strh.w	r1, [sp, #22]
 801ada0:	aa01      	add	r2, sp, #4
 801ada2:	a904      	add	r1, sp, #16
 801ada4:	4630      	mov	r0, r6
 801ada6:	f8ad 3012 	strh.w	r3, [sp, #18]
 801adaa:	f7f8 fb5b 	bl	8013464 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801adae:	9a01      	ldr	r2, [sp, #4]
 801adb0:	b11a      	cbz	r2, 801adba <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801adb2:	4621      	mov	r1, r4
 801adb4:	4628      	mov	r0, r5
 801adb6:	f7ff fed5 	bl	801ab64 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801adba:	b006      	add	sp, #24
 801adbc:	bd70      	pop	{r4, r5, r6, pc}

0801adbe <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801adbe:	b530      	push	{r4, r5, lr}
 801adc0:	4602      	mov	r2, r0
 801adc2:	4604      	mov	r4, r0
 801adc4:	f852 0f08 	ldr.w	r0, [r2, #8]!
 801adc8:	b085      	sub	sp, #20
 801adca:	460d      	mov	r5, r1
 801adcc:	6851      	ldr	r1, [r2, #4]
 801adce:	466b      	mov	r3, sp
 801add0:	c303      	stmia	r3!, {r0, r1}
 801add2:	4629      	mov	r1, r5
 801add4:	4668      	mov	r0, sp
 801add6:	f7f8 fa6d 	bl	80132b4 <_ZN8touchgfx4RectaNERKS0_>
 801adda:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801adde:	b12b      	cbz	r3, 801adec <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 801ade0:	4669      	mov	r1, sp
 801ade2:	4620      	mov	r0, r4
 801ade4:	f7ff ffbf 	bl	801ad66 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 801ade8:	b005      	add	sp, #20
 801adea:	bd30      	pop	{r4, r5, pc}
 801adec:	3404      	adds	r4, #4
 801adee:	4621      	mov	r1, r4
 801adf0:	a802      	add	r0, sp, #8
 801adf2:	f7ff fbb5 	bl	801a560 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801adf6:	f8bd 3000 	ldrh.w	r3, [sp]
 801adfa:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 801adfe:	1a9b      	subs	r3, r3, r2
 801ae00:	f8ad 3000 	strh.w	r3, [sp]
 801ae04:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801ae08:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801ae0c:	4669      	mov	r1, sp
 801ae0e:	1a9b      	subs	r3, r3, r2
 801ae10:	4620      	mov	r0, r4
 801ae12:	f8ad 3002 	strh.w	r3, [sp, #2]
 801ae16:	f7f8 faec 	bl	80133f2 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 801ae1a:	e7e5      	b.n	801ade8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0801ae1c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 801ae1c:	680a      	ldr	r2, [r1, #0]
 801ae1e:	460b      	mov	r3, r1
 801ae20:	6992      	ldr	r2, [r2, #24]
 801ae22:	1d01      	adds	r1, r0, #4
 801ae24:	4618      	mov	r0, r3
 801ae26:	4710      	bx	r2

0801ae28 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 801ae28:	4298      	cmp	r0, r3
 801ae2a:	d200      	bcs.n	801ae2e <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 801ae2c:	b913      	cbnz	r3, 801ae34 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 801ae2e:	440a      	add	r2, r1
 801ae30:	b210      	sxth	r0, r2
 801ae32:	4770      	bx	lr
 801ae34:	ee07 0a90 	vmov	s15, r0
 801ae38:	eef8 6a67 	vcvt.f32.u32	s13, s15
 801ae3c:	ee07 3a90 	vmov	s15, r3
 801ae40:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801ae44:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 801ae48:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ae4c:	ee37 7a66 	vsub.f32	s14, s14, s13
 801ae50:	ee07 2a90 	vmov	s15, r2
 801ae54:	ee67 5a07 	vmul.f32	s11, s14, s14
 801ae58:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 801ae5c:	eee5 6a87 	vfma.f32	s13, s11, s14
 801ae60:	ee07 1a90 	vmov	s15, r1
 801ae64:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801ae68:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 801ae6c:	eee6 7a26 	vfma.f32	s15, s12, s13
 801ae70:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801ae74:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae78:	bfcc      	ite	gt
 801ae7a:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801ae7e:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801ae82:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801ae86:	ee17 3a90 	vmov	r3, s15
 801ae8a:	b218      	sxth	r0, r3
 801ae8c:	4770      	bx	lr

0801ae8e <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 801ae8e:	4298      	cmp	r0, r3
 801ae90:	d200      	bcs.n	801ae94 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 801ae92:	b913      	cbnz	r3, 801ae9a <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 801ae94:	440a      	add	r2, r1
 801ae96:	b210      	sxth	r0, r2
 801ae98:	4770      	bx	lr
 801ae9a:	ee07 2a90 	vmov	s15, r2
 801ae9e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 801aea2:	ee07 0a90 	vmov	s15, r0
 801aea6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 801aeaa:	ee67 7a27 	vmul.f32	s15, s14, s15
 801aeae:	ee07 3a10 	vmov	s14, r3
 801aeb2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801aeb6:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801aeba:	ee07 1a90 	vmov	s15, r1
 801aebe:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801aec2:	ee77 7a27 	vadd.f32	s15, s14, s15
 801aec6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 801aeca:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801aece:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aed2:	bfcc      	ite	gt
 801aed4:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801aed8:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801aedc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801aee0:	ee17 3a90 	vmov	r3, s15
 801aee4:	b218      	sxth	r0, r3
 801aee6:	4770      	bx	lr

0801aee8 <_ZN8touchgfx12TextProviderC1Ev>:
 801aee8:	b538      	push	{r3, r4, r5, lr}
 801aeea:	2500      	movs	r5, #0
 801aeec:	2302      	movs	r3, #2
 801aeee:	4604      	mov	r4, r0
 801aef0:	e9c0 5500 	strd	r5, r5, [r0]
 801aef4:	7403      	strb	r3, [r0, #16]
 801aef6:	6145      	str	r5, [r0, #20]
 801aef8:	7605      	strb	r5, [r0, #24]
 801aefa:	83c5      	strh	r5, [r0, #30]
 801aefc:	8405      	strh	r5, [r0, #32]
 801aefe:	86c5      	strh	r5, [r0, #54]	; 0x36
 801af00:	8705      	strh	r5, [r0, #56]	; 0x38
 801af02:	87c5      	strh	r5, [r0, #62]	; 0x3e
 801af04:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 801af08:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 801af0c:	220e      	movs	r2, #14
 801af0e:	4629      	mov	r1, r5
 801af10:	304c      	adds	r0, #76	; 0x4c
 801af12:	f010 fc1c 	bl	802b74e <memset>
 801af16:	2301      	movs	r3, #1
 801af18:	4620      	mov	r0, r4
 801af1a:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 801af1e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801af22:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 801af26:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 801af2a:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 801af2e:	f7f5 f821 	bl	800ff74 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 801af32:	4620      	mov	r0, r4
 801af34:	bd38      	pop	{r3, r4, r5, pc}

0801af36 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 801af36:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801af38:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801af3c:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 801af3e:	fab0 f080 	clz	r0, r0
 801af42:	0940      	lsrs	r0, r0, #5
 801af44:	4770      	bx	lr

0801af46 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 801af46:	b530      	push	{r4, r5, lr}
 801af48:	2500      	movs	r5, #0
 801af4a:	2401      	movs	r4, #1
 801af4c:	6843      	ldr	r3, [r0, #4]
 801af4e:	b913      	cbnz	r3, 801af56 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 801af50:	6803      	ldr	r3, [r0, #0]
 801af52:	b313      	cbz	r3, 801af9a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801af54:	6043      	str	r3, [r0, #4]
 801af56:	7e03      	ldrb	r3, [r0, #24]
 801af58:	b143      	cbz	r3, 801af6c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 801af5a:	6943      	ldr	r3, [r0, #20]
 801af5c:	b12b      	cbz	r3, 801af6a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801af5e:	881a      	ldrh	r2, [r3, #0]
 801af60:	b11a      	cbz	r2, 801af6a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801af62:	1c9a      	adds	r2, r3, #2
 801af64:	6142      	str	r2, [r0, #20]
 801af66:	8818      	ldrh	r0, [r3, #0]
 801af68:	bd30      	pop	{r4, r5, pc}
 801af6a:	7605      	strb	r5, [r0, #24]
 801af6c:	6843      	ldr	r3, [r0, #4]
 801af6e:	8819      	ldrh	r1, [r3, #0]
 801af70:	b199      	cbz	r1, 801af9a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801af72:	1c9a      	adds	r2, r3, #2
 801af74:	2902      	cmp	r1, #2
 801af76:	6042      	str	r2, [r0, #4]
 801af78:	d1f5      	bne.n	801af66 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 801af7a:	7c03      	ldrb	r3, [r0, #16]
 801af7c:	2b01      	cmp	r3, #1
 801af7e:	d8e5      	bhi.n	801af4c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801af80:	1c5a      	adds	r2, r3, #1
 801af82:	3302      	adds	r3, #2
 801af84:	7402      	strb	r2, [r0, #16]
 801af86:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 801af8a:	6143      	str	r3, [r0, #20]
 801af8c:	2b00      	cmp	r3, #0
 801af8e:	d0dd      	beq.n	801af4c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801af90:	881b      	ldrh	r3, [r3, #0]
 801af92:	2b00      	cmp	r3, #0
 801af94:	d0da      	beq.n	801af4c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801af96:	7604      	strb	r4, [r0, #24]
 801af98:	e7d8      	b.n	801af4c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801af9a:	2000      	movs	r0, #0
 801af9c:	e7e4      	b.n	801af68 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0801af9e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 801af9e:	b430      	push	{r4, r5}
 801afa0:	6001      	str	r1, [r0, #0]
 801afa2:	2100      	movs	r1, #0
 801afa4:	6041      	str	r1, [r0, #4]
 801afa6:	6815      	ldr	r5, [r2, #0]
 801afa8:	6085      	str	r5, [r0, #8]
 801afaa:	6852      	ldr	r2, [r2, #4]
 801afac:	6443      	str	r3, [r0, #68]	; 0x44
 801afae:	9b02      	ldr	r3, [sp, #8]
 801afb0:	60c2      	str	r2, [r0, #12]
 801afb2:	7401      	strb	r1, [r0, #16]
 801afb4:	6141      	str	r1, [r0, #20]
 801afb6:	7601      	strb	r1, [r0, #24]
 801afb8:	8701      	strh	r1, [r0, #56]	; 0x38
 801afba:	8401      	strh	r1, [r0, #32]
 801afbc:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 801afc0:	6483      	str	r3, [r0, #72]	; 0x48
 801afc2:	bc30      	pop	{r4, r5}
 801afc4:	f7f4 bfd6 	b.w	800ff74 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0801afc8 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 801afc8:	b408      	push	{r3}
 801afca:	b510      	push	{r4, lr}
 801afcc:	b085      	sub	sp, #20
 801afce:	ac07      	add	r4, sp, #28
 801afd0:	f854 3b04 	ldr.w	r3, [r4], #4
 801afd4:	9300      	str	r3, [sp, #0]
 801afd6:	4613      	mov	r3, r2
 801afd8:	4622      	mov	r2, r4
 801afda:	9403      	str	r4, [sp, #12]
 801afdc:	f7ff ffdf 	bl	801af9e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801afe0:	b005      	add	sp, #20
 801afe2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801afe6:	b001      	add	sp, #4
 801afe8:	4770      	bx	lr

0801afea <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 801afea:	b5f0      	push	{r4, r5, r6, r7, lr}
 801afec:	4605      	mov	r5, r0
 801afee:	4608      	mov	r0, r1
 801aff0:	b1e9      	cbz	r1, 801b02e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 801aff2:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 801aff6:	460b      	mov	r3, r1
 801aff8:	f101 0708 	add.w	r7, r1, #8
 801affc:	4622      	mov	r2, r4
 801affe:	6818      	ldr	r0, [r3, #0]
 801b000:	6859      	ldr	r1, [r3, #4]
 801b002:	4626      	mov	r6, r4
 801b004:	c603      	stmia	r6!, {r0, r1}
 801b006:	3308      	adds	r3, #8
 801b008:	42bb      	cmp	r3, r7
 801b00a:	4634      	mov	r4, r6
 801b00c:	d1f7      	bne.n	801affe <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 801b00e:	6818      	ldr	r0, [r3, #0]
 801b010:	6030      	str	r0, [r6, #0]
 801b012:	889b      	ldrh	r3, [r3, #4]
 801b014:	80b3      	strh	r3, [r6, #4]
 801b016:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 801b01a:	015b      	lsls	r3, r3, #5
 801b01c:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801b020:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 801b024:	430b      	orrs	r3, r1
 801b026:	425b      	negs	r3, r3
 801b028:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 801b02c:	4610      	mov	r0, r2
 801b02e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801b030 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 801b030:	b538      	push	{r3, r4, r5, lr}
 801b032:	460c      	mov	r4, r1
 801b034:	6811      	ldr	r1, [r2, #0]
 801b036:	4610      	mov	r0, r2
 801b038:	68cd      	ldr	r5, [r1, #12]
 801b03a:	4619      	mov	r1, r3
 801b03c:	47a8      	blx	r5
 801b03e:	2800      	cmp	r0, #0
 801b040:	bf08      	it	eq
 801b042:	4620      	moveq	r0, r4
 801b044:	bd38      	pop	{r3, r4, r5, pc}
	...

0801b048 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 801b048:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801b04a:	4604      	mov	r4, r0
 801b04c:	4615      	mov	r5, r2
 801b04e:	4608      	mov	r0, r1
 801b050:	b93a      	cbnz	r2, 801b062 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 801b052:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 801b056:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 801b05a:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 801b05e:	4628      	mov	r0, r5
 801b060:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801b062:	f892 c00d 	ldrb.w	ip, [r2, #13]
 801b066:	8893      	ldrh	r3, [r2, #4]
 801b068:	ea4f 160c 	mov.w	r6, ip, lsl #4
 801b06c:	f406 7280 	and.w	r2, r6, #256	; 0x100
 801b070:	79ee      	ldrb	r6, [r5, #7]
 801b072:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 801b076:	4316      	orrs	r6, r2
 801b078:	19da      	adds	r2, r3, r7
 801b07a:	b291      	uxth	r1, r2
 801b07c:	291d      	cmp	r1, #29
 801b07e:	b2b7      	uxth	r7, r6
 801b080:	d87a      	bhi.n	801b178 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 801b082:	2201      	movs	r2, #1
 801b084:	408a      	lsls	r2, r1
 801b086:	4975      	ldr	r1, [pc, #468]	; (801b25c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 801b088:	420a      	tst	r2, r1
 801b08a:	ea4f 06e6 	mov.w	r6, r6, asr #3
 801b08e:	d12d      	bne.n	801b0ec <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 801b090:	f412 7f60 	tst.w	r2, #896	; 0x380
 801b094:	d070      	beq.n	801b178 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 801b096:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 801b09a:	462b      	mov	r3, r5
 801b09c:	f105 0e08 	add.w	lr, r5, #8
 801b0a0:	4615      	mov	r5, r2
 801b0a2:	6818      	ldr	r0, [r3, #0]
 801b0a4:	6859      	ldr	r1, [r3, #4]
 801b0a6:	4694      	mov	ip, r2
 801b0a8:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801b0ac:	3308      	adds	r3, #8
 801b0ae:	4573      	cmp	r3, lr
 801b0b0:	4662      	mov	r2, ip
 801b0b2:	d1f6      	bne.n	801b0a2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 801b0b4:	6818      	ldr	r0, [r3, #0]
 801b0b6:	f8cc 0000 	str.w	r0, [ip]
 801b0ba:	889b      	ldrh	r3, [r3, #4]
 801b0bc:	f8ac 3004 	strh.w	r3, [ip, #4]
 801b0c0:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 801b0c4:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 801b0c8:	b2b3      	uxth	r3, r6
 801b0ca:	1aca      	subs	r2, r1, r3
 801b0cc:	b292      	uxth	r2, r2
 801b0ce:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 801b0d2:	10d2      	asrs	r2, r2, #3
 801b0d4:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 801b0d8:	f002 0260 	and.w	r2, r2, #96	; 0x60
 801b0dc:	4302      	orrs	r2, r0
 801b0de:	1bcf      	subs	r7, r1, r7
 801b0e0:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 801b0e4:	1afb      	subs	r3, r7, r3
 801b0e6:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 801b0ea:	e7b8      	b.n	801b05e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 801b0ec:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801b0ee:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b0f2:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 801b0f4:	f640 6333 	movw	r3, #3635	; 0xe33
 801b0f8:	4299      	cmp	r1, r3
 801b0fa:	d110      	bne.n	801b11e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 801b0fc:	6803      	ldr	r3, [r0, #0]
 801b0fe:	68db      	ldr	r3, [r3, #12]
 801b100:	4798      	blx	r3
 801b102:	7b41      	ldrb	r1, [r0, #13]
 801b104:	00cb      	lsls	r3, r1, #3
 801b106:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801b10a:	7a03      	ldrb	r3, [r0, #8]
 801b10c:	0648      	lsls	r0, r1, #25
 801b10e:	ea43 0302 	orr.w	r3, r3, r2
 801b112:	bf44      	itt	mi
 801b114:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801b118:	b21b      	sxthmi	r3, r3
 801b11a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801b11e:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 801b122:	443b      	add	r3, r7
 801b124:	4433      	add	r3, r6
 801b126:	b29b      	uxth	r3, r3
 801b128:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 801b12c:	462a      	mov	r2, r5
 801b12e:	f105 0c08 	add.w	ip, r5, #8
 801b132:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801b136:	4635      	mov	r5, r6
 801b138:	6810      	ldr	r0, [r2, #0]
 801b13a:	6851      	ldr	r1, [r2, #4]
 801b13c:	4637      	mov	r7, r6
 801b13e:	c703      	stmia	r7!, {r0, r1}
 801b140:	3208      	adds	r2, #8
 801b142:	4562      	cmp	r2, ip
 801b144:	463e      	mov	r6, r7
 801b146:	d1f7      	bne.n	801b138 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 801b148:	6810      	ldr	r0, [r2, #0]
 801b14a:	6038      	str	r0, [r7, #0]
 801b14c:	8892      	ldrh	r2, [r2, #4]
 801b14e:	80ba      	strh	r2, [r7, #4]
 801b150:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801b154:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801b158:	10db      	asrs	r3, r3, #3
 801b15a:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801b15e:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801b162:	4313      	orrs	r3, r2
 801b164:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801b168:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 801b16c:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 801b170:	1a9b      	subs	r3, r3, r2
 801b172:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 801b176:	e772      	b.n	801b05e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 801b178:	f023 0204 	bic.w	r2, r3, #4
 801b17c:	f640 611b 	movw	r1, #3611	; 0xe1b
 801b180:	428a      	cmp	r2, r1
 801b182:	d003      	beq.n	801b18c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 801b184:	f640 621d 	movw	r2, #3613	; 0xe1d
 801b188:	4293      	cmp	r3, r2
 801b18a:	d120      	bne.n	801b1ce <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 801b18c:	3b01      	subs	r3, #1
 801b18e:	4602      	mov	r2, r0
 801b190:	b29b      	uxth	r3, r3
 801b192:	4629      	mov	r1, r5
 801b194:	4620      	mov	r0, r4
 801b196:	f7ff ff4b 	bl	801b030 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801b19a:	7b41      	ldrb	r1, [r0, #13]
 801b19c:	00cb      	lsls	r3, r1, #3
 801b19e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801b1a2:	7a03      	ldrb	r3, [r0, #8]
 801b1a4:	0649      	lsls	r1, r1, #25
 801b1a6:	ea43 0302 	orr.w	r3, r3, r2
 801b1aa:	bf44      	itt	mi
 801b1ac:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801b1b0:	b21b      	sxthmi	r3, r3
 801b1b2:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801b1b6:	7b6b      	ldrb	r3, [r5, #13]
 801b1b8:	7aaa      	ldrb	r2, [r5, #10]
 801b1ba:	005b      	lsls	r3, r3, #1
 801b1bc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801b1c0:	4313      	orrs	r3, r2
 801b1c2:	115a      	asrs	r2, r3, #5
 801b1c4:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 801b1c8:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 801b1cc:	e036      	b.n	801b23c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 801b1ce:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 801b1d2:	f402 7180 	and.w	r1, r2, #256	; 0x100
 801b1d6:	7a2a      	ldrb	r2, [r5, #8]
 801b1d8:	f01c 0f40 	tst.w	ip, #64	; 0x40
 801b1dc:	ea42 0201 	orr.w	r2, r2, r1
 801b1e0:	bf1c      	itt	ne
 801b1e2:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 801b1e6:	b212      	sxthne	r2, r2
 801b1e8:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 801b1ec:	f640 6109 	movw	r1, #3593	; 0xe09
 801b1f0:	f023 0210 	bic.w	r2, r3, #16
 801b1f4:	428a      	cmp	r2, r1
 801b1f6:	d003      	beq.n	801b200 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 801b1f8:	f640 6213 	movw	r2, #3603	; 0xe13
 801b1fc:	4293      	cmp	r3, r2
 801b1fe:	d12a      	bne.n	801b256 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 801b200:	7b6e      	ldrb	r6, [r5, #13]
 801b202:	0076      	lsls	r6, r6, #1
 801b204:	f406 7280 	and.w	r2, r6, #256	; 0x100
 801b208:	7aae      	ldrb	r6, [r5, #10]
 801b20a:	4316      	orrs	r6, r2
 801b20c:	f640 6213 	movw	r2, #3603	; 0xe13
 801b210:	4293      	cmp	r3, r2
 801b212:	bf18      	it	ne
 801b214:	f103 33ff 	addne.w	r3, r3, #4294967295
 801b218:	4602      	mov	r2, r0
 801b21a:	bf14      	ite	ne
 801b21c:	b29b      	uxthne	r3, r3
 801b21e:	f640 630c 	movweq	r3, #3596	; 0xe0c
 801b222:	4629      	mov	r1, r5
 801b224:	4620      	mov	r0, r4
 801b226:	f7ff ff03 	bl	801b030 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801b22a:	7b43      	ldrb	r3, [r0, #13]
 801b22c:	7a82      	ldrb	r2, [r0, #10]
 801b22e:	005b      	lsls	r3, r3, #1
 801b230:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801b234:	4313      	orrs	r3, r2
 801b236:	1af6      	subs	r6, r6, r3
 801b238:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 801b23c:	7b69      	ldrb	r1, [r5, #13]
 801b23e:	00cb      	lsls	r3, r1, #3
 801b240:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801b244:	7a2b      	ldrb	r3, [r5, #8]
 801b246:	4313      	orrs	r3, r2
 801b248:	064a      	lsls	r2, r1, #25
 801b24a:	bf44      	itt	mi
 801b24c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801b250:	b21b      	sxthmi	r3, r3
 801b252:	1bdb      	subs	r3, r3, r7
 801b254:	e747      	b.n	801b0e6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 801b256:	2300      	movs	r3, #0
 801b258:	e7b6      	b.n	801b1c8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 801b25a:	bf00      	nop
 801b25c:	3fc00079 	.word	0x3fc00079

0801b260 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 801b260:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801b264:	4604      	mov	r4, r0
 801b266:	b942      	cbnz	r2, 801b27a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 801b268:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801b26c:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 801b270:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 801b274:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 801b278:	e047      	b.n	801b30a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801b27a:	7b51      	ldrb	r1, [r2, #13]
 801b27c:	8893      	ldrh	r3, [r2, #4]
 801b27e:	010d      	lsls	r5, r1, #4
 801b280:	f405 7080 	and.w	r0, r5, #256	; 0x100
 801b284:	79d5      	ldrb	r5, [r2, #7]
 801b286:	4305      	orrs	r5, r0
 801b288:	2d04      	cmp	r5, #4
 801b28a:	bfcc      	ite	gt
 801b28c:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 801b290:	f04f 0e01 	movle.w	lr, #1
 801b294:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 801b298:	f200 80ab 	bhi.w	801b3f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 801b29c:	f240 60e7 	movw	r0, #1767	; 0x6e7
 801b2a0:	4283      	cmp	r3, r0
 801b2a2:	d216      	bcs.n	801b2d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801b2a4:	f240 605b 	movw	r0, #1627	; 0x65b
 801b2a8:	4283      	cmp	r3, r0
 801b2aa:	d859      	bhi.n	801b360 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 801b2ac:	f240 6057 	movw	r0, #1623	; 0x657
 801b2b0:	4283      	cmp	r3, r0
 801b2b2:	d20e      	bcs.n	801b2d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801b2b4:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 801b2b8:	d24a      	bcs.n	801b350 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 801b2ba:	f240 604e 	movw	r0, #1614	; 0x64e
 801b2be:	4283      	cmp	r3, r0
 801b2c0:	d207      	bcs.n	801b2d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801b2c2:	f240 601a 	movw	r0, #1562	; 0x61a
 801b2c6:	4283      	cmp	r3, r0
 801b2c8:	d02a      	beq.n	801b320 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801b2ca:	d821      	bhi.n	801b310 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 801b2cc:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 801b2d0:	d35b      	bcc.n	801b38a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801b2d2:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 801b2d6:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801b2da:	f040 80d0 	bne.w	801b47e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801b2de:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 801b2e2:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801b2e6:	f040 80ca 	bne.w	801b47e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801b2ea:	00cb      	lsls	r3, r1, #3
 801b2ec:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801b2f0:	7a13      	ldrb	r3, [r2, #8]
 801b2f2:	0649      	lsls	r1, r1, #25
 801b2f4:	ea43 0300 	orr.w	r3, r3, r0
 801b2f8:	bf44      	itt	mi
 801b2fa:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801b2fe:	b21b      	sxthmi	r3, r3
 801b300:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801b304:	1b5d      	subs	r5, r3, r5
 801b306:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801b30a:	4610      	mov	r0, r2
 801b30c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801b310:	f240 604b 	movw	r0, #1611	; 0x64b
 801b314:	4283      	cmp	r3, r0
 801b316:	d338      	bcc.n	801b38a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801b318:	f240 604c 	movw	r0, #1612	; 0x64c
 801b31c:	4283      	cmp	r3, r0
 801b31e:	d9d8      	bls.n	801b2d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801b320:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 801b324:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 801b328:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801b32c:	f040 80f2 	bne.w	801b514 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 801b330:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801b334:	f040 80ee 	bne.w	801b514 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 801b338:	00cb      	lsls	r3, r1, #3
 801b33a:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801b33e:	7a13      	ldrb	r3, [r2, #8]
 801b340:	064e      	lsls	r6, r1, #25
 801b342:	ea43 0300 	orr.w	r3, r3, r0
 801b346:	bf44      	itt	mi
 801b348:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801b34c:	b21b      	sxthmi	r3, r3
 801b34e:	e7d9      	b.n	801b304 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 801b350:	f240 6054 	movw	r0, #1620	; 0x654
 801b354:	4283      	cmp	r3, r0
 801b356:	d8e3      	bhi.n	801b320 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801b358:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 801b35c:	d9e0      	bls.n	801b320 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801b35e:	e7b8      	b.n	801b2d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801b360:	f240 6074 	movw	r0, #1652	; 0x674
 801b364:	4283      	cmp	r3, r0
 801b366:	d0b4      	beq.n	801b2d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801b368:	d82d      	bhi.n	801b3c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 801b36a:	f240 605e 	movw	r0, #1630	; 0x65e
 801b36e:	4283      	cmp	r3, r0
 801b370:	d804      	bhi.n	801b37c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 801b372:	f240 605d 	movw	r0, #1629	; 0x65d
 801b376:	4283      	cmp	r3, r0
 801b378:	d3d2      	bcc.n	801b320 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801b37a:	e7aa      	b.n	801b2d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801b37c:	f240 605f 	movw	r0, #1631	; 0x65f
 801b380:	4283      	cmp	r3, r0
 801b382:	d0cd      	beq.n	801b320 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801b384:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 801b388:	d0a3      	beq.n	801b2d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801b38a:	00cb      	lsls	r3, r1, #3
 801b38c:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801b390:	7a13      	ldrb	r3, [r2, #8]
 801b392:	0649      	lsls	r1, r1, #25
 801b394:	ea43 0300 	orr.w	r3, r3, r0
 801b398:	bf44      	itt	mi
 801b39a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801b39e:	b21b      	sxthmi	r3, r3
 801b3a0:	1b5d      	subs	r5, r3, r5
 801b3a2:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801b3a6:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801b3aa:	7b53      	ldrb	r3, [r2, #13]
 801b3ac:	015b      	lsls	r3, r3, #5
 801b3ae:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801b3b2:	7993      	ldrb	r3, [r2, #6]
 801b3b4:	430b      	orrs	r3, r1
 801b3b6:	005b      	lsls	r3, r3, #1
 801b3b8:	2105      	movs	r1, #5
 801b3ba:	fb93 f3f1 	sdiv	r3, r3, r1
 801b3be:	f992 1009 	ldrsb.w	r1, [r2, #9]
 801b3c2:	440b      	add	r3, r1
 801b3c4:	e756      	b.n	801b274 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 801b3c6:	f240 60e2 	movw	r0, #1762	; 0x6e2
 801b3ca:	4283      	cmp	r3, r0
 801b3cc:	d809      	bhi.n	801b3e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 801b3ce:	f240 60df 	movw	r0, #1759	; 0x6df
 801b3d2:	4283      	cmp	r3, r0
 801b3d4:	f4bf af7d 	bcs.w	801b2d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801b3d8:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 801b3dc:	2b05      	cmp	r3, #5
 801b3de:	d8d4      	bhi.n	801b38a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801b3e0:	e777      	b.n	801b2d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801b3e2:	f240 60e3 	movw	r0, #1763	; 0x6e3
 801b3e6:	4283      	cmp	r3, r0
 801b3e8:	d09a      	beq.n	801b320 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801b3ea:	f240 60e4 	movw	r0, #1764	; 0x6e4
 801b3ee:	4283      	cmp	r3, r0
 801b3f0:	e7ca      	b.n	801b388 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801b3f2:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 801b3f6:	d22b      	bcs.n	801b450 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 801b3f8:	f640 00ed 	movw	r0, #2285	; 0x8ed
 801b3fc:	4283      	cmp	r3, r0
 801b3fe:	d28f      	bcs.n	801b320 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801b400:	f640 00e5 	movw	r0, #2277	; 0x8e5
 801b404:	4283      	cmp	r3, r0
 801b406:	d816      	bhi.n	801b436 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 801b408:	f640 00e4 	movw	r0, #2276	; 0x8e4
 801b40c:	4283      	cmp	r3, r0
 801b40e:	f4bf af60 	bcs.w	801b2d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801b412:	f240 60ec 	movw	r0, #1772	; 0x6ec
 801b416:	4283      	cmp	r3, r0
 801b418:	d80a      	bhi.n	801b430 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 801b41a:	f240 60eb 	movw	r0, #1771	; 0x6eb
 801b41e:	4283      	cmp	r3, r0
 801b420:	f4bf af57 	bcs.w	801b2d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801b424:	f240 60ea 	movw	r0, #1770	; 0x6ea
 801b428:	4283      	cmp	r3, r0
 801b42a:	f43f af79 	beq.w	801b320 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801b42e:	e7ac      	b.n	801b38a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801b430:	f240 60ed 	movw	r0, #1773	; 0x6ed
 801b434:	e7f8      	b.n	801b428 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 801b436:	f640 00e8 	movw	r0, #2280	; 0x8e8
 801b43a:	4283      	cmp	r3, r0
 801b43c:	d802      	bhi.n	801b444 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 801b43e:	f640 00e7 	movw	r0, #2279	; 0x8e7
 801b442:	e798      	b.n	801b376 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 801b444:	f640 00e9 	movw	r0, #2281	; 0x8e9
 801b448:	4283      	cmp	r3, r0
 801b44a:	f47f af42 	bne.w	801b2d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801b44e:	e767      	b.n	801b320 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801b450:	f640 00f6 	movw	r0, #2294	; 0x8f6
 801b454:	4283      	cmp	r3, r0
 801b456:	f43f af63 	beq.w	801b320 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801b45a:	d802      	bhi.n	801b462 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 801b45c:	f640 00f2 	movw	r0, #2290	; 0x8f2
 801b460:	e7f2      	b.n	801b448 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 801b462:	f640 00fa 	movw	r0, #2298	; 0x8fa
 801b466:	4283      	cmp	r3, r0
 801b468:	d805      	bhi.n	801b476 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 801b46a:	f640 00f9 	movw	r0, #2297	; 0x8f9
 801b46e:	4283      	cmp	r3, r0
 801b470:	f4ff af2f 	bcc.w	801b2d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801b474:	e754      	b.n	801b320 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801b476:	f640 00fe 	movw	r0, #2302	; 0x8fe
 801b47a:	4283      	cmp	r3, r0
 801b47c:	e7af      	b.n	801b3de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 801b47e:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801b482:	4617      	mov	r7, r2
 801b484:	f102 0808 	add.w	r8, r2, #8
 801b488:	4666      	mov	r6, ip
 801b48a:	6838      	ldr	r0, [r7, #0]
 801b48c:	6879      	ldr	r1, [r7, #4]
 801b48e:	46e6      	mov	lr, ip
 801b490:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 801b494:	3708      	adds	r7, #8
 801b496:	4547      	cmp	r7, r8
 801b498:	46f4      	mov	ip, lr
 801b49a:	d1f6      	bne.n	801b48a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 801b49c:	6838      	ldr	r0, [r7, #0]
 801b49e:	f8ce 0000 	str.w	r0, [lr]
 801b4a2:	88b9      	ldrh	r1, [r7, #4]
 801b4a4:	f8ae 1004 	strh.w	r1, [lr, #4]
 801b4a8:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801b4ac:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801b4b0:	d009      	beq.n	801b4c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 801b4b2:	7b51      	ldrb	r1, [r2, #13]
 801b4b4:	7992      	ldrb	r2, [r2, #6]
 801b4b6:	0149      	lsls	r1, r1, #5
 801b4b8:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801b4bc:	4311      	orrs	r1, r2
 801b4be:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801b4c2:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801b4c6:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801b4ca:	b2ad      	uxth	r5, r5
 801b4cc:	d00d      	beq.n	801b4ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 801b4ce:	442b      	add	r3, r5
 801b4d0:	b29b      	uxth	r3, r3
 801b4d2:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801b4d6:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801b4da:	10db      	asrs	r3, r3, #3
 801b4dc:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801b4e0:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801b4e4:	4313      	orrs	r3, r2
 801b4e6:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801b4ea:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801b4ee:	00cb      	lsls	r3, r1, #3
 801b4f0:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801b4f4:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801b4f8:	064f      	lsls	r7, r1, #25
 801b4fa:	ea43 0302 	orr.w	r3, r3, r2
 801b4fe:	bf44      	itt	mi
 801b500:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801b504:	b21b      	sxthmi	r3, r3
 801b506:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801b50a:	1b5b      	subs	r3, r3, r5
 801b50c:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 801b510:	4632      	mov	r2, r6
 801b512:	e6fa      	b.n	801b30a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801b514:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801b518:	4617      	mov	r7, r2
 801b51a:	f102 0908 	add.w	r9, r2, #8
 801b51e:	4666      	mov	r6, ip
 801b520:	6838      	ldr	r0, [r7, #0]
 801b522:	6879      	ldr	r1, [r7, #4]
 801b524:	46e0      	mov	r8, ip
 801b526:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 801b52a:	3708      	adds	r7, #8
 801b52c:	454f      	cmp	r7, r9
 801b52e:	46c4      	mov	ip, r8
 801b530:	d1f6      	bne.n	801b520 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 801b532:	6838      	ldr	r0, [r7, #0]
 801b534:	f8c8 0000 	str.w	r0, [r8]
 801b538:	88b9      	ldrh	r1, [r7, #4]
 801b53a:	f8a8 1004 	strh.w	r1, [r8, #4]
 801b53e:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801b542:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801b546:	d009      	beq.n	801b55c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 801b548:	7b51      	ldrb	r1, [r2, #13]
 801b54a:	7992      	ldrb	r2, [r2, #6]
 801b54c:	0149      	lsls	r1, r1, #5
 801b54e:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801b552:	4311      	orrs	r1, r2
 801b554:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801b558:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801b55c:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801b560:	d00e      	beq.n	801b580 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 801b562:	eba3 030e 	sub.w	r3, r3, lr
 801b566:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801b56a:	b29b      	uxth	r3, r3
 801b56c:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801b570:	10db      	asrs	r3, r3, #3
 801b572:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801b576:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801b57a:	4313      	orrs	r3, r2
 801b57c:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801b580:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801b584:	00cb      	lsls	r3, r1, #3
 801b586:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801b58a:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801b58e:	0648      	lsls	r0, r1, #25
 801b590:	ea43 0302 	orr.w	r3, r3, r2
 801b594:	bf44      	itt	mi
 801b596:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801b59a:	b21b      	sxthmi	r3, r3
 801b59c:	1b5d      	subs	r5, r3, r5
 801b59e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801b5a2:	e7b5      	b.n	801b510 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

0801b5a4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 801b5a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801b5a8:	461e      	mov	r6, r3
 801b5aa:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801b5ac:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b5b0:	4604      	mov	r4, r0
 801b5b2:	4617      	mov	r7, r2
 801b5b4:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801b5b8:	f7f4 fc36 	bl	800fe28 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801b5bc:	4605      	mov	r5, r0
 801b5be:	b918      	cbnz	r0, 801b5c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 801b5c0:	6030      	str	r0, [r6, #0]
 801b5c2:	4628      	mov	r0, r5
 801b5c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801b5c8:	683b      	ldr	r3, [r7, #0]
 801b5ca:	4601      	mov	r1, r0
 801b5cc:	68db      	ldr	r3, [r3, #12]
 801b5ce:	4638      	mov	r0, r7
 801b5d0:	4798      	blx	r3
 801b5d2:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801b5d6:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801b5da:	4602      	mov	r2, r0
 801b5dc:	6030      	str	r0, [r6, #0]
 801b5de:	d213      	bcs.n	801b608 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 801b5e0:	4643      	mov	r3, r8
 801b5e2:	4639      	mov	r1, r7
 801b5e4:	4620      	mov	r0, r4
 801b5e6:	f7ff fe3b 	bl	801b260 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801b5ea:	6030      	str	r0, [r6, #0]
 801b5ec:	6833      	ldr	r3, [r6, #0]
 801b5ee:	b143      	cbz	r3, 801b602 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 801b5f0:	7b5a      	ldrb	r2, [r3, #13]
 801b5f2:	7a9b      	ldrb	r3, [r3, #10]
 801b5f4:	0052      	lsls	r2, r2, #1
 801b5f6:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801b5fa:	4313      	orrs	r3, r2
 801b5fc:	bf0c      	ite	eq
 801b5fe:	2301      	moveq	r3, #1
 801b600:	2300      	movne	r3, #0
 801b602:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801b606:	e7dc      	b.n	801b5c2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 801b608:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 801b60c:	b29b      	uxth	r3, r3
 801b60e:	2b7f      	cmp	r3, #127	; 0x7f
 801b610:	d804      	bhi.n	801b61c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 801b612:	4639      	mov	r1, r7
 801b614:	4620      	mov	r0, r4
 801b616:	f7ff fd17 	bl	801b048 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801b61a:	e7e6      	b.n	801b5ea <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 801b61c:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801b620:	2b00      	cmp	r3, #0
 801b622:	d0e3      	beq.n	801b5ec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 801b624:	f640 1302 	movw	r3, #2306	; 0x902
 801b628:	429d      	cmp	r5, r3
 801b62a:	d1df      	bne.n	801b5ec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 801b62c:	4601      	mov	r1, r0
 801b62e:	4620      	mov	r0, r4
 801b630:	f7ff fcdb 	bl	801afea <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801b634:	e7d9      	b.n	801b5ea <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0801b636 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 801b636:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801b63a:	461e      	mov	r6, r3
 801b63c:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801b63e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b642:	4604      	mov	r4, r0
 801b644:	4617      	mov	r7, r2
 801b646:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801b64a:	f7f4 fbed 	bl	800fe28 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801b64e:	4605      	mov	r5, r0
 801b650:	b918      	cbnz	r0, 801b65a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 801b652:	6030      	str	r0, [r6, #0]
 801b654:	4628      	mov	r0, r5
 801b656:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801b65a:	683b      	ldr	r3, [r7, #0]
 801b65c:	4601      	mov	r1, r0
 801b65e:	f8d3 9008 	ldr.w	r9, [r3, #8]
 801b662:	4638      	mov	r0, r7
 801b664:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 801b668:	47c8      	blx	r9
 801b66a:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801b66e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801b672:	4602      	mov	r2, r0
 801b674:	6030      	str	r0, [r6, #0]
 801b676:	d213      	bcs.n	801b6a0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 801b678:	4643      	mov	r3, r8
 801b67a:	4639      	mov	r1, r7
 801b67c:	4620      	mov	r0, r4
 801b67e:	f7ff fdef 	bl	801b260 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801b682:	6030      	str	r0, [r6, #0]
 801b684:	6833      	ldr	r3, [r6, #0]
 801b686:	b143      	cbz	r3, 801b69a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 801b688:	7b5a      	ldrb	r2, [r3, #13]
 801b68a:	7a9b      	ldrb	r3, [r3, #10]
 801b68c:	0052      	lsls	r2, r2, #1
 801b68e:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801b692:	4313      	orrs	r3, r2
 801b694:	bf0c      	ite	eq
 801b696:	2301      	moveq	r3, #1
 801b698:	2300      	movne	r3, #0
 801b69a:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801b69e:	e7d9      	b.n	801b654 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 801b6a0:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 801b6a4:	b29b      	uxth	r3, r3
 801b6a6:	2b7f      	cmp	r3, #127	; 0x7f
 801b6a8:	d804      	bhi.n	801b6b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 801b6aa:	4639      	mov	r1, r7
 801b6ac:	4620      	mov	r0, r4
 801b6ae:	f7ff fccb 	bl	801b048 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801b6b2:	e7e6      	b.n	801b682 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 801b6b4:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801b6b8:	2b00      	cmp	r3, #0
 801b6ba:	d0e3      	beq.n	801b684 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 801b6bc:	f640 1302 	movw	r3, #2306	; 0x902
 801b6c0:	429d      	cmp	r5, r3
 801b6c2:	d1df      	bne.n	801b684 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 801b6c4:	4601      	mov	r1, r0
 801b6c6:	4620      	mov	r0, r4
 801b6c8:	f7ff fc8f 	bl	801afea <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801b6cc:	e7d9      	b.n	801b682 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0801b6ce <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801b6ce:	b510      	push	{r4, lr}
 801b6d0:	4604      	mov	r4, r0
 801b6d2:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 801b6d6:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801b6d8:	b1f1      	cbz	r1, 801b718 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801b6da:	2b0a      	cmp	r3, #10
 801b6dc:	d02f      	beq.n	801b73e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801b6de:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 801b6e0:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 801b6e4:	3901      	subs	r1, #1
 801b6e6:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 801b6e8:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 801b6ec:	1c51      	adds	r1, r2, #1
 801b6ee:	b289      	uxth	r1, r1
 801b6f0:	2901      	cmp	r1, #1
 801b6f2:	bf84      	itt	hi
 801b6f4:	f102 32ff 	addhi.w	r2, r2, #4294967295
 801b6f8:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 801b6fa:	f103 0201 	add.w	r2, r3, #1
 801b6fe:	8722      	strh	r2, [r4, #56]	; 0x38
 801b700:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801b702:	bf98      	it	ls
 801b704:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 801b706:	4413      	add	r3, r2
 801b708:	b29b      	uxth	r3, r3
 801b70a:	2b09      	cmp	r3, #9
 801b70c:	bf88      	it	hi
 801b70e:	3b0a      	subhi	r3, #10
 801b710:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b714:	8458      	strh	r0, [r3, #34]	; 0x22
 801b716:	e7dc      	b.n	801b6d2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 801b718:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801b71a:	2b0a      	cmp	r3, #10
 801b71c:	d00f      	beq.n	801b73e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801b71e:	4620      	mov	r0, r4
 801b720:	f7ff fc11 	bl	801af46 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 801b724:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801b726:	1c5a      	adds	r2, r3, #1
 801b728:	8722      	strh	r2, [r4, #56]	; 0x38
 801b72a:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801b72c:	4413      	add	r3, r2
 801b72e:	b29b      	uxth	r3, r3
 801b730:	2b09      	cmp	r3, #9
 801b732:	bf88      	it	hi
 801b734:	3b0a      	subhi	r3, #10
 801b736:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b73a:	8458      	strh	r0, [r3, #34]	; 0x22
 801b73c:	e7ec      	b.n	801b718 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801b73e:	bd10      	pop	{r4, pc}

0801b740 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 801b740:	b538      	push	{r3, r4, r5, lr}
 801b742:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801b744:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 801b748:	4604      	mov	r4, r0
 801b74a:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 801b74c:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 801b74e:	3a01      	subs	r2, #1
 801b750:	8702      	strh	r2, [r0, #56]	; 0x38
 801b752:	1c5a      	adds	r2, r3, #1
 801b754:	b292      	uxth	r2, r2
 801b756:	2a09      	cmp	r2, #9
 801b758:	bf86      	itte	hi
 801b75a:	3b09      	subhi	r3, #9
 801b75c:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 801b75e:	86c2      	strhls	r2, [r0, #54]	; 0x36
 801b760:	f7ff ffb5 	bl	801b6ce <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 801b764:	8c23      	ldrh	r3, [r4, #32]
 801b766:	2b01      	cmp	r3, #1
 801b768:	bf9c      	itt	ls
 801b76a:	3301      	addls	r3, #1
 801b76c:	8423      	strhls	r3, [r4, #32]
 801b76e:	8be3      	ldrh	r3, [r4, #30]
 801b770:	b90b      	cbnz	r3, 801b776 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 801b772:	2302      	movs	r3, #2
 801b774:	83e3      	strh	r3, [r4, #30]
 801b776:	8be3      	ldrh	r3, [r4, #30]
 801b778:	3b01      	subs	r3, #1
 801b77a:	b29b      	uxth	r3, r3
 801b77c:	83e3      	strh	r3, [r4, #30]
 801b77e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b782:	4628      	mov	r0, r5
 801b784:	8365      	strh	r5, [r4, #26]
 801b786:	bd38      	pop	{r3, r4, r5, pc}

0801b788 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 801b788:	428a      	cmp	r2, r1
 801b78a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b78e:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 801b790:	d931      	bls.n	801b7f6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 801b792:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 801b794:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 801b798:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 801b79c:	19ee      	adds	r6, r5, r7
 801b79e:	1a54      	subs	r4, r2, r1
 801b7a0:	3e01      	subs	r6, #1
 801b7a2:	fa1f fe84 	uxth.w	lr, r4
 801b7a6:	b2b4      	uxth	r4, r6
 801b7a8:	eba4 090e 	sub.w	r9, r4, lr
 801b7ac:	fa1f f989 	uxth.w	r9, r9
 801b7b0:	2c09      	cmp	r4, #9
 801b7b2:	4626      	mov	r6, r4
 801b7b4:	bf88      	it	hi
 801b7b6:	f1a4 060a 	subhi.w	r6, r4, #10
 801b7ba:	f1bc 0f00 	cmp.w	ip, #0
 801b7be:	bf08      	it	eq
 801b7c0:	f04f 0c02 	moveq.w	ip, #2
 801b7c4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801b7c8:	f10c 3cff 	add.w	ip, ip, #4294967295
 801b7cc:	fa1f fc8c 	uxth.w	ip, ip
 801b7d0:	3c01      	subs	r4, #1
 801b7d2:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 801b7d6:	b2a4      	uxth	r4, r4
 801b7d8:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 801b7dc:	454c      	cmp	r4, r9
 801b7de:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 801b7e2:	d1e5      	bne.n	801b7b0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 801b7e4:	eba5 050e 	sub.w	r5, r5, lr
 801b7e8:	eb0e 0408 	add.w	r4, lr, r8
 801b7ec:	8705      	strh	r5, [r0, #56]	; 0x38
 801b7ee:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 801b7f2:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 801b7f6:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 801b7f8:	1a64      	subs	r4, r4, r1
 801b7fa:	4439      	add	r1, r7
 801b7fc:	b289      	uxth	r1, r1
 801b7fe:	2909      	cmp	r1, #9
 801b800:	bf88      	it	hi
 801b802:	390a      	subhi	r1, #10
 801b804:	8704      	strh	r4, [r0, #56]	; 0x38
 801b806:	86c1      	strh	r1, [r0, #54]	; 0x36
 801b808:	250a      	movs	r5, #10
 801b80a:	b18a      	cbz	r2, 801b830 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 801b80c:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 801b80e:	3a01      	subs	r2, #1
 801b810:	b292      	uxth	r2, r2
 801b812:	3101      	adds	r1, #1
 801b814:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 801b818:	8701      	strh	r1, [r0, #56]	; 0x38
 801b81a:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801b81c:	b901      	cbnz	r1, 801b820 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 801b81e:	86c5      	strh	r5, [r0, #54]	; 0x36
 801b820:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801b822:	3901      	subs	r1, #1
 801b824:	b289      	uxth	r1, r1
 801b826:	86c1      	strh	r1, [r0, #54]	; 0x36
 801b828:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 801b82c:	844c      	strh	r4, [r1, #34]	; 0x22
 801b82e:	e7ec      	b.n	801b80a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 801b830:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b834:	f7ff bf4b 	b.w	801b6ce <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0801b838 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 801b838:	b570      	push	{r4, r5, r6, lr}
 801b83a:	2500      	movs	r5, #0
 801b83c:	4295      	cmp	r5, r2
 801b83e:	d011      	beq.n	801b864 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 801b840:	8bc4      	ldrh	r4, [r0, #30]
 801b842:	f831 6b02 	ldrh.w	r6, [r1], #2
 801b846:	4414      	add	r4, r2
 801b848:	3c01      	subs	r4, #1
 801b84a:	1b64      	subs	r4, r4, r5
 801b84c:	b2a4      	uxth	r4, r4
 801b84e:	2c01      	cmp	r4, #1
 801b850:	bf88      	it	hi
 801b852:	3c02      	subhi	r4, #2
 801b854:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801b858:	8b64      	ldrh	r4, [r4, #26]
 801b85a:	42b4      	cmp	r4, r6
 801b85c:	d117      	bne.n	801b88e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 801b85e:	3501      	adds	r5, #1
 801b860:	b2ad      	uxth	r5, r5
 801b862:	e7eb      	b.n	801b83c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 801b864:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b868:	2400      	movs	r4, #0
 801b86a:	4413      	add	r3, r2
 801b86c:	b2a2      	uxth	r2, r4
 801b86e:	429a      	cmp	r2, r3
 801b870:	da0f      	bge.n	801b892 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 801b872:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 801b874:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 801b878:	4432      	add	r2, r6
 801b87a:	b292      	uxth	r2, r2
 801b87c:	2a09      	cmp	r2, #9
 801b87e:	bf88      	it	hi
 801b880:	3a0a      	subhi	r2, #10
 801b882:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801b886:	3401      	adds	r4, #1
 801b888:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 801b88a:	42aa      	cmp	r2, r5
 801b88c:	d0ee      	beq.n	801b86c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 801b88e:	2000      	movs	r0, #0
 801b890:	bd70      	pop	{r4, r5, r6, pc}
 801b892:	2001      	movs	r0, #1
 801b894:	e7fc      	b.n	801b890 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0801b896 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 801b896:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b89a:	4605      	mov	r5, r0
 801b89c:	4616      	mov	r6, r2
 801b89e:	1c8c      	adds	r4, r1, #2
 801b8a0:	8809      	ldrh	r1, [r1, #0]
 801b8a2:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 801b8a6:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 801b8aa:	42b3      	cmp	r3, r6
 801b8ac:	d124      	bne.n	801b8f8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 801b8ae:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801b8b2:	f3c1 1803 	ubfx	r8, r1, #4, #4
 801b8b6:	f001 070f 	and.w	r7, r1, #15
 801b8ba:	f8cd 8000 	str.w	r8, [sp]
 801b8be:	464b      	mov	r3, r9
 801b8c0:	4652      	mov	r2, sl
 801b8c2:	4621      	mov	r1, r4
 801b8c4:	4628      	mov	r0, r5
 801b8c6:	f7ff ffb7 	bl	801b838 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 801b8ca:	4683      	mov	fp, r0
 801b8cc:	b168      	cbz	r0, 801b8ea <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 801b8ce:	eb0a 0109 	add.w	r1, sl, r9
 801b8d2:	4441      	add	r1, r8
 801b8d4:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 801b8d8:	463a      	mov	r2, r7
 801b8da:	4649      	mov	r1, r9
 801b8dc:	4628      	mov	r0, r5
 801b8de:	f7ff ff53 	bl	801b788 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801b8e2:	4658      	mov	r0, fp
 801b8e4:	b003      	add	sp, #12
 801b8e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b8ea:	eb07 010a 	add.w	r1, r7, sl
 801b8ee:	4449      	add	r1, r9
 801b8f0:	4441      	add	r1, r8
 801b8f2:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 801b8f6:	e7d2      	b.n	801b89e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 801b8f8:	f04f 0b00 	mov.w	fp, #0
 801b8fc:	e7f1      	b.n	801b8e2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801b8fe <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801b8fe:	b570      	push	{r4, r5, r6, lr}
 801b900:	8810      	ldrh	r0, [r2, #0]
 801b902:	4298      	cmp	r0, r3
 801b904:	d817      	bhi.n	801b936 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801b906:	1e48      	subs	r0, r1, #1
 801b908:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 801b90c:	4298      	cmp	r0, r3
 801b90e:	d312      	bcc.n	801b936 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801b910:	2400      	movs	r4, #0
 801b912:	428c      	cmp	r4, r1
 801b914:	d20f      	bcs.n	801b936 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801b916:	1860      	adds	r0, r4, r1
 801b918:	1040      	asrs	r0, r0, #1
 801b91a:	0085      	lsls	r5, r0, #2
 801b91c:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 801b920:	42b3      	cmp	r3, r6
 801b922:	d902      	bls.n	801b92a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 801b924:	3001      	adds	r0, #1
 801b926:	b284      	uxth	r4, r0
 801b928:	e7f3      	b.n	801b912 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801b92a:	d201      	bcs.n	801b930 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 801b92c:	b281      	uxth	r1, r0
 801b92e:	e7f0      	b.n	801b912 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801b930:	442a      	add	r2, r5
 801b932:	8850      	ldrh	r0, [r2, #2]
 801b934:	bd70      	pop	{r4, r5, r6, pc}
 801b936:	2000      	movs	r0, #0
 801b938:	e7fc      	b.n	801b934 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0801b93a <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 801b93a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801b93e:	6c45      	ldr	r5, [r0, #68]	; 0x44
 801b940:	886f      	ldrh	r7, [r5, #2]
 801b942:	4604      	mov	r4, r0
 801b944:	087f      	lsrs	r7, r7, #1
 801b946:	260b      	movs	r6, #11
 801b948:	3e01      	subs	r6, #1
 801b94a:	d013      	beq.n	801b974 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801b94c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801b94e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b952:	462a      	mov	r2, r5
 801b954:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801b958:	4639      	mov	r1, r7
 801b95a:	4643      	mov	r3, r8
 801b95c:	4620      	mov	r0, r4
 801b95e:	f7ff ffce 	bl	801b8fe <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 801b962:	b138      	cbz	r0, 801b974 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801b964:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 801b968:	4642      	mov	r2, r8
 801b96a:	4620      	mov	r0, r4
 801b96c:	f7ff ff93 	bl	801b896 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 801b970:	2800      	cmp	r0, #0
 801b972:	d1e9      	bne.n	801b948 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 801b974:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801b978 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 801b978:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b97a:	b08d      	sub	sp, #52	; 0x34
 801b97c:	2300      	movs	r3, #0
 801b97e:	9304      	str	r3, [sp, #16]
 801b980:	9305      	str	r3, [sp, #20]
 801b982:	9306      	str	r3, [sp, #24]
 801b984:	aa04      	add	r2, sp, #16
 801b986:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 801b98a:	9307      	str	r3, [sp, #28]
 801b98c:	f100 0640 	add.w	r6, r0, #64	; 0x40
 801b990:	4613      	mov	r3, r2
 801b992:	f101 0710 	add.w	r7, r1, #16
 801b996:	eddf 7a0f 	vldr	s15, [pc, #60]	; 801b9d4 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 801b99a:	460c      	mov	r4, r1
 801b99c:	4605      	mov	r5, r0
 801b99e:	ecb4 7a01 	vldmia	r4!, {s14}
 801b9a2:	ecf5 6a01 	vldmia	r5!, {s13}
 801b9a6:	42bc      	cmp	r4, r7
 801b9a8:	eee6 7a87 	vfma.f32	s15, s13, s14
 801b9ac:	d1f7      	bne.n	801b99e <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 801b9ae:	3010      	adds	r0, #16
 801b9b0:	42b0      	cmp	r0, r6
 801b9b2:	ece2 7a01 	vstmia	r2!, {s15}
 801b9b6:	d1ee      	bne.n	801b996 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 801b9b8:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 801b9ba:	ac0c      	add	r4, sp, #48	; 0x30
 801b9bc:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 801b9c0:	ed9d 0a08 	vldr	s0, [sp, #32]
 801b9c4:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 801b9c8:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 801b9cc:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 801b9d0:	b00d      	add	sp, #52	; 0x34
 801b9d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801b9d4:	00000000 	.word	0x00000000

0801b9d8 <_ZN8touchgfx9Matrix4x4C1Ev>:
 801b9d8:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 801ba08 <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 801b9dc:	2300      	movs	r3, #0
 801b9de:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 801b9e2:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 801b9e6:	2200      	movs	r2, #0
 801b9e8:	4293      	cmp	r3, r2
 801b9ea:	f102 0201 	add.w	r2, r2, #1
 801b9ee:	bf14      	ite	ne
 801b9f0:	eef0 6a47 	vmovne.f32	s13, s14
 801b9f4:	eef0 6a67 	vmoveq.f32	s13, s15
 801b9f8:	2a04      	cmp	r2, #4
 801b9fa:	ece1 6a01 	vstmia	r1!, {s13}
 801b9fe:	d1f3      	bne.n	801b9e8 <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 801ba00:	3301      	adds	r3, #1
 801ba02:	2b04      	cmp	r3, #4
 801ba04:	d1ed      	bne.n	801b9e2 <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 801ba06:	4770      	bx	lr
 801ba08:	00000000 	.word	0x00000000

0801ba0c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 801ba0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801ba10:	460c      	mov	r4, r1
 801ba12:	4605      	mov	r5, r0
 801ba14:	4690      	mov	r8, r2
 801ba16:	f7ff ffdf 	bl	801b9d8 <_ZN8touchgfx9Matrix4x4C1Ev>
 801ba1a:	4628      	mov	r0, r5
 801ba1c:	4621      	mov	r1, r4
 801ba1e:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 801ba22:	2300      	movs	r3, #0
 801ba24:	eddf 7a0f 	vldr	s15, [pc, #60]	; 801ba64 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 801ba28:	eb08 0603 	add.w	r6, r8, r3
 801ba2c:	460f      	mov	r7, r1
 801ba2e:	2400      	movs	r4, #0
 801ba30:	4632      	mov	r2, r6
 801ba32:	ecf7 6a01 	vldmia	r7!, {s13}
 801ba36:	ed92 7a00 	vldr	s14, [r2]
 801ba3a:	3401      	adds	r4, #1
 801ba3c:	2c04      	cmp	r4, #4
 801ba3e:	f106 0610 	add.w	r6, r6, #16
 801ba42:	eee6 7a87 	vfma.f32	s15, s13, s14
 801ba46:	d1f3      	bne.n	801ba30 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 801ba48:	18c2      	adds	r2, r0, r3
 801ba4a:	3304      	adds	r3, #4
 801ba4c:	2b10      	cmp	r3, #16
 801ba4e:	edc2 7a00 	vstr	s15, [r2]
 801ba52:	d1e7      	bne.n	801ba24 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 801ba54:	3110      	adds	r1, #16
 801ba56:	4561      	cmp	r1, ip
 801ba58:	f100 0010 	add.w	r0, r0, #16
 801ba5c:	d1e1      	bne.n	801ba22 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 801ba5e:	4628      	mov	r0, r5
 801ba60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801ba64:	00000000 	.word	0x00000000

0801ba68 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 801ba68:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 801ba6c:	ee87 0a80 	vdiv.f32	s0, s15, s0
 801ba70:	f100 0320 	add.w	r3, r0, #32
 801ba74:	3030      	adds	r0, #48	; 0x30
 801ba76:	ecf3 7a01 	vldmia	r3!, {s15}
 801ba7a:	ee60 7a27 	vmul.f32	s15, s0, s15
 801ba7e:	4283      	cmp	r3, r0
 801ba80:	edc3 7a03 	vstr	s15, [r3, #12]
 801ba84:	d1f7      	bne.n	801ba76 <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 801ba86:	4770      	bx	lr

0801ba88 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 801ba88:	b510      	push	{r4, lr}
 801ba8a:	ed2d 8b02 	vpush	{d8}
 801ba8e:	4604      	mov	r4, r0
 801ba90:	eef0 8a40 	vmov.f32	s17, s0
 801ba94:	f00e fed2 	bl	802a83c <sinf>
 801ba98:	eeb0 8a40 	vmov.f32	s16, s0
 801ba9c:	eeb0 0a68 	vmov.f32	s0, s17
 801baa0:	f00e fe88 	bl	802a7b4 <cosf>
 801baa4:	f104 0310 	add.w	r3, r4, #16
 801baa8:	f104 0220 	add.w	r2, r4, #32
 801baac:	eeb1 6a48 	vneg.f32	s12, s16
 801bab0:	edd3 7a04 	vldr	s15, [r3, #16]
 801bab4:	edd3 6a00 	vldr	s13, [r3]
 801bab8:	ee26 7a27 	vmul.f32	s14, s12, s15
 801babc:	ee67 7a80 	vmul.f32	s15, s15, s0
 801bac0:	eea6 7a80 	vfma.f32	s14, s13, s0
 801bac4:	eee6 7a88 	vfma.f32	s15, s13, s16
 801bac8:	eca3 7a01 	vstmia	r3!, {s14}
 801bacc:	429a      	cmp	r2, r3
 801bace:	edc3 7a03 	vstr	s15, [r3, #12]
 801bad2:	d1ed      	bne.n	801bab0 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 801bad4:	ecbd 8b02 	vpop	{d8}
 801bad8:	4620      	mov	r0, r4
 801bada:	bd10      	pop	{r4, pc}

0801badc <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 801badc:	b510      	push	{r4, lr}
 801bade:	ed2d 8b02 	vpush	{d8}
 801bae2:	4604      	mov	r4, r0
 801bae4:	eef0 8a40 	vmov.f32	s17, s0
 801bae8:	f00e fea8 	bl	802a83c <sinf>
 801baec:	eeb0 8a40 	vmov.f32	s16, s0
 801baf0:	eeb0 0a68 	vmov.f32	s0, s17
 801baf4:	f00e fe5e 	bl	802a7b4 <cosf>
 801baf8:	4623      	mov	r3, r4
 801bafa:	f104 0210 	add.w	r2, r4, #16
 801bafe:	eeb1 6a48 	vneg.f32	s12, s16
 801bb02:	edd3 7a08 	vldr	s15, [r3, #32]
 801bb06:	edd3 6a00 	vldr	s13, [r3]
 801bb0a:	ee27 7a88 	vmul.f32	s14, s15, s16
 801bb0e:	ee67 7a80 	vmul.f32	s15, s15, s0
 801bb12:	eea6 7a80 	vfma.f32	s14, s13, s0
 801bb16:	eee6 7a26 	vfma.f32	s15, s12, s13
 801bb1a:	eca3 7a01 	vstmia	r3!, {s14}
 801bb1e:	429a      	cmp	r2, r3
 801bb20:	edc3 7a07 	vstr	s15, [r3, #28]
 801bb24:	d1ed      	bne.n	801bb02 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 801bb26:	ecbd 8b02 	vpop	{d8}
 801bb2a:	4620      	mov	r0, r4
 801bb2c:	bd10      	pop	{r4, pc}

0801bb2e <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 801bb2e:	b510      	push	{r4, lr}
 801bb30:	ed2d 8b02 	vpush	{d8}
 801bb34:	4604      	mov	r4, r0
 801bb36:	eef0 8a40 	vmov.f32	s17, s0
 801bb3a:	f00e fe7f 	bl	802a83c <sinf>
 801bb3e:	eeb0 8a40 	vmov.f32	s16, s0
 801bb42:	eeb0 0a68 	vmov.f32	s0, s17
 801bb46:	f00e fe35 	bl	802a7b4 <cosf>
 801bb4a:	4623      	mov	r3, r4
 801bb4c:	f104 0210 	add.w	r2, r4, #16
 801bb50:	eeb1 6a48 	vneg.f32	s12, s16
 801bb54:	edd3 7a04 	vldr	s15, [r3, #16]
 801bb58:	edd3 6a00 	vldr	s13, [r3]
 801bb5c:	ee26 7a27 	vmul.f32	s14, s12, s15
 801bb60:	ee67 7a80 	vmul.f32	s15, s15, s0
 801bb64:	eea6 7a80 	vfma.f32	s14, s13, s0
 801bb68:	eee6 7a88 	vfma.f32	s15, s13, s16
 801bb6c:	eca3 7a01 	vstmia	r3!, {s14}
 801bb70:	429a      	cmp	r2, r3
 801bb72:	edc3 7a03 	vstr	s15, [r3, #12]
 801bb76:	d1ed      	bne.n	801bb54 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 801bb78:	ecbd 8b02 	vpop	{d8}
 801bb7c:	4620      	mov	r0, r4
 801bb7e:	bd10      	pop	{r4, pc}

0801bb80 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 801bb80:	4603      	mov	r3, r0
 801bb82:	f100 0210 	add.w	r2, r0, #16
 801bb86:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 801bb8a:	edd3 7a00 	vldr	s15, [r3]
 801bb8e:	eee7 7a00 	vfma.f32	s15, s14, s0
 801bb92:	ece3 7a01 	vstmia	r3!, {s15}
 801bb96:	4293      	cmp	r3, r2
 801bb98:	d1f5      	bne.n	801bb86 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 801bb9a:	4770      	bx	lr

0801bb9c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 801bb9c:	f100 0310 	add.w	r3, r0, #16
 801bba0:	f100 0220 	add.w	r2, r0, #32
 801bba4:	ed93 7a08 	vldr	s14, [r3, #32]
 801bba8:	edd3 7a00 	vldr	s15, [r3]
 801bbac:	eee7 7a00 	vfma.f32	s15, s14, s0
 801bbb0:	ece3 7a01 	vstmia	r3!, {s15}
 801bbb4:	4293      	cmp	r3, r2
 801bbb6:	d1f5      	bne.n	801bba4 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 801bbb8:	4770      	bx	lr

0801bbba <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 801bbba:	f100 0320 	add.w	r3, r0, #32
 801bbbe:	f100 0230 	add.w	r2, r0, #48	; 0x30
 801bbc2:	ed93 7a04 	vldr	s14, [r3, #16]
 801bbc6:	edd3 7a00 	vldr	s15, [r3]
 801bbca:	eee7 7a00 	vfma.f32	s15, s14, s0
 801bbce:	ece3 7a01 	vstmia	r3!, {s15}
 801bbd2:	4293      	cmp	r3, r2
 801bbd4:	d1f5      	bne.n	801bbc2 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 801bbd6:	4770      	bx	lr

0801bbd8 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 801bbd8:	4603      	mov	r3, r0
 801bbda:	f100 0210 	add.w	r2, r0, #16
 801bbde:	edd3 7a00 	vldr	s15, [r3]
 801bbe2:	ee67 7a80 	vmul.f32	s15, s15, s0
 801bbe6:	ece3 7a01 	vstmia	r3!, {s15}
 801bbea:	4293      	cmp	r3, r2
 801bbec:	d1f7      	bne.n	801bbde <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 801bbee:	4770      	bx	lr

0801bbf0 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 801bbf0:	f100 0310 	add.w	r3, r0, #16
 801bbf4:	f100 0220 	add.w	r2, r0, #32
 801bbf8:	edd3 7a00 	vldr	s15, [r3]
 801bbfc:	ee67 7a80 	vmul.f32	s15, s15, s0
 801bc00:	ece3 7a01 	vstmia	r3!, {s15}
 801bc04:	4293      	cmp	r3, r2
 801bc06:	d1f7      	bne.n	801bbf8 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 801bc08:	4770      	bx	lr

0801bc0a <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 801bc0a:	f100 0320 	add.w	r3, r0, #32
 801bc0e:	f100 0230 	add.w	r2, r0, #48	; 0x30
 801bc12:	edd3 7a00 	vldr	s15, [r3]
 801bc16:	ee67 7a80 	vmul.f32	s15, s15, s0
 801bc1a:	ece3 7a01 	vstmia	r3!, {s15}
 801bc1e:	4293      	cmp	r3, r2
 801bc20:	d1f7      	bne.n	801bc12 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 801bc22:	4770      	bx	lr

0801bc24 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 801bc24:	b570      	push	{r4, r5, r6, lr}
 801bc26:	694a      	ldr	r2, [r1, #20]
 801bc28:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 801bc2a:	684b      	ldr	r3, [r1, #4]
 801bc2c:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 801bc2e:	1b54      	subs	r4, r2, r5
 801bc30:	f000 8106 	beq.w	801be40 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 801bc34:	1b9b      	subs	r3, r3, r6
 801bc36:	d003      	beq.n	801bc40 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801bc38:	4363      	muls	r3, r4
 801bc3a:	2210      	movs	r2, #16
 801bc3c:	fb93 f3f2 	sdiv	r3, r3, r2
 801bc40:	680c      	ldr	r4, [r1, #0]
 801bc42:	698a      	ldr	r2, [r1, #24]
 801bc44:	1b65      	subs	r5, r4, r5
 801bc46:	f000 80fd 	beq.w	801be44 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 801bc4a:	1b92      	subs	r2, r2, r6
 801bc4c:	d003      	beq.n	801bc56 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801bc4e:	436a      	muls	r2, r5
 801bc50:	2410      	movs	r4, #16
 801bc52:	fb92 f2f4 	sdiv	r2, r2, r4
 801bc56:	1a9b      	subs	r3, r3, r2
 801bc58:	ee07 3a90 	vmov	s15, r3
 801bc5c:	ed9f 4a88 	vldr	s8, [pc, #544]	; 801be80 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 801bc60:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801bc64:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801bc68:	ee67 7a84 	vmul.f32	s15, s15, s8
 801bc6c:	460a      	mov	r2, r1
 801bc6e:	ee87 3a27 	vdiv.f32	s6, s14, s15
 801bc72:	4603      	mov	r3, r0
 801bc74:	f100 040c 	add.w	r4, r0, #12
 801bc78:	eeb1 6a43 	vneg.f32	s12, s6
 801bc7c:	edd2 7a02 	vldr	s15, [r2, #8]
 801bc80:	eec7 6a27 	vdiv.f32	s13, s14, s15
 801bc84:	3214      	adds	r2, #20
 801bc86:	ece3 6a01 	vstmia	r3!, {s13}
 801bc8a:	ed52 7a02 	vldr	s15, [r2, #-8]
 801bc8e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801bc92:	429c      	cmp	r4, r3
 801bc94:	edc3 7a02 	vstr	s15, [r3, #8]
 801bc98:	ed52 7a01 	vldr	s15, [r2, #-4]
 801bc9c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801bca0:	edc3 7a05 	vstr	s15, [r3, #20]
 801bca4:	d1ea      	bne.n	801bc7c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801bca6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801bca8:	698b      	ldr	r3, [r1, #24]
 801bcaa:	edd0 4a02 	vldr	s9, [r0, #8]
 801bcae:	edd0 3a00 	vldr	s7, [r0]
 801bcb2:	edd0 6a01 	vldr	s13, [r0, #4]
 801bcb6:	ed90 5a05 	vldr	s10, [r0, #20]
 801bcba:	ed90 2a03 	vldr	s4, [r0, #12]
 801bcbe:	edd0 5a04 	vldr	s11, [r0, #16]
 801bcc2:	ed90 1a07 	vldr	s2, [r0, #28]
 801bcc6:	edd0 2a06 	vldr	s5, [r0, #24]
 801bcca:	1a9b      	subs	r3, r3, r2
 801bccc:	ee07 3a90 	vmov	s15, r3
 801bcd0:	684b      	ldr	r3, [r1, #4]
 801bcd2:	1a9b      	subs	r3, r3, r2
 801bcd4:	ee07 3a10 	vmov	s14, r3
 801bcd8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801bcdc:	ee76 6ae4 	vsub.f32	s13, s13, s9
 801bce0:	ee67 7a84 	vmul.f32	s15, s15, s8
 801bce4:	ee73 4ae4 	vsub.f32	s9, s7, s9
 801bce8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801bcec:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 801bcf0:	ee27 7a04 	vmul.f32	s14, s14, s8
 801bcf4:	ee75 5ac5 	vsub.f32	s11, s11, s10
 801bcf8:	eee6 7a87 	vfma.f32	s15, s13, s14
 801bcfc:	ee32 5a45 	vsub.f32	s10, s4, s10
 801bd00:	ee67 7a83 	vmul.f32	s15, s15, s6
 801bd04:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 801bd08:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801bd0a:	694a      	ldr	r2, [r1, #20]
 801bd0c:	1b13      	subs	r3, r2, r4
 801bd0e:	ee07 3a10 	vmov	s14, r3
 801bd12:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801bd16:	680b      	ldr	r3, [r1, #0]
 801bd18:	ee27 7a04 	vmul.f32	s14, s14, s8
 801bd1c:	1b1b      	subs	r3, r3, r4
 801bd1e:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 801bd22:	ee07 3a10 	vmov	s14, r3
 801bd26:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801bd2a:	ee27 7a04 	vmul.f32	s14, s14, s8
 801bd2e:	eee6 4a87 	vfma.f32	s9, s13, s14
 801bd32:	ee64 4a86 	vmul.f32	s9, s9, s12
 801bd36:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 801bd3a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801bd3c:	698b      	ldr	r3, [r1, #24]
 801bd3e:	1a9b      	subs	r3, r3, r2
 801bd40:	ee06 3a90 	vmov	s13, r3
 801bd44:	684b      	ldr	r3, [r1, #4]
 801bd46:	1a9b      	subs	r3, r3, r2
 801bd48:	ee07 3a10 	vmov	s14, r3
 801bd4c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801bd50:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801bd54:	ee66 6a84 	vmul.f32	s13, s13, s8
 801bd58:	ee27 7a04 	vmul.f32	s14, s14, s8
 801bd5c:	ee65 6a66 	vnmul.f32	s13, s10, s13
 801bd60:	eee5 6a87 	vfma.f32	s13, s11, s14
 801bd64:	ee66 6a83 	vmul.f32	s13, s13, s6
 801bd68:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 801bd6c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801bd6e:	694a      	ldr	r2, [r1, #20]
 801bd70:	1b13      	subs	r3, r2, r4
 801bd72:	ee07 3a10 	vmov	s14, r3
 801bd76:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801bd7a:	680b      	ldr	r3, [r1, #0]
 801bd7c:	ee27 7a04 	vmul.f32	s14, s14, s8
 801bd80:	1b1b      	subs	r3, r3, r4
 801bd82:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801bd86:	ee07 3a10 	vmov	s14, r3
 801bd8a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801bd8e:	ee27 7a04 	vmul.f32	s14, s14, s8
 801bd92:	eea5 5a87 	vfma.f32	s10, s11, s14
 801bd96:	edd0 5a08 	vldr	s11, [r0, #32]
 801bd9a:	ee25 5a06 	vmul.f32	s10, s10, s12
 801bd9e:	ee31 1a65 	vsub.f32	s2, s2, s11
 801bda2:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 801bda6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801bda8:	698b      	ldr	r3, [r1, #24]
 801bdaa:	1a9b      	subs	r3, r3, r2
 801bdac:	ee07 3a10 	vmov	s14, r3
 801bdb0:	684b      	ldr	r3, [r1, #4]
 801bdb2:	1a9b      	subs	r3, r3, r2
 801bdb4:	ee01 3a90 	vmov	s3, r3
 801bdb8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801bdbc:	ee72 5ae5 	vsub.f32	s11, s5, s11
 801bdc0:	ee27 7a04 	vmul.f32	s14, s14, s8
 801bdc4:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 801bdc8:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 801bdcc:	ee61 1a84 	vmul.f32	s3, s3, s8
 801bdd0:	eea1 7a21 	vfma.f32	s14, s2, s3
 801bdd4:	ee27 7a03 	vmul.f32	s14, s14, s6
 801bdd8:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 801bddc:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801bdde:	694a      	ldr	r2, [r1, #20]
 801bde0:	1b13      	subs	r3, r2, r4
 801bde2:	ee03 3a10 	vmov	s6, r3
 801bde6:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801bdea:	680b      	ldr	r3, [r1, #0]
 801bdec:	ee23 3a04 	vmul.f32	s6, s6, s8
 801bdf0:	1b1b      	subs	r3, r3, r4
 801bdf2:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 801bdf6:	ee03 3a10 	vmov	s6, r3
 801bdfa:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801bdfe:	ee23 4a04 	vmul.f32	s8, s6, s8
 801be02:	eee1 5a04 	vfma.f32	s11, s2, s8
 801be06:	ee25 6a86 	vmul.f32	s12, s11, s12
 801be0a:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801be0e:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 801be12:	eee3 5aa6 	vfma.f32	s11, s7, s13
 801be16:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801be1a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801be1e:	dd13      	ble.n	801be48 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 801be20:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801be24:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 801be28:	63c3      	str	r3, [r0, #60]	; 0x3c
 801be2a:	eee3 7a87 	vfma.f32	s15, s7, s14
 801be2e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801be32:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801be36:	dd15      	ble.n	801be64 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 801be38:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801be3c:	6403      	str	r3, [r0, #64]	; 0x40
 801be3e:	bd70      	pop	{r4, r5, r6, pc}
 801be40:	4623      	mov	r3, r4
 801be42:	e6fd      	b.n	801bc40 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801be44:	462a      	mov	r2, r5
 801be46:	e706      	b.n	801bc56 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801be48:	d502      	bpl.n	801be50 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 801be4a:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801be4e:	e7e9      	b.n	801be24 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 801be50:	ee22 2a64 	vnmul.f32	s4, s4, s9
 801be54:	eea3 2a85 	vfma.f32	s4, s7, s10
 801be58:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 801be5c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801be60:	dade      	bge.n	801be20 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801be62:	e7f2      	b.n	801be4a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 801be64:	d502      	bpl.n	801be6c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801be66:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801be6a:	e7e7      	b.n	801be3c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 801be6c:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 801be70:	eee3 4a86 	vfma.f32	s9, s7, s12
 801be74:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 801be78:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801be7c:	dadc      	bge.n	801be38 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801be7e:	e7f2      	b.n	801be66 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 801be80:	3d800000 	.word	0x3d800000

0801be84 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 801be84:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801be88:	2714      	movs	r7, #20
 801be8a:	435f      	muls	r7, r3
 801be8c:	eb02 0c07 	add.w	ip, r2, r7
 801be90:	f8dc 5004 	ldr.w	r5, [ip, #4]
 801be94:	f115 0e0f 	adds.w	lr, r5, #15
 801be98:	f100 80a2 	bmi.w	801bfe0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 801be9c:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 801bea0:	9c08      	ldr	r4, [sp, #32]
 801bea2:	f8c0 e014 	str.w	lr, [r0, #20]
 801bea6:	2614      	movs	r6, #20
 801bea8:	4366      	muls	r6, r4
 801beaa:	eb02 0806 	add.w	r8, r2, r6
 801beae:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801beb2:	f115 040f 	adds.w	r4, r5, #15
 801beb6:	f100 809f 	bmi.w	801bff8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 801beba:	1124      	asrs	r4, r4, #4
 801bebc:	eba4 040e 	sub.w	r4, r4, lr
 801bec0:	6184      	str	r4, [r0, #24]
 801bec2:	2c00      	cmp	r4, #0
 801bec4:	f000 808a 	beq.w	801bfdc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 801bec8:	f8dc 9004 	ldr.w	r9, [ip, #4]
 801becc:	f8d8 4004 	ldr.w	r4, [r8, #4]
 801bed0:	5995      	ldr	r5, [r2, r6]
 801bed2:	eba4 0809 	sub.w	r8, r4, r9
 801bed6:	59d4      	ldr	r4, [r2, r7]
 801bed8:	eba5 0a04 	sub.w	sl, r5, r4
 801bedc:	ea4f 150a 	mov.w	r5, sl, lsl #4
 801bee0:	fb0e fe05 	mul.w	lr, lr, r5
 801bee4:	fb0a ee19 	mls	lr, sl, r9, lr
 801bee8:	fb08 e404 	mla	r4, r8, r4, lr
 801beec:	ea4f 1608 	mov.w	r6, r8, lsl #4
 801bef0:	3c01      	subs	r4, #1
 801bef2:	19a4      	adds	r4, r4, r6
 801bef4:	f100 808c 	bmi.w	801c010 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 801bef8:	fb94 fef6 	sdiv	lr, r4, r6
 801befc:	f8c0 e000 	str.w	lr, [r0]
 801bf00:	fb06 441e 	mls	r4, r6, lr, r4
 801bf04:	6104      	str	r4, [r0, #16]
 801bf06:	2d00      	cmp	r5, #0
 801bf08:	f2c0 8095 	blt.w	801c036 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 801bf0c:	fb95 f4f6 	sdiv	r4, r5, r6
 801bf10:	6044      	str	r4, [r0, #4]
 801bf12:	fb06 5514 	mls	r5, r6, r4, r5
 801bf16:	6085      	str	r5, [r0, #8]
 801bf18:	60c6      	str	r6, [r0, #12]
 801bf1a:	f8dc 4004 	ldr.w	r4, [ip, #4]
 801bf1e:	6945      	ldr	r5, [r0, #20]
 801bf20:	59d2      	ldr	r2, [r2, r7]
 801bf22:	eddf 6a4d 	vldr	s13, [pc, #308]	; 801c058 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 801bf26:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801bf2a:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 801bf2e:	ee07 4a10 	vmov	s14, r4
 801bf32:	6804      	ldr	r4, [r0, #0]
 801bf34:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 801bf38:	ee07 2a90 	vmov	s15, r2
 801bf3c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801bf40:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801bf44:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801bf48:	ee27 7a26 	vmul.f32	s14, s14, s13
 801bf4c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801bf50:	edd3 6a00 	vldr	s13, [r3]
 801bf54:	eee6 6a07 	vfma.f32	s13, s12, s14
 801bf58:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 801bf5c:	eee6 6a27 	vfma.f32	s13, s12, s15
 801bf60:	edc0 6a07 	vstr	s13, [r0, #28]
 801bf64:	edd0 6a01 	vldr	s13, [r0, #4]
 801bf68:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 801bf6c:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801bf70:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801bf74:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801bf78:	ed80 6a08 	vstr	s12, [r0, #32]
 801bf7c:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 801bf7e:	6242      	str	r2, [r0, #36]	; 0x24
 801bf80:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 801bf84:	ed93 6a03 	vldr	s12, [r3, #12]
 801bf88:	eea5 6a87 	vfma.f32	s12, s11, s14
 801bf8c:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 801bf90:	eea5 6aa7 	vfma.f32	s12, s11, s15
 801bf94:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 801bf98:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 801bf9c:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 801bfa0:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801bfa4:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 801bfa8:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801bfaa:	6302      	str	r2, [r0, #48]	; 0x30
 801bfac:	ed93 6a06 	vldr	s12, [r3, #24]
 801bfb0:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 801bfb4:	eea5 6a87 	vfma.f32	s12, s11, s14
 801bfb8:	eeb0 7a46 	vmov.f32	s14, s12
 801bfbc:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 801bfc0:	eea6 7a27 	vfma.f32	s14, s12, s15
 801bfc4:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 801bfc8:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 801bfcc:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 801bfd0:	eee6 7a87 	vfma.f32	s15, s13, s14
 801bfd4:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 801bfd8:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 801bfda:	63c3      	str	r3, [r0, #60]	; 0x3c
 801bfdc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801bfe0:	f1c5 0501 	rsb	r5, r5, #1
 801bfe4:	f015 050f 	ands.w	r5, r5, #15
 801bfe8:	bf18      	it	ne
 801bfea:	2501      	movne	r5, #1
 801bfec:	2410      	movs	r4, #16
 801bfee:	fb9e fef4 	sdiv	lr, lr, r4
 801bff2:	ebae 0e05 	sub.w	lr, lr, r5
 801bff6:	e753      	b.n	801bea0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 801bff8:	f1c5 0501 	rsb	r5, r5, #1
 801bffc:	f015 050f 	ands.w	r5, r5, #15
 801c000:	bf18      	it	ne
 801c002:	2501      	movne	r5, #1
 801c004:	f04f 0910 	mov.w	r9, #16
 801c008:	fb94 f4f9 	sdiv	r4, r4, r9
 801c00c:	1b64      	subs	r4, r4, r5
 801c00e:	e755      	b.n	801bebc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 801c010:	4264      	negs	r4, r4
 801c012:	fb94 fef6 	sdiv	lr, r4, r6
 801c016:	f1ce 0800 	rsb	r8, lr, #0
 801c01a:	fb06 441e 	mls	r4, r6, lr, r4
 801c01e:	f8c0 8000 	str.w	r8, [r0]
 801c022:	6104      	str	r4, [r0, #16]
 801c024:	2c00      	cmp	r4, #0
 801c026:	f43f af6e 	beq.w	801bf06 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 801c02a:	ea6f 0e0e 	mvn.w	lr, lr
 801c02e:	f8c0 e000 	str.w	lr, [r0]
 801c032:	1b34      	subs	r4, r6, r4
 801c034:	e766      	b.n	801bf04 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 801c036:	426d      	negs	r5, r5
 801c038:	fb95 f4f6 	sdiv	r4, r5, r6
 801c03c:	f1c4 0e00 	rsb	lr, r4, #0
 801c040:	fb06 5514 	mls	r5, r6, r4, r5
 801c044:	f8c0 e004 	str.w	lr, [r0, #4]
 801c048:	6085      	str	r5, [r0, #8]
 801c04a:	2d00      	cmp	r5, #0
 801c04c:	f43f af64 	beq.w	801bf18 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 801c050:	43e4      	mvns	r4, r4
 801c052:	6044      	str	r4, [r0, #4]
 801c054:	1b75      	subs	r5, r6, r5
 801c056:	e75e      	b.n	801bf16 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 801c058:	3d800000 	.word	0x3d800000

0801c05c <_ZN8touchgfx7Unicode6strlenEPKt>:
 801c05c:	4602      	mov	r2, r0
 801c05e:	b148      	cbz	r0, 801c074 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 801c060:	2300      	movs	r3, #0
 801c062:	b298      	uxth	r0, r3
 801c064:	3301      	adds	r3, #1
 801c066:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 801c06a:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 801c06e:	2900      	cmp	r1, #0
 801c070:	d1f7      	bne.n	801c062 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 801c072:	4770      	bx	lr
 801c074:	4770      	bx	lr

0801c076 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 801c076:	b530      	push	{r4, r5, lr}
 801c078:	4604      	mov	r4, r0
 801c07a:	b159      	cbz	r1, 801c094 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 801c07c:	b148      	cbz	r0, 801c092 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801c07e:	2300      	movs	r3, #0
 801c080:	b298      	uxth	r0, r3
 801c082:	4282      	cmp	r2, r0
 801c084:	d905      	bls.n	801c092 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801c086:	5ccd      	ldrb	r5, [r1, r3]
 801c088:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 801c08c:	3301      	adds	r3, #1
 801c08e:	2d00      	cmp	r5, #0
 801c090:	d1f6      	bne.n	801c080 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801c092:	bd30      	pop	{r4, r5, pc}
 801c094:	4608      	mov	r0, r1
 801c096:	e7fc      	b.n	801c092 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

0801c098 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 801c098:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c09a:	b08b      	sub	sp, #44	; 0x2c
 801c09c:	468c      	mov	ip, r1
 801c09e:	2100      	movs	r1, #0
 801c0a0:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801c0a4:	4604      	mov	r4, r0
 801c0a6:	261f      	movs	r6, #31
 801c0a8:	af01      	add	r7, sp, #4
 801c0aa:	fb94 fef3 	sdiv	lr, r4, r3
 801c0ae:	fb03 441e 	mls	r4, r3, lr, r4
 801c0b2:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 801c0b6:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 801c0ba:	b2ec      	uxtb	r4, r5
 801c0bc:	2d09      	cmp	r5, #9
 801c0be:	bfd4      	ite	le
 801c0c0:	3430      	addle	r4, #48	; 0x30
 801c0c2:	3457      	addgt	r4, #87	; 0x57
 801c0c4:	b2e4      	uxtb	r4, r4
 801c0c6:	55bc      	strb	r4, [r7, r6]
 801c0c8:	4674      	mov	r4, lr
 801c0ca:	1e71      	subs	r1, r6, #1
 801c0cc:	b974      	cbnz	r4, 801c0ec <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 801c0ce:	2800      	cmp	r0, #0
 801c0d0:	da05      	bge.n	801c0de <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 801c0d2:	ab0a      	add	r3, sp, #40	; 0x28
 801c0d4:	4419      	add	r1, r3
 801c0d6:	232d      	movs	r3, #45	; 0x2d
 801c0d8:	f801 3c24 	strb.w	r3, [r1, #-36]
 801c0dc:	1eb1      	subs	r1, r6, #2
 801c0de:	3101      	adds	r1, #1
 801c0e0:	4439      	add	r1, r7
 801c0e2:	4660      	mov	r0, ip
 801c0e4:	f7ff ffc7 	bl	801c076 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 801c0e8:	b00b      	add	sp, #44	; 0x2c
 801c0ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c0ec:	460e      	mov	r6, r1
 801c0ee:	e7dc      	b.n	801c0aa <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

0801c0f0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 801c0f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c0f2:	b08b      	sub	sp, #44	; 0x2c
 801c0f4:	468c      	mov	ip, r1
 801c0f6:	2100      	movs	r1, #0
 801c0f8:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801c0fc:	ae01      	add	r6, sp, #4
 801c0fe:	211f      	movs	r1, #31
 801c100:	fbb0 f7f3 	udiv	r7, r0, r3
 801c104:	fb03 0517 	mls	r5, r3, r7, r0
 801c108:	b2ec      	uxtb	r4, r5
 801c10a:	2d09      	cmp	r5, #9
 801c10c:	bfd4      	ite	le
 801c10e:	3430      	addle	r4, #48	; 0x30
 801c110:	3457      	addgt	r4, #87	; 0x57
 801c112:	b2e4      	uxtb	r4, r4
 801c114:	558c      	strb	r4, [r1, r6]
 801c116:	4638      	mov	r0, r7
 801c118:	1e4c      	subs	r4, r1, #1
 801c11a:	b92f      	cbnz	r7, 801c128 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 801c11c:	4431      	add	r1, r6
 801c11e:	4660      	mov	r0, ip
 801c120:	f7ff ffa9 	bl	801c076 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 801c124:	b00b      	add	sp, #44	; 0x2c
 801c126:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c128:	4621      	mov	r1, r4
 801c12a:	e7e9      	b.n	801c100 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

0801c12c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 801c12c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c130:	4691      	mov	r9, r2
 801c132:	b085      	sub	sp, #20
 801c134:	6802      	ldr	r2, [r0, #0]
 801c136:	9201      	str	r2, [sp, #4]
 801c138:	4688      	mov	r8, r1
 801c13a:	4683      	mov	fp, r0
 801c13c:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 801c140:	9103      	str	r1, [sp, #12]
 801c142:	4610      	mov	r0, r2
 801c144:	461c      	mov	r4, r3
 801c146:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 801c14a:	9302      	str	r3, [sp, #8]
 801c14c:	f7ff ff86 	bl	801c05c <_ZN8touchgfx7Unicode6strlenEPKt>
 801c150:	f1b8 0f00 	cmp.w	r8, #0
 801c154:	bf0c      	ite	eq
 801c156:	4684      	moveq	ip, r0
 801c158:	f100 0c01 	addne.w	ip, r0, #1
 801c15c:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 801c160:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 801c164:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801c166:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801c168:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 801c16c:	9903      	ldr	r1, [sp, #12]
 801c16e:	fa1f fc8c 	uxth.w	ip, ip
 801c172:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 801c176:	d041      	beq.n	801c1fc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801c178:	d834      	bhi.n	801c1e4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 801c17a:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 801c17e:	d059      	beq.n	801c234 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 801c180:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 801c184:	d03a      	beq.n	801c1fc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801c186:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 801c18a:	d034      	beq.n	801c1f6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801c18c:	2400      	movs	r4, #0
 801c18e:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801c192:	3a01      	subs	r2, #1
 801c194:	b169      	cbz	r1, 801c1b2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801c196:	9911      	ldr	r1, [sp, #68]	; 0x44
 801c198:	458c      	cmp	ip, r1
 801c19a:	da09      	bge.n	801c1b0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801c19c:	eba1 010c 	sub.w	r1, r1, ip
 801c1a0:	b289      	uxth	r1, r1
 801c1a2:	b933      	cbnz	r3, 801c1b2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801c1a4:	2e00      	cmp	r6, #0
 801c1a6:	d051      	beq.n	801c24c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801c1a8:	2800      	cmp	r0, #0
 801c1aa:	d04f      	beq.n	801c24c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801c1ac:	440c      	add	r4, r1
 801c1ae:	b2a4      	uxth	r4, r4
 801c1b0:	2100      	movs	r1, #0
 801c1b2:	682b      	ldr	r3, [r5, #0]
 801c1b4:	4293      	cmp	r3, r2
 801c1b6:	da07      	bge.n	801c1c8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801c1b8:	f1b8 0f00 	cmp.w	r8, #0
 801c1bc:	d004      	beq.n	801c1c8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801c1be:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 801c1c2:	682b      	ldr	r3, [r5, #0]
 801c1c4:	3301      	adds	r3, #1
 801c1c6:	602b      	str	r3, [r5, #0]
 801c1c8:	2730      	movs	r7, #48	; 0x30
 801c1ca:	2c00      	cmp	r4, #0
 801c1cc:	d04e      	beq.n	801c26c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801c1ce:	682e      	ldr	r6, [r5, #0]
 801c1d0:	3c01      	subs	r4, #1
 801c1d2:	42b2      	cmp	r2, r6
 801c1d4:	b2a4      	uxth	r4, r4
 801c1d6:	dd49      	ble.n	801c26c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801c1d8:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801c1dc:	682b      	ldr	r3, [r5, #0]
 801c1de:	3301      	adds	r3, #1
 801c1e0:	602b      	str	r3, [r5, #0]
 801c1e2:	e7f2      	b.n	801c1ca <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 801c1e4:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 801c1e8:	d01d      	beq.n	801c226 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 801c1ea:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 801c1ee:	d002      	beq.n	801c1f6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801c1f0:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 801c1f4:	e7c9      	b.n	801c18a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 801c1f6:	4684      	mov	ip, r0
 801c1f8:	f04f 0800 	mov.w	r8, #0
 801c1fc:	2c00      	cmp	r4, #0
 801c1fe:	d0c6      	beq.n	801c18e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801c200:	b947      	cbnz	r7, 801c214 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801c202:	2801      	cmp	r0, #1
 801c204:	d106      	bne.n	801c214 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801c206:	8814      	ldrh	r4, [r2, #0]
 801c208:	2c30      	cmp	r4, #48	; 0x30
 801c20a:	bf02      	ittt	eq
 801c20c:	3202      	addeq	r2, #2
 801c20e:	f8cb 2000 	streq.w	r2, [fp]
 801c212:	4638      	moveq	r0, r7
 801c214:	45bc      	cmp	ip, r7
 801c216:	da14      	bge.n	801c242 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 801c218:	b2bf      	uxth	r7, r7
 801c21a:	eba7 040c 	sub.w	r4, r7, ip
 801c21e:	b2a4      	uxth	r4, r4
 801c220:	46bc      	mov	ip, r7
 801c222:	2600      	movs	r6, #0
 801c224:	e7b3      	b.n	801c18e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801c226:	4684      	mov	ip, r0
 801c228:	b16c      	cbz	r4, 801c246 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 801c22a:	42b8      	cmp	r0, r7
 801c22c:	dd00      	ble.n	801c230 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 801c22e:	b2b8      	uxth	r0, r7
 801c230:	2400      	movs	r4, #0
 801c232:	e003      	b.n	801c23c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 801c234:	f04f 0c01 	mov.w	ip, #1
 801c238:	2400      	movs	r4, #0
 801c23a:	4660      	mov	r0, ip
 801c23c:	4626      	mov	r6, r4
 801c23e:	46a0      	mov	r8, r4
 801c240:	e7a5      	b.n	801c18e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801c242:	2400      	movs	r4, #0
 801c244:	e7ed      	b.n	801c222 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 801c246:	4626      	mov	r6, r4
 801c248:	46a0      	mov	r8, r4
 801c24a:	e7a0      	b.n	801c18e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801c24c:	2900      	cmp	r1, #0
 801c24e:	d0b0      	beq.n	801c1b2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801c250:	2720      	movs	r7, #32
 801c252:	682e      	ldr	r6, [r5, #0]
 801c254:	2900      	cmp	r1, #0
 801c256:	d0ac      	beq.n	801c1b2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801c258:	3901      	subs	r1, #1
 801c25a:	4296      	cmp	r6, r2
 801c25c:	b289      	uxth	r1, r1
 801c25e:	daa7      	bge.n	801c1b0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801c260:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801c264:	682b      	ldr	r3, [r5, #0]
 801c266:	3301      	adds	r3, #1
 801c268:	602b      	str	r3, [r5, #0]
 801c26a:	e7f2      	b.n	801c252 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 801c26c:	b188      	cbz	r0, 801c292 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801c26e:	682b      	ldr	r3, [r5, #0]
 801c270:	3801      	subs	r0, #1
 801c272:	429a      	cmp	r2, r3
 801c274:	b280      	uxth	r0, r0
 801c276:	dd0c      	ble.n	801c292 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801c278:	f8db 3000 	ldr.w	r3, [fp]
 801c27c:	1c9c      	adds	r4, r3, #2
 801c27e:	f8cb 4000 	str.w	r4, [fp]
 801c282:	881c      	ldrh	r4, [r3, #0]
 801c284:	682b      	ldr	r3, [r5, #0]
 801c286:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 801c28a:	682b      	ldr	r3, [r5, #0]
 801c28c:	3301      	adds	r3, #1
 801c28e:	602b      	str	r3, [r5, #0]
 801c290:	e7ec      	b.n	801c26c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801c292:	2620      	movs	r6, #32
 801c294:	b151      	cbz	r1, 801c2ac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801c296:	6828      	ldr	r0, [r5, #0]
 801c298:	3901      	subs	r1, #1
 801c29a:	4282      	cmp	r2, r0
 801c29c:	b289      	uxth	r1, r1
 801c29e:	dd05      	ble.n	801c2ac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801c2a0:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 801c2a4:	682b      	ldr	r3, [r5, #0]
 801c2a6:	3301      	adds	r3, #1
 801c2a8:	602b      	str	r3, [r5, #0]
 801c2aa:	e7f3      	b.n	801c294 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 801c2ac:	b005      	add	sp, #20
 801c2ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c2b2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 801c2b2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801c2b6:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 801c2ba:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 801c2be:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 801c2c2:	2400      	movs	r4, #0
 801c2c4:	8014      	strh	r4, [r2, #0]
 801c2c6:	701c      	strb	r4, [r3, #0]
 801c2c8:	f888 4000 	strb.w	r4, [r8]
 801c2cc:	f88c 4000 	strb.w	r4, [ip]
 801c2d0:	f88e 4000 	strb.w	r4, [lr]
 801c2d4:	703c      	strb	r4, [r7, #0]
 801c2d6:	6804      	ldr	r4, [r0, #0]
 801c2d8:	b1a4      	cbz	r4, 801c304 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 801c2da:	8824      	ldrh	r4, [r4, #0]
 801c2dc:	f04f 0901 	mov.w	r9, #1
 801c2e0:	b314      	cbz	r4, 801c328 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801c2e2:	2c2b      	cmp	r4, #43	; 0x2b
 801c2e4:	d001      	beq.n	801c2ea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 801c2e6:	2c20      	cmp	r4, #32
 801c2e8:	d110      	bne.n	801c30c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 801c2ea:	8014      	strh	r4, [r2, #0]
 801c2ec:	6804      	ldr	r4, [r0, #0]
 801c2ee:	b10c      	cbz	r4, 801c2f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 801c2f0:	3402      	adds	r4, #2
 801c2f2:	6004      	str	r4, [r0, #0]
 801c2f4:	680c      	ldr	r4, [r1, #0]
 801c2f6:	b10c      	cbz	r4, 801c2fc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 801c2f8:	3401      	adds	r4, #1
 801c2fa:	600c      	str	r4, [r1, #0]
 801c2fc:	6804      	ldr	r4, [r0, #0]
 801c2fe:	b17c      	cbz	r4, 801c320 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 801c300:	8824      	ldrh	r4, [r4, #0]
 801c302:	e7ed      	b.n	801c2e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801c304:	680c      	ldr	r4, [r1, #0]
 801c306:	b17c      	cbz	r4, 801c328 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801c308:	7824      	ldrb	r4, [r4, #0]
 801c30a:	e7e7      	b.n	801c2dc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 801c30c:	2c2d      	cmp	r4, #45	; 0x2d
 801c30e:	d102      	bne.n	801c316 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 801c310:	f883 9000 	strb.w	r9, [r3]
 801c314:	e7ea      	b.n	801c2ec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801c316:	2c23      	cmp	r4, #35	; 0x23
 801c318:	d107      	bne.n	801c32a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 801c31a:	f888 9000 	strb.w	r9, [r8]
 801c31e:	e7e5      	b.n	801c2ec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801c320:	680c      	ldr	r4, [r1, #0]
 801c322:	b10c      	cbz	r4, 801c328 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801c324:	7824      	ldrb	r4, [r4, #0]
 801c326:	e7db      	b.n	801c2e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801c328:	2400      	movs	r4, #0
 801c32a:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 801c32e:	2b09      	cmp	r3, #9
 801c330:	d901      	bls.n	801c336 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 801c332:	2c2a      	cmp	r4, #42	; 0x2a
 801c334:	d122      	bne.n	801c37c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801c336:	2301      	movs	r3, #1
 801c338:	2c30      	cmp	r4, #48	; 0x30
 801c33a:	f88e 3000 	strb.w	r3, [lr]
 801c33e:	d10d      	bne.n	801c35c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801c340:	f88c 3000 	strb.w	r3, [ip]
 801c344:	6803      	ldr	r3, [r0, #0]
 801c346:	b10b      	cbz	r3, 801c34c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 801c348:	3302      	adds	r3, #2
 801c34a:	6003      	str	r3, [r0, #0]
 801c34c:	680b      	ldr	r3, [r1, #0]
 801c34e:	b10b      	cbz	r3, 801c354 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 801c350:	3301      	adds	r3, #1
 801c352:	600b      	str	r3, [r1, #0]
 801c354:	6803      	ldr	r3, [r0, #0]
 801c356:	2b00      	cmp	r3, #0
 801c358:	d02f      	beq.n	801c3ba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 801c35a:	881c      	ldrh	r4, [r3, #0]
 801c35c:	2c2a      	cmp	r4, #42	; 0x2a
 801c35e:	d135      	bne.n	801c3cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801c360:	f04f 33ff 	mov.w	r3, #4294967295
 801c364:	6033      	str	r3, [r6, #0]
 801c366:	6803      	ldr	r3, [r0, #0]
 801c368:	b10b      	cbz	r3, 801c36e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 801c36a:	3302      	adds	r3, #2
 801c36c:	6003      	str	r3, [r0, #0]
 801c36e:	680b      	ldr	r3, [r1, #0]
 801c370:	b10b      	cbz	r3, 801c376 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 801c372:	3301      	adds	r3, #1
 801c374:	600b      	str	r3, [r1, #0]
 801c376:	6803      	ldr	r3, [r0, #0]
 801c378:	b31b      	cbz	r3, 801c3c2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 801c37a:	881c      	ldrh	r4, [r3, #0]
 801c37c:	2c2e      	cmp	r4, #46	; 0x2e
 801c37e:	d11a      	bne.n	801c3b6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801c380:	2301      	movs	r3, #1
 801c382:	703b      	strb	r3, [r7, #0]
 801c384:	6803      	ldr	r3, [r0, #0]
 801c386:	b10b      	cbz	r3, 801c38c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 801c388:	3302      	adds	r3, #2
 801c38a:	6003      	str	r3, [r0, #0]
 801c38c:	680b      	ldr	r3, [r1, #0]
 801c38e:	b10b      	cbz	r3, 801c394 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 801c390:	3301      	adds	r3, #1
 801c392:	600b      	str	r3, [r1, #0]
 801c394:	6803      	ldr	r3, [r0, #0]
 801c396:	2b00      	cmp	r3, #0
 801c398:	d036      	beq.n	801c408 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 801c39a:	881b      	ldrh	r3, [r3, #0]
 801c39c:	2b2a      	cmp	r3, #42	; 0x2a
 801c39e:	d137      	bne.n	801c410 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801c3a0:	f04f 33ff 	mov.w	r3, #4294967295
 801c3a4:	602b      	str	r3, [r5, #0]
 801c3a6:	6803      	ldr	r3, [r0, #0]
 801c3a8:	b10b      	cbz	r3, 801c3ae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 801c3aa:	3302      	adds	r3, #2
 801c3ac:	6003      	str	r3, [r0, #0]
 801c3ae:	680b      	ldr	r3, [r1, #0]
 801c3b0:	b10b      	cbz	r3, 801c3b6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801c3b2:	3301      	adds	r3, #1
 801c3b4:	600b      	str	r3, [r1, #0]
 801c3b6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801c3ba:	680c      	ldr	r4, [r1, #0]
 801c3bc:	b134      	cbz	r4, 801c3cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801c3be:	7824      	ldrb	r4, [r4, #0]
 801c3c0:	e7cc      	b.n	801c35c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801c3c2:	680b      	ldr	r3, [r1, #0]
 801c3c4:	2b00      	cmp	r3, #0
 801c3c6:	d0f6      	beq.n	801c3b6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801c3c8:	781c      	ldrb	r4, [r3, #0]
 801c3ca:	e7d7      	b.n	801c37c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801c3cc:	2300      	movs	r3, #0
 801c3ce:	6033      	str	r3, [r6, #0]
 801c3d0:	220a      	movs	r2, #10
 801c3d2:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 801c3d6:	fa1f f38c 	uxth.w	r3, ip
 801c3da:	2b09      	cmp	r3, #9
 801c3dc:	d8ce      	bhi.n	801c37c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801c3de:	6833      	ldr	r3, [r6, #0]
 801c3e0:	fb02 c303 	mla	r3, r2, r3, ip
 801c3e4:	6033      	str	r3, [r6, #0]
 801c3e6:	6803      	ldr	r3, [r0, #0]
 801c3e8:	b10b      	cbz	r3, 801c3ee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 801c3ea:	3302      	adds	r3, #2
 801c3ec:	6003      	str	r3, [r0, #0]
 801c3ee:	680b      	ldr	r3, [r1, #0]
 801c3f0:	b10b      	cbz	r3, 801c3f6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 801c3f2:	3301      	adds	r3, #1
 801c3f4:	600b      	str	r3, [r1, #0]
 801c3f6:	6803      	ldr	r3, [r0, #0]
 801c3f8:	b10b      	cbz	r3, 801c3fe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 801c3fa:	881c      	ldrh	r4, [r3, #0]
 801c3fc:	e7e9      	b.n	801c3d2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801c3fe:	680c      	ldr	r4, [r1, #0]
 801c400:	2c00      	cmp	r4, #0
 801c402:	d0e6      	beq.n	801c3d2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801c404:	7824      	ldrb	r4, [r4, #0]
 801c406:	e7e4      	b.n	801c3d2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801c408:	680b      	ldr	r3, [r1, #0]
 801c40a:	b10b      	cbz	r3, 801c410 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801c40c:	781b      	ldrb	r3, [r3, #0]
 801c40e:	e7c5      	b.n	801c39c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 801c410:	2200      	movs	r2, #0
 801c412:	602a      	str	r2, [r5, #0]
 801c414:	240a      	movs	r4, #10
 801c416:	3b30      	subs	r3, #48	; 0x30
 801c418:	b29e      	uxth	r6, r3
 801c41a:	2e09      	cmp	r6, #9
 801c41c:	682a      	ldr	r2, [r5, #0]
 801c41e:	d813      	bhi.n	801c448 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 801c420:	fb04 3302 	mla	r3, r4, r2, r3
 801c424:	602b      	str	r3, [r5, #0]
 801c426:	6803      	ldr	r3, [r0, #0]
 801c428:	b10b      	cbz	r3, 801c42e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 801c42a:	3302      	adds	r3, #2
 801c42c:	6003      	str	r3, [r0, #0]
 801c42e:	680b      	ldr	r3, [r1, #0]
 801c430:	b10b      	cbz	r3, 801c436 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 801c432:	3301      	adds	r3, #1
 801c434:	600b      	str	r3, [r1, #0]
 801c436:	6803      	ldr	r3, [r0, #0]
 801c438:	b10b      	cbz	r3, 801c43e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 801c43a:	881b      	ldrh	r3, [r3, #0]
 801c43c:	e7eb      	b.n	801c416 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801c43e:	680b      	ldr	r3, [r1, #0]
 801c440:	2b00      	cmp	r3, #0
 801c442:	d0e8      	beq.n	801c416 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801c444:	781b      	ldrb	r3, [r3, #0]
 801c446:	e7e6      	b.n	801c416 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801c448:	2a06      	cmp	r2, #6
 801c44a:	bfa8      	it	ge
 801c44c:	2206      	movge	r2, #6
 801c44e:	602a      	str	r2, [r5, #0]
 801c450:	e7b1      	b.n	801c3b6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

0801c452 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 801c452:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c456:	b0a3      	sub	sp, #140	; 0x8c
 801c458:	2600      	movs	r6, #0
 801c45a:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 801c45e:	4607      	mov	r7, r0
 801c460:	4688      	mov	r8, r1
 801c462:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801c466:	4631      	mov	r1, r6
 801c468:	2242      	movs	r2, #66	; 0x42
 801c46a:	4648      	mov	r0, r9
 801c46c:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 801c46e:	960d      	str	r6, [sp, #52]	; 0x34
 801c470:	f00f f96d 	bl	802b74e <memset>
 801c474:	b15f      	cbz	r7, 801c48e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 801c476:	f108 3aff 	add.w	sl, r8, #4294967295
 801c47a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c47c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c47e:	b152      	cbz	r2, 801c496 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 801c480:	8812      	ldrh	r2, [r2, #0]
 801c482:	b10a      	cbz	r2, 801c488 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801c484:	459a      	cmp	sl, r3
 801c486:	dc2e      	bgt.n	801c4e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 801c488:	2200      	movs	r2, #0
 801c48a:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801c48e:	4638      	mov	r0, r7
 801c490:	b023      	add	sp, #140	; 0x8c
 801c492:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c496:	9a08      	ldr	r2, [sp, #32]
 801c498:	2a00      	cmp	r2, #0
 801c49a:	d0f5      	beq.n	801c488 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801c49c:	7812      	ldrb	r2, [r2, #0]
 801c49e:	e7f0      	b.n	801c482 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 801c4a0:	2d00      	cmp	r5, #0
 801c4a2:	d0ea      	beq.n	801c47a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801c4a4:	782a      	ldrb	r2, [r5, #0]
 801c4a6:	b142      	cbz	r2, 801c4ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 801c4a8:	2a25      	cmp	r2, #37	; 0x25
 801c4aa:	d001      	beq.n	801c4b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 801c4ac:	459a      	cmp	sl, r3
 801c4ae:	dc08      	bgt.n	801c4c2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 801c4b0:	f1bb 0f00 	cmp.w	fp, #0
 801c4b4:	d121      	bne.n	801c4fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 801c4b6:	2d00      	cmp	r5, #0
 801c4b8:	d0df      	beq.n	801c47a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801c4ba:	782a      	ldrb	r2, [r5, #0]
 801c4bc:	f04f 0b00 	mov.w	fp, #0
 801c4c0:	e01d      	b.n	801c4fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 801c4c2:	f1bb 0f00 	cmp.w	fp, #0
 801c4c6:	d078      	beq.n	801c5ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 801c4c8:	f8bb 2000 	ldrh.w	r2, [fp]
 801c4cc:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801c4d0:	f1bb 0f00 	cmp.w	fp, #0
 801c4d4:	d002      	beq.n	801c4dc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 801c4d6:	f10b 0202 	add.w	r2, fp, #2
 801c4da:	9209      	str	r2, [sp, #36]	; 0x24
 801c4dc:	b10d      	cbz	r5, 801c4e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 801c4de:	3501      	adds	r5, #1
 801c4e0:	9508      	str	r5, [sp, #32]
 801c4e2:	3301      	adds	r3, #1
 801c4e4:	930d      	str	r3, [sp, #52]	; 0x34
 801c4e6:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 801c4ea:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c4ec:	f1bb 0f00 	cmp.w	fp, #0
 801c4f0:	d0d6      	beq.n	801c4a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 801c4f2:	f8bb 2000 	ldrh.w	r2, [fp]
 801c4f6:	2a00      	cmp	r2, #0
 801c4f8:	d1d6      	bne.n	801c4a8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 801c4fa:	f8bb 2000 	ldrh.w	r2, [fp]
 801c4fe:	2a00      	cmp	r2, #0
 801c500:	d0bb      	beq.n	801c47a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801c502:	459a      	cmp	sl, r3
 801c504:	ddb9      	ble.n	801c47a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801c506:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 801c50a:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 801c50e:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 801c512:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 801c516:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 801c51a:	960e      	str	r6, [sp, #56]	; 0x38
 801c51c:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 801c520:	960f      	str	r6, [sp, #60]	; 0x3c
 801c522:	f1bb 0f00 	cmp.w	fp, #0
 801c526:	d002      	beq.n	801c52e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 801c528:	f10b 0302 	add.w	r3, fp, #2
 801c52c:	9309      	str	r3, [sp, #36]	; 0x24
 801c52e:	b10d      	cbz	r5, 801c534 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 801c530:	1c6b      	adds	r3, r5, #1
 801c532:	9308      	str	r3, [sp, #32]
 801c534:	ab0f      	add	r3, sp, #60	; 0x3c
 801c536:	9305      	str	r3, [sp, #20]
 801c538:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 801c53c:	9304      	str	r3, [sp, #16]
 801c53e:	ab0e      	add	r3, sp, #56	; 0x38
 801c540:	9303      	str	r3, [sp, #12]
 801c542:	ab0c      	add	r3, sp, #48	; 0x30
 801c544:	9302      	str	r3, [sp, #8]
 801c546:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801c54a:	9301      	str	r3, [sp, #4]
 801c54c:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 801c550:	9300      	str	r3, [sp, #0]
 801c552:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 801c556:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801c55a:	a908      	add	r1, sp, #32
 801c55c:	a809      	add	r0, sp, #36	; 0x24
 801c55e:	f7ff fea8 	bl	801c2b2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801c562:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c564:	2b00      	cmp	r3, #0
 801c566:	bfbe      	ittt	lt
 801c568:	6823      	ldrlt	r3, [r4, #0]
 801c56a:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801c56e:	930e      	strlt	r3, [sp, #56]	; 0x38
 801c570:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801c572:	bfb8      	it	lt
 801c574:	3404      	addlt	r4, #4
 801c576:	2b00      	cmp	r3, #0
 801c578:	bfb8      	it	lt
 801c57a:	6823      	ldrlt	r3, [r4, #0]
 801c57c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801c580:	bfbe      	ittt	lt
 801c582:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801c586:	930f      	strlt	r3, [sp, #60]	; 0x3c
 801c588:	3404      	addlt	r4, #4
 801c58a:	b1d9      	cbz	r1, 801c5c4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 801c58c:	880b      	ldrh	r3, [r1, #0]
 801c58e:	2b69      	cmp	r3, #105	; 0x69
 801c590:	d01f      	beq.n	801c5d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801c592:	d82f      	bhi.n	801c5f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 801c594:	2b58      	cmp	r3, #88	; 0x58
 801c596:	d01c      	beq.n	801c5d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801c598:	d818      	bhi.n	801c5cc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 801c59a:	2b25      	cmp	r3, #37	; 0x25
 801c59c:	d034      	beq.n	801c608 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 801c59e:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 801c5a2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c5a4:	f1bb 0f00 	cmp.w	fp, #0
 801c5a8:	f000 80b8 	beq.w	801c71c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 801c5ac:	f8bb 5000 	ldrh.w	r5, [fp]
 801c5b0:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 801c5b4:	3301      	adds	r3, #1
 801c5b6:	930d      	str	r3, [sp, #52]	; 0x34
 801c5b8:	e029      	b.n	801c60e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801c5ba:	b10d      	cbz	r5, 801c5c0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 801c5bc:	782a      	ldrb	r2, [r5, #0]
 801c5be:	e785      	b.n	801c4cc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801c5c0:	462a      	mov	r2, r5
 801c5c2:	e783      	b.n	801c4cc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801c5c4:	2a00      	cmp	r2, #0
 801c5c6:	d0ea      	beq.n	801c59e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801c5c8:	7813      	ldrb	r3, [r2, #0]
 801c5ca:	e7e0      	b.n	801c58e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 801c5cc:	3b63      	subs	r3, #99	; 0x63
 801c5ce:	2b01      	cmp	r3, #1
 801c5d0:	d8e5      	bhi.n	801c59e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801c5d2:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 801c5d6:	b329      	cbz	r1, 801c624 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 801c5d8:	880b      	ldrh	r3, [r1, #0]
 801c5da:	2b69      	cmp	r3, #105	; 0x69
 801c5dc:	d063      	beq.n	801c6a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801c5de:	d825      	bhi.n	801c62c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 801c5e0:	2b63      	cmp	r3, #99	; 0x63
 801c5e2:	d038      	beq.n	801c656 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 801c5e4:	2b64      	cmp	r3, #100	; 0x64
 801c5e6:	d05e      	beq.n	801c6a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801c5e8:	2b58      	cmp	r3, #88	; 0x58
 801c5ea:	d07b      	beq.n	801c6e4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 801c5ec:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 801c5f0:	4625      	mov	r5, r4
 801c5f2:	e036      	b.n	801c662 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801c5f4:	2b73      	cmp	r3, #115	; 0x73
 801c5f6:	d0ec      	beq.n	801c5d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801c5f8:	d802      	bhi.n	801c600 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 801c5fa:	2b6f      	cmp	r3, #111	; 0x6f
 801c5fc:	d1cf      	bne.n	801c59e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801c5fe:	e7e8      	b.n	801c5d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801c600:	2b75      	cmp	r3, #117	; 0x75
 801c602:	d0e6      	beq.n	801c5d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801c604:	2b78      	cmp	r3, #120	; 0x78
 801c606:	e7f9      	b.n	801c5fc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 801c608:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801c60a:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 801c60e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c610:	b10b      	cbz	r3, 801c616 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 801c612:	3302      	adds	r3, #2
 801c614:	9309      	str	r3, [sp, #36]	; 0x24
 801c616:	9b08      	ldr	r3, [sp, #32]
 801c618:	2b00      	cmp	r3, #0
 801c61a:	f43f af2e 	beq.w	801c47a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801c61e:	3301      	adds	r3, #1
 801c620:	9308      	str	r3, [sp, #32]
 801c622:	e72a      	b.n	801c47a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801c624:	2a00      	cmp	r2, #0
 801c626:	d0e1      	beq.n	801c5ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801c628:	7813      	ldrb	r3, [r2, #0]
 801c62a:	e7d6      	b.n	801c5da <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 801c62c:	2b73      	cmp	r3, #115	; 0x73
 801c62e:	d036      	beq.n	801c69e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 801c630:	d807      	bhi.n	801c642 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 801c632:	2b6f      	cmp	r3, #111	; 0x6f
 801c634:	d1da      	bne.n	801c5ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801c636:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801c638:	1d25      	adds	r5, r4, #4
 801c63a:	eba8 0202 	sub.w	r2, r8, r2
 801c63e:	2308      	movs	r3, #8
 801c640:	e04a      	b.n	801c6d8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801c642:	2b75      	cmp	r3, #117	; 0x75
 801c644:	d043      	beq.n	801c6ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 801c646:	2b78      	cmp	r3, #120	; 0x78
 801c648:	d1d0      	bne.n	801c5ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801c64a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801c64c:	1d25      	adds	r5, r4, #4
 801c64e:	eba8 0202 	sub.w	r2, r8, r2
 801c652:	2310      	movs	r3, #16
 801c654:	e040      	b.n	801c6d8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801c656:	6823      	ldr	r3, [r4, #0]
 801c658:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 801c65c:	1d25      	adds	r5, r4, #4
 801c65e:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 801c662:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c664:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 801c668:	2b00      	cmp	r3, #0
 801c66a:	d052      	beq.n	801c712 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 801c66c:	881a      	ldrh	r2, [r3, #0]
 801c66e:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801c672:	a80d      	add	r0, sp, #52	; 0x34
 801c674:	9005      	str	r0, [sp, #20]
 801c676:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801c67a:	9004      	str	r0, [sp, #16]
 801c67c:	980e      	ldr	r0, [sp, #56]	; 0x38
 801c67e:	9003      	str	r0, [sp, #12]
 801c680:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 801c684:	9002      	str	r0, [sp, #8]
 801c686:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801c688:	9001      	str	r0, [sp, #4]
 801c68a:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801c68e:	9000      	str	r0, [sp, #0]
 801c690:	e9cd 8706 	strd	r8, r7, [sp, #24]
 801c694:	a810      	add	r0, sp, #64	; 0x40
 801c696:	f7ff fd49 	bl	801c12c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801c69a:	462c      	mov	r4, r5
 801c69c:	e7b7      	b.n	801c60e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801c69e:	6823      	ldr	r3, [r4, #0]
 801c6a0:	1d25      	adds	r5, r4, #4
 801c6a2:	9310      	str	r3, [sp, #64]	; 0x40
 801c6a4:	e7dd      	b.n	801c662 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801c6a6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801c6a8:	6820      	ldr	r0, [r4, #0]
 801c6aa:	eba8 0202 	sub.w	r2, r8, r2
 801c6ae:	230a      	movs	r3, #10
 801c6b0:	b292      	uxth	r2, r2
 801c6b2:	4649      	mov	r1, r9
 801c6b4:	f7ff fcf0 	bl	801c098 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 801c6b8:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801c6bc:	2b2d      	cmp	r3, #45	; 0x2d
 801c6be:	f104 0504 	add.w	r5, r4, #4
 801c6c2:	d1ce      	bne.n	801c662 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801c6c4:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801c6c8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c6ca:	3302      	adds	r3, #2
 801c6cc:	e7e9      	b.n	801c6a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 801c6ce:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801c6d0:	1d25      	adds	r5, r4, #4
 801c6d2:	eba8 0202 	sub.w	r2, r8, r2
 801c6d6:	230a      	movs	r3, #10
 801c6d8:	b292      	uxth	r2, r2
 801c6da:	4649      	mov	r1, r9
 801c6dc:	6820      	ldr	r0, [r4, #0]
 801c6de:	f7ff fd07 	bl	801c0f0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801c6e2:	e7be      	b.n	801c662 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801c6e4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801c6e6:	6820      	ldr	r0, [r4, #0]
 801c6e8:	eba8 0202 	sub.w	r2, r8, r2
 801c6ec:	b292      	uxth	r2, r2
 801c6ee:	2310      	movs	r3, #16
 801c6f0:	4649      	mov	r1, r9
 801c6f2:	f7ff fcfd 	bl	801c0f0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801c6f6:	1d25      	adds	r5, r4, #4
 801c6f8:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 801c6fc:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 801c700:	2b00      	cmp	r3, #0
 801c702:	d0ae      	beq.n	801c662 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801c704:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 801c708:	2919      	cmp	r1, #25
 801c70a:	d8f7      	bhi.n	801c6fc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801c70c:	3b20      	subs	r3, #32
 801c70e:	8013      	strh	r3, [r2, #0]
 801c710:	e7f4      	b.n	801c6fc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801c712:	9a08      	ldr	r2, [sp, #32]
 801c714:	2a00      	cmp	r2, #0
 801c716:	d0aa      	beq.n	801c66e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801c718:	7812      	ldrb	r2, [r2, #0]
 801c71a:	e7a8      	b.n	801c66e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801c71c:	2d00      	cmp	r5, #0
 801c71e:	f43f af47 	beq.w	801c5b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 801c722:	782d      	ldrb	r5, [r5, #0]
 801c724:	e744      	b.n	801c5b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0801c726 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 801c726:	b507      	push	{r0, r1, r2, lr}
 801c728:	9300      	str	r3, [sp, #0]
 801c72a:	4613      	mov	r3, r2
 801c72c:	2200      	movs	r2, #0
 801c72e:	f7ff fe90 	bl	801c452 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 801c732:	b003      	add	sp, #12
 801c734:	f85d fb04 	ldr.w	pc, [sp], #4

0801c738 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 801c738:	b40c      	push	{r2, r3}
 801c73a:	b507      	push	{r0, r1, r2, lr}
 801c73c:	ab04      	add	r3, sp, #16
 801c73e:	f853 2b04 	ldr.w	r2, [r3], #4
 801c742:	9301      	str	r3, [sp, #4]
 801c744:	f7ff ffef 	bl	801c726 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 801c748:	b003      	add	sp, #12
 801c74a:	f85d eb04 	ldr.w	lr, [sp], #4
 801c74e:	b002      	add	sp, #8
 801c750:	4770      	bx	lr
	...

0801c754 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 801c754:	4b01      	ldr	r3, [pc, #4]	; (801c75c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801c756:	6018      	str	r0, [r3, #0]
 801c758:	4770      	bx	lr
 801c75a:	bf00      	nop
 801c75c:	200022b4 	.word	0x200022b4

0801c760 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 801c760:	4b06      	ldr	r3, [pc, #24]	; (801c77c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 801c762:	881a      	ldrh	r2, [r3, #0]
 801c764:	4282      	cmp	r2, r0
 801c766:	d807      	bhi.n	801c778 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 801c768:	4b05      	ldr	r3, [pc, #20]	; (801c780 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801c76a:	881b      	ldrh	r3, [r3, #0]
 801c76c:	4413      	add	r3, r2
 801c76e:	4298      	cmp	r0, r3
 801c770:	bfac      	ite	ge
 801c772:	2000      	movge	r0, #0
 801c774:	2001      	movlt	r0, #1
 801c776:	4770      	bx	lr
 801c778:	2000      	movs	r0, #0
 801c77a:	4770      	bx	lr
 801c77c:	200022d4 	.word	0x200022d4
 801c780:	200022d8 	.word	0x200022d8

0801c784 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 801c784:	b508      	push	{r3, lr}
 801c786:	4601      	mov	r1, r0
 801c788:	f7ff ffea 	bl	801c760 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 801c78c:	b118      	cbz	r0, 801c796 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801c78e:	4b02      	ldr	r3, [pc, #8]	; (801c798 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 801c790:	681b      	ldr	r3, [r3, #0]
 801c792:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801c796:	bd08      	pop	{r3, pc}
 801c798:	200022b8 	.word	0x200022b8

0801c79c <_ZN8touchgfx6Bitmap10clearCacheEv>:
 801c79c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c79e:	4c24      	ldr	r4, [pc, #144]	; (801c830 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 801c7a0:	6823      	ldr	r3, [r4, #0]
 801c7a2:	2b00      	cmp	r3, #0
 801c7a4:	d042      	beq.n	801c82c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801c7a6:	4a23      	ldr	r2, [pc, #140]	; (801c834 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 801c7a8:	4d23      	ldr	r5, [pc, #140]	; (801c838 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801c7aa:	8811      	ldrh	r1, [r2, #0]
 801c7ac:	f8b5 c000 	ldrh.w	ip, [r5]
 801c7b0:	4822      	ldr	r0, [pc, #136]	; (801c83c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 801c7b2:	4461      	add	r1, ip
 801c7b4:	1c4a      	adds	r2, r1, #1
 801c7b6:	f022 0201 	bic.w	r2, r2, #1
 801c7ba:	008f      	lsls	r7, r1, #2
 801c7bc:	0412      	lsls	r2, r2, #16
 801c7be:	19de      	adds	r6, r3, r7
 801c7c0:	0c12      	lsrs	r2, r2, #16
 801c7c2:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 801c7c6:	6006      	str	r6, [r0, #0]
 801c7c8:	4e1d      	ldr	r6, [pc, #116]	; (801c840 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801c7ca:	19da      	adds	r2, r3, r7
 801c7cc:	6032      	str	r2, [r6, #0]
 801c7ce:	220e      	movs	r2, #14
 801c7d0:	fb02 f20c 	mul.w	r2, r2, ip
 801c7d4:	3203      	adds	r2, #3
 801c7d6:	f022 0203 	bic.w	r2, r2, #3
 801c7da:	443a      	add	r2, r7
 801c7dc:	4f19      	ldr	r7, [pc, #100]	; (801c844 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801c7de:	4413      	add	r3, r2
 801c7e0:	603b      	str	r3, [r7, #0]
 801c7e2:	4f19      	ldr	r7, [pc, #100]	; (801c848 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 801c7e4:	2300      	movs	r3, #0
 801c7e6:	803b      	strh	r3, [r7, #0]
 801c7e8:	4f18      	ldr	r7, [pc, #96]	; (801c84c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801c7ea:	683f      	ldr	r7, [r7, #0]
 801c7ec:	1aba      	subs	r2, r7, r2
 801c7ee:	4f18      	ldr	r7, [pc, #96]	; (801c850 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 801c7f0:	603a      	str	r2, [r7, #0]
 801c7f2:	4a18      	ldr	r2, [pc, #96]	; (801c854 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 801c7f4:	469c      	mov	ip, r3
 801c7f6:	8013      	strh	r3, [r2, #0]
 801c7f8:	f64f 77ff 	movw	r7, #65535	; 0xffff
 801c7fc:	428b      	cmp	r3, r1
 801c7fe:	d10d      	bne.n	801c81c <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 801c800:	882d      	ldrh	r5, [r5, #0]
 801c802:	6830      	ldr	r0, [r6, #0]
 801c804:	2300      	movs	r3, #0
 801c806:	240e      	movs	r4, #14
 801c808:	429d      	cmp	r5, r3
 801c80a:	d90f      	bls.n	801c82c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801c80c:	fb04 0203 	mla	r2, r4, r3, r0
 801c810:	3301      	adds	r3, #1
 801c812:	7b11      	ldrb	r1, [r2, #12]
 801c814:	f36f 1145 	bfc	r1, #5, #1
 801c818:	7311      	strb	r1, [r2, #12]
 801c81a:	e7f5      	b.n	801c808 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 801c81c:	6822      	ldr	r2, [r4, #0]
 801c81e:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 801c822:	6802      	ldr	r2, [r0, #0]
 801c824:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 801c828:	3301      	adds	r3, #1
 801c82a:	e7e7      	b.n	801c7fc <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 801c82c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c82e:	bf00      	nop
 801c830:	200022b8 	.word	0x200022b8
 801c834:	200022d4 	.word	0x200022d4
 801c838:	200022d8 	.word	0x200022d8
 801c83c:	200022cc 	.word	0x200022cc
 801c840:	200022bc 	.word	0x200022bc
 801c844:	200022c4 	.word	0x200022c4
 801c848:	200022d6 	.word	0x200022d6
 801c84c:	200022c0 	.word	0x200022c0
 801c850:	200022d0 	.word	0x200022d0
 801c854:	200022c8 	.word	0x200022c8

0801c858 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 801c858:	4b06      	ldr	r3, [pc, #24]	; (801c874 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801c85a:	681b      	ldr	r3, [r3, #0]
 801c85c:	b943      	cbnz	r3, 801c870 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801c85e:	b139      	cbz	r1, 801c870 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801c860:	4b05      	ldr	r3, [pc, #20]	; (801c878 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 801c862:	801a      	strh	r2, [r3, #0]
 801c864:	4b05      	ldr	r3, [pc, #20]	; (801c87c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 801c866:	6019      	str	r1, [r3, #0]
 801c868:	4b05      	ldr	r3, [pc, #20]	; (801c880 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801c86a:	6018      	str	r0, [r3, #0]
 801c86c:	f7ff bf96 	b.w	801c79c <_ZN8touchgfx6Bitmap10clearCacheEv>
 801c870:	4770      	bx	lr
 801c872:	bf00      	nop
 801c874:	200022c4 	.word	0x200022c4
 801c878:	200022d8 	.word	0x200022d8
 801c87c:	200022c0 	.word	0x200022c0
 801c880:	200022b8 	.word	0x200022b8

0801c884 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 801c884:	b470      	push	{r4, r5, r6}
 801c886:	4c07      	ldr	r4, [pc, #28]	; (801c8a4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 801c888:	6826      	ldr	r6, [r4, #0]
 801c88a:	4605      	mov	r5, r0
 801c88c:	4610      	mov	r0, r2
 801c88e:	9a03      	ldr	r2, [sp, #12]
 801c890:	b936      	cbnz	r6, 801c8a0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801c892:	6025      	str	r5, [r4, #0]
 801c894:	4c04      	ldr	r4, [pc, #16]	; (801c8a8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801c896:	8021      	strh	r1, [r4, #0]
 801c898:	bc70      	pop	{r4, r5, r6}
 801c89a:	4619      	mov	r1, r3
 801c89c:	f7ff bfdc 	b.w	801c858 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 801c8a0:	bc70      	pop	{r4, r5, r6}
 801c8a2:	4770      	bx	lr
 801c8a4:	200022dc 	.word	0x200022dc
 801c8a8:	200022d4 	.word	0x200022d4

0801c8ac <_ZNK8touchgfx6Bitmap8getWidthEv>:
 801c8ac:	4a12      	ldr	r2, [pc, #72]	; (801c8f8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801c8ae:	8803      	ldrh	r3, [r0, #0]
 801c8b0:	8812      	ldrh	r2, [r2, #0]
 801c8b2:	4293      	cmp	r3, r2
 801c8b4:	d207      	bcs.n	801c8c6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 801c8b6:	4a11      	ldr	r2, [pc, #68]	; (801c8fc <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 801c8b8:	6812      	ldr	r2, [r2, #0]
 801c8ba:	2114      	movs	r1, #20
 801c8bc:	fb01 2303 	mla	r3, r1, r3, r2
 801c8c0:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 801c8c4:	4770      	bx	lr
 801c8c6:	490e      	ldr	r1, [pc, #56]	; (801c900 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 801c8c8:	8809      	ldrh	r1, [r1, #0]
 801c8ca:	4411      	add	r1, r2
 801c8cc:	428b      	cmp	r3, r1
 801c8ce:	da04      	bge.n	801c8da <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 801c8d0:	1a9b      	subs	r3, r3, r2
 801c8d2:	4a0c      	ldr	r2, [pc, #48]	; (801c904 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 801c8d4:	210e      	movs	r1, #14
 801c8d6:	6812      	ldr	r2, [r2, #0]
 801c8d8:	e7f0      	b.n	801c8bc <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 801c8da:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c8de:	4293      	cmp	r3, r2
 801c8e0:	d108      	bne.n	801c8f4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 801c8e2:	4b09      	ldr	r3, [pc, #36]	; (801c908 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 801c8e4:	781b      	ldrb	r3, [r3, #0]
 801c8e6:	b91b      	cbnz	r3, 801c8f0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 801c8e8:	4b08      	ldr	r3, [pc, #32]	; (801c90c <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801c8ea:	f9b3 0000 	ldrsh.w	r0, [r3]
 801c8ee:	4770      	bx	lr
 801c8f0:	4b07      	ldr	r3, [pc, #28]	; (801c910 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 801c8f2:	e7fa      	b.n	801c8ea <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 801c8f4:	2000      	movs	r0, #0
 801c8f6:	4770      	bx	lr
 801c8f8:	200022d4 	.word	0x200022d4
 801c8fc:	200022dc 	.word	0x200022dc
 801c900:	200022d8 	.word	0x200022d8
 801c904:	200022bc 	.word	0x200022bc
 801c908:	20002244 	.word	0x20002244
 801c90c:	20002246 	.word	0x20002246
 801c910:	20002248 	.word	0x20002248

0801c914 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 801c914:	4a12      	ldr	r2, [pc, #72]	; (801c960 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801c916:	8803      	ldrh	r3, [r0, #0]
 801c918:	8812      	ldrh	r2, [r2, #0]
 801c91a:	4293      	cmp	r3, r2
 801c91c:	d207      	bcs.n	801c92e <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 801c91e:	4a11      	ldr	r2, [pc, #68]	; (801c964 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 801c920:	6812      	ldr	r2, [r2, #0]
 801c922:	2114      	movs	r1, #20
 801c924:	fb01 2303 	mla	r3, r1, r3, r2
 801c928:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 801c92c:	4770      	bx	lr
 801c92e:	490e      	ldr	r1, [pc, #56]	; (801c968 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 801c930:	8809      	ldrh	r1, [r1, #0]
 801c932:	4411      	add	r1, r2
 801c934:	428b      	cmp	r3, r1
 801c936:	da04      	bge.n	801c942 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 801c938:	1a9b      	subs	r3, r3, r2
 801c93a:	4a0c      	ldr	r2, [pc, #48]	; (801c96c <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 801c93c:	210e      	movs	r1, #14
 801c93e:	6812      	ldr	r2, [r2, #0]
 801c940:	e7f0      	b.n	801c924 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 801c942:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c946:	4293      	cmp	r3, r2
 801c948:	d108      	bne.n	801c95c <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801c94a:	4b09      	ldr	r3, [pc, #36]	; (801c970 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 801c94c:	781b      	ldrb	r3, [r3, #0]
 801c94e:	b91b      	cbnz	r3, 801c958 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 801c950:	4b08      	ldr	r3, [pc, #32]	; (801c974 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801c952:	f9b3 0000 	ldrsh.w	r0, [r3]
 801c956:	4770      	bx	lr
 801c958:	4b07      	ldr	r3, [pc, #28]	; (801c978 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801c95a:	e7fa      	b.n	801c952 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 801c95c:	2000      	movs	r0, #0
 801c95e:	4770      	bx	lr
 801c960:	200022d4 	.word	0x200022d4
 801c964:	200022dc 	.word	0x200022dc
 801c968:	200022d8 	.word	0x200022d8
 801c96c:	200022bc 	.word	0x200022bc
 801c970:	20002244 	.word	0x20002244
 801c974:	20002248 	.word	0x20002248
 801c978:	20002246 	.word	0x20002246

0801c97c <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 801c97c:	b510      	push	{r4, lr}
 801c97e:	4a1f      	ldr	r2, [pc, #124]	; (801c9fc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 801c980:	880b      	ldrh	r3, [r1, #0]
 801c982:	8812      	ldrh	r2, [r2, #0]
 801c984:	4293      	cmp	r3, r2
 801c986:	d213      	bcs.n	801c9b0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 801c988:	4a1d      	ldr	r2, [pc, #116]	; (801ca00 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 801c98a:	6812      	ldr	r2, [r2, #0]
 801c98c:	2114      	movs	r1, #20
 801c98e:	fb01 2303 	mla	r3, r1, r3, r2
 801c992:	8a1a      	ldrh	r2, [r3, #16]
 801c994:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 801c998:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801c99c:	8a5b      	ldrh	r3, [r3, #18]
 801c99e:	8004      	strh	r4, [r0, #0]
 801c9a0:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801c9a4:	f3c3 030c 	ubfx	r3, r3, #0, #13
 801c9a8:	8041      	strh	r1, [r0, #2]
 801c9aa:	8082      	strh	r2, [r0, #4]
 801c9ac:	80c3      	strh	r3, [r0, #6]
 801c9ae:	e00e      	b.n	801c9ce <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801c9b0:	4914      	ldr	r1, [pc, #80]	; (801ca04 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 801c9b2:	8809      	ldrh	r1, [r1, #0]
 801c9b4:	4411      	add	r1, r2
 801c9b6:	428b      	cmp	r3, r1
 801c9b8:	da0a      	bge.n	801c9d0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 801c9ba:	1a9b      	subs	r3, r3, r2
 801c9bc:	4a12      	ldr	r2, [pc, #72]	; (801ca08 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 801c9be:	6812      	ldr	r2, [r2, #0]
 801c9c0:	210e      	movs	r1, #14
 801c9c2:	fb01 2303 	mla	r3, r1, r3, r2
 801c9c6:	681a      	ldr	r2, [r3, #0]
 801c9c8:	6002      	str	r2, [r0, #0]
 801c9ca:	685a      	ldr	r2, [r3, #4]
 801c9cc:	6042      	str	r2, [r0, #4]
 801c9ce:	bd10      	pop	{r4, pc}
 801c9d0:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c9d4:	4293      	cmp	r3, r2
 801c9d6:	d10b      	bne.n	801c9f0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 801c9d8:	4b0c      	ldr	r3, [pc, #48]	; (801ca0c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801c9da:	f9b3 1000 	ldrsh.w	r1, [r3]
 801c9de:	4b0c      	ldr	r3, [pc, #48]	; (801ca10 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 801c9e0:	8081      	strh	r1, [r0, #4]
 801c9e2:	f9b3 2000 	ldrsh.w	r2, [r3]
 801c9e6:	80c2      	strh	r2, [r0, #6]
 801c9e8:	2300      	movs	r3, #0
 801c9ea:	8003      	strh	r3, [r0, #0]
 801c9ec:	8043      	strh	r3, [r0, #2]
 801c9ee:	e7ee      	b.n	801c9ce <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801c9f0:	2300      	movs	r3, #0
 801c9f2:	8003      	strh	r3, [r0, #0]
 801c9f4:	8043      	strh	r3, [r0, #2]
 801c9f6:	8083      	strh	r3, [r0, #4]
 801c9f8:	e7d8      	b.n	801c9ac <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801c9fa:	bf00      	nop
 801c9fc:	200022d4 	.word	0x200022d4
 801ca00:	200022dc 	.word	0x200022dc
 801ca04:	200022d8 	.word	0x200022d8
 801ca08:	200022bc 	.word	0x200022bc
 801ca0c:	20002240 	.word	0x20002240
 801ca10:	20002242 	.word	0x20002242

0801ca14 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 801ca14:	4a17      	ldr	r2, [pc, #92]	; (801ca74 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801ca16:	8803      	ldrh	r3, [r0, #0]
 801ca18:	8812      	ldrh	r2, [r2, #0]
 801ca1a:	4293      	cmp	r3, r2
 801ca1c:	d213      	bcs.n	801ca46 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801ca1e:	4a16      	ldr	r2, [pc, #88]	; (801ca78 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 801ca20:	6812      	ldr	r2, [r2, #0]
 801ca22:	2114      	movs	r1, #20
 801ca24:	fb01 2303 	mla	r3, r1, r3, r2
 801ca28:	8a1a      	ldrh	r2, [r3, #16]
 801ca2a:	8919      	ldrh	r1, [r3, #8]
 801ca2c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801ca30:	428a      	cmp	r2, r1
 801ca32:	db1d      	blt.n	801ca70 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801ca34:	8a58      	ldrh	r0, [r3, #18]
 801ca36:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801ca3a:	895b      	ldrh	r3, [r3, #10]
 801ca3c:	4298      	cmp	r0, r3
 801ca3e:	bfac      	ite	ge
 801ca40:	2000      	movge	r0, #0
 801ca42:	2001      	movlt	r0, #1
 801ca44:	4770      	bx	lr
 801ca46:	490d      	ldr	r1, [pc, #52]	; (801ca7c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 801ca48:	8809      	ldrh	r1, [r1, #0]
 801ca4a:	4411      	add	r1, r2
 801ca4c:	428b      	cmp	r3, r1
 801ca4e:	da0d      	bge.n	801ca6c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 801ca50:	1a9b      	subs	r3, r3, r2
 801ca52:	4a0b      	ldr	r2, [pc, #44]	; (801ca80 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 801ca54:	6812      	ldr	r2, [r2, #0]
 801ca56:	210e      	movs	r1, #14
 801ca58:	fb01 2303 	mla	r3, r1, r3, r2
 801ca5c:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 801ca60:	891a      	ldrh	r2, [r3, #8]
 801ca62:	4291      	cmp	r1, r2
 801ca64:	db04      	blt.n	801ca70 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801ca66:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801ca6a:	e7e6      	b.n	801ca3a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 801ca6c:	2000      	movs	r0, #0
 801ca6e:	4770      	bx	lr
 801ca70:	2001      	movs	r0, #1
 801ca72:	4770      	bx	lr
 801ca74:	200022d4 	.word	0x200022d4
 801ca78:	200022dc 	.word	0x200022dc
 801ca7c:	200022d8 	.word	0x200022d8
 801ca80:	200022bc 	.word	0x200022bc

0801ca84 <_ZNK8touchgfx6Bitmap7getDataEv>:
 801ca84:	4a12      	ldr	r2, [pc, #72]	; (801cad0 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801ca86:	8803      	ldrh	r3, [r0, #0]
 801ca88:	8811      	ldrh	r1, [r2, #0]
 801ca8a:	428b      	cmp	r3, r1
 801ca8c:	d20b      	bcs.n	801caa6 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801ca8e:	4a11      	ldr	r2, [pc, #68]	; (801cad4 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801ca90:	6812      	ldr	r2, [r2, #0]
 801ca92:	b112      	cbz	r2, 801ca9a <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 801ca94:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801ca98:	b9c0      	cbnz	r0, 801cacc <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 801ca9a:	4a0f      	ldr	r2, [pc, #60]	; (801cad8 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 801ca9c:	6811      	ldr	r1, [r2, #0]
 801ca9e:	2214      	movs	r2, #20
 801caa0:	4353      	muls	r3, r2
 801caa2:	58c8      	ldr	r0, [r1, r3]
 801caa4:	4770      	bx	lr
 801caa6:	4a0d      	ldr	r2, [pc, #52]	; (801cadc <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 801caa8:	8812      	ldrh	r2, [r2, #0]
 801caaa:	440a      	add	r2, r1
 801caac:	4293      	cmp	r3, r2
 801caae:	da04      	bge.n	801caba <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 801cab0:	4a08      	ldr	r2, [pc, #32]	; (801cad4 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801cab2:	6812      	ldr	r2, [r2, #0]
 801cab4:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801cab8:	4770      	bx	lr
 801caba:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801cabe:	4293      	cmp	r3, r2
 801cac0:	d103      	bne.n	801caca <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801cac2:	4b07      	ldr	r3, [pc, #28]	; (801cae0 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 801cac4:	681b      	ldr	r3, [r3, #0]
 801cac6:	6c58      	ldr	r0, [r3, #68]	; 0x44
 801cac8:	4770      	bx	lr
 801caca:	2000      	movs	r0, #0
 801cacc:	4770      	bx	lr
 801cace:	bf00      	nop
 801cad0:	200022d4 	.word	0x200022d4
 801cad4:	200022b8 	.word	0x200022b8
 801cad8:	200022dc 	.word	0x200022dc
 801cadc:	200022d8 	.word	0x200022d8
 801cae0:	2000224c 	.word	0x2000224c

0801cae4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 801cae4:	4b24      	ldr	r3, [pc, #144]	; (801cb78 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801cae6:	8802      	ldrh	r2, [r0, #0]
 801cae8:	8818      	ldrh	r0, [r3, #0]
 801caea:	4282      	cmp	r2, r0
 801caec:	d221      	bcs.n	801cb32 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801caee:	4b23      	ldr	r3, [pc, #140]	; (801cb7c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 801caf0:	6819      	ldr	r1, [r3, #0]
 801caf2:	2314      	movs	r3, #20
 801caf4:	fb03 1302 	mla	r3, r3, r2, r1
 801caf8:	6858      	ldr	r0, [r3, #4]
 801cafa:	2800      	cmp	r0, #0
 801cafc:	d03a      	beq.n	801cb74 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801cafe:	4920      	ldr	r1, [pc, #128]	; (801cb80 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801cb00:	6809      	ldr	r1, [r1, #0]
 801cb02:	2900      	cmp	r1, #0
 801cb04:	d036      	beq.n	801cb74 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801cb06:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801cb0a:	2900      	cmp	r1, #0
 801cb0c:	d032      	beq.n	801cb74 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801cb0e:	891a      	ldrh	r2, [r3, #8]
 801cb10:	8958      	ldrh	r0, [r3, #10]
 801cb12:	4350      	muls	r0, r2
 801cb14:	7c5a      	ldrb	r2, [r3, #17]
 801cb16:	7cdb      	ldrb	r3, [r3, #19]
 801cb18:	0952      	lsrs	r2, r2, #5
 801cb1a:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801cb1e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801cb22:	2b0b      	cmp	r3, #11
 801cb24:	bf18      	it	ne
 801cb26:	0040      	lslne	r0, r0, #1
 801cb28:	3003      	adds	r0, #3
 801cb2a:	f020 0003 	bic.w	r0, r0, #3
 801cb2e:	4408      	add	r0, r1
 801cb30:	4770      	bx	lr
 801cb32:	4b14      	ldr	r3, [pc, #80]	; (801cb84 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 801cb34:	881b      	ldrh	r3, [r3, #0]
 801cb36:	4403      	add	r3, r0
 801cb38:	429a      	cmp	r2, r3
 801cb3a:	da1a      	bge.n	801cb72 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801cb3c:	4b12      	ldr	r3, [pc, #72]	; (801cb88 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801cb3e:	681b      	ldr	r3, [r3, #0]
 801cb40:	1a10      	subs	r0, r2, r0
 801cb42:	210e      	movs	r1, #14
 801cb44:	fb01 3000 	mla	r0, r1, r0, r3
 801cb48:	7b03      	ldrb	r3, [r0, #12]
 801cb4a:	f003 031f 	and.w	r3, r3, #31
 801cb4e:	2b0b      	cmp	r3, #11
 801cb50:	d10b      	bne.n	801cb6a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801cb52:	8903      	ldrh	r3, [r0, #8]
 801cb54:	8940      	ldrh	r0, [r0, #10]
 801cb56:	4358      	muls	r0, r3
 801cb58:	4b09      	ldr	r3, [pc, #36]	; (801cb80 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801cb5a:	6819      	ldr	r1, [r3, #0]
 801cb5c:	3003      	adds	r0, #3
 801cb5e:	f020 0303 	bic.w	r3, r0, #3
 801cb62:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801cb66:	4418      	add	r0, r3
 801cb68:	4770      	bx	lr
 801cb6a:	2b0d      	cmp	r3, #13
 801cb6c:	d101      	bne.n	801cb72 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801cb6e:	300d      	adds	r0, #13
 801cb70:	4770      	bx	lr
 801cb72:	2000      	movs	r0, #0
 801cb74:	4770      	bx	lr
 801cb76:	bf00      	nop
 801cb78:	200022d4 	.word	0x200022d4
 801cb7c:	200022dc 	.word	0x200022dc
 801cb80:	200022b8 	.word	0x200022b8
 801cb84:	200022d8 	.word	0x200022d8
 801cb88:	200022bc 	.word	0x200022bc

0801cb8c <_ZNK8touchgfx6Bitmap9getFormatEv>:
 801cb8c:	b510      	push	{r4, lr}
 801cb8e:	4a17      	ldr	r2, [pc, #92]	; (801cbec <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 801cb90:	8803      	ldrh	r3, [r0, #0]
 801cb92:	8812      	ldrh	r2, [r2, #0]
 801cb94:	4293      	cmp	r3, r2
 801cb96:	d20c      	bcs.n	801cbb2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 801cb98:	4a15      	ldr	r2, [pc, #84]	; (801cbf0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 801cb9a:	6812      	ldr	r2, [r2, #0]
 801cb9c:	2114      	movs	r1, #20
 801cb9e:	fb01 2303 	mla	r3, r1, r3, r2
 801cba2:	7c58      	ldrb	r0, [r3, #17]
 801cba4:	0942      	lsrs	r2, r0, #5
 801cba6:	7cd8      	ldrb	r0, [r3, #19]
 801cba8:	f3c0 1042 	ubfx	r0, r0, #5, #3
 801cbac:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 801cbb0:	bd10      	pop	{r4, pc}
 801cbb2:	4910      	ldr	r1, [pc, #64]	; (801cbf4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 801cbb4:	8809      	ldrh	r1, [r1, #0]
 801cbb6:	4411      	add	r1, r2
 801cbb8:	428b      	cmp	r3, r1
 801cbba:	da09      	bge.n	801cbd0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 801cbbc:	1a9b      	subs	r3, r3, r2
 801cbbe:	4a0e      	ldr	r2, [pc, #56]	; (801cbf8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 801cbc0:	6812      	ldr	r2, [r2, #0]
 801cbc2:	210e      	movs	r1, #14
 801cbc4:	fb01 2303 	mla	r3, r1, r3, r2
 801cbc8:	7b18      	ldrb	r0, [r3, #12]
 801cbca:	f000 001f 	and.w	r0, r0, #31
 801cbce:	e7ef      	b.n	801cbb0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801cbd0:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801cbd4:	4293      	cmp	r3, r2
 801cbd6:	d106      	bne.n	801cbe6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 801cbd8:	f7ee f9d4 	bl	800af84 <_ZN8touchgfx3HAL3lcdEv>
 801cbdc:	6803      	ldr	r3, [r0, #0]
 801cbde:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801cbe2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cbe4:	4718      	bx	r3
 801cbe6:	2000      	movs	r0, #0
 801cbe8:	e7e2      	b.n	801cbb0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801cbea:	bf00      	nop
 801cbec:	200022d4 	.word	0x200022d4
 801cbf0:	200022dc 	.word	0x200022dc
 801cbf4:	200022d8 	.word	0x200022d8
 801cbf8:	200022bc 	.word	0x200022bc

0801cbfc <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 801cbfc:	2010      	movs	r0, #16
 801cbfe:	4770      	bx	lr

0801cc00 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 801cc00:	2000      	movs	r0, #0
 801cc02:	4770      	bx	lr

0801cc04 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801cc04:	4b02      	ldr	r3, [pc, #8]	; (801cc10 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801cc06:	8818      	ldrh	r0, [r3, #0]
 801cc08:	0040      	lsls	r0, r0, #1
 801cc0a:	b280      	uxth	r0, r0
 801cc0c:	4770      	bx	lr
 801cc0e:	bf00      	nop
 801cc10:	20002246 	.word	0x20002246

0801cc14 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801cc14:	2bff      	cmp	r3, #255	; 0xff
 801cc16:	d050      	beq.n	801ccba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801cc18:	2a0b      	cmp	r2, #11
 801cc1a:	d04a      	beq.n	801ccb2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801cc1c:	d80e      	bhi.n	801cc3c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801cc1e:	2a03      	cmp	r2, #3
 801cc20:	d03f      	beq.n	801cca2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 801cc22:	d804      	bhi.n	801cc2e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 801cc24:	2a01      	cmp	r2, #1
 801cc26:	d03e      	beq.n	801cca6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 801cc28:	d93f      	bls.n	801ccaa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801cc2a:	6b80      	ldr	r0, [r0, #56]	; 0x38
 801cc2c:	4770      	bx	lr
 801cc2e:	2a09      	cmp	r2, #9
 801cc30:	d03f      	beq.n	801ccb2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801cc32:	d83c      	bhi.n	801ccae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801cc34:	2a08      	cmp	r2, #8
 801cc36:	d03a      	beq.n	801ccae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801cc38:	2000      	movs	r0, #0
 801cc3a:	4770      	bx	lr
 801cc3c:	2a2f      	cmp	r2, #47	; 0x2f
 801cc3e:	d024      	beq.n	801cc8a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 801cc40:	d80d      	bhi.n	801cc5e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 801cc42:	2a2d      	cmp	r2, #45	; 0x2d
 801cc44:	d014      	beq.n	801cc70 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801cc46:	d826      	bhi.n	801cc96 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801cc48:	2a2c      	cmp	r2, #44	; 0x2c
 801cc4a:	d1f5      	bne.n	801cc38 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801cc4c:	684b      	ldr	r3, [r1, #4]
 801cc4e:	781b      	ldrb	r3, [r3, #0]
 801cc50:	2b01      	cmp	r3, #1
 801cc52:	d018      	beq.n	801cc86 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 801cc54:	d323      	bcc.n	801cc9e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801cc56:	2b02      	cmp	r3, #2
 801cc58:	d1ee      	bne.n	801cc38 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801cc5a:	6880      	ldr	r0, [r0, #8]
 801cc5c:	4770      	bx	lr
 801cc5e:	2a31      	cmp	r2, #49	; 0x31
 801cc60:	d004      	beq.n	801cc6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 801cc62:	d328      	bcc.n	801ccb6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801cc64:	2a32      	cmp	r2, #50	; 0x32
 801cc66:	d026      	beq.n	801ccb6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801cc68:	2a33      	cmp	r2, #51	; 0x33
 801cc6a:	d1e5      	bne.n	801cc38 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801cc6c:	6f00      	ldr	r0, [r0, #112]	; 0x70
 801cc6e:	4770      	bx	lr
 801cc70:	684b      	ldr	r3, [r1, #4]
 801cc72:	781b      	ldrb	r3, [r3, #0]
 801cc74:	2b01      	cmp	r3, #1
 801cc76:	d004      	beq.n	801cc82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 801cc78:	d30b      	bcc.n	801cc92 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801cc7a:	2b02      	cmp	r3, #2
 801cc7c:	d1dc      	bne.n	801cc38 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801cc7e:	6900      	ldr	r0, [r0, #16]
 801cc80:	4770      	bx	lr
 801cc82:	6a00      	ldr	r0, [r0, #32]
 801cc84:	4770      	bx	lr
 801cc86:	6980      	ldr	r0, [r0, #24]
 801cc88:	4770      	bx	lr
 801cc8a:	684b      	ldr	r3, [r1, #4]
 801cc8c:	781b      	ldrb	r3, [r3, #0]
 801cc8e:	2b00      	cmp	r3, #0
 801cc90:	d1d2      	bne.n	801cc38 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801cc92:	6b00      	ldr	r0, [r0, #48]	; 0x30
 801cc94:	4770      	bx	lr
 801cc96:	684b      	ldr	r3, [r1, #4]
 801cc98:	781b      	ldrb	r3, [r3, #0]
 801cc9a:	2b00      	cmp	r3, #0
 801cc9c:	d1cc      	bne.n	801cc38 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801cc9e:	6a80      	ldr	r0, [r0, #40]	; 0x28
 801cca0:	4770      	bx	lr
 801cca2:	6c80      	ldr	r0, [r0, #72]	; 0x48
 801cca4:	4770      	bx	lr
 801cca6:	6d00      	ldr	r0, [r0, #80]	; 0x50
 801cca8:	4770      	bx	lr
 801ccaa:	6c00      	ldr	r0, [r0, #64]	; 0x40
 801ccac:	4770      	bx	lr
 801ccae:	6d80      	ldr	r0, [r0, #88]	; 0x58
 801ccb0:	4770      	bx	lr
 801ccb2:	6e00      	ldr	r0, [r0, #96]	; 0x60
 801ccb4:	4770      	bx	lr
 801ccb6:	6e80      	ldr	r0, [r0, #104]	; 0x68
 801ccb8:	4770      	bx	lr
 801ccba:	2a0b      	cmp	r2, #11
 801ccbc:	d049      	beq.n	801cd52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801ccbe:	d80e      	bhi.n	801ccde <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 801ccc0:	2a03      	cmp	r2, #3
 801ccc2:	d040      	beq.n	801cd46 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 801ccc4:	d804      	bhi.n	801ccd0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 801ccc6:	2a01      	cmp	r2, #1
 801ccc8:	d03f      	beq.n	801cd4a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 801ccca:	d940      	bls.n	801cd4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 801cccc:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 801ccce:	4770      	bx	lr
 801ccd0:	2a09      	cmp	r2, #9
 801ccd2:	d03e      	beq.n	801cd52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801ccd4:	d801      	bhi.n	801ccda <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 801ccd6:	2a08      	cmp	r2, #8
 801ccd8:	d1ae      	bne.n	801cc38 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ccda:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 801ccdc:	4770      	bx	lr
 801ccde:	2a2f      	cmp	r2, #47	; 0x2f
 801cce0:	d024      	beq.n	801cd2c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 801cce2:	d80d      	bhi.n	801cd00 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 801cce4:	2a2d      	cmp	r2, #45	; 0x2d
 801cce6:	d014      	beq.n	801cd12 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 801cce8:	d826      	bhi.n	801cd38 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 801ccea:	2a2c      	cmp	r2, #44	; 0x2c
 801ccec:	d1a4      	bne.n	801cc38 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ccee:	684b      	ldr	r3, [r1, #4]
 801ccf0:	781b      	ldrb	r3, [r3, #0]
 801ccf2:	2b01      	cmp	r3, #1
 801ccf4:	d018      	beq.n	801cd28 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 801ccf6:	d324      	bcc.n	801cd42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 801ccf8:	2b02      	cmp	r3, #2
 801ccfa:	d19d      	bne.n	801cc38 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ccfc:	68c0      	ldr	r0, [r0, #12]
 801ccfe:	4770      	bx	lr
 801cd00:	2a31      	cmp	r2, #49	; 0x31
 801cd02:	d004      	beq.n	801cd0e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 801cd04:	d327      	bcc.n	801cd56 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801cd06:	2a32      	cmp	r2, #50	; 0x32
 801cd08:	d025      	beq.n	801cd56 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801cd0a:	2a33      	cmp	r2, #51	; 0x33
 801cd0c:	d194      	bne.n	801cc38 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801cd0e:	6f40      	ldr	r0, [r0, #116]	; 0x74
 801cd10:	4770      	bx	lr
 801cd12:	684b      	ldr	r3, [r1, #4]
 801cd14:	781b      	ldrb	r3, [r3, #0]
 801cd16:	2b01      	cmp	r3, #1
 801cd18:	d004      	beq.n	801cd24 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801cd1a:	d30b      	bcc.n	801cd34 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 801cd1c:	2b02      	cmp	r3, #2
 801cd1e:	d18b      	bne.n	801cc38 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801cd20:	6940      	ldr	r0, [r0, #20]
 801cd22:	4770      	bx	lr
 801cd24:	6a40      	ldr	r0, [r0, #36]	; 0x24
 801cd26:	4770      	bx	lr
 801cd28:	69c0      	ldr	r0, [r0, #28]
 801cd2a:	4770      	bx	lr
 801cd2c:	684b      	ldr	r3, [r1, #4]
 801cd2e:	781b      	ldrb	r3, [r3, #0]
 801cd30:	2b00      	cmp	r3, #0
 801cd32:	d181      	bne.n	801cc38 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801cd34:	6b40      	ldr	r0, [r0, #52]	; 0x34
 801cd36:	4770      	bx	lr
 801cd38:	684b      	ldr	r3, [r1, #4]
 801cd3a:	781b      	ldrb	r3, [r3, #0]
 801cd3c:	2b00      	cmp	r3, #0
 801cd3e:	f47f af7b 	bne.w	801cc38 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801cd42:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 801cd44:	4770      	bx	lr
 801cd46:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 801cd48:	4770      	bx	lr
 801cd4a:	6d40      	ldr	r0, [r0, #84]	; 0x54
 801cd4c:	4770      	bx	lr
 801cd4e:	6c40      	ldr	r0, [r0, #68]	; 0x44
 801cd50:	4770      	bx	lr
 801cd52:	6e40      	ldr	r0, [r0, #100]	; 0x64
 801cd54:	4770      	bx	lr
 801cd56:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 801cd58:	4770      	bx	lr

0801cd5a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cd5a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cd5e:	b087      	sub	sp, #28
 801cd60:	9815      	ldr	r0, [sp, #84]	; 0x54
 801cd62:	9205      	str	r2, [sp, #20]
 801cd64:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801cd68:	9202      	str	r2, [sp, #8]
 801cd6a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801cd6e:	9101      	str	r1, [sp, #4]
 801cd70:	6841      	ldr	r1, [r0, #4]
 801cd72:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801cd76:	fb01 2404 	mla	r4, r1, r4, r2
 801cd7a:	6802      	ldr	r2, [r0, #0]
 801cd7c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801cd80:	f8de 2000 	ldr.w	r2, [lr]
 801cd84:	9203      	str	r2, [sp, #12]
 801cd86:	f8de 2004 	ldr.w	r2, [lr, #4]
 801cd8a:	3204      	adds	r2, #4
 801cd8c:	9204      	str	r2, [sp, #16]
 801cd8e:	9a02      	ldr	r2, [sp, #8]
 801cd90:	43d6      	mvns	r6, r2
 801cd92:	b2f6      	uxtb	r6, r6
 801cd94:	9a01      	ldr	r2, [sp, #4]
 801cd96:	2a00      	cmp	r2, #0
 801cd98:	dc03      	bgt.n	801cda2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801cd9a:	9a05      	ldr	r2, [sp, #20]
 801cd9c:	2a00      	cmp	r2, #0
 801cd9e:	f340 8129 	ble.w	801cff4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801cda2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801cda4:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801cda8:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801cdac:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801cdb0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801cdb2:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801cdb6:	2b00      	cmp	r3, #0
 801cdb8:	dd0e      	ble.n	801cdd8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801cdba:	1408      	asrs	r0, r1, #16
 801cdbc:	d405      	bmi.n	801cdca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801cdbe:	4560      	cmp	r0, ip
 801cdc0:	da03      	bge.n	801cdca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801cdc2:	1410      	asrs	r0, r2, #16
 801cdc4:	d401      	bmi.n	801cdca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801cdc6:	42b8      	cmp	r0, r7
 801cdc8:	db07      	blt.n	801cdda <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801cdca:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801cdcc:	4401      	add	r1, r0
 801cdce:	9814      	ldr	r0, [sp, #80]	; 0x50
 801cdd0:	3b01      	subs	r3, #1
 801cdd2:	4402      	add	r2, r0
 801cdd4:	3402      	adds	r4, #2
 801cdd6:	e7ee      	b.n	801cdb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801cdd8:	d071      	beq.n	801cebe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801cdda:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801cddc:	1e58      	subs	r0, r3, #1
 801cdde:	fb05 1500 	mla	r5, r5, r0, r1
 801cde2:	142d      	asrs	r5, r5, #16
 801cde4:	d45f      	bmi.n	801cea6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801cde6:	4565      	cmp	r5, ip
 801cde8:	da5d      	bge.n	801cea6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801cdea:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801cdec:	fb05 2000 	mla	r0, r5, r0, r2
 801cdf0:	1400      	asrs	r0, r0, #16
 801cdf2:	d458      	bmi.n	801cea6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801cdf4:	42b8      	cmp	r0, r7
 801cdf6:	da56      	bge.n	801cea6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801cdf8:	f8bd b008 	ldrh.w	fp, [sp, #8]
 801cdfc:	4699      	mov	r9, r3
 801cdfe:	46a2      	mov	sl, r4
 801ce00:	f1b9 0f00 	cmp.w	r9, #0
 801ce04:	dd57      	ble.n	801ceb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801ce06:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801ce0a:	9803      	ldr	r0, [sp, #12]
 801ce0c:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801ce10:	140d      	asrs	r5, r1, #16
 801ce12:	fb07 000c 	mla	r0, r7, ip, r0
 801ce16:	f109 39ff 	add.w	r9, r9, #4294967295
 801ce1a:	5d40      	ldrb	r0, [r0, r5]
 801ce1c:	9d04      	ldr	r5, [sp, #16]
 801ce1e:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801ce22:	f8ba 5000 	ldrh.w	r5, [sl]
 801ce26:	122f      	asrs	r7, r5, #8
 801ce28:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801ce2c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ce30:	fb17 f706 	smulbb	r7, r7, r6
 801ce34:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801ce38:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ce3c:	00ed      	lsls	r5, r5, #3
 801ce3e:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801ce42:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801ce46:	10c7      	asrs	r7, r0, #3
 801ce48:	b2ed      	uxtb	r5, r5
 801ce4a:	00c0      	lsls	r0, r0, #3
 801ce4c:	fb18 f806 	smulbb	r8, r8, r6
 801ce50:	fb15 f506 	smulbb	r5, r5, r6
 801ce54:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ce58:	b2c0      	uxtb	r0, r0
 801ce5a:	fa1f fc8c 	uxth.w	ip, ip
 801ce5e:	fb07 870b 	mla	r7, r7, fp, r8
 801ce62:	fb00 500b 	mla	r0, r0, fp, r5
 801ce66:	b280      	uxth	r0, r0
 801ce68:	b2bf      	uxth	r7, r7
 801ce6a:	f10c 0501 	add.w	r5, ip, #1
 801ce6e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801ce72:	f107 0801 	add.w	r8, r7, #1
 801ce76:	1c45      	adds	r5, r0, #1
 801ce78:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801ce7c:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801ce80:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ce82:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ce86:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801ce8a:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801ce8e:	ea45 0c0c 	orr.w	ip, r5, ip
 801ce92:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801ce96:	4401      	add	r1, r0
 801ce98:	9814      	ldr	r0, [sp, #80]	; 0x50
 801ce9a:	ea4c 0c08 	orr.w	ip, ip, r8
 801ce9e:	f82a cb02 	strh.w	ip, [sl], #2
 801cea2:	4402      	add	r2, r0
 801cea4:	e7ac      	b.n	801ce00 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801cea6:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801ceaa:	f04f 0800 	mov.w	r8, #0
 801ceae:	eb03 0008 	add.w	r0, r3, r8
 801ceb2:	2800      	cmp	r0, #0
 801ceb4:	dc41      	bgt.n	801cf3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801ceb6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ceba:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801cebe:	9b01      	ldr	r3, [sp, #4]
 801cec0:	2b00      	cmp	r3, #0
 801cec2:	f340 8097 	ble.w	801cff4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801cec6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ceca:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801cece:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ced2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ced4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ced8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cedc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cee0:	eef0 6a62 	vmov.f32	s13, s5
 801cee4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cee8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ceec:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cef0:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801cef4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cef8:	eef0 6a43 	vmov.f32	s13, s6
 801cefc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cf00:	ee12 2a90 	vmov	r2, s5
 801cf04:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cf08:	fb92 f3f3 	sdiv	r3, r2, r3
 801cf0c:	ee13 2a10 	vmov	r2, s6
 801cf10:	9313      	str	r3, [sp, #76]	; 0x4c
 801cf12:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cf14:	fb92 f3f3 	sdiv	r3, r2, r3
 801cf18:	9314      	str	r3, [sp, #80]	; 0x50
 801cf1a:	9b01      	ldr	r3, [sp, #4]
 801cf1c:	9a05      	ldr	r2, [sp, #20]
 801cf1e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cf22:	3b01      	subs	r3, #1
 801cf24:	9301      	str	r3, [sp, #4]
 801cf26:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801cf2a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cf2c:	eeb0 3a67 	vmov.f32	s6, s15
 801cf30:	bf08      	it	eq
 801cf32:	4613      	moveq	r3, r2
 801cf34:	eef0 2a47 	vmov.f32	s5, s14
 801cf38:	e72c      	b.n	801cd94 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801cf3a:	140f      	asrs	r7, r1, #16
 801cf3c:	d453      	bmi.n	801cfe6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801cf3e:	f8de 5008 	ldr.w	r5, [lr, #8]
 801cf42:	42bd      	cmp	r5, r7
 801cf44:	dd4f      	ble.n	801cfe6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801cf46:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801cf4a:	d44c      	bmi.n	801cfe6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801cf4c:	f8de 000c 	ldr.w	r0, [lr, #12]
 801cf50:	4560      	cmp	r0, ip
 801cf52:	dd48      	ble.n	801cfe6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801cf54:	9803      	ldr	r0, [sp, #12]
 801cf56:	b22d      	sxth	r5, r5
 801cf58:	fb0c 0505 	mla	r5, ip, r5, r0
 801cf5c:	5de8      	ldrb	r0, [r5, r7]
 801cf5e:	9d04      	ldr	r5, [sp, #16]
 801cf60:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801cf64:	f06f 0501 	mvn.w	r5, #1
 801cf68:	fb05 fb08 	mul.w	fp, r5, r8
 801cf6c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801cf70:	f834 500b 	ldrh.w	r5, [r4, fp]
 801cf74:	122f      	asrs	r7, r5, #8
 801cf76:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801cf7a:	fb17 f706 	smulbb	r7, r7, r6
 801cf7e:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801cf82:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801cf86:	00ed      	lsls	r5, r5, #3
 801cf88:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801cf8c:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801cf90:	10c7      	asrs	r7, r0, #3
 801cf92:	b2ed      	uxtb	r5, r5
 801cf94:	00c0      	lsls	r0, r0, #3
 801cf96:	fb19 f906 	smulbb	r9, r9, r6
 801cf9a:	fb15 f506 	smulbb	r5, r5, r6
 801cf9e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801cfa2:	b2c0      	uxtb	r0, r0
 801cfa4:	fa1f fc8c 	uxth.w	ip, ip
 801cfa8:	fb07 970a 	mla	r7, r7, sl, r9
 801cfac:	fb00 500a 	mla	r0, r0, sl, r5
 801cfb0:	b2bf      	uxth	r7, r7
 801cfb2:	b280      	uxth	r0, r0
 801cfb4:	f10c 0501 	add.w	r5, ip, #1
 801cfb8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801cfbc:	f107 0901 	add.w	r9, r7, #1
 801cfc0:	1c45      	adds	r5, r0, #1
 801cfc2:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801cfc6:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801cfca:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801cfce:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801cfd2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801cfd6:	ea45 0c0c 	orr.w	ip, r5, ip
 801cfda:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801cfde:	ea4c 0c09 	orr.w	ip, ip, r9
 801cfe2:	f824 c00b 	strh.w	ip, [r4, fp]
 801cfe6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801cfe8:	4401      	add	r1, r0
 801cfea:	9814      	ldr	r0, [sp, #80]	; 0x50
 801cfec:	f108 38ff 	add.w	r8, r8, #4294967295
 801cff0:	4402      	add	r2, r0
 801cff2:	e75c      	b.n	801ceae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801cff4:	b007      	add	sp, #28
 801cff6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801cffa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cffa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cffe:	b085      	sub	sp, #20
 801d000:	4693      	mov	fp, r2
 801d002:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801d004:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801d006:	6870      	ldr	r0, [r6, #4]
 801d008:	9100      	str	r1, [sp, #0]
 801d00a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801d00e:	fb00 2404 	mla	r4, r0, r4, r2
 801d012:	6832      	ldr	r2, [r6, #0]
 801d014:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801d018:	682a      	ldr	r2, [r5, #0]
 801d01a:	9201      	str	r2, [sp, #4]
 801d01c:	686a      	ldr	r2, [r5, #4]
 801d01e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801d022:	3204      	adds	r2, #4
 801d024:	9202      	str	r2, [sp, #8]
 801d026:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d02a:	9a00      	ldr	r2, [sp, #0]
 801d02c:	2a00      	cmp	r2, #0
 801d02e:	dc03      	bgt.n	801d038 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801d030:	f1bb 0f00 	cmp.w	fp, #0
 801d034:	f340 80a0 	ble.w	801d178 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801d038:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d03a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801d03e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801d042:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801d046:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d048:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801d04c:	2b00      	cmp	r3, #0
 801d04e:	dd0c      	ble.n	801d06a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801d050:	1406      	asrs	r6, r0, #16
 801d052:	d405      	bmi.n	801d060 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d054:	454e      	cmp	r6, r9
 801d056:	da03      	bge.n	801d060 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d058:	1416      	asrs	r6, r2, #16
 801d05a:	d401      	bmi.n	801d060 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d05c:	4546      	cmp	r6, r8
 801d05e:	db05      	blt.n	801d06c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801d060:	4470      	add	r0, lr
 801d062:	4462      	add	r2, ip
 801d064:	3b01      	subs	r3, #1
 801d066:	3402      	adds	r4, #2
 801d068:	e7f0      	b.n	801d04c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801d06a:	d00f      	beq.n	801d08c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d06c:	1e5e      	subs	r6, r3, #1
 801d06e:	fb0e 0706 	mla	r7, lr, r6, r0
 801d072:	143f      	asrs	r7, r7, #16
 801d074:	d541      	bpl.n	801d0fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801d076:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801d07a:	4698      	mov	r8, r3
 801d07c:	9603      	str	r6, [sp, #12]
 801d07e:	f1b8 0f00 	cmp.w	r8, #0
 801d082:	dc59      	bgt.n	801d138 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801d084:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d088:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d08c:	9b00      	ldr	r3, [sp, #0]
 801d08e:	2b00      	cmp	r3, #0
 801d090:	dd72      	ble.n	801d178 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801d092:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d096:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d09a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d09e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d0a0:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d0a4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d0a8:	eeb0 6a62 	vmov.f32	s12, s5
 801d0ac:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d0b0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d0b4:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d0b8:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801d0bc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d0c0:	eeb0 6a43 	vmov.f32	s12, s6
 801d0c4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d0c8:	ee12 2a90 	vmov	r2, s5
 801d0cc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d0d0:	fb92 fef3 	sdiv	lr, r2, r3
 801d0d4:	ee13 2a10 	vmov	r2, s6
 801d0d8:	fb92 fcf3 	sdiv	ip, r2, r3
 801d0dc:	9b00      	ldr	r3, [sp, #0]
 801d0de:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d0e2:	3b01      	subs	r3, #1
 801d0e4:	9300      	str	r3, [sp, #0]
 801d0e6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801d0ea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d0ec:	eeb0 3a67 	vmov.f32	s6, s15
 801d0f0:	bf08      	it	eq
 801d0f2:	465b      	moveq	r3, fp
 801d0f4:	eef0 2a47 	vmov.f32	s5, s14
 801d0f8:	e797      	b.n	801d02a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801d0fa:	454f      	cmp	r7, r9
 801d0fc:	dabb      	bge.n	801d076 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d0fe:	fb0c 2606 	mla	r6, ip, r6, r2
 801d102:	1436      	asrs	r6, r6, #16
 801d104:	d4b7      	bmi.n	801d076 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d106:	4546      	cmp	r6, r8
 801d108:	dab5      	bge.n	801d076 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d10a:	461e      	mov	r6, r3
 801d10c:	46a0      	mov	r8, r4
 801d10e:	2e00      	cmp	r6, #0
 801d110:	ddb8      	ble.n	801d084 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801d112:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801d116:	9901      	ldr	r1, [sp, #4]
 801d118:	1417      	asrs	r7, r2, #16
 801d11a:	ea4f 4920 	mov.w	r9, r0, asr #16
 801d11e:	fb0a 1707 	mla	r7, sl, r7, r1
 801d122:	9902      	ldr	r1, [sp, #8]
 801d124:	f817 7009 	ldrb.w	r7, [r7, r9]
 801d128:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801d12c:	f828 7b02 	strh.w	r7, [r8], #2
 801d130:	4470      	add	r0, lr
 801d132:	4462      	add	r2, ip
 801d134:	3e01      	subs	r6, #1
 801d136:	e7ea      	b.n	801d10e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801d138:	ea5f 4920 	movs.w	r9, r0, asr #16
 801d13c:	d417      	bmi.n	801d16e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801d13e:	68ae      	ldr	r6, [r5, #8]
 801d140:	454e      	cmp	r6, r9
 801d142:	dd14      	ble.n	801d16e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801d144:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801d148:	d411      	bmi.n	801d16e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801d14a:	68ef      	ldr	r7, [r5, #12]
 801d14c:	4557      	cmp	r7, sl
 801d14e:	dd0e      	ble.n	801d16e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801d150:	9f01      	ldr	r7, [sp, #4]
 801d152:	b236      	sxth	r6, r6
 801d154:	fb0a 7606 	mla	r6, sl, r6, r7
 801d158:	9f02      	ldr	r7, [sp, #8]
 801d15a:	f816 6009 	ldrb.w	r6, [r6, r9]
 801d15e:	f06f 0101 	mvn.w	r1, #1
 801d162:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801d166:	fb01 f608 	mul.w	r6, r1, r8
 801d16a:	9903      	ldr	r1, [sp, #12]
 801d16c:	538f      	strh	r7, [r1, r6]
 801d16e:	4470      	add	r0, lr
 801d170:	4462      	add	r2, ip
 801d172:	f108 38ff 	add.w	r8, r8, #4294967295
 801d176:	e782      	b.n	801d07e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d178:	b005      	add	sp, #20
 801d17a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d17e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d17e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d182:	b087      	sub	sp, #28
 801d184:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801d186:	9205      	str	r2, [sp, #20]
 801d188:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801d18c:	9203      	str	r2, [sp, #12]
 801d18e:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801d192:	9102      	str	r1, [sp, #8]
 801d194:	6861      	ldr	r1, [r4, #4]
 801d196:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801d19a:	fb01 2000 	mla	r0, r1, r0, r2
 801d19e:	6822      	ldr	r2, [r4, #0]
 801d1a0:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801d1a4:	9200      	str	r2, [sp, #0]
 801d1a6:	f8dc 2000 	ldr.w	r2, [ip]
 801d1aa:	9204      	str	r2, [sp, #16]
 801d1ac:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801d1b0:	3204      	adds	r2, #4
 801d1b2:	9201      	str	r2, [sp, #4]
 801d1b4:	9a03      	ldr	r2, [sp, #12]
 801d1b6:	43d5      	mvns	r5, r2
 801d1b8:	b2ed      	uxtb	r5, r5
 801d1ba:	9a02      	ldr	r2, [sp, #8]
 801d1bc:	2a00      	cmp	r2, #0
 801d1be:	dc03      	bgt.n	801d1c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801d1c0:	9a05      	ldr	r2, [sp, #20]
 801d1c2:	2a00      	cmp	r2, #0
 801d1c4:	f340 812c 	ble.w	801d420 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801d1c8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801d1ca:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801d1ce:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801d1d2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d1d6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801d1d8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801d1dc:	2b00      	cmp	r3, #0
 801d1de:	dd10      	ble.n	801d202 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d1e0:	140c      	asrs	r4, r1, #16
 801d1e2:	d405      	bmi.n	801d1f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801d1e4:	4574      	cmp	r4, lr
 801d1e6:	da03      	bge.n	801d1f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801d1e8:	1414      	asrs	r4, r2, #16
 801d1ea:	d401      	bmi.n	801d1f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801d1ec:	42bc      	cmp	r4, r7
 801d1ee:	db09      	blt.n	801d204 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801d1f0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d1f2:	9800      	ldr	r0, [sp, #0]
 801d1f4:	4421      	add	r1, r4
 801d1f6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801d1f8:	3002      	adds	r0, #2
 801d1fa:	4422      	add	r2, r4
 801d1fc:	3b01      	subs	r3, #1
 801d1fe:	9000      	str	r0, [sp, #0]
 801d200:	e7ec      	b.n	801d1dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801d202:	d071      	beq.n	801d2e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 801d204:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801d206:	1e5c      	subs	r4, r3, #1
 801d208:	fb06 1604 	mla	r6, r6, r4, r1
 801d20c:	1436      	asrs	r6, r6, #16
 801d20e:	d45d      	bmi.n	801d2cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801d210:	4576      	cmp	r6, lr
 801d212:	da5b      	bge.n	801d2cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801d214:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801d216:	fb06 2404 	mla	r4, r6, r4, r2
 801d21a:	1424      	asrs	r4, r4, #16
 801d21c:	d456      	bmi.n	801d2cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801d21e:	42bc      	cmp	r4, r7
 801d220:	da54      	bge.n	801d2cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801d222:	f8dd 9000 	ldr.w	r9, [sp]
 801d226:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801d22a:	4698      	mov	r8, r3
 801d22c:	f1b8 0f00 	cmp.w	r8, #0
 801d230:	dd54      	ble.n	801d2dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801d232:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801d236:	9804      	ldr	r0, [sp, #16]
 801d238:	1414      	asrs	r4, r2, #16
 801d23a:	fb07 0404 	mla	r4, r7, r4, r0
 801d23e:	140e      	asrs	r6, r1, #16
 801d240:	9801      	ldr	r0, [sp, #4]
 801d242:	f814 e006 	ldrb.w	lr, [r4, r6]
 801d246:	f8b9 4000 	ldrh.w	r4, [r9]
 801d24a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801d24e:	eb00 0b0e 	add.w	fp, r0, lr
 801d252:	1227      	asrs	r7, r4, #8
 801d254:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801d258:	f89b b001 	ldrb.w	fp, [fp, #1]
 801d25c:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801d260:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d262:	fb16 f60a 	smulbb	r6, r6, sl
 801d266:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d26a:	fb07 6705 	mla	r7, r7, r5, r6
 801d26e:	10e6      	asrs	r6, r4, #3
 801d270:	00e4      	lsls	r4, r4, #3
 801d272:	b2e4      	uxtb	r4, r4
 801d274:	fb1b fb0a 	smulbb	fp, fp, sl
 801d278:	fb14 f405 	smulbb	r4, r4, r5
 801d27c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d280:	b2bf      	uxth	r7, r7
 801d282:	fb06 b605 	mla	r6, r6, r5, fp
 801d286:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801d28a:	b2b6      	uxth	r6, r6
 801d28c:	fa1f fe8e 	uxth.w	lr, lr
 801d290:	1c7c      	adds	r4, r7, #1
 801d292:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801d296:	f106 0b01 	add.w	fp, r6, #1
 801d29a:	f10e 0401 	add.w	r4, lr, #1
 801d29e:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801d2a2:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801d2a6:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d2aa:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801d2ae:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801d2b2:	4327      	orrs	r7, r4
 801d2b4:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801d2b8:	4401      	add	r1, r0
 801d2ba:	9814      	ldr	r0, [sp, #80]	; 0x50
 801d2bc:	ea47 070b 	orr.w	r7, r7, fp
 801d2c0:	f829 7b02 	strh.w	r7, [r9], #2
 801d2c4:	4402      	add	r2, r0
 801d2c6:	f108 38ff 	add.w	r8, r8, #4294967295
 801d2ca:	e7af      	b.n	801d22c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801d2cc:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 801d2d0:	f04f 0e00 	mov.w	lr, #0
 801d2d4:	eb03 040e 	add.w	r4, r3, lr
 801d2d8:	2c00      	cmp	r4, #0
 801d2da:	dc43      	bgt.n	801d364 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801d2dc:	9a00      	ldr	r2, [sp, #0]
 801d2de:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d2e2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d2e6:	9300      	str	r3, [sp, #0]
 801d2e8:	9b02      	ldr	r3, [sp, #8]
 801d2ea:	2b00      	cmp	r3, #0
 801d2ec:	f340 8098 	ble.w	801d420 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801d2f0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d2f4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d2f8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d2fc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d2fe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d302:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d306:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d30a:	eef0 6a62 	vmov.f32	s13, s5
 801d30e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d312:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d316:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d31a:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801d31e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d322:	eef0 6a43 	vmov.f32	s13, s6
 801d326:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d32a:	ee12 2a90 	vmov	r2, s5
 801d32e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d332:	fb92 f3f3 	sdiv	r3, r2, r3
 801d336:	ee13 2a10 	vmov	r2, s6
 801d33a:	9313      	str	r3, [sp, #76]	; 0x4c
 801d33c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d33e:	fb92 f3f3 	sdiv	r3, r2, r3
 801d342:	9314      	str	r3, [sp, #80]	; 0x50
 801d344:	9b02      	ldr	r3, [sp, #8]
 801d346:	9a05      	ldr	r2, [sp, #20]
 801d348:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d34c:	3b01      	subs	r3, #1
 801d34e:	9302      	str	r3, [sp, #8]
 801d350:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801d354:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d356:	eeb0 3a67 	vmov.f32	s6, s15
 801d35a:	bf08      	it	eq
 801d35c:	4613      	moveq	r3, r2
 801d35e:	eef0 2a47 	vmov.f32	s5, s14
 801d362:	e72a      	b.n	801d1ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801d364:	140f      	asrs	r7, r1, #16
 801d366:	d454      	bmi.n	801d412 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801d368:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801d36c:	42be      	cmp	r6, r7
 801d36e:	dd50      	ble.n	801d412 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801d370:	ea5f 4822 	movs.w	r8, r2, asr #16
 801d374:	d44d      	bmi.n	801d412 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801d376:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801d37a:	4544      	cmp	r4, r8
 801d37c:	dd49      	ble.n	801d412 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801d37e:	9c04      	ldr	r4, [sp, #16]
 801d380:	b236      	sxth	r6, r6
 801d382:	fb08 4606 	mla	r6, r8, r6, r4
 801d386:	f06f 0001 	mvn.w	r0, #1
 801d38a:	f816 8007 	ldrb.w	r8, [r6, r7]
 801d38e:	9c01      	ldr	r4, [sp, #4]
 801d390:	fb00 fa0e 	mul.w	sl, r0, lr
 801d394:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801d398:	9800      	ldr	r0, [sp, #0]
 801d39a:	eb04 0b08 	add.w	fp, r4, r8
 801d39e:	f830 400a 	ldrh.w	r4, [r0, sl]
 801d3a2:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801d3a6:	9801      	ldr	r0, [sp, #4]
 801d3a8:	f89b b001 	ldrb.w	fp, [fp, #1]
 801d3ac:	f810 8008 	ldrb.w	r8, [r0, r8]
 801d3b0:	9800      	ldr	r0, [sp, #0]
 801d3b2:	1227      	asrs	r7, r4, #8
 801d3b4:	fb16 f609 	smulbb	r6, r6, r9
 801d3b8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d3bc:	fb07 6705 	mla	r7, r7, r5, r6
 801d3c0:	10e6      	asrs	r6, r4, #3
 801d3c2:	00e4      	lsls	r4, r4, #3
 801d3c4:	b2e4      	uxtb	r4, r4
 801d3c6:	fb1b fb09 	smulbb	fp, fp, r9
 801d3ca:	fb14 f405 	smulbb	r4, r4, r5
 801d3ce:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d3d2:	b2bf      	uxth	r7, r7
 801d3d4:	fb06 b605 	mla	r6, r6, r5, fp
 801d3d8:	fb08 4809 	mla	r8, r8, r9, r4
 801d3dc:	b2b6      	uxth	r6, r6
 801d3de:	fa1f f888 	uxth.w	r8, r8
 801d3e2:	1c7c      	adds	r4, r7, #1
 801d3e4:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801d3e8:	f106 0b01 	add.w	fp, r6, #1
 801d3ec:	f108 0401 	add.w	r4, r8, #1
 801d3f0:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801d3f4:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801d3f8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d3fc:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801d400:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801d404:	4327      	orrs	r7, r4
 801d406:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801d40a:	ea47 070b 	orr.w	r7, r7, fp
 801d40e:	f820 700a 	strh.w	r7, [r0, sl]
 801d412:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d414:	4401      	add	r1, r0
 801d416:	9814      	ldr	r0, [sp, #80]	; 0x50
 801d418:	f10e 3eff 	add.w	lr, lr, #4294967295
 801d41c:	4402      	add	r2, r0
 801d41e:	e759      	b.n	801d2d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801d420:	b007      	add	sp, #28
 801d422:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801d428 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d428:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d42c:	b085      	sub	sp, #20
 801d42e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d432:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801d434:	9203      	str	r2, [sp, #12]
 801d436:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801d43a:	6870      	ldr	r0, [r6, #4]
 801d43c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801d43e:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801d442:	686f      	ldr	r7, [r5, #4]
 801d444:	9101      	str	r1, [sp, #4]
 801d446:	fb00 2404 	mla	r4, r0, r4, r2
 801d44a:	6832      	ldr	r2, [r6, #0]
 801d44c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801d450:	682a      	ldr	r2, [r5, #0]
 801d452:	9202      	str	r2, [sp, #8]
 801d454:	3704      	adds	r7, #4
 801d456:	9a01      	ldr	r2, [sp, #4]
 801d458:	2a00      	cmp	r2, #0
 801d45a:	dc03      	bgt.n	801d464 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801d45c:	9a03      	ldr	r2, [sp, #12]
 801d45e:	2a00      	cmp	r2, #0
 801d460:	f340 80cc 	ble.w	801d5fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801d464:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d466:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801d46a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801d46e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801d472:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d474:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801d478:	2b00      	cmp	r3, #0
 801d47a:	dd0d      	ble.n	801d498 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801d47c:	1406      	asrs	r6, r0, #16
 801d47e:	d405      	bmi.n	801d48c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801d480:	454e      	cmp	r6, r9
 801d482:	da03      	bge.n	801d48c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801d484:	1416      	asrs	r6, r2, #16
 801d486:	d401      	bmi.n	801d48c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801d488:	4546      	cmp	r6, r8
 801d48a:	db06      	blt.n	801d49a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801d48c:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801d48e:	4460      	add	r0, ip
 801d490:	4432      	add	r2, r6
 801d492:	3b01      	subs	r3, #1
 801d494:	3402      	adds	r4, #2
 801d496:	e7ef      	b.n	801d478 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801d498:	d00f      	beq.n	801d4ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d49a:	1e5e      	subs	r6, r3, #1
 801d49c:	fb0c 0e06 	mla	lr, ip, r6, r0
 801d4a0:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801d4a4:	d543      	bpl.n	801d52e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801d4a6:	4698      	mov	r8, r3
 801d4a8:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801d4ac:	f1b8 0f00 	cmp.w	r8, #0
 801d4b0:	dc71      	bgt.n	801d596 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801d4b2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d4b6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d4ba:	9b01      	ldr	r3, [sp, #4]
 801d4bc:	2b00      	cmp	r3, #0
 801d4be:	f340 809d 	ble.w	801d5fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801d4c2:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d4c6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d4ca:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d4ce:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d4d0:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d4d4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d4d8:	eeb0 6a62 	vmov.f32	s12, s5
 801d4dc:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d4e0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d4e4:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d4e8:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801d4ec:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d4f0:	eeb0 6a43 	vmov.f32	s12, s6
 801d4f4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d4f8:	ee12 2a90 	vmov	r2, s5
 801d4fc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d500:	fb92 fcf3 	sdiv	ip, r2, r3
 801d504:	ee13 2a10 	vmov	r2, s6
 801d508:	fb92 f3f3 	sdiv	r3, r2, r3
 801d50c:	9312      	str	r3, [sp, #72]	; 0x48
 801d50e:	9b01      	ldr	r3, [sp, #4]
 801d510:	9a03      	ldr	r2, [sp, #12]
 801d512:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d516:	3b01      	subs	r3, #1
 801d518:	9301      	str	r3, [sp, #4]
 801d51a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801d51e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d520:	eeb0 3a67 	vmov.f32	s6, s15
 801d524:	bf08      	it	eq
 801d526:	4613      	moveq	r3, r2
 801d528:	eef0 2a47 	vmov.f32	s5, s14
 801d52c:	e793      	b.n	801d456 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801d52e:	45ce      	cmp	lr, r9
 801d530:	dab9      	bge.n	801d4a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801d532:	9912      	ldr	r1, [sp, #72]	; 0x48
 801d534:	fb01 2606 	mla	r6, r1, r6, r2
 801d538:	1436      	asrs	r6, r6, #16
 801d53a:	d4b4      	bmi.n	801d4a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801d53c:	4546      	cmp	r6, r8
 801d53e:	dab2      	bge.n	801d4a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801d540:	4698      	mov	r8, r3
 801d542:	46a2      	mov	sl, r4
 801d544:	f1b8 0f00 	cmp.w	r8, #0
 801d548:	ddb3      	ble.n	801d4b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801d54a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801d54e:	9902      	ldr	r1, [sp, #8]
 801d550:	1416      	asrs	r6, r2, #16
 801d552:	fb09 1606 	mla	r6, r9, r6, r1
 801d556:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801d55a:	492a      	ldr	r1, [pc, #168]	; (801d604 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801d55c:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801d560:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801d564:	eb07 0b0e 	add.w	fp, r7, lr
 801d568:	4460      	add	r0, ip
 801d56a:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801d56e:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801d572:	00f6      	lsls	r6, r6, #3
 801d574:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801d578:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801d57c:	ea49 0606 	orr.w	r6, r9, r6
 801d580:	f817 900e 	ldrb.w	r9, [r7, lr]
 801d584:	9912      	ldr	r1, [sp, #72]	; 0x48
 801d586:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801d58a:	f82a 6b02 	strh.w	r6, [sl], #2
 801d58e:	440a      	add	r2, r1
 801d590:	f108 38ff 	add.w	r8, r8, #4294967295
 801d594:	e7d6      	b.n	801d544 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801d596:	ea5f 4920 	movs.w	r9, r0, asr #16
 801d59a:	d429      	bmi.n	801d5f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801d59c:	68ae      	ldr	r6, [r5, #8]
 801d59e:	454e      	cmp	r6, r9
 801d5a0:	dd26      	ble.n	801d5f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801d5a2:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801d5a6:	d423      	bmi.n	801d5f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801d5a8:	68e9      	ldr	r1, [r5, #12]
 801d5aa:	4559      	cmp	r1, fp
 801d5ac:	dd20      	ble.n	801d5f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801d5ae:	9902      	ldr	r1, [sp, #8]
 801d5b0:	fa0f fe86 	sxth.w	lr, r6
 801d5b4:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801d5b8:	f06f 0101 	mvn.w	r1, #1
 801d5bc:	f81e e009 	ldrb.w	lr, [lr, r9]
 801d5c0:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801d5c4:	eb07 060e 	add.w	r6, r7, lr
 801d5c8:	fb01 f908 	mul.w	r9, r1, r8
 801d5cc:	f896 b002 	ldrb.w	fp, [r6, #2]
 801d5d0:	7876      	ldrb	r6, [r6, #1]
 801d5d2:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801d5d6:	00f6      	lsls	r6, r6, #3
 801d5d8:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801d5dc:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801d5e0:	ea4b 0606 	orr.w	r6, fp, r6
 801d5e4:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801d5e8:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801d5ec:	f82a 6009 	strh.w	r6, [sl, r9]
 801d5f0:	9912      	ldr	r1, [sp, #72]	; 0x48
 801d5f2:	4460      	add	r0, ip
 801d5f4:	440a      	add	r2, r1
 801d5f6:	f108 38ff 	add.w	r8, r8, #4294967295
 801d5fa:	e757      	b.n	801d4ac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d5fc:	b005      	add	sp, #20
 801d5fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d602:	bf00      	nop
 801d604:	fffff800 	.word	0xfffff800

0801d608 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d608:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d60c:	b087      	sub	sp, #28
 801d60e:	468b      	mov	fp, r1
 801d610:	9815      	ldr	r0, [sp, #84]	; 0x54
 801d612:	9204      	str	r2, [sp, #16]
 801d614:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801d618:	9205      	str	r2, [sp, #20]
 801d61a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801d61e:	6841      	ldr	r1, [r0, #4]
 801d620:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801d624:	fb01 2404 	mla	r4, r1, r4, r2
 801d628:	6802      	ldr	r2, [r0, #0]
 801d62a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801d62e:	f8dc 2000 	ldr.w	r2, [ip]
 801d632:	9201      	str	r2, [sp, #4]
 801d634:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801d638:	3204      	adds	r2, #4
 801d63a:	9202      	str	r2, [sp, #8]
 801d63c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d640:	f1bb 0f00 	cmp.w	fp, #0
 801d644:	dc03      	bgt.n	801d64e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801d646:	9a04      	ldr	r2, [sp, #16]
 801d648:	2a00      	cmp	r2, #0
 801d64a:	f340 8138 	ble.w	801d8be <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801d64e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801d650:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801d654:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801d658:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801d65c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801d65e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d662:	2b00      	cmp	r3, #0
 801d664:	dd0e      	ble.n	801d684 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d666:	1402      	asrs	r2, r0, #16
 801d668:	d405      	bmi.n	801d676 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d66a:	42ba      	cmp	r2, r7
 801d66c:	da03      	bge.n	801d676 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d66e:	140a      	asrs	r2, r1, #16
 801d670:	d401      	bmi.n	801d676 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d672:	42b2      	cmp	r2, r6
 801d674:	db07      	blt.n	801d686 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801d676:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d678:	4410      	add	r0, r2
 801d67a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d67c:	3b01      	subs	r3, #1
 801d67e:	4411      	add	r1, r2
 801d680:	3402      	adds	r4, #2
 801d682:	e7ee      	b.n	801d662 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801d684:	d019      	beq.n	801d6ba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801d686:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801d688:	1e5a      	subs	r2, r3, #1
 801d68a:	fb05 0502 	mla	r5, r5, r2, r0
 801d68e:	142d      	asrs	r5, r5, #16
 801d690:	d409      	bmi.n	801d6a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801d692:	42bd      	cmp	r5, r7
 801d694:	da07      	bge.n	801d6a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801d696:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801d698:	fb05 1202 	mla	r2, r5, r2, r1
 801d69c:	1412      	asrs	r2, r2, #16
 801d69e:	d402      	bmi.n	801d6a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801d6a0:	42b2      	cmp	r2, r6
 801d6a2:	f2c0 80ac 	blt.w	801d7fe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801d6a6:	f04f 0e00 	mov.w	lr, #0
 801d6aa:	eb03 020e 	add.w	r2, r3, lr
 801d6ae:	2a00      	cmp	r2, #0
 801d6b0:	dc3e      	bgt.n	801d730 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801d6b2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d6b6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d6ba:	f1bb 0f00 	cmp.w	fp, #0
 801d6be:	f340 80fe 	ble.w	801d8be <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801d6c2:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d6c6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d6ca:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d6ce:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d6d0:	f1bb 0b01 	subs.w	fp, fp, #1
 801d6d4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d6d8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d6dc:	eeb0 6a62 	vmov.f32	s12, s5
 801d6e0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d6e4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d6e8:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d6ec:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801d6f0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d6f4:	eeb0 6a43 	vmov.f32	s12, s6
 801d6f8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d6fc:	ee12 2a90 	vmov	r2, s5
 801d700:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d704:	fb92 f3f3 	sdiv	r3, r2, r3
 801d708:	ee13 2a10 	vmov	r2, s6
 801d70c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d710:	9313      	str	r3, [sp, #76]	; 0x4c
 801d712:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d714:	fb92 f3f3 	sdiv	r3, r2, r3
 801d718:	9a04      	ldr	r2, [sp, #16]
 801d71a:	9314      	str	r3, [sp, #80]	; 0x50
 801d71c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801d720:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d722:	eeb0 3a67 	vmov.f32	s6, s15
 801d726:	bf08      	it	eq
 801d728:	4613      	moveq	r3, r2
 801d72a:	eef0 2a47 	vmov.f32	s5, s14
 801d72e:	e787      	b.n	801d640 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801d730:	1406      	asrs	r6, r0, #16
 801d732:	d45d      	bmi.n	801d7f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d734:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801d738:	42b5      	cmp	r5, r6
 801d73a:	dd59      	ble.n	801d7f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d73c:	140f      	asrs	r7, r1, #16
 801d73e:	d457      	bmi.n	801d7f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d740:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801d744:	42ba      	cmp	r2, r7
 801d746:	dd53      	ble.n	801d7f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d748:	9a01      	ldr	r2, [sp, #4]
 801d74a:	b22d      	sxth	r5, r5
 801d74c:	fb07 2505 	mla	r5, r7, r5, r2
 801d750:	5daa      	ldrb	r2, [r5, r6]
 801d752:	9d02      	ldr	r5, [sp, #8]
 801d754:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801d758:	0e2e      	lsrs	r6, r5, #24
 801d75a:	d049      	beq.n	801d7f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d75c:	f06f 0201 	mvn.w	r2, #1
 801d760:	fb02 f20e 	mul.w	r2, r2, lr
 801d764:	9203      	str	r2, [sp, #12]
 801d766:	f834 8002 	ldrh.w	r8, [r4, r2]
 801d76a:	9a05      	ldr	r2, [sp, #20]
 801d76c:	4356      	muls	r6, r2
 801d76e:	1c72      	adds	r2, r6, #1
 801d770:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801d774:	1212      	asrs	r2, r2, #8
 801d776:	fa1f f982 	uxth.w	r9, r2
 801d77a:	ea4f 2728 	mov.w	r7, r8, asr #8
 801d77e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801d782:	43d2      	mvns	r2, r2
 801d784:	b2d2      	uxtb	r2, r2
 801d786:	fb16 f609 	smulbb	r6, r6, r9
 801d78a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d78e:	fb07 6702 	mla	r7, r7, r2, r6
 801d792:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801d796:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801d79a:	b2ed      	uxtb	r5, r5
 801d79c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801d7a0:	fa5f f888 	uxtb.w	r8, r8
 801d7a4:	fb15 f509 	smulbb	r5, r5, r9
 801d7a8:	fb08 5502 	mla	r5, r8, r2, r5
 801d7ac:	b2bf      	uxth	r7, r7
 801d7ae:	fb1a fa09 	smulbb	sl, sl, r9
 801d7b2:	b2ad      	uxth	r5, r5
 801d7b4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d7b8:	fb06 a602 	mla	r6, r6, r2, sl
 801d7bc:	1c7a      	adds	r2, r7, #1
 801d7be:	f105 0a01 	add.w	sl, r5, #1
 801d7c2:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801d7c6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d7ca:	b2b6      	uxth	r6, r6
 801d7cc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d7d0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d7d4:	ea4a 0707 	orr.w	r7, sl, r7
 801d7d8:	f106 0a01 	add.w	sl, r6, #1
 801d7dc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d7e0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d7e4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d7e8:	9a03      	ldr	r2, [sp, #12]
 801d7ea:	ea47 070a 	orr.w	r7, r7, sl
 801d7ee:	52a7      	strh	r7, [r4, r2]
 801d7f0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d7f2:	4410      	add	r0, r2
 801d7f4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d7f6:	f10e 3eff 	add.w	lr, lr, #4294967295
 801d7fa:	4411      	add	r1, r2
 801d7fc:	e755      	b.n	801d6aa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801d7fe:	f04f 0800 	mov.w	r8, #0
 801d802:	eba3 0208 	sub.w	r2, r3, r8
 801d806:	2a00      	cmp	r2, #0
 801d808:	f77f af53 	ble.w	801d6b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801d80c:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801d810:	9f01      	ldr	r7, [sp, #4]
 801d812:	140a      	asrs	r2, r1, #16
 801d814:	1405      	asrs	r5, r0, #16
 801d816:	fb06 7202 	mla	r2, r6, r2, r7
 801d81a:	5d52      	ldrb	r2, [r2, r5]
 801d81c:	9d02      	ldr	r5, [sp, #8]
 801d81e:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801d822:	0e2e      	lsrs	r6, r5, #24
 801d824:	d044      	beq.n	801d8b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801d826:	9a05      	ldr	r2, [sp, #20]
 801d828:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801d82c:	4356      	muls	r6, r2
 801d82e:	1c72      	adds	r2, r6, #1
 801d830:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801d834:	1212      	asrs	r2, r2, #8
 801d836:	fa1f f982 	uxth.w	r9, r2
 801d83a:	ea4f 272e 	mov.w	r7, lr, asr #8
 801d83e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801d842:	43d2      	mvns	r2, r2
 801d844:	b2d2      	uxtb	r2, r2
 801d846:	fb16 f609 	smulbb	r6, r6, r9
 801d84a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d84e:	fb07 6702 	mla	r7, r7, r2, r6
 801d852:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801d856:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801d85a:	b2ed      	uxtb	r5, r5
 801d85c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d860:	fa5f fe8e 	uxtb.w	lr, lr
 801d864:	fb15 f509 	smulbb	r5, r5, r9
 801d868:	fb0e 5502 	mla	r5, lr, r2, r5
 801d86c:	b2bf      	uxth	r7, r7
 801d86e:	fb1a fa09 	smulbb	sl, sl, r9
 801d872:	b2ad      	uxth	r5, r5
 801d874:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d878:	fb06 a602 	mla	r6, r6, r2, sl
 801d87c:	1c7a      	adds	r2, r7, #1
 801d87e:	f105 0a01 	add.w	sl, r5, #1
 801d882:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801d886:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d88a:	b2b6      	uxth	r6, r6
 801d88c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d890:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d894:	ea4a 0707 	orr.w	r7, sl, r7
 801d898:	f106 0a01 	add.w	sl, r6, #1
 801d89c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d8a0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d8a4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d8a8:	ea47 070a 	orr.w	r7, r7, sl
 801d8ac:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801d8b0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d8b2:	4410      	add	r0, r2
 801d8b4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d8b6:	f108 0801 	add.w	r8, r8, #1
 801d8ba:	4411      	add	r1, r2
 801d8bc:	e7a1      	b.n	801d802 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801d8be:	b007      	add	sp, #28
 801d8c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d8c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d8c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d8c8:	b085      	sub	sp, #20
 801d8ca:	468b      	mov	fp, r1
 801d8cc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d8ce:	9203      	str	r2, [sp, #12]
 801d8d0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801d8d4:	6841      	ldr	r1, [r0, #4]
 801d8d6:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801d8da:	fb01 2404 	mla	r4, r1, r4, r2
 801d8de:	6802      	ldr	r2, [r0, #0]
 801d8e0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801d8e4:	f8de 2000 	ldr.w	r2, [lr]
 801d8e8:	9200      	str	r2, [sp, #0]
 801d8ea:	f8de 2004 	ldr.w	r2, [lr, #4]
 801d8ee:	3204      	adds	r2, #4
 801d8f0:	9201      	str	r2, [sp, #4]
 801d8f2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d8f6:	f1bb 0f00 	cmp.w	fp, #0
 801d8fa:	dc03      	bgt.n	801d904 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801d8fc:	9a03      	ldr	r2, [sp, #12]
 801d8fe:	2a00      	cmp	r2, #0
 801d900:	f340 8153 	ble.w	801dbaa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801d904:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d906:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801d90a:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801d90e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d912:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d914:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801d918:	2b00      	cmp	r3, #0
 801d91a:	dd0e      	ble.n	801d93a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d91c:	1408      	asrs	r0, r1, #16
 801d91e:	d405      	bmi.n	801d92c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d920:	42b8      	cmp	r0, r7
 801d922:	da03      	bge.n	801d92c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d924:	1410      	asrs	r0, r2, #16
 801d926:	d401      	bmi.n	801d92c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d928:	42b0      	cmp	r0, r6
 801d92a:	db07      	blt.n	801d93c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801d92c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d92e:	4401      	add	r1, r0
 801d930:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d932:	3b01      	subs	r3, #1
 801d934:	4402      	add	r2, r0
 801d936:	3402      	adds	r4, #2
 801d938:	e7ee      	b.n	801d918 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801d93a:	d017      	beq.n	801d96c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801d93c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801d93e:	1e58      	subs	r0, r3, #1
 801d940:	fb05 1500 	mla	r5, r5, r0, r1
 801d944:	142d      	asrs	r5, r5, #16
 801d946:	d409      	bmi.n	801d95c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d948:	42bd      	cmp	r5, r7
 801d94a:	da07      	bge.n	801d95c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d94c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d94e:	fb05 2000 	mla	r0, r5, r0, r2
 801d952:	1400      	asrs	r0, r0, #16
 801d954:	d402      	bmi.n	801d95c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d956:	42b0      	cmp	r0, r6
 801d958:	f2c0 80bc 	blt.w	801dad4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801d95c:	2600      	movs	r6, #0
 801d95e:	1998      	adds	r0, r3, r6
 801d960:	2800      	cmp	r0, #0
 801d962:	dc3e      	bgt.n	801d9e2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801d964:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d968:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d96c:	f1bb 0f00 	cmp.w	fp, #0
 801d970:	f340 811b 	ble.w	801dbaa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801d974:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d978:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d97c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d980:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d982:	f1bb 0b01 	subs.w	fp, fp, #1
 801d986:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d98a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d98e:	eeb0 6a62 	vmov.f32	s12, s5
 801d992:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d996:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d99a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d99e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801d9a2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d9a6:	eeb0 6a43 	vmov.f32	s12, s6
 801d9aa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d9ae:	ee12 2a90 	vmov	r2, s5
 801d9b2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d9b6:	fb92 f3f3 	sdiv	r3, r2, r3
 801d9ba:	ee13 2a10 	vmov	r2, s6
 801d9be:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d9c2:	9311      	str	r3, [sp, #68]	; 0x44
 801d9c4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d9c6:	fb92 f3f3 	sdiv	r3, r2, r3
 801d9ca:	9a03      	ldr	r2, [sp, #12]
 801d9cc:	9312      	str	r3, [sp, #72]	; 0x48
 801d9ce:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801d9d2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d9d4:	eeb0 3a67 	vmov.f32	s6, s15
 801d9d8:	bf08      	it	eq
 801d9da:	4613      	moveq	r3, r2
 801d9dc:	eef0 2a47 	vmov.f32	s5, s14
 801d9e0:	e789      	b.n	801d8f6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801d9e2:	140f      	asrs	r7, r1, #16
 801d9e4:	d426      	bmi.n	801da34 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d9e6:	f8de 5008 	ldr.w	r5, [lr, #8]
 801d9ea:	42bd      	cmp	r5, r7
 801d9ec:	dd22      	ble.n	801da34 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d9ee:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801d9f2:	d41f      	bmi.n	801da34 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d9f4:	f8de 000c 	ldr.w	r0, [lr, #12]
 801d9f8:	4560      	cmp	r0, ip
 801d9fa:	dd1b      	ble.n	801da34 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d9fc:	9800      	ldr	r0, [sp, #0]
 801d9fe:	b22d      	sxth	r5, r5
 801da00:	fb0c 0505 	mla	r5, ip, r5, r0
 801da04:	5de8      	ldrb	r0, [r5, r7]
 801da06:	9d01      	ldr	r5, [sp, #4]
 801da08:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801da0c:	0e07      	lsrs	r7, r0, #24
 801da0e:	2fff      	cmp	r7, #255	; 0xff
 801da10:	d116      	bne.n	801da40 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801da12:	f06f 0501 	mvn.w	r5, #1
 801da16:	fb05 f706 	mul.w	r7, r5, r6
 801da1a:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801da1e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801da22:	0945      	lsrs	r5, r0, #5
 801da24:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801da28:	ea4c 0505 	orr.w	r5, ip, r5
 801da2c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801da30:	4305      	orrs	r5, r0
 801da32:	53e5      	strh	r5, [r4, r7]
 801da34:	9811      	ldr	r0, [sp, #68]	; 0x44
 801da36:	4401      	add	r1, r0
 801da38:	9812      	ldr	r0, [sp, #72]	; 0x48
 801da3a:	3e01      	subs	r6, #1
 801da3c:	4402      	add	r2, r0
 801da3e:	e78e      	b.n	801d95e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801da40:	b2fd      	uxtb	r5, r7
 801da42:	2f00      	cmp	r7, #0
 801da44:	d0f6      	beq.n	801da34 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801da46:	f06f 0701 	mvn.w	r7, #1
 801da4a:	4377      	muls	r7, r6
 801da4c:	fa1f f985 	uxth.w	r9, r5
 801da50:	f834 8007 	ldrh.w	r8, [r4, r7]
 801da54:	9702      	str	r7, [sp, #8]
 801da56:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801da5a:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801da5e:	43ed      	mvns	r5, r5
 801da60:	b2ed      	uxtb	r5, r5
 801da62:	fb17 f709 	smulbb	r7, r7, r9
 801da66:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801da6a:	fb0c 7c05 	mla	ip, ip, r5, r7
 801da6e:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801da72:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801da76:	b2c0      	uxtb	r0, r0
 801da78:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801da7c:	fa5f f888 	uxtb.w	r8, r8
 801da80:	fb10 f009 	smulbb	r0, r0, r9
 801da84:	fb08 0005 	mla	r0, r8, r5, r0
 801da88:	b280      	uxth	r0, r0
 801da8a:	fa1f fc8c 	uxth.w	ip, ip
 801da8e:	fb1a fa09 	smulbb	sl, sl, r9
 801da92:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801da96:	fb07 a705 	mla	r7, r7, r5, sl
 801da9a:	f100 0a01 	add.w	sl, r0, #1
 801da9e:	f10c 0501 	add.w	r5, ip, #1
 801daa2:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801daa6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801daaa:	b2bf      	uxth	r7, r7
 801daac:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801dab0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801dab4:	ea4a 0c0c 	orr.w	ip, sl, ip
 801dab8:	f107 0a01 	add.w	sl, r7, #1
 801dabc:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801dac0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801dac4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801dac8:	9802      	ldr	r0, [sp, #8]
 801daca:	ea4c 0c0a 	orr.w	ip, ip, sl
 801dace:	f824 c000 	strh.w	ip, [r4, r0]
 801dad2:	e7af      	b.n	801da34 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801dad4:	f04f 0800 	mov.w	r8, #0
 801dad8:	eba3 0008 	sub.w	r0, r3, r8
 801dadc:	2800      	cmp	r0, #0
 801dade:	f77f af41 	ble.w	801d964 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801dae2:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801dae6:	9f00      	ldr	r7, [sp, #0]
 801dae8:	1410      	asrs	r0, r2, #16
 801daea:	140d      	asrs	r5, r1, #16
 801daec:	fb06 7000 	mla	r0, r6, r0, r7
 801daf0:	5d40      	ldrb	r0, [r0, r5]
 801daf2:	9d01      	ldr	r5, [sp, #4]
 801daf4:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801daf8:	0e2e      	lsrs	r6, r5, #24
 801dafa:	2eff      	cmp	r6, #255	; 0xff
 801dafc:	d112      	bne.n	801db24 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801dafe:	482c      	ldr	r0, [pc, #176]	; (801dbb0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801db00:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801db04:	0968      	lsrs	r0, r5, #5
 801db06:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801db0a:	4330      	orrs	r0, r6
 801db0c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801db10:	4328      	orrs	r0, r5
 801db12:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801db16:	9811      	ldr	r0, [sp, #68]	; 0x44
 801db18:	4401      	add	r1, r0
 801db1a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801db1c:	f108 0801 	add.w	r8, r8, #1
 801db20:	4402      	add	r2, r0
 801db22:	e7d9      	b.n	801dad8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801db24:	b2f0      	uxtb	r0, r6
 801db26:	2e00      	cmp	r6, #0
 801db28:	d0f5      	beq.n	801db16 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801db2a:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801db2e:	fa1f f980 	uxth.w	r9, r0
 801db32:	ea4f 272c 	mov.w	r7, ip, asr #8
 801db36:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801db3a:	43c0      	mvns	r0, r0
 801db3c:	b2c0      	uxtb	r0, r0
 801db3e:	fb16 f609 	smulbb	r6, r6, r9
 801db42:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801db46:	fb07 6700 	mla	r7, r7, r0, r6
 801db4a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801db4e:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801db52:	b2ed      	uxtb	r5, r5
 801db54:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801db58:	fa5f fc8c 	uxtb.w	ip, ip
 801db5c:	fb15 f509 	smulbb	r5, r5, r9
 801db60:	fb0c 5500 	mla	r5, ip, r0, r5
 801db64:	b2bf      	uxth	r7, r7
 801db66:	fb1a fa09 	smulbb	sl, sl, r9
 801db6a:	b2ad      	uxth	r5, r5
 801db6c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801db70:	fb06 a600 	mla	r6, r6, r0, sl
 801db74:	1c78      	adds	r0, r7, #1
 801db76:	f105 0a01 	add.w	sl, r5, #1
 801db7a:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801db7e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801db82:	b2b6      	uxth	r6, r6
 801db84:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801db88:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801db8c:	ea4a 0707 	orr.w	r7, sl, r7
 801db90:	f106 0a01 	add.w	sl, r6, #1
 801db94:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801db98:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801db9c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801dba0:	ea47 070a 	orr.w	r7, r7, sl
 801dba4:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801dba8:	e7b5      	b.n	801db16 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801dbaa:	b005      	add	sp, #20
 801dbac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dbb0:	fffff800 	.word	0xfffff800

0801dbb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dbb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dbb8:	b087      	sub	sp, #28
 801dbba:	468b      	mov	fp, r1
 801dbbc:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801dbbe:	9204      	str	r2, [sp, #16]
 801dbc0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801dbc4:	9205      	str	r2, [sp, #20]
 801dbc6:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801dbca:	6861      	ldr	r1, [r4, #4]
 801dbcc:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801dbd0:	fb01 2000 	mla	r0, r1, r0, r2
 801dbd4:	6822      	ldr	r2, [r4, #0]
 801dbd6:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801dbda:	f8de 2000 	ldr.w	r2, [lr]
 801dbde:	9201      	str	r2, [sp, #4]
 801dbe0:	f8de 2004 	ldr.w	r2, [lr, #4]
 801dbe4:	9202      	str	r2, [sp, #8]
 801dbe6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801dbea:	f1bb 0f00 	cmp.w	fp, #0
 801dbee:	dc03      	bgt.n	801dbf8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801dbf0:	9a04      	ldr	r2, [sp, #16]
 801dbf2:	2a00      	cmp	r2, #0
 801dbf4:	f340 8142 	ble.w	801de7c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801dbf8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801dbfa:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801dbfe:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801dc02:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801dc06:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801dc08:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801dc0c:	2b00      	cmp	r3, #0
 801dc0e:	dd0e      	ble.n	801dc2e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801dc10:	140c      	asrs	r4, r1, #16
 801dc12:	d405      	bmi.n	801dc20 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801dc14:	42bc      	cmp	r4, r7
 801dc16:	da03      	bge.n	801dc20 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801dc18:	1414      	asrs	r4, r2, #16
 801dc1a:	d401      	bmi.n	801dc20 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801dc1c:	42b4      	cmp	r4, r6
 801dc1e:	db07      	blt.n	801dc30 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801dc20:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801dc22:	4421      	add	r1, r4
 801dc24:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801dc26:	3b01      	subs	r3, #1
 801dc28:	4422      	add	r2, r4
 801dc2a:	3002      	adds	r0, #2
 801dc2c:	e7ee      	b.n	801dc0c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801dc2e:	d019      	beq.n	801dc64 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801dc30:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801dc32:	1e5c      	subs	r4, r3, #1
 801dc34:	fb05 1504 	mla	r5, r5, r4, r1
 801dc38:	142d      	asrs	r5, r5, #16
 801dc3a:	d409      	bmi.n	801dc50 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801dc3c:	42bd      	cmp	r5, r7
 801dc3e:	da07      	bge.n	801dc50 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801dc40:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801dc42:	fb05 2404 	mla	r4, r5, r4, r2
 801dc46:	1424      	asrs	r4, r4, #16
 801dc48:	d402      	bmi.n	801dc50 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801dc4a:	42b4      	cmp	r4, r6
 801dc4c:	f2c0 80b1 	blt.w	801ddb2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801dc50:	f04f 0800 	mov.w	r8, #0
 801dc54:	eb03 0408 	add.w	r4, r3, r8
 801dc58:	2c00      	cmp	r4, #0
 801dc5a:	dc3e      	bgt.n	801dcda <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801dc5c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801dc60:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801dc64:	f1bb 0f00 	cmp.w	fp, #0
 801dc68:	f340 8108 	ble.w	801de7c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801dc6c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801dc70:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801dc74:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801dc78:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801dc7a:	f1bb 0b01 	subs.w	fp, fp, #1
 801dc7e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801dc82:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801dc86:	eeb0 6a62 	vmov.f32	s12, s5
 801dc8a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801dc8e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801dc92:	ee77 2a62 	vsub.f32	s5, s14, s5
 801dc96:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801dc9a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801dc9e:	eeb0 6a43 	vmov.f32	s12, s6
 801dca2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801dca6:	ee12 2a90 	vmov	r2, s5
 801dcaa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801dcae:	fb92 f3f3 	sdiv	r3, r2, r3
 801dcb2:	ee13 2a10 	vmov	r2, s6
 801dcb6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801dcba:	9313      	str	r3, [sp, #76]	; 0x4c
 801dcbc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801dcbe:	fb92 f3f3 	sdiv	r3, r2, r3
 801dcc2:	9a04      	ldr	r2, [sp, #16]
 801dcc4:	9314      	str	r3, [sp, #80]	; 0x50
 801dcc6:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801dcca:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801dccc:	eeb0 3a67 	vmov.f32	s6, s15
 801dcd0:	bf08      	it	eq
 801dcd2:	4613      	moveq	r3, r2
 801dcd4:	eef0 2a47 	vmov.f32	s5, s14
 801dcd8:	e787      	b.n	801dbea <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801dcda:	140e      	asrs	r6, r1, #16
 801dcdc:	d462      	bmi.n	801dda4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801dcde:	f8de 5008 	ldr.w	r5, [lr, #8]
 801dce2:	42b5      	cmp	r5, r6
 801dce4:	dd5e      	ble.n	801dda4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801dce6:	1417      	asrs	r7, r2, #16
 801dce8:	d45c      	bmi.n	801dda4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801dcea:	f8de 400c 	ldr.w	r4, [lr, #12]
 801dcee:	42bc      	cmp	r4, r7
 801dcf0:	dd58      	ble.n	801dda4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801dcf2:	b22d      	sxth	r5, r5
 801dcf4:	fb07 6505 	mla	r5, r7, r5, r6
 801dcf8:	9c02      	ldr	r4, [sp, #8]
 801dcfa:	5d66      	ldrb	r6, [r4, r5]
 801dcfc:	2e00      	cmp	r6, #0
 801dcfe:	d051      	beq.n	801dda4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801dd00:	9c01      	ldr	r4, [sp, #4]
 801dd02:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801dd06:	f06f 0401 	mvn.w	r4, #1
 801dd0a:	fb04 f408 	mul.w	r4, r4, r8
 801dd0e:	9403      	str	r4, [sp, #12]
 801dd10:	5b05      	ldrh	r5, [r0, r4]
 801dd12:	9c05      	ldr	r4, [sp, #20]
 801dd14:	4366      	muls	r6, r4
 801dd16:	1c74      	adds	r4, r6, #1
 801dd18:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801dd1c:	1224      	asrs	r4, r4, #8
 801dd1e:	b2a7      	uxth	r7, r4
 801dd20:	122e      	asrs	r6, r5, #8
 801dd22:	43e4      	mvns	r4, r4
 801dd24:	b2e4      	uxtb	r4, r4
 801dd26:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801dd2a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801dd2e:	fb16 f604 	smulbb	r6, r6, r4
 801dd32:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801dd36:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801dd3a:	00ed      	lsls	r5, r5, #3
 801dd3c:	fb0c 6c07 	mla	ip, ip, r7, r6
 801dd40:	b2ed      	uxtb	r5, r5
 801dd42:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801dd46:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801dd4a:	fb15 f504 	smulbb	r5, r5, r4
 801dd4e:	fa5f f989 	uxtb.w	r9, r9
 801dd52:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801dd56:	fb09 5507 	mla	r5, r9, r7, r5
 801dd5a:	fb1a fa04 	smulbb	sl, sl, r4
 801dd5e:	fa1f fc8c 	uxth.w	ip, ip
 801dd62:	b2ad      	uxth	r5, r5
 801dd64:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801dd68:	fb06 a607 	mla	r6, r6, r7, sl
 801dd6c:	f10c 0401 	add.w	r4, ip, #1
 801dd70:	f105 0a01 	add.w	sl, r5, #1
 801dd74:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801dd78:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801dd7c:	b2b6      	uxth	r6, r6
 801dd7e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801dd82:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801dd86:	ea4a 0c0c 	orr.w	ip, sl, ip
 801dd8a:	f106 0a01 	add.w	sl, r6, #1
 801dd8e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801dd92:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801dd96:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801dd9a:	9c03      	ldr	r4, [sp, #12]
 801dd9c:	ea4c 0c0a 	orr.w	ip, ip, sl
 801dda0:	f820 c004 	strh.w	ip, [r0, r4]
 801dda4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801dda6:	4421      	add	r1, r4
 801dda8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801ddaa:	f108 38ff 	add.w	r8, r8, #4294967295
 801ddae:	4422      	add	r2, r4
 801ddb0:	e750      	b.n	801dc54 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801ddb2:	f04f 0900 	mov.w	r9, #0
 801ddb6:	eba3 0409 	sub.w	r4, r3, r9
 801ddba:	2c00      	cmp	r4, #0
 801ddbc:	f77f af4e 	ble.w	801dc5c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801ddc0:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801ddc4:	140d      	asrs	r5, r1, #16
 801ddc6:	1414      	asrs	r4, r2, #16
 801ddc8:	fb06 5404 	mla	r4, r6, r4, r5
 801ddcc:	9d02      	ldr	r5, [sp, #8]
 801ddce:	5d2e      	ldrb	r6, [r5, r4]
 801ddd0:	2e00      	cmp	r6, #0
 801ddd2:	d04c      	beq.n	801de6e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801ddd4:	9d01      	ldr	r5, [sp, #4]
 801ddd6:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801ddda:	9c05      	ldr	r4, [sp, #20]
 801dddc:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801dde0:	4366      	muls	r6, r4
 801dde2:	1c74      	adds	r4, r6, #1
 801dde4:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801dde8:	1224      	asrs	r4, r4, #8
 801ddea:	b2a7      	uxth	r7, r4
 801ddec:	122e      	asrs	r6, r5, #8
 801ddee:	43e4      	mvns	r4, r4
 801ddf0:	b2e4      	uxtb	r4, r4
 801ddf2:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801ddf6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ddfa:	fb16 f604 	smulbb	r6, r6, r4
 801ddfe:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801de02:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801de06:	00ed      	lsls	r5, r5, #3
 801de08:	fb0c 6c07 	mla	ip, ip, r7, r6
 801de0c:	b2ed      	uxtb	r5, r5
 801de0e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801de12:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801de16:	fb15 f504 	smulbb	r5, r5, r4
 801de1a:	fa5f f888 	uxtb.w	r8, r8
 801de1e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801de22:	fb08 5507 	mla	r5, r8, r7, r5
 801de26:	fb1a fa04 	smulbb	sl, sl, r4
 801de2a:	fa1f fc8c 	uxth.w	ip, ip
 801de2e:	b2ad      	uxth	r5, r5
 801de30:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801de34:	fb06 a607 	mla	r6, r6, r7, sl
 801de38:	f10c 0401 	add.w	r4, ip, #1
 801de3c:	f105 0a01 	add.w	sl, r5, #1
 801de40:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801de44:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801de48:	b2b6      	uxth	r6, r6
 801de4a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801de4e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801de52:	ea4a 0c0c 	orr.w	ip, sl, ip
 801de56:	f106 0a01 	add.w	sl, r6, #1
 801de5a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801de5e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801de62:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801de66:	ea4c 0c0a 	orr.w	ip, ip, sl
 801de6a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801de6e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801de70:	4421      	add	r1, r4
 801de72:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801de74:	f109 0901 	add.w	r9, r9, #1
 801de78:	4422      	add	r2, r4
 801de7a:	e79c      	b.n	801ddb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801de7c:	b007      	add	sp, #28
 801de7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801de82 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801de82:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801de86:	b085      	sub	sp, #20
 801de88:	468b      	mov	fp, r1
 801de8a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801de8c:	9203      	str	r2, [sp, #12]
 801de8e:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801de92:	6861      	ldr	r1, [r4, #4]
 801de94:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801de98:	fb01 2000 	mla	r0, r1, r0, r2
 801de9c:	6822      	ldr	r2, [r4, #0]
 801de9e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801dea2:	f8d8 2000 	ldr.w	r2, [r8]
 801dea6:	9200      	str	r2, [sp, #0]
 801dea8:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801deac:	9201      	str	r2, [sp, #4]
 801deae:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801deb2:	f1bb 0f00 	cmp.w	fp, #0
 801deb6:	dc03      	bgt.n	801dec0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801deb8:	9a03      	ldr	r2, [sp, #12]
 801deba:	2a00      	cmp	r2, #0
 801debc:	f340 8146 	ble.w	801e14c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801dec0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801dec2:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801dec6:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801deca:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801dece:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ded0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ded4:	2b00      	cmp	r3, #0
 801ded6:	dd0e      	ble.n	801def6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801ded8:	140c      	asrs	r4, r1, #16
 801deda:	d405      	bmi.n	801dee8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801dedc:	42bc      	cmp	r4, r7
 801dede:	da03      	bge.n	801dee8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801dee0:	1414      	asrs	r4, r2, #16
 801dee2:	d401      	bmi.n	801dee8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801dee4:	42b4      	cmp	r4, r6
 801dee6:	db07      	blt.n	801def8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801dee8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801deea:	4421      	add	r1, r4
 801deec:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801deee:	3b01      	subs	r3, #1
 801def0:	4422      	add	r2, r4
 801def2:	3002      	adds	r0, #2
 801def4:	e7ee      	b.n	801ded4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801def6:	d017      	beq.n	801df28 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801def8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801defa:	1e5c      	subs	r4, r3, #1
 801defc:	fb05 1504 	mla	r5, r5, r4, r1
 801df00:	142d      	asrs	r5, r5, #16
 801df02:	d409      	bmi.n	801df18 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801df04:	42bd      	cmp	r5, r7
 801df06:	da07      	bge.n	801df18 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801df08:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801df0a:	fb05 2404 	mla	r4, r5, r4, r2
 801df0e:	1424      	asrs	r4, r4, #16
 801df10:	d402      	bmi.n	801df18 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801df12:	42b4      	cmp	r4, r6
 801df14:	f2c0 80b3 	blt.w	801e07e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801df18:	2600      	movs	r6, #0
 801df1a:	199c      	adds	r4, r3, r6
 801df1c:	2c00      	cmp	r4, #0
 801df1e:	dc3e      	bgt.n	801df9e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801df20:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801df24:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801df28:	f1bb 0f00 	cmp.w	fp, #0
 801df2c:	f340 810e 	ble.w	801e14c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801df30:	ee30 0a04 	vadd.f32	s0, s0, s8
 801df34:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801df38:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801df3c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801df3e:	f1bb 0b01 	subs.w	fp, fp, #1
 801df42:	ee31 1a05 	vadd.f32	s2, s2, s10
 801df46:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801df4a:	eeb0 6a62 	vmov.f32	s12, s5
 801df4e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801df52:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801df56:	ee77 2a62 	vsub.f32	s5, s14, s5
 801df5a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801df5e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801df62:	eeb0 6a43 	vmov.f32	s12, s6
 801df66:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801df6a:	ee12 2a90 	vmov	r2, s5
 801df6e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801df72:	fb92 f3f3 	sdiv	r3, r2, r3
 801df76:	ee13 2a10 	vmov	r2, s6
 801df7a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801df7e:	9311      	str	r3, [sp, #68]	; 0x44
 801df80:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801df82:	fb92 f3f3 	sdiv	r3, r2, r3
 801df86:	9a03      	ldr	r2, [sp, #12]
 801df88:	9312      	str	r3, [sp, #72]	; 0x48
 801df8a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801df8e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801df90:	eeb0 3a67 	vmov.f32	s6, s15
 801df94:	bf08      	it	eq
 801df96:	4613      	moveq	r3, r2
 801df98:	eef0 2a47 	vmov.f32	s5, s14
 801df9c:	e789      	b.n	801deb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801df9e:	140f      	asrs	r7, r1, #16
 801dfa0:	d418      	bmi.n	801dfd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801dfa2:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801dfa6:	42bd      	cmp	r5, r7
 801dfa8:	dd14      	ble.n	801dfd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801dfaa:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801dfae:	d411      	bmi.n	801dfd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801dfb0:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801dfb4:	4564      	cmp	r4, ip
 801dfb6:	dd0d      	ble.n	801dfd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801dfb8:	b22d      	sxth	r5, r5
 801dfba:	fb0c 7505 	mla	r5, ip, r5, r7
 801dfbe:	9c01      	ldr	r4, [sp, #4]
 801dfc0:	5d64      	ldrb	r4, [r4, r5]
 801dfc2:	2cff      	cmp	r4, #255	; 0xff
 801dfc4:	d10c      	bne.n	801dfe0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801dfc6:	9c00      	ldr	r4, [sp, #0]
 801dfc8:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801dfcc:	f06f 0401 	mvn.w	r4, #1
 801dfd0:	4374      	muls	r4, r6
 801dfd2:	5305      	strh	r5, [r0, r4]
 801dfd4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801dfd6:	4421      	add	r1, r4
 801dfd8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801dfda:	3e01      	subs	r6, #1
 801dfdc:	4422      	add	r2, r4
 801dfde:	e79c      	b.n	801df1a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801dfe0:	2c00      	cmp	r4, #0
 801dfe2:	d0f7      	beq.n	801dfd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801dfe4:	9f00      	ldr	r7, [sp, #0]
 801dfe6:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801dfea:	f06f 0501 	mvn.w	r5, #1
 801dfee:	4375      	muls	r5, r6
 801dff0:	9502      	str	r5, [sp, #8]
 801dff2:	5b45      	ldrh	r5, [r0, r5]
 801dff4:	fa1f fc84 	uxth.w	ip, r4
 801dff8:	122f      	asrs	r7, r5, #8
 801dffa:	43e4      	mvns	r4, r4
 801dffc:	b2e4      	uxtb	r4, r4
 801dffe:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801e002:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e006:	fb17 f704 	smulbb	r7, r7, r4
 801e00a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801e00e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801e012:	00ed      	lsls	r5, r5, #3
 801e014:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801e018:	b2ed      	uxtb	r5, r5
 801e01a:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801e01e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801e022:	fb15 f504 	smulbb	r5, r5, r4
 801e026:	fa5f f989 	uxtb.w	r9, r9
 801e02a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801e02e:	fb09 550c 	mla	r5, r9, ip, r5
 801e032:	fb1a fa04 	smulbb	sl, sl, r4
 801e036:	fa1f fe8e 	uxth.w	lr, lr
 801e03a:	b2ad      	uxth	r5, r5
 801e03c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e040:	fb07 a70c 	mla	r7, r7, ip, sl
 801e044:	f10e 0401 	add.w	r4, lr, #1
 801e048:	f105 0a01 	add.w	sl, r5, #1
 801e04c:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801e050:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801e054:	b2bf      	uxth	r7, r7
 801e056:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801e05a:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801e05e:	ea4a 0e0e 	orr.w	lr, sl, lr
 801e062:	f107 0a01 	add.w	sl, r7, #1
 801e066:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801e06a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e06e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801e072:	9c02      	ldr	r4, [sp, #8]
 801e074:	ea4e 0e0a 	orr.w	lr, lr, sl
 801e078:	f820 e004 	strh.w	lr, [r0, r4]
 801e07c:	e7aa      	b.n	801dfd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801e07e:	f04f 0900 	mov.w	r9, #0
 801e082:	eba3 0409 	sub.w	r4, r3, r9
 801e086:	2c00      	cmp	r4, #0
 801e088:	f77f af4a 	ble.w	801df20 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801e08c:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801e090:	1414      	asrs	r4, r2, #16
 801e092:	140d      	asrs	r5, r1, #16
 801e094:	fb06 5504 	mla	r5, r6, r4, r5
 801e098:	9c01      	ldr	r4, [sp, #4]
 801e09a:	5d64      	ldrb	r4, [r4, r5]
 801e09c:	2cff      	cmp	r4, #255	; 0xff
 801e09e:	d10b      	bne.n	801e0b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801e0a0:	9c00      	ldr	r4, [sp, #0]
 801e0a2:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801e0a6:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801e0aa:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801e0ac:	4421      	add	r1, r4
 801e0ae:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801e0b0:	f109 0901 	add.w	r9, r9, #1
 801e0b4:	4422      	add	r2, r4
 801e0b6:	e7e4      	b.n	801e082 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801e0b8:	2c00      	cmp	r4, #0
 801e0ba:	d0f6      	beq.n	801e0aa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801e0bc:	9e00      	ldr	r6, [sp, #0]
 801e0be:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801e0c2:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801e0c6:	b2a7      	uxth	r7, r4
 801e0c8:	122e      	asrs	r6, r5, #8
 801e0ca:	43e4      	mvns	r4, r4
 801e0cc:	b2e4      	uxtb	r4, r4
 801e0ce:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801e0d2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801e0d6:	fb16 f604 	smulbb	r6, r6, r4
 801e0da:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801e0de:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e0e2:	00ed      	lsls	r5, r5, #3
 801e0e4:	fb0c 6c07 	mla	ip, ip, r7, r6
 801e0e8:	b2ed      	uxtb	r5, r5
 801e0ea:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801e0ee:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e0f2:	fb15 f504 	smulbb	r5, r5, r4
 801e0f6:	fa5f fe8e 	uxtb.w	lr, lr
 801e0fa:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801e0fe:	fb0e 5507 	mla	r5, lr, r7, r5
 801e102:	fb1a fa04 	smulbb	sl, sl, r4
 801e106:	fa1f fc8c 	uxth.w	ip, ip
 801e10a:	b2ad      	uxth	r5, r5
 801e10c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801e110:	fb06 a607 	mla	r6, r6, r7, sl
 801e114:	f10c 0401 	add.w	r4, ip, #1
 801e118:	f105 0a01 	add.w	sl, r5, #1
 801e11c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801e120:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801e124:	b2b6      	uxth	r6, r6
 801e126:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801e12a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e12e:	ea4a 0c0c 	orr.w	ip, sl, ip
 801e132:	f106 0a01 	add.w	sl, r6, #1
 801e136:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801e13a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e13e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801e142:	ea4c 0c0a 	orr.w	ip, ip, sl
 801e146:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801e14a:	e7ae      	b.n	801e0aa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801e14c:	b005      	add	sp, #20
 801e14e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e152 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e152:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e156:	b085      	sub	sp, #20
 801e158:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801e15a:	9203      	str	r2, [sp, #12]
 801e15c:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801e160:	9201      	str	r2, [sp, #4]
 801e162:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801e166:	9100      	str	r1, [sp, #0]
 801e168:	6841      	ldr	r1, [r0, #4]
 801e16a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801e16e:	fb01 2404 	mla	r4, r1, r4, r2
 801e172:	6802      	ldr	r2, [r0, #0]
 801e174:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801e178:	f8de 2000 	ldr.w	r2, [lr]
 801e17c:	9202      	str	r2, [sp, #8]
 801e17e:	9a01      	ldr	r2, [sp, #4]
 801e180:	43d6      	mvns	r6, r2
 801e182:	b2f6      	uxtb	r6, r6
 801e184:	9a00      	ldr	r2, [sp, #0]
 801e186:	2a00      	cmp	r2, #0
 801e188:	dc03      	bgt.n	801e192 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801e18a:	9a03      	ldr	r2, [sp, #12]
 801e18c:	2a00      	cmp	r2, #0
 801e18e:	f340 8124 	ble.w	801e3da <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801e192:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e194:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801e198:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801e19c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801e1a0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e1a2:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801e1a6:	2b00      	cmp	r3, #0
 801e1a8:	dd0e      	ble.n	801e1c8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801e1aa:	1408      	asrs	r0, r1, #16
 801e1ac:	d405      	bmi.n	801e1ba <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801e1ae:	4560      	cmp	r0, ip
 801e1b0:	da03      	bge.n	801e1ba <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801e1b2:	1410      	asrs	r0, r2, #16
 801e1b4:	d401      	bmi.n	801e1ba <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801e1b6:	42b8      	cmp	r0, r7
 801e1b8:	db07      	blt.n	801e1ca <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801e1ba:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e1bc:	4401      	add	r1, r0
 801e1be:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e1c0:	3b01      	subs	r3, #1
 801e1c2:	4402      	add	r2, r0
 801e1c4:	3402      	adds	r4, #2
 801e1c6:	e7ee      	b.n	801e1a6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801e1c8:	d06e      	beq.n	801e2a8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801e1ca:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e1cc:	1e58      	subs	r0, r3, #1
 801e1ce:	fb05 1500 	mla	r5, r5, r0, r1
 801e1d2:	142d      	asrs	r5, r5, #16
 801e1d4:	d45c      	bmi.n	801e290 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801e1d6:	4565      	cmp	r5, ip
 801e1d8:	da5a      	bge.n	801e290 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801e1da:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e1dc:	fb05 2000 	mla	r0, r5, r0, r2
 801e1e0:	1400      	asrs	r0, r0, #16
 801e1e2:	d455      	bmi.n	801e290 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801e1e4:	42b8      	cmp	r0, r7
 801e1e6:	da53      	bge.n	801e290 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801e1e8:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801e1ec:	4699      	mov	r9, r3
 801e1ee:	46a2      	mov	sl, r4
 801e1f0:	f1b9 0f00 	cmp.w	r9, #0
 801e1f4:	dd54      	ble.n	801e2a0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801e1f6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801e1fa:	140d      	asrs	r5, r1, #16
 801e1fc:	1410      	asrs	r0, r2, #16
 801e1fe:	fb07 5000 	mla	r0, r7, r0, r5
 801e202:	9d02      	ldr	r5, [sp, #8]
 801e204:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801e208:	f8ba 5000 	ldrh.w	r5, [sl]
 801e20c:	122f      	asrs	r7, r5, #8
 801e20e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801e212:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e216:	fb17 f706 	smulbb	r7, r7, r6
 801e21a:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801e21e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e222:	00ed      	lsls	r5, r5, #3
 801e224:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801e228:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801e22c:	10c7      	asrs	r7, r0, #3
 801e22e:	b2ed      	uxtb	r5, r5
 801e230:	00c0      	lsls	r0, r0, #3
 801e232:	fb18 f806 	smulbb	r8, r8, r6
 801e236:	fb15 f506 	smulbb	r5, r5, r6
 801e23a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e23e:	b2c0      	uxtb	r0, r0
 801e240:	fa1f fc8c 	uxth.w	ip, ip
 801e244:	fb07 870b 	mla	r7, r7, fp, r8
 801e248:	fb00 500b 	mla	r0, r0, fp, r5
 801e24c:	b280      	uxth	r0, r0
 801e24e:	b2bf      	uxth	r7, r7
 801e250:	f10c 0501 	add.w	r5, ip, #1
 801e254:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801e258:	f107 0801 	add.w	r8, r7, #1
 801e25c:	1c45      	adds	r5, r0, #1
 801e25e:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801e262:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801e266:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e268:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e26c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801e270:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801e274:	ea45 0c0c 	orr.w	ip, r5, ip
 801e278:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801e27c:	4401      	add	r1, r0
 801e27e:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e280:	ea4c 0c08 	orr.w	ip, ip, r8
 801e284:	f82a cb02 	strh.w	ip, [sl], #2
 801e288:	4402      	add	r2, r0
 801e28a:	f109 39ff 	add.w	r9, r9, #4294967295
 801e28e:	e7af      	b.n	801e1f0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801e290:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801e294:	f04f 0800 	mov.w	r8, #0
 801e298:	eb03 0008 	add.w	r0, r3, r8
 801e29c:	2800      	cmp	r0, #0
 801e29e:	dc41      	bgt.n	801e324 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801e2a0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e2a4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e2a8:	9b00      	ldr	r3, [sp, #0]
 801e2aa:	2b00      	cmp	r3, #0
 801e2ac:	f340 8095 	ble.w	801e3da <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801e2b0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e2b4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e2b8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e2bc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e2be:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e2c2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e2c6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e2ca:	eef0 6a62 	vmov.f32	s13, s5
 801e2ce:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e2d2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e2d6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e2da:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801e2de:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e2e2:	eef0 6a43 	vmov.f32	s13, s6
 801e2e6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e2ea:	ee12 2a90 	vmov	r2, s5
 801e2ee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e2f2:	fb92 f3f3 	sdiv	r3, r2, r3
 801e2f6:	ee13 2a10 	vmov	r2, s6
 801e2fa:	9311      	str	r3, [sp, #68]	; 0x44
 801e2fc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e2fe:	fb92 f3f3 	sdiv	r3, r2, r3
 801e302:	9312      	str	r3, [sp, #72]	; 0x48
 801e304:	9b00      	ldr	r3, [sp, #0]
 801e306:	9a03      	ldr	r2, [sp, #12]
 801e308:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e30c:	3b01      	subs	r3, #1
 801e30e:	9300      	str	r3, [sp, #0]
 801e310:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801e314:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e316:	eeb0 3a67 	vmov.f32	s6, s15
 801e31a:	bf08      	it	eq
 801e31c:	4613      	moveq	r3, r2
 801e31e:	eef0 2a47 	vmov.f32	s5, s14
 801e322:	e72f      	b.n	801e184 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801e324:	140f      	asrs	r7, r1, #16
 801e326:	d451      	bmi.n	801e3cc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801e328:	f8de 5008 	ldr.w	r5, [lr, #8]
 801e32c:	42bd      	cmp	r5, r7
 801e32e:	dd4d      	ble.n	801e3cc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801e330:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801e334:	d44a      	bmi.n	801e3cc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801e336:	f8de 000c 	ldr.w	r0, [lr, #12]
 801e33a:	4560      	cmp	r0, ip
 801e33c:	dd46      	ble.n	801e3cc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801e33e:	b22d      	sxth	r5, r5
 801e340:	fb0c 7505 	mla	r5, ip, r5, r7
 801e344:	9802      	ldr	r0, [sp, #8]
 801e346:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801e34a:	f06f 0501 	mvn.w	r5, #1
 801e34e:	fb05 fb08 	mul.w	fp, r5, r8
 801e352:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801e356:	f834 500b 	ldrh.w	r5, [r4, fp]
 801e35a:	122f      	asrs	r7, r5, #8
 801e35c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e360:	fb17 f706 	smulbb	r7, r7, r6
 801e364:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801e368:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e36c:	00ed      	lsls	r5, r5, #3
 801e36e:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801e372:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801e376:	10c7      	asrs	r7, r0, #3
 801e378:	b2ed      	uxtb	r5, r5
 801e37a:	00c0      	lsls	r0, r0, #3
 801e37c:	fb19 f906 	smulbb	r9, r9, r6
 801e380:	fb15 f506 	smulbb	r5, r5, r6
 801e384:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e388:	b2c0      	uxtb	r0, r0
 801e38a:	fa1f fc8c 	uxth.w	ip, ip
 801e38e:	fb07 970a 	mla	r7, r7, sl, r9
 801e392:	fb00 500a 	mla	r0, r0, sl, r5
 801e396:	b2bf      	uxth	r7, r7
 801e398:	b280      	uxth	r0, r0
 801e39a:	f10c 0501 	add.w	r5, ip, #1
 801e39e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801e3a2:	f107 0901 	add.w	r9, r7, #1
 801e3a6:	1c45      	adds	r5, r0, #1
 801e3a8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801e3ac:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801e3b0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e3b4:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801e3b8:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801e3bc:	ea45 0c0c 	orr.w	ip, r5, ip
 801e3c0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801e3c4:	ea4c 0c09 	orr.w	ip, ip, r9
 801e3c8:	f824 c00b 	strh.w	ip, [r4, fp]
 801e3cc:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e3ce:	4401      	add	r1, r0
 801e3d0:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e3d2:	f108 38ff 	add.w	r8, r8, #4294967295
 801e3d6:	4402      	add	r2, r0
 801e3d8:	e75e      	b.n	801e298 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801e3da:	b005      	add	sp, #20
 801e3dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e3e0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e3e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e3e4:	b085      	sub	sp, #20
 801e3e6:	4693      	mov	fp, r2
 801e3e8:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801e3ea:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e3ec:	6870      	ldr	r0, [r6, #4]
 801e3ee:	9101      	str	r1, [sp, #4]
 801e3f0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801e3f4:	fb00 2404 	mla	r4, r0, r4, r2
 801e3f8:	6832      	ldr	r2, [r6, #0]
 801e3fa:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801e3fe:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801e402:	682a      	ldr	r2, [r5, #0]
 801e404:	9202      	str	r2, [sp, #8]
 801e406:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801e40a:	9a01      	ldr	r2, [sp, #4]
 801e40c:	2a00      	cmp	r2, #0
 801e40e:	dc03      	bgt.n	801e418 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801e410:	f1bb 0f00 	cmp.w	fp, #0
 801e414:	f340 809a 	ble.w	801e54c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801e418:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e41a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801e41e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801e422:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801e426:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e428:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801e42c:	2b00      	cmp	r3, #0
 801e42e:	dd0c      	ble.n	801e44a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801e430:	1406      	asrs	r6, r0, #16
 801e432:	d405      	bmi.n	801e440 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e434:	454e      	cmp	r6, r9
 801e436:	da03      	bge.n	801e440 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e438:	1416      	asrs	r6, r2, #16
 801e43a:	d401      	bmi.n	801e440 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e43c:	4546      	cmp	r6, r8
 801e43e:	db05      	blt.n	801e44c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801e440:	4470      	add	r0, lr
 801e442:	4462      	add	r2, ip
 801e444:	3b01      	subs	r3, #1
 801e446:	3402      	adds	r4, #2
 801e448:	e7f0      	b.n	801e42c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801e44a:	d00f      	beq.n	801e46c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801e44c:	1e5e      	subs	r6, r3, #1
 801e44e:	fb0e 0706 	mla	r7, lr, r6, r0
 801e452:	143f      	asrs	r7, r7, #16
 801e454:	d541      	bpl.n	801e4da <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801e456:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801e45a:	4698      	mov	r8, r3
 801e45c:	9603      	str	r6, [sp, #12]
 801e45e:	f1b8 0f00 	cmp.w	r8, #0
 801e462:	dc56      	bgt.n	801e512 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801e464:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e468:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e46c:	9b01      	ldr	r3, [sp, #4]
 801e46e:	2b00      	cmp	r3, #0
 801e470:	dd6c      	ble.n	801e54c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801e472:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e476:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e47a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801e47e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e480:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e484:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e488:	eeb0 6a62 	vmov.f32	s12, s5
 801e48c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e490:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e494:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e498:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801e49c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e4a0:	eeb0 6a43 	vmov.f32	s12, s6
 801e4a4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e4a8:	ee12 2a90 	vmov	r2, s5
 801e4ac:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e4b0:	fb92 fef3 	sdiv	lr, r2, r3
 801e4b4:	ee13 2a10 	vmov	r2, s6
 801e4b8:	fb92 fcf3 	sdiv	ip, r2, r3
 801e4bc:	9b01      	ldr	r3, [sp, #4]
 801e4be:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e4c2:	3b01      	subs	r3, #1
 801e4c4:	9301      	str	r3, [sp, #4]
 801e4c6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801e4ca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e4cc:	eeb0 3a67 	vmov.f32	s6, s15
 801e4d0:	bf08      	it	eq
 801e4d2:	465b      	moveq	r3, fp
 801e4d4:	eef0 2a47 	vmov.f32	s5, s14
 801e4d8:	e797      	b.n	801e40a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801e4da:	454f      	cmp	r7, r9
 801e4dc:	dabb      	bge.n	801e456 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801e4de:	fb0c 2606 	mla	r6, ip, r6, r2
 801e4e2:	1436      	asrs	r6, r6, #16
 801e4e4:	d4b7      	bmi.n	801e456 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801e4e6:	4546      	cmp	r6, r8
 801e4e8:	dab5      	bge.n	801e456 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801e4ea:	461e      	mov	r6, r3
 801e4ec:	46a0      	mov	r8, r4
 801e4ee:	2e00      	cmp	r6, #0
 801e4f0:	ddb8      	ble.n	801e464 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801e4f2:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801e4f6:	9902      	ldr	r1, [sp, #8]
 801e4f8:	1417      	asrs	r7, r2, #16
 801e4fa:	ea4f 4920 	mov.w	r9, r0, asr #16
 801e4fe:	fb0a 9707 	mla	r7, sl, r7, r9
 801e502:	4470      	add	r0, lr
 801e504:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801e508:	f828 7b02 	strh.w	r7, [r8], #2
 801e50c:	4462      	add	r2, ip
 801e50e:	3e01      	subs	r6, #1
 801e510:	e7ed      	b.n	801e4ee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801e512:	ea5f 4920 	movs.w	r9, r0, asr #16
 801e516:	d414      	bmi.n	801e542 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801e518:	68ae      	ldr	r6, [r5, #8]
 801e51a:	454e      	cmp	r6, r9
 801e51c:	dd11      	ble.n	801e542 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801e51e:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801e522:	d40e      	bmi.n	801e542 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801e524:	68ef      	ldr	r7, [r5, #12]
 801e526:	4557      	cmp	r7, sl
 801e528:	dd0b      	ble.n	801e542 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801e52a:	b236      	sxth	r6, r6
 801e52c:	fb0a 9606 	mla	r6, sl, r6, r9
 801e530:	9f02      	ldr	r7, [sp, #8]
 801e532:	f06f 0101 	mvn.w	r1, #1
 801e536:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801e53a:	fb01 f608 	mul.w	r6, r1, r8
 801e53e:	9903      	ldr	r1, [sp, #12]
 801e540:	538f      	strh	r7, [r1, r6]
 801e542:	4470      	add	r0, lr
 801e544:	4462      	add	r2, ip
 801e546:	f108 38ff 	add.w	r8, r8, #4294967295
 801e54a:	e788      	b.n	801e45e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801e54c:	b005      	add	sp, #20
 801e54e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e552 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e552:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e556:	b087      	sub	sp, #28
 801e558:	468b      	mov	fp, r1
 801e55a:	9815      	ldr	r0, [sp, #84]	; 0x54
 801e55c:	9203      	str	r2, [sp, #12]
 801e55e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801e562:	9204      	str	r2, [sp, #16]
 801e564:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801e568:	6841      	ldr	r1, [r0, #4]
 801e56a:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801e56e:	fb01 2505 	mla	r5, r1, r5, r2
 801e572:	6802      	ldr	r2, [r0, #0]
 801e574:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801e578:	f8d9 2000 	ldr.w	r2, [r9]
 801e57c:	9201      	str	r2, [sp, #4]
 801e57e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801e582:	f1bb 0f00 	cmp.w	fp, #0
 801e586:	dc03      	bgt.n	801e590 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801e588:	9a03      	ldr	r2, [sp, #12]
 801e58a:	2a00      	cmp	r2, #0
 801e58c:	f340 8159 	ble.w	801e842 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801e590:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801e592:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801e596:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801e59a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801e59e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801e5a0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801e5a4:	2b00      	cmp	r3, #0
 801e5a6:	dd0e      	ble.n	801e5c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e5a8:	1402      	asrs	r2, r0, #16
 801e5aa:	d405      	bmi.n	801e5b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e5ac:	42ba      	cmp	r2, r7
 801e5ae:	da03      	bge.n	801e5b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e5b0:	140a      	asrs	r2, r1, #16
 801e5b2:	d401      	bmi.n	801e5b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e5b4:	42b2      	cmp	r2, r6
 801e5b6:	db07      	blt.n	801e5c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801e5b8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e5ba:	4410      	add	r0, r2
 801e5bc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e5be:	3b01      	subs	r3, #1
 801e5c0:	4411      	add	r1, r2
 801e5c2:	3502      	adds	r5, #2
 801e5c4:	e7ee      	b.n	801e5a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801e5c6:	d017      	beq.n	801e5f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801e5c8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801e5ca:	1e5a      	subs	r2, r3, #1
 801e5cc:	fb04 0402 	mla	r4, r4, r2, r0
 801e5d0:	1424      	asrs	r4, r4, #16
 801e5d2:	d409      	bmi.n	801e5e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801e5d4:	42bc      	cmp	r4, r7
 801e5d6:	da07      	bge.n	801e5e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801e5d8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801e5da:	fb04 1202 	mla	r2, r4, r2, r1
 801e5de:	1412      	asrs	r2, r2, #16
 801e5e0:	d402      	bmi.n	801e5e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801e5e2:	42b2      	cmp	r2, r6
 801e5e4:	f2c0 80bf 	blt.w	801e766 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e5e8:	2700      	movs	r7, #0
 801e5ea:	19da      	adds	r2, r3, r7
 801e5ec:	2a00      	cmp	r2, #0
 801e5ee:	dc3e      	bgt.n	801e66e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e5f0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e5f4:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801e5f8:	f1bb 0f00 	cmp.w	fp, #0
 801e5fc:	f340 8121 	ble.w	801e842 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801e600:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e604:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e608:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801e60c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e60e:	f1bb 0b01 	subs.w	fp, fp, #1
 801e612:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e616:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e61a:	eeb0 6a62 	vmov.f32	s12, s5
 801e61e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e622:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e626:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e62a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801e62e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e632:	eeb0 6a43 	vmov.f32	s12, s6
 801e636:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e63a:	ee12 2a90 	vmov	r2, s5
 801e63e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e642:	fb92 f3f3 	sdiv	r3, r2, r3
 801e646:	ee13 2a10 	vmov	r2, s6
 801e64a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e64e:	9313      	str	r3, [sp, #76]	; 0x4c
 801e650:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e652:	fb92 f3f3 	sdiv	r3, r2, r3
 801e656:	9a03      	ldr	r2, [sp, #12]
 801e658:	9314      	str	r3, [sp, #80]	; 0x50
 801e65a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801e65e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e660:	eeb0 3a67 	vmov.f32	s6, s15
 801e664:	bf08      	it	eq
 801e666:	4613      	moveq	r3, r2
 801e668:	eef0 2a47 	vmov.f32	s5, s14
 801e66c:	e789      	b.n	801e582 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801e66e:	1406      	asrs	r6, r0, #16
 801e670:	d42d      	bmi.n	801e6ce <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e672:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801e676:	42b4      	cmp	r4, r6
 801e678:	dd29      	ble.n	801e6ce <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e67a:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801e67e:	d426      	bmi.n	801e6ce <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e680:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801e684:	4562      	cmp	r2, ip
 801e686:	dd22      	ble.n	801e6ce <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e688:	b224      	sxth	r4, r4
 801e68a:	9a01      	ldr	r2, [sp, #4]
 801e68c:	fb0c 6404 	mla	r4, ip, r4, r6
 801e690:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801e694:	0e22      	lsrs	r2, r4, #24
 801e696:	d01a      	beq.n	801e6ce <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e698:	9e04      	ldr	r6, [sp, #16]
 801e69a:	4372      	muls	r2, r6
 801e69c:	1c56      	adds	r6, r2, #1
 801e69e:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801e6a2:	1212      	asrs	r2, r2, #8
 801e6a4:	0a26      	lsrs	r6, r4, #8
 801e6a6:	2aff      	cmp	r2, #255	; 0xff
 801e6a8:	9605      	str	r6, [sp, #20]
 801e6aa:	d116      	bne.n	801e6da <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801e6ac:	f06f 0201 	mvn.w	r2, #1
 801e6b0:	fb02 fc07 	mul.w	ip, r2, r7
 801e6b4:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801e6b8:	0962      	lsrs	r2, r4, #5
 801e6ba:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e6be:	f026 0607 	bic.w	r6, r6, #7
 801e6c2:	4316      	orrs	r6, r2
 801e6c4:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801e6c8:	4326      	orrs	r6, r4
 801e6ca:	f825 600c 	strh.w	r6, [r5, ip]
 801e6ce:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e6d0:	4410      	add	r0, r2
 801e6d2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e6d4:	3f01      	subs	r7, #1
 801e6d6:	4411      	add	r1, r2
 801e6d8:	e787      	b.n	801e5ea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801e6da:	f06f 0601 	mvn.w	r6, #1
 801e6de:	437e      	muls	r6, r7
 801e6e0:	fa1f fa82 	uxth.w	sl, r2
 801e6e4:	f835 8006 	ldrh.w	r8, [r5, r6]
 801e6e8:	9602      	str	r6, [sp, #8]
 801e6ea:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801e6ee:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801e6f2:	43d2      	mvns	r2, r2
 801e6f4:	b2d2      	uxtb	r2, r2
 801e6f6:	fb1c fc0a 	smulbb	ip, ip, sl
 801e6fa:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801e6fe:	fb0e ce02 	mla	lr, lr, r2, ip
 801e702:	b2e4      	uxtb	r4, r4
 801e704:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801e708:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801e70c:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801e710:	fa5f f888 	uxtb.w	r8, r8
 801e714:	fb14 f40a 	smulbb	r4, r4, sl
 801e718:	fb08 4402 	mla	r4, r8, r2, r4
 801e71c:	fa1f fe8e 	uxth.w	lr, lr
 801e720:	fb16 f60a 	smulbb	r6, r6, sl
 801e724:	b2a4      	uxth	r4, r4
 801e726:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801e72a:	fb0c 6c02 	mla	ip, ip, r2, r6
 801e72e:	f10e 0201 	add.w	r2, lr, #1
 801e732:	1c66      	adds	r6, r4, #1
 801e734:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801e738:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801e73c:	fa1f fc8c 	uxth.w	ip, ip
 801e740:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801e744:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801e748:	ea46 0e0e 	orr.w	lr, r6, lr
 801e74c:	f10c 0601 	add.w	r6, ip, #1
 801e750:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801e754:	0976      	lsrs	r6, r6, #5
 801e756:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e75a:	9a02      	ldr	r2, [sp, #8]
 801e75c:	ea4e 0e06 	orr.w	lr, lr, r6
 801e760:	f825 e002 	strh.w	lr, [r5, r2]
 801e764:	e7b3      	b.n	801e6ce <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e766:	f04f 0800 	mov.w	r8, #0
 801e76a:	eba3 0208 	sub.w	r2, r3, r8
 801e76e:	2a00      	cmp	r2, #0
 801e770:	f77f af3e 	ble.w	801e5f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801e774:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801e778:	1404      	asrs	r4, r0, #16
 801e77a:	140a      	asrs	r2, r1, #16
 801e77c:	fb06 4202 	mla	r2, r6, r2, r4
 801e780:	9c01      	ldr	r4, [sp, #4]
 801e782:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801e786:	0e22      	lsrs	r2, r4, #24
 801e788:	d016      	beq.n	801e7b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801e78a:	9e04      	ldr	r6, [sp, #16]
 801e78c:	4372      	muls	r2, r6
 801e78e:	1c56      	adds	r6, r2, #1
 801e790:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801e794:	1212      	asrs	r2, r2, #8
 801e796:	2aff      	cmp	r2, #255	; 0xff
 801e798:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801e79c:	d113      	bne.n	801e7c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801e79e:	0962      	lsrs	r2, r4, #5
 801e7a0:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801e7a4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e7a8:	f026 0607 	bic.w	r6, r6, #7
 801e7ac:	4316      	orrs	r6, r2
 801e7ae:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801e7b2:	4326      	orrs	r6, r4
 801e7b4:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801e7b8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e7ba:	4410      	add	r0, r2
 801e7bc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e7be:	f108 0801 	add.w	r8, r8, #1
 801e7c2:	4411      	add	r1, r2
 801e7c4:	e7d1      	b.n	801e76a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801e7c6:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801e7ca:	fa1f fa82 	uxth.w	sl, r2
 801e7ce:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801e7d2:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801e7d6:	43d2      	mvns	r2, r2
 801e7d8:	b2d2      	uxtb	r2, r2
 801e7da:	fb17 f70a 	smulbb	r7, r7, sl
 801e7de:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e7e2:	fb0c 7c02 	mla	ip, ip, r2, r7
 801e7e6:	b2e4      	uxtb	r4, r4
 801e7e8:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801e7ec:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e7f0:	fa5f fe8e 	uxtb.w	lr, lr
 801e7f4:	fb14 f40a 	smulbb	r4, r4, sl
 801e7f8:	fb0e 4402 	mla	r4, lr, r2, r4
 801e7fc:	b2f6      	uxtb	r6, r6
 801e7fe:	fa1f fc8c 	uxth.w	ip, ip
 801e802:	fb16 f60a 	smulbb	r6, r6, sl
 801e806:	b2a4      	uxth	r4, r4
 801e808:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e80c:	fb07 6702 	mla	r7, r7, r2, r6
 801e810:	f10c 0201 	add.w	r2, ip, #1
 801e814:	1c66      	adds	r6, r4, #1
 801e816:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801e81a:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801e81e:	b2bf      	uxth	r7, r7
 801e820:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801e824:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e828:	ea46 0c0c 	orr.w	ip, r6, ip
 801e82c:	1c7e      	adds	r6, r7, #1
 801e82e:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801e832:	0976      	lsrs	r6, r6, #5
 801e834:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e838:	ea4c 0c06 	orr.w	ip, ip, r6
 801e83c:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801e840:	e7ba      	b.n	801e7b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801e842:	b007      	add	sp, #28
 801e844:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e848 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e848:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e84c:	b085      	sub	sp, #20
 801e84e:	468b      	mov	fp, r1
 801e850:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801e852:	9203      	str	r2, [sp, #12]
 801e854:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801e858:	6841      	ldr	r1, [r0, #4]
 801e85a:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801e85e:	fb01 2404 	mla	r4, r1, r4, r2
 801e862:	6802      	ldr	r2, [r0, #0]
 801e864:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801e868:	f8d8 2000 	ldr.w	r2, [r8]
 801e86c:	9201      	str	r2, [sp, #4]
 801e86e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801e872:	f1bb 0f00 	cmp.w	fp, #0
 801e876:	dc03      	bgt.n	801e880 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801e878:	9a03      	ldr	r2, [sp, #12]
 801e87a:	2a00      	cmp	r2, #0
 801e87c:	f340 814f 	ble.w	801eb1e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801e880:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e882:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801e886:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801e88a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801e88e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e890:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801e894:	2b00      	cmp	r3, #0
 801e896:	dd0e      	ble.n	801e8b6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801e898:	1408      	asrs	r0, r1, #16
 801e89a:	d405      	bmi.n	801e8a8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e89c:	42b8      	cmp	r0, r7
 801e89e:	da03      	bge.n	801e8a8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e8a0:	1410      	asrs	r0, r2, #16
 801e8a2:	d401      	bmi.n	801e8a8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e8a4:	42b0      	cmp	r0, r6
 801e8a6:	db07      	blt.n	801e8b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e8a8:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e8aa:	4401      	add	r1, r0
 801e8ac:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e8ae:	3b01      	subs	r3, #1
 801e8b0:	4402      	add	r2, r0
 801e8b2:	3402      	adds	r4, #2
 801e8b4:	e7ee      	b.n	801e894 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801e8b6:	d017      	beq.n	801e8e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801e8b8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e8ba:	1e58      	subs	r0, r3, #1
 801e8bc:	fb05 1500 	mla	r5, r5, r0, r1
 801e8c0:	142d      	asrs	r5, r5, #16
 801e8c2:	d409      	bmi.n	801e8d8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e8c4:	42bd      	cmp	r5, r7
 801e8c6:	da07      	bge.n	801e8d8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e8c8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e8ca:	fb05 2000 	mla	r0, r5, r0, r2
 801e8ce:	1400      	asrs	r0, r0, #16
 801e8d0:	d402      	bmi.n	801e8d8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e8d2:	42b0      	cmp	r0, r6
 801e8d4:	f2c0 80ba 	blt.w	801ea4c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e8d8:	2600      	movs	r6, #0
 801e8da:	1998      	adds	r0, r3, r6
 801e8dc:	2800      	cmp	r0, #0
 801e8de:	dc3e      	bgt.n	801e95e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e8e0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e8e4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e8e8:	f1bb 0f00 	cmp.w	fp, #0
 801e8ec:	f340 8117 	ble.w	801eb1e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801e8f0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e8f4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e8f8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801e8fc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e8fe:	f1bb 0b01 	subs.w	fp, fp, #1
 801e902:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e906:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e90a:	eeb0 6a62 	vmov.f32	s12, s5
 801e90e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e912:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e916:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e91a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801e91e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e922:	eeb0 6a43 	vmov.f32	s12, s6
 801e926:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e92a:	ee12 2a90 	vmov	r2, s5
 801e92e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e932:	fb92 f3f3 	sdiv	r3, r2, r3
 801e936:	ee13 2a10 	vmov	r2, s6
 801e93a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e93e:	9311      	str	r3, [sp, #68]	; 0x44
 801e940:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e942:	fb92 f3f3 	sdiv	r3, r2, r3
 801e946:	9a03      	ldr	r2, [sp, #12]
 801e948:	9312      	str	r3, [sp, #72]	; 0x48
 801e94a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801e94e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e950:	eeb0 3a67 	vmov.f32	s6, s15
 801e954:	bf08      	it	eq
 801e956:	4613      	moveq	r3, r2
 801e958:	eef0 2a47 	vmov.f32	s5, s14
 801e95c:	e789      	b.n	801e872 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801e95e:	140f      	asrs	r7, r1, #16
 801e960:	d424      	bmi.n	801e9ac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e962:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801e966:	42bd      	cmp	r5, r7
 801e968:	dd20      	ble.n	801e9ac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e96a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801e96e:	d41d      	bmi.n	801e9ac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e970:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801e974:	4560      	cmp	r0, ip
 801e976:	dd19      	ble.n	801e9ac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e978:	b22d      	sxth	r5, r5
 801e97a:	fb0c 7505 	mla	r5, ip, r5, r7
 801e97e:	9801      	ldr	r0, [sp, #4]
 801e980:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801e984:	0e07      	lsrs	r7, r0, #24
 801e986:	2fff      	cmp	r7, #255	; 0xff
 801e988:	d116      	bne.n	801e9b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801e98a:	f06f 0501 	mvn.w	r5, #1
 801e98e:	fb05 f706 	mul.w	r7, r5, r6
 801e992:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801e996:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801e99a:	0945      	lsrs	r5, r0, #5
 801e99c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e9a0:	ea4c 0505 	orr.w	r5, ip, r5
 801e9a4:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801e9a8:	4305      	orrs	r5, r0
 801e9aa:	53e5      	strh	r5, [r4, r7]
 801e9ac:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e9ae:	4401      	add	r1, r0
 801e9b0:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e9b2:	3e01      	subs	r6, #1
 801e9b4:	4402      	add	r2, r0
 801e9b6:	e790      	b.n	801e8da <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e9b8:	b2fd      	uxtb	r5, r7
 801e9ba:	2f00      	cmp	r7, #0
 801e9bc:	d0f6      	beq.n	801e9ac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e9be:	f06f 0701 	mvn.w	r7, #1
 801e9c2:	4377      	muls	r7, r6
 801e9c4:	fa1f f985 	uxth.w	r9, r5
 801e9c8:	f834 e007 	ldrh.w	lr, [r4, r7]
 801e9cc:	9702      	str	r7, [sp, #8]
 801e9ce:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801e9d2:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801e9d6:	43ed      	mvns	r5, r5
 801e9d8:	b2ed      	uxtb	r5, r5
 801e9da:	fb17 f709 	smulbb	r7, r7, r9
 801e9de:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e9e2:	fb0c 7c05 	mla	ip, ip, r5, r7
 801e9e6:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801e9ea:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801e9ee:	b2c0      	uxtb	r0, r0
 801e9f0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e9f4:	fa5f fe8e 	uxtb.w	lr, lr
 801e9f8:	fb10 f009 	smulbb	r0, r0, r9
 801e9fc:	fb0e 0005 	mla	r0, lr, r5, r0
 801ea00:	b280      	uxth	r0, r0
 801ea02:	fa1f fc8c 	uxth.w	ip, ip
 801ea06:	fb1a fa09 	smulbb	sl, sl, r9
 801ea0a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ea0e:	fb07 a705 	mla	r7, r7, r5, sl
 801ea12:	f100 0a01 	add.w	sl, r0, #1
 801ea16:	f10c 0501 	add.w	r5, ip, #1
 801ea1a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801ea1e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801ea22:	b2bf      	uxth	r7, r7
 801ea24:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ea28:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ea2c:	ea4a 0c0c 	orr.w	ip, sl, ip
 801ea30:	f107 0a01 	add.w	sl, r7, #1
 801ea34:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801ea38:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ea3c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ea40:	9802      	ldr	r0, [sp, #8]
 801ea42:	ea4c 0c0a 	orr.w	ip, ip, sl
 801ea46:	f824 c000 	strh.w	ip, [r4, r0]
 801ea4a:	e7af      	b.n	801e9ac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ea4c:	f04f 0e00 	mov.w	lr, #0
 801ea50:	eba3 000e 	sub.w	r0, r3, lr
 801ea54:	2800      	cmp	r0, #0
 801ea56:	f77f af43 	ble.w	801e8e0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801ea5a:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801ea5e:	140d      	asrs	r5, r1, #16
 801ea60:	1410      	asrs	r0, r2, #16
 801ea62:	fb06 5000 	mla	r0, r6, r0, r5
 801ea66:	9d01      	ldr	r5, [sp, #4]
 801ea68:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801ea6c:	0e2e      	lsrs	r6, r5, #24
 801ea6e:	2eff      	cmp	r6, #255	; 0xff
 801ea70:	d112      	bne.n	801ea98 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801ea72:	482c      	ldr	r0, [pc, #176]	; (801eb24 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801ea74:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801ea78:	0968      	lsrs	r0, r5, #5
 801ea7a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ea7e:	4330      	orrs	r0, r6
 801ea80:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801ea84:	4328      	orrs	r0, r5
 801ea86:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801ea8a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801ea8c:	4401      	add	r1, r0
 801ea8e:	9812      	ldr	r0, [sp, #72]	; 0x48
 801ea90:	f10e 0e01 	add.w	lr, lr, #1
 801ea94:	4402      	add	r2, r0
 801ea96:	e7db      	b.n	801ea50 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801ea98:	b2f0      	uxtb	r0, r6
 801ea9a:	2e00      	cmp	r6, #0
 801ea9c:	d0f5      	beq.n	801ea8a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801ea9e:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801eaa2:	fa1f f980 	uxth.w	r9, r0
 801eaa6:	ea4f 272c 	mov.w	r7, ip, asr #8
 801eaaa:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801eaae:	43c0      	mvns	r0, r0
 801eab0:	b2c0      	uxtb	r0, r0
 801eab2:	fb16 f609 	smulbb	r6, r6, r9
 801eab6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801eaba:	fb07 6700 	mla	r7, r7, r0, r6
 801eabe:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801eac2:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801eac6:	b2ed      	uxtb	r5, r5
 801eac8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801eacc:	fa5f fc8c 	uxtb.w	ip, ip
 801ead0:	fb15 f509 	smulbb	r5, r5, r9
 801ead4:	fb0c 5500 	mla	r5, ip, r0, r5
 801ead8:	b2bf      	uxth	r7, r7
 801eada:	fb1a fa09 	smulbb	sl, sl, r9
 801eade:	b2ad      	uxth	r5, r5
 801eae0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801eae4:	fb06 a600 	mla	r6, r6, r0, sl
 801eae8:	1c78      	adds	r0, r7, #1
 801eaea:	f105 0a01 	add.w	sl, r5, #1
 801eaee:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801eaf2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801eaf6:	b2b6      	uxth	r6, r6
 801eaf8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801eafc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801eb00:	ea4a 0707 	orr.w	r7, sl, r7
 801eb04:	f106 0a01 	add.w	sl, r6, #1
 801eb08:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801eb0c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801eb10:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801eb14:	ea47 070a 	orr.w	r7, r7, sl
 801eb18:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801eb1c:	e7b5      	b.n	801ea8a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801eb1e:	b005      	add	sp, #20
 801eb20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801eb24:	fffff800 	.word	0xfffff800

0801eb28 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801eb28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801eb2c:	b087      	sub	sp, #28
 801eb2e:	468b      	mov	fp, r1
 801eb30:	9815      	ldr	r0, [sp, #84]	; 0x54
 801eb32:	9203      	str	r2, [sp, #12]
 801eb34:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801eb38:	9204      	str	r2, [sp, #16]
 801eb3a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801eb3e:	6841      	ldr	r1, [r0, #4]
 801eb40:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801eb44:	fb01 2404 	mla	r4, r1, r4, r2
 801eb48:	6802      	ldr	r2, [r0, #0]
 801eb4a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801eb4e:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801eb52:	3201      	adds	r2, #1
 801eb54:	f022 0201 	bic.w	r2, r2, #1
 801eb58:	9200      	str	r2, [sp, #0]
 801eb5a:	f8d9 2000 	ldr.w	r2, [r9]
 801eb5e:	9201      	str	r2, [sp, #4]
 801eb60:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801eb64:	f1bb 0f00 	cmp.w	fp, #0
 801eb68:	dc03      	bgt.n	801eb72 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801eb6a:	9a03      	ldr	r2, [sp, #12]
 801eb6c:	2a00      	cmp	r2, #0
 801eb6e:	f340 8169 	ble.w	801ee44 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801eb72:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801eb74:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801eb78:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801eb7c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801eb80:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801eb82:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801eb86:	2b00      	cmp	r3, #0
 801eb88:	dd0e      	ble.n	801eba8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801eb8a:	1402      	asrs	r2, r0, #16
 801eb8c:	d405      	bmi.n	801eb9a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801eb8e:	42ba      	cmp	r2, r7
 801eb90:	da03      	bge.n	801eb9a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801eb92:	140a      	asrs	r2, r1, #16
 801eb94:	d401      	bmi.n	801eb9a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801eb96:	42b2      	cmp	r2, r6
 801eb98:	db07      	blt.n	801ebaa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801eb9a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801eb9c:	4410      	add	r0, r2
 801eb9e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801eba0:	3b01      	subs	r3, #1
 801eba2:	4411      	add	r1, r2
 801eba4:	3402      	adds	r4, #2
 801eba6:	e7ee      	b.n	801eb86 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801eba8:	d017      	beq.n	801ebda <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801ebaa:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ebac:	1e5a      	subs	r2, r3, #1
 801ebae:	fb05 0502 	mla	r5, r5, r2, r0
 801ebb2:	142d      	asrs	r5, r5, #16
 801ebb4:	d409      	bmi.n	801ebca <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801ebb6:	42bd      	cmp	r5, r7
 801ebb8:	da07      	bge.n	801ebca <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801ebba:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ebbc:	fb05 1202 	mla	r2, r5, r2, r1
 801ebc0:	1412      	asrs	r2, r2, #16
 801ebc2:	d402      	bmi.n	801ebca <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801ebc4:	42b2      	cmp	r2, r6
 801ebc6:	f2c0 80c7 	blt.w	801ed58 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801ebca:	2700      	movs	r7, #0
 801ebcc:	19da      	adds	r2, r3, r7
 801ebce:	2a00      	cmp	r2, #0
 801ebd0:	dc3e      	bgt.n	801ec50 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801ebd2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ebd6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ebda:	f1bb 0f00 	cmp.w	fp, #0
 801ebde:	f340 8131 	ble.w	801ee44 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801ebe2:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ebe6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ebea:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ebee:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ebf0:	f1bb 0b01 	subs.w	fp, fp, #1
 801ebf4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ebf8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ebfc:	eeb0 6a62 	vmov.f32	s12, s5
 801ec00:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ec04:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ec08:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ec0c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801ec10:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ec14:	eeb0 6a43 	vmov.f32	s12, s6
 801ec18:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ec1c:	ee12 2a90 	vmov	r2, s5
 801ec20:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ec24:	fb92 f3f3 	sdiv	r3, r2, r3
 801ec28:	ee13 2a10 	vmov	r2, s6
 801ec2c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ec30:	9313      	str	r3, [sp, #76]	; 0x4c
 801ec32:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ec34:	fb92 f3f3 	sdiv	r3, r2, r3
 801ec38:	9a03      	ldr	r2, [sp, #12]
 801ec3a:	9314      	str	r3, [sp, #80]	; 0x50
 801ec3c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801ec40:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ec42:	eeb0 3a67 	vmov.f32	s6, s15
 801ec46:	bf08      	it	eq
 801ec48:	4613      	moveq	r3, r2
 801ec4a:	eef0 2a47 	vmov.f32	s5, s14
 801ec4e:	e789      	b.n	801eb64 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801ec50:	1405      	asrs	r5, r0, #16
 801ec52:	d435      	bmi.n	801ecc0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ec54:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801ec58:	42aa      	cmp	r2, r5
 801ec5a:	dd31      	ble.n	801ecc0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ec5c:	140e      	asrs	r6, r1, #16
 801ec5e:	d42f      	bmi.n	801ecc0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ec60:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801ec64:	42b2      	cmp	r2, r6
 801ec66:	dd2b      	ble.n	801ecc0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ec68:	9a00      	ldr	r2, [sp, #0]
 801ec6a:	fb06 5502 	mla	r5, r6, r2, r5
 801ec6e:	086a      	lsrs	r2, r5, #1
 801ec70:	9e01      	ldr	r6, [sp, #4]
 801ec72:	5cb2      	ldrb	r2, [r6, r2]
 801ec74:	07ee      	lsls	r6, r5, #31
 801ec76:	bf54      	ite	pl
 801ec78:	f002 020f 	andpl.w	r2, r2, #15
 801ec7c:	1112      	asrmi	r2, r2, #4
 801ec7e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ec82:	b2d2      	uxtb	r2, r2
 801ec84:	b1e2      	cbz	r2, 801ecc0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ec86:	9d04      	ldr	r5, [sp, #16]
 801ec88:	436a      	muls	r2, r5
 801ec8a:	1c55      	adds	r5, r2, #1
 801ec8c:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801ec90:	4d6e      	ldr	r5, [pc, #440]	; (801ee4c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801ec92:	682d      	ldr	r5, [r5, #0]
 801ec94:	1212      	asrs	r2, r2, #8
 801ec96:	0a2e      	lsrs	r6, r5, #8
 801ec98:	2aff      	cmp	r2, #255	; 0xff
 801ec9a:	9605      	str	r6, [sp, #20]
 801ec9c:	d116      	bne.n	801eccc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801ec9e:	f06f 0201 	mvn.w	r2, #1
 801eca2:	fb02 fc07 	mul.w	ip, r2, r7
 801eca6:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801ecaa:	096a      	lsrs	r2, r5, #5
 801ecac:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ecb0:	f026 0607 	bic.w	r6, r6, #7
 801ecb4:	4316      	orrs	r6, r2
 801ecb6:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801ecba:	432e      	orrs	r6, r5
 801ecbc:	f824 600c 	strh.w	r6, [r4, ip]
 801ecc0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ecc2:	4410      	add	r0, r2
 801ecc4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ecc6:	3f01      	subs	r7, #1
 801ecc8:	4411      	add	r1, r2
 801ecca:	e77f      	b.n	801ebcc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801eccc:	f06f 0601 	mvn.w	r6, #1
 801ecd0:	437e      	muls	r6, r7
 801ecd2:	fa1f fa82 	uxth.w	sl, r2
 801ecd6:	f834 8006 	ldrh.w	r8, [r4, r6]
 801ecda:	9602      	str	r6, [sp, #8]
 801ecdc:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801ece0:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801ece4:	43d2      	mvns	r2, r2
 801ece6:	b2d2      	uxtb	r2, r2
 801ece8:	fb1c fc0a 	smulbb	ip, ip, sl
 801ecec:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801ecf0:	fb0e ce02 	mla	lr, lr, r2, ip
 801ecf4:	b2ed      	uxtb	r5, r5
 801ecf6:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801ecfa:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801ecfe:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801ed02:	fa5f f888 	uxtb.w	r8, r8
 801ed06:	fb15 f50a 	smulbb	r5, r5, sl
 801ed0a:	fb08 5502 	mla	r5, r8, r2, r5
 801ed0e:	fa1f fe8e 	uxth.w	lr, lr
 801ed12:	fb16 f60a 	smulbb	r6, r6, sl
 801ed16:	b2ad      	uxth	r5, r5
 801ed18:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801ed1c:	fb0c 6c02 	mla	ip, ip, r2, r6
 801ed20:	f10e 0201 	add.w	r2, lr, #1
 801ed24:	1c6e      	adds	r6, r5, #1
 801ed26:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801ed2a:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801ed2e:	fa1f fc8c 	uxth.w	ip, ip
 801ed32:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801ed36:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801ed3a:	ea46 0e0e 	orr.w	lr, r6, lr
 801ed3e:	f10c 0601 	add.w	r6, ip, #1
 801ed42:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801ed46:	0976      	lsrs	r6, r6, #5
 801ed48:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801ed4c:	9a02      	ldr	r2, [sp, #8]
 801ed4e:	ea4e 0e06 	orr.w	lr, lr, r6
 801ed52:	f824 e002 	strh.w	lr, [r4, r2]
 801ed56:	e7b3      	b.n	801ecc0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ed58:	f04f 0800 	mov.w	r8, #0
 801ed5c:	eba3 0208 	sub.w	r2, r3, r8
 801ed60:	2a00      	cmp	r2, #0
 801ed62:	f77f af36 	ble.w	801ebd2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801ed66:	9e00      	ldr	r6, [sp, #0]
 801ed68:	1402      	asrs	r2, r0, #16
 801ed6a:	140d      	asrs	r5, r1, #16
 801ed6c:	fb06 2505 	mla	r5, r6, r5, r2
 801ed70:	086a      	lsrs	r2, r5, #1
 801ed72:	9e01      	ldr	r6, [sp, #4]
 801ed74:	5cb2      	ldrb	r2, [r6, r2]
 801ed76:	07ed      	lsls	r5, r5, #31
 801ed78:	bf54      	ite	pl
 801ed7a:	f002 020f 	andpl.w	r2, r2, #15
 801ed7e:	1112      	asrmi	r2, r2, #4
 801ed80:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ed84:	b2d2      	uxtb	r2, r2
 801ed86:	b1c2      	cbz	r2, 801edba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801ed88:	9d04      	ldr	r5, [sp, #16]
 801ed8a:	436a      	muls	r2, r5
 801ed8c:	1c55      	adds	r5, r2, #1
 801ed8e:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801ed92:	4d2e      	ldr	r5, [pc, #184]	; (801ee4c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801ed94:	1212      	asrs	r2, r2, #8
 801ed96:	682e      	ldr	r6, [r5, #0]
 801ed98:	2aff      	cmp	r2, #255	; 0xff
 801ed9a:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801ed9e:	d113      	bne.n	801edc8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801eda0:	0972      	lsrs	r2, r6, #5
 801eda2:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801eda6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801edaa:	f025 0507 	bic.w	r5, r5, #7
 801edae:	4315      	orrs	r5, r2
 801edb0:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801edb4:	4335      	orrs	r5, r6
 801edb6:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801edba:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801edbc:	4410      	add	r0, r2
 801edbe:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801edc0:	f108 0801 	add.w	r8, r8, #1
 801edc4:	4411      	add	r1, r2
 801edc6:	e7c9      	b.n	801ed5c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801edc8:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801edcc:	fa1f fa82 	uxth.w	sl, r2
 801edd0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801edd4:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801edd8:	43d2      	mvns	r2, r2
 801edda:	b2d2      	uxtb	r2, r2
 801eddc:	fb17 f70a 	smulbb	r7, r7, sl
 801ede0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ede4:	fb0c 7c02 	mla	ip, ip, r2, r7
 801ede8:	b2f6      	uxtb	r6, r6
 801edea:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801edee:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801edf2:	fa5f fe8e 	uxtb.w	lr, lr
 801edf6:	fb16 f60a 	smulbb	r6, r6, sl
 801edfa:	fb0e 6602 	mla	r6, lr, r2, r6
 801edfe:	b2ed      	uxtb	r5, r5
 801ee00:	fa1f fc8c 	uxth.w	ip, ip
 801ee04:	fb15 f50a 	smulbb	r5, r5, sl
 801ee08:	b2b6      	uxth	r6, r6
 801ee0a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ee0e:	fb07 5702 	mla	r7, r7, r2, r5
 801ee12:	f10c 0201 	add.w	r2, ip, #1
 801ee16:	1c75      	adds	r5, r6, #1
 801ee18:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801ee1c:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801ee20:	b2bf      	uxth	r7, r7
 801ee22:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801ee26:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ee2a:	ea45 0c0c 	orr.w	ip, r5, ip
 801ee2e:	1c7d      	adds	r5, r7, #1
 801ee30:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801ee34:	096d      	lsrs	r5, r5, #5
 801ee36:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ee3a:	ea4c 0c05 	orr.w	ip, ip, r5
 801ee3e:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801ee42:	e7ba      	b.n	801edba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801ee44:	b007      	add	sp, #28
 801ee46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ee4a:	bf00      	nop
 801ee4c:	2000225c 	.word	0x2000225c

0801ee50 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ee50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ee54:	b087      	sub	sp, #28
 801ee56:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801f164 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801ee5a:	9815      	ldr	r0, [sp, #84]	; 0x54
 801ee5c:	9205      	str	r2, [sp, #20]
 801ee5e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801ee62:	9101      	str	r1, [sp, #4]
 801ee64:	6841      	ldr	r1, [r0, #4]
 801ee66:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801ee6a:	fb01 2404 	mla	r4, r1, r4, r2
 801ee6e:	6802      	ldr	r2, [r0, #0]
 801ee70:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ee74:	f8db 2008 	ldr.w	r2, [fp, #8]
 801ee78:	3201      	adds	r2, #1
 801ee7a:	f022 0201 	bic.w	r2, r2, #1
 801ee7e:	9202      	str	r2, [sp, #8]
 801ee80:	f8db 2000 	ldr.w	r2, [fp]
 801ee84:	9203      	str	r2, [sp, #12]
 801ee86:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ee8a:	9a01      	ldr	r2, [sp, #4]
 801ee8c:	2a00      	cmp	r2, #0
 801ee8e:	dc03      	bgt.n	801ee98 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ee90:	9a05      	ldr	r2, [sp, #20]
 801ee92:	2a00      	cmp	r2, #0
 801ee94:	f340 8162 	ble.w	801f15c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801ee98:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ee9a:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801ee9e:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801eea2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801eea6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801eea8:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801eeac:	2b00      	cmp	r3, #0
 801eeae:	dd0e      	ble.n	801eece <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801eeb0:	1402      	asrs	r2, r0, #16
 801eeb2:	d405      	bmi.n	801eec0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801eeb4:	42ba      	cmp	r2, r7
 801eeb6:	da03      	bge.n	801eec0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801eeb8:	140a      	asrs	r2, r1, #16
 801eeba:	d401      	bmi.n	801eec0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801eebc:	42b2      	cmp	r2, r6
 801eebe:	db07      	blt.n	801eed0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801eec0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801eec2:	4410      	add	r0, r2
 801eec4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801eec6:	3b01      	subs	r3, #1
 801eec8:	4411      	add	r1, r2
 801eeca:	3402      	adds	r4, #2
 801eecc:	e7ee      	b.n	801eeac <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801eece:	d017      	beq.n	801ef00 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801eed0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801eed2:	1e5a      	subs	r2, r3, #1
 801eed4:	fb05 0502 	mla	r5, r5, r2, r0
 801eed8:	142d      	asrs	r5, r5, #16
 801eeda:	d409      	bmi.n	801eef0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801eedc:	42bd      	cmp	r5, r7
 801eede:	da07      	bge.n	801eef0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801eee0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801eee2:	fb05 1202 	mla	r2, r5, r2, r1
 801eee6:	1412      	asrs	r2, r2, #16
 801eee8:	d402      	bmi.n	801eef0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801eeea:	42b2      	cmp	r2, r6
 801eeec:	f2c0 80c3 	blt.w	801f076 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801eef0:	2500      	movs	r5, #0
 801eef2:	195a      	adds	r2, r3, r5
 801eef4:	2a00      	cmp	r2, #0
 801eef6:	dc3f      	bgt.n	801ef78 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801eef8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801eefc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ef00:	9b01      	ldr	r3, [sp, #4]
 801ef02:	2b00      	cmp	r3, #0
 801ef04:	f340 812a 	ble.w	801f15c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801ef08:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ef0c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ef10:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ef14:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ef16:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ef1a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ef1e:	eeb0 6a62 	vmov.f32	s12, s5
 801ef22:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ef26:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ef2a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ef2e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801ef32:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ef36:	eeb0 6a43 	vmov.f32	s12, s6
 801ef3a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ef3e:	ee12 2a90 	vmov	r2, s5
 801ef42:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ef46:	fb92 f3f3 	sdiv	r3, r2, r3
 801ef4a:	ee13 2a10 	vmov	r2, s6
 801ef4e:	9313      	str	r3, [sp, #76]	; 0x4c
 801ef50:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ef52:	fb92 f3f3 	sdiv	r3, r2, r3
 801ef56:	9314      	str	r3, [sp, #80]	; 0x50
 801ef58:	9b01      	ldr	r3, [sp, #4]
 801ef5a:	9a05      	ldr	r2, [sp, #20]
 801ef5c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ef60:	3b01      	subs	r3, #1
 801ef62:	9301      	str	r3, [sp, #4]
 801ef64:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801ef68:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ef6a:	eeb0 3a67 	vmov.f32	s6, s15
 801ef6e:	bf08      	it	eq
 801ef70:	4613      	moveq	r3, r2
 801ef72:	eef0 2a47 	vmov.f32	s5, s14
 801ef76:	e788      	b.n	801ee8a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801ef78:	1406      	asrs	r6, r0, #16
 801ef7a:	d42c      	bmi.n	801efd6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ef7c:	f8db 2008 	ldr.w	r2, [fp, #8]
 801ef80:	42b2      	cmp	r2, r6
 801ef82:	dd28      	ble.n	801efd6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ef84:	140f      	asrs	r7, r1, #16
 801ef86:	d426      	bmi.n	801efd6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ef88:	f8db 200c 	ldr.w	r2, [fp, #12]
 801ef8c:	42ba      	cmp	r2, r7
 801ef8e:	dd22      	ble.n	801efd6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ef90:	9a02      	ldr	r2, [sp, #8]
 801ef92:	fb07 6602 	mla	r6, r7, r2, r6
 801ef96:	0872      	lsrs	r2, r6, #1
 801ef98:	9f03      	ldr	r7, [sp, #12]
 801ef9a:	5cba      	ldrb	r2, [r7, r2]
 801ef9c:	07f6      	lsls	r6, r6, #31
 801ef9e:	bf54      	ite	pl
 801efa0:	f002 020f 	andpl.w	r2, r2, #15
 801efa4:	1112      	asrmi	r2, r2, #4
 801efa6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801efaa:	b2d2      	uxtb	r2, r2
 801efac:	2aff      	cmp	r2, #255	; 0xff
 801efae:	d118      	bne.n	801efe2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801efb0:	f8d8 2000 	ldr.w	r2, [r8]
 801efb4:	f06f 0601 	mvn.w	r6, #1
 801efb8:	fb06 f705 	mul.w	r7, r6, r5
 801efbc:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801efc0:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801efc4:	0956      	lsrs	r6, r2, #5
 801efc6:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801efca:	ea4c 0606 	orr.w	r6, ip, r6
 801efce:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801efd2:	4316      	orrs	r6, r2
 801efd4:	53e6      	strh	r6, [r4, r7]
 801efd6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801efd8:	4410      	add	r0, r2
 801efda:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801efdc:	3d01      	subs	r5, #1
 801efde:	4411      	add	r1, r2
 801efe0:	e787      	b.n	801eef2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801efe2:	2a00      	cmp	r2, #0
 801efe4:	d0f7      	beq.n	801efd6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801efe6:	f06f 0601 	mvn.w	r6, #1
 801efea:	436e      	muls	r6, r5
 801efec:	f8d8 c000 	ldr.w	ip, [r8]
 801eff0:	f834 e006 	ldrh.w	lr, [r4, r6]
 801eff4:	9604      	str	r6, [sp, #16]
 801eff6:	fa1f f982 	uxth.w	r9, r2
 801effa:	ea4f 272e 	mov.w	r7, lr, asr #8
 801effe:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801f002:	43d2      	mvns	r2, r2
 801f004:	b2d2      	uxtb	r2, r2
 801f006:	fb16 f609 	smulbb	r6, r6, r9
 801f00a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801f00e:	fb07 6702 	mla	r7, r7, r2, r6
 801f012:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801f016:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801f01a:	fa5f fc8c 	uxtb.w	ip, ip
 801f01e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f022:	fa5f fe8e 	uxtb.w	lr, lr
 801f026:	fb1c fc09 	smulbb	ip, ip, r9
 801f02a:	fb0e cc02 	mla	ip, lr, r2, ip
 801f02e:	b2bf      	uxth	r7, r7
 801f030:	fb1a fa09 	smulbb	sl, sl, r9
 801f034:	fa1f fc8c 	uxth.w	ip, ip
 801f038:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801f03c:	fb06 a602 	mla	r6, r6, r2, sl
 801f040:	1c7a      	adds	r2, r7, #1
 801f042:	f10c 0a01 	add.w	sl, ip, #1
 801f046:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801f04a:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801f04e:	b2b6      	uxth	r6, r6
 801f050:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801f054:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801f058:	ea4a 0707 	orr.w	r7, sl, r7
 801f05c:	f106 0a01 	add.w	sl, r6, #1
 801f060:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801f064:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801f068:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801f06c:	9a04      	ldr	r2, [sp, #16]
 801f06e:	ea47 070a 	orr.w	r7, r7, sl
 801f072:	52a7      	strh	r7, [r4, r2]
 801f074:	e7af      	b.n	801efd6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f076:	f04f 0e00 	mov.w	lr, #0
 801f07a:	eba3 020e 	sub.w	r2, r3, lr
 801f07e:	2a00      	cmp	r2, #0
 801f080:	f77f af3a 	ble.w	801eef8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801f084:	9e02      	ldr	r6, [sp, #8]
 801f086:	1402      	asrs	r2, r0, #16
 801f088:	140d      	asrs	r5, r1, #16
 801f08a:	fb06 2505 	mla	r5, r6, r5, r2
 801f08e:	086a      	lsrs	r2, r5, #1
 801f090:	9e03      	ldr	r6, [sp, #12]
 801f092:	5cb2      	ldrb	r2, [r6, r2]
 801f094:	07ed      	lsls	r5, r5, #31
 801f096:	bf54      	ite	pl
 801f098:	f002 020f 	andpl.w	r2, r2, #15
 801f09c:	1112      	asrmi	r2, r2, #4
 801f09e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801f0a2:	b2d2      	uxtb	r2, r2
 801f0a4:	2aff      	cmp	r2, #255	; 0xff
 801f0a6:	d115      	bne.n	801f0d4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801f0a8:	f8d8 5000 	ldr.w	r5, [r8]
 801f0ac:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801f0b0:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801f0b4:	096a      	lsrs	r2, r5, #5
 801f0b6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f0ba:	4332      	orrs	r2, r6
 801f0bc:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801f0c0:	432a      	orrs	r2, r5
 801f0c2:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801f0c6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801f0c8:	4410      	add	r0, r2
 801f0ca:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801f0cc:	f10e 0e01 	add.w	lr, lr, #1
 801f0d0:	4411      	add	r1, r2
 801f0d2:	e7d2      	b.n	801f07a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801f0d4:	2a00      	cmp	r2, #0
 801f0d6:	d0f6      	beq.n	801f0c6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801f0d8:	f8d8 7000 	ldr.w	r7, [r8]
 801f0dc:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801f0e0:	fa1f f982 	uxth.w	r9, r2
 801f0e4:	ea4f 262c 	mov.w	r6, ip, asr #8
 801f0e8:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801f0ec:	43d2      	mvns	r2, r2
 801f0ee:	b2d2      	uxtb	r2, r2
 801f0f0:	fb15 f509 	smulbb	r5, r5, r9
 801f0f4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801f0f8:	fb06 5602 	mla	r6, r6, r2, r5
 801f0fc:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801f100:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801f104:	b2ff      	uxtb	r7, r7
 801f106:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f10a:	fa5f fc8c 	uxtb.w	ip, ip
 801f10e:	fb17 f709 	smulbb	r7, r7, r9
 801f112:	fb0c 7702 	mla	r7, ip, r2, r7
 801f116:	b2b6      	uxth	r6, r6
 801f118:	fb1a fa09 	smulbb	sl, sl, r9
 801f11c:	b2bf      	uxth	r7, r7
 801f11e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801f122:	fb05 a502 	mla	r5, r5, r2, sl
 801f126:	1c72      	adds	r2, r6, #1
 801f128:	f107 0a01 	add.w	sl, r7, #1
 801f12c:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801f130:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801f134:	b2ad      	uxth	r5, r5
 801f136:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801f13a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801f13e:	ea4a 0606 	orr.w	r6, sl, r6
 801f142:	f105 0a01 	add.w	sl, r5, #1
 801f146:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801f14a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801f14e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801f152:	ea46 060a 	orr.w	r6, r6, sl
 801f156:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801f15a:	e7b4      	b.n	801f0c6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801f15c:	b007      	add	sp, #28
 801f15e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f162:	bf00      	nop
 801f164:	2000225c 	.word	0x2000225c

0801f168 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801f168:	4770      	bx	lr

0801f16a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801f16a:	4770      	bx	lr

0801f16c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801f16c:	4770      	bx	lr

0801f16e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801f16e:	4770      	bx	lr

0801f170 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801f170:	4770      	bx	lr

0801f172 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801f172:	4770      	bx	lr

0801f174 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801f174:	4770      	bx	lr

0801f176 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801f176:	4770      	bx	lr

0801f178 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801f178:	4770      	bx	lr

0801f17a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801f17a:	4770      	bx	lr

0801f17c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801f17c:	4770      	bx	lr

0801f17e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801f17e:	4770      	bx	lr

0801f180 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801f180:	4770      	bx	lr

0801f182 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801f182:	4770      	bx	lr

0801f184 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801f184:	4770      	bx	lr

0801f186 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801f186:	4770      	bx	lr

0801f188 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801f188:	4770      	bx	lr

0801f18a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801f18a:	4770      	bx	lr

0801f18c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801f18c:	4770      	bx	lr

0801f18e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801f18e:	4770      	bx	lr

0801f190 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801f190:	4770      	bx	lr

0801f192 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801f192:	4770      	bx	lr

0801f194 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801f194:	4770      	bx	lr

0801f196 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801f196:	4770      	bx	lr

0801f198 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801f198:	4770      	bx	lr

0801f19a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801f19a:	4770      	bx	lr

0801f19c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801f19c:	4770      	bx	lr

0801f19e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801f19e:	4770      	bx	lr

0801f1a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801f1a0:	4770      	bx	lr

0801f1a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801f1a2:	4770      	bx	lr

0801f1a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801f1a4:	4770      	bx	lr

0801f1a6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801f1a6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f1aa:	b088      	sub	sp, #32
 801f1ac:	ac08      	add	r4, sp, #32
 801f1ae:	4606      	mov	r6, r0
 801f1b0:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801f1b4:	4620      	mov	r0, r4
 801f1b6:	4688      	mov	r8, r1
 801f1b8:	4691      	mov	r9, r2
 801f1ba:	f7fd fc63 	bl	801ca84 <_ZNK8touchgfx6Bitmap7getDataEv>
 801f1be:	6833      	ldr	r3, [r6, #0]
 801f1c0:	4605      	mov	r5, r0
 801f1c2:	4620      	mov	r0, r4
 801f1c4:	699f      	ldr	r7, [r3, #24]
 801f1c6:	f7fd fb71 	bl	801c8ac <_ZNK8touchgfx6Bitmap8getWidthEv>
 801f1ca:	4682      	mov	sl, r0
 801f1cc:	4620      	mov	r0, r4
 801f1ce:	f7fd fba1 	bl	801c914 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801f1d2:	9500      	str	r5, [sp, #0]
 801f1d4:	e9cd a001 	strd	sl, r0, [sp, #4]
 801f1d8:	464b      	mov	r3, r9
 801f1da:	a806      	add	r0, sp, #24
 801f1dc:	4642      	mov	r2, r8
 801f1de:	4631      	mov	r1, r6
 801f1e0:	47b8      	blx	r7
 801f1e2:	4628      	mov	r0, r5
 801f1e4:	b008      	add	sp, #32
 801f1e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

0801f1ec <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801f1ec:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801f1f0:	2300      	movs	r3, #0
 801f1f2:	9300      	str	r3, [sp, #0]
 801f1f4:	4b3d      	ldr	r3, [pc, #244]	; (801f2ec <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801f1f6:	781b      	ldrb	r3, [r3, #0]
 801f1f8:	2b00      	cmp	r3, #0
 801f1fa:	d137      	bne.n	801f26c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801f1fc:	4a3c      	ldr	r2, [pc, #240]	; (801f2f0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801f1fe:	f9b2 2000 	ldrsh.w	r2, [r2]
 801f202:	f8ad 2004 	strh.w	r2, [sp, #4]
 801f206:	2b00      	cmp	r3, #0
 801f208:	d132      	bne.n	801f270 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801f20a:	4b3a      	ldr	r3, [pc, #232]	; (801f2f4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801f20c:	f9b3 3000 	ldrsh.w	r3, [r3]
 801f210:	6808      	ldr	r0, [r1, #0]
 801f212:	6849      	ldr	r1, [r1, #4]
 801f214:	f8ad 3006 	strh.w	r3, [sp, #6]
 801f218:	ac02      	add	r4, sp, #8
 801f21a:	ab02      	add	r3, sp, #8
 801f21c:	c303      	stmia	r3!, {r0, r1}
 801f21e:	4669      	mov	r1, sp
 801f220:	4620      	mov	r0, r4
 801f222:	f7f9 fedb 	bl	8018fdc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f226:	4668      	mov	r0, sp
 801f228:	f7f9 fe94 	bl	8018f54 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f22c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801f230:	f8bd 2000 	ldrh.w	r2, [sp]
 801f234:	4d30      	ldr	r5, [pc, #192]	; (801f2f8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801f236:	4413      	add	r3, r2
 801f238:	f8ad 3008 	strh.w	r3, [sp, #8]
 801f23c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801f240:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801f244:	6828      	ldr	r0, [r5, #0]
 801f246:	4413      	add	r3, r2
 801f248:	f8ad 300a 	strh.w	r3, [sp, #10]
 801f24c:	6803      	ldr	r3, [r0, #0]
 801f24e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801f250:	4798      	blx	r3
 801f252:	f010 0f01 	tst.w	r0, #1
 801f256:	462f      	mov	r7, r5
 801f258:	d00c      	beq.n	801f274 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801f25a:	6828      	ldr	r0, [r5, #0]
 801f25c:	6803      	ldr	r3, [r0, #0]
 801f25e:	e894 0006 	ldmia.w	r4, {r1, r2}
 801f262:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801f264:	4798      	blx	r3
 801f266:	b004      	add	sp, #16
 801f268:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f26c:	4a21      	ldr	r2, [pc, #132]	; (801f2f4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801f26e:	e7c6      	b.n	801f1fe <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801f270:	4b1f      	ldr	r3, [pc, #124]	; (801f2f0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801f272:	e7cb      	b.n	801f20c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801f274:	6838      	ldr	r0, [r7, #0]
 801f276:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801f27a:	6803      	ldr	r3, [r0, #0]
 801f27c:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801f280:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801f282:	4798      	blx	r3
 801f284:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801f288:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801f28c:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801f290:	fb16 3602 	smlabb	r6, r6, r2, r3
 801f294:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801f298:	6838      	ldr	r0, [r7, #0]
 801f29a:	6803      	ldr	r3, [r0, #0]
 801f29c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f29e:	4798      	blx	r3
 801f2a0:	4a13      	ldr	r2, [pc, #76]	; (801f2f0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801f2a2:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801f2a6:	8813      	ldrh	r3, [r2, #0]
 801f2a8:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801f2ac:	fb03 1404 	mla	r4, r3, r4, r1
 801f2b0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801f2b4:	435d      	muls	r5, r3
 801f2b6:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801f2ba:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801f2be:	4691      	mov	r9, r2
 801f2c0:	6838      	ldr	r0, [r7, #0]
 801f2c2:	42ac      	cmp	r4, r5
 801f2c4:	6803      	ldr	r3, [r0, #0]
 801f2c6:	d20e      	bcs.n	801f2e6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801f2c8:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801f2cc:	4632      	mov	r2, r6
 801f2ce:	4643      	mov	r3, r8
 801f2d0:	4621      	mov	r1, r4
 801f2d2:	47d0      	blx	sl
 801f2d4:	f8b9 3000 	ldrh.w	r3, [r9]
 801f2d8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801f2dc:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801f2e0:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801f2e4:	e7ec      	b.n	801f2c0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801f2e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f2e8:	4798      	blx	r3
 801f2ea:	e7bc      	b.n	801f266 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801f2ec:	20002244 	.word	0x20002244
 801f2f0:	20002246 	.word	0x20002246
 801f2f4:	20002248 	.word	0x20002248
 801f2f8:	2000224c 	.word	0x2000224c

0801f2fc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801f2fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f300:	b08b      	sub	sp, #44	; 0x2c
 801f302:	460f      	mov	r7, r1
 801f304:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801f308:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801f30c:	4616      	mov	r6, r2
 801f30e:	f1bb 0f00 	cmp.w	fp, #0
 801f312:	d04a      	beq.n	801f3aa <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801f314:	6810      	ldr	r0, [r2, #0]
 801f316:	6851      	ldr	r1, [r2, #4]
 801f318:	ad06      	add	r5, sp, #24
 801f31a:	c503      	stmia	r5!, {r0, r1}
 801f31c:	6818      	ldr	r0, [r3, #0]
 801f31e:	6859      	ldr	r1, [r3, #4]
 801f320:	ad08      	add	r5, sp, #32
 801f322:	c503      	stmia	r5!, {r0, r1}
 801f324:	a806      	add	r0, sp, #24
 801f326:	f7f9 fe15 	bl	8018f54 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f32a:	4631      	mov	r1, r6
 801f32c:	a808      	add	r0, sp, #32
 801f32e:	f7f9 fe55 	bl	8018fdc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f332:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801f336:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801f33a:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801f33e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801f342:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801f346:	fb16 2103 	smlabb	r1, r6, r3, r2
 801f34a:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801f34e:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801f352:	4f5f      	ldr	r7, [pc, #380]	; (801f4d0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801f354:	440a      	add	r2, r1
 801f356:	f8ad 2020 	strh.w	r2, [sp, #32]
 801f35a:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801f35e:	6838      	ldr	r0, [r7, #0]
 801f360:	4413      	add	r3, r2
 801f362:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801f366:	6803      	ldr	r3, [r0, #0]
 801f368:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801f36a:	4798      	blx	r3
 801f36c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801f370:	46b9      	mov	r9, r7
 801f372:	d11d      	bne.n	801f3b0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801f374:	b9fc      	cbnz	r4, 801f3b6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801f376:	f010 0f01 	tst.w	r0, #1
 801f37a:	d01c      	beq.n	801f3b6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801f37c:	f8d9 0000 	ldr.w	r0, [r9]
 801f380:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801f384:	6801      	ldr	r1, [r0, #0]
 801f386:	f8cd b00c 	str.w	fp, [sp, #12]
 801f38a:	2700      	movs	r7, #0
 801f38c:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801f390:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801f394:	9402      	str	r4, [sp, #8]
 801f396:	b2ad      	uxth	r5, r5
 801f398:	fa1f f488 	uxth.w	r4, r8
 801f39c:	9501      	str	r5, [sp, #4]
 801f39e:	9400      	str	r4, [sp, #0]
 801f3a0:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801f3a2:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801f3a6:	4631      	mov	r1, r6
 801f3a8:	47a0      	blx	r4
 801f3aa:	b00b      	add	sp, #44	; 0x2c
 801f3ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f3b0:	f010 0f04 	tst.w	r0, #4
 801f3b4:	e7e1      	b.n	801f37a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801f3b6:	f8d9 0000 	ldr.w	r0, [r9]
 801f3ba:	6803      	ldr	r3, [r0, #0]
 801f3bc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f3be:	4798      	blx	r3
 801f3c0:	4b44      	ldr	r3, [pc, #272]	; (801f4d4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801f3c2:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801f3c6:	881a      	ldrh	r2, [r3, #0]
 801f3c8:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801f3cc:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801f3d0:	fb02 1404 	mla	r4, r2, r4, r1
 801f3d4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801f3d8:	469a      	mov	sl, r3
 801f3da:	fb05 f502 	mul.w	r5, r5, r2
 801f3de:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801f3e2:	d059      	beq.n	801f498 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801f3e4:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801f3e8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801f3ec:	fa1f f28b 	uxth.w	r2, fp
 801f3f0:	fa1f f989 	uxth.w	r9, r9
 801f3f4:	469e      	mov	lr, r3
 801f3f6:	42ac      	cmp	r4, r5
 801f3f8:	d264      	bcs.n	801f4c4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801f3fa:	eb04 0a07 	add.w	sl, r4, r7
 801f3fe:	4554      	cmp	r4, sl
 801f400:	d23d      	bcs.n	801f47e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801f402:	8821      	ldrh	r1, [r4, #0]
 801f404:	f836 3b02 	ldrh.w	r3, [r6], #2
 801f408:	1208      	asrs	r0, r1, #8
 801f40a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801f40e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f412:	fb10 f009 	smulbb	r0, r0, r9
 801f416:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801f41a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801f41e:	00c9      	lsls	r1, r1, #3
 801f420:	fb0c 0c02 	mla	ip, ip, r2, r0
 801f424:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801f428:	10d8      	asrs	r0, r3, #3
 801f42a:	b2c9      	uxtb	r1, r1
 801f42c:	00db      	lsls	r3, r3, #3
 801f42e:	fa1f fc8c 	uxth.w	ip, ip
 801f432:	fb1b fb09 	smulbb	fp, fp, r9
 801f436:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f43a:	b2db      	uxtb	r3, r3
 801f43c:	fb11 f109 	smulbb	r1, r1, r9
 801f440:	fb00 b002 	mla	r0, r0, r2, fp
 801f444:	fb03 1302 	mla	r3, r3, r2, r1
 801f448:	f10c 0b01 	add.w	fp, ip, #1
 801f44c:	b29b      	uxth	r3, r3
 801f44e:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801f452:	b280      	uxth	r0, r0
 801f454:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801f458:	f103 0c01 	add.w	ip, r3, #1
 801f45c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801f460:	1c43      	adds	r3, r0, #1
 801f462:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f466:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f46a:	0940      	lsrs	r0, r0, #5
 801f46c:	ea4c 0c0b 	orr.w	ip, ip, fp
 801f470:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f474:	ea4c 0c00 	orr.w	ip, ip, r0
 801f478:	f824 cb02 	strh.w	ip, [r4], #2
 801f47c:	e7bf      	b.n	801f3fe <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801f47e:	f8be 3000 	ldrh.w	r3, [lr]
 801f482:	eba3 0308 	sub.w	r3, r3, r8
 801f486:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801f48a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801f48e:	eba3 0308 	sub.w	r3, r3, r8
 801f492:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801f496:	e7ae      	b.n	801f3f6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801f498:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801f49c:	f8d9 0000 	ldr.w	r0, [r9]
 801f4a0:	42ac      	cmp	r4, r5
 801f4a2:	6803      	ldr	r3, [r0, #0]
 801f4a4:	d20e      	bcs.n	801f4c4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801f4a6:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801f4aa:	4632      	mov	r2, r6
 801f4ac:	463b      	mov	r3, r7
 801f4ae:	4621      	mov	r1, r4
 801f4b0:	47c0      	blx	r8
 801f4b2:	f8ba 3000 	ldrh.w	r3, [sl]
 801f4b6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801f4ba:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801f4be:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801f4c2:	e7eb      	b.n	801f49c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801f4c4:	4b02      	ldr	r3, [pc, #8]	; (801f4d0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801f4c6:	6818      	ldr	r0, [r3, #0]
 801f4c8:	6803      	ldr	r3, [r0, #0]
 801f4ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f4cc:	4798      	blx	r3
 801f4ce:	e76c      	b.n	801f3aa <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801f4d0:	2000224c 	.word	0x2000224c
 801f4d4:	20002246 	.word	0x20002246

0801f4d8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801f4d8:	b510      	push	{r4, lr}
 801f4da:	2104      	movs	r1, #4
 801f4dc:	4604      	mov	r4, r0
 801f4de:	f00b f940 	bl	802a762 <_ZdlPvj>
 801f4e2:	4620      	mov	r0, r4
 801f4e4:	bd10      	pop	{r4, pc}

0801f4e6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801f4e6:	b510      	push	{r4, lr}
 801f4e8:	2104      	movs	r1, #4
 801f4ea:	4604      	mov	r4, r0
 801f4ec:	f00b f939 	bl	802a762 <_ZdlPvj>
 801f4f0:	4620      	mov	r0, r4
 801f4f2:	bd10      	pop	{r4, pc}

0801f4f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801f4f4:	b510      	push	{r4, lr}
 801f4f6:	f640 0144 	movw	r1, #2116	; 0x844
 801f4fa:	4604      	mov	r4, r0
 801f4fc:	f00b f931 	bl	802a762 <_ZdlPvj>
 801f500:	4620      	mov	r0, r4
 801f502:	bd10      	pop	{r4, pc}

0801f504 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801f504:	b510      	push	{r4, lr}
 801f506:	2104      	movs	r1, #4
 801f508:	4604      	mov	r4, r0
 801f50a:	f00b f92a 	bl	802a762 <_ZdlPvj>
 801f50e:	4620      	mov	r0, r4
 801f510:	bd10      	pop	{r4, pc}

0801f512 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801f512:	b510      	push	{r4, lr}
 801f514:	2104      	movs	r1, #4
 801f516:	4604      	mov	r4, r0
 801f518:	f00b f923 	bl	802a762 <_ZdlPvj>
 801f51c:	4620      	mov	r0, r4
 801f51e:	bd10      	pop	{r4, pc}

0801f520 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801f520:	b510      	push	{r4, lr}
 801f522:	2104      	movs	r1, #4
 801f524:	4604      	mov	r4, r0
 801f526:	f00b f91c 	bl	802a762 <_ZdlPvj>
 801f52a:	4620      	mov	r0, r4
 801f52c:	bd10      	pop	{r4, pc}

0801f52e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801f52e:	b510      	push	{r4, lr}
 801f530:	2104      	movs	r1, #4
 801f532:	4604      	mov	r4, r0
 801f534:	f00b f915 	bl	802a762 <_ZdlPvj>
 801f538:	4620      	mov	r0, r4
 801f53a:	bd10      	pop	{r4, pc}

0801f53c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801f53c:	b510      	push	{r4, lr}
 801f53e:	2104      	movs	r1, #4
 801f540:	4604      	mov	r4, r0
 801f542:	f00b f90e 	bl	802a762 <_ZdlPvj>
 801f546:	4620      	mov	r0, r4
 801f548:	bd10      	pop	{r4, pc}

0801f54a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801f54a:	b510      	push	{r4, lr}
 801f54c:	2104      	movs	r1, #4
 801f54e:	4604      	mov	r4, r0
 801f550:	f00b f907 	bl	802a762 <_ZdlPvj>
 801f554:	4620      	mov	r0, r4
 801f556:	bd10      	pop	{r4, pc}

0801f558 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801f558:	b510      	push	{r4, lr}
 801f55a:	2104      	movs	r1, #4
 801f55c:	4604      	mov	r4, r0
 801f55e:	f00b f900 	bl	802a762 <_ZdlPvj>
 801f562:	4620      	mov	r0, r4
 801f564:	bd10      	pop	{r4, pc}

0801f566 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801f566:	b510      	push	{r4, lr}
 801f568:	2104      	movs	r1, #4
 801f56a:	4604      	mov	r4, r0
 801f56c:	f00b f8f9 	bl	802a762 <_ZdlPvj>
 801f570:	4620      	mov	r0, r4
 801f572:	bd10      	pop	{r4, pc}

0801f574 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801f574:	b510      	push	{r4, lr}
 801f576:	2104      	movs	r1, #4
 801f578:	4604      	mov	r4, r0
 801f57a:	f00b f8f2 	bl	802a762 <_ZdlPvj>
 801f57e:	4620      	mov	r0, r4
 801f580:	bd10      	pop	{r4, pc}

0801f582 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801f582:	b510      	push	{r4, lr}
 801f584:	2104      	movs	r1, #4
 801f586:	4604      	mov	r4, r0
 801f588:	f00b f8eb 	bl	802a762 <_ZdlPvj>
 801f58c:	4620      	mov	r0, r4
 801f58e:	bd10      	pop	{r4, pc}

0801f590 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801f590:	b510      	push	{r4, lr}
 801f592:	2104      	movs	r1, #4
 801f594:	4604      	mov	r4, r0
 801f596:	f00b f8e4 	bl	802a762 <_ZdlPvj>
 801f59a:	4620      	mov	r0, r4
 801f59c:	bd10      	pop	{r4, pc}

0801f59e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801f59e:	b510      	push	{r4, lr}
 801f5a0:	2104      	movs	r1, #4
 801f5a2:	4604      	mov	r4, r0
 801f5a4:	f00b f8dd 	bl	802a762 <_ZdlPvj>
 801f5a8:	4620      	mov	r0, r4
 801f5aa:	bd10      	pop	{r4, pc}

0801f5ac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801f5ac:	b510      	push	{r4, lr}
 801f5ae:	2104      	movs	r1, #4
 801f5b0:	4604      	mov	r4, r0
 801f5b2:	f00b f8d6 	bl	802a762 <_ZdlPvj>
 801f5b6:	4620      	mov	r0, r4
 801f5b8:	bd10      	pop	{r4, pc}

0801f5ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801f5ba:	b510      	push	{r4, lr}
 801f5bc:	2104      	movs	r1, #4
 801f5be:	4604      	mov	r4, r0
 801f5c0:	f00b f8cf 	bl	802a762 <_ZdlPvj>
 801f5c4:	4620      	mov	r0, r4
 801f5c6:	bd10      	pop	{r4, pc}

0801f5c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801f5c8:	b510      	push	{r4, lr}
 801f5ca:	2104      	movs	r1, #4
 801f5cc:	4604      	mov	r4, r0
 801f5ce:	f00b f8c8 	bl	802a762 <_ZdlPvj>
 801f5d2:	4620      	mov	r0, r4
 801f5d4:	bd10      	pop	{r4, pc}

0801f5d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801f5d6:	b510      	push	{r4, lr}
 801f5d8:	2104      	movs	r1, #4
 801f5da:	4604      	mov	r4, r0
 801f5dc:	f00b f8c1 	bl	802a762 <_ZdlPvj>
 801f5e0:	4620      	mov	r0, r4
 801f5e2:	bd10      	pop	{r4, pc}

0801f5e4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801f5e4:	b510      	push	{r4, lr}
 801f5e6:	2104      	movs	r1, #4
 801f5e8:	4604      	mov	r4, r0
 801f5ea:	f00b f8ba 	bl	802a762 <_ZdlPvj>
 801f5ee:	4620      	mov	r0, r4
 801f5f0:	bd10      	pop	{r4, pc}

0801f5f2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801f5f2:	b510      	push	{r4, lr}
 801f5f4:	2104      	movs	r1, #4
 801f5f6:	4604      	mov	r4, r0
 801f5f8:	f00b f8b3 	bl	802a762 <_ZdlPvj>
 801f5fc:	4620      	mov	r0, r4
 801f5fe:	bd10      	pop	{r4, pc}

0801f600 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801f600:	b510      	push	{r4, lr}
 801f602:	2104      	movs	r1, #4
 801f604:	4604      	mov	r4, r0
 801f606:	f00b f8ac 	bl	802a762 <_ZdlPvj>
 801f60a:	4620      	mov	r0, r4
 801f60c:	bd10      	pop	{r4, pc}

0801f60e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801f60e:	b510      	push	{r4, lr}
 801f610:	2104      	movs	r1, #4
 801f612:	4604      	mov	r4, r0
 801f614:	f00b f8a5 	bl	802a762 <_ZdlPvj>
 801f618:	4620      	mov	r0, r4
 801f61a:	bd10      	pop	{r4, pc}

0801f61c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801f61c:	b510      	push	{r4, lr}
 801f61e:	2104      	movs	r1, #4
 801f620:	4604      	mov	r4, r0
 801f622:	f00b f89e 	bl	802a762 <_ZdlPvj>
 801f626:	4620      	mov	r0, r4
 801f628:	bd10      	pop	{r4, pc}

0801f62a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801f62a:	b510      	push	{r4, lr}
 801f62c:	2104      	movs	r1, #4
 801f62e:	4604      	mov	r4, r0
 801f630:	f00b f897 	bl	802a762 <_ZdlPvj>
 801f634:	4620      	mov	r0, r4
 801f636:	bd10      	pop	{r4, pc}

0801f638 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801f638:	b510      	push	{r4, lr}
 801f63a:	2104      	movs	r1, #4
 801f63c:	4604      	mov	r4, r0
 801f63e:	f00b f890 	bl	802a762 <_ZdlPvj>
 801f642:	4620      	mov	r0, r4
 801f644:	bd10      	pop	{r4, pc}

0801f646 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801f646:	b510      	push	{r4, lr}
 801f648:	2104      	movs	r1, #4
 801f64a:	4604      	mov	r4, r0
 801f64c:	f00b f889 	bl	802a762 <_ZdlPvj>
 801f650:	4620      	mov	r0, r4
 801f652:	bd10      	pop	{r4, pc}

0801f654 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801f654:	b510      	push	{r4, lr}
 801f656:	2104      	movs	r1, #4
 801f658:	4604      	mov	r4, r0
 801f65a:	f00b f882 	bl	802a762 <_ZdlPvj>
 801f65e:	4620      	mov	r0, r4
 801f660:	bd10      	pop	{r4, pc}

0801f662 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801f662:	b510      	push	{r4, lr}
 801f664:	2104      	movs	r1, #4
 801f666:	4604      	mov	r4, r0
 801f668:	f00b f87b 	bl	802a762 <_ZdlPvj>
 801f66c:	4620      	mov	r0, r4
 801f66e:	bd10      	pop	{r4, pc}

0801f670 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801f670:	b510      	push	{r4, lr}
 801f672:	2104      	movs	r1, #4
 801f674:	4604      	mov	r4, r0
 801f676:	f00b f874 	bl	802a762 <_ZdlPvj>
 801f67a:	4620      	mov	r0, r4
 801f67c:	bd10      	pop	{r4, pc}

0801f67e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801f67e:	b510      	push	{r4, lr}
 801f680:	2104      	movs	r1, #4
 801f682:	4604      	mov	r4, r0
 801f684:	f00b f86d 	bl	802a762 <_ZdlPvj>
 801f688:	4620      	mov	r0, r4
 801f68a:	bd10      	pop	{r4, pc}

0801f68c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801f68c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f690:	b08f      	sub	sp, #60	; 0x3c
 801f692:	461c      	mov	r4, r3
 801f694:	9205      	str	r2, [sp, #20]
 801f696:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801f69a:	9100      	str	r1, [sp, #0]
 801f69c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801f69e:	9201      	str	r2, [sp, #4]
 801f6a0:	2a00      	cmp	r2, #0
 801f6a2:	f000 8115 	beq.w	801f8d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801f6a6:	6820      	ldr	r0, [r4, #0]
 801f6a8:	6861      	ldr	r1, [r4, #4]
 801f6aa:	aa0a      	add	r2, sp, #40	; 0x28
 801f6ac:	c203      	stmia	r2!, {r0, r1}
 801f6ae:	6818      	ldr	r0, [r3, #0]
 801f6b0:	6859      	ldr	r1, [r3, #4]
 801f6b2:	aa0c      	add	r2, sp, #48	; 0x30
 801f6b4:	c203      	stmia	r2!, {r0, r1}
 801f6b6:	a80a      	add	r0, sp, #40	; 0x28
 801f6b8:	f7f9 fc4c 	bl	8018f54 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f6bc:	4621      	mov	r1, r4
 801f6be:	a80c      	add	r0, sp, #48	; 0x30
 801f6c0:	f7f9 fc8c 	bl	8018fdc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f6c4:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801f6c8:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801f6cc:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801f6d0:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801f6d4:	bfde      	ittt	le
 801f6d6:	b2b3      	uxthle	r3, r6
 801f6d8:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801f6dc:	fb92 f3f3 	sdivle	r3, r2, r3
 801f6e0:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801f6e4:	bfc8      	it	gt
 801f6e6:	2301      	movgt	r3, #1
 801f6e8:	fb92 f1f3 	sdiv	r1, r2, r3
 801f6ec:	fa1f fc81 	uxth.w	ip, r1
 801f6f0:	fb0c 2413 	mls	r4, ip, r3, r2
 801f6f4:	fb14 f406 	smulbb	r4, r4, r6
 801f6f8:	441d      	add	r5, r3
 801f6fa:	4404      	add	r4, r0
 801f6fc:	4661      	mov	r1, ip
 801f6fe:	3d01      	subs	r5, #1
 801f700:	b2a4      	uxth	r4, r4
 801f702:	fb95 f5f3 	sdiv	r5, r5, r3
 801f706:	b131      	cbz	r1, 801f716 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801f708:	9b05      	ldr	r3, [sp, #20]
 801f70a:	9900      	ldr	r1, [sp, #0]
 801f70c:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801f710:	ba1b      	rev	r3, r3
 801f712:	4419      	add	r1, r3
 801f714:	9100      	str	r1, [sp, #0]
 801f716:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801f71a:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801f71e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801f722:	4418      	add	r0, r3
 801f724:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801f728:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801f72c:	441a      	add	r2, r3
 801f72e:	4b6a      	ldr	r3, [pc, #424]	; (801f8d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801f730:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801f734:	6818      	ldr	r0, [r3, #0]
 801f736:	6803      	ldr	r3, [r0, #0]
 801f738:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f73a:	4798      	blx	r3
 801f73c:	4967      	ldr	r1, [pc, #412]	; (801f8dc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801f73e:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801f742:	880b      	ldrh	r3, [r1, #0]
 801f744:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801f748:	9109      	str	r1, [sp, #36]	; 0x24
 801f74a:	fb03 c202 	mla	r2, r3, r2, ip
 801f74e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801f752:	4373      	muls	r3, r6
 801f754:	b2ad      	uxth	r5, r5
 801f756:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801f75a:	00ad      	lsls	r5, r5, #2
 801f75c:	9306      	str	r3, [sp, #24]
 801f75e:	1d2b      	adds	r3, r5, #4
 801f760:	9307      	str	r3, [sp, #28]
 801f762:	9b01      	ldr	r3, [sp, #4]
 801f764:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801f768:	9103      	str	r1, [sp, #12]
 801f76a:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801f76e:	2c00      	cmp	r4, #0
 801f770:	bf0c      	ite	eq
 801f772:	46c6      	moveq	lr, r8
 801f774:	f04f 0e00 	movne.w	lr, #0
 801f778:	2300      	movs	r3, #0
 801f77a:	b292      	uxth	r2, r2
 801f77c:	fa1f fe8e 	uxth.w	lr, lr
 801f780:	9302      	str	r3, [sp, #8]
 801f782:	9204      	str	r2, [sp, #16]
 801f784:	9a06      	ldr	r2, [sp, #24]
 801f786:	4282      	cmp	r2, r0
 801f788:	f240 809d 	bls.w	801f8c6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801f78c:	b963      	cbnz	r3, 801f7a8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801f78e:	9b00      	ldr	r3, [sp, #0]
 801f790:	781a      	ldrb	r2, [r3, #0]
 801f792:	0993      	lsrs	r3, r2, #6
 801f794:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801f798:	9202      	str	r2, [sp, #8]
 801f79a:	1e5a      	subs	r2, r3, #1
 801f79c:	2a02      	cmp	r2, #2
 801f79e:	d815      	bhi.n	801f7cc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801f7a0:	9a00      	ldr	r2, [sp, #0]
 801f7a2:	3201      	adds	r2, #1
 801f7a4:	9200      	str	r2, [sp, #0]
 801f7a6:	b29b      	uxth	r3, r3
 801f7a8:	b1b4      	cbz	r4, 801f7d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801f7aa:	429c      	cmp	r4, r3
 801f7ac:	bf95      	itete	ls
 801f7ae:	1b1c      	subls	r4, r3, r4
 801f7b0:	1ae4      	subhi	r4, r4, r3
 801f7b2:	fa1f fa84 	uxthls.w	sl, r4
 801f7b6:	b2a4      	uxthhi	r4, r4
 801f7b8:	bf87      	ittee	hi
 801f7ba:	4671      	movhi	r1, lr
 801f7bc:	f04f 0a00 	movhi.w	sl, #0
 801f7c0:	fa1f f188 	uxthls.w	r1, r8
 801f7c4:	2400      	movls	r4, #0
 801f7c6:	4653      	mov	r3, sl
 801f7c8:	468e      	mov	lr, r1
 801f7ca:	e7db      	b.n	801f784 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801f7cc:	9a00      	ldr	r2, [sp, #0]
 801f7ce:	9b00      	ldr	r3, [sp, #0]
 801f7d0:	3202      	adds	r2, #2
 801f7d2:	785b      	ldrb	r3, [r3, #1]
 801f7d4:	9200      	str	r2, [sp, #0]
 801f7d6:	e7e7      	b.n	801f7a8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801f7d8:	2202      	movs	r2, #2
 801f7da:	4615      	mov	r5, r2
 801f7dc:	9907      	ldr	r1, [sp, #28]
 801f7de:	9a02      	ldr	r2, [sp, #8]
 801f7e0:	fb15 1202 	smlabb	r2, r5, r2, r1
 801f7e4:	9905      	ldr	r1, [sp, #20]
 801f7e6:	4573      	cmp	r3, lr
 801f7e8:	f831 c002 	ldrh.w	ip, [r1, r2]
 801f7ec:	9a01      	ldr	r2, [sp, #4]
 801f7ee:	bf2b      	itete	cs
 801f7f0:	eba3 0a0e 	subcs.w	sl, r3, lr
 801f7f4:	ebae 0103 	subcc.w	r1, lr, r3
 801f7f8:	46f1      	movcs	r9, lr
 801f7fa:	4699      	movcc	r9, r3
 801f7fc:	bf27      	ittee	cs
 801f7fe:	fa1f fa8a 	uxthcs.w	sl, sl
 801f802:	4621      	movcs	r1, r4
 801f804:	b289      	uxthcc	r1, r1
 801f806:	46a2      	movcc	sl, r4
 801f808:	2aff      	cmp	r2, #255	; 0xff
 801f80a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801f80e:	d105      	bne.n	801f81c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801f810:	4481      	add	r9, r0
 801f812:	4581      	cmp	r9, r0
 801f814:	d045      	beq.n	801f8a2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801f816:	f820 cb02 	strh.w	ip, [r0], #2
 801f81a:	e7fa      	b.n	801f812 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801f81c:	9d03      	ldr	r5, [sp, #12]
 801f81e:	ea4f 222c 	mov.w	r2, ip, asr #8
 801f822:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801f826:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801f82a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f82e:	436a      	muls	r2, r5
 801f830:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801f834:	fa5f fc8c 	uxtb.w	ip, ip
 801f838:	9208      	str	r2, [sp, #32]
 801f83a:	fb0b fb05 	mul.w	fp, fp, r5
 801f83e:	fb0c fc05 	mul.w	ip, ip, r5
 801f842:	4481      	add	r9, r0
 801f844:	4581      	cmp	r9, r0
 801f846:	d02c      	beq.n	801f8a2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801f848:	8802      	ldrh	r2, [r0, #0]
 801f84a:	9d04      	ldr	r5, [sp, #16]
 801f84c:	9f04      	ldr	r7, [sp, #16]
 801f84e:	1216      	asrs	r6, r2, #8
 801f850:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801f854:	fb16 f605 	smulbb	r6, r6, r5
 801f858:	9d08      	ldr	r5, [sp, #32]
 801f85a:	442e      	add	r6, r5
 801f85c:	10d5      	asrs	r5, r2, #3
 801f85e:	00d2      	lsls	r2, r2, #3
 801f860:	b2d2      	uxtb	r2, r2
 801f862:	fb12 f207 	smulbb	r2, r2, r7
 801f866:	b2b6      	uxth	r6, r6
 801f868:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801f86c:	4462      	add	r2, ip
 801f86e:	fb15 f507 	smulbb	r5, r5, r7
 801f872:	b292      	uxth	r2, r2
 801f874:	1c77      	adds	r7, r6, #1
 801f876:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801f87a:	1c57      	adds	r7, r2, #1
 801f87c:	445d      	add	r5, fp
 801f87e:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801f882:	b2ad      	uxth	r5, r5
 801f884:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f888:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801f88c:	4316      	orrs	r6, r2
 801f88e:	1c6a      	adds	r2, r5, #1
 801f890:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801f894:	096d      	lsrs	r5, r5, #5
 801f896:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f89a:	432e      	orrs	r6, r5
 801f89c:	f820 6b02 	strh.w	r6, [r0], #2
 801f8a0:	e7d0      	b.n	801f844 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801f8a2:	4573      	cmp	r3, lr
 801f8a4:	d38f      	bcc.n	801f7c6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801f8a6:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801f8aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f8ac:	fa1f f188 	uxth.w	r1, r8
 801f8b0:	1a64      	subs	r4, r4, r1
 801f8b2:	881b      	ldrh	r3, [r3, #0]
 801f8b4:	b2a4      	uxth	r4, r4
 801f8b6:	2c00      	cmp	r4, #0
 801f8b8:	eba3 0308 	sub.w	r3, r3, r8
 801f8bc:	bf18      	it	ne
 801f8be:	2100      	movne	r1, #0
 801f8c0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f8c4:	e77f      	b.n	801f7c6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801f8c6:	4b04      	ldr	r3, [pc, #16]	; (801f8d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801f8c8:	6818      	ldr	r0, [r3, #0]
 801f8ca:	6803      	ldr	r3, [r0, #0]
 801f8cc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f8ce:	4798      	blx	r3
 801f8d0:	b00f      	add	sp, #60	; 0x3c
 801f8d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f8d6:	bf00      	nop
 801f8d8:	2000224c 	.word	0x2000224c
 801f8dc:	20002246 	.word	0x20002246

0801f8e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801f8e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f8e4:	b09f      	sub	sp, #124	; 0x7c
 801f8e6:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801f8ea:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801f8ee:	9209      	str	r2, [sp, #36]	; 0x24
 801f8f0:	461d      	mov	r5, r3
 801f8f2:	4604      	mov	r4, r0
 801f8f4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f8f6:	2a00      	cmp	r2, #0
 801f8f8:	f000 81eb 	beq.w	801fcd2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801f8fc:	6828      	ldr	r0, [r5, #0]
 801f8fe:	6869      	ldr	r1, [r5, #4]
 801f900:	aa1a      	add	r2, sp, #104	; 0x68
 801f902:	c203      	stmia	r2!, {r0, r1}
 801f904:	6818      	ldr	r0, [r3, #0]
 801f906:	6859      	ldr	r1, [r3, #4]
 801f908:	aa1c      	add	r2, sp, #112	; 0x70
 801f90a:	c203      	stmia	r2!, {r0, r1}
 801f90c:	a81a      	add	r0, sp, #104	; 0x68
 801f90e:	f7f9 fb21 	bl	8018f54 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f912:	4629      	mov	r1, r5
 801f914:	a81c      	add	r0, sp, #112	; 0x70
 801f916:	f7f9 fb61 	bl	8018fdc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f91a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801f91e:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801f922:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801f926:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801f92a:	bfd7      	itett	le
 801f92c:	b29a      	uxthle	r2, r3
 801f92e:	2201      	movgt	r2, #1
 801f930:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801f934:	fb91 f2f2 	sdivle	r2, r1, r2
 801f938:	9202      	str	r2, [sp, #8]
 801f93a:	9802      	ldr	r0, [sp, #8]
 801f93c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801f940:	fb92 f0f0 	sdiv	r0, r2, r0
 801f944:	b280      	uxth	r0, r0
 801f946:	9010      	str	r0, [sp, #64]	; 0x40
 801f948:	9902      	ldr	r1, [sp, #8]
 801f94a:	9802      	ldr	r0, [sp, #8]
 801f94c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801f94e:	4488      	add	r8, r1
 801f950:	fb05 2510 	mls	r5, r5, r0, r2
 801f954:	fb15 f503 	smulbb	r5, r5, r3
 801f958:	f108 38ff 	add.w	r8, r8, #4294967295
 801f95c:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801f960:	fb98 f8f1 	sdiv	r8, r8, r1
 801f964:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801f968:	440d      	add	r5, r1
 801f96a:	4419      	add	r1, r3
 801f96c:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801f970:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801f974:	441a      	add	r2, r3
 801f976:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801f97a:	9304      	str	r3, [sp, #16]
 801f97c:	4b95      	ldr	r3, [pc, #596]	; (801fbd4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801f97e:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801f982:	6818      	ldr	r0, [r3, #0]
 801f984:	6803      	ldr	r3, [r0, #0]
 801f986:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f988:	4798      	blx	r3
 801f98a:	4b93      	ldr	r3, [pc, #588]	; (801fbd8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801f98c:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801f990:	881a      	ldrh	r2, [r3, #0]
 801f992:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801f996:	9318      	str	r3, [sp, #96]	; 0x60
 801f998:	fb02 7101 	mla	r1, r2, r1, r7
 801f99c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801f9a0:	4356      	muls	r6, r2
 801f9a2:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801f9a6:	f108 0801 	add.w	r8, r8, #1
 801f9aa:	920a      	str	r2, [sp, #40]	; 0x28
 801f9ac:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801f9ae:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801f9b2:	930f      	str	r3, [sp, #60]	; 0x3c
 801f9b4:	fa1f f888 	uxth.w	r8, r8
 801f9b8:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801f9bc:	f108 0204 	add.w	r2, r8, #4
 801f9c0:	9211      	str	r2, [sp, #68]	; 0x44
 801f9c2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801f9c4:	4b85      	ldr	r3, [pc, #532]	; (801fbdc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801f9c6:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801f9ca:	b2ad      	uxth	r5, r5
 801f9cc:	9215      	str	r2, [sp, #84]	; 0x54
 801f9ce:	2d00      	cmp	r5, #0
 801f9d0:	9a04      	ldr	r2, [sp, #16]
 801f9d2:	f04f 0100 	mov.w	r1, #0
 801f9d6:	bf18      	it	ne
 801f9d8:	2200      	movne	r2, #0
 801f9da:	1b1b      	subs	r3, r3, r4
 801f9dc:	b292      	uxth	r2, r2
 801f9de:	910d      	str	r1, [sp, #52]	; 0x34
 801f9e0:	9319      	str	r3, [sp, #100]	; 0x64
 801f9e2:	9910      	ldr	r1, [sp, #64]	; 0x40
 801f9e4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f9e6:	fa11 f383 	uxtah	r3, r1, r3
 801f9ea:	9914      	ldr	r1, [sp, #80]	; 0x50
 801f9ec:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801f9f0:	3304      	adds	r3, #4
 801f9f2:	9306      	str	r3, [sp, #24]
 801f9f4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f9f6:	4283      	cmp	r3, r0
 801f9f8:	f240 8166 	bls.w	801fcc8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801f9fc:	9902      	ldr	r1, [sp, #8]
 801f9fe:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801fa02:	fbb5 f3f3 	udiv	r3, r5, r3
 801fa06:	1acb      	subs	r3, r1, r3
 801fa08:	b29b      	uxth	r3, r3
 801fa0a:	9316      	str	r3, [sp, #88]	; 0x58
 801fa0c:	9b06      	ldr	r3, [sp, #24]
 801fa0e:	9e06      	ldr	r6, [sp, #24]
 801fa10:	7859      	ldrb	r1, [r3, #1]
 801fa12:	789b      	ldrb	r3, [r3, #2]
 801fa14:	7836      	ldrb	r6, [r6, #0]
 801fa16:	9612      	str	r6, [sp, #72]	; 0x48
 801fa18:	021b      	lsls	r3, r3, #8
 801fa1a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801fa1e:	9906      	ldr	r1, [sp, #24]
 801fa20:	78c9      	ldrb	r1, [r1, #3]
 801fa22:	430b      	orrs	r3, r1
 801fa24:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801fa26:	3601      	adds	r6, #1
 801fa28:	4419      	add	r1, r3
 801fa2a:	9605      	str	r6, [sp, #20]
 801fa2c:	1c4e      	adds	r6, r1, #1
 801fa2e:	9603      	str	r6, [sp, #12]
 801fa30:	7849      	ldrb	r1, [r1, #1]
 801fa32:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801fa34:	0209      	lsls	r1, r1, #8
 801fa36:	5cf3      	ldrb	r3, [r6, r3]
 801fa38:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801fa3c:	4319      	orrs	r1, r3
 801fa3e:	b28b      	uxth	r3, r1
 801fa40:	930c      	str	r3, [sp, #48]	; 0x30
 801fa42:	2300      	movs	r3, #0
 801fa44:	f04f 0a01 	mov.w	sl, #1
 801fa48:	9307      	str	r3, [sp, #28]
 801fa4a:	469c      	mov	ip, r3
 801fa4c:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801fa50:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801fa54:	46d3      	mov	fp, sl
 801fa56:	4657      	mov	r7, sl
 801fa58:	930e      	str	r3, [sp, #56]	; 0x38
 801fa5a:	2d00      	cmp	r5, #0
 801fa5c:	d07e      	beq.n	801fb5c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801fa5e:	42af      	cmp	r7, r5
 801fa60:	d26e      	bcs.n	801fb40 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801fa62:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fa64:	9201      	str	r2, [sp, #4]
 801fa66:	1bed      	subs	r5, r5, r7
 801fa68:	4283      	cmp	r3, r0
 801fa6a:	b2ad      	uxth	r5, r5
 801fa6c:	d802      	bhi.n	801fa74 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801fa6e:	e073      	b.n	801fb58 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801fa70:	2b00      	cmp	r3, #0
 801fa72:	d15f      	bne.n	801fb34 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801fa74:	9b03      	ldr	r3, [sp, #12]
 801fa76:	785b      	ldrb	r3, [r3, #1]
 801fa78:	f1cb 0207 	rsb	r2, fp, #7
 801fa7c:	4093      	lsls	r3, r2
 801fa7e:	005b      	lsls	r3, r3, #1
 801fa80:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801fa84:	9b03      	ldr	r3, [sp, #12]
 801fa86:	781b      	ldrb	r3, [r3, #0]
 801fa88:	fa43 f30b 	asr.w	r3, r3, fp
 801fa8c:	b2db      	uxtb	r3, r3
 801fa8e:	4313      	orrs	r3, r2
 801fa90:	f10b 0201 	add.w	r2, fp, #1
 801fa94:	fa5f fb82 	uxtb.w	fp, r2
 801fa98:	9a03      	ldr	r2, [sp, #12]
 801fa9a:	f1bb 0f08 	cmp.w	fp, #8
 801fa9e:	bf15      	itete	ne
 801faa0:	3201      	addne	r2, #1
 801faa2:	3202      	addeq	r2, #2
 801faa4:	9203      	strne	r2, [sp, #12]
 801faa6:	9203      	streq	r2, [sp, #12]
 801faa8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801faaa:	b29f      	uxth	r7, r3
 801faac:	bf08      	it	eq
 801faae:	f04f 0b00 	moveq.w	fp, #0
 801fab2:	42ba      	cmp	r2, r7
 801fab4:	d309      	bcc.n	801faca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801fab6:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801faba:	2301      	movs	r3, #1
 801fabc:	9a05      	ldr	r2, [sp, #20]
 801fabe:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801fac2:	d30e      	bcc.n	801fae2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801fac4:	469a      	mov	sl, r3
 801fac6:	2600      	movs	r6, #0
 801fac8:	e035      	b.n	801fb36 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801faca:	9b05      	ldr	r3, [sp, #20]
 801facc:	429f      	cmp	r7, r3
 801face:	d318      	bcc.n	801fb02 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801fad0:	eb04 030a 	add.w	r3, r4, sl
 801fad4:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801fad8:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801fadc:	f10a 0301 	add.w	r3, sl, #1
 801fae0:	b29b      	uxth	r3, r3
 801fae2:	9a05      	ldr	r2, [sp, #20]
 801fae4:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801fae8:	990c      	ldr	r1, [sp, #48]	; 0x30
 801faea:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801faee:	7116      	strb	r6, [r2, #4]
 801faf0:	f10a 0601 	add.w	r6, sl, #1
 801faf4:	80d1      	strh	r1, [r2, #6]
 801faf6:	7156      	strb	r6, [r2, #5]
 801faf8:	9a05      	ldr	r2, [sp, #20]
 801fafa:	3201      	adds	r2, #1
 801fafc:	b292      	uxth	r2, r2
 801fafe:	9205      	str	r2, [sp, #20]
 801fb00:	e7e0      	b.n	801fac4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801fb02:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801fb06:	463a      	mov	r2, r7
 801fb08:	795b      	ldrb	r3, [r3, #5]
 801fb0a:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801fb0e:	4426      	add	r6, r4
 801fb10:	9919      	ldr	r1, [sp, #100]	; 0x64
 801fb12:	eb01 0c06 	add.w	ip, r1, r6
 801fb16:	f1bc 0f00 	cmp.w	ip, #0
 801fb1a:	dd07      	ble.n	801fb2c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801fb1c:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801fb20:	f892 c004 	ldrb.w	ip, [r2, #4]
 801fb24:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801fb28:	88d2      	ldrh	r2, [r2, #6]
 801fb2a:	e7f1      	b.n	801fb10 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801fb2c:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801fb30:	b29b      	uxth	r3, r3
 801fb32:	e7c3      	b.n	801fabc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801fb34:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801fb36:	970c      	str	r7, [sp, #48]	; 0x30
 801fb38:	9a01      	ldr	r2, [sp, #4]
 801fb3a:	46b4      	mov	ip, r6
 801fb3c:	461f      	mov	r7, r3
 801fb3e:	e78c      	b.n	801fa5a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801fb40:	1b7b      	subs	r3, r7, r5
 801fb42:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801fb46:	9201      	str	r2, [sp, #4]
 801fb48:	eb0c 0605 	add.w	r6, ip, r5
 801fb4c:	b29b      	uxth	r3, r3
 801fb4e:	b2b6      	uxth	r6, r6
 801fb50:	2500      	movs	r5, #0
 801fb52:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801fb54:	4282      	cmp	r2, r0
 801fb56:	d88b      	bhi.n	801fa70 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801fb58:	9a01      	ldr	r2, [sp, #4]
 801fb5a:	e74b      	b.n	801f9f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801fb5c:	4297      	cmp	r7, r2
 801fb5e:	d332      	bcc.n	801fbc6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801fb60:	1abb      	subs	r3, r7, r2
 801fb62:	b29b      	uxth	r3, r3
 801fb64:	9208      	str	r2, [sp, #32]
 801fb66:	9501      	str	r5, [sp, #4]
 801fb68:	9909      	ldr	r1, [sp, #36]	; 0x24
 801fb6a:	29ff      	cmp	r1, #255	; 0xff
 801fb6c:	9908      	ldr	r1, [sp, #32]
 801fb6e:	eb0c 0601 	add.w	r6, ip, r1
 801fb72:	d135      	bne.n	801fbe0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801fb74:	f1a0 0e02 	sub.w	lr, r0, #2
 801fb78:	b2b6      	uxth	r6, r6
 801fb7a:	45b4      	cmp	ip, r6
 801fb7c:	f040 808c 	bne.w	801fc98 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801fb80:	9908      	ldr	r1, [sp, #32]
 801fb82:	4297      	cmp	r7, r2
 801fb84:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801fb88:	d3e2      	bcc.n	801fb50 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801fb8a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801fb8c:	9904      	ldr	r1, [sp, #16]
 801fb8e:	8812      	ldrh	r2, [r2, #0]
 801fb90:	1a52      	subs	r2, r2, r1
 801fb92:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801fb96:	9a07      	ldr	r2, [sp, #28]
 801fb98:	9916      	ldr	r1, [sp, #88]	; 0x58
 801fb9a:	3201      	adds	r2, #1
 801fb9c:	428a      	cmp	r2, r1
 801fb9e:	9207      	str	r2, [sp, #28]
 801fba0:	f040 8087 	bne.w	801fcb2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801fba4:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801fba8:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801fbac:	9b04      	ldr	r3, [sp, #16]
 801fbae:	1bed      	subs	r5, r5, r7
 801fbb0:	b2ad      	uxth	r5, r5
 801fbb2:	2d00      	cmp	r5, #0
 801fbb4:	bf08      	it	eq
 801fbb6:	461a      	moveq	r2, r3
 801fbb8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801fbba:	bf18      	it	ne
 801fbbc:	2200      	movne	r2, #0
 801fbbe:	3301      	adds	r3, #1
 801fbc0:	930d      	str	r3, [sp, #52]	; 0x34
 801fbc2:	b292      	uxth	r2, r2
 801fbc4:	e70d      	b.n	801f9e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801fbc6:	1bd1      	subs	r1, r2, r7
 801fbc8:	b28b      	uxth	r3, r1
 801fbca:	9301      	str	r3, [sp, #4]
 801fbcc:	9708      	str	r7, [sp, #32]
 801fbce:	462b      	mov	r3, r5
 801fbd0:	e7ca      	b.n	801fb68 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801fbd2:	bf00      	nop
 801fbd4:	2000224c 	.word	0x2000224c
 801fbd8:	20002246 	.word	0x20002246
 801fbdc:	fffff7fb 	.word	0xfffff7fb
 801fbe0:	b2b6      	uxth	r6, r6
 801fbe2:	900b      	str	r0, [sp, #44]	; 0x2c
 801fbe4:	45b4      	cmp	ip, r6
 801fbe6:	d0cb      	beq.n	801fb80 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801fbe8:	f10c 0101 	add.w	r1, ip, #1
 801fbec:	44a4      	add	ip, r4
 801fbee:	9117      	str	r1, [sp, #92]	; 0x5c
 801fbf0:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801fbf4:	9911      	ldr	r1, [sp, #68]	; 0x44
 801fbf6:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801fbfa:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801fbfc:	f8b1 c000 	ldrh.w	ip, [r1]
 801fc00:	990e      	ldr	r1, [sp, #56]	; 0x38
 801fc02:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801fc06:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801fc0a:	fb1e fe01 	smulbb	lr, lr, r1
 801fc0e:	ea4f 2825 	mov.w	r8, r5, asr #8
 801fc12:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801fc14:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801fc18:	fb08 e801 	mla	r8, r8, r1, lr
 801fc1c:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801fc20:	990e      	ldr	r1, [sp, #56]	; 0x38
 801fc22:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801fc26:	fb19 f901 	smulbb	r9, r9, r1
 801fc2a:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801fc2e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801fc30:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801fc34:	fb0e 9e01 	mla	lr, lr, r1, r9
 801fc38:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801fc3c:	990e      	ldr	r1, [sp, #56]	; 0x38
 801fc3e:	fa5f fc8c 	uxtb.w	ip, ip
 801fc42:	fb1c fc01 	smulbb	ip, ip, r1
 801fc46:	00ed      	lsls	r5, r5, #3
 801fc48:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801fc4a:	b2ed      	uxtb	r5, r5
 801fc4c:	fb05 c501 	mla	r5, r5, r1, ip
 801fc50:	fa1f f888 	uxth.w	r8, r8
 801fc54:	fa1f fe8e 	uxth.w	lr, lr
 801fc58:	b2ad      	uxth	r5, r5
 801fc5a:	f108 0c01 	add.w	ip, r8, #1
 801fc5e:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801fc62:	f10e 0901 	add.w	r9, lr, #1
 801fc66:	f105 0c01 	add.w	ip, r5, #1
 801fc6a:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801fc6e:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801fc72:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801fc76:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801fc7a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801fc7e:	ea4c 0808 	orr.w	r8, ip, r8
 801fc82:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801fc84:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801fc88:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801fc8c:	ea48 0809 	orr.w	r8, r8, r9
 801fc90:	f821 8b02 	strh.w	r8, [r1], #2
 801fc94:	910b      	str	r1, [sp, #44]	; 0x2c
 801fc96:	e7a5      	b.n	801fbe4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801fc98:	f10c 0801 	add.w	r8, ip, #1
 801fc9c:	44a4      	add	ip, r4
 801fc9e:	9911      	ldr	r1, [sp, #68]	; 0x44
 801fca0:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801fca4:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801fca8:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801fcac:	fa1f fc88 	uxth.w	ip, r8
 801fcb0:	e763      	b.n	801fb7a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801fcb2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801fcb6:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801fcba:	1aad      	subs	r5, r5, r2
 801fcbc:	b2ad      	uxth	r5, r5
 801fcbe:	2d00      	cmp	r5, #0
 801fcc0:	bf18      	it	ne
 801fcc2:	2200      	movne	r2, #0
 801fcc4:	9201      	str	r2, [sp, #4]
 801fcc6:	e744      	b.n	801fb52 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801fcc8:	4b03      	ldr	r3, [pc, #12]	; (801fcd8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801fcca:	6818      	ldr	r0, [r3, #0]
 801fccc:	6803      	ldr	r3, [r0, #0]
 801fcce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801fcd0:	4798      	blx	r3
 801fcd2:	b01f      	add	sp, #124	; 0x7c
 801fcd4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fcd8:	2000224c 	.word	0x2000224c

0801fcdc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801fcdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fce0:	b08f      	sub	sp, #60	; 0x3c
 801fce2:	461c      	mov	r4, r3
 801fce4:	9203      	str	r2, [sp, #12]
 801fce6:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801fcea:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801fcec:	9202      	str	r2, [sp, #8]
 801fcee:	460f      	mov	r7, r1
 801fcf0:	2a00      	cmp	r2, #0
 801fcf2:	f000 8128 	beq.w	801ff46 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801fcf6:	6820      	ldr	r0, [r4, #0]
 801fcf8:	6861      	ldr	r1, [r4, #4]
 801fcfa:	aa0a      	add	r2, sp, #40	; 0x28
 801fcfc:	c203      	stmia	r2!, {r0, r1}
 801fcfe:	6818      	ldr	r0, [r3, #0]
 801fd00:	6859      	ldr	r1, [r3, #4]
 801fd02:	aa0c      	add	r2, sp, #48	; 0x30
 801fd04:	c203      	stmia	r2!, {r0, r1}
 801fd06:	a80a      	add	r0, sp, #40	; 0x28
 801fd08:	f7f9 f924 	bl	8018f54 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801fd0c:	4621      	mov	r1, r4
 801fd0e:	a80c      	add	r0, sp, #48	; 0x30
 801fd10:	f7f9 f964 	bl	8018fdc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801fd14:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801fd18:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801fd1c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801fd20:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801fd24:	bfde      	ittt	le
 801fd26:	b2b3      	uxthle	r3, r6
 801fd28:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801fd2c:	fb92 f3f3 	sdivle	r3, r2, r3
 801fd30:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801fd34:	bfc8      	it	gt
 801fd36:	2301      	movgt	r3, #1
 801fd38:	fb92 f1f3 	sdiv	r1, r2, r3
 801fd3c:	fa1f fc81 	uxth.w	ip, r1
 801fd40:	fb0c 2413 	mls	r4, ip, r3, r2
 801fd44:	fb14 f406 	smulbb	r4, r4, r6
 801fd48:	441d      	add	r5, r3
 801fd4a:	4404      	add	r4, r0
 801fd4c:	4661      	mov	r1, ip
 801fd4e:	3d01      	subs	r5, #1
 801fd50:	b2a4      	uxth	r4, r4
 801fd52:	fb95 f5f3 	sdiv	r5, r5, r3
 801fd56:	b121      	cbz	r1, 801fd62 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801fd58:	9b03      	ldr	r3, [sp, #12]
 801fd5a:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801fd5e:	ba1b      	rev	r3, r3
 801fd60:	441f      	add	r7, r3
 801fd62:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801fd66:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801fd6a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801fd6e:	4418      	add	r0, r3
 801fd70:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801fd74:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801fd78:	441a      	add	r2, r3
 801fd7a:	4b74      	ldr	r3, [pc, #464]	; (801ff4c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801fd7c:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801fd80:	6818      	ldr	r0, [r3, #0]
 801fd82:	6803      	ldr	r3, [r0, #0]
 801fd84:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801fd86:	4798      	blx	r3
 801fd88:	4a71      	ldr	r2, [pc, #452]	; (801ff50 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801fd8a:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801fd8e:	8813      	ldrh	r3, [r2, #0]
 801fd90:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801fd94:	9209      	str	r2, [sp, #36]	; 0x24
 801fd96:	fb03 c101 	mla	r1, r3, r1, ip
 801fd9a:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801fd9e:	4373      	muls	r3, r6
 801fda0:	b2ad      	uxth	r5, r5
 801fda2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801fda6:	00ad      	lsls	r5, r5, #2
 801fda8:	2c00      	cmp	r4, #0
 801fdaa:	9304      	str	r3, [sp, #16]
 801fdac:	f105 0304 	add.w	r3, r5, #4
 801fdb0:	9305      	str	r3, [sp, #20]
 801fdb2:	bf0c      	ite	eq
 801fdb4:	46c8      	moveq	r8, r9
 801fdb6:	f04f 0800 	movne.w	r8, #0
 801fdba:	2300      	movs	r3, #0
 801fdbc:	fa1f f888 	uxth.w	r8, r8
 801fdc0:	9301      	str	r3, [sp, #4]
 801fdc2:	9a04      	ldr	r2, [sp, #16]
 801fdc4:	4282      	cmp	r2, r0
 801fdc6:	f240 80b9 	bls.w	801ff3c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801fdca:	b95b      	cbnz	r3, 801fde4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801fdcc:	783a      	ldrb	r2, [r7, #0]
 801fdce:	0993      	lsrs	r3, r2, #6
 801fdd0:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801fdd4:	9201      	str	r2, [sp, #4]
 801fdd6:	1e5a      	subs	r2, r3, #1
 801fdd8:	2a02      	cmp	r2, #2
 801fdda:	bf8d      	iteet	hi
 801fddc:	787b      	ldrbhi	r3, [r7, #1]
 801fdde:	3701      	addls	r7, #1
 801fde0:	b29b      	uxthls	r3, r3
 801fde2:	3702      	addhi	r7, #2
 801fde4:	b184      	cbz	r4, 801fe08 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801fde6:	429c      	cmp	r4, r3
 801fde8:	bf95      	itete	ls
 801fdea:	1b1c      	subls	r4, r3, r4
 801fdec:	1ae4      	subhi	r4, r4, r3
 801fdee:	fa1f fa84 	uxthls.w	sl, r4
 801fdf2:	b2a4      	uxthhi	r4, r4
 801fdf4:	bf87      	ittee	hi
 801fdf6:	46c4      	movhi	ip, r8
 801fdf8:	f04f 0a00 	movhi.w	sl, #0
 801fdfc:	fa1f fc89 	uxthls.w	ip, r9
 801fe00:	2400      	movls	r4, #0
 801fe02:	4653      	mov	r3, sl
 801fe04:	46e0      	mov	r8, ip
 801fe06:	e7dc      	b.n	801fdc2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801fe08:	2204      	movs	r2, #4
 801fe0a:	4615      	mov	r5, r2
 801fe0c:	9905      	ldr	r1, [sp, #20]
 801fe0e:	9a01      	ldr	r2, [sp, #4]
 801fe10:	fb15 1202 	smlabb	r2, r5, r2, r1
 801fe14:	9903      	ldr	r1, [sp, #12]
 801fe16:	588a      	ldr	r2, [r1, r2]
 801fe18:	4543      	cmp	r3, r8
 801fe1a:	bf27      	ittee	cs
 801fe1c:	eba3 0a08 	subcs.w	sl, r3, r8
 801fe20:	46c6      	movcs	lr, r8
 801fe22:	eba8 0c03 	subcc.w	ip, r8, r3
 801fe26:	469e      	movcc	lr, r3
 801fe28:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801fe2c:	bf27      	ittee	cs
 801fe2e:	fa1f fa8a 	uxthcs.w	sl, sl
 801fe32:	46a4      	movcs	ip, r4
 801fe34:	fa1f fc8c 	uxthcc.w	ip, ip
 801fe38:	46a2      	movcc	sl, r4
 801fe3a:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801fe3e:	2900      	cmp	r1, #0
 801fe40:	d066      	beq.n	801ff10 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801fe42:	29ff      	cmp	r1, #255	; 0xff
 801fe44:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801fe48:	d114      	bne.n	801fe74 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801fe4a:	9d02      	ldr	r5, [sp, #8]
 801fe4c:	2dff      	cmp	r5, #255	; 0xff
 801fe4e:	d111      	bne.n	801fe74 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801fe50:	0951      	lsrs	r1, r2, #5
 801fe52:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801fe56:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fe5a:	f026 0607 	bic.w	r6, r6, #7
 801fe5e:	430e      	orrs	r6, r1
 801fe60:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fe64:	4316      	orrs	r6, r2
 801fe66:	b2b6      	uxth	r6, r6
 801fe68:	4486      	add	lr, r0
 801fe6a:	4586      	cmp	lr, r0
 801fe6c:	d051      	beq.n	801ff12 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801fe6e:	f820 6b02 	strh.w	r6, [r0], #2
 801fe72:	e7fa      	b.n	801fe6a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801fe74:	9d02      	ldr	r5, [sp, #8]
 801fe76:	4369      	muls	r1, r5
 801fe78:	1c4d      	adds	r5, r1, #1
 801fe7a:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801fe7e:	122d      	asrs	r5, r5, #8
 801fe80:	ea6f 0b05 	mvn.w	fp, r5
 801fe84:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801fe88:	b2ad      	uxth	r5, r5
 801fe8a:	b2f6      	uxtb	r6, r6
 801fe8c:	b2d2      	uxtb	r2, r2
 801fe8e:	fb11 f105 	smulbb	r1, r1, r5
 801fe92:	fb16 f605 	smulbb	r6, r6, r5
 801fe96:	fb12 f205 	smulbb	r2, r2, r5
 801fe9a:	b289      	uxth	r1, r1
 801fe9c:	b2b6      	uxth	r6, r6
 801fe9e:	b292      	uxth	r2, r2
 801fea0:	9106      	str	r1, [sp, #24]
 801fea2:	9607      	str	r6, [sp, #28]
 801fea4:	9208      	str	r2, [sp, #32]
 801fea6:	4486      	add	lr, r0
 801fea8:	fa5f fb8b 	uxtb.w	fp, fp
 801feac:	4586      	cmp	lr, r0
 801feae:	d030      	beq.n	801ff12 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801feb0:	8802      	ldrh	r2, [r0, #0]
 801feb2:	9906      	ldr	r1, [sp, #24]
 801feb4:	1216      	asrs	r6, r2, #8
 801feb6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801feba:	10d5      	asrs	r5, r2, #3
 801febc:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801fec0:	fb06 160b 	mla	r6, r6, fp, r1
 801fec4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801fec8:	9907      	ldr	r1, [sp, #28]
 801feca:	00d2      	lsls	r2, r2, #3
 801fecc:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801fed0:	fb05 150b 	mla	r5, r5, fp, r1
 801fed4:	b2d2      	uxtb	r2, r2
 801fed6:	9908      	ldr	r1, [sp, #32]
 801fed8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801fedc:	b2b6      	uxth	r6, r6
 801fede:	fb02 120b 	mla	r2, r2, fp, r1
 801fee2:	b292      	uxth	r2, r2
 801fee4:	1c71      	adds	r1, r6, #1
 801fee6:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801feea:	1c51      	adds	r1, r2, #1
 801feec:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801fef0:	b2ad      	uxth	r5, r5
 801fef2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801fef6:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801fefa:	4316      	orrs	r6, r2
 801fefc:	1c6a      	adds	r2, r5, #1
 801fefe:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801ff02:	096d      	lsrs	r5, r5, #5
 801ff04:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ff08:	432e      	orrs	r6, r5
 801ff0a:	f820 6b02 	strh.w	r6, [r0], #2
 801ff0e:	e7cd      	b.n	801feac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801ff10:	4470      	add	r0, lr
 801ff12:	4543      	cmp	r3, r8
 801ff14:	f4ff af75 	bcc.w	801fe02 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801ff18:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801ff1c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ff1e:	fa1f fc89 	uxth.w	ip, r9
 801ff22:	eba4 040c 	sub.w	r4, r4, ip
 801ff26:	881b      	ldrh	r3, [r3, #0]
 801ff28:	b2a4      	uxth	r4, r4
 801ff2a:	2c00      	cmp	r4, #0
 801ff2c:	eba3 0309 	sub.w	r3, r3, r9
 801ff30:	bf18      	it	ne
 801ff32:	f04f 0c00 	movne.w	ip, #0
 801ff36:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ff3a:	e762      	b.n	801fe02 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801ff3c:	4b03      	ldr	r3, [pc, #12]	; (801ff4c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801ff3e:	6818      	ldr	r0, [r3, #0]
 801ff40:	6803      	ldr	r3, [r0, #0]
 801ff42:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ff44:	4798      	blx	r3
 801ff46:	b00f      	add	sp, #60	; 0x3c
 801ff48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ff4c:	2000224c 	.word	0x2000224c
 801ff50:	20002246 	.word	0x20002246

0801ff54 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801ff54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ff58:	b093      	sub	sp, #76	; 0x4c
 801ff5a:	461c      	mov	r4, r3
 801ff5c:	9205      	str	r2, [sp, #20]
 801ff5e:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801ff62:	9101      	str	r1, [sp, #4]
 801ff64:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ff66:	9202      	str	r2, [sp, #8]
 801ff68:	2a00      	cmp	r2, #0
 801ff6a:	f000 812c 	beq.w	80201c6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801ff6e:	6820      	ldr	r0, [r4, #0]
 801ff70:	6861      	ldr	r1, [r4, #4]
 801ff72:	aa0e      	add	r2, sp, #56	; 0x38
 801ff74:	c203      	stmia	r2!, {r0, r1}
 801ff76:	6818      	ldr	r0, [r3, #0]
 801ff78:	6859      	ldr	r1, [r3, #4]
 801ff7a:	aa10      	add	r2, sp, #64	; 0x40
 801ff7c:	c203      	stmia	r2!, {r0, r1}
 801ff7e:	a80e      	add	r0, sp, #56	; 0x38
 801ff80:	f7f8 ffe8 	bl	8018f54 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ff84:	4621      	mov	r1, r4
 801ff86:	a810      	add	r0, sp, #64	; 0x40
 801ff88:	f7f9 f828 	bl	8018fdc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ff8c:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801ff90:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801ff94:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801ff98:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801ff9c:	bfde      	ittt	le
 801ff9e:	b2b3      	uxthle	r3, r6
 801ffa0:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801ffa4:	fb92 f3f3 	sdivle	r3, r2, r3
 801ffa8:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801ffac:	bfc8      	it	gt
 801ffae:	2301      	movgt	r3, #1
 801ffb0:	fb92 f1f3 	sdiv	r1, r2, r3
 801ffb4:	fa1f fc81 	uxth.w	ip, r1
 801ffb8:	fb0c 2413 	mls	r4, ip, r3, r2
 801ffbc:	fb14 f406 	smulbb	r4, r4, r6
 801ffc0:	441d      	add	r5, r3
 801ffc2:	4404      	add	r4, r0
 801ffc4:	4661      	mov	r1, ip
 801ffc6:	3d01      	subs	r5, #1
 801ffc8:	b2a4      	uxth	r4, r4
 801ffca:	fb95 f5f3 	sdiv	r5, r5, r3
 801ffce:	b131      	cbz	r1, 801ffde <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801ffd0:	9b05      	ldr	r3, [sp, #20]
 801ffd2:	9901      	ldr	r1, [sp, #4]
 801ffd4:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801ffd8:	ba1b      	rev	r3, r3
 801ffda:	4419      	add	r1, r3
 801ffdc:	9101      	str	r1, [sp, #4]
 801ffde:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801ffe2:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801ffe6:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801ffea:	4418      	add	r0, r3
 801ffec:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801fff0:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801fff4:	441a      	add	r2, r3
 801fff6:	4b75      	ldr	r3, [pc, #468]	; (80201cc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801fff8:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801fffc:	6818      	ldr	r0, [r3, #0]
 801fffe:	6803      	ldr	r3, [r0, #0]
 8020000:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020002:	4798      	blx	r3
 8020004:	4972      	ldr	r1, [pc, #456]	; (80201d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 8020006:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 802000a:	880b      	ldrh	r3, [r1, #0]
 802000c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8020010:	910d      	str	r1, [sp, #52]	; 0x34
 8020012:	fb03 c202 	mla	r2, r3, r2, ip
 8020016:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 802001a:	4373      	muls	r3, r6
 802001c:	b2ad      	uxth	r5, r5
 802001e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8020022:	00ad      	lsls	r5, r5, #2
 8020024:	9308      	str	r3, [sp, #32]
 8020026:	1d2b      	adds	r3, r5, #4
 8020028:	9309      	str	r3, [sp, #36]	; 0x24
 802002a:	9b02      	ldr	r3, [sp, #8]
 802002c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8020030:	9106      	str	r1, [sp, #24]
 8020032:	43da      	mvns	r2, r3
 8020034:	2c00      	cmp	r4, #0
 8020036:	bf0c      	ite	eq
 8020038:	46dc      	moveq	ip, fp
 802003a:	f04f 0c00 	movne.w	ip, #0
 802003e:	2300      	movs	r3, #0
 8020040:	b2d2      	uxtb	r2, r2
 8020042:	fa1f fc8c 	uxth.w	ip, ip
 8020046:	9303      	str	r3, [sp, #12]
 8020048:	9207      	str	r2, [sp, #28]
 802004a:	9a08      	ldr	r2, [sp, #32]
 802004c:	4282      	cmp	r2, r0
 802004e:	f240 80b5 	bls.w	80201bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 8020052:	b963      	cbnz	r3, 802006e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 8020054:	9b01      	ldr	r3, [sp, #4]
 8020056:	781a      	ldrb	r2, [r3, #0]
 8020058:	0993      	lsrs	r3, r2, #6
 802005a:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 802005e:	9203      	str	r2, [sp, #12]
 8020060:	1e5a      	subs	r2, r3, #1
 8020062:	2a02      	cmp	r2, #2
 8020064:	d815      	bhi.n	8020092 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 8020066:	9a01      	ldr	r2, [sp, #4]
 8020068:	3201      	adds	r2, #1
 802006a:	9201      	str	r2, [sp, #4]
 802006c:	b29b      	uxth	r3, r3
 802006e:	b1b4      	cbz	r4, 802009e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 8020070:	429c      	cmp	r4, r3
 8020072:	bf95      	itete	ls
 8020074:	1b1c      	subls	r4, r3, r4
 8020076:	1ae4      	subhi	r4, r4, r3
 8020078:	fa1f f884 	uxthls.w	r8, r4
 802007c:	b2a4      	uxthhi	r4, r4
 802007e:	bf87      	ittee	hi
 8020080:	4666      	movhi	r6, ip
 8020082:	f04f 0800 	movhi.w	r8, #0
 8020086:	fa1f f68b 	uxthls.w	r6, fp
 802008a:	2400      	movls	r4, #0
 802008c:	4643      	mov	r3, r8
 802008e:	46b4      	mov	ip, r6
 8020090:	e7db      	b.n	802004a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 8020092:	9a01      	ldr	r2, [sp, #4]
 8020094:	9b01      	ldr	r3, [sp, #4]
 8020096:	3202      	adds	r2, #2
 8020098:	785b      	ldrb	r3, [r3, #1]
 802009a:	9201      	str	r2, [sp, #4]
 802009c:	e7e7      	b.n	802006e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 802009e:	2203      	movs	r2, #3
 80200a0:	4615      	mov	r5, r2
 80200a2:	9909      	ldr	r1, [sp, #36]	; 0x24
 80200a4:	9a03      	ldr	r2, [sp, #12]
 80200a6:	fb15 1202 	smlabb	r2, r5, r2, r1
 80200aa:	9905      	ldr	r1, [sp, #20]
 80200ac:	4563      	cmp	r3, ip
 80200ae:	eb01 0502 	add.w	r5, r1, r2
 80200b2:	9902      	ldr	r1, [sp, #8]
 80200b4:	bf29      	itett	cs
 80200b6:	eba3 080c 	subcs.w	r8, r3, ip
 80200ba:	ebac 0603 	subcc.w	r6, ip, r3
 80200be:	fa1f f888 	uxthcs.w	r8, r8
 80200c2:	46e1      	movcs	r9, ip
 80200c4:	bf2f      	iteee	cs
 80200c6:	4626      	movcs	r6, r4
 80200c8:	b2b6      	uxthcc	r6, r6
 80200ca:	4699      	movcc	r9, r3
 80200cc:	46a0      	movcc	r8, r4
 80200ce:	29ff      	cmp	r1, #255	; 0xff
 80200d0:	d04a      	beq.n	8020168 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 80200d2:	9f06      	ldr	r7, [sp, #24]
 80200d4:	78a9      	ldrb	r1, [r5, #2]
 80200d6:	9004      	str	r0, [sp, #16]
 80200d8:	4379      	muls	r1, r7
 80200da:	910a      	str	r1, [sp, #40]	; 0x28
 80200dc:	7869      	ldrb	r1, [r5, #1]
 80200de:	4379      	muls	r1, r7
 80200e0:	910b      	str	r1, [sp, #44]	; 0x2c
 80200e2:	9905      	ldr	r1, [sp, #20]
 80200e4:	5c8a      	ldrb	r2, [r1, r2]
 80200e6:	437a      	muls	r2, r7
 80200e8:	920c      	str	r2, [sp, #48]	; 0x30
 80200ea:	46ca      	mov	sl, r9
 80200ec:	f1ba 0f00 	cmp.w	sl, #0
 80200f0:	d03d      	beq.n	802016e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 80200f2:	9a04      	ldr	r2, [sp, #16]
 80200f4:	9f07      	ldr	r7, [sp, #28]
 80200f6:	8812      	ldrh	r2, [r2, #0]
 80200f8:	1215      	asrs	r5, r2, #8
 80200fa:	46be      	mov	lr, r7
 80200fc:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8020100:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8020102:	10d1      	asrs	r1, r2, #3
 8020104:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8020108:	fb05 750e 	mla	r5, r5, lr, r7
 802010c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8020110:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8020112:	00d2      	lsls	r2, r2, #3
 8020114:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8020118:	fb01 710e 	mla	r1, r1, lr, r7
 802011c:	b2d2      	uxtb	r2, r2
 802011e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8020120:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8020124:	b2ad      	uxth	r5, r5
 8020126:	fb02 720e 	mla	r2, r2, lr, r7
 802012a:	b292      	uxth	r2, r2
 802012c:	f105 0e01 	add.w	lr, r5, #1
 8020130:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8020134:	f102 0e01 	add.w	lr, r2, #1
 8020138:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 802013c:	b289      	uxth	r1, r1
 802013e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020142:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8020146:	4315      	orrs	r5, r2
 8020148:	1c4a      	adds	r2, r1, #1
 802014a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802014e:	0949      	lsrs	r1, r1, #5
 8020150:	9a04      	ldr	r2, [sp, #16]
 8020152:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020156:	430d      	orrs	r5, r1
 8020158:	f822 5b02 	strh.w	r5, [r2], #2
 802015c:	f10a 3aff 	add.w	sl, sl, #4294967295
 8020160:	9204      	str	r2, [sp, #16]
 8020162:	fa1f fa8a 	uxth.w	sl, sl
 8020166:	e7c1      	b.n	80200ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 8020168:	4649      	mov	r1, r9
 802016a:	4686      	mov	lr, r0
 802016c:	b999      	cbnz	r1, 8020196 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 802016e:	4563      	cmp	r3, ip
 8020170:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 8020174:	d38a      	bcc.n	802008c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 8020176:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 802017a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802017c:	fa1f f68b 	uxth.w	r6, fp
 8020180:	1ba4      	subs	r4, r4, r6
 8020182:	881b      	ldrh	r3, [r3, #0]
 8020184:	b2a4      	uxth	r4, r4
 8020186:	2c00      	cmp	r4, #0
 8020188:	eba3 030b 	sub.w	r3, r3, fp
 802018c:	bf18      	it	ne
 802018e:	2600      	movne	r6, #0
 8020190:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8020194:	e77a      	b.n	802008c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 8020196:	78aa      	ldrb	r2, [r5, #2]
 8020198:	4f0e      	ldr	r7, [pc, #56]	; (80201d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 802019a:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 802019e:	786a      	ldrb	r2, [r5, #1]
 80201a0:	00d2      	lsls	r2, r2, #3
 80201a2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80201a6:	ea4a 0202 	orr.w	r2, sl, r2
 80201aa:	f895 a000 	ldrb.w	sl, [r5]
 80201ae:	3901      	subs	r1, #1
 80201b0:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 80201b4:	f82e 2b02 	strh.w	r2, [lr], #2
 80201b8:	b289      	uxth	r1, r1
 80201ba:	e7d7      	b.n	802016c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 80201bc:	4b03      	ldr	r3, [pc, #12]	; (80201cc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 80201be:	6818      	ldr	r0, [r3, #0]
 80201c0:	6803      	ldr	r3, [r0, #0]
 80201c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80201c4:	4798      	blx	r3
 80201c6:	b013      	add	sp, #76	; 0x4c
 80201c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80201cc:	2000224c 	.word	0x2000224c
 80201d0:	20002246 	.word	0x20002246
 80201d4:	fffff800 	.word	0xfffff800

080201d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80201d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80201dc:	b09d      	sub	sp, #116	; 0x74
 80201de:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 80201e2:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 80201e6:	920e      	str	r2, [sp, #56]	; 0x38
 80201e8:	461c      	mov	r4, r3
 80201ea:	4683      	mov	fp, r0
 80201ec:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80201ee:	2a00      	cmp	r2, #0
 80201f0:	f000 81e0 	beq.w	80205b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 80201f4:	6820      	ldr	r0, [r4, #0]
 80201f6:	6861      	ldr	r1, [r4, #4]
 80201f8:	aa18      	add	r2, sp, #96	; 0x60
 80201fa:	c203      	stmia	r2!, {r0, r1}
 80201fc:	6818      	ldr	r0, [r3, #0]
 80201fe:	6859      	ldr	r1, [r3, #4]
 8020200:	aa1a      	add	r2, sp, #104	; 0x68
 8020202:	c203      	stmia	r2!, {r0, r1}
 8020204:	a818      	add	r0, sp, #96	; 0x60
 8020206:	f7f8 fea5 	bl	8018f54 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802020a:	4621      	mov	r1, r4
 802020c:	a81a      	add	r0, sp, #104	; 0x68
 802020e:	f7f8 fee5 	bl	8018fdc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020212:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 8020216:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 802021a:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 802021e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8020222:	bfd7      	itett	le
 8020224:	b29a      	uxthle	r2, r3
 8020226:	2201      	movgt	r2, #1
 8020228:	f44f 6180 	movle.w	r1, #1024	; 0x400
 802022c:	fb91 f2f2 	sdivle	r2, r1, r2
 8020230:	9202      	str	r2, [sp, #8]
 8020232:	9802      	ldr	r0, [sp, #8]
 8020234:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 8020238:	fb92 f0f0 	sdiv	r0, r2, r0
 802023c:	b280      	uxth	r0, r0
 802023e:	900f      	str	r0, [sp, #60]	; 0x3c
 8020240:	9902      	ldr	r1, [sp, #8]
 8020242:	9802      	ldr	r0, [sp, #8]
 8020244:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8020246:	440c      	add	r4, r1
 8020248:	fb05 2510 	mls	r5, r5, r0, r2
 802024c:	fb15 f503 	smulbb	r5, r5, r3
 8020250:	3c01      	subs	r4, #1
 8020252:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 8020256:	fb94 f4f1 	sdiv	r4, r4, r1
 802025a:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 802025e:	440d      	add	r5, r1
 8020260:	4419      	add	r1, r3
 8020262:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 8020266:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 802026a:	441a      	add	r2, r3
 802026c:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 8020270:	9306      	str	r3, [sp, #24]
 8020272:	4bb3      	ldr	r3, [pc, #716]	; (8020540 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 8020274:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 8020278:	6818      	ldr	r0, [r3, #0]
 802027a:	6803      	ldr	r3, [r0, #0]
 802027c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802027e:	4798      	blx	r3
 8020280:	4bb0      	ldr	r3, [pc, #704]	; (8020544 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 8020282:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 8020286:	881a      	ldrh	r2, [r3, #0]
 8020288:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 802028c:	9316      	str	r3, [sp, #88]	; 0x58
 802028e:	fb02 7101 	mla	r1, r2, r1, r7
 8020292:	3401      	adds	r4, #1
 8020294:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 8020298:	b2a4      	uxth	r4, r4
 802029a:	4356      	muls	r6, r2
 802029c:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 80202a0:	00a4      	lsls	r4, r4, #2
 80202a2:	920a      	str	r2, [sp, #40]	; 0x28
 80202a4:	1d22      	adds	r2, r4, #4
 80202a6:	b2ad      	uxth	r5, r5
 80202a8:	9213      	str	r2, [sp, #76]	; 0x4c
 80202aa:	4ba7      	ldr	r3, [pc, #668]	; (8020548 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 80202ac:	9a06      	ldr	r2, [sp, #24]
 80202ae:	2d00      	cmp	r5, #0
 80202b0:	bf0c      	ite	eq
 80202b2:	4611      	moveq	r1, r2
 80202b4:	2100      	movne	r1, #0
 80202b6:	2200      	movs	r2, #0
 80202b8:	eba3 030b 	sub.w	r3, r3, fp
 80202bc:	b289      	uxth	r1, r1
 80202be:	920d      	str	r2, [sp, #52]	; 0x34
 80202c0:	9317      	str	r3, [sp, #92]	; 0x5c
 80202c2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80202c4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80202c6:	fa12 f383 	uxtah	r3, r2, r3
 80202ca:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80202cc:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80202d0:	3304      	adds	r3, #4
 80202d2:	9308      	str	r3, [sp, #32]
 80202d4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80202d6:	4543      	cmp	r3, r8
 80202d8:	f240 8167 	bls.w	80205aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 80202dc:	9a02      	ldr	r2, [sp, #8]
 80202de:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 80202e2:	fbb5 f3f3 	udiv	r3, r5, r3
 80202e6:	1ad3      	subs	r3, r2, r3
 80202e8:	b29b      	uxth	r3, r3
 80202ea:	9314      	str	r3, [sp, #80]	; 0x50
 80202ec:	9b08      	ldr	r3, [sp, #32]
 80202ee:	9808      	ldr	r0, [sp, #32]
 80202f0:	785a      	ldrb	r2, [r3, #1]
 80202f2:	789b      	ldrb	r3, [r3, #2]
 80202f4:	7800      	ldrb	r0, [r0, #0]
 80202f6:	9010      	str	r0, [sp, #64]	; 0x40
 80202f8:	021b      	lsls	r3, r3, #8
 80202fa:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80202fe:	9a08      	ldr	r2, [sp, #32]
 8020300:	78d2      	ldrb	r2, [r2, #3]
 8020302:	4313      	orrs	r3, r2
 8020304:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8020306:	3001      	adds	r0, #1
 8020308:	441a      	add	r2, r3
 802030a:	9007      	str	r0, [sp, #28]
 802030c:	1c50      	adds	r0, r2, #1
 802030e:	9005      	str	r0, [sp, #20]
 8020310:	7852      	ldrb	r2, [r2, #1]
 8020312:	9811      	ldr	r0, [sp, #68]	; 0x44
 8020314:	0212      	lsls	r2, r2, #8
 8020316:	5cc3      	ldrb	r3, [r0, r3]
 8020318:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 802031c:	431a      	orrs	r2, r3
 802031e:	b293      	uxth	r3, r2
 8020320:	930b      	str	r3, [sp, #44]	; 0x2c
 8020322:	2300      	movs	r3, #0
 8020324:	9309      	str	r3, [sp, #36]	; 0x24
 8020326:	2301      	movs	r3, #1
 8020328:	9301      	str	r3, [sp, #4]
 802032a:	9304      	str	r3, [sp, #16]
 802032c:	2300      	movs	r3, #0
 802032e:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 8020332:	9303      	str	r3, [sp, #12]
 8020334:	f04f 0e01 	mov.w	lr, #1
 8020338:	2d00      	cmp	r5, #0
 802033a:	d07c      	beq.n	8020436 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 802033c:	45ae      	cmp	lr, r5
 802033e:	d26b      	bcs.n	8020418 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 8020340:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020342:	eba5 050e 	sub.w	r5, r5, lr
 8020346:	4543      	cmp	r3, r8
 8020348:	b2ad      	uxth	r5, r5
 802034a:	460c      	mov	r4, r1
 802034c:	d802      	bhi.n	8020354 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 802034e:	e070      	b.n	8020432 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 8020350:	2b00      	cmp	r3, #0
 8020352:	d15c      	bne.n	802040e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8020354:	9b05      	ldr	r3, [sp, #20]
 8020356:	9a04      	ldr	r2, [sp, #16]
 8020358:	785b      	ldrb	r3, [r3, #1]
 802035a:	9904      	ldr	r1, [sp, #16]
 802035c:	f1c2 0207 	rsb	r2, r2, #7
 8020360:	4093      	lsls	r3, r2
 8020362:	005b      	lsls	r3, r3, #1
 8020364:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 8020368:	9b05      	ldr	r3, [sp, #20]
 802036a:	781b      	ldrb	r3, [r3, #0]
 802036c:	410b      	asrs	r3, r1
 802036e:	3101      	adds	r1, #1
 8020370:	b2c9      	uxtb	r1, r1
 8020372:	2908      	cmp	r1, #8
 8020374:	9104      	str	r1, [sp, #16]
 8020376:	9905      	ldr	r1, [sp, #20]
 8020378:	bf0a      	itet	eq
 802037a:	3102      	addeq	r1, #2
 802037c:	3101      	addne	r1, #1
 802037e:	9105      	streq	r1, [sp, #20]
 8020380:	b2db      	uxtb	r3, r3
 8020382:	bf0a      	itet	eq
 8020384:	2100      	moveq	r1, #0
 8020386:	9105      	strne	r1, [sp, #20]
 8020388:	9104      	streq	r1, [sp, #16]
 802038a:	4313      	orrs	r3, r2
 802038c:	9910      	ldr	r1, [sp, #64]	; 0x40
 802038e:	b29a      	uxth	r2, r3
 8020390:	4291      	cmp	r1, r2
 8020392:	d30a      	bcc.n	80203aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 8020394:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 8020398:	2301      	movs	r3, #1
 802039a:	9907      	ldr	r1, [sp, #28]
 802039c:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 80203a0:	d30f      	bcc.n	80203c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 80203a2:	2100      	movs	r1, #0
 80203a4:	9301      	str	r3, [sp, #4]
 80203a6:	9103      	str	r1, [sp, #12]
 80203a8:	e032      	b.n	8020410 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 80203aa:	9b07      	ldr	r3, [sp, #28]
 80203ac:	429a      	cmp	r2, r3
 80203ae:	d318      	bcc.n	80203e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 80203b0:	9b01      	ldr	r3, [sp, #4]
 80203b2:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 80203b6:	445b      	add	r3, fp
 80203b8:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 80203bc:	9b01      	ldr	r3, [sp, #4]
 80203be:	3301      	adds	r3, #1
 80203c0:	b29b      	uxth	r3, r3
 80203c2:	9907      	ldr	r1, [sp, #28]
 80203c4:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 80203c8:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 80203cc:	7108      	strb	r0, [r1, #4]
 80203ce:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80203d0:	80c8      	strh	r0, [r1, #6]
 80203d2:	9801      	ldr	r0, [sp, #4]
 80203d4:	3001      	adds	r0, #1
 80203d6:	7148      	strb	r0, [r1, #5]
 80203d8:	9907      	ldr	r1, [sp, #28]
 80203da:	3101      	adds	r1, #1
 80203dc:	b289      	uxth	r1, r1
 80203de:	9107      	str	r1, [sp, #28]
 80203e0:	e7df      	b.n	80203a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 80203e2:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 80203e6:	4611      	mov	r1, r2
 80203e8:	795b      	ldrb	r3, [r3, #5]
 80203ea:	f603 0004 	addw	r0, r3, #2052	; 0x804
 80203ee:	4458      	add	r0, fp
 80203f0:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 80203f2:	4406      	add	r6, r0
 80203f4:	2e00      	cmp	r6, #0
 80203f6:	dd06      	ble.n	8020406 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 80203f8:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 80203fc:	790e      	ldrb	r6, [r1, #4]
 80203fe:	f800 6d01 	strb.w	r6, [r0, #-1]!
 8020402:	88c9      	ldrh	r1, [r1, #6]
 8020404:	e7f4      	b.n	80203f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 8020406:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 802040a:	b29b      	uxth	r3, r3
 802040c:	e7c5      	b.n	802039a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 802040e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8020410:	920b      	str	r2, [sp, #44]	; 0x2c
 8020412:	4621      	mov	r1, r4
 8020414:	469e      	mov	lr, r3
 8020416:	e78f      	b.n	8020338 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 8020418:	9a03      	ldr	r2, [sp, #12]
 802041a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 802041e:	442a      	add	r2, r5
 8020420:	ebae 0305 	sub.w	r3, lr, r5
 8020424:	b292      	uxth	r2, r2
 8020426:	b29b      	uxth	r3, r3
 8020428:	9203      	str	r2, [sp, #12]
 802042a:	2500      	movs	r5, #0
 802042c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802042e:	4542      	cmp	r2, r8
 8020430:	d88e      	bhi.n	8020350 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 8020432:	4621      	mov	r1, r4
 8020434:	e74e      	b.n	80202d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 8020436:	458e      	cmp	lr, r1
 8020438:	bf29      	itett	cs
 802043a:	ebae 0301 	subcs.w	r3, lr, r1
 802043e:	eba1 040e 	subcc.w	r4, r1, lr
 8020442:	b29b      	uxthcs	r3, r3
 8020444:	910c      	strcs	r1, [sp, #48]	; 0x30
 8020446:	bf2f      	iteee	cs
 8020448:	462c      	movcs	r4, r5
 802044a:	b2a4      	uxthcc	r4, r4
 802044c:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 8020450:	462b      	movcc	r3, r5
 8020452:	f04f 0900 	mov.w	r9, #0
 8020456:	9a03      	ldr	r2, [sp, #12]
 8020458:	980c      	ldr	r0, [sp, #48]	; 0x30
 802045a:	444a      	add	r2, r9
 802045c:	4548      	cmp	r0, r9
 802045e:	b292      	uxth	r2, r2
 8020460:	d074      	beq.n	802054c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 8020462:	445a      	add	r2, fp
 8020464:	2004      	movs	r0, #4
 8020466:	4605      	mov	r5, r0
 8020468:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 802046c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 802046e:	fb15 0202 	smlabb	r2, r5, r2, r0
 8020472:	9812      	ldr	r0, [sp, #72]	; 0x48
 8020474:	5880      	ldr	r0, [r0, r2]
 8020476:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 802047a:	d014      	beq.n	80204a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 802047c:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8020480:	ea4f 2510 	mov.w	r5, r0, lsr #8
 8020484:	d112      	bne.n	80204ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 8020486:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8020488:	2aff      	cmp	r2, #255	; 0xff
 802048a:	d10f      	bne.n	80204ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 802048c:	0942      	lsrs	r2, r0, #5
 802048e:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 8020492:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020496:	f025 0507 	bic.w	r5, r5, #7
 802049a:	4315      	orrs	r5, r2
 802049c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80204a0:	4305      	orrs	r5, r0
 80204a2:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 80204a6:	f109 0901 	add.w	r9, r9, #1
 80204aa:	e7d4      	b.n	8020456 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 80204ac:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 80204b0:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80204b4:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 80204b8:	9215      	str	r2, [sp, #84]	; 0x54
 80204ba:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80204bc:	fb02 fa0a 	mul.w	sl, r2, sl
 80204c0:	f10a 0201 	add.w	r2, sl, #1
 80204c4:	eb02 222a 	add.w	r2, r2, sl, asr #8
 80204c8:	ea4f 272c 	mov.w	r7, ip, asr #8
 80204cc:	1212      	asrs	r2, r2, #8
 80204ce:	fa1f fa82 	uxth.w	sl, r2
 80204d2:	f3c0 4607 	ubfx	r6, r0, #16, #8
 80204d6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80204da:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80204de:	43d2      	mvns	r2, r2
 80204e0:	b2d2      	uxtb	r2, r2
 80204e2:	fb16 f60a 	smulbb	r6, r6, sl
 80204e6:	fa5f fc8c 	uxtb.w	ip, ip
 80204ea:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 80204ee:	b2c0      	uxtb	r0, r0
 80204f0:	fb07 6702 	mla	r7, r7, r2, r6
 80204f4:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 80204f8:	9e15      	ldr	r6, [sp, #84]	; 0x54
 80204fa:	fb10 f00a 	smulbb	r0, r0, sl
 80204fe:	fb0c 0002 	mla	r0, ip, r2, r0
 8020502:	b2ed      	uxtb	r5, r5
 8020504:	b2bf      	uxth	r7, r7
 8020506:	fb15 f50a 	smulbb	r5, r5, sl
 802050a:	b280      	uxth	r0, r0
 802050c:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8020510:	fb06 5602 	mla	r6, r6, r2, r5
 8020514:	1c7a      	adds	r2, r7, #1
 8020516:	1c45      	adds	r5, r0, #1
 8020518:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 802051c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8020520:	b2b6      	uxth	r6, r6
 8020522:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8020526:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 802052a:	432f      	orrs	r7, r5
 802052c:	1c75      	adds	r5, r6, #1
 802052e:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8020532:	096d      	lsrs	r5, r5, #5
 8020534:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020538:	432f      	orrs	r7, r5
 802053a:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 802053e:	e7b2      	b.n	80204a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 8020540:	2000224c 	.word	0x2000224c
 8020544:	20002246 	.word	0x20002246
 8020548:	fffff7fb 	.word	0xfffff7fb
 802054c:	9203      	str	r2, [sp, #12]
 802054e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8020550:	458e      	cmp	lr, r1
 8020552:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8020556:	f4ff af68 	bcc.w	802042a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 802055a:	9a16      	ldr	r2, [sp, #88]	; 0x58
 802055c:	9906      	ldr	r1, [sp, #24]
 802055e:	8812      	ldrh	r2, [r2, #0]
 8020560:	1a52      	subs	r2, r2, r1
 8020562:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8020566:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8020568:	9914      	ldr	r1, [sp, #80]	; 0x50
 802056a:	3201      	adds	r2, #1
 802056c:	428a      	cmp	r2, r1
 802056e:	9209      	str	r2, [sp, #36]	; 0x24
 8020570:	d111      	bne.n	8020596 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 8020572:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 8020576:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 802057a:	9b06      	ldr	r3, [sp, #24]
 802057c:	eba5 0509 	sub.w	r5, r5, r9
 8020580:	b2ad      	uxth	r5, r5
 8020582:	2d00      	cmp	r5, #0
 8020584:	bf08      	it	eq
 8020586:	4619      	moveq	r1, r3
 8020588:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802058a:	bf18      	it	ne
 802058c:	2100      	movne	r1, #0
 802058e:	3301      	adds	r3, #1
 8020590:	930d      	str	r3, [sp, #52]	; 0x34
 8020592:	b289      	uxth	r1, r1
 8020594:	e695      	b.n	80202c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 8020596:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 802059a:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 802059e:	1b2d      	subs	r5, r5, r4
 80205a0:	b2ad      	uxth	r5, r5
 80205a2:	2d00      	cmp	r5, #0
 80205a4:	bf18      	it	ne
 80205a6:	2400      	movne	r4, #0
 80205a8:	e740      	b.n	802042c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 80205aa:	4b04      	ldr	r3, [pc, #16]	; (80205bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 80205ac:	6818      	ldr	r0, [r3, #0]
 80205ae:	6803      	ldr	r3, [r0, #0]
 80205b0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80205b2:	4798      	blx	r3
 80205b4:	b01d      	add	sp, #116	; 0x74
 80205b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80205ba:	bf00      	nop
 80205bc:	2000224c 	.word	0x2000224c

080205c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 80205c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80205c4:	b09f      	sub	sp, #124	; 0x7c
 80205c6:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 80205ca:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 80205ce:	920a      	str	r2, [sp, #40]	; 0x28
 80205d0:	461d      	mov	r5, r3
 80205d2:	4604      	mov	r4, r0
 80205d4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80205d6:	2a00      	cmp	r2, #0
 80205d8:	f000 81fa 	beq.w	80209d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 80205dc:	6828      	ldr	r0, [r5, #0]
 80205de:	6869      	ldr	r1, [r5, #4]
 80205e0:	aa1a      	add	r2, sp, #104	; 0x68
 80205e2:	c203      	stmia	r2!, {r0, r1}
 80205e4:	6818      	ldr	r0, [r3, #0]
 80205e6:	6859      	ldr	r1, [r3, #4]
 80205e8:	aa1c      	add	r2, sp, #112	; 0x70
 80205ea:	c203      	stmia	r2!, {r0, r1}
 80205ec:	a81a      	add	r0, sp, #104	; 0x68
 80205ee:	f7f8 fcb1 	bl	8018f54 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80205f2:	4629      	mov	r1, r5
 80205f4:	a81c      	add	r0, sp, #112	; 0x70
 80205f6:	f7f8 fcf1 	bl	8018fdc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80205fa:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 80205fe:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 8020602:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 8020606:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 802060a:	bfd7      	itett	le
 802060c:	b29a      	uxthle	r2, r3
 802060e:	2201      	movgt	r2, #1
 8020610:	f44f 6180 	movle.w	r1, #1024	; 0x400
 8020614:	fb91 f2f2 	sdivle	r2, r1, r2
 8020618:	9201      	str	r2, [sp, #4]
 802061a:	9801      	ldr	r0, [sp, #4]
 802061c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 8020620:	fb92 f0f0 	sdiv	r0, r2, r0
 8020624:	b280      	uxth	r0, r0
 8020626:	9010      	str	r0, [sp, #64]	; 0x40
 8020628:	9901      	ldr	r1, [sp, #4]
 802062a:	9801      	ldr	r0, [sp, #4]
 802062c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802062e:	440e      	add	r6, r1
 8020630:	fb05 2510 	mls	r5, r5, r0, r2
 8020634:	fb15 f503 	smulbb	r5, r5, r3
 8020638:	3e01      	subs	r6, #1
 802063a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 802063e:	fb96 f6f1 	sdiv	r6, r6, r1
 8020642:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 8020646:	440d      	add	r5, r1
 8020648:	4419      	add	r1, r3
 802064a:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 802064e:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 8020652:	441a      	add	r2, r3
 8020654:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 8020658:	9304      	str	r3, [sp, #16]
 802065a:	4b96      	ldr	r3, [pc, #600]	; (80208b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 802065c:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 8020660:	6818      	ldr	r0, [r3, #0]
 8020662:	6803      	ldr	r3, [r0, #0]
 8020664:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020666:	4798      	blx	r3
 8020668:	4b93      	ldr	r3, [pc, #588]	; (80208b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 802066a:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 802066e:	881a      	ldrh	r2, [r3, #0]
 8020670:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 8020674:	9318      	str	r3, [sp, #96]	; 0x60
 8020676:	fb02 c101 	mla	r1, r2, r1, ip
 802067a:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 802067e:	4357      	muls	r7, r2
 8020680:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 8020684:	3601      	adds	r6, #1
 8020686:	920b      	str	r2, [sp, #44]	; 0x2c
 8020688:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802068a:	4b8c      	ldr	r3, [pc, #560]	; (80208bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 802068c:	b2b6      	uxth	r6, r6
 802068e:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8020692:	1d32      	adds	r2, r6, #4
 8020694:	9206      	str	r2, [sp, #24]
 8020696:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8020698:	43d2      	mvns	r2, r2
 802069a:	b2d2      	uxtb	r2, r2
 802069c:	b2ad      	uxth	r5, r5
 802069e:	9215      	str	r2, [sp, #84]	; 0x54
 80206a0:	9a04      	ldr	r2, [sp, #16]
 80206a2:	2d00      	cmp	r5, #0
 80206a4:	bf0c      	ite	eq
 80206a6:	4611      	moveq	r1, r2
 80206a8:	2100      	movne	r1, #0
 80206aa:	2200      	movs	r2, #0
 80206ac:	1b1b      	subs	r3, r3, r4
 80206ae:	b289      	uxth	r1, r1
 80206b0:	920d      	str	r2, [sp, #52]	; 0x34
 80206b2:	9319      	str	r3, [sp, #100]	; 0x64
 80206b4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80206b6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80206b8:	fa12 f383 	uxtah	r3, r2, r3
 80206bc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80206be:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80206c2:	3304      	adds	r3, #4
 80206c4:	9307      	str	r3, [sp, #28]
 80206c6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80206c8:	455b      	cmp	r3, fp
 80206ca:	f240 817c 	bls.w	80209c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 80206ce:	9a01      	ldr	r2, [sp, #4]
 80206d0:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 80206d4:	fbb5 f3f3 	udiv	r3, r5, r3
 80206d8:	1ad3      	subs	r3, r2, r3
 80206da:	b29b      	uxth	r3, r3
 80206dc:	9316      	str	r3, [sp, #88]	; 0x58
 80206de:	9b07      	ldr	r3, [sp, #28]
 80206e0:	9807      	ldr	r0, [sp, #28]
 80206e2:	785a      	ldrb	r2, [r3, #1]
 80206e4:	789b      	ldrb	r3, [r3, #2]
 80206e6:	7800      	ldrb	r0, [r0, #0]
 80206e8:	9011      	str	r0, [sp, #68]	; 0x44
 80206ea:	021b      	lsls	r3, r3, #8
 80206ec:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80206f0:	9a07      	ldr	r2, [sp, #28]
 80206f2:	78d2      	ldrb	r2, [r2, #3]
 80206f4:	4313      	orrs	r3, r2
 80206f6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80206f8:	3001      	adds	r0, #1
 80206fa:	441a      	add	r2, r3
 80206fc:	9005      	str	r0, [sp, #20]
 80206fe:	1c50      	adds	r0, r2, #1
 8020700:	9003      	str	r0, [sp, #12]
 8020702:	7852      	ldrb	r2, [r2, #1]
 8020704:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8020706:	0212      	lsls	r2, r2, #8
 8020708:	5cc3      	ldrb	r3, [r0, r3]
 802070a:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 802070e:	431a      	orrs	r2, r3
 8020710:	b293      	uxth	r3, r2
 8020712:	930c      	str	r3, [sp, #48]	; 0x30
 8020714:	2300      	movs	r3, #0
 8020716:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 802071a:	9308      	str	r3, [sp, #32]
 802071c:	461a      	mov	r2, r3
 802071e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8020722:	930e      	str	r3, [sp, #56]	; 0x38
 8020724:	f04f 0801 	mov.w	r8, #1
 8020728:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 802072c:	f8cd 8008 	str.w	r8, [sp, #8]
 8020730:	46c4      	mov	ip, r8
 8020732:	930f      	str	r3, [sp, #60]	; 0x3c
 8020734:	2d00      	cmp	r5, #0
 8020736:	d07c      	beq.n	8020832 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 8020738:	45ac      	cmp	ip, r5
 802073a:	d26c      	bcs.n	8020816 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 802073c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802073e:	eba5 050c 	sub.w	r5, r5, ip
 8020742:	455b      	cmp	r3, fp
 8020744:	b2ad      	uxth	r5, r5
 8020746:	4608      	mov	r0, r1
 8020748:	d802      	bhi.n	8020750 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 802074a:	e070      	b.n	802082e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 802074c:	2b00      	cmp	r3, #0
 802074e:	d15c      	bne.n	802080a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8020750:	9b03      	ldr	r3, [sp, #12]
 8020752:	9a02      	ldr	r2, [sp, #8]
 8020754:	785b      	ldrb	r3, [r3, #1]
 8020756:	9902      	ldr	r1, [sp, #8]
 8020758:	f1c2 0207 	rsb	r2, r2, #7
 802075c:	4093      	lsls	r3, r2
 802075e:	005b      	lsls	r3, r3, #1
 8020760:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 8020764:	9b03      	ldr	r3, [sp, #12]
 8020766:	781b      	ldrb	r3, [r3, #0]
 8020768:	410b      	asrs	r3, r1
 802076a:	3101      	adds	r1, #1
 802076c:	b2c9      	uxtb	r1, r1
 802076e:	2908      	cmp	r1, #8
 8020770:	9102      	str	r1, [sp, #8]
 8020772:	9903      	ldr	r1, [sp, #12]
 8020774:	bf0a      	itet	eq
 8020776:	3102      	addeq	r1, #2
 8020778:	3101      	addne	r1, #1
 802077a:	9103      	streq	r1, [sp, #12]
 802077c:	b2db      	uxtb	r3, r3
 802077e:	bf0a      	itet	eq
 8020780:	2100      	moveq	r1, #0
 8020782:	9103      	strne	r1, [sp, #12]
 8020784:	9102      	streq	r1, [sp, #8]
 8020786:	4313      	orrs	r3, r2
 8020788:	9911      	ldr	r1, [sp, #68]	; 0x44
 802078a:	b29a      	uxth	r2, r3
 802078c:	4291      	cmp	r1, r2
 802078e:	d30a      	bcc.n	80207a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 8020790:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 8020794:	2301      	movs	r3, #1
 8020796:	9905      	ldr	r1, [sp, #20]
 8020798:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 802079c:	d30f      	bcc.n	80207be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 802079e:	2100      	movs	r1, #0
 80207a0:	4698      	mov	r8, r3
 80207a2:	9100      	str	r1, [sp, #0]
 80207a4:	e032      	b.n	802080c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 80207a6:	9b05      	ldr	r3, [sp, #20]
 80207a8:	429a      	cmp	r2, r3
 80207aa:	d318      	bcc.n	80207de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 80207ac:	eb04 0308 	add.w	r3, r4, r8
 80207b0:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 80207b4:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 80207b8:	f108 0301 	add.w	r3, r8, #1
 80207bc:	b29b      	uxth	r3, r3
 80207be:	9905      	ldr	r1, [sp, #20]
 80207c0:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 80207c4:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 80207c8:	710e      	strb	r6, [r1, #4]
 80207ca:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80207cc:	80ce      	strh	r6, [r1, #6]
 80207ce:	f108 0601 	add.w	r6, r8, #1
 80207d2:	714e      	strb	r6, [r1, #5]
 80207d4:	9905      	ldr	r1, [sp, #20]
 80207d6:	3101      	adds	r1, #1
 80207d8:	b289      	uxth	r1, r1
 80207da:	9105      	str	r1, [sp, #20]
 80207dc:	e7df      	b.n	802079e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 80207de:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 80207e2:	4611      	mov	r1, r2
 80207e4:	795b      	ldrb	r3, [r3, #5]
 80207e6:	f603 0604 	addw	r6, r3, #2052	; 0x804
 80207ea:	4426      	add	r6, r4
 80207ec:	9f19      	ldr	r7, [sp, #100]	; 0x64
 80207ee:	4437      	add	r7, r6
 80207f0:	2f00      	cmp	r7, #0
 80207f2:	dd06      	ble.n	8020802 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 80207f4:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 80207f8:	790f      	ldrb	r7, [r1, #4]
 80207fa:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80207fe:	88c9      	ldrh	r1, [r1, #6]
 8020800:	e7f4      	b.n	80207ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 8020802:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 8020806:	b29b      	uxth	r3, r3
 8020808:	e7c5      	b.n	8020796 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 802080a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802080c:	920c      	str	r2, [sp, #48]	; 0x30
 802080e:	4601      	mov	r1, r0
 8020810:	9a00      	ldr	r2, [sp, #0]
 8020812:	469c      	mov	ip, r3
 8020814:	e78e      	b.n	8020734 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 8020816:	1957      	adds	r7, r2, r5
 8020818:	ebac 0305 	sub.w	r3, ip, r5
 802081c:	b2ba      	uxth	r2, r7
 802081e:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8020822:	9200      	str	r2, [sp, #0]
 8020824:	b29b      	uxth	r3, r3
 8020826:	2500      	movs	r5, #0
 8020828:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802082a:	455a      	cmp	r2, fp
 802082c:	d88e      	bhi.n	802074c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 802082e:	4601      	mov	r1, r0
 8020830:	e749      	b.n	80206c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 8020832:	458c      	cmp	ip, r1
 8020834:	bf2c      	ite	cs
 8020836:	4628      	movcs	r0, r5
 8020838:	462b      	movcc	r3, r5
 802083a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 802083c:	bf27      	ittee	cs
 802083e:	9109      	strcs	r1, [sp, #36]	; 0x24
 8020840:	ebac 0301 	subcs.w	r3, ip, r1
 8020844:	eba1 000c 	subcc.w	r0, r1, ip
 8020848:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 802084c:	bf2c      	ite	cs
 802084e:	b29b      	uxthcs	r3, r3
 8020850:	b280      	uxthcc	r0, r0
 8020852:	2dff      	cmp	r5, #255	; 0xff
 8020854:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8020856:	eb02 0705 	add.w	r7, r2, r5
 802085a:	b2bd      	uxth	r5, r7
 802085c:	9500      	str	r5, [sp, #0]
 802085e:	d12f      	bne.n	80208c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 8020860:	465e      	mov	r6, fp
 8020862:	9d00      	ldr	r5, [sp, #0]
 8020864:	42aa      	cmp	r2, r5
 8020866:	f040 8084 	bne.w	8020972 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 802086a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802086c:	458c      	cmp	ip, r1
 802086e:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8020872:	d3d8      	bcc.n	8020826 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 8020874:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8020876:	9904      	ldr	r1, [sp, #16]
 8020878:	8812      	ldrh	r2, [r2, #0]
 802087a:	1a52      	subs	r2, r2, r1
 802087c:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8020880:	9a08      	ldr	r2, [sp, #32]
 8020882:	9916      	ldr	r1, [sp, #88]	; 0x58
 8020884:	3201      	adds	r2, #1
 8020886:	428a      	cmp	r2, r1
 8020888:	9208      	str	r2, [sp, #32]
 802088a:	f040 8092 	bne.w	80209b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 802088e:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 8020892:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 8020896:	9b04      	ldr	r3, [sp, #16]
 8020898:	eba5 050c 	sub.w	r5, r5, ip
 802089c:	b2ad      	uxth	r5, r5
 802089e:	2d00      	cmp	r5, #0
 80208a0:	bf08      	it	eq
 80208a2:	4619      	moveq	r1, r3
 80208a4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80208a6:	bf18      	it	ne
 80208a8:	2100      	movne	r1, #0
 80208aa:	3301      	adds	r3, #1
 80208ac:	930d      	str	r3, [sp, #52]	; 0x34
 80208ae:	b289      	uxth	r1, r1
 80208b0:	e700      	b.n	80206b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 80208b2:	bf00      	nop
 80208b4:	2000224c 	.word	0x2000224c
 80208b8:	20002246 	.word	0x20002246
 80208bc:	fffff7fb 	.word	0xfffff7fb
 80208c0:	46d9      	mov	r9, fp
 80208c2:	9d00      	ldr	r5, [sp, #0]
 80208c4:	42aa      	cmp	r2, r5
 80208c6:	d0d0      	beq.n	802086a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 80208c8:	1c55      	adds	r5, r2, #1
 80208ca:	4422      	add	r2, r4
 80208cc:	9517      	str	r5, [sp, #92]	; 0x5c
 80208ce:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 80208d2:	9a06      	ldr	r2, [sp, #24]
 80208d4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80208d8:	4472      	add	r2, lr
 80208da:	9212      	str	r2, [sp, #72]	; 0x48
 80208dc:	9f12      	ldr	r7, [sp, #72]	; 0x48
 80208de:	f8b9 2000 	ldrh.w	r2, [r9]
 80208e2:	f897 a002 	ldrb.w	sl, [r7, #2]
 80208e6:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 80208e8:	1216      	asrs	r6, r2, #8
 80208ea:	fb1a fa07 	smulbb	sl, sl, r7
 80208ee:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80208f2:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80208f4:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80208f8:	fb06 a607 	mla	r6, r6, r7, sl
 80208fc:	9f12      	ldr	r7, [sp, #72]	; 0x48
 80208fe:	f897 a001 	ldrb.w	sl, [r7, #1]
 8020902:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8020904:	10d5      	asrs	r5, r2, #3
 8020906:	fb1a fa07 	smulbb	sl, sl, r7
 802090a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802090e:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8020910:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8020914:	fb05 a507 	mla	r5, r5, r7, sl
 8020918:	9f06      	ldr	r7, [sp, #24]
 802091a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802091e:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8020920:	00d2      	lsls	r2, r2, #3
 8020922:	fb1e fe07 	smulbb	lr, lr, r7
 8020926:	b2d2      	uxtb	r2, r2
 8020928:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 802092a:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 802092e:	b2b6      	uxth	r6, r6
 8020930:	fb02 e207 	mla	r2, r2, r7, lr
 8020934:	b292      	uxth	r2, r2
 8020936:	b2ad      	uxth	r5, r5
 8020938:	f106 0a01 	add.w	sl, r6, #1
 802093c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8020940:	f102 0e01 	add.w	lr, r2, #1
 8020944:	f105 0a01 	add.w	sl, r5, #1
 8020948:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 802094c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8020950:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8020954:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8020958:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 802095c:	ea4e 0606 	orr.w	r6, lr, r6
 8020960:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8020964:	ea46 060a 	orr.w	r6, r6, sl
 8020968:	f829 6b02 	strh.w	r6, [r9], #2
 802096c:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8020970:	e7a7      	b.n	80208c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 8020972:	f102 0e01 	add.w	lr, r2, #1
 8020976:	4422      	add	r2, r4
 8020978:	9f06      	ldr	r7, [sp, #24]
 802097a:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 802097e:	9a06      	ldr	r2, [sp, #24]
 8020980:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8020984:	eb02 0a05 	add.w	sl, r2, r5
 8020988:	4a13      	ldr	r2, [pc, #76]	; (80209d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 802098a:	f89a 9002 	ldrb.w	r9, [sl, #2]
 802098e:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 8020992:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8020996:	00d2      	lsls	r2, r2, #3
 8020998:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802099c:	ea49 0202 	orr.w	r2, r9, r2
 80209a0:	f817 9005 	ldrb.w	r9, [r7, r5]
 80209a4:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80209a8:	f826 2b02 	strh.w	r2, [r6], #2
 80209ac:	fa1f f28e 	uxth.w	r2, lr
 80209b0:	e757      	b.n	8020862 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 80209b2:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 80209b6:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 80209ba:	1a2d      	subs	r5, r5, r0
 80209bc:	b2ad      	uxth	r5, r5
 80209be:	2d00      	cmp	r5, #0
 80209c0:	bf18      	it	ne
 80209c2:	2000      	movne	r0, #0
 80209c4:	e730      	b.n	8020828 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 80209c6:	4b05      	ldr	r3, [pc, #20]	; (80209dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 80209c8:	6818      	ldr	r0, [r3, #0]
 80209ca:	6803      	ldr	r3, [r0, #0]
 80209cc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80209ce:	4798      	blx	r3
 80209d0:	b01f      	add	sp, #124	; 0x7c
 80209d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80209d6:	bf00      	nop
 80209d8:	fffff800 	.word	0xfffff800
 80209dc:	2000224c 	.word	0x2000224c

080209e0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 80209e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80209e4:	b091      	sub	sp, #68	; 0x44
 80209e6:	469b      	mov	fp, r3
 80209e8:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 80209ec:	4616      	mov	r6, r2
 80209ee:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 80209f2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80209f6:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 80209fa:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80209fe:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8020a02:	4604      	mov	r4, r0
 8020a04:	460d      	mov	r5, r1
 8020a06:	4640      	mov	r0, r8
 8020a08:	4659      	mov	r1, fp
 8020a0a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8020a0e:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 8020a12:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 8020a16:	f7f2 fc4d 	bl	80132b4 <_ZN8touchgfx4RectaNERKS0_>
 8020a1a:	4631      	mov	r1, r6
 8020a1c:	4640      	mov	r0, r8
 8020a1e:	f7f2 fc49 	bl	80132b4 <_ZN8touchgfx4RectaNERKS0_>
 8020a22:	4b74      	ldr	r3, [pc, #464]	; (8020bf4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 8020a24:	8818      	ldrh	r0, [r3, #0]
 8020a26:	4b74      	ldr	r3, [pc, #464]	; (8020bf8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 8020a28:	8819      	ldrh	r1, [r3, #0]
 8020a2a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8020a2e:	2b00      	cmp	r3, #0
 8020a30:	b202      	sxth	r2, r0
 8020a32:	b20e      	sxth	r6, r1
 8020a34:	da07      	bge.n	8020a46 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 8020a36:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8020a3a:	4463      	add	r3, ip
 8020a3c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8020a40:	2300      	movs	r3, #0
 8020a42:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8020a46:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8020a4a:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8020a4e:	1ad2      	subs	r2, r2, r3
 8020a50:	4594      	cmp	ip, r2
 8020a52:	bfc4      	itt	gt
 8020a54:	1ac2      	subgt	r2, r0, r3
 8020a56:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 8020a5a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8020a5e:	2a00      	cmp	r2, #0
 8020a60:	da07      	bge.n	8020a72 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 8020a62:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 8020a66:	4462      	add	r2, ip
 8020a68:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8020a6c:	2200      	movs	r2, #0
 8020a6e:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8020a72:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 8020a76:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 8020a7a:	eba6 060a 	sub.w	r6, r6, sl
 8020a7e:	42b2      	cmp	r2, r6
 8020a80:	bfc4      	itt	gt
 8020a82:	eba1 020a 	subgt.w	r2, r1, sl
 8020a86:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 8020a8a:	4a5c      	ldr	r2, [pc, #368]	; (8020bfc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 8020a8c:	7812      	ldrb	r2, [r2, #0]
 8020a8e:	b9a2      	cbnz	r2, 8020aba <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 8020a90:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8020a94:	4286      	cmp	r6, r0
 8020a96:	4640      	mov	r0, r8
 8020a98:	9303      	str	r3, [sp, #12]
 8020a9a:	bf14      	ite	ne
 8020a9c:	2600      	movne	r6, #0
 8020a9e:	2601      	moveq	r6, #1
 8020aa0:	f7f2 fc4b 	bl	801333a <_ZNK8touchgfx4Rect7isEmptyEv>
 8020aa4:	9b03      	ldr	r3, [sp, #12]
 8020aa6:	b160      	cbz	r0, 8020ac2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 8020aa8:	2300      	movs	r3, #0
 8020aaa:	8023      	strh	r3, [r4, #0]
 8020aac:	8063      	strh	r3, [r4, #2]
 8020aae:	80a3      	strh	r3, [r4, #4]
 8020ab0:	4620      	mov	r0, r4
 8020ab2:	80e3      	strh	r3, [r4, #6]
 8020ab4:	b011      	add	sp, #68	; 0x44
 8020ab6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020aba:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8020abe:	428e      	cmp	r6, r1
 8020ac0:	e7e9      	b.n	8020a96 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 8020ac2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8020ac6:	9205      	str	r2, [sp, #20]
 8020ac8:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 8020acc:	9206      	str	r2, [sp, #24]
 8020ace:	f8bb 2000 	ldrh.w	r2, [fp]
 8020ad2:	900e      	str	r0, [sp, #56]	; 0x38
 8020ad4:	1a9b      	subs	r3, r3, r2
 8020ad6:	b21b      	sxth	r3, r3
 8020ad8:	9303      	str	r3, [sp, #12]
 8020ada:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8020ade:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 8020ae2:	ebaa 0a03 	sub.w	sl, sl, r3
 8020ae6:	fa0f f38a 	sxth.w	r3, sl
 8020aea:	9304      	str	r3, [sp, #16]
 8020aec:	9b03      	ldr	r3, [sp, #12]
 8020aee:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8020af2:	9b04      	ldr	r3, [sp, #16]
 8020af4:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8020af8:	9b05      	ldr	r3, [sp, #20]
 8020afa:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8020afe:	a90e      	add	r1, sp, #56	; 0x38
 8020b00:	9b06      	ldr	r3, [sp, #24]
 8020b02:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8020b06:	a80c      	add	r0, sp, #48	; 0x30
 8020b08:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 8020b0c:	f7f8 fa66 	bl	8018fdc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020b10:	4640      	mov	r0, r8
 8020b12:	f7f8 fa1f 	bl	8018f54 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020b16:	a80e      	add	r0, sp, #56	; 0x38
 8020b18:	f7f8 fa1c 	bl	8018f54 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020b1c:	4b38      	ldr	r3, [pc, #224]	; (8020c00 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 8020b1e:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 8020b22:	881b      	ldrh	r3, [r3, #0]
 8020b24:	9307      	str	r3, [sp, #28]
 8020b26:	682b      	ldr	r3, [r5, #0]
 8020b28:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 8020c04 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8020b2c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8020b2e:	4628      	mov	r0, r5
 8020b30:	4798      	blx	r3
 8020b32:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 8020b36:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8020b3a:	4681      	mov	r9, r0
 8020b3c:	fb1a 3305 	smlabb	r3, sl, r5, r3
 8020b40:	f8db 0000 	ldr.w	r0, [fp]
 8020b44:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8020b46:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8020b4a:	6803      	ldr	r3, [r0, #0]
 8020b4c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8020b4e:	4798      	blx	r3
 8020b50:	4607      	mov	r7, r0
 8020b52:	f8db 0000 	ldr.w	r0, [fp]
 8020b56:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8020b5a:	6803      	ldr	r3, [r0, #0]
 8020b5c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8020b60:	9109      	str	r1, [sp, #36]	; 0x24
 8020b62:	9208      	str	r2, [sp, #32]
 8020b64:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8020b66:	4798      	blx	r3
 8020b68:	f010 0f01 	tst.w	r0, #1
 8020b6c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8020b70:	d012      	beq.n	8020b98 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 8020b72:	f8db 0000 	ldr.w	r0, [fp]
 8020b76:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 8020b7a:	6803      	ldr	r3, [r0, #0]
 8020b7c:	9200      	str	r2, [sp, #0]
 8020b7e:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8020b80:	e898 0006 	ldmia.w	r8, {r1, r2}
 8020b84:	462b      	mov	r3, r5
 8020b86:	47b0      	blx	r6
 8020b88:	9b03      	ldr	r3, [sp, #12]
 8020b8a:	8023      	strh	r3, [r4, #0]
 8020b8c:	9b04      	ldr	r3, [sp, #16]
 8020b8e:	8063      	strh	r3, [r4, #2]
 8020b90:	9b05      	ldr	r3, [sp, #20]
 8020b92:	80a3      	strh	r3, [r4, #4]
 8020b94:	9b06      	ldr	r3, [sp, #24]
 8020b96:	e78b      	b.n	8020ab0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 8020b98:	fb09 f202 	mul.w	r2, r9, r2
 8020b9c:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8020ba0:	440f      	add	r7, r1
 8020ba2:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 8020ba6:	b166      	cbz	r6, 8020bc2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8020ba8:	9a07      	ldr	r2, [sp, #28]
 8020baa:	4592      	cmp	sl, r2
 8020bac:	d109      	bne.n	8020bc2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8020bae:	f8db 0000 	ldr.w	r0, [fp]
 8020bb2:	6802      	ldr	r2, [r0, #0]
 8020bb4:	fb09 f303 	mul.w	r3, r9, r3
 8020bb8:	6b56      	ldr	r6, [r2, #52]	; 0x34
 8020bba:	4629      	mov	r1, r5
 8020bbc:	463a      	mov	r2, r7
 8020bbe:	47b0      	blx	r6
 8020bc0:	e7e2      	b.n	8020b88 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8020bc2:	fb0a f303 	mul.w	r3, sl, r3
 8020bc6:	f8df b03c 	ldr.w	fp, [pc, #60]	; 8020c04 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8020bca:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 8020bce:	ea4f 064a 	mov.w	r6, sl, lsl #1
 8020bd2:	4545      	cmp	r5, r8
 8020bd4:	d2d8      	bcs.n	8020b88 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8020bd6:	f8db 0000 	ldr.w	r0, [fp]
 8020bda:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8020bde:	6802      	ldr	r2, [r0, #0]
 8020be0:	4629      	mov	r1, r5
 8020be2:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 8020be6:	005b      	lsls	r3, r3, #1
 8020be8:	463a      	mov	r2, r7
 8020bea:	47d0      	blx	sl
 8020bec:	444f      	add	r7, r9
 8020bee:	4435      	add	r5, r6
 8020bf0:	e7ef      	b.n	8020bd2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 8020bf2:	bf00      	nop
 8020bf4:	20002240 	.word	0x20002240
 8020bf8:	20002242 	.word	0x20002242
 8020bfc:	20002244 	.word	0x20002244
 8020c00:	20002246 	.word	0x20002246
 8020c04:	2000224c 	.word	0x2000224c

08020c08 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8020c08:	b5f0      	push	{r4, r5, r6, r7, lr}
 8020c0a:	4606      	mov	r6, r0
 8020c0c:	b087      	sub	sp, #28
 8020c0e:	460c      	mov	r4, r1
 8020c10:	4617      	mov	r7, r2
 8020c12:	461d      	mov	r5, r3
 8020c14:	b333      	cbz	r3, 8020c64 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8020c16:	4608      	mov	r0, r1
 8020c18:	f7f2 fb8f 	bl	801333a <_ZNK8touchgfx4Rect7isEmptyEv>
 8020c1c:	bb10      	cbnz	r0, 8020c64 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8020c1e:	6820      	ldr	r0, [r4, #0]
 8020c20:	6861      	ldr	r1, [r4, #4]
 8020c22:	4c1c      	ldr	r4, [pc, #112]	; (8020c94 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 8020c24:	ab04      	add	r3, sp, #16
 8020c26:	c303      	stmia	r3!, {r0, r1}
 8020c28:	a804      	add	r0, sp, #16
 8020c2a:	f7f8 f993 	bl	8018f54 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020c2e:	6820      	ldr	r0, [r4, #0]
 8020c30:	6803      	ldr	r3, [r0, #0]
 8020c32:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8020c34:	4798      	blx	r3
 8020c36:	2dff      	cmp	r5, #255	; 0xff
 8020c38:	d016      	beq.n	8020c68 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 8020c3a:	f010 0f08 	tst.w	r0, #8
 8020c3e:	6820      	ldr	r0, [r4, #0]
 8020c40:	d015      	beq.n	8020c6e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 8020c42:	2400      	movs	r4, #0
 8020c44:	6801      	ldr	r1, [r0, #0]
 8020c46:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8020c4a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8020c4e:	e9cd 5402 	strd	r5, r4, [sp, #8]
 8020c52:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 8020c56:	9401      	str	r4, [sp, #4]
 8020c58:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8020c5c:	9400      	str	r4, [sp, #0]
 8020c5e:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 8020c60:	4639      	mov	r1, r7
 8020c62:	47a0      	blx	r4
 8020c64:	b007      	add	sp, #28
 8020c66:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8020c68:	f010 0f02 	tst.w	r0, #2
 8020c6c:	e7e7      	b.n	8020c3e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8020c6e:	6803      	ldr	r3, [r0, #0]
 8020c70:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020c72:	4798      	blx	r3
 8020c74:	4b08      	ldr	r3, [pc, #32]	; (8020c98 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 8020c76:	881a      	ldrh	r2, [r3, #0]
 8020c78:	6833      	ldr	r3, [r6, #0]
 8020c7a:	e9cd 7500 	strd	r7, r5, [sp]
 8020c7e:	4601      	mov	r1, r0
 8020c80:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8020c82:	4630      	mov	r0, r6
 8020c84:	ab04      	add	r3, sp, #16
 8020c86:	47a8      	blx	r5
 8020c88:	6820      	ldr	r0, [r4, #0]
 8020c8a:	6803      	ldr	r3, [r0, #0]
 8020c8c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020c8e:	4798      	blx	r3
 8020c90:	e7e8      	b.n	8020c64 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8020c92:	bf00      	nop
 8020c94:	2000224c 	.word	0x2000224c
 8020c98:	20002246 	.word	0x20002246

08020c9c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8020c9c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020ca0:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 8020ca4:	9e08      	ldr	r6, [sp, #32]
 8020ca6:	4688      	mov	r8, r1
 8020ca8:	4614      	mov	r4, r2
 8020caa:	461d      	mov	r5, r3
 8020cac:	2f00      	cmp	r7, #0
 8020cae:	f000 80a9 	beq.w	8020e04 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8020cb2:	4618      	mov	r0, r3
 8020cb4:	f7f2 fb41 	bl	801333a <_ZNK8touchgfx4Rect7isEmptyEv>
 8020cb8:	2800      	cmp	r0, #0
 8020cba:	f040 80a3 	bne.w	8020e04 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8020cbe:	f9b5 1000 	ldrsh.w	r1, [r5]
 8020cc2:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8020cc6:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8020cca:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8020cce:	fb04 1303 	mla	r3, r4, r3, r1
 8020cd2:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8020cd6:	4365      	muls	r5, r4
 8020cd8:	2fff      	cmp	r7, #255	; 0xff
 8020cda:	eba4 0200 	sub.w	r2, r4, r0
 8020cde:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8020ce2:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8020ce6:	d04a      	beq.n	8020d7e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 8020ce8:	b2bc      	uxth	r4, r7
 8020cea:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 8020cee:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8020cf2:	fa5f f788 	uxtb.w	r7, r8
 8020cf6:	b2f3      	uxtb	r3, r6
 8020cf8:	0040      	lsls	r0, r0, #1
 8020cfa:	fb0e fe04 	mul.w	lr, lr, r4
 8020cfe:	4367      	muls	r7, r4
 8020d00:	4363      	muls	r3, r4
 8020d02:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8020d06:	fa1f fc8c 	uxth.w	ip, ip
 8020d0a:	42a9      	cmp	r1, r5
 8020d0c:	d27a      	bcs.n	8020e04 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8020d0e:	eb01 0900 	add.w	r9, r1, r0
 8020d12:	4549      	cmp	r1, r9
 8020d14:	d231      	bcs.n	8020d7a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 8020d16:	880a      	ldrh	r2, [r1, #0]
 8020d18:	1214      	asrs	r4, r2, #8
 8020d1a:	10d6      	asrs	r6, r2, #3
 8020d1c:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8020d20:	00d2      	lsls	r2, r2, #3
 8020d22:	b2d2      	uxtb	r2, r2
 8020d24:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8020d28:	fb14 f40c 	smulbb	r4, r4, ip
 8020d2c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8020d30:	4474      	add	r4, lr
 8020d32:	fb12 f20c 	smulbb	r2, r2, ip
 8020d36:	b2a4      	uxth	r4, r4
 8020d38:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8020d3c:	441a      	add	r2, r3
 8020d3e:	b292      	uxth	r2, r2
 8020d40:	f104 0a01 	add.w	sl, r4, #1
 8020d44:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8020d48:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8020d4c:	fb16 f60c 	smulbb	r6, r6, ip
 8020d50:	f102 0a01 	add.w	sl, r2, #1
 8020d54:	443e      	add	r6, r7
 8020d56:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 8020d5a:	b2b6      	uxth	r6, r6
 8020d5c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8020d60:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020d64:	4322      	orrs	r2, r4
 8020d66:	1c74      	adds	r4, r6, #1
 8020d68:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8020d6c:	0976      	lsrs	r6, r6, #5
 8020d6e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8020d72:	4332      	orrs	r2, r6
 8020d74:	f821 2b02 	strh.w	r2, [r1], #2
 8020d78:	e7cb      	b.n	8020d12 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 8020d7a:	4441      	add	r1, r8
 8020d7c:	e7c5      	b.n	8020d0a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 8020d7e:	4f22      	ldr	r7, [pc, #136]	; (8020e08 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 8020d80:	0973      	lsrs	r3, r6, #5
 8020d82:	ea08 0707 	and.w	r7, r8, r7
 8020d86:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020d8a:	433b      	orrs	r3, r7
 8020d8c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8020d90:	4333      	orrs	r3, r6
 8020d92:	07e7      	lsls	r7, r4, #31
 8020d94:	b29b      	uxth	r3, r3
 8020d96:	d50b      	bpl.n	8020db0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 8020d98:	0040      	lsls	r0, r0, #1
 8020d9a:	0052      	lsls	r2, r2, #1
 8020d9c:	42a9      	cmp	r1, r5
 8020d9e:	d231      	bcs.n	8020e04 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8020da0:	180c      	adds	r4, r1, r0
 8020da2:	42a1      	cmp	r1, r4
 8020da4:	d202      	bcs.n	8020dac <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 8020da6:	f821 3b02 	strh.w	r3, [r1], #2
 8020daa:	e7fa      	b.n	8020da2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 8020dac:	4411      	add	r1, r2
 8020dae:	e7f5      	b.n	8020d9c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 8020db0:	078e      	lsls	r6, r1, #30
 8020db2:	d008      	beq.n	8020dc6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8020db4:	0066      	lsls	r6, r4, #1
 8020db6:	460a      	mov	r2, r1
 8020db8:	42aa      	cmp	r2, r5
 8020dba:	d202      	bcs.n	8020dc2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 8020dbc:	8013      	strh	r3, [r2, #0]
 8020dbe:	4432      	add	r2, r6
 8020dc0:	e7fa      	b.n	8020db8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 8020dc2:	3102      	adds	r1, #2
 8020dc4:	3801      	subs	r0, #1
 8020dc6:	07c2      	lsls	r2, r0, #31
 8020dc8:	d50b      	bpl.n	8020de2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 8020dca:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 8020dce:	3a01      	subs	r2, #1
 8020dd0:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8020dd4:	0066      	lsls	r6, r4, #1
 8020dd6:	42aa      	cmp	r2, r5
 8020dd8:	d202      	bcs.n	8020de0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 8020dda:	8013      	strh	r3, [r2, #0]
 8020ddc:	4432      	add	r2, r6
 8020dde:	e7fa      	b.n	8020dd6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 8020de0:	3801      	subs	r0, #1
 8020de2:	b178      	cbz	r0, 8020e04 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8020de4:	1040      	asrs	r0, r0, #1
 8020de6:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8020dea:	0080      	lsls	r0, r0, #2
 8020dec:	0064      	lsls	r4, r4, #1
 8020dee:	42a9      	cmp	r1, r5
 8020df0:	d208      	bcs.n	8020e04 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8020df2:	180e      	adds	r6, r1, r0
 8020df4:	460a      	mov	r2, r1
 8020df6:	42b2      	cmp	r2, r6
 8020df8:	d202      	bcs.n	8020e00 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 8020dfa:	f842 3b04 	str.w	r3, [r2], #4
 8020dfe:	e7fa      	b.n	8020df6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 8020e00:	4421      	add	r1, r4
 8020e02:	e7f4      	b.n	8020dee <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 8020e04:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020e08:	00fff800 	.word	0x00fff800

08020e0c <_ZN8touchgfx8LCD16bppC1Ev>:
 8020e0c:	2200      	movs	r2, #0
 8020e0e:	4912      	ldr	r1, [pc, #72]	; (8020e58 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 8020e10:	6042      	str	r2, [r0, #4]
 8020e12:	6001      	str	r1, [r0, #0]
 8020e14:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8020e18:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8020e1c:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8020e20:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8020e24:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8020e28:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8020e2c:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8020e30:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8020e34:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 8020e38:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 8020e3c:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8020e40:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8020e44:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 8020e48:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 8020e4c:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 8020e50:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 8020e54:	4770      	bx	lr
 8020e56:	bf00      	nop
 8020e58:	0802fd78 	.word	0x0802fd78

08020e5c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8020e5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020e60:	460d      	mov	r5, r1
 8020e62:	b08d      	sub	sp, #52	; 0x34
 8020e64:	4604      	mov	r4, r0
 8020e66:	6808      	ldr	r0, [r1, #0]
 8020e68:	6849      	ldr	r1, [r1, #4]
 8020e6a:	4699      	mov	r9, r3
 8020e6c:	ab08      	add	r3, sp, #32
 8020e6e:	c303      	stmia	r3!, {r0, r1}
 8020e70:	6810      	ldr	r0, [r2, #0]
 8020e72:	6851      	ldr	r1, [r2, #4]
 8020e74:	ab0a      	add	r3, sp, #40	; 0x28
 8020e76:	c303      	stmia	r3!, {r0, r1}
 8020e78:	a808      	add	r0, sp, #32
 8020e7a:	f7f8 f86b 	bl	8018f54 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020e7e:	4629      	mov	r1, r5
 8020e80:	a80a      	add	r0, sp, #40	; 0x28
 8020e82:	f7f8 f8ab 	bl	8018fdc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020e86:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8020e8a:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8020e8e:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8020e92:	4d63      	ldr	r5, [pc, #396]	; (8021020 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8020e94:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8020e98:	6828      	ldr	r0, [r5, #0]
 8020e9a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8020e9e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8020ea2:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8020ea6:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8020eaa:	440a      	add	r2, r1
 8020eac:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8020eb0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8020eb4:	4413      	add	r3, r2
 8020eb6:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8020eba:	6803      	ldr	r3, [r0, #0]
 8020ebc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8020ebe:	4798      	blx	r3
 8020ec0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8020ec4:	d119      	bne.n	8020efa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8020ec6:	f010 0f20 	tst.w	r0, #32
 8020eca:	6828      	ldr	r0, [r5, #0]
 8020ecc:	d018      	beq.n	8020f00 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8020ece:	2500      	movs	r5, #0
 8020ed0:	6801      	ldr	r1, [r0, #0]
 8020ed2:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8020ed6:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8020eda:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8020ede:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 8020ee2:	9502      	str	r5, [sp, #8]
 8020ee4:	b2b6      	uxth	r6, r6
 8020ee6:	fa1f f588 	uxth.w	r5, r8
 8020eea:	9601      	str	r6, [sp, #4]
 8020eec:	9500      	str	r5, [sp, #0]
 8020eee:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 8020ef0:	4621      	mov	r1, r4
 8020ef2:	47a8      	blx	r5
 8020ef4:	b00d      	add	sp, #52	; 0x34
 8020ef6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020efa:	f010 0f40 	tst.w	r0, #64	; 0x40
 8020efe:	e7e4      	b.n	8020eca <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8020f00:	6803      	ldr	r3, [r0, #0]
 8020f02:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020f04:	4798      	blx	r3
 8020f06:	4947      	ldr	r1, [pc, #284]	; (8021024 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8020f08:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8020f0c:	880b      	ldrh	r3, [r1, #0]
 8020f0e:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 8020f12:	fb03 5202 	mla	r2, r3, r2, r5
 8020f16:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8020f1a:	4373      	muls	r3, r6
 8020f1c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8020f20:	9307      	str	r3, [sp, #28]
 8020f22:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8020f26:	9306      	str	r3, [sp, #24]
 8020f28:	468a      	mov	sl, r1
 8020f2a:	9b07      	ldr	r3, [sp, #28]
 8020f2c:	4298      	cmp	r0, r3
 8020f2e:	d270      	bcs.n	8021012 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8020f30:	9b06      	ldr	r3, [sp, #24]
 8020f32:	4621      	mov	r1, r4
 8020f34:	eb00 0b03 	add.w	fp, r0, r3
 8020f38:	4558      	cmp	r0, fp
 8020f3a:	d25d      	bcs.n	8020ff8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8020f3c:	f851 4b04 	ldr.w	r4, [r1], #4
 8020f40:	0e23      	lsrs	r3, r4, #24
 8020f42:	d014      	beq.n	8020f6e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8020f44:	2bff      	cmp	r3, #255	; 0xff
 8020f46:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 8020f4a:	d112      	bne.n	8020f72 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8020f4c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8020f50:	d10f      	bne.n	8020f72 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8020f52:	0963      	lsrs	r3, r4, #5
 8020f54:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8020f58:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020f5c:	f02c 0c07 	bic.w	ip, ip, #7
 8020f60:	ea43 0c0c 	orr.w	ip, r3, ip
 8020f64:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8020f68:	ea4c 0404 	orr.w	r4, ip, r4
 8020f6c:	8004      	strh	r4, [r0, #0]
 8020f6e:	3002      	adds	r0, #2
 8020f70:	e7e2      	b.n	8020f38 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 8020f72:	fb09 f303 	mul.w	r3, r9, r3
 8020f76:	8807      	ldrh	r7, [r0, #0]
 8020f78:	1c5a      	adds	r2, r3, #1
 8020f7a:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8020f7e:	1212      	asrs	r2, r2, #8
 8020f80:	123e      	asrs	r6, r7, #8
 8020f82:	b293      	uxth	r3, r2
 8020f84:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8020f88:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8020f8c:	43d2      	mvns	r2, r2
 8020f8e:	b2d2      	uxtb	r2, r2
 8020f90:	10fd      	asrs	r5, r7, #3
 8020f92:	fb1e fe03 	smulbb	lr, lr, r3
 8020f96:	00ff      	lsls	r7, r7, #3
 8020f98:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8020f9c:	fb06 e602 	mla	r6, r6, r2, lr
 8020fa0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8020fa4:	b2ff      	uxtb	r7, r7
 8020fa6:	fa5f fc8c 	uxtb.w	ip, ip
 8020faa:	b2e4      	uxtb	r4, r4
 8020fac:	b2b6      	uxth	r6, r6
 8020fae:	fb1c fc03 	smulbb	ip, ip, r3
 8020fb2:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8020fb6:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8020fba:	fb14 f403 	smulbb	r4, r4, r3
 8020fbe:	fb05 c502 	mla	r5, r5, r2, ip
 8020fc2:	f106 0e01 	add.w	lr, r6, #1
 8020fc6:	fb07 4702 	mla	r7, r7, r2, r4
 8020fca:	b2ad      	uxth	r5, r5
 8020fcc:	b2bf      	uxth	r7, r7
 8020fce:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8020fd2:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 8020fd6:	f105 0c01 	add.w	ip, r5, #1
 8020fda:	1c7e      	adds	r6, r7, #1
 8020fdc:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8020fe0:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8020fe4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8020fe8:	096d      	lsrs	r5, r5, #5
 8020fea:	ea46 060e 	orr.w	r6, r6, lr
 8020fee:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020ff2:	432e      	orrs	r6, r5
 8020ff4:	8006      	strh	r6, [r0, #0]
 8020ff6:	e7ba      	b.n	8020f6e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8020ff8:	f8ba 3000 	ldrh.w	r3, [sl]
 8020ffc:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 8021000:	eba3 0308 	sub.w	r3, r3, r8
 8021004:	eba4 0408 	sub.w	r4, r4, r8
 8021008:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 802100c:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8021010:	e78b      	b.n	8020f2a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8021012:	4b03      	ldr	r3, [pc, #12]	; (8021020 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8021014:	6818      	ldr	r0, [r3, #0]
 8021016:	6803      	ldr	r3, [r0, #0]
 8021018:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802101a:	4798      	blx	r3
 802101c:	e76a      	b.n	8020ef4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 802101e:	bf00      	nop
 8021020:	2000224c 	.word	0x2000224c
 8021024:	20002246 	.word	0x20002246

08021028 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8021028:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 802102c:	460c      	mov	r4, r1
 802102e:	b085      	sub	sp, #20
 8021030:	6810      	ldr	r0, [r2, #0]
 8021032:	6851      	ldr	r1, [r2, #4]
 8021034:	466d      	mov	r5, sp
 8021036:	c503      	stmia	r5!, {r0, r1}
 8021038:	6818      	ldr	r0, [r3, #0]
 802103a:	6859      	ldr	r1, [r3, #4]
 802103c:	4616      	mov	r6, r2
 802103e:	c503      	stmia	r5!, {r0, r1}
 8021040:	4668      	mov	r0, sp
 8021042:	f7f7 ff87 	bl	8018f54 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8021046:	4631      	mov	r1, r6
 8021048:	a802      	add	r0, sp, #8
 802104a:	f7f7 ffc7 	bl	8018fdc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802104e:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8021052:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8021056:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 802105a:	4d28      	ldr	r5, [pc, #160]	; (80210fc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 802105c:	4e28      	ldr	r6, [pc, #160]	; (8021100 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 802105e:	6828      	ldr	r0, [r5, #0]
 8021060:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8021064:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8021068:	fb11 2103 	smlabb	r1, r1, r3, r2
 802106c:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8021070:	f8bd 1000 	ldrh.w	r1, [sp]
 8021074:	440a      	add	r2, r1
 8021076:	f8ad 2008 	strh.w	r2, [sp, #8]
 802107a:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 802107e:	4413      	add	r3, r2
 8021080:	f8ad 300a 	strh.w	r3, [sp, #10]
 8021084:	6803      	ldr	r3, [r0, #0]
 8021086:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8021088:	4798      	blx	r3
 802108a:	8833      	ldrh	r3, [r6, #0]
 802108c:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8021090:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8021094:	f8df e06c 	ldr.w	lr, [pc, #108]	; 8021104 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8021098:	fb03 1202 	mla	r2, r3, r2, r1
 802109c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80210a0:	fb08 f303 	mul.w	r3, r8, r3
 80210a4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80210a8:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 80210ac:	4298      	cmp	r0, r3
 80210ae:	d21d      	bcs.n	80210ec <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 80210b0:	eb00 080c 	add.w	r8, r0, ip
 80210b4:	4540      	cmp	r0, r8
 80210b6:	d20f      	bcs.n	80210d8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 80210b8:	f854 1b04 	ldr.w	r1, [r4], #4
 80210bc:	ea4f 1951 	mov.w	r9, r1, lsr #5
 80210c0:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 80210c4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80210c8:	ea42 0209 	orr.w	r2, r2, r9
 80210cc:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80210d0:	430a      	orrs	r2, r1
 80210d2:	f820 2b02 	strh.w	r2, [r0], #2
 80210d6:	e7ed      	b.n	80210b4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 80210d8:	8832      	ldrh	r2, [r6, #0]
 80210da:	1bd2      	subs	r2, r2, r7
 80210dc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80210e0:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 80210e4:	1bd2      	subs	r2, r2, r7
 80210e6:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 80210ea:	e7df      	b.n	80210ac <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 80210ec:	6828      	ldr	r0, [r5, #0]
 80210ee:	6803      	ldr	r3, [r0, #0]
 80210f0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80210f2:	4798      	blx	r3
 80210f4:	b005      	add	sp, #20
 80210f6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80210fa:	bf00      	nop
 80210fc:	2000224c 	.word	0x2000224c
 8021100:	20002246 	.word	0x20002246
 8021104:	fffff800 	.word	0xfffff800

08021108 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8021108:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802110c:	460e      	mov	r6, r1
 802110e:	b08e      	sub	sp, #56	; 0x38
 8021110:	4604      	mov	r4, r0
 8021112:	6808      	ldr	r0, [r1, #0]
 8021114:	6849      	ldr	r1, [r1, #4]
 8021116:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 80212f0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 802111a:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 80212f4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 802111e:	461d      	mov	r5, r3
 8021120:	ab0a      	add	r3, sp, #40	; 0x28
 8021122:	c303      	stmia	r3!, {r0, r1}
 8021124:	6810      	ldr	r0, [r2, #0]
 8021126:	6851      	ldr	r1, [r2, #4]
 8021128:	ab0c      	add	r3, sp, #48	; 0x30
 802112a:	c303      	stmia	r3!, {r0, r1}
 802112c:	a80a      	add	r0, sp, #40	; 0x28
 802112e:	f7f7 ff11 	bl	8018f54 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8021132:	4631      	mov	r1, r6
 8021134:	a80c      	add	r0, sp, #48	; 0x30
 8021136:	f7f7 ff51 	bl	8018fdc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802113a:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 802113e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8021142:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8021146:	f8d8 0000 	ldr.w	r0, [r8]
 802114a:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 802114e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 8021152:	fb11 2103 	smlabb	r1, r1, r3, r2
 8021156:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802115a:	440c      	add	r4, r1
 802115c:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8021160:	440a      	add	r2, r1
 8021162:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8021166:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 802116a:	4413      	add	r3, r2
 802116c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8021170:	6803      	ldr	r3, [r0, #0]
 8021172:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8021174:	4798      	blx	r3
 8021176:	2dff      	cmp	r5, #255	; 0xff
 8021178:	d124      	bne.n	80211c4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 802117a:	f010 0f01 	tst.w	r0, #1
 802117e:	f8d8 0000 	ldr.w	r0, [r8]
 8021182:	d022      	beq.n	80211ca <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8021184:	2100      	movs	r1, #0
 8021186:	f8d0 c000 	ldr.w	ip, [r0]
 802118a:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 802118e:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8021192:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8021196:	f04f 0e01 	mov.w	lr, #1
 802119a:	f8cd e018 	str.w	lr, [sp, #24]
 802119e:	f8b9 e000 	ldrh.w	lr, [r9]
 80211a2:	9503      	str	r5, [sp, #12]
 80211a4:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 80211a8:	b2b6      	uxth	r6, r6
 80211aa:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80211ae:	9102      	str	r1, [sp, #8]
 80211b0:	b2bf      	uxth	r7, r7
 80211b2:	9601      	str	r6, [sp, #4]
 80211b4:	9700      	str	r7, [sp, #0]
 80211b6:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 80211ba:	4621      	mov	r1, r4
 80211bc:	47a8      	blx	r5
 80211be:	b00e      	add	sp, #56	; 0x38
 80211c0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80211c4:	f010 0f04 	tst.w	r0, #4
 80211c8:	e7d9      	b.n	802117e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 80211ca:	6803      	ldr	r3, [r0, #0]
 80211cc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80211ce:	4798      	blx	r3
 80211d0:	f8b9 3000 	ldrh.w	r3, [r9]
 80211d4:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 80211d8:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 80211dc:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 80211e0:	fb03 1202 	mla	r2, r3, r2, r1
 80211e4:	ebac 0c07 	sub.w	ip, ip, r7
 80211e8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80211ec:	435e      	muls	r6, r3
 80211ee:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 80211f2:	2dff      	cmp	r5, #255	; 0xff
 80211f4:	eba3 0707 	sub.w	r7, r3, r7
 80211f8:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80211fc:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8021200:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8021204:	d049      	beq.n	802129a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8021206:	43eb      	mvns	r3, r5
 8021208:	fa1f f985 	uxth.w	r9, r5
 802120c:	b2db      	uxtb	r3, r3
 802120e:	42b0      	cmp	r0, r6
 8021210:	d266      	bcs.n	80212e0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8021212:	eb00 0a0e 	add.w	sl, r0, lr
 8021216:	4550      	cmp	r0, sl
 8021218:	4621      	mov	r1, r4
 802121a:	f104 0403 	add.w	r4, r4, #3
 802121e:	d25b      	bcs.n	80212d8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8021220:	8802      	ldrh	r2, [r0, #0]
 8021222:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8021226:	ea4f 2822 	mov.w	r8, r2, asr #8
 802122a:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 802122e:	fb11 f109 	smulbb	r1, r1, r9
 8021232:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8021236:	10d5      	asrs	r5, r2, #3
 8021238:	fb08 1803 	mla	r8, r8, r3, r1
 802123c:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8021240:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8021244:	fb11 f109 	smulbb	r1, r1, r9
 8021248:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 802124c:	fb05 1503 	mla	r5, r5, r3, r1
 8021250:	00d2      	lsls	r2, r2, #3
 8021252:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8021256:	b2d2      	uxtb	r2, r2
 8021258:	fb11 f109 	smulbb	r1, r1, r9
 802125c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8021260:	fa1f f888 	uxth.w	r8, r8
 8021264:	fb02 1203 	mla	r2, r2, r3, r1
 8021268:	b292      	uxth	r2, r2
 802126a:	f108 0101 	add.w	r1, r8, #1
 802126e:	b2ad      	uxth	r5, r5
 8021270:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8021274:	1c51      	adds	r1, r2, #1
 8021276:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802127a:	1c69      	adds	r1, r5, #1
 802127c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8021280:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 8021284:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8021288:	096d      	lsrs	r5, r5, #5
 802128a:	ea42 0208 	orr.w	r2, r2, r8
 802128e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021292:	432a      	orrs	r2, r5
 8021294:	f820 2b02 	strh.w	r2, [r0], #2
 8021298:	e7bd      	b.n	8021216 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 802129a:	4a14      	ldr	r2, [pc, #80]	; (80212ec <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 802129c:	42b0      	cmp	r0, r6
 802129e:	d21f      	bcs.n	80212e0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 80212a0:	eb00 050e 	add.w	r5, r0, lr
 80212a4:	42a8      	cmp	r0, r5
 80212a6:	4621      	mov	r1, r4
 80212a8:	f104 0403 	add.w	r4, r4, #3
 80212ac:	d210      	bcs.n	80212d0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 80212ae:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 80212b2:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 80212b6:	00db      	lsls	r3, r3, #3
 80212b8:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 80212bc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80212c0:	430b      	orrs	r3, r1
 80212c2:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 80212c6:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 80212ca:	f820 3b02 	strh.w	r3, [r0], #2
 80212ce:	e7e9      	b.n	80212a4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 80212d0:	4438      	add	r0, r7
 80212d2:	eb01 040c 	add.w	r4, r1, ip
 80212d6:	e7e1      	b.n	802129c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 80212d8:	4438      	add	r0, r7
 80212da:	eb01 040c 	add.w	r4, r1, ip
 80212de:	e796      	b.n	802120e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 80212e0:	4b03      	ldr	r3, [pc, #12]	; (80212f0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 80212e2:	6818      	ldr	r0, [r3, #0]
 80212e4:	6803      	ldr	r3, [r0, #0]
 80212e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80212e8:	4798      	blx	r3
 80212ea:	e768      	b.n	80211be <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 80212ec:	fffff800 	.word	0xfffff800
 80212f0:	2000224c 	.word	0x2000224c
 80212f4:	20002246 	.word	0x20002246

080212f8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 80212f8:	b4f0      	push	{r4, r5, r6, r7}
 80212fa:	4616      	mov	r6, r2
 80212fc:	2e01      	cmp	r6, #1
 80212fe:	461c      	mov	r4, r3
 8021300:	460d      	mov	r5, r1
 8021302:	9a04      	ldr	r2, [sp, #16]
 8021304:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8021308:	f89d 7018 	ldrb.w	r7, [sp, #24]
 802130c:	d012      	beq.n	8021334 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 802130e:	d303      	bcc.n	8021318 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8021310:	2e02      	cmp	r6, #2
 8021312:	d00a      	beq.n	802132a <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8021314:	bcf0      	pop	{r4, r5, r6, r7}
 8021316:	4770      	bx	lr
 8021318:	6805      	ldr	r5, [r0, #0]
 802131a:	e9cd 3704 	strd	r3, r7, [sp, #16]
 802131e:	68ed      	ldr	r5, [r5, #12]
 8021320:	4613      	mov	r3, r2
 8021322:	46ac      	mov	ip, r5
 8021324:	4622      	mov	r2, r4
 8021326:	bcf0      	pop	{r4, r5, r6, r7}
 8021328:	4760      	bx	ip
 802132a:	4621      	mov	r1, r4
 802132c:	4628      	mov	r0, r5
 802132e:	bcf0      	pop	{r4, r5, r6, r7}
 8021330:	f7ff bd94 	b.w	8020e5c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8021334:	4621      	mov	r1, r4
 8021336:	4628      	mov	r0, r5
 8021338:	bcf0      	pop	{r4, r5, r6, r7}
 802133a:	f7ff bee5 	b.w	8021108 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08021340 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8021340:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021344:	4681      	mov	r9, r0
 8021346:	b093      	sub	sp, #76	; 0x4c
 8021348:	6810      	ldr	r0, [r2, #0]
 802134a:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 802134e:	4f6d      	ldr	r7, [pc, #436]	; (8021504 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8021350:	4688      	mov	r8, r1
 8021352:	6851      	ldr	r1, [r2, #4]
 8021354:	ac0e      	add	r4, sp, #56	; 0x38
 8021356:	c403      	stmia	r4!, {r0, r1}
 8021358:	6818      	ldr	r0, [r3, #0]
 802135a:	6859      	ldr	r1, [r3, #4]
 802135c:	ac10      	add	r4, sp, #64	; 0x40
 802135e:	4616      	mov	r6, r2
 8021360:	c403      	stmia	r4!, {r0, r1}
 8021362:	a80e      	add	r0, sp, #56	; 0x38
 8021364:	f7f7 fdf6 	bl	8018f54 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8021368:	4631      	mov	r1, r6
 802136a:	a810      	add	r0, sp, #64	; 0x40
 802136c:	f7f7 fe36 	bl	8018fdc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8021370:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8021374:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8021378:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 802137c:	4e62      	ldr	r6, [pc, #392]	; (8021508 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 802137e:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 8021382:	6830      	ldr	r0, [r6, #0]
 8021384:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 8021388:	fb11 2103 	smlabb	r1, r1, r3, r2
 802138c:	4489      	add	r9, r1
 802138e:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8021392:	440a      	add	r2, r1
 8021394:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8021398:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 802139c:	4413      	add	r3, r2
 802139e:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 80213a2:	6803      	ldr	r3, [r0, #0]
 80213a4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80213a6:	4798      	blx	r3
 80213a8:	f010 0f80 	tst.w	r0, #128	; 0x80
 80213ac:	6830      	ldr	r0, [r6, #0]
 80213ae:	d01d      	beq.n	80213ec <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 80213b0:	2200      	movs	r2, #0
 80213b2:	6801      	ldr	r1, [r0, #0]
 80213b4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80213b8:	e9cd 2208 	strd	r2, r2, [sp, #32]
 80213bc:	220b      	movs	r2, #11
 80213be:	9207      	str	r2, [sp, #28]
 80213c0:	883a      	ldrh	r2, [r7, #0]
 80213c2:	9206      	str	r2, [sp, #24]
 80213c4:	2201      	movs	r2, #1
 80213c6:	e9cd a204 	strd	sl, r2, [sp, #16]
 80213ca:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 80213ce:	9203      	str	r2, [sp, #12]
 80213d0:	b2a4      	uxth	r4, r4
 80213d2:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 80213d6:	9200      	str	r2, [sp, #0]
 80213d8:	b2ad      	uxth	r5, r5
 80213da:	9502      	str	r5, [sp, #8]
 80213dc:	9401      	str	r4, [sp, #4]
 80213de:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 80213e0:	4642      	mov	r2, r8
 80213e2:	4649      	mov	r1, r9
 80213e4:	47a0      	blx	r4
 80213e6:	b013      	add	sp, #76	; 0x4c
 80213e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80213ec:	6803      	ldr	r3, [r0, #0]
 80213ee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80213f0:	4798      	blx	r3
 80213f2:	883b      	ldrh	r3, [r7, #0]
 80213f4:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 80213f8:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 80213fc:	fb03 1202 	mla	r2, r3, r2, r1
 8021400:	435d      	muls	r5, r3
 8021402:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8021406:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 802140a:	920c      	str	r2, [sp, #48]	; 0x30
 802140c:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 8021410:	1b12      	subs	r2, r2, r4
 8021412:	920d      	str	r2, [sp, #52]	; 0x34
 8021414:	0062      	lsls	r2, r4, #1
 8021416:	1b1c      	subs	r4, r3, r4
 8021418:	0063      	lsls	r3, r4, #1
 802141a:	920a      	str	r2, [sp, #40]	; 0x28
 802141c:	930b      	str	r3, [sp, #44]	; 0x2c
 802141e:	f04f 0e04 	mov.w	lr, #4
 8021422:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021424:	4298      	cmp	r0, r3
 8021426:	d266      	bcs.n	80214f6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8021428:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802142a:	eb00 0b03 	add.w	fp, r0, r3
 802142e:	4558      	cmp	r0, fp
 8021430:	d25c      	bcs.n	80214ec <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8021432:	f819 3b01 	ldrb.w	r3, [r9], #1
 8021436:	fb1e e303 	smlabb	r3, lr, r3, lr
 802143a:	f858 2003 	ldr.w	r2, [r8, r3]
 802143e:	0e11      	lsrs	r1, r2, #24
 8021440:	d012      	beq.n	8021468 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8021442:	29ff      	cmp	r1, #255	; 0xff
 8021444:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8021448:	d110      	bne.n	802146c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 802144a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 802144e:	d10d      	bne.n	802146c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8021450:	0953      	lsrs	r3, r2, #5
 8021452:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8021456:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802145a:	f027 0707 	bic.w	r7, r7, #7
 802145e:	431f      	orrs	r7, r3
 8021460:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8021464:	433a      	orrs	r2, r7
 8021466:	8002      	strh	r2, [r0, #0]
 8021468:	3002      	adds	r0, #2
 802146a:	e7e0      	b.n	802142e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 802146c:	fb0a f101 	mul.w	r1, sl, r1
 8021470:	8806      	ldrh	r6, [r0, #0]
 8021472:	1c4b      	adds	r3, r1, #1
 8021474:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8021478:	1235      	asrs	r5, r6, #8
 802147a:	10f4      	asrs	r4, r6, #3
 802147c:	121b      	asrs	r3, r3, #8
 802147e:	00f6      	lsls	r6, r6, #3
 8021480:	b299      	uxth	r1, r3
 8021482:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8021486:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802148a:	b2f6      	uxtb	r6, r6
 802148c:	43db      	mvns	r3, r3
 802148e:	b2d2      	uxtb	r2, r2
 8021490:	b2db      	uxtb	r3, r3
 8021492:	fb1c fc01 	smulbb	ip, ip, r1
 8021496:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 802149a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 802149e:	fb12 f201 	smulbb	r2, r2, r1
 80214a2:	fb05 c503 	mla	r5, r5, r3, ip
 80214a6:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80214aa:	b2ff      	uxtb	r7, r7
 80214ac:	fb06 2203 	mla	r2, r6, r3, r2
 80214b0:	b2ad      	uxth	r5, r5
 80214b2:	fb17 f701 	smulbb	r7, r7, r1
 80214b6:	b292      	uxth	r2, r2
 80214b8:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 80214bc:	fb04 7403 	mla	r4, r4, r3, r7
 80214c0:	f105 0c01 	add.w	ip, r5, #1
 80214c4:	1c57      	adds	r7, r2, #1
 80214c6:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80214ca:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80214ce:	b2a4      	uxth	r4, r4
 80214d0:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80214d4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80214d8:	433d      	orrs	r5, r7
 80214da:	1c67      	adds	r7, r4, #1
 80214dc:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 80214e0:	0964      	lsrs	r4, r4, #5
 80214e2:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80214e6:	4325      	orrs	r5, r4
 80214e8:	8005      	strh	r5, [r0, #0]
 80214ea:	e7bd      	b.n	8021468 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 80214ec:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80214ee:	4418      	add	r0, r3
 80214f0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80214f2:	4499      	add	r9, r3
 80214f4:	e795      	b.n	8021422 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 80214f6:	4b04      	ldr	r3, [pc, #16]	; (8021508 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 80214f8:	6818      	ldr	r0, [r3, #0]
 80214fa:	6803      	ldr	r3, [r0, #0]
 80214fc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80214fe:	4798      	blx	r3
 8021500:	e771      	b.n	80213e6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8021502:	bf00      	nop
 8021504:	20002246 	.word	0x20002246
 8021508:	2000224c 	.word	0x2000224c

0802150c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 802150c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021510:	b087      	sub	sp, #28
 8021512:	4680      	mov	r8, r0
 8021514:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8021518:	460d      	mov	r5, r1
 802151a:	4614      	mov	r4, r2
 802151c:	2e00      	cmp	r6, #0
 802151e:	f000 80b9 	beq.w	8021694 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8021522:	6810      	ldr	r0, [r2, #0]
 8021524:	6851      	ldr	r1, [r2, #4]
 8021526:	af02      	add	r7, sp, #8
 8021528:	c703      	stmia	r7!, {r0, r1}
 802152a:	6818      	ldr	r0, [r3, #0]
 802152c:	6859      	ldr	r1, [r3, #4]
 802152e:	af04      	add	r7, sp, #16
 8021530:	c703      	stmia	r7!, {r0, r1}
 8021532:	a802      	add	r0, sp, #8
 8021534:	f7f7 fd0e 	bl	8018f54 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8021538:	4621      	mov	r1, r4
 802153a:	a804      	add	r0, sp, #16
 802153c:	f7f7 fd4e 	bl	8018fdc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8021540:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8021544:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8021548:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 802154c:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8021550:	fb14 2103 	smlabb	r1, r4, r3, r2
 8021554:	eb08 0401 	add.w	r4, r8, r1
 8021558:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 802155c:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8021560:	440a      	add	r2, r1
 8021562:	f8ad 2010 	strh.w	r2, [sp, #16]
 8021566:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 802156a:	4413      	add	r3, r2
 802156c:	f8ad 3012 	strh.w	r3, [sp, #18]
 8021570:	4b4a      	ldr	r3, [pc, #296]	; (802169c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8021572:	6818      	ldr	r0, [r3, #0]
 8021574:	6803      	ldr	r3, [r0, #0]
 8021576:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8021578:	4798      	blx	r3
 802157a:	4b49      	ldr	r3, [pc, #292]	; (80216a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 802157c:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8021580:	881a      	ldrh	r2, [r3, #0]
 8021582:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8021586:	2eff      	cmp	r6, #255	; 0xff
 8021588:	fb02 c101 	mla	r1, r2, r1, ip
 802158c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8021590:	fb02 f207 	mul.w	r2, r2, r7
 8021594:	f105 0104 	add.w	r1, r5, #4
 8021598:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 802159c:	461d      	mov	r5, r3
 802159e:	d05a      	beq.n	8021656 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 80215a0:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 80215a4:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80215a8:	b2b6      	uxth	r6, r6
 80215aa:	fa1f fe8e 	uxth.w	lr, lr
 80215ae:	9301      	str	r3, [sp, #4]
 80215b0:	4282      	cmp	r2, r0
 80215b2:	d96a      	bls.n	802168a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 80215b4:	eb00 0b0a 	add.w	fp, r0, sl
 80215b8:	4583      	cmp	fp, r0
 80215ba:	d940      	bls.n	802163e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 80215bc:	f814 3b01 	ldrb.w	r3, [r4], #1
 80215c0:	8805      	ldrh	r5, [r0, #0]
 80215c2:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80215c6:	122f      	asrs	r7, r5, #8
 80215c8:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80215cc:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80215d0:	fb17 f70e 	smulbb	r7, r7, lr
 80215d4:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80215d8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80215dc:	00ed      	lsls	r5, r5, #3
 80215de:	fb0c 7c06 	mla	ip, ip, r6, r7
 80215e2:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80215e6:	10df      	asrs	r7, r3, #3
 80215e8:	b2ed      	uxtb	r5, r5
 80215ea:	00db      	lsls	r3, r3, #3
 80215ec:	fa1f fc8c 	uxth.w	ip, ip
 80215f0:	fb19 f90e 	smulbb	r9, r9, lr
 80215f4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80215f8:	b2db      	uxtb	r3, r3
 80215fa:	fb15 f50e 	smulbb	r5, r5, lr
 80215fe:	fb07 9706 	mla	r7, r7, r6, r9
 8021602:	fb03 5306 	mla	r3, r3, r6, r5
 8021606:	f10c 0901 	add.w	r9, ip, #1
 802160a:	b29b      	uxth	r3, r3
 802160c:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8021610:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8021614:	f103 0c01 	add.w	ip, r3, #1
 8021618:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 802161c:	b2bf      	uxth	r7, r7
 802161e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8021622:	ea4c 0c09 	orr.w	ip, ip, r9
 8021626:	f107 0901 	add.w	r9, r7, #1
 802162a:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 802162e:	097f      	lsrs	r7, r7, #5
 8021630:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021634:	ea4c 0c07 	orr.w	ip, ip, r7
 8021638:	f820 cb02 	strh.w	ip, [r0], #2
 802163c:	e7bc      	b.n	80215b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 802163e:	9b01      	ldr	r3, [sp, #4]
 8021640:	881b      	ldrh	r3, [r3, #0]
 8021642:	eba3 0308 	sub.w	r3, r3, r8
 8021646:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 802164a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 802164e:	eba3 0308 	sub.w	r3, r3, r8
 8021652:	441c      	add	r4, r3
 8021654:	e7ac      	b.n	80215b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 8021656:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 802165a:	4282      	cmp	r2, r0
 802165c:	d915      	bls.n	802168a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 802165e:	eb00 060a 	add.w	r6, r0, sl
 8021662:	4286      	cmp	r6, r0
 8021664:	d906      	bls.n	8021674 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 8021666:	f814 3b01 	ldrb.w	r3, [r4], #1
 802166a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 802166e:	f820 3b02 	strh.w	r3, [r0], #2
 8021672:	e7f6      	b.n	8021662 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8021674:	882b      	ldrh	r3, [r5, #0]
 8021676:	eba3 0308 	sub.w	r3, r3, r8
 802167a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 802167e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8021682:	eba3 0308 	sub.w	r3, r3, r8
 8021686:	441c      	add	r4, r3
 8021688:	e7e7      	b.n	802165a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 802168a:	4b04      	ldr	r3, [pc, #16]	; (802169c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 802168c:	6818      	ldr	r0, [r3, #0]
 802168e:	6803      	ldr	r3, [r0, #0]
 8021690:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8021692:	4798      	blx	r3
 8021694:	b007      	add	sp, #28
 8021696:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802169a:	bf00      	nop
 802169c:	2000224c 	.word	0x2000224c
 80216a0:	20002246 	.word	0x20002246

080216a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 80216a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80216a8:	b091      	sub	sp, #68	; 0x44
 80216aa:	4680      	mov	r8, r0
 80216ac:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 80216b0:	460f      	mov	r7, r1
 80216b2:	4614      	mov	r4, r2
 80216b4:	2d00      	cmp	r5, #0
 80216b6:	d051      	beq.n	802175c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 80216b8:	6810      	ldr	r0, [r2, #0]
 80216ba:	6851      	ldr	r1, [r2, #4]
 80216bc:	f8df 9200 	ldr.w	r9, [pc, #512]	; 80218c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 80216c0:	ae0c      	add	r6, sp, #48	; 0x30
 80216c2:	c603      	stmia	r6!, {r0, r1}
 80216c4:	6818      	ldr	r0, [r3, #0]
 80216c6:	6859      	ldr	r1, [r3, #4]
 80216c8:	ae0e      	add	r6, sp, #56	; 0x38
 80216ca:	c603      	stmia	r6!, {r0, r1}
 80216cc:	a80c      	add	r0, sp, #48	; 0x30
 80216ce:	f7f7 fc41 	bl	8018f54 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80216d2:	4621      	mov	r1, r4
 80216d4:	a80e      	add	r0, sp, #56	; 0x38
 80216d6:	f7f7 fc81 	bl	8018fdc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80216da:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 80216de:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 80216e2:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 80216e6:	f8d9 0000 	ldr.w	r0, [r9]
 80216ea:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 80216ee:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 80216f2:	fb11 2103 	smlabb	r1, r1, r3, r2
 80216f6:	eb08 0401 	add.w	r4, r8, r1
 80216fa:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 80216fe:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 80218c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 8021702:	440a      	add	r2, r1
 8021704:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8021708:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 802170c:	4413      	add	r3, r2
 802170e:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8021712:	6803      	ldr	r3, [r0, #0]
 8021714:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8021716:	4798      	blx	r3
 8021718:	f010 0f80 	tst.w	r0, #128	; 0x80
 802171c:	f8d9 0000 	ldr.w	r0, [r9]
 8021720:	d01f      	beq.n	8021762 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 8021722:	2200      	movs	r2, #0
 8021724:	6801      	ldr	r1, [r0, #0]
 8021726:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 802172a:	e9cd 2208 	strd	r2, r2, [sp, #32]
 802172e:	220b      	movs	r2, #11
 8021730:	9207      	str	r2, [sp, #28]
 8021732:	f8b8 2000 	ldrh.w	r2, [r8]
 8021736:	9206      	str	r2, [sp, #24]
 8021738:	2201      	movs	r2, #1
 802173a:	e9cd 5204 	strd	r5, r2, [sp, #16]
 802173e:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 8021742:	9203      	str	r2, [sp, #12]
 8021744:	fa1f f28a 	uxth.w	r2, sl
 8021748:	9202      	str	r2, [sp, #8]
 802174a:	b2b6      	uxth	r6, r6
 802174c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8021750:	9200      	str	r2, [sp, #0]
 8021752:	9601      	str	r6, [sp, #4]
 8021754:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 8021756:	463a      	mov	r2, r7
 8021758:	4621      	mov	r1, r4
 802175a:	47a8      	blx	r5
 802175c:	b011      	add	sp, #68	; 0x44
 802175e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021762:	6803      	ldr	r3, [r0, #0]
 8021764:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8021766:	4798      	blx	r3
 8021768:	f8b8 2000 	ldrh.w	r2, [r8]
 802176c:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8021770:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 8021774:	2dff      	cmp	r5, #255	; 0xff
 8021776:	fb02 1303 	mla	r3, r2, r3, r1
 802177a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 802177e:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8021782:	fb0a fa02 	mul.w	sl, sl, r2
 8021786:	d062      	beq.n	802184e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8021788:	ea6f 0c05 	mvn.w	ip, r5
 802178c:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8021790:	930a      	str	r3, [sp, #40]	; 0x28
 8021792:	b2ad      	uxth	r5, r5
 8021794:	fa5f fc8c 	uxtb.w	ip, ip
 8021798:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 802179c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802179e:	4298      	cmp	r0, r3
 80217a0:	f080 8085 	bcs.w	80218ae <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 80217a4:	eb00 0b09 	add.w	fp, r0, r9
 80217a8:	4558      	cmp	r0, fp
 80217aa:	d246      	bcs.n	802183a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 80217ac:	f814 eb01 	ldrb.w	lr, [r4], #1
 80217b0:	2303      	movs	r3, #3
 80217b2:	2204      	movs	r2, #4
 80217b4:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 80217b8:	eb07 0a0e 	add.w	sl, r7, lr
 80217bc:	8803      	ldrh	r3, [r0, #0]
 80217be:	f89a 8002 	ldrb.w	r8, [sl, #2]
 80217c2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80217c6:	1219      	asrs	r1, r3, #8
 80217c8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80217cc:	fb18 f805 	smulbb	r8, r8, r5
 80217d0:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 80217d4:	10da      	asrs	r2, r3, #3
 80217d6:	fb01 810c 	mla	r1, r1, ip, r8
 80217da:	00db      	lsls	r3, r3, #3
 80217dc:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80217e0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80217e4:	b2db      	uxtb	r3, r3
 80217e6:	fb18 f805 	smulbb	r8, r8, r5
 80217ea:	fb1e fe05 	smulbb	lr, lr, r5
 80217ee:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 80217f2:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 80217f6:	b289      	uxth	r1, r1
 80217f8:	fb02 820c 	mla	r2, r2, ip, r8
 80217fc:	fb03 e30c 	mla	r3, r3, ip, lr
 8021800:	b292      	uxth	r2, r2
 8021802:	b29b      	uxth	r3, r3
 8021804:	f101 0801 	add.w	r8, r1, #1
 8021808:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 802180c:	f103 0e01 	add.w	lr, r3, #1
 8021810:	f102 0801 	add.w	r8, r2, #1
 8021814:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8021818:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 802181c:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8021820:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8021824:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8021828:	ea4e 0101 	orr.w	r1, lr, r1
 802182c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8021830:	ea41 0108 	orr.w	r1, r1, r8
 8021834:	f820 1b02 	strh.w	r1, [r0], #2
 8021838:	e7b6      	b.n	80217a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 802183a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802183c:	881b      	ldrh	r3, [r3, #0]
 802183e:	1b9b      	subs	r3, r3, r6
 8021840:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021844:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8021848:	1b9b      	subs	r3, r3, r6
 802184a:	441c      	add	r4, r3
 802184c:	e7a6      	b.n	802179c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 802184e:	491b      	ldr	r1, [pc, #108]	; (80218bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8021850:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8021854:	2203      	movs	r2, #3
 8021856:	2504      	movs	r5, #4
 8021858:	4550      	cmp	r0, sl
 802185a:	d228      	bcs.n	80218ae <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 802185c:	eb00 0c09 	add.w	ip, r0, r9
 8021860:	4560      	cmp	r0, ip
 8021862:	4623      	mov	r3, r4
 8021864:	d219      	bcs.n	802189a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 8021866:	f893 e000 	ldrb.w	lr, [r3]
 802186a:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 802186e:	eb07 0b0e 	add.w	fp, r7, lr
 8021872:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8021876:	f89b 3002 	ldrb.w	r3, [fp, #2]
 802187a:	f89b b001 	ldrb.w	fp, [fp, #1]
 802187e:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8021882:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 8021886:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 802188a:	ea43 030b 	orr.w	r3, r3, fp
 802188e:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 8021892:	3401      	adds	r4, #1
 8021894:	f820 3b02 	strh.w	r3, [r0], #2
 8021898:	e7e2      	b.n	8021860 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 802189a:	f8b8 3000 	ldrh.w	r3, [r8]
 802189e:	1b9b      	subs	r3, r3, r6
 80218a0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80218a4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80218a8:	1b9b      	subs	r3, r3, r6
 80218aa:	441c      	add	r4, r3
 80218ac:	e7d4      	b.n	8021858 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 80218ae:	4b04      	ldr	r3, [pc, #16]	; (80218c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 80218b0:	6818      	ldr	r0, [r3, #0]
 80218b2:	6803      	ldr	r3, [r0, #0]
 80218b4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80218b6:	4798      	blx	r3
 80218b8:	e750      	b.n	802175c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 80218ba:	bf00      	nop
 80218bc:	fffff800 	.word	0xfffff800
 80218c0:	2000224c 	.word	0x2000224c
 80218c4:	20002246 	.word	0x20002246

080218c8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 80218c8:	b4f0      	push	{r4, r5, r6, r7}
 80218ca:	460c      	mov	r4, r1
 80218cc:	4611      	mov	r1, r2
 80218ce:	f89d 5014 	ldrb.w	r5, [sp, #20]
 80218d2:	780f      	ldrb	r7, [r1, #0]
 80218d4:	784e      	ldrb	r6, [r1, #1]
 80218d6:	2f01      	cmp	r7, #1
 80218d8:	461a      	mov	r2, r3
 80218da:	9b04      	ldr	r3, [sp, #16]
 80218dc:	d036      	beq.n	802194c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 80218de:	d31e      	bcc.n	802191e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 80218e0:	2f02      	cmp	r7, #2
 80218e2:	d14a      	bne.n	802197a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 80218e4:	2e03      	cmp	r6, #3
 80218e6:	d848      	bhi.n	802197a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 80218e8:	e8df f006 	tbb	[pc, r6]
 80218ec:	16140702 	.word	0x16140702
 80218f0:	9504      	str	r5, [sp, #16]
 80218f2:	4620      	mov	r0, r4
 80218f4:	bcf0      	pop	{r4, r5, r6, r7}
 80218f6:	f7ff be09 	b.w	802150c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 80218fa:	6f80      	ldr	r0, [r0, #120]	; 0x78
 80218fc:	2800      	cmp	r0, #0
 80218fe:	d03c      	beq.n	802197a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8021900:	6806      	ldr	r6, [r0, #0]
 8021902:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8021906:	68b5      	ldr	r5, [r6, #8]
 8021908:	4613      	mov	r3, r2
 802190a:	46ac      	mov	ip, r5
 802190c:	460a      	mov	r2, r1
 802190e:	4621      	mov	r1, r4
 8021910:	bcf0      	pop	{r4, r5, r6, r7}
 8021912:	4760      	bx	ip
 8021914:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 8021916:	e7f1      	b.n	80218fc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 8021918:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 802191c:	e7ee      	b.n	80218fc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 802191e:	2e03      	cmp	r6, #3
 8021920:	d82b      	bhi.n	802197a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8021922:	e8df f006 	tbb	[pc, r6]
 8021926:	0702      	.short	0x0702
 8021928:	100e      	.short	0x100e
 802192a:	9504      	str	r5, [sp, #16]
 802192c:	4620      	mov	r0, r4
 802192e:	bcf0      	pop	{r4, r5, r6, r7}
 8021930:	f7ff bd06 	b.w	8021340 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8021934:	6f80      	ldr	r0, [r0, #120]	; 0x78
 8021936:	b300      	cbz	r0, 802197a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8021938:	6806      	ldr	r6, [r0, #0]
 802193a:	e9cd 3504 	strd	r3, r5, [sp, #16]
 802193e:	68f5      	ldr	r5, [r6, #12]
 8021940:	e7e2      	b.n	8021908 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8021942:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 8021944:	e7f7      	b.n	8021936 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 8021946:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 802194a:	e7f4      	b.n	8021936 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 802194c:	2e03      	cmp	r6, #3
 802194e:	d814      	bhi.n	802197a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8021950:	e8df f006 	tbb	[pc, r6]
 8021954:	100e0702 	.word	0x100e0702
 8021958:	9504      	str	r5, [sp, #16]
 802195a:	4620      	mov	r0, r4
 802195c:	bcf0      	pop	{r4, r5, r6, r7}
 802195e:	f7ff bea1 	b.w	80216a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8021962:	6f80      	ldr	r0, [r0, #120]	; 0x78
 8021964:	b148      	cbz	r0, 802197a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8021966:	6806      	ldr	r6, [r0, #0]
 8021968:	e9cd 3504 	strd	r3, r5, [sp, #16]
 802196c:	6935      	ldr	r5, [r6, #16]
 802196e:	e7cb      	b.n	8021908 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8021970:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 8021972:	e7f7      	b.n	8021964 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 8021974:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 8021978:	e7f4      	b.n	8021964 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 802197a:	bcf0      	pop	{r4, r5, r6, r7}
 802197c:	4770      	bx	lr
	...

08021980 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8021980:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021984:	4604      	mov	r4, r0
 8021986:	b087      	sub	sp, #28
 8021988:	6810      	ldr	r0, [r2, #0]
 802198a:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 802198e:	f8df 9238 	ldr.w	r9, [pc, #568]	; 8021bc8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8021992:	460e      	mov	r6, r1
 8021994:	6851      	ldr	r1, [r2, #4]
 8021996:	ad02      	add	r5, sp, #8
 8021998:	c503      	stmia	r5!, {r0, r1}
 802199a:	6818      	ldr	r0, [r3, #0]
 802199c:	6859      	ldr	r1, [r3, #4]
 802199e:	ad04      	add	r5, sp, #16
 80219a0:	4617      	mov	r7, r2
 80219a2:	c503      	stmia	r5!, {r0, r1}
 80219a4:	a802      	add	r0, sp, #8
 80219a6:	f7f7 fad5 	bl	8018f54 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80219aa:	4639      	mov	r1, r7
 80219ac:	a804      	add	r0, sp, #16
 80219ae:	f7f7 fb15 	bl	8018fdc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80219b2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80219b6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80219ba:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 80219be:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 80219c2:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 80219c6:	fb11 2103 	smlabb	r1, r1, r3, r2
 80219ca:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 80219ce:	440e      	add	r6, r1
 80219d0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80219d4:	440a      	add	r2, r1
 80219d6:	f8ad 2010 	strh.w	r2, [sp, #16]
 80219da:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80219de:	4413      	add	r3, r2
 80219e0:	f8ad 3012 	strh.w	r3, [sp, #18]
 80219e4:	4b77      	ldr	r3, [pc, #476]	; (8021bc4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80219e6:	6818      	ldr	r0, [r3, #0]
 80219e8:	6803      	ldr	r3, [r0, #0]
 80219ea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80219ec:	4798      	blx	r3
 80219ee:	f8b9 b000 	ldrh.w	fp, [r9]
 80219f2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80219f6:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80219fa:	fb0b 2303 	mla	r3, fp, r3, r2
 80219fe:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021a02:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8021a06:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8021a0a:	fb05 f50b 	mul.w	r5, r5, fp
 8021a0e:	9300      	str	r3, [sp, #0]
 8021a10:	d069      	beq.n	8021ae6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8021a12:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8021a16:	4558      	cmp	r0, fp
 8021a18:	f080 80cc 	bcs.w	8021bb4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8021a1c:	9b00      	ldr	r3, [sp, #0]
 8021a1e:	18c3      	adds	r3, r0, r3
 8021a20:	9301      	str	r3, [sp, #4]
 8021a22:	4631      	mov	r1, r6
 8021a24:	9b01      	ldr	r3, [sp, #4]
 8021a26:	4298      	cmp	r0, r3
 8021a28:	d24f      	bcs.n	8021aca <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 8021a2a:	f811 2b01 	ldrb.w	r2, [r1], #1
 8021a2e:	2a00      	cmp	r2, #0
 8021a30:	d048      	beq.n	8021ac4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8021a32:	fb0a f202 	mul.w	r2, sl, r2
 8021a36:	1c53      	adds	r3, r2, #1
 8021a38:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021a3c:	121b      	asrs	r3, r3, #8
 8021a3e:	d041      	beq.n	8021ac4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8021a40:	8802      	ldrh	r2, [r0, #0]
 8021a42:	f8b4 c000 	ldrh.w	ip, [r4]
 8021a46:	b29e      	uxth	r6, r3
 8021a48:	1215      	asrs	r5, r2, #8
 8021a4a:	43db      	mvns	r3, r3
 8021a4c:	b2db      	uxtb	r3, r3
 8021a4e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8021a52:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021a56:	fb15 f503 	smulbb	r5, r5, r3
 8021a5a:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8021a5e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8021a62:	00d2      	lsls	r2, r2, #3
 8021a64:	fb07 5706 	mla	r7, r7, r6, r5
 8021a68:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8021a6c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8021a70:	b2d2      	uxtb	r2, r2
 8021a72:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8021a76:	b2bf      	uxth	r7, r7
 8021a78:	fb1e fe03 	smulbb	lr, lr, r3
 8021a7c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8021a80:	fa5f fc8c 	uxtb.w	ip, ip
 8021a84:	fb12 f203 	smulbb	r2, r2, r3
 8021a88:	fb05 e506 	mla	r5, r5, r6, lr
 8021a8c:	fb0c 2c06 	mla	ip, ip, r6, r2
 8021a90:	f107 0e01 	add.w	lr, r7, #1
 8021a94:	fa1f fc8c 	uxth.w	ip, ip
 8021a98:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8021a9c:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 8021aa0:	f10c 0701 	add.w	r7, ip, #1
 8021aa4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8021aa8:	b2ad      	uxth	r5, r5
 8021aaa:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021aae:	ea47 070e 	orr.w	r7, r7, lr
 8021ab2:	f105 0e01 	add.w	lr, r5, #1
 8021ab6:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8021aba:	096d      	lsrs	r5, r5, #5
 8021abc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021ac0:	432f      	orrs	r7, r5
 8021ac2:	8007      	strh	r7, [r0, #0]
 8021ac4:	3002      	adds	r0, #2
 8021ac6:	3402      	adds	r4, #2
 8021ac8:	e7ac      	b.n	8021a24 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 8021aca:	f8b9 3000 	ldrh.w	r3, [r9]
 8021ace:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8021ad2:	eba3 0308 	sub.w	r3, r3, r8
 8021ad6:	eba6 0608 	sub.w	r6, r6, r8
 8021ada:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8021ade:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021ae2:	440e      	add	r6, r1
 8021ae4:	e797      	b.n	8021a16 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8021ae6:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8021aea:	42a8      	cmp	r0, r5
 8021aec:	d262      	bcs.n	8021bb4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8021aee:	9b00      	ldr	r3, [sp, #0]
 8021af0:	4631      	mov	r1, r6
 8021af2:	eb00 0b03 	add.w	fp, r0, r3
 8021af6:	4558      	cmp	r0, fp
 8021af8:	d24e      	bcs.n	8021b98 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 8021afa:	f811 3b01 	ldrb.w	r3, [r1], #1
 8021afe:	b12b      	cbz	r3, 8021b0c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8021b00:	2bff      	cmp	r3, #255	; 0xff
 8021b02:	f8b4 e000 	ldrh.w	lr, [r4]
 8021b06:	d104      	bne.n	8021b12 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8021b08:	f8a0 e000 	strh.w	lr, [r0]
 8021b0c:	3002      	adds	r0, #2
 8021b0e:	3402      	adds	r4, #2
 8021b10:	e7f1      	b.n	8021af6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8021b12:	8802      	ldrh	r2, [r0, #0]
 8021b14:	b29f      	uxth	r7, r3
 8021b16:	1216      	asrs	r6, r2, #8
 8021b18:	43db      	mvns	r3, r3
 8021b1a:	b2db      	uxtb	r3, r3
 8021b1c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8021b20:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8021b24:	fb16 f603 	smulbb	r6, r6, r3
 8021b28:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8021b2c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8021b30:	00d2      	lsls	r2, r2, #3
 8021b32:	fb0c 6c07 	mla	ip, ip, r7, r6
 8021b36:	b2d2      	uxtb	r2, r2
 8021b38:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8021b3c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8021b40:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8021b44:	fb1a fa03 	smulbb	sl, sl, r3
 8021b48:	fa1f fc8c 	uxth.w	ip, ip
 8021b4c:	fb12 f303 	smulbb	r3, r2, r3
 8021b50:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8021b54:	fa5f fe8e 	uxtb.w	lr, lr
 8021b58:	fb06 a607 	mla	r6, r6, r7, sl
 8021b5c:	f10c 0201 	add.w	r2, ip, #1
 8021b60:	fb0e 3307 	mla	r3, lr, r7, r3
 8021b64:	b2b6      	uxth	r6, r6
 8021b66:	b29b      	uxth	r3, r3
 8021b68:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8021b6c:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 8021b70:	f106 0a01 	add.w	sl, r6, #1
 8021b74:	f103 0c01 	add.w	ip, r3, #1
 8021b78:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8021b7c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8021b80:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8021b84:	0976      	lsrs	r6, r6, #5
 8021b86:	ea4c 0c02 	orr.w	ip, ip, r2
 8021b8a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8021b8e:	ea4c 0c06 	orr.w	ip, ip, r6
 8021b92:	f8a0 c000 	strh.w	ip, [r0]
 8021b96:	e7b9      	b.n	8021b0c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8021b98:	f8b9 3000 	ldrh.w	r3, [r9]
 8021b9c:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8021ba0:	eba3 0308 	sub.w	r3, r3, r8
 8021ba4:	eba6 0608 	sub.w	r6, r6, r8
 8021ba8:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8021bac:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021bb0:	440e      	add	r6, r1
 8021bb2:	e79a      	b.n	8021aea <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8021bb4:	4b03      	ldr	r3, [pc, #12]	; (8021bc4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8021bb6:	6818      	ldr	r0, [r3, #0]
 8021bb8:	6803      	ldr	r3, [r0, #0]
 8021bba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8021bbc:	4798      	blx	r3
 8021bbe:	b007      	add	sp, #28
 8021bc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021bc4:	2000224c 	.word	0x2000224c
 8021bc8:	20002246 	.word	0x20002246

08021bcc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8021bcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021bd0:	b089      	sub	sp, #36	; 0x24
 8021bd2:	4682      	mov	sl, r0
 8021bd4:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8021bd8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021bda:	460f      	mov	r7, r1
 8021bdc:	4691      	mov	r9, r2
 8021bde:	4698      	mov	r8, r3
 8021be0:	2e00      	cmp	r6, #0
 8021be2:	d03d      	beq.n	8021c60 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021be4:	4608      	mov	r0, r1
 8021be6:	f7fa fe61 	bl	801c8ac <_ZNK8touchgfx6Bitmap8getWidthEv>
 8021bea:	4605      	mov	r5, r0
 8021bec:	4638      	mov	r0, r7
 8021bee:	f7fa fe91 	bl	801c914 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8021bf2:	f8ad 000e 	strh.w	r0, [sp, #14]
 8021bf6:	4638      	mov	r0, r7
 8021bf8:	f8ad 9008 	strh.w	r9, [sp, #8]
 8021bfc:	f8ad 500c 	strh.w	r5, [sp, #12]
 8021c00:	f8ad 800a 	strh.w	r8, [sp, #10]
 8021c04:	f7fa ff3e 	bl	801ca84 <_ZNK8touchgfx6Bitmap7getDataEv>
 8021c08:	4605      	mov	r5, r0
 8021c0a:	4638      	mov	r0, r7
 8021c0c:	f7fa ff6a 	bl	801cae4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8021c10:	4681      	mov	r9, r0
 8021c12:	4638      	mov	r0, r7
 8021c14:	f7fa ffba 	bl	801cb8c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8021c18:	280b      	cmp	r0, #11
 8021c1a:	d821      	bhi.n	8021c60 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021c1c:	e8df f000 	tbb	[pc, r0]
 8021c20:	2006aebe 	.word	0x2006aebe
 8021c24:	20202020 	.word	0x20202020
 8021c28:	b5202020 	.word	0xb5202020
 8021c2c:	4bb0      	ldr	r3, [pc, #704]	; (8021ef0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 8021c2e:	6818      	ldr	r0, [r3, #0]
 8021c30:	6803      	ldr	r3, [r0, #0]
 8021c32:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8021c34:	4798      	blx	r3
 8021c36:	2eff      	cmp	r6, #255	; 0xff
 8021c38:	d101      	bne.n	8021c3e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 8021c3a:	0683      	lsls	r3, r0, #26
 8021c3c:	d506      	bpl.n	8021c4c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 8021c3e:	4633      	mov	r3, r6
 8021c40:	4622      	mov	r2, r4
 8021c42:	a902      	add	r1, sp, #8
 8021c44:	4628      	mov	r0, r5
 8021c46:	f7ff f909 	bl	8020e5c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8021c4a:	e009      	b.n	8021c60 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021c4c:	4638      	mov	r0, r7
 8021c4e:	f7fa fee1 	bl	801ca14 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8021c52:	b940      	cbnz	r0, 8021c66 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 8021c54:	4623      	mov	r3, r4
 8021c56:	aa02      	add	r2, sp, #8
 8021c58:	4629      	mov	r1, r5
 8021c5a:	4650      	mov	r0, sl
 8021c5c:	f7ff f9e4 	bl	8021028 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8021c60:	b009      	add	sp, #36	; 0x24
 8021c62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021c66:	f10d 0818 	add.w	r8, sp, #24
 8021c6a:	4639      	mov	r1, r7
 8021c6c:	4640      	mov	r0, r8
 8021c6e:	f7fa fe85 	bl	801c97c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8021c72:	e898 0003 	ldmia.w	r8, {r0, r1}
 8021c76:	af04      	add	r7, sp, #16
 8021c78:	e887 0003 	stmia.w	r7, {r0, r1}
 8021c7c:	4638      	mov	r0, r7
 8021c7e:	4621      	mov	r1, r4
 8021c80:	f7f1 fb18 	bl	80132b4 <_ZN8touchgfx4RectaNERKS0_>
 8021c84:	4638      	mov	r0, r7
 8021c86:	f7f1 fb58 	bl	801333a <_ZNK8touchgfx4Rect7isEmptyEv>
 8021c8a:	2800      	cmp	r0, #0
 8021c8c:	d1d7      	bne.n	8021c3e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 8021c8e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8021c92:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8021c96:	4293      	cmp	r3, r2
 8021c98:	dd12      	ble.n	8021cc0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 8021c9a:	1a9b      	subs	r3, r3, r2
 8021c9c:	f9b4 0000 	ldrsh.w	r0, [r4]
 8021ca0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8021ca4:	f8ad 0018 	strh.w	r0, [sp, #24]
 8021ca8:	f8ad 201a 	strh.w	r2, [sp, #26]
 8021cac:	f8ad 101c 	strh.w	r1, [sp, #28]
 8021cb0:	f8ad 301e 	strh.w	r3, [sp, #30]
 8021cb4:	4642      	mov	r2, r8
 8021cb6:	4633      	mov	r3, r6
 8021cb8:	a902      	add	r1, sp, #8
 8021cba:	4628      	mov	r0, r5
 8021cbc:	f7ff f8ce 	bl	8020e5c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8021cc0:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8021cc4:	f9b4 2000 	ldrsh.w	r2, [r4]
 8021cc8:	4293      	cmp	r3, r2
 8021cca:	dd12      	ble.n	8021cf2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 8021ccc:	1a9b      	subs	r3, r3, r2
 8021cce:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8021cd2:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8021cd6:	f8ad 2018 	strh.w	r2, [sp, #24]
 8021cda:	f8ad 001a 	strh.w	r0, [sp, #26]
 8021cde:	f8ad 301c 	strh.w	r3, [sp, #28]
 8021ce2:	f8ad 101e 	strh.w	r1, [sp, #30]
 8021ce6:	23ff      	movs	r3, #255	; 0xff
 8021ce8:	4642      	mov	r2, r8
 8021cea:	a902      	add	r1, sp, #8
 8021cec:	4628      	mov	r0, r5
 8021cee:	f7ff f8b5 	bl	8020e5c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8021cf2:	463b      	mov	r3, r7
 8021cf4:	aa02      	add	r2, sp, #8
 8021cf6:	4629      	mov	r1, r5
 8021cf8:	4650      	mov	r0, sl
 8021cfa:	f7ff f995 	bl	8021028 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8021cfe:	88a2      	ldrh	r2, [r4, #4]
 8021d00:	8823      	ldrh	r3, [r4, #0]
 8021d02:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8021d06:	4413      	add	r3, r2
 8021d08:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8021d0c:	440a      	add	r2, r1
 8021d0e:	b29b      	uxth	r3, r3
 8021d10:	b292      	uxth	r2, r2
 8021d12:	b211      	sxth	r1, r2
 8021d14:	b218      	sxth	r0, r3
 8021d16:	4288      	cmp	r0, r1
 8021d18:	dd12      	ble.n	8021d40 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 8021d1a:	1a9b      	subs	r3, r3, r2
 8021d1c:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8021d20:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8021d24:	f8ad 1018 	strh.w	r1, [sp, #24]
 8021d28:	f8ad 301c 	strh.w	r3, [sp, #28]
 8021d2c:	f8ad 001e 	strh.w	r0, [sp, #30]
 8021d30:	23ff      	movs	r3, #255	; 0xff
 8021d32:	4642      	mov	r2, r8
 8021d34:	a902      	add	r1, sp, #8
 8021d36:	4628      	mov	r0, r5
 8021d38:	f8ad 601a 	strh.w	r6, [sp, #26]
 8021d3c:	f7ff f88e 	bl	8020e5c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8021d40:	88e2      	ldrh	r2, [r4, #6]
 8021d42:	8863      	ldrh	r3, [r4, #2]
 8021d44:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8021d48:	4413      	add	r3, r2
 8021d4a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8021d4e:	440a      	add	r2, r1
 8021d50:	b29b      	uxth	r3, r3
 8021d52:	b292      	uxth	r2, r2
 8021d54:	b211      	sxth	r1, r2
 8021d56:	b218      	sxth	r0, r3
 8021d58:	4288      	cmp	r0, r1
 8021d5a:	dd81      	ble.n	8021c60 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021d5c:	1a9b      	subs	r3, r3, r2
 8021d5e:	f9b4 6000 	ldrsh.w	r6, [r4]
 8021d62:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8021d66:	f8ad 301e 	strh.w	r3, [sp, #30]
 8021d6a:	f8ad 6018 	strh.w	r6, [sp, #24]
 8021d6e:	f8ad 101a 	strh.w	r1, [sp, #26]
 8021d72:	f8ad 001c 	strh.w	r0, [sp, #28]
 8021d76:	23ff      	movs	r3, #255	; 0xff
 8021d78:	4642      	mov	r2, r8
 8021d7a:	e762      	b.n	8021c42 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 8021d7c:	4633      	mov	r3, r6
 8021d7e:	4622      	mov	r2, r4
 8021d80:	a902      	add	r1, sp, #8
 8021d82:	4628      	mov	r0, r5
 8021d84:	f7ff f9c0 	bl	8021108 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8021d88:	e76a      	b.n	8021c60 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021d8a:	e9cd 4600 	strd	r4, r6, [sp]
 8021d8e:	ab02      	add	r3, sp, #8
 8021d90:	464a      	mov	r2, r9
 8021d92:	4629      	mov	r1, r5
 8021d94:	4650      	mov	r0, sl
 8021d96:	f7ff fd97 	bl	80218c8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8021d9a:	e761      	b.n	8021c60 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021d9c:	4638      	mov	r0, r7
 8021d9e:	f7fa fe39 	bl	801ca14 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8021da2:	b950      	cbnz	r0, 8021dba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 8021da4:	e9cd 6000 	strd	r6, r0, [sp]
 8021da8:	f8da 3000 	ldr.w	r3, [sl]
 8021dac:	aa02      	add	r2, sp, #8
 8021dae:	68de      	ldr	r6, [r3, #12]
 8021db0:	4629      	mov	r1, r5
 8021db2:	4623      	mov	r3, r4
 8021db4:	4650      	mov	r0, sl
 8021db6:	47b0      	blx	r6
 8021db8:	e752      	b.n	8021c60 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021dba:	f10d 0818 	add.w	r8, sp, #24
 8021dbe:	4639      	mov	r1, r7
 8021dc0:	4640      	mov	r0, r8
 8021dc2:	f7fa fddb 	bl	801c97c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8021dc6:	e898 0003 	ldmia.w	r8, {r0, r1}
 8021dca:	af04      	add	r7, sp, #16
 8021dcc:	e887 0003 	stmia.w	r7, {r0, r1}
 8021dd0:	4638      	mov	r0, r7
 8021dd2:	4621      	mov	r1, r4
 8021dd4:	f7f1 fa6e 	bl	80132b4 <_ZN8touchgfx4RectaNERKS0_>
 8021dd8:	4638      	mov	r0, r7
 8021dda:	f7f1 faae 	bl	801333a <_ZNK8touchgfx4Rect7isEmptyEv>
 8021dde:	b138      	cbz	r0, 8021df0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 8021de0:	9600      	str	r6, [sp, #0]
 8021de2:	4623      	mov	r3, r4
 8021de4:	aa02      	add	r2, sp, #8
 8021de6:	4649      	mov	r1, r9
 8021de8:	4628      	mov	r0, r5
 8021dea:	f7ff fdc9 	bl	8021980 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8021dee:	e737      	b.n	8021c60 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021df0:	e9cd 6000 	strd	r6, r0, [sp]
 8021df4:	f8da 3000 	ldr.w	r3, [sl]
 8021df8:	aa02      	add	r2, sp, #8
 8021dfa:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8021dfe:	4629      	mov	r1, r5
 8021e00:	463b      	mov	r3, r7
 8021e02:	4650      	mov	r0, sl
 8021e04:	47d8      	blx	fp
 8021e06:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8021e0a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8021e0e:	4293      	cmp	r3, r2
 8021e10:	dd13      	ble.n	8021e3a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 8021e12:	f9b4 0000 	ldrsh.w	r0, [r4]
 8021e16:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8021e1a:	f8ad 0018 	strh.w	r0, [sp, #24]
 8021e1e:	1a9b      	subs	r3, r3, r2
 8021e20:	f8ad 201a 	strh.w	r2, [sp, #26]
 8021e24:	f8ad 101c 	strh.w	r1, [sp, #28]
 8021e28:	f8ad 301e 	strh.w	r3, [sp, #30]
 8021e2c:	9600      	str	r6, [sp, #0]
 8021e2e:	4643      	mov	r3, r8
 8021e30:	aa02      	add	r2, sp, #8
 8021e32:	4649      	mov	r1, r9
 8021e34:	4628      	mov	r0, r5
 8021e36:	f7ff fda3 	bl	8021980 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8021e3a:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8021e3e:	f9b4 2000 	ldrsh.w	r2, [r4]
 8021e42:	4293      	cmp	r3, r2
 8021e44:	dd13      	ble.n	8021e6e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 8021e46:	1a9b      	subs	r3, r3, r2
 8021e48:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8021e4c:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8021e50:	f8ad 2018 	strh.w	r2, [sp, #24]
 8021e54:	f8ad 001a 	strh.w	r0, [sp, #26]
 8021e58:	f8ad 301c 	strh.w	r3, [sp, #28]
 8021e5c:	f8ad 101e 	strh.w	r1, [sp, #30]
 8021e60:	9600      	str	r6, [sp, #0]
 8021e62:	4643      	mov	r3, r8
 8021e64:	aa02      	add	r2, sp, #8
 8021e66:	4649      	mov	r1, r9
 8021e68:	4628      	mov	r0, r5
 8021e6a:	f7ff fd89 	bl	8021980 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8021e6e:	88a2      	ldrh	r2, [r4, #4]
 8021e70:	8823      	ldrh	r3, [r4, #0]
 8021e72:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8021e76:	4413      	add	r3, r2
 8021e78:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8021e7c:	440a      	add	r2, r1
 8021e7e:	b29b      	uxth	r3, r3
 8021e80:	b292      	uxth	r2, r2
 8021e82:	b211      	sxth	r1, r2
 8021e84:	b218      	sxth	r0, r3
 8021e86:	4288      	cmp	r0, r1
 8021e88:	dd13      	ble.n	8021eb2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 8021e8a:	1a9b      	subs	r3, r3, r2
 8021e8c:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8021e90:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8021e94:	f8ad 1018 	strh.w	r1, [sp, #24]
 8021e98:	f8ad 301c 	strh.w	r3, [sp, #28]
 8021e9c:	f8ad 001e 	strh.w	r0, [sp, #30]
 8021ea0:	9600      	str	r6, [sp, #0]
 8021ea2:	4643      	mov	r3, r8
 8021ea4:	aa02      	add	r2, sp, #8
 8021ea6:	4649      	mov	r1, r9
 8021ea8:	4628      	mov	r0, r5
 8021eaa:	f8ad 701a 	strh.w	r7, [sp, #26]
 8021eae:	f7ff fd67 	bl	8021980 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8021eb2:	88e2      	ldrh	r2, [r4, #6]
 8021eb4:	8863      	ldrh	r3, [r4, #2]
 8021eb6:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8021eba:	4413      	add	r3, r2
 8021ebc:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8021ec0:	440a      	add	r2, r1
 8021ec2:	b29b      	uxth	r3, r3
 8021ec4:	b292      	uxth	r2, r2
 8021ec6:	b211      	sxth	r1, r2
 8021ec8:	b218      	sxth	r0, r3
 8021eca:	4288      	cmp	r0, r1
 8021ecc:	f77f aec8 	ble.w	8021c60 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021ed0:	f9b4 7000 	ldrsh.w	r7, [r4]
 8021ed4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8021ed8:	f8ad 7018 	strh.w	r7, [sp, #24]
 8021edc:	1a9b      	subs	r3, r3, r2
 8021ede:	f8ad 301e 	strh.w	r3, [sp, #30]
 8021ee2:	f8ad 101a 	strh.w	r1, [sp, #26]
 8021ee6:	f8ad 001c 	strh.w	r0, [sp, #28]
 8021eea:	9600      	str	r6, [sp, #0]
 8021eec:	4643      	mov	r3, r8
 8021eee:	e779      	b.n	8021de4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 8021ef0:	2000224c 	.word	0x2000224c

08021ef4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8021ef4:	b180      	cbz	r0, 8021f18 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 8021ef6:	2903      	cmp	r1, #3
 8021ef8:	d81c      	bhi.n	8021f34 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8021efa:	e8df f001 	tbb	[pc, r1]
 8021efe:	1d02      	.short	0x1d02
 8021f00:	1f08      	.short	0x1f08
 8021f02:	4b10      	ldr	r3, [pc, #64]	; (8021f44 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8021f04:	8818      	ldrh	r0, [r3, #0]
 8021f06:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8021f0a:	4240      	negs	r0, r0
 8021f0c:	4770      	bx	lr
 8021f0e:	4b0d      	ldr	r3, [pc, #52]	; (8021f44 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8021f10:	8818      	ldrh	r0, [r3, #0]
 8021f12:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8021f16:	4770      	bx	lr
 8021f18:	2903      	cmp	r1, #3
 8021f1a:	d80b      	bhi.n	8021f34 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8021f1c:	a301      	add	r3, pc, #4	; (adr r3, 8021f24 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 8021f1e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8021f22:	bf00      	nop
 8021f24:	08021f39 	.word	0x08021f39
 8021f28:	08021f0f 	.word	0x08021f0f
 8021f2c:	08021f3d 	.word	0x08021f3d
 8021f30:	08021f03 	.word	0x08021f03
 8021f34:	2000      	movs	r0, #0
 8021f36:	4770      	bx	lr
 8021f38:	2001      	movs	r0, #1
 8021f3a:	4770      	bx	lr
 8021f3c:	f04f 30ff 	mov.w	r0, #4294967295
 8021f40:	4770      	bx	lr
 8021f42:	bf00      	nop
 8021f44:	20002246 	.word	0x20002246

08021f48 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8021f48:	b180      	cbz	r0, 8021f6c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 8021f4a:	2903      	cmp	r1, #3
 8021f4c:	d81c      	bhi.n	8021f88 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8021f4e:	e8df f001 	tbb	[pc, r1]
 8021f52:	021d      	.short	0x021d
 8021f54:	071f      	.short	0x071f
 8021f56:	4b10      	ldr	r3, [pc, #64]	; (8021f98 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8021f58:	8818      	ldrh	r0, [r3, #0]
 8021f5a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8021f5e:	4770      	bx	lr
 8021f60:	4b0d      	ldr	r3, [pc, #52]	; (8021f98 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8021f62:	8818      	ldrh	r0, [r3, #0]
 8021f64:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8021f68:	4240      	negs	r0, r0
 8021f6a:	4770      	bx	lr
 8021f6c:	2903      	cmp	r1, #3
 8021f6e:	d80b      	bhi.n	8021f88 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8021f70:	a301      	add	r3, pc, #4	; (adr r3, 8021f78 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 8021f72:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8021f76:	bf00      	nop
 8021f78:	08021f57 	.word	0x08021f57
 8021f7c:	08021f91 	.word	0x08021f91
 8021f80:	08021f61 	.word	0x08021f61
 8021f84:	08021f8d 	.word	0x08021f8d
 8021f88:	2000      	movs	r0, #0
 8021f8a:	4770      	bx	lr
 8021f8c:	2001      	movs	r0, #1
 8021f8e:	4770      	bx	lr
 8021f90:	f04f 30ff 	mov.w	r0, #4294967295
 8021f94:	4770      	bx	lr
 8021f96:	bf00      	nop
 8021f98:	20002246 	.word	0x20002246

08021f9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8021f9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021fa0:	b099      	sub	sp, #100	; 0x64
 8021fa2:	910b      	str	r1, [sp, #44]	; 0x2c
 8021fa4:	a914      	add	r1, sp, #80	; 0x50
 8021fa6:	e881 000c 	stmia.w	r1, {r2, r3}
 8021faa:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 8021fae:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 8021fb2:	f891 900d 	ldrb.w	r9, [r1, #13]
 8021fb6:	9309      	str	r3, [sp, #36]	; 0x24
 8021fb8:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8021fbc:	9310      	str	r3, [sp, #64]	; 0x40
 8021fbe:	ea4f 1749 	mov.w	r7, r9, lsl #5
 8021fc2:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 8021fc6:	930c      	str	r3, [sp, #48]	; 0x30
 8021fc8:	f407 7380 	and.w	r3, r7, #256	; 0x100
 8021fcc:	798f      	ldrb	r7, [r1, #6]
 8021fce:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 8021fd2:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 8021fd6:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 8021fda:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 8021fde:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 8021fe2:	431f      	orrs	r7, r3
 8021fe4:	f000 8195 	beq.w	8022312 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021fe8:	ea4f 1909 	mov.w	r9, r9, lsl #4
 8021fec:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8021ff0:	f891 9007 	ldrb.w	r9, [r1, #7]
 8021ff4:	ea59 0903 	orrs.w	r9, r9, r3
 8021ff8:	f000 818b 	beq.w	8022312 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021ffc:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8022000:	b29b      	uxth	r3, r3
 8022002:	2d00      	cmp	r5, #0
 8022004:	f000 812e 	beq.w	8022264 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 8022008:	1aed      	subs	r5, r5, r3
 802200a:	b2ad      	uxth	r5, r5
 802200c:	042b      	lsls	r3, r5, #16
 802200e:	d502      	bpl.n	8022016 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8022010:	1b64      	subs	r4, r4, r5
 8022012:	b224      	sxth	r4, r4
 8022014:	2500      	movs	r5, #0
 8022016:	f9b2 1000 	ldrsh.w	r1, [r2]
 802201a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 802201e:	428c      	cmp	r4, r1
 8022020:	b28b      	uxth	r3, r1
 8022022:	bfbf      	itttt	lt
 8022024:	18ed      	addlt	r5, r5, r3
 8022026:	1b2c      	sublt	r4, r5, r4
 8022028:	b2a5      	uxthlt	r5, r4
 802202a:	460c      	movlt	r4, r1
 802202c:	8891      	ldrh	r1, [r2, #4]
 802202e:	440b      	add	r3, r1
 8022030:	b21b      	sxth	r3, r3
 8022032:	930f      	str	r3, [sp, #60]	; 0x3c
 8022034:	88d3      	ldrh	r3, [r2, #6]
 8022036:	8852      	ldrh	r2, [r2, #2]
 8022038:	4413      	add	r3, r2
 802203a:	b21b      	sxth	r3, r3
 802203c:	930d      	str	r3, [sp, #52]	; 0x34
 802203e:	4bbe      	ldr	r3, [pc, #760]	; (8022338 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8022040:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8022042:	f893 b000 	ldrb.w	fp, [r3]
 8022046:	f10b 3cff 	add.w	ip, fp, #4294967295
 802204a:	f1dc 0300 	rsbs	r3, ip, #0
 802204e:	eb43 030c 	adc.w	r3, r3, ip
 8022052:	930e      	str	r3, [sp, #56]	; 0x38
 8022054:	4621      	mov	r1, r4
 8022056:	4653      	mov	r3, sl
 8022058:	a814      	add	r0, sp, #80	; 0x50
 802205a:	f7f6 fdf0 	bl	8018c3e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 802205e:	4621      	mov	r1, r4
 8022060:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8022064:	4653      	mov	r3, sl
 8022066:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8022068:	a814      	add	r0, sp, #80	; 0x50
 802206a:	f7f6 fe05 	bl	8018c78 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 802206e:	a918      	add	r1, sp, #96	; 0x60
 8022070:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8022074:	a817      	add	r0, sp, #92	; 0x5c
 8022076:	f7f6 ff2b 	bl	8018ed0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 802207a:	f1ba 0f00 	cmp.w	sl, #0
 802207e:	f040 80f4 	bne.w	802226a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 8022082:	f1bb 0f01 	cmp.w	fp, #1
 8022086:	f040 80f8 	bne.w	802227a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 802208a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802208c:	2b00      	cmp	r3, #0
 802208e:	f040 8145 	bne.w	802231c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 8022092:	b2ba      	uxth	r2, r7
 8022094:	b905      	cbnz	r5, 8022098 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 8022096:	b16e      	cbz	r6, 80220b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 8022098:	fb06 5302 	mla	r3, r6, r2, r5
 802209c:	9828      	ldr	r0, [sp, #160]	; 0xa0
 802209e:	fb08 f303 	mul.w	r3, r8, r3
 80220a2:	4631      	mov	r1, r6
 80220a4:	f003 0607 	and.w	r6, r3, #7
 80220a8:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 80220ac:	9328      	str	r3, [sp, #160]	; 0xa0
 80220ae:	eba9 0301 	sub.w	r3, r9, r1
 80220b2:	930a      	str	r3, [sp, #40]	; 0x28
 80220b4:	4651      	mov	r1, sl
 80220b6:	980e      	ldr	r0, [sp, #56]	; 0x38
 80220b8:	f7ff ff1c 	bl	8021ef4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 80220bc:	4681      	mov	r9, r0
 80220be:	980e      	ldr	r0, [sp, #56]	; 0x38
 80220c0:	f7ff ff42 	bl	8021f48 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 80220c4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80220c6:	9909      	ldr	r1, [sp, #36]	; 0x24
 80220c8:	eba3 0a01 	sub.w	sl, r3, r1
 80220cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80220ce:	459a      	cmp	sl, r3
 80220d0:	bfa8      	it	ge
 80220d2:	469a      	movge	sl, r3
 80220d4:	f1ba 0f00 	cmp.w	sl, #0
 80220d8:	4683      	mov	fp, r0
 80220da:	f340 811a 	ble.w	8022312 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80220de:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80220e0:	1b64      	subs	r4, r4, r5
 80220e2:	1b1c      	subs	r4, r3, r4
 80220e4:	42bc      	cmp	r4, r7
 80220e6:	bfd4      	ite	le
 80220e8:	ebc5 0504 	rsble	r5, r5, r4
 80220ec:	ebc5 0507 	rsbgt	r5, r5, r7
 80220f0:	2d00      	cmp	r5, #0
 80220f2:	f340 810e 	ble.w	8022312 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80220f6:	1b52      	subs	r2, r2, r5
 80220f8:	fb08 f302 	mul.w	r3, r8, r2
 80220fc:	930f      	str	r3, [sp, #60]	; 0x3c
 80220fe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8022100:	2b00      	cmp	r3, #0
 8022102:	f040 8116 	bne.w	8022332 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8022106:	4b8d      	ldr	r3, [pc, #564]	; (802233c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8022108:	6818      	ldr	r0, [r3, #0]
 802210a:	6803      	ldr	r3, [r0, #0]
 802210c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802210e:	4798      	blx	r3
 8022110:	2301      	movs	r3, #1
 8022112:	fa03 f308 	lsl.w	r3, r3, r8
 8022116:	4a8a      	ldr	r2, [pc, #552]	; (8022340 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8022118:	3b01      	subs	r3, #1
 802211a:	b2db      	uxtb	r3, r3
 802211c:	8811      	ldrh	r1, [r2, #0]
 802211e:	930e      	str	r3, [sp, #56]	; 0x38
 8022120:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8022124:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8022128:	fb01 2303 	mla	r3, r1, r3, r2
 802212c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8022130:	930a      	str	r3, [sp, #40]	; 0x28
 8022132:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8022134:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8022138:	9313      	str	r3, [sp, #76]	; 0x4c
 802213a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802213c:	0a19      	lsrs	r1, r3, #8
 802213e:	b2cb      	uxtb	r3, r1
 8022140:	9312      	str	r3, [sp, #72]	; 0x48
 8022142:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8022144:	b2db      	uxtb	r3, r3
 8022146:	9311      	str	r3, [sp, #68]	; 0x44
 8022148:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802214a:	095a      	lsrs	r2, r3, #5
 802214c:	4b7d      	ldr	r3, [pc, #500]	; (8022344 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 802214e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022152:	400b      	ands	r3, r1
 8022154:	4313      	orrs	r3, r2
 8022156:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8022158:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802215c:	4313      	orrs	r3, r2
 802215e:	b29b      	uxth	r3, r3
 8022160:	9310      	str	r3, [sp, #64]	; 0x40
 8022162:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022164:	781a      	ldrb	r2, [r3, #0]
 8022166:	ea4f 0349 	mov.w	r3, r9, lsl #1
 802216a:	4132      	asrs	r2, r6
 802216c:	fb05 b919 	mls	r9, r5, r9, fp
 8022170:	fb03 fb05 	mul.w	fp, r3, r5
 8022174:	b2d2      	uxtb	r2, r2
 8022176:	930d      	str	r3, [sp, #52]	; 0x34
 8022178:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 802217c:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8022180:	f0c0 80f5 	bcc.w	802236e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 8022184:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 8022188:	46ae      	mov	lr, r5
 802218a:	f11e 3eff 	adds.w	lr, lr, #4294967295
 802218e:	f0c0 80dd 	bcc.w	802234c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 8022192:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022194:	4013      	ands	r3, r2
 8022196:	d055      	beq.n	8022244 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 8022198:	20ff      	movs	r0, #255	; 0xff
 802219a:	990e      	ldr	r1, [sp, #56]	; 0x38
 802219c:	fb90 f1f1 	sdiv	r1, r0, r1
 80221a0:	434b      	muls	r3, r1
 80221a2:	2bfe      	cmp	r3, #254	; 0xfe
 80221a4:	dd03      	ble.n	80221ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 80221a6:	990c      	ldr	r1, [sp, #48]	; 0x30
 80221a8:	4281      	cmp	r1, r0
 80221aa:	f000 80cd 	beq.w	8022348 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 80221ae:	990c      	ldr	r1, [sp, #48]	; 0x30
 80221b0:	f8bc 4000 	ldrh.w	r4, [ip]
 80221b4:	fb11 f303 	smulbb	r3, r1, r3
 80221b8:	b29b      	uxth	r3, r3
 80221ba:	1c59      	adds	r1, r3, #1
 80221bc:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80221c0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80221c4:	b29f      	uxth	r7, r3
 80221c6:	43db      	mvns	r3, r3
 80221c8:	b2db      	uxtb	r3, r3
 80221ca:	9309      	str	r3, [sp, #36]	; 0x24
 80221cc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80221ce:	1220      	asrs	r0, r4, #8
 80221d0:	fb13 f907 	smulbb	r9, r3, r7
 80221d4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80221d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80221da:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 80221de:	fb00 9003 	mla	r0, r0, r3, r9
 80221e2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80221e4:	10e1      	asrs	r1, r4, #3
 80221e6:	fb13 f907 	smulbb	r9, r3, r7
 80221ea:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80221ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80221f0:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 80221f4:	fb01 9103 	mla	r1, r1, r3, r9
 80221f8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80221fa:	00e4      	lsls	r4, r4, #3
 80221fc:	fb13 f707 	smulbb	r7, r3, r7
 8022200:	b2e4      	uxtb	r4, r4
 8022202:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022204:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8022208:	fb04 7403 	mla	r4, r4, r3, r7
 802220c:	b280      	uxth	r0, r0
 802220e:	b2a4      	uxth	r4, r4
 8022210:	1c43      	adds	r3, r0, #1
 8022212:	f104 0901 	add.w	r9, r4, #1
 8022216:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802221a:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 802221e:	b289      	uxth	r1, r1
 8022220:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8022224:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8022228:	ea49 0000 	orr.w	r0, r9, r0
 802222c:	f101 0901 	add.w	r9, r1, #1
 8022230:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8022234:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8022238:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 802223c:	ea40 0009 	orr.w	r0, r0, r9
 8022240:	f8ac 0000 	strh.w	r0, [ip]
 8022244:	4446      	add	r6, r8
 8022246:	b2b6      	uxth	r6, r6
 8022248:	2e07      	cmp	r6, #7
 802224a:	bf81      	itttt	hi
 802224c:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 802224e:	785a      	ldrbhi	r2, [r3, #1]
 8022250:	3301      	addhi	r3, #1
 8022252:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8022254:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8022256:	bf9a      	itte	ls
 8022258:	fa42 f208 	asrls.w	r2, r2, r8
 802225c:	b2d2      	uxtbls	r2, r2
 802225e:	2600      	movhi	r6, #0
 8022260:	449c      	add	ip, r3
 8022262:	e792      	b.n	802218a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 8022264:	441c      	add	r4, r3
 8022266:	b224      	sxth	r4, r4
 8022268:	e6d5      	b.n	8022016 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 802226a:	f1ba 0f01 	cmp.w	sl, #1
 802226e:	f47f af0c 	bne.w	802208a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8022272:	f1bb 0f01 	cmp.w	fp, #1
 8022276:	f47f af08 	bne.w	802208a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 802227a:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 802233c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 802227e:	f8db 0000 	ldr.w	r0, [fp]
 8022282:	6803      	ldr	r3, [r0, #0]
 8022284:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8022286:	4798      	blx	r3
 8022288:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 802228c:	465a      	mov	r2, fp
 802228e:	d006      	beq.n	802229e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8022290:	f1b8 0f04 	cmp.w	r8, #4
 8022294:	d140      	bne.n	8022318 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 8022296:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022298:	3300      	adds	r3, #0
 802229a:	bf18      	it	ne
 802229c:	2301      	movne	r3, #1
 802229e:	0580      	lsls	r0, r0, #22
 80222a0:	d56e      	bpl.n	8022380 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 80222a2:	f1b8 0f08 	cmp.w	r8, #8
 80222a6:	d16b      	bne.n	8022380 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 80222a8:	2b00      	cmp	r3, #0
 80222aa:	bf0c      	ite	eq
 80222ac:	f44f 7100 	moveq.w	r1, #512	; 0x200
 80222b0:	f44f 7180 	movne.w	r1, #256	; 0x100
 80222b4:	2d00      	cmp	r5, #0
 80222b6:	f47f aee8 	bne.w	802208a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80222ba:	2e00      	cmp	r6, #0
 80222bc:	f47f aee5 	bne.w	802208a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80222c0:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80222c2:	19e3      	adds	r3, r4, r7
 80222c4:	4283      	cmp	r3, r0
 80222c6:	f73f aee0 	bgt.w	802208a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80222ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80222cc:	980d      	ldr	r0, [sp, #52]	; 0x34
 80222ce:	444b      	add	r3, r9
 80222d0:	4283      	cmp	r3, r0
 80222d2:	f73f aeda 	bgt.w	802208a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80222d6:	6810      	ldr	r0, [r2, #0]
 80222d8:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 80222dc:	6804      	ldr	r4, [r0, #0]
 80222de:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 80222e2:	b2bf      	uxth	r7, r7
 80222e4:	f1b8 0f08 	cmp.w	r8, #8
 80222e8:	f04f 0500 	mov.w	r5, #0
 80222ec:	bf18      	it	ne
 80222ee:	3701      	addne	r7, #1
 80222f0:	e9cd 1505 	strd	r1, r5, [sp, #20]
 80222f4:	990c      	ldr	r1, [sp, #48]	; 0x30
 80222f6:	9104      	str	r1, [sp, #16]
 80222f8:	bf18      	it	ne
 80222fa:	f027 0701 	bicne.w	r7, r7, #1
 80222fe:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8022300:	bf18      	it	ne
 8022302:	b2bf      	uxthne	r7, r7
 8022304:	e9cd 7102 	strd	r7, r1, [sp, #8]
 8022308:	e9cd 7900 	strd	r7, r9, [sp]
 802230c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 802230e:	6d64      	ldr	r4, [r4, #84]	; 0x54
 8022310:	47a0      	blx	r4
 8022312:	b019      	add	sp, #100	; 0x64
 8022314:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022318:	2300      	movs	r3, #0
 802231a:	e7c0      	b.n	802229e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 802231c:	2208      	movs	r2, #8
 802231e:	fb92 f3f8 	sdiv	r3, r2, r8
 8022322:	1e5a      	subs	r2, r3, #1
 8022324:	443a      	add	r2, r7
 8022326:	fb92 f2f3 	sdiv	r2, r2, r3
 802232a:	fb12 f203 	smulbb	r2, r2, r3
 802232e:	b292      	uxth	r2, r2
 8022330:	e6b0      	b.n	8022094 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 8022332:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8022334:	e6ec      	b.n	8022110 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 8022336:	bf00      	nop
 8022338:	20002244 	.word	0x20002244
 802233c:	2000224c 	.word	0x2000224c
 8022340:	20002246 	.word	0x20002246
 8022344:	00fff800 	.word	0x00fff800
 8022348:	9810      	ldr	r0, [sp, #64]	; 0x40
 802234a:	e779      	b.n	8022240 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 802234c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802234e:	b153      	cbz	r3, 8022366 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 8022350:	441e      	add	r6, r3
 8022352:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022354:	b2b6      	uxth	r6, r6
 8022356:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 802235a:	f006 0607 	and.w	r6, r6, #7
 802235e:	781a      	ldrb	r2, [r3, #0]
 8022360:	9328      	str	r3, [sp, #160]	; 0xa0
 8022362:	4132      	asrs	r2, r6
 8022364:	b2d2      	uxtb	r2, r2
 8022366:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022368:	445b      	add	r3, fp
 802236a:	930a      	str	r3, [sp, #40]	; 0x28
 802236c:	e706      	b.n	802217c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 802236e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8022370:	2b00      	cmp	r3, #0
 8022372:	d1ce      	bne.n	8022312 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8022374:	4b05      	ldr	r3, [pc, #20]	; (802238c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 8022376:	6818      	ldr	r0, [r3, #0]
 8022378:	6803      	ldr	r3, [r0, #0]
 802237a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802237c:	4798      	blx	r3
 802237e:	e7c8      	b.n	8022312 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8022380:	2b00      	cmp	r3, #0
 8022382:	f43f ae82 	beq.w	802208a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8022386:	f44f 7180 	mov.w	r1, #256	; 0x100
 802238a:	e793      	b.n	80222b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 802238c:	2000224c 	.word	0x2000224c

08022390 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8022390:	b538      	push	{r3, r4, r5, lr}
 8022392:	4c15      	ldr	r4, [pc, #84]	; (80223e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8022394:	7823      	ldrb	r3, [r4, #0]
 8022396:	f3bf 8f5b 	dmb	ish
 802239a:	07da      	lsls	r2, r3, #31
 802239c:	4605      	mov	r5, r0
 802239e:	d40b      	bmi.n	80223b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 80223a0:	4620      	mov	r0, r4
 80223a2:	f008 f9e0 	bl	802a766 <__cxa_guard_acquire>
 80223a6:	b138      	cbz	r0, 80223b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 80223a8:	4620      	mov	r0, r4
 80223aa:	f008 f9e8 	bl	802a77e <__cxa_guard_release>
 80223ae:	4a0f      	ldr	r2, [pc, #60]	; (80223ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80223b0:	490f      	ldr	r1, [pc, #60]	; (80223f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 80223b2:	4810      	ldr	r0, [pc, #64]	; (80223f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80223b4:	f008 f9d0 	bl	802a758 <__aeabi_atexit>
 80223b8:	4c0f      	ldr	r4, [pc, #60]	; (80223f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 80223ba:	7823      	ldrb	r3, [r4, #0]
 80223bc:	f3bf 8f5b 	dmb	ish
 80223c0:	07db      	lsls	r3, r3, #31
 80223c2:	d40b      	bmi.n	80223dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80223c4:	4620      	mov	r0, r4
 80223c6:	f008 f9ce 	bl	802a766 <__cxa_guard_acquire>
 80223ca:	b138      	cbz	r0, 80223dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80223cc:	4620      	mov	r0, r4
 80223ce:	f008 f9d6 	bl	802a77e <__cxa_guard_release>
 80223d2:	4a06      	ldr	r2, [pc, #24]	; (80223ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80223d4:	4909      	ldr	r1, [pc, #36]	; (80223fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 80223d6:	480a      	ldr	r0, [pc, #40]	; (8022400 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80223d8:	f008 f9be 	bl	802a758 <__aeabi_atexit>
 80223dc:	4b05      	ldr	r3, [pc, #20]	; (80223f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80223de:	612b      	str	r3, [r5, #16]
 80223e0:	4b07      	ldr	r3, [pc, #28]	; (8022400 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80223e2:	616b      	str	r3, [r5, #20]
 80223e4:	bd38      	pop	{r3, r4, r5, pc}
 80223e6:	bf00      	nop
 80223e8:	2000232c 	.word	0x2000232c
 80223ec:	20000000 	.word	0x20000000
 80223f0:	0801f1a1 	.word	0x0801f1a1
 80223f4:	20000068 	.word	0x20000068
 80223f8:	20002330 	.word	0x20002330
 80223fc:	0801f19f 	.word	0x0801f19f
 8022400:	2000006c 	.word	0x2000006c

08022404 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8022404:	b538      	push	{r3, r4, r5, lr}
 8022406:	4c15      	ldr	r4, [pc, #84]	; (802245c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8022408:	7823      	ldrb	r3, [r4, #0]
 802240a:	f3bf 8f5b 	dmb	ish
 802240e:	07da      	lsls	r2, r3, #31
 8022410:	4605      	mov	r5, r0
 8022412:	d40b      	bmi.n	802242c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8022414:	4620      	mov	r0, r4
 8022416:	f008 f9a6 	bl	802a766 <__cxa_guard_acquire>
 802241a:	b138      	cbz	r0, 802242c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 802241c:	4620      	mov	r0, r4
 802241e:	f008 f9ae 	bl	802a77e <__cxa_guard_release>
 8022422:	4a0f      	ldr	r2, [pc, #60]	; (8022460 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8022424:	490f      	ldr	r1, [pc, #60]	; (8022464 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8022426:	4810      	ldr	r0, [pc, #64]	; (8022468 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8022428:	f008 f996 	bl	802a758 <__aeabi_atexit>
 802242c:	4c0f      	ldr	r4, [pc, #60]	; (802246c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 802242e:	7823      	ldrb	r3, [r4, #0]
 8022430:	f3bf 8f5b 	dmb	ish
 8022434:	07db      	lsls	r3, r3, #31
 8022436:	d40b      	bmi.n	8022450 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8022438:	4620      	mov	r0, r4
 802243a:	f008 f994 	bl	802a766 <__cxa_guard_acquire>
 802243e:	b138      	cbz	r0, 8022450 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8022440:	4620      	mov	r0, r4
 8022442:	f008 f99c 	bl	802a77e <__cxa_guard_release>
 8022446:	4a06      	ldr	r2, [pc, #24]	; (8022460 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8022448:	4909      	ldr	r1, [pc, #36]	; (8022470 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 802244a:	480a      	ldr	r0, [pc, #40]	; (8022474 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 802244c:	f008 f984 	bl	802a758 <__aeabi_atexit>
 8022450:	4b05      	ldr	r3, [pc, #20]	; (8022468 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8022452:	60ab      	str	r3, [r5, #8]
 8022454:	4b07      	ldr	r3, [pc, #28]	; (8022474 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8022456:	60eb      	str	r3, [r5, #12]
 8022458:	bd38      	pop	{r3, r4, r5, pc}
 802245a:	bf00      	nop
 802245c:	20002304 	.word	0x20002304
 8022460:	20000000 	.word	0x20000000
 8022464:	0801f1a5 	.word	0x0801f1a5
 8022468:	20000040 	.word	0x20000040
 802246c:	20002308 	.word	0x20002308
 8022470:	0801f1a3 	.word	0x0801f1a3
 8022474:	20000044 	.word	0x20000044

08022478 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8022478:	b510      	push	{r4, lr}
 802247a:	4604      	mov	r4, r0
 802247c:	f7ff ff88 	bl	8022390 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8022480:	4620      	mov	r0, r4
 8022482:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022486:	f7ff bfbd 	b.w	8022404 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0802248c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 802248c:	b538      	push	{r3, r4, r5, lr}
 802248e:	4c15      	ldr	r4, [pc, #84]	; (80224e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8022490:	7823      	ldrb	r3, [r4, #0]
 8022492:	f3bf 8f5b 	dmb	ish
 8022496:	07da      	lsls	r2, r3, #31
 8022498:	4605      	mov	r5, r0
 802249a:	d40b      	bmi.n	80224b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 802249c:	4620      	mov	r0, r4
 802249e:	f008 f962 	bl	802a766 <__cxa_guard_acquire>
 80224a2:	b138      	cbz	r0, 80224b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 80224a4:	4620      	mov	r0, r4
 80224a6:	f008 f96a 	bl	802a77e <__cxa_guard_release>
 80224aa:	4a0f      	ldr	r2, [pc, #60]	; (80224e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 80224ac:	490f      	ldr	r1, [pc, #60]	; (80224ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 80224ae:	4810      	ldr	r0, [pc, #64]	; (80224f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80224b0:	f008 f952 	bl	802a758 <__aeabi_atexit>
 80224b4:	4c0f      	ldr	r4, [pc, #60]	; (80224f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 80224b6:	7823      	ldrb	r3, [r4, #0]
 80224b8:	f3bf 8f5b 	dmb	ish
 80224bc:	07db      	lsls	r3, r3, #31
 80224be:	d40b      	bmi.n	80224d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80224c0:	4620      	mov	r0, r4
 80224c2:	f008 f950 	bl	802a766 <__cxa_guard_acquire>
 80224c6:	b138      	cbz	r0, 80224d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80224c8:	4620      	mov	r0, r4
 80224ca:	f008 f958 	bl	802a77e <__cxa_guard_release>
 80224ce:	4a06      	ldr	r2, [pc, #24]	; (80224e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 80224d0:	4909      	ldr	r1, [pc, #36]	; (80224f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 80224d2:	480a      	ldr	r0, [pc, #40]	; (80224fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80224d4:	f008 f940 	bl	802a758 <__aeabi_atexit>
 80224d8:	4b05      	ldr	r3, [pc, #20]	; (80224f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80224da:	622b      	str	r3, [r5, #32]
 80224dc:	4b07      	ldr	r3, [pc, #28]	; (80224fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80224de:	626b      	str	r3, [r5, #36]	; 0x24
 80224e0:	bd38      	pop	{r3, r4, r5, pc}
 80224e2:	bf00      	nop
 80224e4:	20002334 	.word	0x20002334
 80224e8:	20000000 	.word	0x20000000
 80224ec:	0801f199 	.word	0x0801f199
 80224f0:	20000070 	.word	0x20000070
 80224f4:	20002338 	.word	0x20002338
 80224f8:	0801f197 	.word	0x0801f197
 80224fc:	20000074 	.word	0x20000074

08022500 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8022500:	b538      	push	{r3, r4, r5, lr}
 8022502:	4c15      	ldr	r4, [pc, #84]	; (8022558 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8022504:	7823      	ldrb	r3, [r4, #0]
 8022506:	f3bf 8f5b 	dmb	ish
 802250a:	07da      	lsls	r2, r3, #31
 802250c:	4605      	mov	r5, r0
 802250e:	d40b      	bmi.n	8022528 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8022510:	4620      	mov	r0, r4
 8022512:	f008 f928 	bl	802a766 <__cxa_guard_acquire>
 8022516:	b138      	cbz	r0, 8022528 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8022518:	4620      	mov	r0, r4
 802251a:	f008 f930 	bl	802a77e <__cxa_guard_release>
 802251e:	4a0f      	ldr	r2, [pc, #60]	; (802255c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8022520:	490f      	ldr	r1, [pc, #60]	; (8022560 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8022522:	4810      	ldr	r0, [pc, #64]	; (8022564 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8022524:	f008 f918 	bl	802a758 <__aeabi_atexit>
 8022528:	4c0f      	ldr	r4, [pc, #60]	; (8022568 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 802252a:	7823      	ldrb	r3, [r4, #0]
 802252c:	f3bf 8f5b 	dmb	ish
 8022530:	07db      	lsls	r3, r3, #31
 8022532:	d40b      	bmi.n	802254c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8022534:	4620      	mov	r0, r4
 8022536:	f008 f916 	bl	802a766 <__cxa_guard_acquire>
 802253a:	b138      	cbz	r0, 802254c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 802253c:	4620      	mov	r0, r4
 802253e:	f008 f91e 	bl	802a77e <__cxa_guard_release>
 8022542:	4a06      	ldr	r2, [pc, #24]	; (802255c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8022544:	4909      	ldr	r1, [pc, #36]	; (802256c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8022546:	480a      	ldr	r0, [pc, #40]	; (8022570 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8022548:	f008 f906 	bl	802a758 <__aeabi_atexit>
 802254c:	4b05      	ldr	r3, [pc, #20]	; (8022564 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 802254e:	61ab      	str	r3, [r5, #24]
 8022550:	4b07      	ldr	r3, [pc, #28]	; (8022570 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8022552:	61eb      	str	r3, [r5, #28]
 8022554:	bd38      	pop	{r3, r4, r5, pc}
 8022556:	bf00      	nop
 8022558:	2000230c 	.word	0x2000230c
 802255c:	20000000 	.word	0x20000000
 8022560:	0801f19d 	.word	0x0801f19d
 8022564:	20000048 	.word	0x20000048
 8022568:	20002310 	.word	0x20002310
 802256c:	0801f19b 	.word	0x0801f19b
 8022570:	2000004c 	.word	0x2000004c

08022574 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8022574:	b510      	push	{r4, lr}
 8022576:	4604      	mov	r4, r0
 8022578:	f7ff ff88 	bl	802248c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 802257c:	4620      	mov	r0, r4
 802257e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022582:	f7ff bfbd 	b.w	8022500 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08022588 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8022588:	b538      	push	{r3, r4, r5, lr}
 802258a:	4c15      	ldr	r4, [pc, #84]	; (80225e0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 802258c:	7823      	ldrb	r3, [r4, #0]
 802258e:	f3bf 8f5b 	dmb	ish
 8022592:	07da      	lsls	r2, r3, #31
 8022594:	4605      	mov	r5, r0
 8022596:	d40b      	bmi.n	80225b0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8022598:	4620      	mov	r0, r4
 802259a:	f008 f8e4 	bl	802a766 <__cxa_guard_acquire>
 802259e:	b138      	cbz	r0, 80225b0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 80225a0:	4620      	mov	r0, r4
 80225a2:	f008 f8ec 	bl	802a77e <__cxa_guard_release>
 80225a6:	4a0f      	ldr	r2, [pc, #60]	; (80225e4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80225a8:	490f      	ldr	r1, [pc, #60]	; (80225e8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 80225aa:	4810      	ldr	r0, [pc, #64]	; (80225ec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 80225ac:	f008 f8d4 	bl	802a758 <__aeabi_atexit>
 80225b0:	4c0f      	ldr	r4, [pc, #60]	; (80225f0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 80225b2:	7823      	ldrb	r3, [r4, #0]
 80225b4:	f3bf 8f5b 	dmb	ish
 80225b8:	07db      	lsls	r3, r3, #31
 80225ba:	d40b      	bmi.n	80225d4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 80225bc:	4620      	mov	r0, r4
 80225be:	f008 f8d2 	bl	802a766 <__cxa_guard_acquire>
 80225c2:	b138      	cbz	r0, 80225d4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 80225c4:	4620      	mov	r0, r4
 80225c6:	f008 f8da 	bl	802a77e <__cxa_guard_release>
 80225ca:	4a06      	ldr	r2, [pc, #24]	; (80225e4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80225cc:	4909      	ldr	r1, [pc, #36]	; (80225f4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 80225ce:	480a      	ldr	r0, [pc, #40]	; (80225f8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80225d0:	f008 f8c2 	bl	802a758 <__aeabi_atexit>
 80225d4:	4b05      	ldr	r3, [pc, #20]	; (80225ec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 80225d6:	632b      	str	r3, [r5, #48]	; 0x30
 80225d8:	4b07      	ldr	r3, [pc, #28]	; (80225f8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80225da:	636b      	str	r3, [r5, #52]	; 0x34
 80225dc:	bd38      	pop	{r3, r4, r5, pc}
 80225de:	bf00      	nop
 80225e0:	20002344 	.word	0x20002344
 80225e4:	20000000 	.word	0x20000000
 80225e8:	0801f191 	.word	0x0801f191
 80225ec:	20000080 	.word	0x20000080
 80225f0:	20002348 	.word	0x20002348
 80225f4:	0801f18f 	.word	0x0801f18f
 80225f8:	20000084 	.word	0x20000084

080225fc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 80225fc:	b538      	push	{r3, r4, r5, lr}
 80225fe:	4c15      	ldr	r4, [pc, #84]	; (8022654 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8022600:	7823      	ldrb	r3, [r4, #0]
 8022602:	f3bf 8f5b 	dmb	ish
 8022606:	07da      	lsls	r2, r3, #31
 8022608:	4605      	mov	r5, r0
 802260a:	d40b      	bmi.n	8022624 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 802260c:	4620      	mov	r0, r4
 802260e:	f008 f8aa 	bl	802a766 <__cxa_guard_acquire>
 8022612:	b138      	cbz	r0, 8022624 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8022614:	4620      	mov	r0, r4
 8022616:	f008 f8b2 	bl	802a77e <__cxa_guard_release>
 802261a:	4a0f      	ldr	r2, [pc, #60]	; (8022658 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 802261c:	490f      	ldr	r1, [pc, #60]	; (802265c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 802261e:	4810      	ldr	r0, [pc, #64]	; (8022660 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8022620:	f008 f89a 	bl	802a758 <__aeabi_atexit>
 8022624:	4c0f      	ldr	r4, [pc, #60]	; (8022664 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8022626:	7823      	ldrb	r3, [r4, #0]
 8022628:	f3bf 8f5b 	dmb	ish
 802262c:	07db      	lsls	r3, r3, #31
 802262e:	d40b      	bmi.n	8022648 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8022630:	4620      	mov	r0, r4
 8022632:	f008 f898 	bl	802a766 <__cxa_guard_acquire>
 8022636:	b138      	cbz	r0, 8022648 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8022638:	4620      	mov	r0, r4
 802263a:	f008 f8a0 	bl	802a77e <__cxa_guard_release>
 802263e:	4a06      	ldr	r2, [pc, #24]	; (8022658 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8022640:	4909      	ldr	r1, [pc, #36]	; (8022668 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8022642:	480a      	ldr	r0, [pc, #40]	; (802266c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8022644:	f008 f888 	bl	802a758 <__aeabi_atexit>
 8022648:	4b05      	ldr	r3, [pc, #20]	; (8022660 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 802264a:	62ab      	str	r3, [r5, #40]	; 0x28
 802264c:	4b07      	ldr	r3, [pc, #28]	; (802266c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 802264e:	62eb      	str	r3, [r5, #44]	; 0x2c
 8022650:	bd38      	pop	{r3, r4, r5, pc}
 8022652:	bf00      	nop
 8022654:	20002314 	.word	0x20002314
 8022658:	20000000 	.word	0x20000000
 802265c:	0801f195 	.word	0x0801f195
 8022660:	20000050 	.word	0x20000050
 8022664:	20002318 	.word	0x20002318
 8022668:	0801f193 	.word	0x0801f193
 802266c:	20000054 	.word	0x20000054

08022670 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8022670:	b510      	push	{r4, lr}
 8022672:	4604      	mov	r4, r0
 8022674:	f7ff ff88 	bl	8022588 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8022678:	4620      	mov	r0, r4
 802267a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802267e:	f7ff bfbd 	b.w	80225fc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08022684 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8022684:	b538      	push	{r3, r4, r5, lr}
 8022686:	4c15      	ldr	r4, [pc, #84]	; (80226dc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8022688:	7823      	ldrb	r3, [r4, #0]
 802268a:	f3bf 8f5b 	dmb	ish
 802268e:	07da      	lsls	r2, r3, #31
 8022690:	4605      	mov	r5, r0
 8022692:	d40b      	bmi.n	80226ac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8022694:	4620      	mov	r0, r4
 8022696:	f008 f866 	bl	802a766 <__cxa_guard_acquire>
 802269a:	b138      	cbz	r0, 80226ac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 802269c:	4620      	mov	r0, r4
 802269e:	f008 f86e 	bl	802a77e <__cxa_guard_release>
 80226a2:	4a0f      	ldr	r2, [pc, #60]	; (80226e0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80226a4:	490f      	ldr	r1, [pc, #60]	; (80226e4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 80226a6:	4810      	ldr	r0, [pc, #64]	; (80226e8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80226a8:	f008 f856 	bl	802a758 <__aeabi_atexit>
 80226ac:	4c0f      	ldr	r4, [pc, #60]	; (80226ec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 80226ae:	7823      	ldrb	r3, [r4, #0]
 80226b0:	f3bf 8f5b 	dmb	ish
 80226b4:	07db      	lsls	r3, r3, #31
 80226b6:	d40b      	bmi.n	80226d0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 80226b8:	4620      	mov	r0, r4
 80226ba:	f008 f854 	bl	802a766 <__cxa_guard_acquire>
 80226be:	b138      	cbz	r0, 80226d0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 80226c0:	4620      	mov	r0, r4
 80226c2:	f008 f85c 	bl	802a77e <__cxa_guard_release>
 80226c6:	4a06      	ldr	r2, [pc, #24]	; (80226e0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80226c8:	4909      	ldr	r1, [pc, #36]	; (80226f0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 80226ca:	480a      	ldr	r0, [pc, #40]	; (80226f4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80226cc:	f008 f844 	bl	802a758 <__aeabi_atexit>
 80226d0:	4b05      	ldr	r3, [pc, #20]	; (80226e8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80226d2:	652b      	str	r3, [r5, #80]	; 0x50
 80226d4:	4b07      	ldr	r3, [pc, #28]	; (80226f4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80226d6:	656b      	str	r3, [r5, #84]	; 0x54
 80226d8:	bd38      	pop	{r3, r4, r5, pc}
 80226da:	bf00      	nop
 80226dc:	2000234c 	.word	0x2000234c
 80226e0:	20000000 	.word	0x20000000
 80226e4:	0801f181 	.word	0x0801f181
 80226e8:	20000088 	.word	0x20000088
 80226ec:	20002350 	.word	0x20002350
 80226f0:	0801f17f 	.word	0x0801f17f
 80226f4:	2000008c 	.word	0x2000008c

080226f8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 80226f8:	b538      	push	{r3, r4, r5, lr}
 80226fa:	4c15      	ldr	r4, [pc, #84]	; (8022750 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 80226fc:	7823      	ldrb	r3, [r4, #0]
 80226fe:	f3bf 8f5b 	dmb	ish
 8022702:	07da      	lsls	r2, r3, #31
 8022704:	4605      	mov	r5, r0
 8022706:	d40b      	bmi.n	8022720 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8022708:	4620      	mov	r0, r4
 802270a:	f008 f82c 	bl	802a766 <__cxa_guard_acquire>
 802270e:	b138      	cbz	r0, 8022720 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8022710:	4620      	mov	r0, r4
 8022712:	f008 f834 	bl	802a77e <__cxa_guard_release>
 8022716:	4a0f      	ldr	r2, [pc, #60]	; (8022754 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8022718:	490f      	ldr	r1, [pc, #60]	; (8022758 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 802271a:	4810      	ldr	r0, [pc, #64]	; (802275c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 802271c:	f008 f81c 	bl	802a758 <__aeabi_atexit>
 8022720:	4c0f      	ldr	r4, [pc, #60]	; (8022760 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8022722:	7823      	ldrb	r3, [r4, #0]
 8022724:	f3bf 8f5b 	dmb	ish
 8022728:	07db      	lsls	r3, r3, #31
 802272a:	d40b      	bmi.n	8022744 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 802272c:	4620      	mov	r0, r4
 802272e:	f008 f81a 	bl	802a766 <__cxa_guard_acquire>
 8022732:	b138      	cbz	r0, 8022744 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8022734:	4620      	mov	r0, r4
 8022736:	f008 f822 	bl	802a77e <__cxa_guard_release>
 802273a:	4a06      	ldr	r2, [pc, #24]	; (8022754 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 802273c:	4909      	ldr	r1, [pc, #36]	; (8022764 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 802273e:	480a      	ldr	r0, [pc, #40]	; (8022768 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8022740:	f008 f80a 	bl	802a758 <__aeabi_atexit>
 8022744:	4b05      	ldr	r3, [pc, #20]	; (802275c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8022746:	64ab      	str	r3, [r5, #72]	; 0x48
 8022748:	4b07      	ldr	r3, [pc, #28]	; (8022768 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 802274a:	64eb      	str	r3, [r5, #76]	; 0x4c
 802274c:	bd38      	pop	{r3, r4, r5, pc}
 802274e:	bf00      	nop
 8022750:	20002354 	.word	0x20002354
 8022754:	20000000 	.word	0x20000000
 8022758:	0801f185 	.word	0x0801f185
 802275c:	20000090 	.word	0x20000090
 8022760:	20002358 	.word	0x20002358
 8022764:	0801f183 	.word	0x0801f183
 8022768:	20000094 	.word	0x20000094

0802276c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 802276c:	b538      	push	{r3, r4, r5, lr}
 802276e:	4c15      	ldr	r4, [pc, #84]	; (80227c4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8022770:	7823      	ldrb	r3, [r4, #0]
 8022772:	f3bf 8f5b 	dmb	ish
 8022776:	07da      	lsls	r2, r3, #31
 8022778:	4605      	mov	r5, r0
 802277a:	d40b      	bmi.n	8022794 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 802277c:	4620      	mov	r0, r4
 802277e:	f007 fff2 	bl	802a766 <__cxa_guard_acquire>
 8022782:	b138      	cbz	r0, 8022794 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8022784:	4620      	mov	r0, r4
 8022786:	f007 fffa 	bl	802a77e <__cxa_guard_release>
 802278a:	4a0f      	ldr	r2, [pc, #60]	; (80227c8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 802278c:	490f      	ldr	r1, [pc, #60]	; (80227cc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 802278e:	4810      	ldr	r0, [pc, #64]	; (80227d0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8022790:	f007 ffe2 	bl	802a758 <__aeabi_atexit>
 8022794:	4c0f      	ldr	r4, [pc, #60]	; (80227d4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8022796:	7823      	ldrb	r3, [r4, #0]
 8022798:	f3bf 8f5b 	dmb	ish
 802279c:	07db      	lsls	r3, r3, #31
 802279e:	d40b      	bmi.n	80227b8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80227a0:	4620      	mov	r0, r4
 80227a2:	f007 ffe0 	bl	802a766 <__cxa_guard_acquire>
 80227a6:	b138      	cbz	r0, 80227b8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80227a8:	4620      	mov	r0, r4
 80227aa:	f007 ffe8 	bl	802a77e <__cxa_guard_release>
 80227ae:	4a06      	ldr	r2, [pc, #24]	; (80227c8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80227b0:	4909      	ldr	r1, [pc, #36]	; (80227d8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 80227b2:	480a      	ldr	r0, [pc, #40]	; (80227dc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80227b4:	f007 ffd0 	bl	802a758 <__aeabi_atexit>
 80227b8:	4b05      	ldr	r3, [pc, #20]	; (80227d0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80227ba:	642b      	str	r3, [r5, #64]	; 0x40
 80227bc:	4b07      	ldr	r3, [pc, #28]	; (80227dc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80227be:	646b      	str	r3, [r5, #68]	; 0x44
 80227c0:	bd38      	pop	{r3, r4, r5, pc}
 80227c2:	bf00      	nop
 80227c4:	2000231c 	.word	0x2000231c
 80227c8:	20000000 	.word	0x20000000
 80227cc:	0801f189 	.word	0x0801f189
 80227d0:	20000058 	.word	0x20000058
 80227d4:	20002320 	.word	0x20002320
 80227d8:	0801f187 	.word	0x0801f187
 80227dc:	2000005c 	.word	0x2000005c

080227e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 80227e0:	b538      	push	{r3, r4, r5, lr}
 80227e2:	4c15      	ldr	r4, [pc, #84]	; (8022838 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 80227e4:	7823      	ldrb	r3, [r4, #0]
 80227e6:	f3bf 8f5b 	dmb	ish
 80227ea:	07da      	lsls	r2, r3, #31
 80227ec:	4605      	mov	r5, r0
 80227ee:	d40b      	bmi.n	8022808 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80227f0:	4620      	mov	r0, r4
 80227f2:	f007 ffb8 	bl	802a766 <__cxa_guard_acquire>
 80227f6:	b138      	cbz	r0, 8022808 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80227f8:	4620      	mov	r0, r4
 80227fa:	f007 ffc0 	bl	802a77e <__cxa_guard_release>
 80227fe:	4a0f      	ldr	r2, [pc, #60]	; (802283c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8022800:	490f      	ldr	r1, [pc, #60]	; (8022840 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8022802:	4810      	ldr	r0, [pc, #64]	; (8022844 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8022804:	f007 ffa8 	bl	802a758 <__aeabi_atexit>
 8022808:	4c0f      	ldr	r4, [pc, #60]	; (8022848 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 802280a:	7823      	ldrb	r3, [r4, #0]
 802280c:	f3bf 8f5b 	dmb	ish
 8022810:	07db      	lsls	r3, r3, #31
 8022812:	d40b      	bmi.n	802282c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8022814:	4620      	mov	r0, r4
 8022816:	f007 ffa6 	bl	802a766 <__cxa_guard_acquire>
 802281a:	b138      	cbz	r0, 802282c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 802281c:	4620      	mov	r0, r4
 802281e:	f007 ffae 	bl	802a77e <__cxa_guard_release>
 8022822:	4a06      	ldr	r2, [pc, #24]	; (802283c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8022824:	4909      	ldr	r1, [pc, #36]	; (802284c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8022826:	480a      	ldr	r0, [pc, #40]	; (8022850 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8022828:	f007 ff96 	bl	802a758 <__aeabi_atexit>
 802282c:	4b05      	ldr	r3, [pc, #20]	; (8022844 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 802282e:	63ab      	str	r3, [r5, #56]	; 0x38
 8022830:	4b07      	ldr	r3, [pc, #28]	; (8022850 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8022832:	63eb      	str	r3, [r5, #60]	; 0x3c
 8022834:	bd38      	pop	{r3, r4, r5, pc}
 8022836:	bf00      	nop
 8022838:	2000233c 	.word	0x2000233c
 802283c:	20000000 	.word	0x20000000
 8022840:	0801f18d 	.word	0x0801f18d
 8022844:	20000078 	.word	0x20000078
 8022848:	20002340 	.word	0x20002340
 802284c:	0801f18b 	.word	0x0801f18b
 8022850:	2000007c 	.word	0x2000007c

08022854 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8022854:	b510      	push	{r4, lr}
 8022856:	4604      	mov	r4, r0
 8022858:	f7ff ff14 	bl	8022684 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 802285c:	4620      	mov	r0, r4
 802285e:	f7ff ff85 	bl	802276c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8022862:	4620      	mov	r0, r4
 8022864:	f7ff ff48 	bl	80226f8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8022868:	4620      	mov	r0, r4
 802286a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802286e:	f7ff bfb7 	b.w	80227e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08022874 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8022874:	b538      	push	{r3, r4, r5, lr}
 8022876:	4c15      	ldr	r4, [pc, #84]	; (80228cc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8022878:	7823      	ldrb	r3, [r4, #0]
 802287a:	f3bf 8f5b 	dmb	ish
 802287e:	07da      	lsls	r2, r3, #31
 8022880:	4605      	mov	r5, r0
 8022882:	d40b      	bmi.n	802289c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8022884:	4620      	mov	r0, r4
 8022886:	f007 ff6e 	bl	802a766 <__cxa_guard_acquire>
 802288a:	b138      	cbz	r0, 802289c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 802288c:	4620      	mov	r0, r4
 802288e:	f007 ff76 	bl	802a77e <__cxa_guard_release>
 8022892:	4a0f      	ldr	r2, [pc, #60]	; (80228d0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8022894:	490f      	ldr	r1, [pc, #60]	; (80228d4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8022896:	4810      	ldr	r0, [pc, #64]	; (80228d8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8022898:	f007 ff5e 	bl	802a758 <__aeabi_atexit>
 802289c:	4c0f      	ldr	r4, [pc, #60]	; (80228dc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 802289e:	7823      	ldrb	r3, [r4, #0]
 80228a0:	f3bf 8f5b 	dmb	ish
 80228a4:	07db      	lsls	r3, r3, #31
 80228a6:	d40b      	bmi.n	80228c0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80228a8:	4620      	mov	r0, r4
 80228aa:	f007 ff5c 	bl	802a766 <__cxa_guard_acquire>
 80228ae:	b138      	cbz	r0, 80228c0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80228b0:	4620      	mov	r0, r4
 80228b2:	f007 ff64 	bl	802a77e <__cxa_guard_release>
 80228b6:	4a06      	ldr	r2, [pc, #24]	; (80228d0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80228b8:	4909      	ldr	r1, [pc, #36]	; (80228e0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 80228ba:	480a      	ldr	r0, [pc, #40]	; (80228e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80228bc:	f007 ff4c 	bl	802a758 <__aeabi_atexit>
 80228c0:	4b05      	ldr	r3, [pc, #20]	; (80228d8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80228c2:	662b      	str	r3, [r5, #96]	; 0x60
 80228c4:	4b07      	ldr	r3, [pc, #28]	; (80228e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80228c6:	666b      	str	r3, [r5, #100]	; 0x64
 80228c8:	bd38      	pop	{r3, r4, r5, pc}
 80228ca:	bf00      	nop
 80228cc:	20002324 	.word	0x20002324
 80228d0:	20000000 	.word	0x20000000
 80228d4:	0801f179 	.word	0x0801f179
 80228d8:	20000060 	.word	0x20000060
 80228dc:	20002328 	.word	0x20002328
 80228e0:	0801f177 	.word	0x0801f177
 80228e4:	20000064 	.word	0x20000064

080228e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 80228e8:	b538      	push	{r3, r4, r5, lr}
 80228ea:	4c15      	ldr	r4, [pc, #84]	; (8022940 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 80228ec:	7823      	ldrb	r3, [r4, #0]
 80228ee:	f3bf 8f5b 	dmb	ish
 80228f2:	07da      	lsls	r2, r3, #31
 80228f4:	4605      	mov	r5, r0
 80228f6:	d40b      	bmi.n	8022910 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80228f8:	4620      	mov	r0, r4
 80228fa:	f007 ff34 	bl	802a766 <__cxa_guard_acquire>
 80228fe:	b138      	cbz	r0, 8022910 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8022900:	4620      	mov	r0, r4
 8022902:	f007 ff3c 	bl	802a77e <__cxa_guard_release>
 8022906:	4a0f      	ldr	r2, [pc, #60]	; (8022944 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8022908:	490f      	ldr	r1, [pc, #60]	; (8022948 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 802290a:	4810      	ldr	r0, [pc, #64]	; (802294c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 802290c:	f007 ff24 	bl	802a758 <__aeabi_atexit>
 8022910:	4c0f      	ldr	r4, [pc, #60]	; (8022950 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8022912:	7823      	ldrb	r3, [r4, #0]
 8022914:	f3bf 8f5b 	dmb	ish
 8022918:	07db      	lsls	r3, r3, #31
 802291a:	d40b      	bmi.n	8022934 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 802291c:	4620      	mov	r0, r4
 802291e:	f007 ff22 	bl	802a766 <__cxa_guard_acquire>
 8022922:	b138      	cbz	r0, 8022934 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8022924:	4620      	mov	r0, r4
 8022926:	f007 ff2a 	bl	802a77e <__cxa_guard_release>
 802292a:	4a06      	ldr	r2, [pc, #24]	; (8022944 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 802292c:	4909      	ldr	r1, [pc, #36]	; (8022954 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 802292e:	480a      	ldr	r0, [pc, #40]	; (8022958 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8022930:	f007 ff12 	bl	802a758 <__aeabi_atexit>
 8022934:	4b05      	ldr	r3, [pc, #20]	; (802294c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8022936:	65ab      	str	r3, [r5, #88]	; 0x58
 8022938:	4b07      	ldr	r3, [pc, #28]	; (8022958 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 802293a:	65eb      	str	r3, [r5, #92]	; 0x5c
 802293c:	bd38      	pop	{r3, r4, r5, pc}
 802293e:	bf00      	nop
 8022940:	200022fc 	.word	0x200022fc
 8022944:	20000000 	.word	0x20000000
 8022948:	0801f17d 	.word	0x0801f17d
 802294c:	20000038 	.word	0x20000038
 8022950:	20002300 	.word	0x20002300
 8022954:	0801f17b 	.word	0x0801f17b
 8022958:	2000003c 	.word	0x2000003c

0802295c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 802295c:	b510      	push	{r4, lr}
 802295e:	4604      	mov	r4, r0
 8022960:	f7ff ff88 	bl	8022874 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8022964:	4620      	mov	r0, r4
 8022966:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802296a:	f7ff bfbd 	b.w	80228e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08022970 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8022970:	b538      	push	{r3, r4, r5, lr}
 8022972:	4c15      	ldr	r4, [pc, #84]	; (80229c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8022974:	7823      	ldrb	r3, [r4, #0]
 8022976:	f3bf 8f5b 	dmb	ish
 802297a:	07da      	lsls	r2, r3, #31
 802297c:	4605      	mov	r5, r0
 802297e:	d40b      	bmi.n	8022998 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8022980:	4620      	mov	r0, r4
 8022982:	f007 fef0 	bl	802a766 <__cxa_guard_acquire>
 8022986:	b138      	cbz	r0, 8022998 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8022988:	4620      	mov	r0, r4
 802298a:	f007 fef8 	bl	802a77e <__cxa_guard_release>
 802298e:	4a0f      	ldr	r2, [pc, #60]	; (80229cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8022990:	490f      	ldr	r1, [pc, #60]	; (80229d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8022992:	4810      	ldr	r0, [pc, #64]	; (80229d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8022994:	f007 fee0 	bl	802a758 <__aeabi_atexit>
 8022998:	4c0f      	ldr	r4, [pc, #60]	; (80229d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 802299a:	7823      	ldrb	r3, [r4, #0]
 802299c:	f3bf 8f5b 	dmb	ish
 80229a0:	07db      	lsls	r3, r3, #31
 80229a2:	d40b      	bmi.n	80229bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80229a4:	4620      	mov	r0, r4
 80229a6:	f007 fede 	bl	802a766 <__cxa_guard_acquire>
 80229aa:	b138      	cbz	r0, 80229bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80229ac:	4620      	mov	r0, r4
 80229ae:	f007 fee6 	bl	802a77e <__cxa_guard_release>
 80229b2:	4a06      	ldr	r2, [pc, #24]	; (80229cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80229b4:	4909      	ldr	r1, [pc, #36]	; (80229dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 80229b6:	480a      	ldr	r0, [pc, #40]	; (80229e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80229b8:	f007 fece 	bl	802a758 <__aeabi_atexit>
 80229bc:	4b05      	ldr	r3, [pc, #20]	; (80229d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80229be:	672b      	str	r3, [r5, #112]	; 0x70
 80229c0:	4b07      	ldr	r3, [pc, #28]	; (80229e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80229c2:	676b      	str	r3, [r5, #116]	; 0x74
 80229c4:	bd38      	pop	{r3, r4, r5, pc}
 80229c6:	bf00      	nop
 80229c8:	200022f4 	.word	0x200022f4
 80229cc:	20000000 	.word	0x20000000
 80229d0:	0801f171 	.word	0x0801f171
 80229d4:	20000030 	.word	0x20000030
 80229d8:	200022f8 	.word	0x200022f8
 80229dc:	0801f16f 	.word	0x0801f16f
 80229e0:	20000034 	.word	0x20000034

080229e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 80229e4:	b538      	push	{r3, r4, r5, lr}
 80229e6:	4c15      	ldr	r4, [pc, #84]	; (8022a3c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 80229e8:	7823      	ldrb	r3, [r4, #0]
 80229ea:	f3bf 8f5b 	dmb	ish
 80229ee:	07da      	lsls	r2, r3, #31
 80229f0:	4605      	mov	r5, r0
 80229f2:	d40b      	bmi.n	8022a0c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80229f4:	4620      	mov	r0, r4
 80229f6:	f007 feb6 	bl	802a766 <__cxa_guard_acquire>
 80229fa:	b138      	cbz	r0, 8022a0c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80229fc:	4620      	mov	r0, r4
 80229fe:	f007 febe 	bl	802a77e <__cxa_guard_release>
 8022a02:	4a0f      	ldr	r2, [pc, #60]	; (8022a40 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8022a04:	490f      	ldr	r1, [pc, #60]	; (8022a44 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8022a06:	4810      	ldr	r0, [pc, #64]	; (8022a48 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8022a08:	f007 fea6 	bl	802a758 <__aeabi_atexit>
 8022a0c:	4c0f      	ldr	r4, [pc, #60]	; (8022a4c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8022a0e:	7823      	ldrb	r3, [r4, #0]
 8022a10:	f3bf 8f5b 	dmb	ish
 8022a14:	07db      	lsls	r3, r3, #31
 8022a16:	d40b      	bmi.n	8022a30 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8022a18:	4620      	mov	r0, r4
 8022a1a:	f007 fea4 	bl	802a766 <__cxa_guard_acquire>
 8022a1e:	b138      	cbz	r0, 8022a30 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8022a20:	4620      	mov	r0, r4
 8022a22:	f007 feac 	bl	802a77e <__cxa_guard_release>
 8022a26:	4a06      	ldr	r2, [pc, #24]	; (8022a40 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8022a28:	4909      	ldr	r1, [pc, #36]	; (8022a50 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8022a2a:	480a      	ldr	r0, [pc, #40]	; (8022a54 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8022a2c:	f007 fe94 	bl	802a758 <__aeabi_atexit>
 8022a30:	4b05      	ldr	r3, [pc, #20]	; (8022a48 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8022a32:	66ab      	str	r3, [r5, #104]	; 0x68
 8022a34:	4b07      	ldr	r3, [pc, #28]	; (8022a54 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8022a36:	66eb      	str	r3, [r5, #108]	; 0x6c
 8022a38:	bd38      	pop	{r3, r4, r5, pc}
 8022a3a:	bf00      	nop
 8022a3c:	200022ec 	.word	0x200022ec
 8022a40:	20000000 	.word	0x20000000
 8022a44:	0801f175 	.word	0x0801f175
 8022a48:	20000028 	.word	0x20000028
 8022a4c:	200022f0 	.word	0x200022f0
 8022a50:	0801f173 	.word	0x0801f173
 8022a54:	2000002c 	.word	0x2000002c

08022a58 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8022a58:	b510      	push	{r4, lr}
 8022a5a:	4604      	mov	r4, r0
 8022a5c:	f7ff ff88 	bl	8022970 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8022a60:	4620      	mov	r0, r4
 8022a62:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022a66:	f7ff bfbd 	b.w	80229e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08022a6a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8022a6a:	b510      	push	{r4, lr}
 8022a6c:	4604      	mov	r4, r0
 8022a6e:	f7ff fff3 	bl	8022a58 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8022a72:	4620      	mov	r0, r4
 8022a74:	f7ff ff72 	bl	802295c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8022a78:	4620      	mov	r0, r4
 8022a7a:	f7ff fdf9 	bl	8022670 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8022a7e:	4620      	mov	r0, r4
 8022a80:	f7ff fcfa 	bl	8022478 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8022a84:	4620      	mov	r0, r4
 8022a86:	f7ff fd75 	bl	8022574 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 8022a8a:	4620      	mov	r0, r4
 8022a8c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022a90:	f7ff bee0 	b.w	8022854 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08022a94 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 8022a94:	b538      	push	{r3, r4, r5, lr}
 8022a96:	4c0b      	ldr	r4, [pc, #44]	; (8022ac4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 8022a98:	7823      	ldrb	r3, [r4, #0]
 8022a9a:	f3bf 8f5b 	dmb	ish
 8022a9e:	07db      	lsls	r3, r3, #31
 8022aa0:	4605      	mov	r5, r0
 8022aa2:	d40b      	bmi.n	8022abc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8022aa4:	4620      	mov	r0, r4
 8022aa6:	f007 fe5e 	bl	802a766 <__cxa_guard_acquire>
 8022aaa:	b138      	cbz	r0, 8022abc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8022aac:	4620      	mov	r0, r4
 8022aae:	f007 fe66 	bl	802a77e <__cxa_guard_release>
 8022ab2:	4a05      	ldr	r2, [pc, #20]	; (8022ac8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 8022ab4:	4905      	ldr	r1, [pc, #20]	; (8022acc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 8022ab6:	4806      	ldr	r0, [pc, #24]	; (8022ad0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8022ab8:	f007 fe4e 	bl	802a758 <__aeabi_atexit>
 8022abc:	4b04      	ldr	r3, [pc, #16]	; (8022ad0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8022abe:	67ab      	str	r3, [r5, #120]	; 0x78
 8022ac0:	bd38      	pop	{r3, r4, r5, pc}
 8022ac2:	bf00      	nop
 8022ac4:	200022e0 	.word	0x200022e0
 8022ac8:	20000000 	.word	0x20000000
 8022acc:	0801f16d 	.word	0x0801f16d
 8022ad0:	20000020 	.word	0x20000020

08022ad4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 8022ad4:	b538      	push	{r3, r4, r5, lr}
 8022ad6:	4c0b      	ldr	r4, [pc, #44]	; (8022b04 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 8022ad8:	7823      	ldrb	r3, [r4, #0]
 8022ada:	f3bf 8f5b 	dmb	ish
 8022ade:	07db      	lsls	r3, r3, #31
 8022ae0:	4605      	mov	r5, r0
 8022ae2:	d40b      	bmi.n	8022afc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8022ae4:	4620      	mov	r0, r4
 8022ae6:	f007 fe3e 	bl	802a766 <__cxa_guard_acquire>
 8022aea:	b138      	cbz	r0, 8022afc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8022aec:	4620      	mov	r0, r4
 8022aee:	f007 fe46 	bl	802a77e <__cxa_guard_release>
 8022af2:	4a05      	ldr	r2, [pc, #20]	; (8022b08 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 8022af4:	4905      	ldr	r1, [pc, #20]	; (8022b0c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 8022af6:	4806      	ldr	r0, [pc, #24]	; (8022b10 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 8022af8:	f007 fe2e 	bl	802a758 <__aeabi_atexit>
 8022afc:	4b04      	ldr	r3, [pc, #16]	; (8022b10 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 8022afe:	67eb      	str	r3, [r5, #124]	; 0x7c
 8022b00:	bd38      	pop	{r3, r4, r5, pc}
 8022b02:	bf00      	nop
 8022b04:	200022e4 	.word	0x200022e4
 8022b08:	20000000 	.word	0x20000000
 8022b0c:	0801f16b 	.word	0x0801f16b
 8022b10:	20000024 	.word	0x20000024

08022b14 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 8022b14:	b570      	push	{r4, r5, r6, lr}
 8022b16:	4d0d      	ldr	r5, [pc, #52]	; (8022b4c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 8022b18:	4c0d      	ldr	r4, [pc, #52]	; (8022b50 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 8022b1a:	782b      	ldrb	r3, [r5, #0]
 8022b1c:	f3bf 8f5b 	dmb	ish
 8022b20:	f013 0f01 	tst.w	r3, #1
 8022b24:	4606      	mov	r6, r0
 8022b26:	d10d      	bne.n	8022b44 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 8022b28:	4628      	mov	r0, r5
 8022b2a:	f007 fe1c 	bl	802a766 <__cxa_guard_acquire>
 8022b2e:	b148      	cbz	r0, 8022b44 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 8022b30:	4b08      	ldr	r3, [pc, #32]	; (8022b54 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 8022b32:	6023      	str	r3, [r4, #0]
 8022b34:	4628      	mov	r0, r5
 8022b36:	f007 fe22 	bl	802a77e <__cxa_guard_release>
 8022b3a:	4a07      	ldr	r2, [pc, #28]	; (8022b58 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 8022b3c:	4907      	ldr	r1, [pc, #28]	; (8022b5c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 8022b3e:	4620      	mov	r0, r4
 8022b40:	f007 fe0a 	bl	802a758 <__aeabi_atexit>
 8022b44:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 8022b48:	bd70      	pop	{r4, r5, r6, pc}
 8022b4a:	bf00      	nop
 8022b4c:	200022e8 	.word	0x200022e8
 8022b50:	2000235c 	.word	0x2000235c
 8022b54:	0802fb2c 	.word	0x0802fb2c
 8022b58:	20000000 	.word	0x20000000
 8022b5c:	0801f169 	.word	0x0801f169

08022b60 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 8022b60:	b510      	push	{r4, lr}
 8022b62:	4604      	mov	r4, r0
 8022b64:	f7ff ff96 	bl	8022a94 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 8022b68:	4620      	mov	r0, r4
 8022b6a:	f7ff ffb3 	bl	8022ad4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 8022b6e:	4620      	mov	r0, r4
 8022b70:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022b74:	f7ff bfce 	b.w	8022b14 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

08022b78 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8022b78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022b7c:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 8022b80:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 8022b84:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 8022b88:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 8022b8c:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 8022b90:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 8022b94:	8808      	ldrh	r0, [r1, #0]
 8022b96:	fb05 4c0e 	mla	ip, r5, lr, r4
 8022b9a:	2d00      	cmp	r5, #0
 8022b9c:	eb02 0a0c 	add.w	sl, r2, ip
 8022ba0:	f2c0 80b0 	blt.w	8022d04 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8022ba4:	45ab      	cmp	fp, r5
 8022ba6:	f340 80ad 	ble.w	8022d04 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8022baa:	2c00      	cmp	r4, #0
 8022bac:	f2c0 80a8 	blt.w	8022d00 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8022bb0:	45a6      	cmp	lr, r4
 8022bb2:	f340 80a5 	ble.w	8022d00 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8022bb6:	f812 200c 	ldrb.w	r2, [r2, ip]
 8022bba:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 8022bbe:	1c62      	adds	r2, r4, #1
 8022bc0:	f100 80a3 	bmi.w	8022d0a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8022bc4:	4596      	cmp	lr, r2
 8022bc6:	f340 80a0 	ble.w	8022d0a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8022bca:	f1b9 0f00 	cmp.w	r9, #0
 8022bce:	f000 809c 	beq.w	8022d0a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8022bd2:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8022bd6:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8022bda:	3501      	adds	r5, #1
 8022bdc:	f100 8099 	bmi.w	8022d12 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8022be0:	45ab      	cmp	fp, r5
 8022be2:	f340 8096 	ble.w	8022d12 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8022be6:	2f00      	cmp	r7, #0
 8022be8:	f000 8093 	beq.w	8022d12 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8022bec:	2c00      	cmp	r4, #0
 8022bee:	f2c0 808e 	blt.w	8022d0e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8022bf2:	45a6      	cmp	lr, r4
 8022bf4:	f340 808b 	ble.w	8022d0e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8022bf8:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8022bfc:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 8022c00:	3401      	adds	r4, #1
 8022c02:	f100 8089 	bmi.w	8022d18 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8022c06:	45a6      	cmp	lr, r4
 8022c08:	f340 8086 	ble.w	8022d18 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8022c0c:	f1b9 0f00 	cmp.w	r9, #0
 8022c10:	f000 8082 	beq.w	8022d18 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8022c14:	44d6      	add	lr, sl
 8022c16:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8022c1a:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8022c1e:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8022c22:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022c26:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8022c2a:	fb19 fe07 	smulbb	lr, r9, r7
 8022c2e:	ea44 0808 	orr.w	r8, r4, r8
 8022c32:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8022c36:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8022c3a:	f1c7 0210 	rsb	r2, r7, #16
 8022c3e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022c42:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022c46:	ea44 0c0c 	orr.w	ip, r4, ip
 8022c4a:	eba2 0209 	sub.w	r2, r2, r9
 8022c4e:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8022c52:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8022c56:	fb04 f40c 	mul.w	r4, r4, ip
 8022c5a:	fb02 4808 	mla	r8, r2, r8, r4
 8022c5e:	041a      	lsls	r2, r3, #16
 8022c60:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022c64:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022c68:	4313      	orrs	r3, r2
 8022c6a:	042a      	lsls	r2, r5, #16
 8022c6c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022c70:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8022c74:	fb0e 8303 	mla	r3, lr, r3, r8
 8022c78:	432a      	orrs	r2, r5
 8022c7a:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8022c7e:	fb07 3202 	mla	r2, r7, r2, r3
 8022c82:	0d53      	lsrs	r3, r2, #21
 8022c84:	0952      	lsrs	r2, r2, #5
 8022c86:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022c8a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022c8e:	431a      	orrs	r2, r3
 8022c90:	b293      	uxth	r3, r2
 8022c92:	b2b4      	uxth	r4, r6
 8022c94:	1202      	asrs	r2, r0, #8
 8022c96:	43f6      	mvns	r6, r6
 8022c98:	b2f6      	uxtb	r6, r6
 8022c9a:	121d      	asrs	r5, r3, #8
 8022c9c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8022ca0:	fb12 f206 	smulbb	r2, r2, r6
 8022ca4:	10c7      	asrs	r7, r0, #3
 8022ca6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022caa:	00c0      	lsls	r0, r0, #3
 8022cac:	fb05 2504 	mla	r5, r5, r4, r2
 8022cb0:	b2c0      	uxtb	r0, r0
 8022cb2:	10da      	asrs	r2, r3, #3
 8022cb4:	00db      	lsls	r3, r3, #3
 8022cb6:	b2db      	uxtb	r3, r3
 8022cb8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8022cbc:	fb10 f006 	smulbb	r0, r0, r6
 8022cc0:	b2ad      	uxth	r5, r5
 8022cc2:	fb03 0004 	mla	r0, r3, r4, r0
 8022cc6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8022cca:	fb17 f706 	smulbb	r7, r7, r6
 8022cce:	b280      	uxth	r0, r0
 8022cd0:	1c6b      	adds	r3, r5, #1
 8022cd2:	fb02 7204 	mla	r2, r2, r4, r7
 8022cd6:	b292      	uxth	r2, r2
 8022cd8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022cdc:	1c43      	adds	r3, r0, #1
 8022cde:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8022ce2:	1c50      	adds	r0, r2, #1
 8022ce4:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8022ce8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022cec:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022cf0:	0952      	lsrs	r2, r2, #5
 8022cf2:	432b      	orrs	r3, r5
 8022cf4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022cf8:	4313      	orrs	r3, r2
 8022cfa:	800b      	strh	r3, [r1, #0]
 8022cfc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022d00:	4680      	mov	r8, r0
 8022d02:	e75c      	b.n	8022bbe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8022d04:	4684      	mov	ip, r0
 8022d06:	4680      	mov	r8, r0
 8022d08:	e767      	b.n	8022bda <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8022d0a:	4684      	mov	ip, r0
 8022d0c:	e765      	b.n	8022bda <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8022d0e:	4605      	mov	r5, r0
 8022d10:	e776      	b.n	8022c00 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 8022d12:	4603      	mov	r3, r0
 8022d14:	4605      	mov	r5, r0
 8022d16:	e782      	b.n	8022c1e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8022d18:	4603      	mov	r3, r0
 8022d1a:	e780      	b.n	8022c1e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08022d1c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022d1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022d20:	b099      	sub	sp, #100	; 0x64
 8022d22:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 8022d26:	9215      	str	r2, [sp, #84]	; 0x54
 8022d28:	9309      	str	r3, [sp, #36]	; 0x24
 8022d2a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8022d2c:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 8022d30:	930d      	str	r3, [sp, #52]	; 0x34
 8022d32:	910c      	str	r1, [sp, #48]	; 0x30
 8022d34:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 8022d38:	9016      	str	r0, [sp, #88]	; 0x58
 8022d3a:	6850      	ldr	r0, [r2, #4]
 8022d3c:	6812      	ldr	r2, [r2, #0]
 8022d3e:	fb00 1303 	mla	r3, r0, r3, r1
 8022d42:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8022d46:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8022d48:	681b      	ldr	r3, [r3, #0]
 8022d4a:	930b      	str	r3, [sp, #44]	; 0x2c
 8022d4c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8022d4e:	685e      	ldr	r6, [r3, #4]
 8022d50:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8022d52:	43db      	mvns	r3, r3
 8022d54:	b2db      	uxtb	r3, r3
 8022d56:	3604      	adds	r6, #4
 8022d58:	930a      	str	r3, [sp, #40]	; 0x28
 8022d5a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022d5c:	2b00      	cmp	r3, #0
 8022d5e:	dc03      	bgt.n	8022d68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8022d60:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8022d62:	2b00      	cmp	r3, #0
 8022d64:	f340 8225 	ble.w	80231b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8022d68:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8022d6a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022d6e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022d72:	1e48      	subs	r0, r1, #1
 8022d74:	1e57      	subs	r7, r2, #1
 8022d76:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022d78:	2b00      	cmp	r3, #0
 8022d7a:	f340 80e3 	ble.w	8022f44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8022d7e:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8022d82:	ea4f 4325 	mov.w	r3, r5, asr #16
 8022d86:	d406      	bmi.n	8022d96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8022d88:	4584      	cmp	ip, r0
 8022d8a:	da04      	bge.n	8022d96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8022d8c:	2b00      	cmp	r3, #0
 8022d8e:	db02      	blt.n	8022d96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8022d90:	42bb      	cmp	r3, r7
 8022d92:	f2c0 80d8 	blt.w	8022f46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8022d96:	f11c 0c01 	adds.w	ip, ip, #1
 8022d9a:	f100 80c9 	bmi.w	8022f30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8022d9e:	4561      	cmp	r1, ip
 8022da0:	f2c0 80c6 	blt.w	8022f30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8022da4:	3301      	adds	r3, #1
 8022da6:	f100 80c3 	bmi.w	8022f30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8022daa:	429a      	cmp	r2, r3
 8022dac:	f2c0 80c0 	blt.w	8022f30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8022db0:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8022db4:	4647      	mov	r7, r8
 8022db6:	f1bb 0f00 	cmp.w	fp, #0
 8022dba:	f340 80e3 	ble.w	8022f84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 8022dbe:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8022dc0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8022dc2:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8022dc6:	689b      	ldr	r3, [r3, #8]
 8022dc8:	ea5f 422a 	movs.w	r2, sl, asr #16
 8022dcc:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8022dd0:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8022dd4:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8022dd8:	f100 8121 	bmi.w	802301e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8022ddc:	f103 39ff 	add.w	r9, r3, #4294967295
 8022de0:	454a      	cmp	r2, r9
 8022de2:	f280 811c 	bge.w	802301e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8022de6:	f1bc 0f00 	cmp.w	ip, #0
 8022dea:	f2c0 8118 	blt.w	802301e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8022dee:	f10e 39ff 	add.w	r9, lr, #4294967295
 8022df2:	45cc      	cmp	ip, r9
 8022df4:	f280 8113 	bge.w	802301e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8022df8:	b21b      	sxth	r3, r3
 8022dfa:	fb0c 2203 	mla	r2, ip, r3, r2
 8022dfe:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022e00:	eb04 0902 	add.w	r9, r4, r2
 8022e04:	5ca2      	ldrb	r2, [r4, r2]
 8022e06:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8022e0a:	2800      	cmp	r0, #0
 8022e0c:	f000 80fe 	beq.w	802300c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8022e10:	f899 2001 	ldrb.w	r2, [r9, #1]
 8022e14:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8022e18:	9211      	str	r2, [sp, #68]	; 0x44
 8022e1a:	b151      	cbz	r1, 8022e32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8022e1c:	eb09 0203 	add.w	r2, r9, r3
 8022e20:	f819 3003 	ldrb.w	r3, [r9, r3]
 8022e24:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8022e28:	930f      	str	r3, [sp, #60]	; 0x3c
 8022e2a:	7853      	ldrb	r3, [r2, #1]
 8022e2c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8022e30:	9312      	str	r3, [sp, #72]	; 0x48
 8022e32:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8022e34:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8022e36:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8022e3a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022e3e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022e42:	ea4c 0c03 	orr.w	ip, ip, r3
 8022e46:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8022e48:	041b      	lsls	r3, r3, #16
 8022e4a:	fb10 f201 	smulbb	r2, r0, r1
 8022e4e:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8022e52:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022e56:	10d2      	asrs	r2, r2, #3
 8022e58:	4323      	orrs	r3, r4
 8022e5a:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8022e5e:	4353      	muls	r3, r2
 8022e60:	fb09 330c 	mla	r3, r9, ip, r3
 8022e64:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8022e68:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022e6c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022e70:	ea4c 0e0e 	orr.w	lr, ip, lr
 8022e74:	f1c1 0c10 	rsb	ip, r1, #16
 8022e78:	ebac 0c00 	sub.w	ip, ip, r0
 8022e7c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8022e80:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8022e84:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022e86:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022e88:	0418      	lsls	r0, r3, #16
 8022e8a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022e8e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022e92:	4318      	orrs	r0, r3
 8022e94:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8022e98:	fb02 c200 	mla	r2, r2, r0, ip
 8022e9c:	0d53      	lsrs	r3, r2, #21
 8022e9e:	0952      	lsrs	r2, r2, #5
 8022ea0:	8838      	ldrh	r0, [r7, #0]
 8022ea2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022ea6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022eaa:	431a      	orrs	r2, r3
 8022eac:	b292      	uxth	r2, r2
 8022eae:	1201      	asrs	r1, r0, #8
 8022eb0:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8022eb4:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8022eb8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022ebc:	fb11 f104 	smulbb	r1, r1, r4
 8022ec0:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8022ec4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8022ec8:	00c0      	lsls	r0, r0, #3
 8022eca:	fb0c 1c03 	mla	ip, ip, r3, r1
 8022ece:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8022ed2:	10d1      	asrs	r1, r2, #3
 8022ed4:	b2c0      	uxtb	r0, r0
 8022ed6:	00d2      	lsls	r2, r2, #3
 8022ed8:	b2d2      	uxtb	r2, r2
 8022eda:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022ede:	fb1e fe04 	smulbb	lr, lr, r4
 8022ee2:	fb10 f004 	smulbb	r0, r0, r4
 8022ee6:	fa1f fc8c 	uxth.w	ip, ip
 8022eea:	fb01 e103 	mla	r1, r1, r3, lr
 8022eee:	fb02 0303 	mla	r3, r2, r3, r0
 8022ef2:	b29a      	uxth	r2, r3
 8022ef4:	f10c 0301 	add.w	r3, ip, #1
 8022ef8:	b289      	uxth	r1, r1
 8022efa:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8022efe:	1c53      	adds	r3, r2, #1
 8022f00:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022f04:	1c4a      	adds	r2, r1, #1
 8022f06:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022f0a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8022f0e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022f12:	0949      	lsrs	r1, r1, #5
 8022f14:	ea43 030c 	orr.w	r3, r3, ip
 8022f18:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022f1c:	430b      	orrs	r3, r1
 8022f1e:	803b      	strh	r3, [r7, #0]
 8022f20:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8022f22:	449a      	add	sl, r3
 8022f24:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8022f26:	3702      	adds	r7, #2
 8022f28:	441d      	add	r5, r3
 8022f2a:	f10b 3bff 	add.w	fp, fp, #4294967295
 8022f2e:	e742      	b.n	8022db6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8022f30:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8022f32:	449a      	add	sl, r3
 8022f34:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8022f36:	441d      	add	r5, r3
 8022f38:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022f3a:	3b01      	subs	r3, #1
 8022f3c:	9309      	str	r3, [sp, #36]	; 0x24
 8022f3e:	f108 0802 	add.w	r8, r8, #2
 8022f42:	e718      	b.n	8022d76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8022f44:	d023      	beq.n	8022f8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8022f46:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022f48:	9825      	ldr	r0, [sp, #148]	; 0x94
 8022f4a:	3b01      	subs	r3, #1
 8022f4c:	fb00 a003 	mla	r0, r0, r3, sl
 8022f50:	1400      	asrs	r0, r0, #16
 8022f52:	f53f af2d 	bmi.w	8022db0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022f56:	3901      	subs	r1, #1
 8022f58:	4288      	cmp	r0, r1
 8022f5a:	f6bf af29 	bge.w	8022db0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022f5e:	9926      	ldr	r1, [sp, #152]	; 0x98
 8022f60:	fb01 5303 	mla	r3, r1, r3, r5
 8022f64:	141b      	asrs	r3, r3, #16
 8022f66:	f53f af23 	bmi.w	8022db0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022f6a:	3a01      	subs	r2, #1
 8022f6c:	4293      	cmp	r3, r2
 8022f6e:	f6bf af1f 	bge.w	8022db0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022f72:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8022f76:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 8022f7a:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8022f7e:	f1be 0f00 	cmp.w	lr, #0
 8022f82:	dc6c      	bgt.n	802305e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8022f84:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022f86:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8022f8a:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8022f8e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022f90:	2b00      	cmp	r3, #0
 8022f92:	f340 810e 	ble.w	80231b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8022f96:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022f9a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022f9e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022fa2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022fa4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022fa8:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022fac:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022fb0:	eef0 6a62 	vmov.f32	s13, s5
 8022fb4:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022fb8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022fbc:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022fc0:	ee16 aa90 	vmov	sl, s13
 8022fc4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022fc8:	eef0 6a43 	vmov.f32	s13, s6
 8022fcc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022fd0:	ee12 2a90 	vmov	r2, s5
 8022fd4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022fd8:	fb92 f3f3 	sdiv	r3, r2, r3
 8022fdc:	ee13 2a10 	vmov	r2, s6
 8022fe0:	9325      	str	r3, [sp, #148]	; 0x94
 8022fe2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022fe4:	fb92 f3f3 	sdiv	r3, r2, r3
 8022fe8:	9326      	str	r3, [sp, #152]	; 0x98
 8022fea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022fec:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8022fee:	3b01      	subs	r3, #1
 8022ff0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022ff4:	930c      	str	r3, [sp, #48]	; 0x30
 8022ff6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022ff8:	bf08      	it	eq
 8022ffa:	4613      	moveq	r3, r2
 8022ffc:	ee16 5a90 	vmov	r5, s13
 8023000:	9309      	str	r3, [sp, #36]	; 0x24
 8023002:	eeb0 3a67 	vmov.f32	s6, s15
 8023006:	eef0 2a47 	vmov.f32	s5, s14
 802300a:	e6a6      	b.n	8022d5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 802300c:	2900      	cmp	r1, #0
 802300e:	f43f af10 	beq.w	8022e32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8023012:	f819 3003 	ldrb.w	r3, [r9, r3]
 8023016:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802301a:	930f      	str	r3, [sp, #60]	; 0x3c
 802301c:	e709      	b.n	8022e32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 802301e:	f112 0901 	adds.w	r9, r2, #1
 8023022:	f53f af7d 	bmi.w	8022f20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8023026:	454b      	cmp	r3, r9
 8023028:	f6ff af7a 	blt.w	8022f20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 802302c:	f11c 0901 	adds.w	r9, ip, #1
 8023030:	f53f af76 	bmi.w	8022f20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8023034:	45ce      	cmp	lr, r9
 8023036:	f6ff af73 	blt.w	8022f20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 802303a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802303c:	9202      	str	r2, [sp, #8]
 802303e:	b21b      	sxth	r3, r3
 8023040:	fa0f f28e 	sxth.w	r2, lr
 8023044:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8023048:	e9cd c003 	strd	ip, r0, [sp, #12]
 802304c:	9201      	str	r2, [sp, #4]
 802304e:	9300      	str	r3, [sp, #0]
 8023050:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8023052:	9816      	ldr	r0, [sp, #88]	; 0x58
 8023054:	4633      	mov	r3, r6
 8023056:	4639      	mov	r1, r7
 8023058:	f7ff fd8e 	bl	8022b78 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 802305c:	e760      	b.n	8022f20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 802305e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8023060:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023062:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8023066:	ea4f 422a 	mov.w	r2, sl, asr #16
 802306a:	1429      	asrs	r1, r5, #16
 802306c:	fb03 2101 	mla	r1, r3, r1, r2
 8023070:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8023072:	440a      	add	r2, r1
 8023074:	5c61      	ldrb	r1, [r4, r1]
 8023076:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 802307a:	f3c5 3003 	ubfx	r0, r5, #12, #4
 802307e:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8023082:	f1bc 0f00 	cmp.w	ip, #0
 8023086:	f000 808c 	beq.w	80231a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 802308a:	7857      	ldrb	r7, [r2, #1]
 802308c:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8023090:	9413      	str	r4, [sp, #76]	; 0x4c
 8023092:	b140      	cbz	r0, 80230a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8023094:	18d7      	adds	r7, r2, r3
 8023096:	5cd3      	ldrb	r3, [r2, r3]
 8023098:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802309c:	9310      	str	r3, [sp, #64]	; 0x40
 802309e:	787b      	ldrb	r3, [r7, #1]
 80230a0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80230a4:	9314      	str	r3, [sp, #80]	; 0x50
 80230a6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80230a8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80230aa:	fb1c f200 	smulbb	r2, ip, r0
 80230ae:	041f      	lsls	r7, r3, #16
 80230b0:	10d2      	asrs	r2, r2, #3
 80230b2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80230b6:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 80230ba:	431f      	orrs	r7, r3
 80230bc:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 80230c0:	9317      	str	r3, [sp, #92]	; 0x5c
 80230c2:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80230c4:	041b      	lsls	r3, r3, #16
 80230c6:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 80230ca:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80230ce:	ea43 030b 	orr.w	r3, r3, fp
 80230d2:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80230d4:	4353      	muls	r3, r2
 80230d6:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80230da:	fb04 3707 	mla	r7, r4, r7, r3
 80230de:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80230e2:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 80230e6:	ea43 0b01 	orr.w	fp, r3, r1
 80230ea:	f1c0 0110 	rsb	r1, r0, #16
 80230ee:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80230f0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80230f2:	eba1 0c0c 	sub.w	ip, r1, ip
 80230f6:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80230fa:	fb0c 770b 	mla	r7, ip, fp, r7
 80230fe:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8023102:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8023106:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 802310a:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 802310e:	ea4c 0c0b 	orr.w	ip, ip, fp
 8023112:	fb02 770c 	mla	r7, r2, ip, r7
 8023116:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8023118:	0d79      	lsrs	r1, r7, #21
 802311a:	097f      	lsrs	r7, r7, #5
 802311c:	8812      	ldrh	r2, [r2, #0]
 802311e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023122:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8023126:	430f      	orrs	r7, r1
 8023128:	b2bb      	uxth	r3, r7
 802312a:	1211      	asrs	r1, r2, #8
 802312c:	1218      	asrs	r0, r3, #8
 802312e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8023132:	fb11 f104 	smulbb	r1, r1, r4
 8023136:	10d7      	asrs	r7, r2, #3
 8023138:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802313c:	00d2      	lsls	r2, r2, #3
 802313e:	fb00 1009 	mla	r0, r0, r9, r1
 8023142:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8023146:	10d9      	asrs	r1, r3, #3
 8023148:	b2d2      	uxtb	r2, r2
 802314a:	00db      	lsls	r3, r3, #3
 802314c:	fb17 f704 	smulbb	r7, r7, r4
 8023150:	fb12 f204 	smulbb	r2, r2, r4
 8023154:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023158:	b2db      	uxtb	r3, r3
 802315a:	b280      	uxth	r0, r0
 802315c:	fb01 7109 	mla	r1, r1, r9, r7
 8023160:	fb03 2309 	mla	r3, r3, r9, r2
 8023164:	b29b      	uxth	r3, r3
 8023166:	b289      	uxth	r1, r1
 8023168:	1c42      	adds	r2, r0, #1
 802316a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802316e:	1c4f      	adds	r7, r1, #1
 8023170:	1c5a      	adds	r2, r3, #1
 8023172:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8023176:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 802317a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 802317e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8023182:	0949      	lsrs	r1, r1, #5
 8023184:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023186:	4310      	orrs	r0, r2
 8023188:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802318c:	4308      	orrs	r0, r1
 802318e:	f823 0b02 	strh.w	r0, [r3], #2
 8023192:	930e      	str	r3, [sp, #56]	; 0x38
 8023194:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8023196:	449a      	add	sl, r3
 8023198:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802319a:	f10e 3eff 	add.w	lr, lr, #4294967295
 802319e:	441d      	add	r5, r3
 80231a0:	e6ed      	b.n	8022f7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 80231a2:	2800      	cmp	r0, #0
 80231a4:	f43f af7f 	beq.w	80230a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80231a8:	5cd3      	ldrb	r3, [r2, r3]
 80231aa:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80231ae:	9310      	str	r3, [sp, #64]	; 0x40
 80231b0:	e779      	b.n	80230a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80231b2:	b019      	add	sp, #100	; 0x64
 80231b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080231b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80231b8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80231bc:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 80231c0:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 80231c4:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 80231c8:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 80231cc:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 80231d0:	8808      	ldrh	r0, [r1, #0]
 80231d2:	fb08 470e 	mla	r7, r8, lr, r4
 80231d6:	f1b8 0f00 	cmp.w	r8, #0
 80231da:	eb02 0907 	add.w	r9, r2, r7
 80231de:	db67      	blt.n	80232b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 80231e0:	45c2      	cmp	sl, r8
 80231e2:	dd65      	ble.n	80232b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 80231e4:	2c00      	cmp	r4, #0
 80231e6:	db61      	blt.n	80232ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 80231e8:	45a6      	cmp	lr, r4
 80231ea:	dd5f      	ble.n	80232ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 80231ec:	5dd2      	ldrb	r2, [r2, r7]
 80231ee:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 80231f2:	1c62      	adds	r2, r4, #1
 80231f4:	d45f      	bmi.n	80232b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 80231f6:	4596      	cmp	lr, r2
 80231f8:	dd5d      	ble.n	80232b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 80231fa:	2d00      	cmp	r5, #0
 80231fc:	d05b      	beq.n	80232b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 80231fe:	f899 2001 	ldrb.w	r2, [r9, #1]
 8023202:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8023206:	f118 0801 	adds.w	r8, r8, #1
 802320a:	d458      	bmi.n	80232be <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 802320c:	45c2      	cmp	sl, r8
 802320e:	dd56      	ble.n	80232be <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8023210:	2e00      	cmp	r6, #0
 8023212:	d054      	beq.n	80232be <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8023214:	2c00      	cmp	r4, #0
 8023216:	db50      	blt.n	80232ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8023218:	45a6      	cmp	lr, r4
 802321a:	dd4e      	ble.n	80232ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 802321c:	f819 200e 	ldrb.w	r2, [r9, lr]
 8023220:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8023224:	3401      	adds	r4, #1
 8023226:	d407      	bmi.n	8023238 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8023228:	45a6      	cmp	lr, r4
 802322a:	dd05      	ble.n	8023238 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 802322c:	b125      	cbz	r5, 8023238 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 802322e:	44ce      	add	lr, r9
 8023230:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8023234:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8023238:	ea4f 430c 	mov.w	r3, ip, lsl #16
 802323c:	fb15 f406 	smulbb	r4, r5, r6
 8023240:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8023244:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8023248:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 802324c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8023250:	ea43 0c0c 	orr.w	ip, r3, ip
 8023254:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8023258:	f1c6 0310 	rsb	r3, r6, #16
 802325c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8023260:	1b5b      	subs	r3, r3, r5
 8023262:	ea4e 0707 	orr.w	r7, lr, r7
 8023266:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 802326a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802326e:	437d      	muls	r5, r7
 8023270:	fb03 5c0c 	mla	ip, r3, ip, r5
 8023274:	0403      	lsls	r3, r0, #16
 8023276:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802327a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802327e:	4318      	orrs	r0, r3
 8023280:	0413      	lsls	r3, r2, #16
 8023282:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8023286:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802328a:	4313      	orrs	r3, r2
 802328c:	fb04 c000 	mla	r0, r4, r0, ip
 8023290:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8023294:	fb06 0003 	mla	r0, r6, r3, r0
 8023298:	0d43      	lsrs	r3, r0, #21
 802329a:	0940      	lsrs	r0, r0, #5
 802329c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80232a0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80232a4:	4318      	orrs	r0, r3
 80232a6:	8008      	strh	r0, [r1, #0]
 80232a8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80232ac:	4684      	mov	ip, r0
 80232ae:	e7a0      	b.n	80231f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 80232b0:	4607      	mov	r7, r0
 80232b2:	4684      	mov	ip, r0
 80232b4:	e7a7      	b.n	8023206 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 80232b6:	4607      	mov	r7, r0
 80232b8:	e7a5      	b.n	8023206 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 80232ba:	4602      	mov	r2, r0
 80232bc:	e7b2      	b.n	8023224 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 80232be:	4602      	mov	r2, r0
 80232c0:	e7ba      	b.n	8023238 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

080232c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80232c2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80232c6:	b093      	sub	sp, #76	; 0x4c
 80232c8:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 80232cc:	920f      	str	r2, [sp, #60]	; 0x3c
 80232ce:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80232d0:	9108      	str	r1, [sp, #32]
 80232d2:	9306      	str	r3, [sp, #24]
 80232d4:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 80232d8:	9010      	str	r0, [sp, #64]	; 0x40
 80232da:	6850      	ldr	r0, [r2, #4]
 80232dc:	6812      	ldr	r2, [r2, #0]
 80232de:	fb00 1303 	mla	r3, r0, r3, r1
 80232e2:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80232e6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80232e8:	681b      	ldr	r3, [r3, #0]
 80232ea:	9307      	str	r3, [sp, #28]
 80232ec:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80232ee:	685f      	ldr	r7, [r3, #4]
 80232f0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80232f4:	3704      	adds	r7, #4
 80232f6:	9b08      	ldr	r3, [sp, #32]
 80232f8:	2b00      	cmp	r3, #0
 80232fa:	dc03      	bgt.n	8023304 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 80232fc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80232fe:	2b00      	cmp	r3, #0
 8023300:	f340 81b2 	ble.w	8023668 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8023304:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023306:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802330a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802330e:	1e48      	subs	r0, r1, #1
 8023310:	f102 3cff 	add.w	ip, r2, #4294967295
 8023314:	9b06      	ldr	r3, [sp, #24]
 8023316:	2b00      	cmp	r3, #0
 8023318:	f340 80a9 	ble.w	802346e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 802331c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8023320:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023324:	d406      	bmi.n	8023334 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8023326:	4586      	cmp	lr, r0
 8023328:	da04      	bge.n	8023334 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 802332a:	2b00      	cmp	r3, #0
 802332c:	db02      	blt.n	8023334 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 802332e:	4563      	cmp	r3, ip
 8023330:	f2c0 809e 	blt.w	8023470 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8023334:	f11e 0e01 	adds.w	lr, lr, #1
 8023338:	f100 808f 	bmi.w	802345a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802333c:	4571      	cmp	r1, lr
 802333e:	f2c0 808c 	blt.w	802345a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023342:	3301      	adds	r3, #1
 8023344:	f100 8089 	bmi.w	802345a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023348:	429a      	cmp	r2, r3
 802334a:	f2c0 8086 	blt.w	802345a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802334e:	f8dd b018 	ldr.w	fp, [sp, #24]
 8023352:	46c8      	mov	r8, r9
 8023354:	f1bb 0f00 	cmp.w	fp, #0
 8023358:	f340 80a6 	ble.w	80234a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 802335c:	9a24      	ldr	r2, [sp, #144]	; 0x90
 802335e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023360:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8023364:	689b      	ldr	r3, [r3, #8]
 8023366:	1422      	asrs	r2, r4, #16
 8023368:	ea4f 4c26 	mov.w	ip, r6, asr #16
 802336c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8023370:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8023374:	f100 80e3 	bmi.w	802353e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8023378:	f103 3aff 	add.w	sl, r3, #4294967295
 802337c:	4552      	cmp	r2, sl
 802337e:	f280 80de 	bge.w	802353e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8023382:	f1bc 0f00 	cmp.w	ip, #0
 8023386:	f2c0 80da 	blt.w	802353e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 802338a:	f10e 3aff 	add.w	sl, lr, #4294967295
 802338e:	45d4      	cmp	ip, sl
 8023390:	f280 80d5 	bge.w	802353e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8023394:	b21b      	sxth	r3, r3
 8023396:	fb0c 2203 	mla	r2, ip, r3, r2
 802339a:	9d07      	ldr	r5, [sp, #28]
 802339c:	eb05 0a02 	add.w	sl, r5, r2
 80233a0:	5caa      	ldrb	r2, [r5, r2]
 80233a2:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 80233a6:	2800      	cmp	r0, #0
 80233a8:	f000 80c0 	beq.w	802352c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 80233ac:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80233b0:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 80233b4:	920b      	str	r2, [sp, #44]	; 0x2c
 80233b6:	b151      	cbz	r1, 80233ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 80233b8:	eb0a 0203 	add.w	r2, sl, r3
 80233bc:	f81a 3003 	ldrb.w	r3, [sl, r3]
 80233c0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80233c4:	9309      	str	r3, [sp, #36]	; 0x24
 80233c6:	7853      	ldrb	r3, [r2, #1]
 80233c8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80233cc:	930c      	str	r3, [sp, #48]	; 0x30
 80233ce:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80233d0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80233d2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80233d6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80233da:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80233de:	ea4c 0c03 	orr.w	ip, ip, r3
 80233e2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80233e4:	041b      	lsls	r3, r3, #16
 80233e6:	fb10 f201 	smulbb	r2, r0, r1
 80233ea:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80233ee:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80233f2:	10d2      	asrs	r2, r2, #3
 80233f4:	432b      	orrs	r3, r5
 80233f6:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 80233fa:	4353      	muls	r3, r2
 80233fc:	fb0a 330c 	mla	r3, sl, ip, r3
 8023400:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8023404:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8023408:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802340c:	ea4c 0e0e 	orr.w	lr, ip, lr
 8023410:	f1c1 0c10 	rsb	ip, r1, #16
 8023414:	ebac 0c00 	sub.w	ip, ip, r0
 8023418:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 802341c:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8023420:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023422:	0418      	lsls	r0, r3, #16
 8023424:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8023428:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802342c:	4318      	orrs	r0, r3
 802342e:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8023432:	fb02 c200 	mla	r2, r2, r0, ip
 8023436:	0d53      	lsrs	r3, r2, #21
 8023438:	0952      	lsrs	r2, r2, #5
 802343a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802343e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023442:	431a      	orrs	r2, r3
 8023444:	f8a8 2000 	strh.w	r2, [r8]
 8023448:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802344a:	441c      	add	r4, r3
 802344c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802344e:	f108 0802 	add.w	r8, r8, #2
 8023452:	441e      	add	r6, r3
 8023454:	f10b 3bff 	add.w	fp, fp, #4294967295
 8023458:	e77c      	b.n	8023354 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802345a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802345c:	441c      	add	r4, r3
 802345e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023460:	441e      	add	r6, r3
 8023462:	9b06      	ldr	r3, [sp, #24]
 8023464:	3b01      	subs	r3, #1
 8023466:	9306      	str	r3, [sp, #24]
 8023468:	f109 0902 	add.w	r9, r9, #2
 802346c:	e752      	b.n	8023314 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 802346e:	d020      	beq.n	80234b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8023470:	9b06      	ldr	r3, [sp, #24]
 8023472:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8023474:	3b01      	subs	r3, #1
 8023476:	fb00 4003 	mla	r0, r0, r3, r4
 802347a:	1400      	asrs	r0, r0, #16
 802347c:	f53f af67 	bmi.w	802334e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8023480:	3901      	subs	r1, #1
 8023482:	4288      	cmp	r0, r1
 8023484:	f6bf af63 	bge.w	802334e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8023488:	9920      	ldr	r1, [sp, #128]	; 0x80
 802348a:	fb01 6303 	mla	r3, r1, r3, r6
 802348e:	141b      	asrs	r3, r3, #16
 8023490:	f53f af5d 	bmi.w	802334e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8023494:	3a01      	subs	r2, #1
 8023496:	4293      	cmp	r3, r2
 8023498:	f6bf af59 	bge.w	802334e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 802349c:	f8dd 8018 	ldr.w	r8, [sp, #24]
 80234a0:	46ca      	mov	sl, r9
 80234a2:	f1b8 0f00 	cmp.w	r8, #0
 80234a6:	dc67      	bgt.n	8023578 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80234a8:	9b06      	ldr	r3, [sp, #24]
 80234aa:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80234ae:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80234b2:	9b08      	ldr	r3, [sp, #32]
 80234b4:	2b00      	cmp	r3, #0
 80234b6:	f340 80d7 	ble.w	8023668 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80234ba:	ee30 0a04 	vadd.f32	s0, s0, s8
 80234be:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80234c2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80234c6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80234c8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80234cc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80234d0:	eeb0 6a62 	vmov.f32	s12, s5
 80234d4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80234d8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80234dc:	ee77 2a62 	vsub.f32	s5, s14, s5
 80234e0:	ee16 4a10 	vmov	r4, s12
 80234e4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80234e8:	eeb0 6a43 	vmov.f32	s12, s6
 80234ec:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80234f0:	ee12 2a90 	vmov	r2, s5
 80234f4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80234f8:	fb92 f3f3 	sdiv	r3, r2, r3
 80234fc:	ee13 2a10 	vmov	r2, s6
 8023500:	931f      	str	r3, [sp, #124]	; 0x7c
 8023502:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023504:	fb92 f3f3 	sdiv	r3, r2, r3
 8023508:	9320      	str	r3, [sp, #128]	; 0x80
 802350a:	9b08      	ldr	r3, [sp, #32]
 802350c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802350e:	3b01      	subs	r3, #1
 8023510:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8023514:	9308      	str	r3, [sp, #32]
 8023516:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023518:	bf08      	it	eq
 802351a:	4613      	moveq	r3, r2
 802351c:	ee16 6a10 	vmov	r6, s12
 8023520:	9306      	str	r3, [sp, #24]
 8023522:	eeb0 3a67 	vmov.f32	s6, s15
 8023526:	eef0 2a47 	vmov.f32	s5, s14
 802352a:	e6e4      	b.n	80232f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 802352c:	2900      	cmp	r1, #0
 802352e:	f43f af4e 	beq.w	80233ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8023532:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8023536:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 802353a:	9309      	str	r3, [sp, #36]	; 0x24
 802353c:	e747      	b.n	80233ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 802353e:	f112 0a01 	adds.w	sl, r2, #1
 8023542:	d481      	bmi.n	8023448 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8023544:	4553      	cmp	r3, sl
 8023546:	f6ff af7f 	blt.w	8023448 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802354a:	f11c 0a01 	adds.w	sl, ip, #1
 802354e:	f53f af7b 	bmi.w	8023448 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8023552:	45d6      	cmp	lr, sl
 8023554:	f6ff af78 	blt.w	8023448 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8023558:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 802355c:	b21b      	sxth	r3, r3
 802355e:	fa0f f28e 	sxth.w	r2, lr
 8023562:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8023566:	9201      	str	r2, [sp, #4]
 8023568:	9300      	str	r3, [sp, #0]
 802356a:	9a07      	ldr	r2, [sp, #28]
 802356c:	9810      	ldr	r0, [sp, #64]	; 0x40
 802356e:	463b      	mov	r3, r7
 8023570:	4641      	mov	r1, r8
 8023572:	f7ff fe21 	bl	80231b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8023576:	e767      	b.n	8023448 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8023578:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802357a:	9d07      	ldr	r5, [sp, #28]
 802357c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8023580:	1422      	asrs	r2, r4, #16
 8023582:	1431      	asrs	r1, r6, #16
 8023584:	fb03 2101 	mla	r1, r3, r1, r2
 8023588:	9a07      	ldr	r2, [sp, #28]
 802358a:	440a      	add	r2, r1
 802358c:	5c69      	ldrb	r1, [r5, r1]
 802358e:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8023592:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8023596:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 802359a:	f1be 0f00 	cmp.w	lr, #0
 802359e:	d05c      	beq.n	802365a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 80235a0:	f892 c001 	ldrb.w	ip, [r2, #1]
 80235a4:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 80235a8:	950d      	str	r5, [sp, #52]	; 0x34
 80235aa:	b150      	cbz	r0, 80235c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 80235ac:	eb02 0c03 	add.w	ip, r2, r3
 80235b0:	5cd3      	ldrb	r3, [r2, r3]
 80235b2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80235b6:	930a      	str	r3, [sp, #40]	; 0x28
 80235b8:	f89c 3001 	ldrb.w	r3, [ip, #1]
 80235bc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80235c0:	930e      	str	r3, [sp, #56]	; 0x38
 80235c2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80235c4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80235c6:	fb1e f200 	smulbb	r2, lr, r0
 80235ca:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80235ce:	10d2      	asrs	r2, r2, #3
 80235d0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80235d4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80235d8:	ea4c 0c03 	orr.w	ip, ip, r3
 80235dc:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 80235e0:	9311      	str	r3, [sp, #68]	; 0x44
 80235e2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80235e4:	041b      	lsls	r3, r3, #16
 80235e6:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 80235ea:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80235ee:	ea43 030b 	orr.w	r3, r3, fp
 80235f2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80235f4:	4353      	muls	r3, r2
 80235f6:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80235fa:	fb05 3c0c 	mla	ip, r5, ip, r3
 80235fe:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8023602:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8023606:	ea43 0b01 	orr.w	fp, r3, r1
 802360a:	f1c0 0110 	rsb	r1, r0, #16
 802360e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023610:	eba1 0e0e 	sub.w	lr, r1, lr
 8023614:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8023618:	fb0e cc0b 	mla	ip, lr, fp, ip
 802361c:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8023620:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8023624:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023628:	ea4b 0e0e 	orr.w	lr, fp, lr
 802362c:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8023630:	fb02 cc0e 	mla	ip, r2, lr, ip
 8023634:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8023638:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802363c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023640:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8023644:	ea43 0c0c 	orr.w	ip, r3, ip
 8023648:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802364a:	f82a cb02 	strh.w	ip, [sl], #2
 802364e:	441c      	add	r4, r3
 8023650:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023652:	f108 38ff 	add.w	r8, r8, #4294967295
 8023656:	441e      	add	r6, r3
 8023658:	e723      	b.n	80234a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 802365a:	2800      	cmp	r0, #0
 802365c:	d0b1      	beq.n	80235c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 802365e:	5cd3      	ldrb	r3, [r2, r3]
 8023660:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8023664:	930a      	str	r3, [sp, #40]	; 0x28
 8023666:	e7ac      	b.n	80235c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8023668:	b013      	add	sp, #76	; 0x4c
 802366a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802366e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 802366e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023672:	880d      	ldrh	r5, [r1, #0]
 8023674:	b087      	sub	sp, #28
 8023676:	10ef      	asrs	r7, r5, #3
 8023678:	ea4f 2a25 	mov.w	sl, r5, asr #8
 802367c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8023680:	00ed      	lsls	r5, r5, #3
 8023682:	9701      	str	r7, [sp, #4]
 8023684:	b2ed      	uxtb	r5, r5
 8023686:	9502      	str	r5, [sp, #8]
 8023688:	9d01      	ldr	r5, [sp, #4]
 802368a:	9103      	str	r1, [sp, #12]
 802368c:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 8023690:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 8023694:	9902      	ldr	r1, [sp, #8]
 8023696:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 802369a:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 802369e:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 80236a2:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 80236a6:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 80236aa:	022d      	lsls	r5, r5, #8
 80236ac:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 80236b0:	fb06 0709 	mla	r7, r6, r9, r0
 80236b4:	430d      	orrs	r5, r1
 80236b6:	2e00      	cmp	r6, #0
 80236b8:	eb02 0c07 	add.w	ip, r2, r7
 80236bc:	9505      	str	r5, [sp, #20]
 80236be:	f2c0 80b6 	blt.w	802382e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 80236c2:	45b3      	cmp	fp, r6
 80236c4:	f340 80b3 	ble.w	802382e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 80236c8:	2800      	cmp	r0, #0
 80236ca:	f2c0 80ae 	blt.w	802382a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 80236ce:	4581      	cmp	r9, r0
 80236d0:	f340 80ab 	ble.w	802382a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 80236d4:	5dd7      	ldrb	r7, [r2, r7]
 80236d6:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80236da:	441f      	add	r7, r3
 80236dc:	1c42      	adds	r2, r0, #1
 80236de:	f100 80a9 	bmi.w	8023834 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80236e2:	4591      	cmp	r9, r2
 80236e4:	f340 80a6 	ble.w	8023834 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80236e8:	2c00      	cmp	r4, #0
 80236ea:	f000 80a3 	beq.w	8023834 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80236ee:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80236f2:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80236f6:	441d      	add	r5, r3
 80236f8:	3601      	adds	r6, #1
 80236fa:	f100 809f 	bmi.w	802383c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80236fe:	45b3      	cmp	fp, r6
 8023700:	f340 809c 	ble.w	802383c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8023704:	f1be 0f00 	cmp.w	lr, #0
 8023708:	f000 8098 	beq.w	802383c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 802370c:	2800      	cmp	r0, #0
 802370e:	f2c0 8093 	blt.w	8023838 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8023712:	4581      	cmp	r9, r0
 8023714:	f340 8090 	ble.w	8023838 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8023718:	f81c 6009 	ldrb.w	r6, [ip, r9]
 802371c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8023720:	441e      	add	r6, r3
 8023722:	3001      	adds	r0, #1
 8023724:	f100 808d 	bmi.w	8023842 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8023728:	4581      	cmp	r9, r0
 802372a:	f340 808a 	ble.w	8023842 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 802372e:	2c00      	cmp	r4, #0
 8023730:	f000 8087 	beq.w	8023842 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8023734:	44e1      	add	r9, ip
 8023736:	f899 2001 	ldrb.w	r2, [r9, #1]
 802373a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802373e:	4413      	add	r3, r2
 8023740:	b2a4      	uxth	r4, r4
 8023742:	fa1f fe8e 	uxth.w	lr, lr
 8023746:	fb04 fb0e 	mul.w	fp, r4, lr
 802374a:	0124      	lsls	r4, r4, #4
 802374c:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8023750:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 8023754:	eba4 040b 	sub.w	r4, r4, fp
 8023758:	fa1f f08e 	uxth.w	r0, lr
 802375c:	b2a2      	uxth	r2, r4
 802375e:	78ac      	ldrb	r4, [r5, #2]
 8023760:	f897 c002 	ldrb.w	ip, [r7, #2]
 8023764:	9901      	ldr	r1, [sp, #4]
 8023766:	eba9 0900 	sub.w	r9, r9, r0
 802376a:	fa1f f989 	uxth.w	r9, r9
 802376e:	4354      	muls	r4, r2
 8023770:	fb09 440c 	mla	r4, r9, ip, r4
 8023774:	f896 c002 	ldrb.w	ip, [r6, #2]
 8023778:	fb00 440c 	mla	r4, r0, ip, r4
 802377c:	f893 c002 	ldrb.w	ip, [r3, #2]
 8023780:	fa1f fe88 	uxth.w	lr, r8
 8023784:	ea6f 0808 	mvn.w	r8, r8
 8023788:	fa5f f888 	uxtb.w	r8, r8
 802378c:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8023790:	fb1a fa08 	smulbb	sl, sl, r8
 8023794:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8023798:	fb0c ac0e 	mla	ip, ip, lr, sl
 802379c:	f895 a001 	ldrb.w	sl, [r5, #1]
 80237a0:	787c      	ldrb	r4, [r7, #1]
 80237a2:	782d      	ldrb	r5, [r5, #0]
 80237a4:	783f      	ldrb	r7, [r7, #0]
 80237a6:	fb02 fa0a 	mul.w	sl, r2, sl
 80237aa:	fb09 aa04 	mla	sl, r9, r4, sl
 80237ae:	7874      	ldrb	r4, [r6, #1]
 80237b0:	436a      	muls	r2, r5
 80237b2:	7835      	ldrb	r5, [r6, #0]
 80237b4:	fb00 aa04 	mla	sl, r0, r4, sl
 80237b8:	fb09 2207 	mla	r2, r9, r7, r2
 80237bc:	785c      	ldrb	r4, [r3, #1]
 80237be:	781b      	ldrb	r3, [r3, #0]
 80237c0:	fb00 2005 	mla	r0, r0, r5, r2
 80237c4:	fb0b a404 	mla	r4, fp, r4, sl
 80237c8:	fb0b 0b03 	mla	fp, fp, r3, r0
 80237cc:	9b02      	ldr	r3, [sp, #8]
 80237ce:	fb11 fa08 	smulbb	sl, r1, r8
 80237d2:	fa1f fc8c 	uxth.w	ip, ip
 80237d6:	fb13 f808 	smulbb	r8, r3, r8
 80237da:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 80237de:	f3c4 2407 	ubfx	r4, r4, #8, #8
 80237e2:	fb04 a40e 	mla	r4, r4, lr, sl
 80237e6:	f10c 0301 	add.w	r3, ip, #1
 80237ea:	fb0b 8e0e 	mla	lr, fp, lr, r8
 80237ee:	fa1f fe8e 	uxth.w	lr, lr
 80237f2:	b2a4      	uxth	r4, r4
 80237f4:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80237f8:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 80237fc:	f104 0a01 	add.w	sl, r4, #1
 8023800:	f10e 0c01 	add.w	ip, lr, #1
 8023804:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8023808:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 802380c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8023810:	0964      	lsrs	r4, r4, #5
 8023812:	ea4c 0c03 	orr.w	ip, ip, r3
 8023816:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802381a:	9b03      	ldr	r3, [sp, #12]
 802381c:	ea4c 0c04 	orr.w	ip, ip, r4
 8023820:	f8a3 c000 	strh.w	ip, [r3]
 8023824:	b007      	add	sp, #28
 8023826:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802382a:	af05      	add	r7, sp, #20
 802382c:	e756      	b.n	80236dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 802382e:	ad05      	add	r5, sp, #20
 8023830:	462f      	mov	r7, r5
 8023832:	e761      	b.n	80236f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8023834:	ad05      	add	r5, sp, #20
 8023836:	e75f      	b.n	80236f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8023838:	ae05      	add	r6, sp, #20
 802383a:	e772      	b.n	8023722 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 802383c:	ab05      	add	r3, sp, #20
 802383e:	461e      	mov	r6, r3
 8023840:	e77e      	b.n	8023740 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 8023842:	ab05      	add	r3, sp, #20
 8023844:	e77c      	b.n	8023740 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

08023846 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023846:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802384a:	b095      	sub	sp, #84	; 0x54
 802384c:	9212      	str	r2, [sp, #72]	; 0x48
 802384e:	9309      	str	r3, [sp, #36]	; 0x24
 8023850:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8023852:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 8023856:	930f      	str	r3, [sp, #60]	; 0x3c
 8023858:	910e      	str	r1, [sp, #56]	; 0x38
 802385a:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 802385e:	9013      	str	r0, [sp, #76]	; 0x4c
 8023860:	6850      	ldr	r0, [r2, #4]
 8023862:	6812      	ldr	r2, [r2, #0]
 8023864:	fb00 1303 	mla	r3, r0, r3, r1
 8023868:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802386c:	930a      	str	r3, [sp, #40]	; 0x28
 802386e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023870:	681b      	ldr	r3, [r3, #0]
 8023872:	930d      	str	r3, [sp, #52]	; 0x34
 8023874:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023876:	685c      	ldr	r4, [r3, #4]
 8023878:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802387a:	43db      	mvns	r3, r3
 802387c:	b2db      	uxtb	r3, r3
 802387e:	3404      	adds	r4, #4
 8023880:	930b      	str	r3, [sp, #44]	; 0x2c
 8023882:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023884:	2b00      	cmp	r3, #0
 8023886:	dc03      	bgt.n	8023890 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8023888:	9b12      	ldr	r3, [sp, #72]	; 0x48
 802388a:	2b00      	cmp	r3, #0
 802388c:	f340 8255 	ble.w	8023d3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8023890:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023892:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023896:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802389a:	1e48      	subs	r0, r1, #1
 802389c:	1e55      	subs	r5, r2, #1
 802389e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80238a0:	2b00      	cmp	r3, #0
 80238a2:	f340 80f9 	ble.w	8023a98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80238a6:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 80238a8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80238aa:	1436      	asrs	r6, r6, #16
 80238ac:	ea4f 4323 	mov.w	r3, r3, asr #16
 80238b0:	d406      	bmi.n	80238c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80238b2:	4286      	cmp	r6, r0
 80238b4:	da04      	bge.n	80238c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80238b6:	2b00      	cmp	r3, #0
 80238b8:	db02      	blt.n	80238c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80238ba:	42ab      	cmp	r3, r5
 80238bc:	f2c0 80ed 	blt.w	8023a9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 80238c0:	3601      	adds	r6, #1
 80238c2:	f100 80da 	bmi.w	8023a7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80238c6:	42b1      	cmp	r1, r6
 80238c8:	f2c0 80d7 	blt.w	8023a7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80238cc:	3301      	adds	r3, #1
 80238ce:	f100 80d4 	bmi.w	8023a7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80238d2:	429a      	cmp	r2, r3
 80238d4:	f2c0 80d1 	blt.w	8023a7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80238d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80238da:	9311      	str	r3, [sp, #68]	; 0x44
 80238dc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80238de:	930c      	str	r3, [sp, #48]	; 0x30
 80238e0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80238e2:	2b00      	cmp	r3, #0
 80238e4:	f340 80fa 	ble.w	8023adc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 80238e8:	9826      	ldr	r0, [sp, #152]	; 0x98
 80238ea:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80238ec:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80238ee:	68c6      	ldr	r6, [r0, #12]
 80238f0:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80238f2:	141d      	asrs	r5, r3, #16
 80238f4:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80238f8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80238fa:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80238fc:	1400      	asrs	r0, r0, #16
 80238fe:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8023902:	6892      	ldr	r2, [r2, #8]
 8023904:	f100 813e 	bmi.w	8023b84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8023908:	1e57      	subs	r7, r2, #1
 802390a:	42b8      	cmp	r0, r7
 802390c:	f280 813a 	bge.w	8023b84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8023910:	2d00      	cmp	r5, #0
 8023912:	f2c0 8137 	blt.w	8023b84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8023916:	1e77      	subs	r7, r6, #1
 8023918:	42bd      	cmp	r5, r7
 802391a:	f280 8133 	bge.w	8023b84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 802391e:	b212      	sxth	r2, r2
 8023920:	fb05 0002 	mla	r0, r5, r2, r0
 8023924:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023926:	f815 a000 	ldrb.w	sl, [r5, r0]
 802392a:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 802392e:	182e      	adds	r6, r5, r0
 8023930:	eb04 050a 	add.w	r5, r4, sl
 8023934:	2b00      	cmp	r3, #0
 8023936:	f000 8117 	beq.w	8023b68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 802393a:	f896 c001 	ldrb.w	ip, [r6, #1]
 802393e:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8023942:	44a4      	add	ip, r4
 8023944:	2900      	cmp	r1, #0
 8023946:	f000 8117 	beq.w	8023b78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 802394a:	18b0      	adds	r0, r6, r2
 802394c:	5cb2      	ldrb	r2, [r6, r2]
 802394e:	7840      	ldrb	r0, [r0, #1]
 8023950:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023954:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8023958:	4422      	add	r2, r4
 802395a:	4420      	add	r0, r4
 802395c:	b29b      	uxth	r3, r3
 802395e:	b289      	uxth	r1, r1
 8023960:	fb03 f901 	mul.w	r9, r3, r1
 8023964:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8023968:	011b      	lsls	r3, r3, #4
 802396a:	b289      	uxth	r1, r1
 802396c:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8023970:	f895 b002 	ldrb.w	fp, [r5, #2]
 8023974:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8023976:	f814 a00a 	ldrb.w	sl, [r4, sl]
 802397a:	f8b6 e000 	ldrh.w	lr, [r6]
 802397e:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 8023982:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 8023986:	eba3 0309 	sub.w	r3, r3, r9
 802398a:	b29b      	uxth	r3, r3
 802398c:	eba8 0801 	sub.w	r8, r8, r1
 8023990:	fa1f f888 	uxth.w	r8, r8
 8023994:	435f      	muls	r7, r3
 8023996:	fb08 770b 	mla	r7, r8, fp, r7
 802399a:	f892 b002 	ldrb.w	fp, [r2, #2]
 802399e:	9310      	str	r3, [sp, #64]	; 0x40
 80239a0:	fb01 770b 	mla	r7, r1, fp, r7
 80239a4:	f890 b002 	ldrb.w	fp, [r0, #2]
 80239a8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80239aa:	fb09 770b 	mla	r7, r9, fp, r7
 80239ae:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 80239b2:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 80239b6:	fb1b fb03 	smulbb	fp, fp, r3
 80239ba:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80239be:	fb07 b706 	mla	r7, r7, r6, fp
 80239c2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80239c4:	f895 b001 	ldrb.w	fp, [r5, #1]
 80239c8:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80239cc:	f89c c000 	ldrb.w	ip, [ip]
 80239d0:	435d      	muls	r5, r3
 80239d2:	fb08 550b 	mla	r5, r8, fp, r5
 80239d6:	f892 b001 	ldrb.w	fp, [r2, #1]
 80239da:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80239dc:	fb01 550b 	mla	r5, r1, fp, r5
 80239e0:	f890 b001 	ldrb.w	fp, [r0, #1]
 80239e4:	fb09 550b 	mla	r5, r9, fp, r5
 80239e8:	ea4f 0bee 	mov.w	fp, lr, asr #3
 80239ec:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80239f0:	fb1b fb03 	smulbb	fp, fp, r3
 80239f4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80239f6:	fb03 f30c 	mul.w	r3, r3, ip
 80239fa:	f892 c000 	ldrb.w	ip, [r2]
 80239fe:	fb08 330a 	mla	r3, r8, sl, r3
 8023a02:	fb01 330c 	mla	r3, r1, ip, r3
 8023a06:	f890 c000 	ldrb.w	ip, [r0]
 8023a0a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8023a0e:	fb09 3c0c 	mla	ip, r9, ip, r3
 8023a12:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023a14:	fa5f fe8e 	uxtb.w	lr, lr
 8023a18:	b2bf      	uxth	r7, r7
 8023a1a:	fb1e fe03 	smulbb	lr, lr, r3
 8023a1e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8023a22:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8023a26:	fb05 b506 	mla	r5, r5, r6, fp
 8023a2a:	1c7b      	adds	r3, r7, #1
 8023a2c:	fb0c e606 	mla	r6, ip, r6, lr
 8023a30:	b2ad      	uxth	r5, r5
 8023a32:	b2b6      	uxth	r6, r6
 8023a34:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8023a38:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 8023a3c:	f105 0b01 	add.w	fp, r5, #1
 8023a40:	1c77      	adds	r7, r6, #1
 8023a42:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8023a46:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8023a4a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8023a4e:	096d      	lsrs	r5, r5, #5
 8023a50:	431f      	orrs	r7, r3
 8023a52:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023a56:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023a58:	433d      	orrs	r5, r7
 8023a5a:	801d      	strh	r5, [r3, #0]
 8023a5c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023a5e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8023a60:	3302      	adds	r3, #2
 8023a62:	930c      	str	r3, [sp, #48]	; 0x30
 8023a64:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023a66:	4413      	add	r3, r2
 8023a68:	931f      	str	r3, [sp, #124]	; 0x7c
 8023a6a:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8023a6c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023a6e:	4413      	add	r3, r2
 8023a70:	9320      	str	r3, [sp, #128]	; 0x80
 8023a72:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8023a74:	3b01      	subs	r3, #1
 8023a76:	9311      	str	r3, [sp, #68]	; 0x44
 8023a78:	e732      	b.n	80238e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8023a7a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023a7c:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8023a7e:	4433      	add	r3, r6
 8023a80:	931f      	str	r3, [sp, #124]	; 0x7c
 8023a82:	9e22      	ldr	r6, [sp, #136]	; 0x88
 8023a84:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023a86:	4433      	add	r3, r6
 8023a88:	9320      	str	r3, [sp, #128]	; 0x80
 8023a8a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023a8c:	3b01      	subs	r3, #1
 8023a8e:	9309      	str	r3, [sp, #36]	; 0x24
 8023a90:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023a92:	3302      	adds	r3, #2
 8023a94:	930a      	str	r3, [sp, #40]	; 0x28
 8023a96:	e702      	b.n	802389e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8023a98:	d027      	beq.n	8023aea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 8023a9a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023a9c:	9821      	ldr	r0, [sp, #132]	; 0x84
 8023a9e:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8023aa0:	3b01      	subs	r3, #1
 8023aa2:	fb00 5003 	mla	r0, r0, r3, r5
 8023aa6:	1400      	asrs	r0, r0, #16
 8023aa8:	f53f af16 	bmi.w	80238d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023aac:	3901      	subs	r1, #1
 8023aae:	4288      	cmp	r0, r1
 8023ab0:	f6bf af12 	bge.w	80238d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023ab4:	9922      	ldr	r1, [sp, #136]	; 0x88
 8023ab6:	9820      	ldr	r0, [sp, #128]	; 0x80
 8023ab8:	fb01 0303 	mla	r3, r1, r3, r0
 8023abc:	141b      	asrs	r3, r3, #16
 8023abe:	f53f af0b 	bmi.w	80238d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023ac2:	3a01      	subs	r2, #1
 8023ac4:	4293      	cmp	r3, r2
 8023ac6:	f6bf af07 	bge.w	80238d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023aca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023acc:	9311      	str	r3, [sp, #68]	; 0x44
 8023ace:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 8023ad2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023ad4:	930c      	str	r3, [sp, #48]	; 0x30
 8023ad6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8023ad8:	2b00      	cmp	r3, #0
 8023ada:	dc70      	bgt.n	8023bbe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8023adc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023ade:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8023ae0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8023ae4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023ae8:	930a      	str	r3, [sp, #40]	; 0x28
 8023aea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023aec:	2b00      	cmp	r3, #0
 8023aee:	f340 8124 	ble.w	8023d3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8023af2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023af6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023afa:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023afe:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023b00:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023b04:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023b08:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023b0c:	eef0 6a62 	vmov.f32	s13, s5
 8023b10:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023b14:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023b18:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023b1c:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8023b20:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023b24:	eef0 6a43 	vmov.f32	s13, s6
 8023b28:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023b2c:	ee12 2a90 	vmov	r2, s5
 8023b30:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023b34:	fb92 f3f3 	sdiv	r3, r2, r3
 8023b38:	ee13 2a10 	vmov	r2, s6
 8023b3c:	9321      	str	r3, [sp, #132]	; 0x84
 8023b3e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023b40:	fb92 f3f3 	sdiv	r3, r2, r3
 8023b44:	9322      	str	r3, [sp, #136]	; 0x88
 8023b46:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023b48:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8023b4a:	3b01      	subs	r3, #1
 8023b4c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023b50:	930e      	str	r3, [sp, #56]	; 0x38
 8023b52:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023b54:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 8023b58:	bf08      	it	eq
 8023b5a:	4613      	moveq	r3, r2
 8023b5c:	9309      	str	r3, [sp, #36]	; 0x24
 8023b5e:	eeb0 3a67 	vmov.f32	s6, s15
 8023b62:	eef0 2a47 	vmov.f32	s5, s14
 8023b66:	e68c      	b.n	8023882 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8023b68:	b149      	cbz	r1, 8023b7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 8023b6a:	5cb2      	ldrb	r2, [r6, r2]
 8023b6c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023b70:	4422      	add	r2, r4
 8023b72:	4628      	mov	r0, r5
 8023b74:	46ac      	mov	ip, r5
 8023b76:	e6f1      	b.n	802395c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8023b78:	4628      	mov	r0, r5
 8023b7a:	462a      	mov	r2, r5
 8023b7c:	e6ee      	b.n	802395c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8023b7e:	4628      	mov	r0, r5
 8023b80:	462a      	mov	r2, r5
 8023b82:	e7f7      	b.n	8023b74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 8023b84:	1c47      	adds	r7, r0, #1
 8023b86:	f53f af69 	bmi.w	8023a5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8023b8a:	42ba      	cmp	r2, r7
 8023b8c:	f6ff af66 	blt.w	8023a5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8023b90:	1c6f      	adds	r7, r5, #1
 8023b92:	f53f af63 	bmi.w	8023a5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8023b96:	42be      	cmp	r6, r7
 8023b98:	f6ff af60 	blt.w	8023a5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8023b9c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8023b9e:	9002      	str	r0, [sp, #8]
 8023ba0:	b236      	sxth	r6, r6
 8023ba2:	b212      	sxth	r2, r2
 8023ba4:	e9cd 1705 	strd	r1, r7, [sp, #20]
 8023ba8:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8023bac:	9200      	str	r2, [sp, #0]
 8023bae:	9601      	str	r6, [sp, #4]
 8023bb0:	4623      	mov	r3, r4
 8023bb2:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 8023bb6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8023bb8:	f7ff fd59 	bl	802366e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8023bbc:	e74e      	b.n	8023a5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8023bbe:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8023bc0:	9820      	ldr	r0, [sp, #128]	; 0x80
 8023bc2:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8023bc4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023bc6:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8023bca:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8023bcc:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8023bd0:	142d      	asrs	r5, r5, #16
 8023bd2:	1400      	asrs	r0, r0, #16
 8023bd4:	fb02 5000 	mla	r0, r2, r0, r5
 8023bd8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023bda:	f815 9000 	ldrb.w	r9, [r5, r0]
 8023bde:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8023be2:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8023be6:	182e      	adds	r6, r5, r0
 8023be8:	eb04 0509 	add.w	r5, r4, r9
 8023bec:	2b00      	cmp	r3, #0
 8023bee:	f000 8096 	beq.w	8023d1e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8023bf2:	7877      	ldrb	r7, [r6, #1]
 8023bf4:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8023bf8:	4427      	add	r7, r4
 8023bfa:	2900      	cmp	r1, #0
 8023bfc:	f000 8097 	beq.w	8023d2e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 8023c00:	18b0      	adds	r0, r6, r2
 8023c02:	5cb2      	ldrb	r2, [r6, r2]
 8023c04:	7840      	ldrb	r0, [r0, #1]
 8023c06:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023c0a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8023c0e:	4422      	add	r2, r4
 8023c10:	4420      	add	r0, r4
 8023c12:	b29b      	uxth	r3, r3
 8023c14:	b289      	uxth	r1, r1
 8023c16:	fb03 f801 	mul.w	r8, r3, r1
 8023c1a:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8023c1c:	f895 b002 	ldrb.w	fp, [r5, #2]
 8023c20:	f8b6 c000 	ldrh.w	ip, [r6]
 8023c24:	78be      	ldrb	r6, [r7, #2]
 8023c26:	f814 9009 	ldrb.w	r9, [r4, r9]
 8023c2a:	011b      	lsls	r3, r3, #4
 8023c2c:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8023c30:	b289      	uxth	r1, r1
 8023c32:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8023c36:	eba3 0308 	sub.w	r3, r3, r8
 8023c3a:	b29b      	uxth	r3, r3
 8023c3c:	ebae 0e01 	sub.w	lr, lr, r1
 8023c40:	fa1f fe8e 	uxth.w	lr, lr
 8023c44:	435e      	muls	r6, r3
 8023c46:	fb0e 660b 	mla	r6, lr, fp, r6
 8023c4a:	f892 b002 	ldrb.w	fp, [r2, #2]
 8023c4e:	9310      	str	r3, [sp, #64]	; 0x40
 8023c50:	fb01 660b 	mla	r6, r1, fp, r6
 8023c54:	f890 b002 	ldrb.w	fp, [r0, #2]
 8023c58:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023c5a:	fb08 660b 	mla	r6, r8, fp, r6
 8023c5e:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8023c62:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8023c66:	fb1b fb03 	smulbb	fp, fp, r3
 8023c6a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8023c6e:	fb06 b60a 	mla	r6, r6, sl, fp
 8023c72:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023c74:	f895 b001 	ldrb.w	fp, [r5, #1]
 8023c78:	787d      	ldrb	r5, [r7, #1]
 8023c7a:	783f      	ldrb	r7, [r7, #0]
 8023c7c:	435d      	muls	r5, r3
 8023c7e:	fb0e 550b 	mla	r5, lr, fp, r5
 8023c82:	f892 b001 	ldrb.w	fp, [r2, #1]
 8023c86:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023c88:	fb01 550b 	mla	r5, r1, fp, r5
 8023c8c:	f890 b001 	ldrb.w	fp, [r0, #1]
 8023c90:	fb08 550b 	mla	r5, r8, fp, r5
 8023c94:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8023c98:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8023c9c:	fb1b fb03 	smulbb	fp, fp, r3
 8023ca0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023ca2:	437b      	muls	r3, r7
 8023ca4:	7817      	ldrb	r7, [r2, #0]
 8023ca6:	fb0e 3309 	mla	r3, lr, r9, r3
 8023caa:	fb01 3307 	mla	r3, r1, r7, r3
 8023cae:	7807      	ldrb	r7, [r0, #0]
 8023cb0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8023cb4:	fb08 3707 	mla	r7, r8, r7, r3
 8023cb8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023cba:	fa5f fc8c 	uxtb.w	ip, ip
 8023cbe:	fb1c fc03 	smulbb	ip, ip, r3
 8023cc2:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8023cc6:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8023cca:	fb05 b50a 	mla	r5, r5, sl, fp
 8023cce:	fb07 c70a 	mla	r7, r7, sl, ip
 8023cd2:	b2b6      	uxth	r6, r6
 8023cd4:	b2ad      	uxth	r5, r5
 8023cd6:	b2bf      	uxth	r7, r7
 8023cd8:	1c73      	adds	r3, r6, #1
 8023cda:	1c7a      	adds	r2, r7, #1
 8023cdc:	f105 0b01 	add.w	fp, r5, #1
 8023ce0:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8023ce4:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8023ce8:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8023cec:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8023cf0:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8023cf4:	096d      	lsrs	r5, r5, #5
 8023cf6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023cf8:	4316      	orrs	r6, r2
 8023cfa:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023cfe:	432e      	orrs	r6, r5
 8023d00:	f823 6b02 	strh.w	r6, [r3], #2
 8023d04:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8023d06:	930c      	str	r3, [sp, #48]	; 0x30
 8023d08:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023d0a:	4413      	add	r3, r2
 8023d0c:	931f      	str	r3, [sp, #124]	; 0x7c
 8023d0e:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8023d10:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023d12:	4413      	add	r3, r2
 8023d14:	9320      	str	r3, [sp, #128]	; 0x80
 8023d16:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8023d18:	3b01      	subs	r3, #1
 8023d1a:	9311      	str	r3, [sp, #68]	; 0x44
 8023d1c:	e6db      	b.n	8023ad6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8023d1e:	b149      	cbz	r1, 8023d34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8023d20:	5cb2      	ldrb	r2, [r6, r2]
 8023d22:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023d26:	4422      	add	r2, r4
 8023d28:	4628      	mov	r0, r5
 8023d2a:	462f      	mov	r7, r5
 8023d2c:	e771      	b.n	8023c12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8023d2e:	4628      	mov	r0, r5
 8023d30:	462a      	mov	r2, r5
 8023d32:	e76e      	b.n	8023c12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8023d34:	4628      	mov	r0, r5
 8023d36:	462a      	mov	r2, r5
 8023d38:	e7f7      	b.n	8023d2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8023d3a:	b015      	add	sp, #84	; 0x54
 8023d3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023d40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8023d40:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023d44:	880f      	ldrh	r7, [r1, #0]
 8023d46:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 8023d4a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8023d4e:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 8023d52:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8023d56:	023c      	lsls	r4, r7, #8
 8023d58:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 8023d5c:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 8023d60:	017c      	lsls	r4, r7, #5
 8023d62:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 8023d66:	00ff      	lsls	r7, r7, #3
 8023d68:	ea4b 0404 	orr.w	r4, fp, r4
 8023d6c:	b2ff      	uxtb	r7, r7
 8023d6e:	fb05 ca0e 	mla	sl, r5, lr, ip
 8023d72:	4327      	orrs	r7, r4
 8023d74:	2d00      	cmp	r5, #0
 8023d76:	eb02 080a 	add.w	r8, r2, sl
 8023d7a:	9701      	str	r7, [sp, #4]
 8023d7c:	db7e      	blt.n	8023e7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8023d7e:	45a9      	cmp	r9, r5
 8023d80:	dd7c      	ble.n	8023e7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8023d82:	f1bc 0f00 	cmp.w	ip, #0
 8023d86:	db77      	blt.n	8023e78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8023d88:	45e6      	cmp	lr, ip
 8023d8a:	dd75      	ble.n	8023e78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8023d8c:	f812 700a 	ldrb.w	r7, [r2, sl]
 8023d90:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8023d94:	441f      	add	r7, r3
 8023d96:	f11c 0201 	adds.w	r2, ip, #1
 8023d9a:	d472      	bmi.n	8023e82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8023d9c:	4596      	cmp	lr, r2
 8023d9e:	dd70      	ble.n	8023e82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8023da0:	2800      	cmp	r0, #0
 8023da2:	d06e      	beq.n	8023e82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8023da4:	f898 4001 	ldrb.w	r4, [r8, #1]
 8023da8:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8023dac:	441c      	add	r4, r3
 8023dae:	3501      	adds	r5, #1
 8023db0:	d46b      	bmi.n	8023e8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8023db2:	45a9      	cmp	r9, r5
 8023db4:	dd69      	ble.n	8023e8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8023db6:	2e00      	cmp	r6, #0
 8023db8:	d067      	beq.n	8023e8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8023dba:	f1bc 0f00 	cmp.w	ip, #0
 8023dbe:	db62      	blt.n	8023e86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8023dc0:	45e6      	cmp	lr, ip
 8023dc2:	dd60      	ble.n	8023e86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8023dc4:	f818 500e 	ldrb.w	r5, [r8, lr]
 8023dc8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8023dcc:	441d      	add	r5, r3
 8023dce:	f11c 0201 	adds.w	r2, ip, #1
 8023dd2:	d45d      	bmi.n	8023e90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8023dd4:	4596      	cmp	lr, r2
 8023dd6:	dd5b      	ble.n	8023e90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8023dd8:	2800      	cmp	r0, #0
 8023dda:	d059      	beq.n	8023e90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8023ddc:	44c6      	add	lr, r8
 8023dde:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8023de2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023de6:	4413      	add	r3, r2
 8023de8:	b280      	uxth	r0, r0
 8023dea:	b2b2      	uxth	r2, r6
 8023dec:	fb00 f602 	mul.w	r6, r0, r2
 8023df0:	0100      	lsls	r0, r0, #4
 8023df2:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 8023df6:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 8023dfa:	1b80      	subs	r0, r0, r6
 8023dfc:	fa1f fc82 	uxth.w	ip, r2
 8023e00:	b282      	uxth	r2, r0
 8023e02:	78a0      	ldrb	r0, [r4, #2]
 8023e04:	f897 e002 	ldrb.w	lr, [r7, #2]
 8023e08:	f897 9000 	ldrb.w	r9, [r7]
 8023e0c:	787f      	ldrb	r7, [r7, #1]
 8023e0e:	eba8 080c 	sub.w	r8, r8, ip
 8023e12:	fa1f f888 	uxth.w	r8, r8
 8023e16:	4350      	muls	r0, r2
 8023e18:	fb08 0e0e 	mla	lr, r8, lr, r0
 8023e1c:	78a8      	ldrb	r0, [r5, #2]
 8023e1e:	fb0c e000 	mla	r0, ip, r0, lr
 8023e22:	f893 e002 	ldrb.w	lr, [r3, #2]
 8023e26:	fb06 0e0e 	mla	lr, r6, lr, r0
 8023e2a:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 8023e2e:	f894 e000 	ldrb.w	lr, [r4]
 8023e32:	fb02 fe0e 	mul.w	lr, r2, lr
 8023e36:	fb08 e909 	mla	r9, r8, r9, lr
 8023e3a:	f895 e000 	ldrb.w	lr, [r5]
 8023e3e:	fb0c 990e 	mla	r9, ip, lr, r9
 8023e42:	f893 e000 	ldrb.w	lr, [r3]
 8023e46:	785b      	ldrb	r3, [r3, #1]
 8023e48:	fb06 9e0e 	mla	lr, r6, lr, r9
 8023e4c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8023e50:	ea4e 0e00 	orr.w	lr, lr, r0
 8023e54:	7860      	ldrb	r0, [r4, #1]
 8023e56:	4350      	muls	r0, r2
 8023e58:	786a      	ldrb	r2, [r5, #1]
 8023e5a:	fb08 0007 	mla	r0, r8, r7, r0
 8023e5e:	fb0c 0202 	mla	r2, ip, r2, r0
 8023e62:	fb06 2303 	mla	r3, r6, r3, r2
 8023e66:	095b      	lsrs	r3, r3, #5
 8023e68:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023e6c:	ea4e 0303 	orr.w	r3, lr, r3
 8023e70:	800b      	strh	r3, [r1, #0]
 8023e72:	b003      	add	sp, #12
 8023e74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023e78:	af01      	add	r7, sp, #4
 8023e7a:	e78c      	b.n	8023d96 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 8023e7c:	ac01      	add	r4, sp, #4
 8023e7e:	4627      	mov	r7, r4
 8023e80:	e795      	b.n	8023dae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8023e82:	ac01      	add	r4, sp, #4
 8023e84:	e793      	b.n	8023dae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8023e86:	ad01      	add	r5, sp, #4
 8023e88:	e7a1      	b.n	8023dce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 8023e8a:	ab01      	add	r3, sp, #4
 8023e8c:	461d      	mov	r5, r3
 8023e8e:	e7ab      	b.n	8023de8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 8023e90:	ab01      	add	r3, sp, #4
 8023e92:	e7a9      	b.n	8023de8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

08023e94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023e94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023e98:	b08f      	sub	sp, #60	; 0x3c
 8023e9a:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 8023e9e:	920c      	str	r2, [sp, #48]	; 0x30
 8023ea0:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8023ea2:	910a      	str	r1, [sp, #40]	; 0x28
 8023ea4:	9306      	str	r3, [sp, #24]
 8023ea6:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 8023eaa:	900d      	str	r0, [sp, #52]	; 0x34
 8023eac:	6850      	ldr	r0, [r2, #4]
 8023eae:	6812      	ldr	r2, [r2, #0]
 8023eb0:	fb00 1303 	mla	r3, r0, r3, r1
 8023eb4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023eb8:	9307      	str	r3, [sp, #28]
 8023eba:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023ebc:	681b      	ldr	r3, [r3, #0]
 8023ebe:	9308      	str	r3, [sp, #32]
 8023ec0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023ec2:	685c      	ldr	r4, [r3, #4]
 8023ec4:	3404      	adds	r4, #4
 8023ec6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023ec8:	2b00      	cmp	r3, #0
 8023eca:	dc03      	bgt.n	8023ed4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8023ecc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023ece:	2b00      	cmp	r3, #0
 8023ed0:	f340 81d6 	ble.w	8024280 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8023ed4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023ed6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023eda:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023ede:	1e48      	subs	r0, r1, #1
 8023ee0:	1e56      	subs	r6, r2, #1
 8023ee2:	9b06      	ldr	r3, [sp, #24]
 8023ee4:	2b00      	cmp	r3, #0
 8023ee6:	f340 80b7 	ble.w	8024058 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 8023eea:	ea5f 472b 	movs.w	r7, fp, asr #16
 8023eee:	ea4f 4325 	mov.w	r3, r5, asr #16
 8023ef2:	d406      	bmi.n	8023f02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8023ef4:	4287      	cmp	r7, r0
 8023ef6:	da04      	bge.n	8023f02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8023ef8:	2b00      	cmp	r3, #0
 8023efa:	db02      	blt.n	8023f02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8023efc:	42b3      	cmp	r3, r6
 8023efe:	f2c0 80ac 	blt.w	802405a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8023f02:	3701      	adds	r7, #1
 8023f04:	f100 809d 	bmi.w	8024042 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8023f08:	42b9      	cmp	r1, r7
 8023f0a:	f2c0 809a 	blt.w	8024042 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8023f0e:	3301      	adds	r3, #1
 8023f10:	f100 8097 	bmi.w	8024042 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8023f14:	429a      	cmp	r2, r3
 8023f16:	f2c0 8094 	blt.w	8024042 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8023f1a:	9b06      	ldr	r3, [sp, #24]
 8023f1c:	930b      	str	r3, [sp, #44]	; 0x2c
 8023f1e:	9b07      	ldr	r3, [sp, #28]
 8023f20:	9309      	str	r3, [sp, #36]	; 0x24
 8023f22:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023f24:	2b00      	cmp	r3, #0
 8023f26:	f340 80b5 	ble.w	8024094 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8023f2a:	9820      	ldr	r0, [sp, #128]	; 0x80
 8023f2c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8023f2e:	68c7      	ldr	r7, [r0, #12]
 8023f30:	6892      	ldr	r2, [r2, #8]
 8023f32:	ea5f 402b 	movs.w	r0, fp, asr #16
 8023f36:	ea4f 4625 	mov.w	r6, r5, asr #16
 8023f3a:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8023f3e:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8023f42:	f100 80fb 	bmi.w	802413c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8023f46:	f102 3cff 	add.w	ip, r2, #4294967295
 8023f4a:	4560      	cmp	r0, ip
 8023f4c:	f280 80f6 	bge.w	802413c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8023f50:	2e00      	cmp	r6, #0
 8023f52:	f2c0 80f3 	blt.w	802413c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8023f56:	f107 3cff 	add.w	ip, r7, #4294967295
 8023f5a:	4566      	cmp	r6, ip
 8023f5c:	f280 80ee 	bge.w	802413c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8023f60:	b212      	sxth	r2, r2
 8023f62:	fb06 0002 	mla	r0, r6, r2, r0
 8023f66:	9e08      	ldr	r6, [sp, #32]
 8023f68:	1837      	adds	r7, r6, r0
 8023f6a:	5c30      	ldrb	r0, [r6, r0]
 8023f6c:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8023f70:	eb04 0c08 	add.w	ip, r4, r8
 8023f74:	2b00      	cmp	r3, #0
 8023f76:	f000 80d3 	beq.w	8024120 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8023f7a:	787e      	ldrb	r6, [r7, #1]
 8023f7c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8023f80:	4426      	add	r6, r4
 8023f82:	2900      	cmp	r1, #0
 8023f84:	f000 80d4 	beq.w	8024130 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8023f88:	18b8      	adds	r0, r7, r2
 8023f8a:	5cba      	ldrb	r2, [r7, r2]
 8023f8c:	7840      	ldrb	r0, [r0, #1]
 8023f8e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023f92:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8023f96:	4422      	add	r2, r4
 8023f98:	4420      	add	r0, r4
 8023f9a:	b29b      	uxth	r3, r3
 8023f9c:	b289      	uxth	r1, r1
 8023f9e:	fb03 f901 	mul.w	r9, r3, r1
 8023fa2:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8023fa6:	011b      	lsls	r3, r3, #4
 8023fa8:	b289      	uxth	r1, r1
 8023faa:	78b7      	ldrb	r7, [r6, #2]
 8023fac:	f89c a002 	ldrb.w	sl, [ip, #2]
 8023fb0:	f89c c001 	ldrb.w	ip, [ip, #1]
 8023fb4:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8023fb8:	eba3 0309 	sub.w	r3, r3, r9
 8023fbc:	b29b      	uxth	r3, r3
 8023fbe:	ebae 0e01 	sub.w	lr, lr, r1
 8023fc2:	fa1f fe8e 	uxth.w	lr, lr
 8023fc6:	435f      	muls	r7, r3
 8023fc8:	fb0e 770a 	mla	r7, lr, sl, r7
 8023fcc:	f892 a002 	ldrb.w	sl, [r2, #2]
 8023fd0:	fb01 770a 	mla	r7, r1, sl, r7
 8023fd4:	f890 a002 	ldrb.w	sl, [r0, #2]
 8023fd8:	fb09 7a0a 	mla	sl, r9, sl, r7
 8023fdc:	f814 7008 	ldrb.w	r7, [r4, r8]
 8023fe0:	f896 8000 	ldrb.w	r8, [r6]
 8023fe4:	7876      	ldrb	r6, [r6, #1]
 8023fe6:	fb03 f808 	mul.w	r8, r3, r8
 8023fea:	fb0e 8807 	mla	r8, lr, r7, r8
 8023fee:	7817      	ldrb	r7, [r2, #0]
 8023ff0:	fb01 8807 	mla	r8, r1, r7, r8
 8023ff4:	7807      	ldrb	r7, [r0, #0]
 8023ff6:	fb09 8707 	mla	r7, r9, r7, r8
 8023ffa:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8023ffe:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8024002:	ea47 070a 	orr.w	r7, r7, sl
 8024006:	4373      	muls	r3, r6
 8024008:	f892 a001 	ldrb.w	sl, [r2, #1]
 802400c:	fb0e 330c 	mla	r3, lr, ip, r3
 8024010:	fb01 310a 	mla	r1, r1, sl, r3
 8024014:	f890 a001 	ldrb.w	sl, [r0, #1]
 8024018:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802401a:	fb09 1a0a 	mla	sl, r9, sl, r1
 802401e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8024022:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8024026:	ea47 070a 	orr.w	r7, r7, sl
 802402a:	801f      	strh	r7, [r3, #0]
 802402c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802402e:	3302      	adds	r3, #2
 8024030:	9309      	str	r3, [sp, #36]	; 0x24
 8024032:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8024034:	449b      	add	fp, r3
 8024036:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024038:	441d      	add	r5, r3
 802403a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802403c:	3b01      	subs	r3, #1
 802403e:	930b      	str	r3, [sp, #44]	; 0x2c
 8024040:	e76f      	b.n	8023f22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8024042:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8024044:	449b      	add	fp, r3
 8024046:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024048:	441d      	add	r5, r3
 802404a:	9b06      	ldr	r3, [sp, #24]
 802404c:	3b01      	subs	r3, #1
 802404e:	9306      	str	r3, [sp, #24]
 8024050:	9b07      	ldr	r3, [sp, #28]
 8024052:	3302      	adds	r3, #2
 8024054:	9307      	str	r3, [sp, #28]
 8024056:	e744      	b.n	8023ee2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8024058:	d023      	beq.n	80240a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 802405a:	9b06      	ldr	r3, [sp, #24]
 802405c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 802405e:	3b01      	subs	r3, #1
 8024060:	fb00 b003 	mla	r0, r0, r3, fp
 8024064:	1400      	asrs	r0, r0, #16
 8024066:	f53f af58 	bmi.w	8023f1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 802406a:	3901      	subs	r1, #1
 802406c:	4288      	cmp	r0, r1
 802406e:	f6bf af54 	bge.w	8023f1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8024072:	991c      	ldr	r1, [sp, #112]	; 0x70
 8024074:	fb01 5303 	mla	r3, r1, r3, r5
 8024078:	141b      	asrs	r3, r3, #16
 802407a:	f53f af4e 	bmi.w	8023f1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 802407e:	3a01      	subs	r2, #1
 8024080:	4293      	cmp	r3, r2
 8024082:	f6bf af4a 	bge.w	8023f1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8024086:	9b06      	ldr	r3, [sp, #24]
 8024088:	9309      	str	r3, [sp, #36]	; 0x24
 802408a:	9b07      	ldr	r3, [sp, #28]
 802408c:	930b      	str	r3, [sp, #44]	; 0x2c
 802408e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024090:	2b00      	cmp	r3, #0
 8024092:	dc70      	bgt.n	8024176 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8024094:	9b06      	ldr	r3, [sp, #24]
 8024096:	9a07      	ldr	r2, [sp, #28]
 8024098:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802409c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80240a0:	9307      	str	r3, [sp, #28]
 80240a2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80240a4:	2b00      	cmp	r3, #0
 80240a6:	f340 80eb 	ble.w	8024280 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 80240aa:	ee30 0a04 	vadd.f32	s0, s0, s8
 80240ae:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80240b2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80240b6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80240b8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80240bc:	ee31 1a05 	vadd.f32	s2, s2, s10
 80240c0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80240c4:	eef0 6a62 	vmov.f32	s13, s5
 80240c8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80240cc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80240d0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80240d4:	ee16 ba90 	vmov	fp, s13
 80240d8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80240dc:	eef0 6a43 	vmov.f32	s13, s6
 80240e0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80240e4:	ee12 2a90 	vmov	r2, s5
 80240e8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80240ec:	fb92 f3f3 	sdiv	r3, r2, r3
 80240f0:	ee13 2a10 	vmov	r2, s6
 80240f4:	931b      	str	r3, [sp, #108]	; 0x6c
 80240f6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80240f8:	fb92 f3f3 	sdiv	r3, r2, r3
 80240fc:	931c      	str	r3, [sp, #112]	; 0x70
 80240fe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024100:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8024102:	3b01      	subs	r3, #1
 8024104:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024108:	930a      	str	r3, [sp, #40]	; 0x28
 802410a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802410c:	bf08      	it	eq
 802410e:	4613      	moveq	r3, r2
 8024110:	ee16 5a90 	vmov	r5, s13
 8024114:	9306      	str	r3, [sp, #24]
 8024116:	eeb0 3a67 	vmov.f32	s6, s15
 802411a:	eef0 2a47 	vmov.f32	s5, s14
 802411e:	e6d2      	b.n	8023ec6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8024120:	b149      	cbz	r1, 8024136 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8024122:	5cba      	ldrb	r2, [r7, r2]
 8024124:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8024128:	4422      	add	r2, r4
 802412a:	4660      	mov	r0, ip
 802412c:	4666      	mov	r6, ip
 802412e:	e734      	b.n	8023f9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8024130:	4660      	mov	r0, ip
 8024132:	4662      	mov	r2, ip
 8024134:	e731      	b.n	8023f9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8024136:	4660      	mov	r0, ip
 8024138:	4662      	mov	r2, ip
 802413a:	e7f7      	b.n	802412c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 802413c:	f110 0c01 	adds.w	ip, r0, #1
 8024140:	f53f af74 	bmi.w	802402c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8024144:	4562      	cmp	r2, ip
 8024146:	f6ff af71 	blt.w	802402c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802414a:	f116 0c01 	adds.w	ip, r6, #1
 802414e:	f53f af6d 	bmi.w	802402c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8024152:	4567      	cmp	r7, ip
 8024154:	f6ff af6a 	blt.w	802402c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8024158:	b23f      	sxth	r7, r7
 802415a:	b212      	sxth	r2, r2
 802415c:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8024160:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8024164:	9200      	str	r2, [sp, #0]
 8024166:	9701      	str	r7, [sp, #4]
 8024168:	4623      	mov	r3, r4
 802416a:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 802416e:	980d      	ldr	r0, [sp, #52]	; 0x34
 8024170:	f7ff fde6 	bl	8023d40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8024174:	e75a      	b.n	802402c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8024176:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8024178:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 802417c:	ea4f 462b 	mov.w	r6, fp, asr #16
 8024180:	1428      	asrs	r0, r5, #16
 8024182:	fb02 6000 	mla	r0, r2, r0, r6
 8024186:	9e08      	ldr	r6, [sp, #32]
 8024188:	f816 8000 	ldrb.w	r8, [r6, r0]
 802418c:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8024190:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8024194:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8024198:	1837      	adds	r7, r6, r0
 802419a:	eb04 0c08 	add.w	ip, r4, r8
 802419e:	2b00      	cmp	r3, #0
 80241a0:	d060      	beq.n	8024264 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 80241a2:	787e      	ldrb	r6, [r7, #1]
 80241a4:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80241a8:	4426      	add	r6, r4
 80241aa:	2900      	cmp	r1, #0
 80241ac:	d062      	beq.n	8024274 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 80241ae:	18b8      	adds	r0, r7, r2
 80241b0:	5cba      	ldrb	r2, [r7, r2]
 80241b2:	7840      	ldrb	r0, [r0, #1]
 80241b4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80241b8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80241bc:	4422      	add	r2, r4
 80241be:	4420      	add	r0, r4
 80241c0:	b29b      	uxth	r3, r3
 80241c2:	b289      	uxth	r1, r1
 80241c4:	fb03 f901 	mul.w	r9, r3, r1
 80241c8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80241cc:	011b      	lsls	r3, r3, #4
 80241ce:	b289      	uxth	r1, r1
 80241d0:	78b7      	ldrb	r7, [r6, #2]
 80241d2:	f89c a002 	ldrb.w	sl, [ip, #2]
 80241d6:	f89c c001 	ldrb.w	ip, [ip, #1]
 80241da:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80241de:	eba3 0309 	sub.w	r3, r3, r9
 80241e2:	b29b      	uxth	r3, r3
 80241e4:	ebae 0e01 	sub.w	lr, lr, r1
 80241e8:	fa1f fe8e 	uxth.w	lr, lr
 80241ec:	435f      	muls	r7, r3
 80241ee:	fb0e 770a 	mla	r7, lr, sl, r7
 80241f2:	f892 a002 	ldrb.w	sl, [r2, #2]
 80241f6:	fb01 770a 	mla	r7, r1, sl, r7
 80241fa:	f890 a002 	ldrb.w	sl, [r0, #2]
 80241fe:	fb09 7a0a 	mla	sl, r9, sl, r7
 8024202:	f814 7008 	ldrb.w	r7, [r4, r8]
 8024206:	f896 8000 	ldrb.w	r8, [r6]
 802420a:	7876      	ldrb	r6, [r6, #1]
 802420c:	fb03 f808 	mul.w	r8, r3, r8
 8024210:	fb0e 8807 	mla	r8, lr, r7, r8
 8024214:	7817      	ldrb	r7, [r2, #0]
 8024216:	fb01 8807 	mla	r8, r1, r7, r8
 802421a:	7807      	ldrb	r7, [r0, #0]
 802421c:	fb09 8707 	mla	r7, r9, r7, r8
 8024220:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8024224:	4373      	muls	r3, r6
 8024226:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 802422a:	7856      	ldrb	r6, [r2, #1]
 802422c:	ea47 070a 	orr.w	r7, r7, sl
 8024230:	fb0e 330c 	mla	r3, lr, ip, r3
 8024234:	f890 a001 	ldrb.w	sl, [r0, #1]
 8024238:	fb01 3306 	mla	r3, r1, r6, r3
 802423c:	fb09 3a0a 	mla	sl, r9, sl, r3
 8024240:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8024244:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8024246:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 802424a:	ea47 070a 	orr.w	r7, r7, sl
 802424e:	f823 7b02 	strh.w	r7, [r3], #2
 8024252:	930b      	str	r3, [sp, #44]	; 0x2c
 8024254:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8024256:	449b      	add	fp, r3
 8024258:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802425a:	441d      	add	r5, r3
 802425c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802425e:	3b01      	subs	r3, #1
 8024260:	9309      	str	r3, [sp, #36]	; 0x24
 8024262:	e714      	b.n	802408e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8024264:	b149      	cbz	r1, 802427a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8024266:	5cba      	ldrb	r2, [r7, r2]
 8024268:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802426c:	4422      	add	r2, r4
 802426e:	4660      	mov	r0, ip
 8024270:	4666      	mov	r6, ip
 8024272:	e7a5      	b.n	80241c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8024274:	4660      	mov	r0, ip
 8024276:	4662      	mov	r2, ip
 8024278:	e7a2      	b.n	80241c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 802427a:	4660      	mov	r0, ip
 802427c:	4662      	mov	r2, ip
 802427e:	e7f7      	b.n	8024270 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 8024280:	b00f      	add	sp, #60	; 0x3c
 8024282:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024286 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8024286:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802428a:	b085      	sub	sp, #20
 802428c:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 8024290:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8024294:	9102      	str	r1, [sp, #8]
 8024296:	2c00      	cmp	r4, #0
 8024298:	fb04 710c 	mla	r1, r4, ip, r7
 802429c:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 80242a0:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 80242a4:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 80242a8:	eb02 0e01 	add.w	lr, r2, r1
 80242ac:	f2c0 8122 	blt.w	80244f4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 80242b0:	45a0      	cmp	r8, r4
 80242b2:	f340 811f 	ble.w	80244f4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 80242b6:	2f00      	cmp	r7, #0
 80242b8:	f2c0 811a 	blt.w	80244f0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 80242bc:	45bc      	cmp	ip, r7
 80242be:	f340 8117 	ble.w	80244f0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 80242c2:	5c52      	ldrb	r2, [r2, r1]
 80242c4:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80242c8:	1c7a      	adds	r2, r7, #1
 80242ca:	f100 8116 	bmi.w	80244fa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 80242ce:	4594      	cmp	ip, r2
 80242d0:	f340 8113 	ble.w	80244fa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 80242d4:	2e00      	cmp	r6, #0
 80242d6:	f000 8112 	beq.w	80244fe <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 80242da:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80242de:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80242e2:	3401      	adds	r4, #1
 80242e4:	f100 810f 	bmi.w	8024506 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 80242e8:	45a0      	cmp	r8, r4
 80242ea:	f340 810c 	ble.w	8024506 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 80242ee:	2800      	cmp	r0, #0
 80242f0:	f000 810c 	beq.w	802450c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 80242f4:	2f00      	cmp	r7, #0
 80242f6:	f2c0 8104 	blt.w	8024502 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 80242fa:	45bc      	cmp	ip, r7
 80242fc:	f340 8101 	ble.w	8024502 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8024300:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8024304:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8024308:	3701      	adds	r7, #1
 802430a:	f100 8102 	bmi.w	8024512 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 802430e:	45bc      	cmp	ip, r7
 8024310:	f340 80ff 	ble.w	8024512 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8024314:	2e00      	cmp	r6, #0
 8024316:	f000 80fe 	beq.w	8024516 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 802431a:	44f4      	add	ip, lr
 802431c:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8024320:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8024324:	b2b6      	uxth	r6, r6
 8024326:	b280      	uxth	r0, r0
 8024328:	fb00 fe06 	mul.w	lr, r0, r6
 802432c:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8024330:	0136      	lsls	r6, r6, #4
 8024332:	eba6 070e 	sub.w	r7, r6, lr
 8024336:	b280      	uxth	r0, r0
 8024338:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 802433c:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8024340:	b2bf      	uxth	r7, r7
 8024342:	1a1b      	subs	r3, r3, r0
 8024344:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8024348:	b29b      	uxth	r3, r3
 802434a:	fb0a f607 	mul.w	r6, sl, r7
 802434e:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8024352:	fb0b 6603 	mla	r6, fp, r3, r6
 8024356:	ea4f 6812 	mov.w	r8, r2, lsr #24
 802435a:	fb00 6609 	mla	r6, r0, r9, r6
 802435e:	fb0e 6608 	mla	r6, lr, r8, r6
 8024362:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8024366:	9600      	str	r6, [sp, #0]
 8024368:	2e00      	cmp	r6, #0
 802436a:	f000 80be 	beq.w	80244ea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 802436e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024372:	fb0b fc0c 	mul.w	ip, fp, ip
 8024376:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 802437a:	fb0b f505 	mul.w	r5, fp, r5
 802437e:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8024382:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8024386:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802438a:	44dc      	add	ip, fp
 802438c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024390:	9501      	str	r5, [sp, #4]
 8024392:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8024396:	9503      	str	r5, [sp, #12]
 8024398:	9d01      	ldr	r5, [sp, #4]
 802439a:	9e02      	ldr	r6, [sp, #8]
 802439c:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 80243a0:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80243a4:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 80243a8:	fb0a fc0c 	mul.w	ip, sl, ip
 80243ac:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80243b0:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80243b4:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80243b8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80243bc:	4465      	add	r5, ip
 80243be:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80243c2:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80243c6:	fb09 fc0c 	mul.w	ip, r9, ip
 80243ca:	fb09 f904 	mul.w	r9, r9, r4
 80243ce:	f509 7480 	add.w	r4, r9, #256	; 0x100
 80243d2:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80243d6:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 80243da:	fb08 f404 	mul.w	r4, r8, r4
 80243de:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80243e2:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80243e6:	fb08 f802 	mul.w	r8, r8, r2
 80243ea:	fb0a fa01 	mul.w	sl, sl, r1
 80243ee:	0a22      	lsrs	r2, r4, #8
 80243f0:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 80243f4:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80243f8:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 80243fc:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8024400:	4414      	add	r4, r2
 8024402:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8024406:	f508 7280 	add.w	r2, r8, #256	; 0x100
 802440a:	0a2d      	lsrs	r5, r5, #8
 802440c:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8024410:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024414:	9a03      	ldr	r2, [sp, #12]
 8024416:	8836      	ldrh	r6, [r6, #0]
 8024418:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802441c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024420:	437d      	muls	r5, r7
 8024422:	4461      	add	r1, ip
 8024424:	0a24      	lsrs	r4, r4, #8
 8024426:	fb02 5503 	mla	r5, r2, r3, r5
 802442a:	0a09      	lsrs	r1, r1, #8
 802442c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8024430:	fb04 540e 	mla	r4, r4, lr, r5
 8024434:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8024438:	fb01 4100 	mla	r1, r1, r0, r4
 802443c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024440:	0a09      	lsrs	r1, r1, #8
 8024442:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024446:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 802444a:	fb07 f70a 	mul.w	r7, r7, sl
 802444e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8024452:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8024456:	fb03 7101 	mla	r1, r3, r1, r7
 802445a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802445e:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8024462:	fb0e 1e08 	mla	lr, lr, r8, r1
 8024466:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 802446a:	fb00 e101 	mla	r1, r0, r1, lr
 802446e:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8024472:	9a00      	ldr	r2, [sp, #0]
 8024474:	b287      	uxth	r7, r0
 8024476:	437a      	muls	r2, r7
 8024478:	0a09      	lsrs	r1, r1, #8
 802447a:	1c53      	adds	r3, r2, #1
 802447c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024480:	4321      	orrs	r1, r4
 8024482:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024486:	1235      	asrs	r5, r6, #8
 8024488:	0c0a      	lsrs	r2, r1, #16
 802448a:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 802448e:	b2db      	uxtb	r3, r3
 8024490:	fb12 f207 	smulbb	r2, r2, r7
 8024494:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8024498:	fb05 2503 	mla	r5, r5, r3, r2
 802449c:	f3c1 2407 	ubfx	r4, r1, #8, #8
 80244a0:	10f2      	asrs	r2, r6, #3
 80244a2:	b2c8      	uxtb	r0, r1
 80244a4:	00f6      	lsls	r6, r6, #3
 80244a6:	fb14 f407 	smulbb	r4, r4, r7
 80244aa:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80244ae:	b2f6      	uxtb	r6, r6
 80244b0:	fb10 f007 	smulbb	r0, r0, r7
 80244b4:	fb02 4203 	mla	r2, r2, r3, r4
 80244b8:	b2ad      	uxth	r5, r5
 80244ba:	fb06 0303 	mla	r3, r6, r3, r0
 80244be:	b299      	uxth	r1, r3
 80244c0:	b294      	uxth	r4, r2
 80244c2:	1c6b      	adds	r3, r5, #1
 80244c4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80244c8:	1c62      	adds	r2, r4, #1
 80244ca:	1c4b      	adds	r3, r1, #1
 80244cc:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80244d0:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80244d4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80244d8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80244dc:	0952      	lsrs	r2, r2, #5
 80244de:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80244e2:	432b      	orrs	r3, r5
 80244e4:	4313      	orrs	r3, r2
 80244e6:	9a02      	ldr	r2, [sp, #8]
 80244e8:	8013      	strh	r3, [r2, #0]
 80244ea:	b005      	add	sp, #20
 80244ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80244f0:	2500      	movs	r5, #0
 80244f2:	e6e9      	b.n	80242c8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 80244f4:	2100      	movs	r1, #0
 80244f6:	460d      	mov	r5, r1
 80244f8:	e6f3      	b.n	80242e2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80244fa:	2100      	movs	r1, #0
 80244fc:	e6f1      	b.n	80242e2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80244fe:	4631      	mov	r1, r6
 8024500:	e6ef      	b.n	80242e2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8024502:	2400      	movs	r4, #0
 8024504:	e700      	b.n	8024308 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 8024506:	2200      	movs	r2, #0
 8024508:	4614      	mov	r4, r2
 802450a:	e70b      	b.n	8024324 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 802450c:	4602      	mov	r2, r0
 802450e:	4604      	mov	r4, r0
 8024510:	e708      	b.n	8024324 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8024512:	2200      	movs	r2, #0
 8024514:	e706      	b.n	8024324 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8024516:	4632      	mov	r2, r6
 8024518:	e704      	b.n	8024324 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0802451a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802451a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802451e:	b09f      	sub	sp, #124	; 0x7c
 8024520:	921b      	str	r2, [sp, #108]	; 0x6c
 8024522:	9309      	str	r3, [sp, #36]	; 0x24
 8024524:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8024526:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 802452a:	931c      	str	r3, [sp, #112]	; 0x70
 802452c:	9119      	str	r1, [sp, #100]	; 0x64
 802452e:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8024532:	901d      	str	r0, [sp, #116]	; 0x74
 8024534:	6850      	ldr	r0, [r2, #4]
 8024536:	6812      	ldr	r2, [r2, #0]
 8024538:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 802453a:	fb00 1303 	mla	r3, r0, r3, r1
 802453e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8024542:	930c      	str	r3, [sp, #48]	; 0x30
 8024544:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8024546:	681b      	ldr	r3, [r3, #0]
 8024548:	9312      	str	r3, [sp, #72]	; 0x48
 802454a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802454c:	685e      	ldr	r6, [r3, #4]
 802454e:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8024552:	930d      	str	r3, [sp, #52]	; 0x34
 8024554:	3604      	adds	r6, #4
 8024556:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8024558:	2b00      	cmp	r3, #0
 802455a:	dc03      	bgt.n	8024564 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 802455c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802455e:	2b00      	cmp	r3, #0
 8024560:	f340 8388 	ble.w	8024c74 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8024564:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8024566:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802456a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802456e:	1e48      	subs	r0, r1, #1
 8024570:	1e57      	subs	r7, r2, #1
 8024572:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024574:	2b00      	cmp	r3, #0
 8024576:	f340 8195 	ble.w	80248a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 802457a:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 802457c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8024580:	ea4f 4325 	mov.w	r3, r5, asr #16
 8024584:	d406      	bmi.n	8024594 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8024586:	4584      	cmp	ip, r0
 8024588:	da04      	bge.n	8024594 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802458a:	2b00      	cmp	r3, #0
 802458c:	db02      	blt.n	8024594 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802458e:	42bb      	cmp	r3, r7
 8024590:	f2c0 8189 	blt.w	80248a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8024594:	f11c 0c01 	adds.w	ip, ip, #1
 8024598:	f100 8177 	bmi.w	802488a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802459c:	4561      	cmp	r1, ip
 802459e:	f2c0 8174 	blt.w	802488a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80245a2:	3301      	adds	r3, #1
 80245a4:	f100 8171 	bmi.w	802488a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80245a8:	429a      	cmp	r2, r3
 80245aa:	f2c0 816e 	blt.w	802488a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80245ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80245b0:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80245b2:	931a      	str	r3, [sp, #104]	; 0x68
 80245b4:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80245b6:	2b00      	cmp	r3, #0
 80245b8:	f340 8193 	ble.w	80248e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 80245bc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80245be:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80245c2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80245c4:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 80245c8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80245ca:	141b      	asrs	r3, r3, #16
 80245cc:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80245d0:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80245d4:	f100 81d6 	bmi.w	8024984 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80245d8:	f100 38ff 	add.w	r8, r0, #4294967295
 80245dc:	4543      	cmp	r3, r8
 80245de:	f280 81d1 	bge.w	8024984 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80245e2:	f1bc 0f00 	cmp.w	ip, #0
 80245e6:	f2c0 81cd 	blt.w	8024984 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80245ea:	f10e 38ff 	add.w	r8, lr, #4294967295
 80245ee:	45c4      	cmp	ip, r8
 80245f0:	f280 81c8 	bge.w	8024984 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80245f4:	b200      	sxth	r0, r0
 80245f6:	fb0c 3300 	mla	r3, ip, r0, r3
 80245fa:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80245fc:	eb04 0803 	add.w	r8, r4, r3
 8024600:	5ce3      	ldrb	r3, [r4, r3]
 8024602:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8024606:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 802460a:	2a00      	cmp	r2, #0
 802460c:	f000 81af 	beq.w	802496e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8024610:	f898 c001 	ldrb.w	ip, [r8, #1]
 8024614:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8024618:	940e      	str	r4, [sp, #56]	; 0x38
 802461a:	0e24      	lsrs	r4, r4, #24
 802461c:	9415      	str	r4, [sp, #84]	; 0x54
 802461e:	b179      	cbz	r1, 8024640 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8024620:	eb08 0c00 	add.w	ip, r8, r0
 8024624:	f818 0000 	ldrb.w	r0, [r8, r0]
 8024628:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 802462c:	900a      	str	r0, [sp, #40]	; 0x28
 802462e:	0e00      	lsrs	r0, r0, #24
 8024630:	9013      	str	r0, [sp, #76]	; 0x4c
 8024632:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8024636:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 802463a:	900f      	str	r0, [sp, #60]	; 0x3c
 802463c:	0e00      	lsrs	r0, r0, #24
 802463e:	9016      	str	r0, [sp, #88]	; 0x58
 8024640:	b292      	uxth	r2, r2
 8024642:	b289      	uxth	r1, r1
 8024644:	fb02 f901 	mul.w	r9, r2, r1
 8024648:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802464c:	0112      	lsls	r2, r2, #4
 802464e:	eba2 0809 	sub.w	r8, r2, r9
 8024652:	b289      	uxth	r1, r1
 8024654:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8024658:	9815      	ldr	r0, [sp, #84]	; 0x54
 802465a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802465c:	fa1f f888 	uxth.w	r8, r8
 8024660:	1a52      	subs	r2, r2, r1
 8024662:	b292      	uxth	r2, r2
 8024664:	fb08 f000 	mul.w	r0, r8, r0
 8024668:	fb02 000e 	mla	r0, r2, lr, r0
 802466c:	fb01 0004 	mla	r0, r1, r4, r0
 8024670:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8024672:	fb09 0004 	mla	r0, r9, r4, r0
 8024676:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802467a:	2800      	cmp	r0, #0
 802467c:	f000 80fa 	beq.w	8024874 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024680:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8024684:	d01b      	beq.n	80246be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024686:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802468a:	fb0e fa0a 	mul.w	sl, lr, sl
 802468e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024692:	fb0e fe03 	mul.w	lr, lr, r3
 8024696:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802469a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802469e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80246a2:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80246a6:	4453      	add	r3, sl
 80246a8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80246ac:	0a1b      	lsrs	r3, r3, #8
 80246ae:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80246b2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80246b6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80246ba:	ea43 030c 	orr.w	r3, r3, ip
 80246be:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80246c0:	2cff      	cmp	r4, #255	; 0xff
 80246c2:	d021      	beq.n	8024708 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80246c4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80246c6:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80246ca:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80246cc:	fb04 fb0b 	mul.w	fp, r4, fp
 80246d0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80246d2:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80246d6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80246d8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80246dc:	fb04 fa0a 	mul.w	sl, r4, sl
 80246e0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80246e4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80246e8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80246ec:	44de      	add	lr, fp
 80246ee:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80246f2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80246f6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80246fa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80246fe:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024702:	ea4e 040a 	orr.w	r4, lr, sl
 8024706:	940e      	str	r4, [sp, #56]	; 0x38
 8024708:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802470a:	2cff      	cmp	r4, #255	; 0xff
 802470c:	d021      	beq.n	8024752 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 802470e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8024710:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8024714:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024716:	fb04 fb0b 	mul.w	fp, r4, fp
 802471a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802471c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024720:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024722:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024726:	fb04 fa0a 	mul.w	sl, r4, sl
 802472a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802472e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024732:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024736:	44de      	add	lr, fp
 8024738:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802473c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024740:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024744:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024748:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802474c:	ea4e 040a 	orr.w	r4, lr, sl
 8024750:	940a      	str	r4, [sp, #40]	; 0x28
 8024752:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8024754:	2cff      	cmp	r4, #255	; 0xff
 8024756:	d021      	beq.n	802479c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8024758:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802475a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 802475e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8024760:	fb04 fb0b 	mul.w	fp, r4, fp
 8024764:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8024766:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802476a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 802476c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024770:	fb04 fa0a 	mul.w	sl, r4, sl
 8024774:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024778:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802477c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024780:	44de      	add	lr, fp
 8024782:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024786:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802478a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802478e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024792:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024796:	ea4e 040a 	orr.w	r4, lr, sl
 802479a:	940f      	str	r4, [sp, #60]	; 0x3c
 802479c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802479e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80247a2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80247a4:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80247a8:	fb08 fc0c 	mul.w	ip, r8, ip
 80247ac:	fb02 cc0e 	mla	ip, r2, lr, ip
 80247b0:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80247b4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80247b6:	fb01 cc0e 	mla	ip, r1, lr, ip
 80247ba:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80247be:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80247c0:	fb09 cc0e 	mla	ip, r9, lr, ip
 80247c4:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80247c8:	fb08 f80e 	mul.w	r8, r8, lr
 80247cc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80247d0:	fb02 8303 	mla	r3, r2, r3, r8
 80247d4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80247d6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80247d8:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80247dc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80247de:	fb01 330a 	mla	r3, r1, sl, r3
 80247e2:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 80247e6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80247e8:	fb09 3901 	mla	r9, r9, r1, r3
 80247ec:	4342      	muls	r2, r0
 80247ee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80247f2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80247f6:	883b      	ldrh	r3, [r7, #0]
 80247f8:	1c50      	adds	r0, r2, #1
 80247fa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80247fe:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8024802:	ea4c 0c09 	orr.w	ip, ip, r9
 8024806:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802480a:	1219      	asrs	r1, r3, #8
 802480c:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8024810:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8024814:	b2c0      	uxtb	r0, r0
 8024816:	fb12 f204 	smulbb	r2, r2, r4
 802481a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802481e:	fb01 2100 	mla	r1, r1, r0, r2
 8024822:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8024826:	10da      	asrs	r2, r3, #3
 8024828:	fa5f fc8c 	uxtb.w	ip, ip
 802482c:	00db      	lsls	r3, r3, #3
 802482e:	fb1c fc04 	smulbb	ip, ip, r4
 8024832:	b2db      	uxtb	r3, r3
 8024834:	b289      	uxth	r1, r1
 8024836:	fb03 c300 	mla	r3, r3, r0, ip
 802483a:	fa1f fc83 	uxth.w	ip, r3
 802483e:	1c4b      	adds	r3, r1, #1
 8024840:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8024844:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8024848:	fb1e fe04 	smulbb	lr, lr, r4
 802484c:	f10c 0301 	add.w	r3, ip, #1
 8024850:	fb02 e200 	mla	r2, r2, r0, lr
 8024854:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8024858:	b292      	uxth	r2, r2
 802485a:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 802485e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024862:	430b      	orrs	r3, r1
 8024864:	1c51      	adds	r1, r2, #1
 8024866:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802486a:	0952      	lsrs	r2, r2, #5
 802486c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024870:	4313      	orrs	r3, r2
 8024872:	803b      	strh	r3, [r7, #0]
 8024874:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8024876:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8024878:	441a      	add	r2, r3
 802487a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802487c:	9229      	str	r2, [sp, #164]	; 0xa4
 802487e:	441d      	add	r5, r3
 8024880:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8024882:	3b01      	subs	r3, #1
 8024884:	3702      	adds	r7, #2
 8024886:	931a      	str	r3, [sp, #104]	; 0x68
 8024888:	e694      	b.n	80245b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802488a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 802488c:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 802488e:	441c      	add	r4, r3
 8024890:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024892:	9429      	str	r4, [sp, #164]	; 0xa4
 8024894:	441d      	add	r5, r3
 8024896:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024898:	3b01      	subs	r3, #1
 802489a:	9309      	str	r3, [sp, #36]	; 0x24
 802489c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802489e:	3302      	adds	r3, #2
 80248a0:	930c      	str	r3, [sp, #48]	; 0x30
 80248a2:	e666      	b.n	8024572 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80248a4:	d024      	beq.n	80248f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 80248a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80248a8:	982b      	ldr	r0, [sp, #172]	; 0xac
 80248aa:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80248ac:	3b01      	subs	r3, #1
 80248ae:	fb00 4003 	mla	r0, r0, r3, r4
 80248b2:	1400      	asrs	r0, r0, #16
 80248b4:	f53f ae7b 	bmi.w	80245ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80248b8:	3901      	subs	r1, #1
 80248ba:	4288      	cmp	r0, r1
 80248bc:	f6bf ae77 	bge.w	80245ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80248c0:	992c      	ldr	r1, [sp, #176]	; 0xb0
 80248c2:	fb01 5303 	mla	r3, r1, r3, r5
 80248c6:	141b      	asrs	r3, r3, #16
 80248c8:	f53f ae71 	bmi.w	80245ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80248cc:	3a01      	subs	r2, #1
 80248ce:	4293      	cmp	r3, r2
 80248d0:	f6bf ae6d 	bge.w	80245ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80248d4:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80248d8:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 80248dc:	f1bb 0f00 	cmp.w	fp, #0
 80248e0:	dc70      	bgt.n	80249c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 80248e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80248e4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80248e8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80248ea:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80248ee:	930c      	str	r3, [sp, #48]	; 0x30
 80248f0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80248f2:	2b00      	cmp	r3, #0
 80248f4:	f340 81be 	ble.w	8024c74 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 80248f8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80248fc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024900:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024904:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024906:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802490a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802490e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024912:	eef0 6a62 	vmov.f32	s13, s5
 8024916:	ee61 7a27 	vmul.f32	s15, s2, s15
 802491a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802491e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024922:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8024926:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802492a:	eef0 6a43 	vmov.f32	s13, s6
 802492e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024932:	ee12 2a90 	vmov	r2, s5
 8024936:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802493a:	fb92 f3f3 	sdiv	r3, r2, r3
 802493e:	ee13 2a10 	vmov	r2, s6
 8024942:	932b      	str	r3, [sp, #172]	; 0xac
 8024944:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024946:	fb92 f3f3 	sdiv	r3, r2, r3
 802494a:	932c      	str	r3, [sp, #176]	; 0xb0
 802494c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802494e:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8024950:	3b01      	subs	r3, #1
 8024952:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024956:	9319      	str	r3, [sp, #100]	; 0x64
 8024958:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802495a:	bf08      	it	eq
 802495c:	4613      	moveq	r3, r2
 802495e:	ee16 5a90 	vmov	r5, s13
 8024962:	9309      	str	r3, [sp, #36]	; 0x24
 8024964:	eeb0 3a67 	vmov.f32	s6, s15
 8024968:	eef0 2a47 	vmov.f32	s5, s14
 802496c:	e5f3      	b.n	8024556 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 802496e:	2900      	cmp	r1, #0
 8024970:	f43f ae66 	beq.w	8024640 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8024974:	f818 0000 	ldrb.w	r0, [r8, r0]
 8024978:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 802497c:	900a      	str	r0, [sp, #40]	; 0x28
 802497e:	0e00      	lsrs	r0, r0, #24
 8024980:	9013      	str	r0, [sp, #76]	; 0x4c
 8024982:	e65d      	b.n	8024640 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8024984:	f113 0801 	adds.w	r8, r3, #1
 8024988:	f53f af74 	bmi.w	8024874 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802498c:	4540      	cmp	r0, r8
 802498e:	f6ff af71 	blt.w	8024874 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024992:	f11c 0801 	adds.w	r8, ip, #1
 8024996:	f53f af6d 	bmi.w	8024874 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802499a:	45c6      	cmp	lr, r8
 802499c:	f6ff af6a 	blt.w	8024874 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80249a0:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 80249a2:	9302      	str	r3, [sp, #8]
 80249a4:	b200      	sxth	r0, r0
 80249a6:	fa0f f38e 	sxth.w	r3, lr
 80249aa:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80249ae:	e9cd c203 	strd	ip, r2, [sp, #12]
 80249b2:	9301      	str	r3, [sp, #4]
 80249b4:	9000      	str	r0, [sp, #0]
 80249b6:	4633      	mov	r3, r6
 80249b8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80249ba:	981d      	ldr	r0, [sp, #116]	; 0x74
 80249bc:	4639      	mov	r1, r7
 80249be:	f7ff fc62 	bl	8024286 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 80249c2:	e757      	b.n	8024874 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80249c4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80249c6:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80249c8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80249cc:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80249ce:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80249d2:	1427      	asrs	r7, r4, #16
 80249d4:	142b      	asrs	r3, r5, #16
 80249d6:	fb01 7303 	mla	r3, r1, r3, r7
 80249da:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80249dc:	18e7      	adds	r7, r4, r3
 80249de:	5ce3      	ldrb	r3, [r4, r3]
 80249e0:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80249e4:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80249e8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80249ec:	2a00      	cmp	r2, #0
 80249ee:	f000 8137 	beq.w	8024c60 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 80249f2:	f897 e001 	ldrb.w	lr, [r7, #1]
 80249f6:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80249fa:	9410      	str	r4, [sp, #64]	; 0x40
 80249fc:	0e24      	lsrs	r4, r4, #24
 80249fe:	9417      	str	r4, [sp, #92]	; 0x5c
 8024a00:	b170      	cbz	r0, 8024a20 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8024a02:	eb07 0e01 	add.w	lr, r7, r1
 8024a06:	5c79      	ldrb	r1, [r7, r1]
 8024a08:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024a0c:	910b      	str	r1, [sp, #44]	; 0x2c
 8024a0e:	0e09      	lsrs	r1, r1, #24
 8024a10:	9114      	str	r1, [sp, #80]	; 0x50
 8024a12:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8024a16:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024a1a:	9111      	str	r1, [sp, #68]	; 0x44
 8024a1c:	0e09      	lsrs	r1, r1, #24
 8024a1e:	9118      	str	r1, [sp, #96]	; 0x60
 8024a20:	b292      	uxth	r2, r2
 8024a22:	b280      	uxth	r0, r0
 8024a24:	fb02 f800 	mul.w	r8, r2, r0
 8024a28:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8024a2c:	0112      	lsls	r2, r2, #4
 8024a2e:	eba2 0e08 	sub.w	lr, r2, r8
 8024a32:	b280      	uxth	r0, r0
 8024a34:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8024a38:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8024a3a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024a3c:	fa1f fe8e 	uxth.w	lr, lr
 8024a40:	1a12      	subs	r2, r2, r0
 8024a42:	b292      	uxth	r2, r2
 8024a44:	fb0e f101 	mul.w	r1, lr, r1
 8024a48:	fb02 110c 	mla	r1, r2, ip, r1
 8024a4c:	fb00 1104 	mla	r1, r0, r4, r1
 8024a50:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8024a52:	fb08 1104 	mla	r1, r8, r4, r1
 8024a56:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8024a5a:	2900      	cmp	r1, #0
 8024a5c:	f000 80f5 	beq.w	8024c4a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8024a60:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8024a64:	d019      	beq.n	8024a9a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 8024a66:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8024a6a:	fb0c fa0a 	mul.w	sl, ip, sl
 8024a6e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024a72:	fb0c fc03 	mul.w	ip, ip, r3
 8024a76:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024a7a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024a7e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024a82:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8024a86:	4453      	add	r3, sl
 8024a88:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8024a8c:	0a1b      	lsrs	r3, r3, #8
 8024a8e:	0a3f      	lsrs	r7, r7, #8
 8024a90:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024a94:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8024a98:	433b      	orrs	r3, r7
 8024a9a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8024a9c:	2cff      	cmp	r4, #255	; 0xff
 8024a9e:	d020      	beq.n	8024ae2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8024aa0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024aa2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024aa6:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8024aa8:	4367      	muls	r7, r4
 8024aaa:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024aac:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024ab0:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8024ab2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024ab6:	fb04 fa0a 	mul.w	sl, r4, sl
 8024aba:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024abe:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024ac2:	44bc      	add	ip, r7
 8024ac4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024ac8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024acc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024ad0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024ad4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024ad8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024adc:	ea4c 040a 	orr.w	r4, ip, sl
 8024ae0:	9410      	str	r4, [sp, #64]	; 0x40
 8024ae2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024ae4:	2cff      	cmp	r4, #255	; 0xff
 8024ae6:	d020      	beq.n	8024b2a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 8024ae8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024aea:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024aee:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024af0:	4367      	muls	r7, r4
 8024af2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024af4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024af8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024afa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024afe:	fb04 fa0a 	mul.w	sl, r4, sl
 8024b02:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024b06:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024b0a:	44bc      	add	ip, r7
 8024b0c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024b10:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024b14:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024b18:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024b1c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024b20:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024b24:	ea4c 040a 	orr.w	r4, ip, sl
 8024b28:	940b      	str	r4, [sp, #44]	; 0x2c
 8024b2a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8024b2c:	2cff      	cmp	r4, #255	; 0xff
 8024b2e:	d020      	beq.n	8024b72 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8024b30:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024b32:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024b36:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8024b38:	4367      	muls	r7, r4
 8024b3a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024b3c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024b40:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8024b42:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024b46:	fb04 fa0a 	mul.w	sl, r4, sl
 8024b4a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024b4e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024b52:	44bc      	add	ip, r7
 8024b54:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024b58:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024b5c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024b60:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024b64:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024b68:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024b6c:	ea4c 040a 	orr.w	r4, ip, sl
 8024b70:	9411      	str	r4, [sp, #68]	; 0x44
 8024b72:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024b74:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024b78:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024b7a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8024b7e:	fb0e f707 	mul.w	r7, lr, r7
 8024b82:	fb02 770c 	mla	r7, r2, ip, r7
 8024b86:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024b8a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024b8c:	fb00 770c 	mla	r7, r0, ip, r7
 8024b90:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024b94:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024b96:	fb08 770c 	mla	r7, r8, ip, r7
 8024b9a:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8024b9e:	fb0e fe0c 	mul.w	lr, lr, ip
 8024ba2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024ba6:	fb02 e303 	mla	r3, r2, r3, lr
 8024baa:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8024bac:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024bae:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8024bb2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8024bb4:	fb00 330a 	mla	r3, r0, sl, r3
 8024bb8:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8024bbc:	fb08 3c0c 	mla	ip, r8, ip, r3
 8024bc0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024bc2:	f8b9 0000 	ldrh.w	r0, [r9]
 8024bc6:	434b      	muls	r3, r1
 8024bc8:	0a3f      	lsrs	r7, r7, #8
 8024bca:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024bce:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024bd2:	1c59      	adds	r1, r3, #1
 8024bd4:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8024bd8:	ea47 070c 	orr.w	r7, r7, ip
 8024bdc:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8024be0:	1202      	asrs	r2, r0, #8
 8024be2:	0c3b      	lsrs	r3, r7, #16
 8024be4:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8024be8:	b2c9      	uxtb	r1, r1
 8024bea:	fb13 f304 	smulbb	r3, r3, r4
 8024bee:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8024bf2:	fb02 3201 	mla	r2, r2, r1, r3
 8024bf6:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8024bfa:	10c3      	asrs	r3, r0, #3
 8024bfc:	b2ff      	uxtb	r7, r7
 8024bfe:	00c0      	lsls	r0, r0, #3
 8024c00:	b292      	uxth	r2, r2
 8024c02:	fb1c fc04 	smulbb	ip, ip, r4
 8024c06:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8024c0a:	b2c0      	uxtb	r0, r0
 8024c0c:	fb17 f704 	smulbb	r7, r7, r4
 8024c10:	fb03 c301 	mla	r3, r3, r1, ip
 8024c14:	fb00 7001 	mla	r0, r0, r1, r7
 8024c18:	f102 0c01 	add.w	ip, r2, #1
 8024c1c:	b280      	uxth	r0, r0
 8024c1e:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8024c22:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 8024c26:	1c42      	adds	r2, r0, #1
 8024c28:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8024c2c:	b29b      	uxth	r3, r3
 8024c2e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8024c32:	ea42 020c 	orr.w	r2, r2, ip
 8024c36:	f103 0c01 	add.w	ip, r3, #1
 8024c3a:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8024c3e:	095b      	lsrs	r3, r3, #5
 8024c40:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024c44:	431a      	orrs	r2, r3
 8024c46:	f8a9 2000 	strh.w	r2, [r9]
 8024c4a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8024c4c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8024c4e:	441a      	add	r2, r3
 8024c50:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024c52:	9229      	str	r2, [sp, #164]	; 0xa4
 8024c54:	f109 0902 	add.w	r9, r9, #2
 8024c58:	441d      	add	r5, r3
 8024c5a:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024c5e:	e63d      	b.n	80248dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8024c60:	2800      	cmp	r0, #0
 8024c62:	f43f aedd 	beq.w	8024a20 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8024c66:	5c79      	ldrb	r1, [r7, r1]
 8024c68:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024c6c:	910b      	str	r1, [sp, #44]	; 0x2c
 8024c6e:	0e09      	lsrs	r1, r1, #24
 8024c70:	9114      	str	r1, [sp, #80]	; 0x50
 8024c72:	e6d5      	b.n	8024a20 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8024c74:	b01f      	add	sp, #124	; 0x7c
 8024c76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024c7a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8024c7a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024c7e:	b089      	sub	sp, #36	; 0x24
 8024c80:	9101      	str	r1, [sp, #4]
 8024c82:	9801      	ldr	r0, [sp, #4]
 8024c84:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 8024c88:	8800      	ldrh	r0, [r0, #0]
 8024c8a:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 8024c8e:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8024c92:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 8024c96:	1206      	asrs	r6, r0, #8
 8024c98:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 8024c9c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8024ca0:	9602      	str	r6, [sp, #8]
 8024ca2:	10c6      	asrs	r6, r0, #3
 8024ca4:	00c0      	lsls	r0, r0, #3
 8024ca6:	b2c0      	uxtb	r0, r0
 8024ca8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8024cac:	9004      	str	r0, [sp, #16]
 8024cae:	2f00      	cmp	r7, #0
 8024cb0:	fb07 100c 	mla	r0, r7, ip, r1
 8024cb4:	9603      	str	r6, [sp, #12]
 8024cb6:	eb02 0e00 	add.w	lr, r2, r0
 8024cba:	f2c0 810a 	blt.w	8024ed2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8024cbe:	45b8      	cmp	r8, r7
 8024cc0:	f340 8107 	ble.w	8024ed2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8024cc4:	2900      	cmp	r1, #0
 8024cc6:	f2c0 8102 	blt.w	8024ece <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8024cca:	458c      	cmp	ip, r1
 8024ccc:	f340 80ff 	ble.w	8024ece <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8024cd0:	5c12      	ldrb	r2, [r2, r0]
 8024cd2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8024cd6:	1c4a      	adds	r2, r1, #1
 8024cd8:	f100 80fe 	bmi.w	8024ed8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8024cdc:	4594      	cmp	ip, r2
 8024cde:	f340 80fb 	ble.w	8024ed8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8024ce2:	2d00      	cmp	r5, #0
 8024ce4:	f000 80fa 	beq.w	8024edc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 8024ce8:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8024cec:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8024cf0:	3701      	adds	r7, #1
 8024cf2:	f100 80f7 	bmi.w	8024ee4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8024cf6:	45b8      	cmp	r8, r7
 8024cf8:	f340 80f4 	ble.w	8024ee4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8024cfc:	2c00      	cmp	r4, #0
 8024cfe:	f000 80f4 	beq.w	8024eea <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 8024d02:	2900      	cmp	r1, #0
 8024d04:	eb0e 020c 	add.w	r2, lr, ip
 8024d08:	f2c0 80ea 	blt.w	8024ee0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8024d0c:	458c      	cmp	ip, r1
 8024d0e:	f340 80e7 	ble.w	8024ee0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8024d12:	f81e 700c 	ldrb.w	r7, [lr, ip]
 8024d16:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 8024d1a:	3101      	adds	r1, #1
 8024d1c:	f100 80e8 	bmi.w	8024ef0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8024d20:	458c      	cmp	ip, r1
 8024d22:	f340 80e5 	ble.w	8024ef0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8024d26:	2d00      	cmp	r5, #0
 8024d28:	f000 80e4 	beq.w	8024ef4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 8024d2c:	7852      	ldrb	r2, [r2, #1]
 8024d2e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8024d32:	0e0b      	lsrs	r3, r1, #24
 8024d34:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 8024d38:	9300      	str	r3, [sp, #0]
 8024d3a:	b2a4      	uxth	r4, r4
 8024d3c:	b2ab      	uxth	r3, r5
 8024d3e:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 8024d42:	fb03 f904 	mul.w	r9, r3, r4
 8024d46:	fb0a f505 	mul.w	r5, sl, r5
 8024d4a:	011b      	lsls	r3, r3, #4
 8024d4c:	eba3 0e09 	sub.w	lr, r3, r9
 8024d50:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 8024d54:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8024d58:	0a28      	lsrs	r0, r5, #8
 8024d5a:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8024d5e:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 8024d62:	4405      	add	r5, r0
 8024d64:	0a2d      	lsrs	r5, r5, #8
 8024d66:	fb0a f303 	mul.w	r3, sl, r3
 8024d6a:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 8024d6e:	9005      	str	r0, [sp, #20]
 8024d70:	f503 7080 	add.w	r0, r3, #256	; 0x100
 8024d74:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8024d78:	0a1b      	lsrs	r3, r3, #8
 8024d7a:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8024d7e:	9306      	str	r3, [sp, #24]
 8024d80:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 8024d84:	fb0b f303 	mul.w	r3, fp, r3
 8024d88:	0a1d      	lsrs	r5, r3, #8
 8024d8a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8024d8e:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8024d92:	fb0b f606 	mul.w	r6, fp, r6
 8024d96:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8024d9a:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8024d9e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024da2:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8024da6:	fb08 f707 	mul.w	r7, r8, r7
 8024daa:	441d      	add	r5, r3
 8024dac:	f506 7380 	add.w	r3, r6, #256	; 0x100
 8024db0:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8024db4:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8024db8:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8024dbc:	fb08 fc0c 	mul.w	ip, r8, ip
 8024dc0:	0a1b      	lsrs	r3, r3, #8
 8024dc2:	9307      	str	r3, [sp, #28]
 8024dc4:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8024dc8:	0e0b      	lsrs	r3, r1, #24
 8024dca:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 8024dce:	435f      	muls	r7, r3
 8024dd0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024dd4:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8024dd8:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8024ddc:	4460      	add	r0, ip
 8024dde:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024de2:	b2a4      	uxth	r4, r4
 8024de4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024de8:	0a2d      	lsrs	r5, r5, #8
 8024dea:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024dee:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024df2:	fa1f fe8e 	uxth.w	lr, lr
 8024df6:	4359      	muls	r1, r3
 8024df8:	1b12      	subs	r2, r2, r4
 8024dfa:	9b05      	ldr	r3, [sp, #20]
 8024dfc:	44bc      	add	ip, r7
 8024dfe:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024e02:	b292      	uxth	r2, r2
 8024e04:	fb05 f50e 	mul.w	r5, r5, lr
 8024e08:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024e0c:	fb03 5502 	mla	r5, r3, r2, r5
 8024e10:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024e14:	9b06      	ldr	r3, [sp, #24]
 8024e16:	f501 7780 	add.w	r7, r1, #256	; 0x100
 8024e1a:	0a36      	lsrs	r6, r6, #8
 8024e1c:	0a00      	lsrs	r0, r0, #8
 8024e1e:	fb0c 5509 	mla	r5, ip, r9, r5
 8024e22:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8024e26:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8024e2a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8024e2e:	fb00 5504 	mla	r5, r0, r4, r5
 8024e32:	fb0e f606 	mul.w	r6, lr, r6
 8024e36:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8024e3a:	0a09      	lsrs	r1, r1, #8
 8024e3c:	9b07      	ldr	r3, [sp, #28]
 8024e3e:	fb02 6000 	mla	r0, r2, r0, r6
 8024e42:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024e46:	fb09 0001 	mla	r0, r9, r1, r0
 8024e4a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024e4e:	fb0e fe0b 	mul.w	lr, lr, fp
 8024e52:	fb04 0003 	mla	r0, r4, r3, r0
 8024e56:	fb02 e20a 	mla	r2, r2, sl, lr
 8024e5a:	9b00      	ldr	r3, [sp, #0]
 8024e5c:	fb04 2408 	mla	r4, r4, r8, r2
 8024e60:	fb09 4903 	mla	r9, r9, r3, r4
 8024e64:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8024e68:	9b02      	ldr	r3, [sp, #8]
 8024e6a:	9a04      	ldr	r2, [sp, #16]
 8024e6c:	fa5f f989 	uxtb.w	r9, r9
 8024e70:	fb03 f109 	mul.w	r1, r3, r9
 8024e74:	9b03      	ldr	r3, [sp, #12]
 8024e76:	0a2d      	lsrs	r5, r5, #8
 8024e78:	0a00      	lsrs	r0, r0, #8
 8024e7a:	fb03 f309 	mul.w	r3, r3, r9
 8024e7e:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8024e82:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024e86:	4305      	orrs	r5, r0
 8024e88:	fb02 f909 	mul.w	r9, r2, r9
 8024e8c:	1c58      	adds	r0, r3, #1
 8024e8e:	1c4a      	adds	r2, r1, #1
 8024e90:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8024e94:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8024e98:	0a2b      	lsrs	r3, r5, #8
 8024e9a:	0c2a      	lsrs	r2, r5, #16
 8024e9c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8024ea0:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8024ea4:	00db      	lsls	r3, r3, #3
 8024ea6:	0212      	lsls	r2, r2, #8
 8024ea8:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8024eac:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024eb0:	4313      	orrs	r3, r2
 8024eb2:	f109 0201 	add.w	r2, r9, #1
 8024eb6:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 8024eba:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8024ebe:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8024ec2:	431d      	orrs	r5, r3
 8024ec4:	9b01      	ldr	r3, [sp, #4]
 8024ec6:	801d      	strh	r5, [r3, #0]
 8024ec8:	b009      	add	sp, #36	; 0x24
 8024eca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024ece:	2000      	movs	r0, #0
 8024ed0:	e701      	b.n	8024cd6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8024ed2:	2600      	movs	r6, #0
 8024ed4:	4630      	mov	r0, r6
 8024ed6:	e70b      	b.n	8024cf0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8024ed8:	2600      	movs	r6, #0
 8024eda:	e709      	b.n	8024cf0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8024edc:	462e      	mov	r6, r5
 8024ede:	e707      	b.n	8024cf0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8024ee0:	2700      	movs	r7, #0
 8024ee2:	e71a      	b.n	8024d1a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8024ee4:	2100      	movs	r1, #0
 8024ee6:	460f      	mov	r7, r1
 8024ee8:	e723      	b.n	8024d32 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8024eea:	4621      	mov	r1, r4
 8024eec:	4627      	mov	r7, r4
 8024eee:	e720      	b.n	8024d32 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8024ef0:	2100      	movs	r1, #0
 8024ef2:	e71e      	b.n	8024d32 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8024ef4:	4629      	mov	r1, r5
 8024ef6:	e71c      	b.n	8024d32 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08024ef8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024ef8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024efc:	b09b      	sub	sp, #108	; 0x6c
 8024efe:	9218      	str	r2, [sp, #96]	; 0x60
 8024f00:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8024f02:	9116      	str	r1, [sp, #88]	; 0x58
 8024f04:	9307      	str	r3, [sp, #28]
 8024f06:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8024f0a:	9019      	str	r0, [sp, #100]	; 0x64
 8024f0c:	6850      	ldr	r0, [r2, #4]
 8024f0e:	6812      	ldr	r2, [r2, #0]
 8024f10:	9d26      	ldr	r5, [sp, #152]	; 0x98
 8024f12:	fb00 1303 	mla	r3, r0, r3, r1
 8024f16:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8024f1a:	930a      	str	r3, [sp, #40]	; 0x28
 8024f1c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024f1e:	681b      	ldr	r3, [r3, #0]
 8024f20:	930f      	str	r3, [sp, #60]	; 0x3c
 8024f22:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024f24:	685e      	ldr	r6, [r3, #4]
 8024f26:	3604      	adds	r6, #4
 8024f28:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8024f2a:	2b00      	cmp	r3, #0
 8024f2c:	dc03      	bgt.n	8024f36 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8024f2e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024f30:	2b00      	cmp	r3, #0
 8024f32:	f340 8373 	ble.w	802561c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8024f36:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024f38:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024f3c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024f40:	1e48      	subs	r0, r1, #1
 8024f42:	1e57      	subs	r7, r2, #1
 8024f44:	9b07      	ldr	r3, [sp, #28]
 8024f46:	2b00      	cmp	r3, #0
 8024f48:	f340 8190 	ble.w	802526c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8024f4c:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8024f4e:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8024f52:	ea4f 4325 	mov.w	r3, r5, asr #16
 8024f56:	d406      	bmi.n	8024f66 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8024f58:	4584      	cmp	ip, r0
 8024f5a:	da04      	bge.n	8024f66 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8024f5c:	2b00      	cmp	r3, #0
 8024f5e:	db02      	blt.n	8024f66 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8024f60:	42bb      	cmp	r3, r7
 8024f62:	f2c0 8184 	blt.w	802526e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8024f66:	f11c 0c01 	adds.w	ip, ip, #1
 8024f6a:	f100 8172 	bmi.w	8025252 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024f6e:	4561      	cmp	r1, ip
 8024f70:	f2c0 816f 	blt.w	8025252 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024f74:	3301      	adds	r3, #1
 8024f76:	f100 816c 	bmi.w	8025252 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024f7a:	429a      	cmp	r2, r3
 8024f7c:	f2c0 8169 	blt.w	8025252 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024f80:	9b07      	ldr	r3, [sp, #28]
 8024f82:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8024f84:	9317      	str	r3, [sp, #92]	; 0x5c
 8024f86:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024f88:	2b00      	cmp	r3, #0
 8024f8a:	f340 818e 	ble.w	80252aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8024f8e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8024f90:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8024f94:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024f96:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8024f9a:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8024f9c:	141b      	asrs	r3, r3, #16
 8024f9e:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8024fa2:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8024fa6:	f100 81d1 	bmi.w	802534c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8024faa:	f101 38ff 	add.w	r8, r1, #4294967295
 8024fae:	4543      	cmp	r3, r8
 8024fb0:	f280 81cc 	bge.w	802534c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8024fb4:	f1bc 0f00 	cmp.w	ip, #0
 8024fb8:	f2c0 81c8 	blt.w	802534c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8024fbc:	f10e 38ff 	add.w	r8, lr, #4294967295
 8024fc0:	45c4      	cmp	ip, r8
 8024fc2:	f280 81c3 	bge.w	802534c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8024fc6:	b209      	sxth	r1, r1
 8024fc8:	fb0c 3301 	mla	r3, ip, r1, r3
 8024fcc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8024fce:	eb04 0803 	add.w	r8, r4, r3
 8024fd2:	5ce3      	ldrb	r3, [r4, r3]
 8024fd4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8024fd8:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8024fdc:	2a00      	cmp	r2, #0
 8024fde:	f000 81aa 	beq.w	8025336 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8024fe2:	f898 c001 	ldrb.w	ip, [r8, #1]
 8024fe6:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8024fea:	940b      	str	r4, [sp, #44]	; 0x2c
 8024fec:	0e24      	lsrs	r4, r4, #24
 8024fee:	9412      	str	r4, [sp, #72]	; 0x48
 8024ff0:	b178      	cbz	r0, 8025012 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8024ff2:	eb08 0c01 	add.w	ip, r8, r1
 8024ff6:	f818 1001 	ldrb.w	r1, [r8, r1]
 8024ffa:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024ffe:	9108      	str	r1, [sp, #32]
 8025000:	0e09      	lsrs	r1, r1, #24
 8025002:	9110      	str	r1, [sp, #64]	; 0x40
 8025004:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8025008:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802500c:	910c      	str	r1, [sp, #48]	; 0x30
 802500e:	0e09      	lsrs	r1, r1, #24
 8025010:	9113      	str	r1, [sp, #76]	; 0x4c
 8025012:	b292      	uxth	r2, r2
 8025014:	b280      	uxth	r0, r0
 8025016:	fb02 f900 	mul.w	r9, r2, r0
 802501a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 802501e:	0112      	lsls	r2, r2, #4
 8025020:	eba2 0809 	sub.w	r8, r2, r9
 8025024:	b280      	uxth	r0, r0
 8025026:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 802502a:	9912      	ldr	r1, [sp, #72]	; 0x48
 802502c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802502e:	fa1f f888 	uxth.w	r8, r8
 8025032:	1a12      	subs	r2, r2, r0
 8025034:	b292      	uxth	r2, r2
 8025036:	fb08 f101 	mul.w	r1, r8, r1
 802503a:	fb02 110e 	mla	r1, r2, lr, r1
 802503e:	fb00 1104 	mla	r1, r0, r4, r1
 8025042:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8025044:	fb09 1104 	mla	r1, r9, r4, r1
 8025048:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802504c:	2900      	cmp	r1, #0
 802504e:	f000 80f5 	beq.w	802523c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8025052:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8025056:	d01b      	beq.n	8025090 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8025058:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802505c:	fb0e fa0a 	mul.w	sl, lr, sl
 8025060:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8025064:	fb0e fe03 	mul.w	lr, lr, r3
 8025068:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802506c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8025070:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8025074:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8025078:	4453      	add	r3, sl
 802507a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802507e:	0a1b      	lsrs	r3, r3, #8
 8025080:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025084:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8025088:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802508c:	ea43 030c 	orr.w	r3, r3, ip
 8025090:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8025092:	2cff      	cmp	r4, #255	; 0xff
 8025094:	d021      	beq.n	80250da <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8025096:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8025098:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 802509c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802509e:	fb04 fb0b 	mul.w	fp, r4, fp
 80250a2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80250a4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80250a8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80250aa:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80250ae:	fb04 fa0a 	mul.w	sl, r4, sl
 80250b2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80250b6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80250ba:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80250be:	44de      	add	lr, fp
 80250c0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80250c4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80250c8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80250cc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80250d0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80250d4:	ea4e 040a 	orr.w	r4, lr, sl
 80250d8:	940b      	str	r4, [sp, #44]	; 0x2c
 80250da:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80250dc:	2cff      	cmp	r4, #255	; 0xff
 80250de:	d021      	beq.n	8025124 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 80250e0:	9c08      	ldr	r4, [sp, #32]
 80250e2:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80250e6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80250e8:	fb04 fb0b 	mul.w	fp, r4, fp
 80250ec:	9c08      	ldr	r4, [sp, #32]
 80250ee:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80250f2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80250f4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80250f8:	fb04 fa0a 	mul.w	sl, r4, sl
 80250fc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025100:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8025104:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8025108:	44de      	add	lr, fp
 802510a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802510e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025112:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025116:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802511a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802511e:	ea4e 040a 	orr.w	r4, lr, sl
 8025122:	9408      	str	r4, [sp, #32]
 8025124:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8025126:	2cff      	cmp	r4, #255	; 0xff
 8025128:	d021      	beq.n	802516e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 802512a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802512c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8025130:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8025132:	fb04 fb0b 	mul.w	fp, r4, fp
 8025136:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8025138:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802513c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802513e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8025142:	fb04 fa0a 	mul.w	sl, r4, sl
 8025146:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802514a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802514e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8025152:	44de      	add	lr, fp
 8025154:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8025158:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802515c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025160:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025164:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025168:	ea4e 040a 	orr.w	r4, lr, sl
 802516c:	940c      	str	r4, [sp, #48]	; 0x30
 802516e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8025170:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8025174:	9c08      	ldr	r4, [sp, #32]
 8025176:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 802517a:	fb08 fc0c 	mul.w	ip, r8, ip
 802517e:	fb02 cc0e 	mla	ip, r2, lr, ip
 8025182:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8025186:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8025188:	fb00 cc0e 	mla	ip, r0, lr, ip
 802518c:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8025190:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8025192:	fb09 cc0e 	mla	ip, r9, lr, ip
 8025196:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 802519a:	fb08 f80e 	mul.w	r8, r8, lr
 802519e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80251a2:	fb02 8303 	mla	r3, r2, r3, r8
 80251a6:	9a08      	ldr	r2, [sp, #32]
 80251a8:	f8b7 8000 	ldrh.w	r8, [r7]
 80251ac:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80251b0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80251b2:	fb00 330a 	mla	r3, r0, sl, r3
 80251b6:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 80251ba:	fb09 3900 	mla	r9, r9, r0, r3
 80251be:	43c9      	mvns	r1, r1
 80251c0:	ea4f 2228 	mov.w	r2, r8, asr #8
 80251c4:	fa5f fe81 	uxtb.w	lr, r1
 80251c8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80251cc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80251d0:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80251d4:	fb02 f20e 	mul.w	r2, r2, lr
 80251d8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80251dc:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80251e0:	ea4c 0c09 	orr.w	ip, ip, r9
 80251e4:	1c53      	adds	r3, r2, #1
 80251e6:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 80251ea:	ea4f 00e8 	mov.w	r0, r8, asr #3
 80251ee:	ea4f 431c 	mov.w	r3, ip, lsr #16
 80251f2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80251f6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80251fa:	4a63      	ldr	r2, [pc, #396]	; (8025388 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 80251fc:	fb00 f00e 	mul.w	r0, r0, lr
 8025200:	b2db      	uxtb	r3, r3
 8025202:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8025206:	1c43      	adds	r3, r0, #1
 8025208:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802520c:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8025210:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8025214:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8025218:	b2c9      	uxtb	r1, r1
 802521a:	00db      	lsls	r3, r3, #3
 802521c:	fb01 f10e 	mul.w	r1, r1, lr
 8025220:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025224:	4313      	orrs	r3, r2
 8025226:	1c4a      	adds	r2, r1, #1
 8025228:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802522c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8025230:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8025234:	ea4c 0c03 	orr.w	ip, ip, r3
 8025238:	f8a7 c000 	strh.w	ip, [r7]
 802523c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802523e:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8025240:	441a      	add	r2, r3
 8025242:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025244:	9225      	str	r2, [sp, #148]	; 0x94
 8025246:	441d      	add	r5, r3
 8025248:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802524a:	3b01      	subs	r3, #1
 802524c:	3702      	adds	r7, #2
 802524e:	9317      	str	r3, [sp, #92]	; 0x5c
 8025250:	e699      	b.n	8024f86 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8025252:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8025254:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8025256:	441c      	add	r4, r3
 8025258:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802525a:	9425      	str	r4, [sp, #148]	; 0x94
 802525c:	441d      	add	r5, r3
 802525e:	9b07      	ldr	r3, [sp, #28]
 8025260:	3b01      	subs	r3, #1
 8025262:	9307      	str	r3, [sp, #28]
 8025264:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8025266:	3302      	adds	r3, #2
 8025268:	930a      	str	r3, [sp, #40]	; 0x28
 802526a:	e66b      	b.n	8024f44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 802526c:	d024      	beq.n	80252b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 802526e:	9b07      	ldr	r3, [sp, #28]
 8025270:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8025272:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8025274:	3b01      	subs	r3, #1
 8025276:	fb00 4003 	mla	r0, r0, r3, r4
 802527a:	1400      	asrs	r0, r0, #16
 802527c:	f53f ae80 	bmi.w	8024f80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8025280:	3901      	subs	r1, #1
 8025282:	4288      	cmp	r0, r1
 8025284:	f6bf ae7c 	bge.w	8024f80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8025288:	9928      	ldr	r1, [sp, #160]	; 0xa0
 802528a:	fb01 5303 	mla	r3, r1, r3, r5
 802528e:	141b      	asrs	r3, r3, #16
 8025290:	f53f ae76 	bmi.w	8024f80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8025294:	3a01      	subs	r2, #1
 8025296:	4293      	cmp	r3, r2
 8025298:	f6bf ae72 	bge.w	8024f80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 802529c:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80252a0:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 80252a4:	f1bb 0f00 	cmp.w	fp, #0
 80252a8:	dc70      	bgt.n	802538c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 80252aa:	9b07      	ldr	r3, [sp, #28]
 80252ac:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80252b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80252b2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80252b6:	930a      	str	r3, [sp, #40]	; 0x28
 80252b8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80252ba:	2b00      	cmp	r3, #0
 80252bc:	f340 81ae 	ble.w	802561c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 80252c0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80252c4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80252c8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80252cc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80252ce:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80252d2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80252d6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80252da:	eef0 6a62 	vmov.f32	s13, s5
 80252de:	ee61 7a27 	vmul.f32	s15, s2, s15
 80252e2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80252e6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80252ea:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 80252ee:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80252f2:	eef0 6a43 	vmov.f32	s13, s6
 80252f6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80252fa:	ee12 2a90 	vmov	r2, s5
 80252fe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025302:	fb92 f3f3 	sdiv	r3, r2, r3
 8025306:	ee13 2a10 	vmov	r2, s6
 802530a:	9327      	str	r3, [sp, #156]	; 0x9c
 802530c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802530e:	fb92 f3f3 	sdiv	r3, r2, r3
 8025312:	9328      	str	r3, [sp, #160]	; 0xa0
 8025314:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8025316:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8025318:	3b01      	subs	r3, #1
 802531a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802531e:	9316      	str	r3, [sp, #88]	; 0x58
 8025320:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025322:	bf08      	it	eq
 8025324:	4613      	moveq	r3, r2
 8025326:	ee16 5a90 	vmov	r5, s13
 802532a:	9307      	str	r3, [sp, #28]
 802532c:	eeb0 3a67 	vmov.f32	s6, s15
 8025330:	eef0 2a47 	vmov.f32	s5, s14
 8025334:	e5f8      	b.n	8024f28 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8025336:	2800      	cmp	r0, #0
 8025338:	f43f ae6b 	beq.w	8025012 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 802533c:	f818 1001 	ldrb.w	r1, [r8, r1]
 8025340:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8025344:	9108      	str	r1, [sp, #32]
 8025346:	0e09      	lsrs	r1, r1, #24
 8025348:	9110      	str	r1, [sp, #64]	; 0x40
 802534a:	e662      	b.n	8025012 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 802534c:	f113 0801 	adds.w	r8, r3, #1
 8025350:	f53f af74 	bmi.w	802523c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8025354:	4541      	cmp	r1, r8
 8025356:	f6ff af71 	blt.w	802523c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802535a:	f11c 0801 	adds.w	r8, ip, #1
 802535e:	f53f af6d 	bmi.w	802523c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8025362:	45c6      	cmp	lr, r8
 8025364:	f6ff af6a 	blt.w	802523c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8025368:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 802536c:	b209      	sxth	r1, r1
 802536e:	fa0f f38e 	sxth.w	r3, lr
 8025372:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8025376:	9301      	str	r3, [sp, #4]
 8025378:	9100      	str	r1, [sp, #0]
 802537a:	4633      	mov	r3, r6
 802537c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802537e:	9819      	ldr	r0, [sp, #100]	; 0x64
 8025380:	4639      	mov	r1, r7
 8025382:	f7ff fc7a 	bl	8024c7a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8025386:	e759      	b.n	802523c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8025388:	fffff800 	.word	0xfffff800
 802538c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 802538e:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8025390:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8025394:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025396:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802539a:	1427      	asrs	r7, r4, #16
 802539c:	142b      	asrs	r3, r5, #16
 802539e:	fb01 7303 	mla	r3, r1, r3, r7
 80253a2:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80253a4:	18e7      	adds	r7, r4, r3
 80253a6:	5ce3      	ldrb	r3, [r4, r3]
 80253a8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80253ac:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80253b0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80253b4:	2a00      	cmp	r2, #0
 80253b6:	f000 8127 	beq.w	8025608 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80253ba:	f897 e001 	ldrb.w	lr, [r7, #1]
 80253be:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80253c2:	940d      	str	r4, [sp, #52]	; 0x34
 80253c4:	0e24      	lsrs	r4, r4, #24
 80253c6:	9414      	str	r4, [sp, #80]	; 0x50
 80253c8:	b170      	cbz	r0, 80253e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80253ca:	eb07 0e01 	add.w	lr, r7, r1
 80253ce:	5c79      	ldrb	r1, [r7, r1]
 80253d0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80253d4:	9109      	str	r1, [sp, #36]	; 0x24
 80253d6:	0e09      	lsrs	r1, r1, #24
 80253d8:	9111      	str	r1, [sp, #68]	; 0x44
 80253da:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80253de:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80253e2:	910e      	str	r1, [sp, #56]	; 0x38
 80253e4:	0e09      	lsrs	r1, r1, #24
 80253e6:	9115      	str	r1, [sp, #84]	; 0x54
 80253e8:	b292      	uxth	r2, r2
 80253ea:	b280      	uxth	r0, r0
 80253ec:	fb02 f800 	mul.w	r8, r2, r0
 80253f0:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80253f4:	0112      	lsls	r2, r2, #4
 80253f6:	eba2 0e08 	sub.w	lr, r2, r8
 80253fa:	b280      	uxth	r0, r0
 80253fc:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8025400:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8025402:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8025404:	fa1f fe8e 	uxth.w	lr, lr
 8025408:	1a09      	subs	r1, r1, r0
 802540a:	b289      	uxth	r1, r1
 802540c:	fb0e f202 	mul.w	r2, lr, r2
 8025410:	fb01 220c 	mla	r2, r1, ip, r2
 8025414:	fb00 2204 	mla	r2, r0, r4, r2
 8025418:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802541a:	fb08 2204 	mla	r2, r8, r4, r2
 802541e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8025422:	2a00      	cmp	r2, #0
 8025424:	f000 80e5 	beq.w	80255f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8025428:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 802542c:	d019      	beq.n	8025462 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 802542e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8025432:	fb0c fa0a 	mul.w	sl, ip, sl
 8025436:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802543a:	fb0c fc03 	mul.w	ip, ip, r3
 802543e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8025442:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8025446:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802544a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802544e:	4453      	add	r3, sl
 8025450:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8025454:	0a1b      	lsrs	r3, r3, #8
 8025456:	0a3f      	lsrs	r7, r7, #8
 8025458:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802545c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8025460:	433b      	orrs	r3, r7
 8025462:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8025464:	2cff      	cmp	r4, #255	; 0xff
 8025466:	d020      	beq.n	80254aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8025468:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802546a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802546e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8025470:	4367      	muls	r7, r4
 8025472:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8025474:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8025478:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802547a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802547e:	fb04 fa0a 	mul.w	sl, r4, sl
 8025482:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025486:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802548a:	44bc      	add	ip, r7
 802548c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025490:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025494:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025498:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802549c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80254a0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80254a4:	ea4c 040a 	orr.w	r4, ip, sl
 80254a8:	940d      	str	r4, [sp, #52]	; 0x34
 80254aa:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80254ac:	2cff      	cmp	r4, #255	; 0xff
 80254ae:	d020      	beq.n	80254f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 80254b0:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80254b2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80254b6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80254b8:	4367      	muls	r7, r4
 80254ba:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80254bc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80254c0:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80254c2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80254c6:	fb04 fa0a 	mul.w	sl, r4, sl
 80254ca:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80254ce:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80254d2:	44bc      	add	ip, r7
 80254d4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80254d8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80254dc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80254e0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80254e4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80254e8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80254ec:	ea4c 040a 	orr.w	r4, ip, sl
 80254f0:	9409      	str	r4, [sp, #36]	; 0x24
 80254f2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80254f4:	2cff      	cmp	r4, #255	; 0xff
 80254f6:	d020      	beq.n	802553a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 80254f8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80254fa:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80254fe:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8025500:	4367      	muls	r7, r4
 8025502:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8025504:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8025508:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802550a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802550e:	fb04 fa0a 	mul.w	sl, r4, sl
 8025512:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025516:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802551a:	44bc      	add	ip, r7
 802551c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025520:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025524:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025528:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802552c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025530:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025534:	ea4c 040a 	orr.w	r4, ip, sl
 8025538:	940e      	str	r4, [sp, #56]	; 0x38
 802553a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802553c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8025540:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8025542:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8025546:	fb0e f707 	mul.w	r7, lr, r7
 802554a:	fb01 770c 	mla	r7, r1, ip, r7
 802554e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8025552:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8025554:	fb00 770c 	mla	r7, r0, ip, r7
 8025558:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802555c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802555e:	fb08 770c 	mla	r7, r8, ip, r7
 8025562:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8025566:	fb0e fe0c 	mul.w	lr, lr, ip
 802556a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802556e:	fb01 e303 	mla	r3, r1, r3, lr
 8025572:	9909      	ldr	r1, [sp, #36]	; 0x24
 8025574:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8025578:	990e      	ldr	r1, [sp, #56]	; 0x38
 802557a:	fb00 330a 	mla	r3, r0, sl, r3
 802557e:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8025582:	fb08 3c0c 	mla	ip, r8, ip, r3
 8025586:	f8b9 3000 	ldrh.w	r3, [r9]
 802558a:	43d2      	mvns	r2, r2
 802558c:	1218      	asrs	r0, r3, #8
 802558e:	b2d2      	uxtb	r2, r2
 8025590:	10d9      	asrs	r1, r3, #3
 8025592:	0a3f      	lsrs	r7, r7, #8
 8025594:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025598:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802559c:	00db      	lsls	r3, r3, #3
 802559e:	4350      	muls	r0, r2
 80255a0:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80255a4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80255a8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80255ac:	b2db      	uxtb	r3, r3
 80255ae:	ea47 070c 	orr.w	r7, r7, ip
 80255b2:	4351      	muls	r1, r2
 80255b4:	4353      	muls	r3, r2
 80255b6:	1c42      	adds	r2, r0, #1
 80255b8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80255bc:	0c3a      	lsrs	r2, r7, #16
 80255be:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80255c2:	4a18      	ldr	r2, [pc, #96]	; (8025624 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 80255c4:	b2c0      	uxtb	r0, r0
 80255c6:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 80255ca:	1c4a      	adds	r2, r1, #1
 80255cc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80255d0:	0a3a      	lsrs	r2, r7, #8
 80255d2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80255d6:	00c9      	lsls	r1, r1, #3
 80255d8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80255dc:	4301      	orrs	r1, r0
 80255de:	1c58      	adds	r0, r3, #1
 80255e0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80255e4:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80255e8:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 80255ec:	4308      	orrs	r0, r1
 80255ee:	f8a9 0000 	strh.w	r0, [r9]
 80255f2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80255f4:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80255f6:	441a      	add	r2, r3
 80255f8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80255fa:	9225      	str	r2, [sp, #148]	; 0x94
 80255fc:	f109 0902 	add.w	r9, r9, #2
 8025600:	441d      	add	r5, r3
 8025602:	f10b 3bff 	add.w	fp, fp, #4294967295
 8025606:	e64d      	b.n	80252a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 8025608:	2800      	cmp	r0, #0
 802560a:	f43f aeed 	beq.w	80253e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 802560e:	5c79      	ldrb	r1, [r7, r1]
 8025610:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8025614:	9109      	str	r1, [sp, #36]	; 0x24
 8025616:	0e09      	lsrs	r1, r1, #24
 8025618:	9111      	str	r1, [sp, #68]	; 0x44
 802561a:	e6e5      	b.n	80253e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 802561c:	b01b      	add	sp, #108	; 0x6c
 802561e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025622:	bf00      	nop
 8025624:	fffff800 	.word	0xfffff800

08025628 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8025628:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802562c:	b085      	sub	sp, #20
 802562e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8025632:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8025636:	9103      	str	r1, [sp, #12]
 8025638:	fb00 7406 	mla	r4, r0, r6, r7
 802563c:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8025640:	2800      	cmp	r0, #0
 8025642:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8025646:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 802564a:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 802564e:	9501      	str	r5, [sp, #4]
 8025650:	eb03 0904 	add.w	r9, r3, r4
 8025654:	f2c0 8150 	blt.w	80258f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8025658:	4583      	cmp	fp, r0
 802565a:	f340 814d 	ble.w	80258f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 802565e:	2f00      	cmp	r7, #0
 8025660:	f2c0 8146 	blt.w	80258f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8025664:	42be      	cmp	r6, r7
 8025666:	f340 8143 	ble.w	80258f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 802566a:	f813 c004 	ldrb.w	ip, [r3, r4]
 802566e:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8025672:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8025676:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 802567a:	4355      	muls	r5, r2
 802567c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025680:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8025684:	fb0c f203 	mul.w	r2, ip, r3
 8025688:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 802568c:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8025690:	441d      	add	r5, r3
 8025692:	f102 0320 	add.w	r3, r2, #32
 8025696:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802569a:	0a1b      	lsrs	r3, r3, #8
 802569c:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 80256a0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80256a4:	431c      	orrs	r4, r3
 80256a6:	1c7b      	adds	r3, r7, #1
 80256a8:	f100 812b 	bmi.w	8025902 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 80256ac:	429e      	cmp	r6, r3
 80256ae:	f340 8128 	ble.w	8025902 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 80256b2:	2900      	cmp	r1, #0
 80256b4:	f000 8128 	beq.w	8025908 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 80256b8:	9a01      	ldr	r2, [sp, #4]
 80256ba:	f899 3001 	ldrb.w	r3, [r9, #1]
 80256be:	8855      	ldrh	r5, [r2, #2]
 80256c0:	ea4f 08e3 	mov.w	r8, r3, asr #3
 80256c4:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 80256c8:	fb08 f802 	mul.w	r8, r8, r2
 80256cc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80256d0:	f64f 021f 	movw	r2, #63519	; 0xf81f
 80256d4:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 80256d8:	435d      	muls	r5, r3
 80256da:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80256de:	44d0      	add	r8, sl
 80256e0:	f105 0a20 	add.w	sl, r5, #32
 80256e4:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 80256e8:	0a2d      	lsrs	r5, r5, #8
 80256ea:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80256ee:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80256f2:	432a      	orrs	r2, r5
 80256f4:	3001      	adds	r0, #1
 80256f6:	f100 810d 	bmi.w	8025914 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80256fa:	4583      	cmp	fp, r0
 80256fc:	f340 810a 	ble.w	8025914 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8025700:	f1be 0f00 	cmp.w	lr, #0
 8025704:	f000 810b 	beq.w	802591e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 8025708:	2f00      	cmp	r7, #0
 802570a:	f2c0 8100 	blt.w	802590e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 802570e:	42be      	cmp	r6, r7
 8025710:	f340 80fd 	ble.w	802590e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8025714:	9801      	ldr	r0, [sp, #4]
 8025716:	f819 5006 	ldrb.w	r5, [r9, r6]
 802571a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 802571e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8025722:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8025726:	fb0a fa00 	mul.w	sl, sl, r0
 802572a:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 802572e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8025732:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8025736:	fb05 f808 	mul.w	r8, r5, r8
 802573a:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 802573e:	4482      	add	sl, r0
 8025740:	f108 0020 	add.w	r0, r8, #32
 8025744:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8025748:	0a00      	lsrs	r0, r0, #8
 802574a:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 802574e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025752:	ea4b 0b00 	orr.w	fp, fp, r0
 8025756:	3701      	adds	r7, #1
 8025758:	f100 80e6 	bmi.w	8025928 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 802575c:	42be      	cmp	r6, r7
 802575e:	f340 80e3 	ble.w	8025928 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8025762:	2900      	cmp	r1, #0
 8025764:	f000 80e3 	beq.w	802592e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8025768:	3601      	adds	r6, #1
 802576a:	9801      	ldr	r0, [sp, #4]
 802576c:	f819 7006 	ldrb.w	r7, [r9, r6]
 8025770:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8025774:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8025778:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 802577c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025780:	fb09 f906 	mul.w	r9, r9, r6
 8025784:	fb07 f800 	mul.w	r8, r7, r0
 8025788:	f64f 001f 	movw	r0, #63519	; 0xf81f
 802578c:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8025790:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8025794:	44d1      	add	r9, sl
 8025796:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 802579a:	f108 0020 	add.w	r0, r8, #32
 802579e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80257a2:	0a00      	lsrs	r0, r0, #8
 80257a4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80257a8:	4330      	orrs	r0, r6
 80257aa:	b28e      	uxth	r6, r1
 80257ac:	fa1f f98e 	uxth.w	r9, lr
 80257b0:	fb06 f809 	mul.w	r8, r6, r9
 80257b4:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 80257b8:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80257bc:	0136      	lsls	r6, r6, #4
 80257be:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80257c2:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80257c6:	9601      	str	r6, [sp, #4]
 80257c8:	ea4a 0404 	orr.w	r4, sl, r4
 80257cc:	fa1f f689 	uxth.w	r6, r9
 80257d0:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80257d4:	fb11 f90e 	smulbb	r9, r1, lr
 80257d8:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 80257dc:	9602      	str	r6, [sp, #8]
 80257de:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80257e2:	4626      	mov	r6, r4
 80257e4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80257e8:	f1ce 0410 	rsb	r4, lr, #16
 80257ec:	1a64      	subs	r4, r4, r1
 80257ee:	ea4a 0202 	orr.w	r2, sl, r2
 80257f2:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 80257f6:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80257fa:	434a      	muls	r2, r1
 80257fc:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8025800:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025804:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8025808:	fb04 2406 	mla	r4, r4, r6, r2
 802580c:	ea4a 0000 	orr.w	r0, sl, r0
 8025810:	fb09 4200 	mla	r2, r9, r0, r4
 8025814:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8025818:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 802581c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8025820:	ea44 0b0b 	orr.w	fp, r4, fp
 8025824:	9c01      	ldr	r4, [sp, #4]
 8025826:	9e02      	ldr	r6, [sp, #8]
 8025828:	9903      	ldr	r1, [sp, #12]
 802582a:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 802582e:	1ba4      	subs	r4, r4, r6
 8025830:	9e01      	ldr	r6, [sp, #4]
 8025832:	8808      	ldrh	r0, [r1, #0]
 8025834:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 8025838:	eba6 0608 	sub.w	r6, r6, r8
 802583c:	b2b6      	uxth	r6, r6
 802583e:	b2a4      	uxth	r4, r4
 8025840:	4373      	muls	r3, r6
 8025842:	fb0c 3304 	mla	r3, ip, r4, r3
 8025846:	9c02      	ldr	r4, [sp, #8]
 8025848:	fb04 3505 	mla	r5, r4, r5, r3
 802584c:	fb08 5707 	mla	r7, r8, r7, r5
 8025850:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8025854:	b289      	uxth	r1, r1
 8025856:	fb0e 2e0b 	mla	lr, lr, fp, r2
 802585a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 802585e:	434f      	muls	r7, r1
 8025860:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8025864:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8025868:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802586c:	1c7b      	adds	r3, r7, #1
 802586e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8025872:	ea42 0e0e 	orr.w	lr, r2, lr
 8025876:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 802587a:	fa1f f28e 	uxth.w	r2, lr
 802587e:	1203      	asrs	r3, r0, #8
 8025880:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8025884:	b2ff      	uxtb	r7, r7
 8025886:	1215      	asrs	r5, r2, #8
 8025888:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 802588c:	fb13 f307 	smulbb	r3, r3, r7
 8025890:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8025894:	fb05 3501 	mla	r5, r5, r1, r3
 8025898:	10c3      	asrs	r3, r0, #3
 802589a:	10d4      	asrs	r4, r2, #3
 802589c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80258a0:	fb13 f307 	smulbb	r3, r3, r7
 80258a4:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80258a8:	fb04 3401 	mla	r4, r4, r1, r3
 80258ac:	00c3      	lsls	r3, r0, #3
 80258ae:	00d2      	lsls	r2, r2, #3
 80258b0:	b2db      	uxtb	r3, r3
 80258b2:	fb13 f307 	smulbb	r3, r3, r7
 80258b6:	b2d2      	uxtb	r2, r2
 80258b8:	fb02 3101 	mla	r1, r2, r1, r3
 80258bc:	b2ad      	uxth	r5, r5
 80258be:	b289      	uxth	r1, r1
 80258c0:	b2a4      	uxth	r4, r4
 80258c2:	1c6b      	adds	r3, r5, #1
 80258c4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80258c8:	1c62      	adds	r2, r4, #1
 80258ca:	1c4b      	adds	r3, r1, #1
 80258cc:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80258d0:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80258d4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80258d8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80258dc:	0964      	lsrs	r4, r4, #5
 80258de:	432b      	orrs	r3, r5
 80258e0:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80258e4:	9a03      	ldr	r2, [sp, #12]
 80258e6:	4323      	orrs	r3, r4
 80258e8:	8013      	strh	r3, [r2, #0]
 80258ea:	b005      	add	sp, #20
 80258ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80258f0:	f04f 0c00 	mov.w	ip, #0
 80258f4:	4664      	mov	r4, ip
 80258f6:	e6d6      	b.n	80256a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 80258f8:	2300      	movs	r3, #0
 80258fa:	469c      	mov	ip, r3
 80258fc:	461a      	mov	r2, r3
 80258fe:	461c      	mov	r4, r3
 8025900:	e6f8      	b.n	80256f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8025902:	2300      	movs	r3, #0
 8025904:	461a      	mov	r2, r3
 8025906:	e6f5      	b.n	80256f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8025908:	460b      	mov	r3, r1
 802590a:	460a      	mov	r2, r1
 802590c:	e6f2      	b.n	80256f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 802590e:	2500      	movs	r5, #0
 8025910:	46ab      	mov	fp, r5
 8025912:	e720      	b.n	8025756 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 8025914:	2700      	movs	r7, #0
 8025916:	463d      	mov	r5, r7
 8025918:	4638      	mov	r0, r7
 802591a:	46bb      	mov	fp, r7
 802591c:	e745      	b.n	80257aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 802591e:	4677      	mov	r7, lr
 8025920:	4675      	mov	r5, lr
 8025922:	4670      	mov	r0, lr
 8025924:	46f3      	mov	fp, lr
 8025926:	e740      	b.n	80257aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8025928:	2700      	movs	r7, #0
 802592a:	4638      	mov	r0, r7
 802592c:	e73d      	b.n	80257aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 802592e:	460f      	mov	r7, r1
 8025930:	4608      	mov	r0, r1
 8025932:	e73a      	b.n	80257aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

08025934 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025934:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025938:	b097      	sub	sp, #92	; 0x5c
 802593a:	9214      	str	r2, [sp, #80]	; 0x50
 802593c:	9308      	str	r3, [sp, #32]
 802593e:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8025940:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8025944:	9312      	str	r3, [sp, #72]	; 0x48
 8025946:	9111      	str	r1, [sp, #68]	; 0x44
 8025948:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 802594c:	9015      	str	r0, [sp, #84]	; 0x54
 802594e:	6850      	ldr	r0, [r2, #4]
 8025950:	6812      	ldr	r2, [r2, #0]
 8025952:	fb00 1303 	mla	r3, r0, r3, r1
 8025956:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802595a:	9309      	str	r3, [sp, #36]	; 0x24
 802595c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802595e:	681b      	ldr	r3, [r3, #0]
 8025960:	930b      	str	r3, [sp, #44]	; 0x2c
 8025962:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025964:	685b      	ldr	r3, [r3, #4]
 8025966:	930c      	str	r3, [sp, #48]	; 0x30
 8025968:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 802596c:	930a      	str	r3, [sp, #40]	; 0x28
 802596e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8025970:	2b00      	cmp	r3, #0
 8025972:	dc03      	bgt.n	802597c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8025974:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8025976:	2b00      	cmp	r3, #0
 8025978:	f340 83cb 	ble.w	8026112 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 802597c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802597e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025982:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025986:	1e48      	subs	r0, r1, #1
 8025988:	1e55      	subs	r5, r2, #1
 802598a:	9b08      	ldr	r3, [sp, #32]
 802598c:	2b00      	cmp	r3, #0
 802598e:	f340 81a3 	ble.w	8025cd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 8025992:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8025994:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8025996:	1436      	asrs	r6, r6, #16
 8025998:	ea4f 4323 	mov.w	r3, r3, asr #16
 802599c:	d406      	bmi.n	80259ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802599e:	4286      	cmp	r6, r0
 80259a0:	da04      	bge.n	80259ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80259a2:	2b00      	cmp	r3, #0
 80259a4:	db02      	blt.n	80259ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80259a6:	42ab      	cmp	r3, r5
 80259a8:	f2c0 8197 	blt.w	8025cda <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80259ac:	3601      	adds	r6, #1
 80259ae:	f100 8184 	bmi.w	8025cba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80259b2:	42b1      	cmp	r1, r6
 80259b4:	f2c0 8181 	blt.w	8025cba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80259b8:	3301      	adds	r3, #1
 80259ba:	f100 817e 	bmi.w	8025cba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80259be:	429a      	cmp	r2, r3
 80259c0:	f2c0 817b 	blt.w	8025cba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80259c4:	9b08      	ldr	r3, [sp, #32]
 80259c6:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80259c8:	9313      	str	r3, [sp, #76]	; 0x4c
 80259ca:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80259ce:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80259d0:	2b00      	cmp	r3, #0
 80259d2:	f340 81a4 	ble.w	8025d1e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 80259d6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80259d8:	9d21      	ldr	r5, [sp, #132]	; 0x84
 80259da:	1418      	asrs	r0, r3, #16
 80259dc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80259de:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80259e2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80259e4:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80259e8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80259ea:	142d      	asrs	r5, r5, #16
 80259ec:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80259f0:	f100 81f8 	bmi.w	8025de4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80259f4:	f102 3eff 	add.w	lr, r2, #4294967295
 80259f8:	4575      	cmp	r5, lr
 80259fa:	f280 81f3 	bge.w	8025de4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80259fe:	2800      	cmp	r0, #0
 8025a00:	f2c0 81f0 	blt.w	8025de4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8025a04:	f103 3eff 	add.w	lr, r3, #4294967295
 8025a08:	4570      	cmp	r0, lr
 8025a0a:	f280 81eb 	bge.w	8025de4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8025a0e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8025a10:	b212      	sxth	r2, r2
 8025a12:	fb00 5002 	mla	r0, r0, r2, r5
 8025a16:	fa1f fe81 	uxth.w	lr, r1
 8025a1a:	eb03 0a00 	add.w	sl, r3, r0
 8025a1e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8025a22:	f813 9000 	ldrb.w	r9, [r3, r0]
 8025a26:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8025a2a:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8025a2e:	b29b      	uxth	r3, r3
 8025a30:	f1bc 0f00 	cmp.w	ip, #0
 8025a34:	f000 81b9 	beq.w	8025daa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8025a38:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8025a3c:	940d      	str	r4, [sp, #52]	; 0x34
 8025a3e:	eb0a 0b02 	add.w	fp, sl, r2
 8025a42:	fa1f fa8c 	uxth.w	sl, ip
 8025a46:	fb0a fe0e 	mul.w	lr, sl, lr
 8025a4a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8025a4e:	fa1f fa8a 	uxth.w	sl, sl
 8025a52:	eba5 050e 	sub.w	r5, r5, lr
 8025a56:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8025a5a:	940e      	str	r4, [sp, #56]	; 0x38
 8025a5c:	eba3 030a 	sub.w	r3, r3, sl
 8025a60:	b2ad      	uxth	r5, r5
 8025a62:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8025a64:	b29b      	uxth	r3, r3
 8025a66:	fb08 f505 	mul.w	r5, r8, r5
 8025a6a:	fb09 5303 	mla	r3, r9, r3, r5
 8025a6e:	fb0a 3304 	mla	r3, sl, r4, r3
 8025a72:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8025a74:	fb0e 3304 	mla	r3, lr, r4, r3
 8025a78:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025a7c:	2b00      	cmp	r3, #0
 8025a7e:	f000 810f 	beq.w	8025ca0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025a82:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8025a84:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8025a88:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8025a8c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8025a90:	f000 8190 	beq.w	8025db4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8025a94:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8025a98:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8025a9c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025aa0:	fb09 f000 	mul.w	r0, r9, r0
 8025aa4:	fb0a fe0e 	mul.w	lr, sl, lr
 8025aa8:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8025aac:	f100 0b20 	add.w	fp, r0, #32
 8025ab0:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8025ab4:	44ce      	add	lr, r9
 8025ab6:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8025aba:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8025abe:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8025ac2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8025ac6:	ea4e 0909 	orr.w	r9, lr, r9
 8025aca:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8025ace:	8868      	ldrh	r0, [r5, #2]
 8025ad0:	d019      	beq.n	8025b06 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8025ad2:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8025ad6:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8025ada:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025ade:	fb08 f800 	mul.w	r8, r8, r0
 8025ae2:	fb0a fe0e 	mul.w	lr, sl, lr
 8025ae6:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8025aea:	f108 0b20 	add.w	fp, r8, #32
 8025aee:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8025af2:	4486      	add	lr, r0
 8025af4:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8025af8:	0a00      	lsrs	r0, r0, #8
 8025afa:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8025afe:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025b02:	ea4e 0000 	orr.w	r0, lr, r0
 8025b06:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8025b0a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8025b0e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8025b12:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8025b16:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025b1a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8025b1e:	ea4e 0909 	orr.w	r9, lr, r9
 8025b22:	ea4a 0000 	orr.w	r0, sl, r0
 8025b26:	f1bc 0f00 	cmp.w	ip, #0
 8025b2a:	f000 8145 	beq.w	8025db8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8025b2e:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8025b32:	3a01      	subs	r2, #1
 8025b34:	0052      	lsls	r2, r2, #1
 8025b36:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8025b38:	3202      	adds	r2, #2
 8025b3a:	2cff      	cmp	r4, #255	; 0xff
 8025b3c:	eb05 0e02 	add.w	lr, r5, r2
 8025b40:	5aaa      	ldrh	r2, [r5, r2]
 8025b42:	d018      	beq.n	8025b76 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8025b44:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8025b48:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025b4c:	fb04 fa02 	mul.w	sl, r4, r2
 8025b50:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025b54:	fb08 f805 	mul.w	r8, r8, r5
 8025b58:	f10a 0520 	add.w	r5, sl, #32
 8025b5c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8025b60:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8025b64:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025b68:	4442      	add	r2, r8
 8025b6a:	0a2d      	lsrs	r5, r5, #8
 8025b6c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8025b70:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025b74:	432a      	orrs	r2, r5
 8025b76:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8025b78:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8025b7c:	2cff      	cmp	r4, #255	; 0xff
 8025b7e:	d01a      	beq.n	8025bb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8025b80:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8025b84:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025b88:	fb04 fa05 	mul.w	sl, r4, r5
 8025b8c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025b90:	fb08 f80e 	mul.w	r8, r8, lr
 8025b94:	f10a 0e20 	add.w	lr, sl, #32
 8025b98:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8025b9c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8025ba0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025ba4:	4445      	add	r5, r8
 8025ba6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025baa:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8025bae:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8025bb2:	ea45 050e 	orr.w	r5, r5, lr
 8025bb6:	fb1c fe01 	smulbb	lr, ip, r1
 8025bba:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8025bbe:	f1cc 0810 	rsb	r8, ip, #16
 8025bc2:	eba8 0801 	sub.w	r8, r8, r1
 8025bc6:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8025bca:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8025bce:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8025bd2:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8025bd6:	4341      	muls	r1, r0
 8025bd8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025bdc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025be0:	ea4a 0202 	orr.w	r2, sl, r2
 8025be4:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8025be8:	fb09 1108 	mla	r1, r9, r8, r1
 8025bec:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8025bf0:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8025bf4:	fb0c 1102 	mla	r1, ip, r2, r1
 8025bf8:	ea4b 0505 	orr.w	r5, fp, r5
 8025bfc:	fb0e 1e05 	mla	lr, lr, r5, r1
 8025c00:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8025c04:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8025c08:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025c0c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8025c10:	ea42 0e0e 	orr.w	lr, r2, lr
 8025c14:	fa1f f28e 	uxth.w	r2, lr
 8025c18:	2bff      	cmp	r3, #255	; 0xff
 8025c1a:	d103      	bne.n	8025c24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8025c1c:	9912      	ldr	r1, [sp, #72]	; 0x48
 8025c1e:	29ff      	cmp	r1, #255	; 0xff
 8025c20:	f000 80de 	beq.w	8025de0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8025c24:	990a      	ldr	r1, [sp, #40]	; 0x28
 8025c26:	8838      	ldrh	r0, [r7, #0]
 8025c28:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8025c2a:	434b      	muls	r3, r1
 8025c2c:	f103 0c01 	add.w	ip, r3, #1
 8025c30:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8025c34:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8025c38:	fa5f fc83 	uxtb.w	ip, r3
 8025c3c:	1203      	asrs	r3, r0, #8
 8025c3e:	1215      	asrs	r5, r2, #8
 8025c40:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8025c44:	fb13 f30c 	smulbb	r3, r3, ip
 8025c48:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8025c4c:	fb05 3501 	mla	r5, r5, r1, r3
 8025c50:	10c3      	asrs	r3, r0, #3
 8025c52:	10d1      	asrs	r1, r2, #3
 8025c54:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8025c58:	fb13 f30c 	smulbb	r3, r3, ip
 8025c5c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8025c60:	fb01 3104 	mla	r1, r1, r4, r3
 8025c64:	00c3      	lsls	r3, r0, #3
 8025c66:	00d2      	lsls	r2, r2, #3
 8025c68:	b2db      	uxtb	r3, r3
 8025c6a:	b2d2      	uxtb	r2, r2
 8025c6c:	fb13 f30c 	smulbb	r3, r3, ip
 8025c70:	b2ad      	uxth	r5, r5
 8025c72:	fb02 3304 	mla	r3, r2, r4, r3
 8025c76:	b29a      	uxth	r2, r3
 8025c78:	1c6b      	adds	r3, r5, #1
 8025c7a:	b289      	uxth	r1, r1
 8025c7c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8025c80:	1c53      	adds	r3, r2, #1
 8025c82:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025c86:	1c4a      	adds	r2, r1, #1
 8025c88:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8025c8c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8025c90:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025c94:	0949      	lsrs	r1, r1, #5
 8025c96:	432b      	orrs	r3, r5
 8025c98:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8025c9c:	430b      	orrs	r3, r1
 8025c9e:	803b      	strh	r3, [r7, #0]
 8025ca0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8025ca2:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8025ca4:	4413      	add	r3, r2
 8025ca6:	9321      	str	r3, [sp, #132]	; 0x84
 8025ca8:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8025caa:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025cac:	441a      	add	r2, r3
 8025cae:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8025cb0:	9222      	str	r2, [sp, #136]	; 0x88
 8025cb2:	3b01      	subs	r3, #1
 8025cb4:	3702      	adds	r7, #2
 8025cb6:	9313      	str	r3, [sp, #76]	; 0x4c
 8025cb8:	e689      	b.n	80259ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8025cba:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8025cbc:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8025cbe:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8025cc0:	4433      	add	r3, r6
 8025cc2:	9321      	str	r3, [sp, #132]	; 0x84
 8025cc4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025cc6:	441c      	add	r4, r3
 8025cc8:	9b08      	ldr	r3, [sp, #32]
 8025cca:	9422      	str	r4, [sp, #136]	; 0x88
 8025ccc:	3b01      	subs	r3, #1
 8025cce:	9308      	str	r3, [sp, #32]
 8025cd0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025cd2:	3302      	adds	r3, #2
 8025cd4:	9309      	str	r3, [sp, #36]	; 0x24
 8025cd6:	e658      	b.n	802598a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8025cd8:	d028      	beq.n	8025d2c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8025cda:	9b08      	ldr	r3, [sp, #32]
 8025cdc:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8025cde:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8025ce0:	3b01      	subs	r3, #1
 8025ce2:	fb00 5003 	mla	r0, r0, r3, r5
 8025ce6:	1400      	asrs	r0, r0, #16
 8025ce8:	f53f ae6c 	bmi.w	80259c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8025cec:	3901      	subs	r1, #1
 8025cee:	4288      	cmp	r0, r1
 8025cf0:	f6bf ae68 	bge.w	80259c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8025cf4:	9924      	ldr	r1, [sp, #144]	; 0x90
 8025cf6:	9822      	ldr	r0, [sp, #136]	; 0x88
 8025cf8:	fb01 0303 	mla	r3, r1, r3, r0
 8025cfc:	141b      	asrs	r3, r3, #16
 8025cfe:	f53f ae61 	bmi.w	80259c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8025d02:	3a01      	subs	r2, #1
 8025d04:	4293      	cmp	r3, r2
 8025d06:	f6bf ae5d 	bge.w	80259c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8025d0a:	9b08      	ldr	r3, [sp, #32]
 8025d0c:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8025d10:	9313      	str	r3, [sp, #76]	; 0x4c
 8025d12:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8025d16:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8025d18:	2b00      	cmp	r3, #0
 8025d1a:	f300 8082 	bgt.w	8025e22 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8025d1e:	9b08      	ldr	r3, [sp, #32]
 8025d20:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8025d24:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025d26:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8025d2a:	9309      	str	r3, [sp, #36]	; 0x24
 8025d2c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8025d2e:	2b00      	cmp	r3, #0
 8025d30:	f340 81ef 	ble.w	8026112 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8025d34:	ee30 0a04 	vadd.f32	s0, s0, s8
 8025d38:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8025d3c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025d40:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025d42:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025d46:	ee31 1a05 	vadd.f32	s2, s2, s10
 8025d4a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025d4e:	eef0 6a62 	vmov.f32	s13, s5
 8025d52:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025d56:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025d5a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025d5e:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 8025d62:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025d66:	eef0 6a43 	vmov.f32	s13, s6
 8025d6a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025d6e:	ee12 2a90 	vmov	r2, s5
 8025d72:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025d76:	fb92 f3f3 	sdiv	r3, r2, r3
 8025d7a:	ee13 2a10 	vmov	r2, s6
 8025d7e:	9323      	str	r3, [sp, #140]	; 0x8c
 8025d80:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025d82:	fb92 f3f3 	sdiv	r3, r2, r3
 8025d86:	9324      	str	r3, [sp, #144]	; 0x90
 8025d88:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8025d8a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8025d8c:	3b01      	subs	r3, #1
 8025d8e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025d92:	9311      	str	r3, [sp, #68]	; 0x44
 8025d94:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025d96:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 8025d9a:	bf08      	it	eq
 8025d9c:	4613      	moveq	r3, r2
 8025d9e:	9308      	str	r3, [sp, #32]
 8025da0:	eeb0 3a67 	vmov.f32	s6, s15
 8025da4:	eef0 2a47 	vmov.f32	s5, s14
 8025da8:	e5e1      	b.n	802596e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8025daa:	fb08 f505 	mul.w	r5, r8, r5
 8025dae:	fb09 5303 	mla	r3, r9, r3, r5
 8025db2:	e661      	b.n	8025a78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8025db4:	4681      	mov	r9, r0
 8025db6:	e688      	b.n	8025aca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8025db8:	f1c1 0210 	rsb	r2, r1, #16
 8025dbc:	4341      	muls	r1, r0
 8025dbe:	fb09 1902 	mla	r9, r9, r2, r1
 8025dc2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8025dc6:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8025dca:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8025dce:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025dd2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8025dd6:	ea42 0909 	orr.w	r9, r2, r9
 8025dda:	fa1f f289 	uxth.w	r2, r9
 8025dde:	e71b      	b.n	8025c18 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8025de0:	803a      	strh	r2, [r7, #0]
 8025de2:	e75d      	b.n	8025ca0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025de4:	f115 0e01 	adds.w	lr, r5, #1
 8025de8:	f53f af5a 	bmi.w	8025ca0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025dec:	4572      	cmp	r2, lr
 8025dee:	f6ff af57 	blt.w	8025ca0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025df2:	f110 0e01 	adds.w	lr, r0, #1
 8025df6:	f53f af53 	bmi.w	8025ca0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025dfa:	4573      	cmp	r3, lr
 8025dfc:	f6ff af50 	blt.w	8025ca0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025e00:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8025e02:	9502      	str	r5, [sp, #8]
 8025e04:	b21b      	sxth	r3, r3
 8025e06:	b212      	sxth	r2, r2
 8025e08:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8025e0c:	9301      	str	r3, [sp, #4]
 8025e0e:	9200      	str	r2, [sp, #0]
 8025e10:	e9cd c405 	strd	ip, r4, [sp, #20]
 8025e14:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8025e18:	4639      	mov	r1, r7
 8025e1a:	9815      	ldr	r0, [sp, #84]	; 0x54
 8025e1c:	f7ff fc04 	bl	8025628 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8025e20:	e73e      	b.n	8025ca0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025e22:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8025e24:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8025e28:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8025e2a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8025e2e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025e30:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025e34:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8025e36:	141f      	asrs	r7, r3, #16
 8025e38:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8025e3a:	141b      	asrs	r3, r3, #16
 8025e3c:	fb01 3707 	mla	r7, r1, r7, r3
 8025e40:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8025e42:	fa1f fc82 	uxth.w	ip, r2
 8025e46:	eb03 0a07 	add.w	sl, r3, r7
 8025e4a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8025e4e:	f813 9007 	ldrb.w	r9, [r3, r7]
 8025e52:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8025e56:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8025e5a:	b29b      	uxth	r3, r3
 8025e5c:	2d00      	cmp	r5, #0
 8025e5e:	f000 813d 	beq.w	80260dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8025e62:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8025e66:	940f      	str	r4, [sp, #60]	; 0x3c
 8025e68:	eb0a 0b01 	add.w	fp, sl, r1
 8025e6c:	fa1f fa85 	uxth.w	sl, r5
 8025e70:	fb0a fc0c 	mul.w	ip, sl, ip
 8025e74:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8025e78:	fa1f fa8a 	uxth.w	sl, sl
 8025e7c:	eba0 000c 	sub.w	r0, r0, ip
 8025e80:	eba3 030a 	sub.w	r3, r3, sl
 8025e84:	b280      	uxth	r0, r0
 8025e86:	fb08 f000 	mul.w	r0, r8, r0
 8025e8a:	b29b      	uxth	r3, r3
 8025e8c:	fb09 0303 	mla	r3, r9, r3, r0
 8025e90:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8025e92:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8025e96:	9410      	str	r4, [sp, #64]	; 0x40
 8025e98:	fb0a 3300 	mla	r3, sl, r0, r3
 8025e9c:	fb0c 3304 	mla	r3, ip, r4, r3
 8025ea0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025ea4:	2b00      	cmp	r3, #0
 8025ea6:	f000 810b 	beq.w	80260c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8025eaa:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8025eac:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8025eae:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8025eb2:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8025eb6:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8025eba:	f000 8114 	beq.w	80260e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8025ebe:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8025ec2:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8025ec6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8025eca:	fb09 f707 	mul.w	r7, r9, r7
 8025ece:	fb0a fc0c 	mul.w	ip, sl, ip
 8025ed2:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8025ed6:	f107 0b20 	add.w	fp, r7, #32
 8025eda:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8025ede:	44cc      	add	ip, r9
 8025ee0:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8025ee4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8025ee8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8025eec:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8025ef0:	ea4c 0909 	orr.w	r9, ip, r9
 8025ef4:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8025ef8:	8847      	ldrh	r7, [r0, #2]
 8025efa:	d019      	beq.n	8025f30 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8025efc:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8025f00:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8025f04:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8025f08:	fb08 f807 	mul.w	r8, r8, r7
 8025f0c:	fb0a fc0c 	mul.w	ip, sl, ip
 8025f10:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8025f14:	f108 0b20 	add.w	fp, r8, #32
 8025f18:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8025f1c:	44bc      	add	ip, r7
 8025f1e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8025f22:	0a3f      	lsrs	r7, r7, #8
 8025f24:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8025f28:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8025f2c:	ea4c 0707 	orr.w	r7, ip, r7
 8025f30:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8025f34:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8025f38:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8025f3c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8025f40:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025f44:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8025f48:	ea4c 0909 	orr.w	r9, ip, r9
 8025f4c:	ea4a 0707 	orr.w	r7, sl, r7
 8025f50:	2d00      	cmp	r5, #0
 8025f52:	f000 80ca 	beq.w	80260ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8025f56:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8025f5a:	3901      	subs	r1, #1
 8025f5c:	0049      	lsls	r1, r1, #1
 8025f5e:	3102      	adds	r1, #2
 8025f60:	eb00 0c01 	add.w	ip, r0, r1
 8025f64:	5a41      	ldrh	r1, [r0, r1]
 8025f66:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8025f68:	28ff      	cmp	r0, #255	; 0xff
 8025f6a:	d019      	beq.n	8025fa0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8025f6c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8025f6e:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8025f72:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8025f76:	fb04 fa01 	mul.w	sl, r4, r1
 8025f7a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025f7e:	fb08 f800 	mul.w	r8, r8, r0
 8025f82:	f10a 0020 	add.w	r0, sl, #32
 8025f86:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8025f8a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8025f8e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025f92:	4441      	add	r1, r8
 8025f94:	0a00      	lsrs	r0, r0, #8
 8025f96:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8025f9a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025f9e:	4301      	orrs	r1, r0
 8025fa0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8025fa2:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8025fa6:	2cff      	cmp	r4, #255	; 0xff
 8025fa8:	d01a      	beq.n	8025fe0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8025faa:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8025fae:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025fb2:	fb04 fa00 	mul.w	sl, r4, r0
 8025fb6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025fba:	fb08 f80c 	mul.w	r8, r8, ip
 8025fbe:	f10a 0c20 	add.w	ip, sl, #32
 8025fc2:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8025fc6:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8025fca:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025fce:	4440      	add	r0, r8
 8025fd0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025fd4:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8025fd8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8025fdc:	ea40 000c 	orr.w	r0, r0, ip
 8025fe0:	fb15 fc02 	smulbb	ip, r5, r2
 8025fe4:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8025fe8:	f1c5 0810 	rsb	r8, r5, #16
 8025fec:	eba8 0802 	sub.w	r8, r8, r2
 8025ff0:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8025ff4:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8025ff8:	437a      	muls	r2, r7
 8025ffa:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8025ffe:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8026002:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8026006:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802600a:	fb09 2208 	mla	r2, r9, r8, r2
 802600e:	ea4a 0101 	orr.w	r1, sl, r1
 8026012:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8026016:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802601a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802601e:	fb05 2201 	mla	r2, r5, r1, r2
 8026022:	ea4b 0000 	orr.w	r0, fp, r0
 8026026:	fb0c 2200 	mla	r2, ip, r0, r2
 802602a:	0d57      	lsrs	r7, r2, #21
 802602c:	0952      	lsrs	r2, r2, #5
 802602e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8026032:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026036:	433a      	orrs	r2, r7
 8026038:	2bff      	cmp	r3, #255	; 0xff
 802603a:	b292      	uxth	r2, r2
 802603c:	d102      	bne.n	8026044 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 802603e:	9912      	ldr	r1, [sp, #72]	; 0x48
 8026040:	29ff      	cmp	r1, #255	; 0xff
 8026042:	d063      	beq.n	802610c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8026044:	980a      	ldr	r0, [sp, #40]	; 0x28
 8026046:	f8be 1000 	ldrh.w	r1, [lr]
 802604a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802604c:	4343      	muls	r3, r0
 802604e:	1c58      	adds	r0, r3, #1
 8026050:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8026054:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8026058:	1208      	asrs	r0, r1, #8
 802605a:	b2db      	uxtb	r3, r3
 802605c:	1215      	asrs	r5, r2, #8
 802605e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8026062:	fb10 f003 	smulbb	r0, r0, r3
 8026066:	10cf      	asrs	r7, r1, #3
 8026068:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802606c:	00c9      	lsls	r1, r1, #3
 802606e:	fb05 0504 	mla	r5, r5, r4, r0
 8026072:	b2c9      	uxtb	r1, r1
 8026074:	10d0      	asrs	r0, r2, #3
 8026076:	00d2      	lsls	r2, r2, #3
 8026078:	fb11 f103 	smulbb	r1, r1, r3
 802607c:	b2d2      	uxtb	r2, r2
 802607e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8026082:	fb02 1204 	mla	r2, r2, r4, r1
 8026086:	fb17 f703 	smulbb	r7, r7, r3
 802608a:	b2ad      	uxth	r5, r5
 802608c:	b292      	uxth	r2, r2
 802608e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8026092:	fb00 7004 	mla	r0, r0, r4, r7
 8026096:	1c6b      	adds	r3, r5, #1
 8026098:	1c57      	adds	r7, r2, #1
 802609a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802609e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80260a2:	b280      	uxth	r0, r0
 80260a4:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80260a8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80260ac:	433d      	orrs	r5, r7
 80260ae:	1c47      	adds	r7, r0, #1
 80260b0:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80260b4:	097f      	lsrs	r7, r7, #5
 80260b6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80260ba:	433d      	orrs	r5, r7
 80260bc:	f8ae 5000 	strh.w	r5, [lr]
 80260c0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80260c2:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80260c4:	4413      	add	r3, r2
 80260c6:	9321      	str	r3, [sp, #132]	; 0x84
 80260c8:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80260ca:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80260cc:	441a      	add	r2, r3
 80260ce:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80260d0:	9222      	str	r2, [sp, #136]	; 0x88
 80260d2:	3b01      	subs	r3, #1
 80260d4:	f10e 0e02 	add.w	lr, lr, #2
 80260d8:	9313      	str	r3, [sp, #76]	; 0x4c
 80260da:	e61c      	b.n	8025d16 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 80260dc:	fb08 f000 	mul.w	r0, r8, r0
 80260e0:	fb09 0303 	mla	r3, r9, r3, r0
 80260e4:	e6dc      	b.n	8025ea0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 80260e6:	46b9      	mov	r9, r7
 80260e8:	e704      	b.n	8025ef4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 80260ea:	f1c2 0110 	rsb	r1, r2, #16
 80260ee:	437a      	muls	r2, r7
 80260f0:	fb09 2901 	mla	r9, r9, r1, r2
 80260f4:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80260f8:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80260fc:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8026100:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026104:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026108:	4302      	orrs	r2, r0
 802610a:	e795      	b.n	8026038 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 802610c:	f8ae 2000 	strh.w	r2, [lr]
 8026110:	e7d6      	b.n	80260c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8026112:	b017      	add	sp, #92	; 0x5c
 8026114:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08026118 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8026118:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802611c:	b085      	sub	sp, #20
 802611e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8026122:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8026126:	9103      	str	r1, [sp, #12]
 8026128:	fb00 7406 	mla	r4, r0, r6, r7
 802612c:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8026130:	2800      	cmp	r0, #0
 8026132:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8026136:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 802613a:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 802613e:	9501      	str	r5, [sp, #4]
 8026140:	eb02 0904 	add.w	r9, r2, r4
 8026144:	f2c0 8141 	blt.w	80263ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8026148:	4583      	cmp	fp, r0
 802614a:	f340 813e 	ble.w	80263ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 802614e:	2f00      	cmp	r7, #0
 8026150:	f2c0 8137 	blt.w	80263c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8026154:	42be      	cmp	r6, r7
 8026156:	f340 8134 	ble.w	80263c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 802615a:	f812 c004 	ldrb.w	ip, [r2, r4]
 802615e:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8026162:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8026166:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 802616a:	4355      	muls	r5, r2
 802616c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026170:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8026174:	fb0c f203 	mul.w	r2, ip, r3
 8026178:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 802617c:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8026180:	441d      	add	r5, r3
 8026182:	f102 0320 	add.w	r3, r2, #32
 8026186:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802618a:	0a1b      	lsrs	r3, r3, #8
 802618c:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8026190:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026194:	431c      	orrs	r4, r3
 8026196:	1c7b      	adds	r3, r7, #1
 8026198:	f100 811c 	bmi.w	80263d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 802619c:	429e      	cmp	r6, r3
 802619e:	f340 8119 	ble.w	80263d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 80261a2:	2900      	cmp	r1, #0
 80261a4:	f000 8119 	beq.w	80263da <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 80261a8:	9a01      	ldr	r2, [sp, #4]
 80261aa:	f899 3001 	ldrb.w	r3, [r9, #1]
 80261ae:	8855      	ldrh	r5, [r2, #2]
 80261b0:	ea4f 08e3 	mov.w	r8, r3, asr #3
 80261b4:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 80261b8:	fb08 f802 	mul.w	r8, r8, r2
 80261bc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80261c0:	f64f 021f 	movw	r2, #63519	; 0xf81f
 80261c4:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 80261c8:	435d      	muls	r5, r3
 80261ca:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80261ce:	44d0      	add	r8, sl
 80261d0:	f105 0a20 	add.w	sl, r5, #32
 80261d4:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 80261d8:	0a2d      	lsrs	r5, r5, #8
 80261da:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80261de:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80261e2:	432a      	orrs	r2, r5
 80261e4:	3001      	adds	r0, #1
 80261e6:	f100 80fe 	bmi.w	80263e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 80261ea:	4583      	cmp	fp, r0
 80261ec:	f340 80fb 	ble.w	80263e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 80261f0:	f1be 0f00 	cmp.w	lr, #0
 80261f4:	f000 80fc 	beq.w	80263f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 80261f8:	2f00      	cmp	r7, #0
 80261fa:	f2c0 80f1 	blt.w	80263e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 80261fe:	42be      	cmp	r6, r7
 8026200:	f340 80ee 	ble.w	80263e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8026204:	9801      	ldr	r0, [sp, #4]
 8026206:	f819 5006 	ldrb.w	r5, [r9, r6]
 802620a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 802620e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8026212:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8026216:	fb0a fa00 	mul.w	sl, sl, r0
 802621a:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 802621e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8026222:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8026226:	fb05 f808 	mul.w	r8, r5, r8
 802622a:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 802622e:	4482      	add	sl, r0
 8026230:	f108 0020 	add.w	r0, r8, #32
 8026234:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8026238:	0a00      	lsrs	r0, r0, #8
 802623a:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 802623e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026242:	ea4b 0b00 	orr.w	fp, fp, r0
 8026246:	3701      	adds	r7, #1
 8026248:	f100 80d7 	bmi.w	80263fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 802624c:	42be      	cmp	r6, r7
 802624e:	f340 80d4 	ble.w	80263fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8026252:	2900      	cmp	r1, #0
 8026254:	f000 80d4 	beq.w	8026400 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8026258:	3601      	adds	r6, #1
 802625a:	9801      	ldr	r0, [sp, #4]
 802625c:	f819 7006 	ldrb.w	r7, [r9, r6]
 8026260:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8026264:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8026268:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 802626c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026270:	fb09 f906 	mul.w	r9, r9, r6
 8026274:	fb07 f800 	mul.w	r8, r7, r0
 8026278:	f64f 001f 	movw	r0, #63519	; 0xf81f
 802627c:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8026280:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8026284:	44d1      	add	r9, sl
 8026286:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 802628a:	f108 0020 	add.w	r0, r8, #32
 802628e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8026292:	0a00      	lsrs	r0, r0, #8
 8026294:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026298:	4330      	orrs	r0, r6
 802629a:	b28e      	uxth	r6, r1
 802629c:	fa1f f98e 	uxth.w	r9, lr
 80262a0:	fb06 f809 	mul.w	r8, r6, r9
 80262a4:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 80262a8:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80262ac:	0136      	lsls	r6, r6, #4
 80262ae:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80262b2:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80262b6:	9601      	str	r6, [sp, #4]
 80262b8:	ea4a 0404 	orr.w	r4, sl, r4
 80262bc:	fa1f f689 	uxth.w	r6, r9
 80262c0:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80262c4:	fb11 f90e 	smulbb	r9, r1, lr
 80262c8:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 80262cc:	9602      	str	r6, [sp, #8]
 80262ce:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80262d2:	4626      	mov	r6, r4
 80262d4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80262d8:	f1ce 0410 	rsb	r4, lr, #16
 80262dc:	1a64      	subs	r4, r4, r1
 80262de:	ea4a 0202 	orr.w	r2, sl, r2
 80262e2:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 80262e6:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80262ea:	434a      	muls	r2, r1
 80262ec:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80262f0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80262f4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80262f8:	fb04 2406 	mla	r4, r4, r6, r2
 80262fc:	ea4a 0000 	orr.w	r0, sl, r0
 8026300:	fb09 4200 	mla	r2, r9, r0, r4
 8026304:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8026308:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 802630c:	9801      	ldr	r0, [sp, #4]
 802630e:	9903      	ldr	r1, [sp, #12]
 8026310:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8026314:	ea44 0b0b 	orr.w	fp, r4, fp
 8026318:	9c02      	ldr	r4, [sp, #8]
 802631a:	8809      	ldrh	r1, [r1, #0]
 802631c:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8026320:	1b00      	subs	r0, r0, r4
 8026322:	9c01      	ldr	r4, [sp, #4]
 8026324:	eba4 0608 	sub.w	r6, r4, r8
 8026328:	b2b6      	uxth	r6, r6
 802632a:	b280      	uxth	r0, r0
 802632c:	4373      	muls	r3, r6
 802632e:	fb0c 3300 	mla	r3, ip, r0, r3
 8026332:	9802      	ldr	r0, [sp, #8]
 8026334:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8026338:	fb00 3505 	mla	r5, r0, r5, r3
 802633c:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8026340:	fb08 5707 	mla	r7, r8, r7, r5
 8026344:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8026348:	120b      	asrs	r3, r1, #8
 802634a:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802634e:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8026352:	b2ff      	uxtb	r7, r7
 8026354:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026358:	10c8      	asrs	r0, r1, #3
 802635a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802635e:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8026362:	00c9      	lsls	r1, r1, #3
 8026364:	437b      	muls	r3, r7
 8026366:	ea42 0e0e 	orr.w	lr, r2, lr
 802636a:	b2c9      	uxtb	r1, r1
 802636c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8026370:	fa1f f28e 	uxth.w	r2, lr
 8026374:	4378      	muls	r0, r7
 8026376:	434f      	muls	r7, r1
 8026378:	1c59      	adds	r1, r3, #1
 802637a:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 802637e:	1213      	asrs	r3, r2, #8
 8026380:	f023 0307 	bic.w	r3, r3, #7
 8026384:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8026388:	1c41      	adds	r1, r0, #1
 802638a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 802638e:	10d1      	asrs	r1, r2, #3
 8026390:	f021 0103 	bic.w	r1, r1, #3
 8026394:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8026398:	021b      	lsls	r3, r3, #8
 802639a:	00c9      	lsls	r1, r1, #3
 802639c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80263a0:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80263a4:	430b      	orrs	r3, r1
 80263a6:	1c79      	adds	r1, r7, #1
 80263a8:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 80263ac:	00d2      	lsls	r2, r2, #3
 80263ae:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80263b2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80263b6:	431a      	orrs	r2, r3
 80263b8:	9b03      	ldr	r3, [sp, #12]
 80263ba:	801a      	strh	r2, [r3, #0]
 80263bc:	b005      	add	sp, #20
 80263be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80263c2:	f04f 0c00 	mov.w	ip, #0
 80263c6:	4664      	mov	r4, ip
 80263c8:	e6e5      	b.n	8026196 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 80263ca:	2300      	movs	r3, #0
 80263cc:	469c      	mov	ip, r3
 80263ce:	461a      	mov	r2, r3
 80263d0:	461c      	mov	r4, r3
 80263d2:	e707      	b.n	80261e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80263d4:	2300      	movs	r3, #0
 80263d6:	461a      	mov	r2, r3
 80263d8:	e704      	b.n	80261e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80263da:	460b      	mov	r3, r1
 80263dc:	460a      	mov	r2, r1
 80263de:	e701      	b.n	80261e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80263e0:	2500      	movs	r5, #0
 80263e2:	46ab      	mov	fp, r5
 80263e4:	e72f      	b.n	8026246 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 80263e6:	2700      	movs	r7, #0
 80263e8:	463d      	mov	r5, r7
 80263ea:	4638      	mov	r0, r7
 80263ec:	46bb      	mov	fp, r7
 80263ee:	e754      	b.n	802629a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80263f0:	4677      	mov	r7, lr
 80263f2:	4675      	mov	r5, lr
 80263f4:	4670      	mov	r0, lr
 80263f6:	46f3      	mov	fp, lr
 80263f8:	e74f      	b.n	802629a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80263fa:	2700      	movs	r7, #0
 80263fc:	4638      	mov	r0, r7
 80263fe:	e74c      	b.n	802629a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8026400:	460f      	mov	r7, r1
 8026402:	4608      	mov	r0, r1
 8026404:	e749      	b.n	802629a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08026408 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8026408:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802640c:	b093      	sub	sp, #76	; 0x4c
 802640e:	9210      	str	r2, [sp, #64]	; 0x40
 8026410:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8026412:	910e      	str	r1, [sp, #56]	; 0x38
 8026414:	9306      	str	r3, [sp, #24]
 8026416:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 802641a:	9011      	str	r0, [sp, #68]	; 0x44
 802641c:	6850      	ldr	r0, [r2, #4]
 802641e:	6812      	ldr	r2, [r2, #0]
 8026420:	fb00 1303 	mla	r3, r0, r3, r1
 8026424:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8026428:	9307      	str	r3, [sp, #28]
 802642a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802642c:	681b      	ldr	r3, [r3, #0]
 802642e:	9308      	str	r3, [sp, #32]
 8026430:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026432:	685b      	ldr	r3, [r3, #4]
 8026434:	9309      	str	r3, [sp, #36]	; 0x24
 8026436:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8026438:	2b00      	cmp	r3, #0
 802643a:	dc03      	bgt.n	8026444 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 802643c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802643e:	2b00      	cmp	r3, #0
 8026440:	f340 83b4 	ble.w	8026bac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8026444:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026446:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802644a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802644e:	1e48      	subs	r0, r1, #1
 8026450:	1e55      	subs	r5, r2, #1
 8026452:	9b06      	ldr	r3, [sp, #24]
 8026454:	2b00      	cmp	r3, #0
 8026456:	f340 8163 	ble.w	8026720 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 802645a:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 802645c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802645e:	1436      	asrs	r6, r6, #16
 8026460:	ea4f 4323 	mov.w	r3, r3, asr #16
 8026464:	d406      	bmi.n	8026474 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8026466:	4286      	cmp	r6, r0
 8026468:	da04      	bge.n	8026474 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802646a:	2b00      	cmp	r3, #0
 802646c:	db02      	blt.n	8026474 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802646e:	42ab      	cmp	r3, r5
 8026470:	f2c0 8157 	blt.w	8026722 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8026474:	3601      	adds	r6, #1
 8026476:	f100 8144 	bmi.w	8026702 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 802647a:	42b1      	cmp	r1, r6
 802647c:	f2c0 8141 	blt.w	8026702 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8026480:	3301      	adds	r3, #1
 8026482:	f100 813e 	bmi.w	8026702 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8026486:	429a      	cmp	r2, r3
 8026488:	f2c0 813b 	blt.w	8026702 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 802648c:	9b06      	ldr	r3, [sp, #24]
 802648e:	9f07      	ldr	r7, [sp, #28]
 8026490:	930f      	str	r3, [sp, #60]	; 0x3c
 8026492:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8026496:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8026498:	2b00      	cmp	r3, #0
 802649a:	f340 8164 	ble.w	8026766 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 802649e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80264a0:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80264a2:	1418      	asrs	r0, r3, #16
 80264a4:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80264a6:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80264aa:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80264ac:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80264b0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80264b2:	142d      	asrs	r5, r5, #16
 80264b4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80264b8:	f100 81ee 	bmi.w	8026898 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80264bc:	f102 3eff 	add.w	lr, r2, #4294967295
 80264c0:	4575      	cmp	r5, lr
 80264c2:	f280 81e9 	bge.w	8026898 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80264c6:	2800      	cmp	r0, #0
 80264c8:	f2c0 81e6 	blt.w	8026898 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80264cc:	f103 3eff 	add.w	lr, r3, #4294967295
 80264d0:	4570      	cmp	r0, lr
 80264d2:	f280 81e1 	bge.w	8026898 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80264d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80264d8:	b212      	sxth	r2, r2
 80264da:	fb00 5002 	mla	r0, r0, r2, r5
 80264de:	fa1f fe81 	uxth.w	lr, r1
 80264e2:	eb03 0a00 	add.w	sl, r3, r0
 80264e6:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80264ea:	f813 9000 	ldrb.w	r9, [r3, r0]
 80264ee:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80264f2:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80264f6:	b29b      	uxth	r3, r3
 80264f8:	f1bc 0f00 	cmp.w	ip, #0
 80264fc:	f000 8179 	beq.w	80267f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8026500:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8026504:	940a      	str	r4, [sp, #40]	; 0x28
 8026506:	eb0a 0b02 	add.w	fp, sl, r2
 802650a:	fa1f fa8c 	uxth.w	sl, ip
 802650e:	fb0a fe0e 	mul.w	lr, sl, lr
 8026512:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8026516:	fa1f fa8a 	uxth.w	sl, sl
 802651a:	eba5 050e 	sub.w	r5, r5, lr
 802651e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8026522:	940b      	str	r4, [sp, #44]	; 0x2c
 8026524:	eba3 030a 	sub.w	r3, r3, sl
 8026528:	b2ad      	uxth	r5, r5
 802652a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802652c:	b29b      	uxth	r3, r3
 802652e:	fb08 f505 	mul.w	r5, r8, r5
 8026532:	fb09 5303 	mla	r3, r9, r3, r5
 8026536:	fb0a 3304 	mla	r3, sl, r4, r3
 802653a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802653c:	fb0e 3304 	mla	r3, lr, r4, r3
 8026540:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026544:	2b00      	cmp	r3, #0
 8026546:	f000 80cf 	beq.w	80266e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802654a:	9c08      	ldr	r4, [sp, #32]
 802654c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8026550:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8026554:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8026558:	f000 8150 	beq.w	80267fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 802655c:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8026560:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8026564:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026568:	fb09 f000 	mul.w	r0, r9, r0
 802656c:	fb0a fe0e 	mul.w	lr, sl, lr
 8026570:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8026574:	f100 0b20 	add.w	fp, r0, #32
 8026578:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 802657c:	44ce      	add	lr, r9
 802657e:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8026582:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8026586:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802658a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 802658e:	ea4e 0909 	orr.w	r9, lr, r9
 8026592:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8026596:	8868      	ldrh	r0, [r5, #2]
 8026598:	d019      	beq.n	80265ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 802659a:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802659e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80265a2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80265a6:	fb08 f800 	mul.w	r8, r8, r0
 80265aa:	fb0a fe0e 	mul.w	lr, sl, lr
 80265ae:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80265b2:	f108 0b20 	add.w	fp, r8, #32
 80265b6:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80265ba:	4486      	add	lr, r0
 80265bc:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80265c0:	0a00      	lsrs	r0, r0, #8
 80265c2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80265c6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80265ca:	ea4e 0000 	orr.w	r0, lr, r0
 80265ce:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80265d2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80265d6:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80265da:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80265de:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80265e2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80265e6:	ea4e 0909 	orr.w	r9, lr, r9
 80265ea:	ea4a 0000 	orr.w	r0, sl, r0
 80265ee:	f1bc 0f00 	cmp.w	ip, #0
 80265f2:	f000 8105 	beq.w	8026800 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80265f6:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80265fa:	3a01      	subs	r2, #1
 80265fc:	0052      	lsls	r2, r2, #1
 80265fe:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8026600:	3202      	adds	r2, #2
 8026602:	2cff      	cmp	r4, #255	; 0xff
 8026604:	eb05 0e02 	add.w	lr, r5, r2
 8026608:	5aaa      	ldrh	r2, [r5, r2]
 802660a:	d018      	beq.n	802663e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 802660c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8026610:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026614:	fb04 fa02 	mul.w	sl, r4, r2
 8026618:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802661c:	fb08 f805 	mul.w	r8, r8, r5
 8026620:	f10a 0520 	add.w	r5, sl, #32
 8026624:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8026628:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 802662c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8026630:	4442      	add	r2, r8
 8026632:	0a2d      	lsrs	r5, r5, #8
 8026634:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8026638:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802663c:	432a      	orrs	r2, r5
 802663e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8026640:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8026644:	2cff      	cmp	r4, #255	; 0xff
 8026646:	d01a      	beq.n	802667e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8026648:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 802664c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8026650:	fb04 fa05 	mul.w	sl, r4, r5
 8026654:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8026658:	fb08 f80e 	mul.w	r8, r8, lr
 802665c:	f10a 0e20 	add.w	lr, sl, #32
 8026660:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8026664:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8026668:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802666c:	4445      	add	r5, r8
 802666e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8026672:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8026676:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 802667a:	ea45 050e 	orr.w	r5, r5, lr
 802667e:	fb1c fe01 	smulbb	lr, ip, r1
 8026682:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8026686:	f1cc 0810 	rsb	r8, ip, #16
 802668a:	eba8 0801 	sub.w	r8, r8, r1
 802668e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8026692:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8026696:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 802669a:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 802669e:	4341      	muls	r1, r0
 80266a0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80266a4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80266a8:	ea4a 0202 	orr.w	r2, sl, r2
 80266ac:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80266b0:	fb09 1108 	mla	r1, r9, r8, r1
 80266b4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80266b8:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80266bc:	fb0c 1102 	mla	r1, ip, r2, r1
 80266c0:	ea4b 0505 	orr.w	r5, fp, r5
 80266c4:	fb0e 1e05 	mla	lr, lr, r5, r1
 80266c8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80266cc:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80266d0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80266d4:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80266d8:	ea42 0e0e 	orr.w	lr, r2, lr
 80266dc:	fa1f f28e 	uxth.w	r2, lr
 80266e0:	2bff      	cmp	r3, #255	; 0xff
 80266e2:	f040 80a1 	bne.w	8026828 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 80266e6:	803a      	strh	r2, [r7, #0]
 80266e8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80266ea:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80266ec:	4413      	add	r3, r2
 80266ee:	931d      	str	r3, [sp, #116]	; 0x74
 80266f0:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80266f2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80266f4:	441a      	add	r2, r3
 80266f6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80266f8:	921e      	str	r2, [sp, #120]	; 0x78
 80266fa:	3b01      	subs	r3, #1
 80266fc:	3702      	adds	r7, #2
 80266fe:	930f      	str	r3, [sp, #60]	; 0x3c
 8026700:	e6c9      	b.n	8026496 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8026702:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8026704:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8026706:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 8026708:	4433      	add	r3, r6
 802670a:	931d      	str	r3, [sp, #116]	; 0x74
 802670c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802670e:	441c      	add	r4, r3
 8026710:	9b06      	ldr	r3, [sp, #24]
 8026712:	941e      	str	r4, [sp, #120]	; 0x78
 8026714:	3b01      	subs	r3, #1
 8026716:	9306      	str	r3, [sp, #24]
 8026718:	9b07      	ldr	r3, [sp, #28]
 802671a:	3302      	adds	r3, #2
 802671c:	9307      	str	r3, [sp, #28]
 802671e:	e698      	b.n	8026452 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8026720:	d028      	beq.n	8026774 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8026722:	9b06      	ldr	r3, [sp, #24]
 8026724:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8026726:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8026728:	3b01      	subs	r3, #1
 802672a:	fb00 5003 	mla	r0, r0, r3, r5
 802672e:	1400      	asrs	r0, r0, #16
 8026730:	f53f aeac 	bmi.w	802648c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8026734:	3901      	subs	r1, #1
 8026736:	4288      	cmp	r0, r1
 8026738:	f6bf aea8 	bge.w	802648c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802673c:	9920      	ldr	r1, [sp, #128]	; 0x80
 802673e:	981e      	ldr	r0, [sp, #120]	; 0x78
 8026740:	fb01 0303 	mla	r3, r1, r3, r0
 8026744:	141b      	asrs	r3, r3, #16
 8026746:	f53f aea1 	bmi.w	802648c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802674a:	3a01      	subs	r2, #1
 802674c:	4293      	cmp	r3, r2
 802674e:	f6bf ae9d 	bge.w	802648c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8026752:	9b06      	ldr	r3, [sp, #24]
 8026754:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8026758:	930f      	str	r3, [sp, #60]	; 0x3c
 802675a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802675e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8026760:	2b00      	cmp	r3, #0
 8026762:	f300 80b6 	bgt.w	80268d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 8026766:	9b06      	ldr	r3, [sp, #24]
 8026768:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 802676c:	9b07      	ldr	r3, [sp, #28]
 802676e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8026772:	9307      	str	r3, [sp, #28]
 8026774:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8026776:	2b00      	cmp	r3, #0
 8026778:	f340 8218 	ble.w	8026bac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 802677c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026780:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026784:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8026788:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802678a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802678e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026792:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8026796:	eef0 6a62 	vmov.f32	s13, s5
 802679a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802679e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80267a2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80267a6:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 80267aa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80267ae:	eef0 6a43 	vmov.f32	s13, s6
 80267b2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80267b6:	ee12 2a90 	vmov	r2, s5
 80267ba:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80267be:	fb92 f3f3 	sdiv	r3, r2, r3
 80267c2:	ee13 2a10 	vmov	r2, s6
 80267c6:	931f      	str	r3, [sp, #124]	; 0x7c
 80267c8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80267ca:	fb92 f3f3 	sdiv	r3, r2, r3
 80267ce:	9320      	str	r3, [sp, #128]	; 0x80
 80267d0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80267d2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80267d4:	3b01      	subs	r3, #1
 80267d6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80267da:	930e      	str	r3, [sp, #56]	; 0x38
 80267dc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80267de:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 80267e2:	bf08      	it	eq
 80267e4:	4613      	moveq	r3, r2
 80267e6:	9306      	str	r3, [sp, #24]
 80267e8:	eeb0 3a67 	vmov.f32	s6, s15
 80267ec:	eef0 2a47 	vmov.f32	s5, s14
 80267f0:	e621      	b.n	8026436 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80267f2:	fb08 f505 	mul.w	r5, r8, r5
 80267f6:	fb09 5303 	mla	r3, r9, r3, r5
 80267fa:	e6a1      	b.n	8026540 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 80267fc:	4681      	mov	r9, r0
 80267fe:	e6c8      	b.n	8026592 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8026800:	f1c1 0210 	rsb	r2, r1, #16
 8026804:	4341      	muls	r1, r0
 8026806:	fb09 1902 	mla	r9, r9, r2, r1
 802680a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802680e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8026812:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8026816:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802681a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802681e:	ea42 0909 	orr.w	r9, r2, r9
 8026822:	fa1f f289 	uxth.w	r2, r9
 8026826:	e75b      	b.n	80266e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8026828:	f8b7 c000 	ldrh.w	ip, [r7]
 802682c:	43db      	mvns	r3, r3
 802682e:	ea4f 202c 	mov.w	r0, ip, asr #8
 8026832:	fa5f fe83 	uxtb.w	lr, r3
 8026836:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802683a:	fb00 f00e 	mul.w	r0, r0, lr
 802683e:	1c41      	adds	r1, r0, #1
 8026840:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8026844:	1211      	asrs	r1, r2, #8
 8026846:	ea4f 05ec 	mov.w	r5, ip, asr #3
 802684a:	f021 0107 	bic.w	r1, r1, #7
 802684e:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8026852:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8026856:	48d7      	ldr	r0, [pc, #860]	; (8026bb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8026858:	fb05 f50e 	mul.w	r5, r5, lr
 802685c:	b2c9      	uxtb	r1, r1
 802685e:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8026862:	1c69      	adds	r1, r5, #1
 8026864:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8026868:	10d1      	asrs	r1, r2, #3
 802686a:	f021 0103 	bic.w	r1, r1, #3
 802686e:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8026872:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8026876:	b2db      	uxtb	r3, r3
 8026878:	00c9      	lsls	r1, r1, #3
 802687a:	fb03 f30e 	mul.w	r3, r3, lr
 802687e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8026882:	4301      	orrs	r1, r0
 8026884:	1c58      	adds	r0, r3, #1
 8026886:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802688a:	00d2      	lsls	r2, r2, #3
 802688c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8026890:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026894:	430a      	orrs	r2, r1
 8026896:	e726      	b.n	80266e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 8026898:	f115 0e01 	adds.w	lr, r5, #1
 802689c:	f53f af24 	bmi.w	80266e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80268a0:	4572      	cmp	r2, lr
 80268a2:	f6ff af21 	blt.w	80266e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80268a6:	f110 0e01 	adds.w	lr, r0, #1
 80268aa:	f53f af1d 	bmi.w	80266e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80268ae:	4573      	cmp	r3, lr
 80268b0:	f6ff af1a 	blt.w	80266e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80268b4:	b21b      	sxth	r3, r3
 80268b6:	b212      	sxth	r2, r2
 80268b8:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 80268bc:	e9cd 5002 	strd	r5, r0, [sp, #8]
 80268c0:	9301      	str	r3, [sp, #4]
 80268c2:	9200      	str	r2, [sp, #0]
 80268c4:	4639      	mov	r1, r7
 80268c6:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 80268ca:	9811      	ldr	r0, [sp, #68]	; 0x44
 80268cc:	f7ff fc24 	bl	8026118 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80268d0:	e70a      	b.n	80266e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80268d2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80268d4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80268d8:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80268da:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80268de:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80268e0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80268e4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80268e6:	141f      	asrs	r7, r3, #16
 80268e8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80268ea:	141b      	asrs	r3, r3, #16
 80268ec:	fb01 3707 	mla	r7, r1, r7, r3
 80268f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80268f2:	fa1f fc82 	uxth.w	ip, r2
 80268f6:	eb03 0a07 	add.w	sl, r3, r7
 80268fa:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80268fe:	f813 9007 	ldrb.w	r9, [r3, r7]
 8026902:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8026906:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802690a:	b29b      	uxth	r3, r3
 802690c:	2d00      	cmp	r5, #0
 802690e:	f000 80fe 	beq.w	8026b0e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 8026912:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8026916:	940c      	str	r4, [sp, #48]	; 0x30
 8026918:	eb0a 0b01 	add.w	fp, sl, r1
 802691c:	fa1f fa85 	uxth.w	sl, r5
 8026920:	fb0a fc0c 	mul.w	ip, sl, ip
 8026924:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8026928:	fa1f fa8a 	uxth.w	sl, sl
 802692c:	eba0 000c 	sub.w	r0, r0, ip
 8026930:	eba3 030a 	sub.w	r3, r3, sl
 8026934:	b280      	uxth	r0, r0
 8026936:	fb08 f000 	mul.w	r0, r8, r0
 802693a:	b29b      	uxth	r3, r3
 802693c:	fb09 0303 	mla	r3, r9, r3, r0
 8026940:	980c      	ldr	r0, [sp, #48]	; 0x30
 8026942:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8026946:	940d      	str	r4, [sp, #52]	; 0x34
 8026948:	fb0a 3300 	mla	r3, sl, r0, r3
 802694c:	fb0c 3304 	mla	r3, ip, r4, r3
 8026950:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026954:	2b00      	cmp	r3, #0
 8026956:	f000 80cc 	beq.w	8026af2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 802695a:	9808      	ldr	r0, [sp, #32]
 802695c:	9c08      	ldr	r4, [sp, #32]
 802695e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8026962:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8026966:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 802696a:	f000 80d5 	beq.w	8026b18 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 802696e:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8026972:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8026976:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802697a:	fb09 f707 	mul.w	r7, r9, r7
 802697e:	fb0a fc0c 	mul.w	ip, sl, ip
 8026982:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8026986:	f107 0b20 	add.w	fp, r7, #32
 802698a:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 802698e:	44cc      	add	ip, r9
 8026990:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8026994:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8026998:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 802699c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80269a0:	ea4c 0909 	orr.w	r9, ip, r9
 80269a4:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80269a8:	8847      	ldrh	r7, [r0, #2]
 80269aa:	d019      	beq.n	80269e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 80269ac:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80269b0:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80269b4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80269b8:	fb08 f807 	mul.w	r8, r8, r7
 80269bc:	fb0a fc0c 	mul.w	ip, sl, ip
 80269c0:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80269c4:	f108 0b20 	add.w	fp, r8, #32
 80269c8:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80269cc:	44bc      	add	ip, r7
 80269ce:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80269d2:	0a3f      	lsrs	r7, r7, #8
 80269d4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80269d8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80269dc:	ea4c 0707 	orr.w	r7, ip, r7
 80269e0:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80269e4:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80269e8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80269ec:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80269f0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80269f4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80269f8:	ea4c 0909 	orr.w	r9, ip, r9
 80269fc:	ea4a 0707 	orr.w	r7, sl, r7
 8026a00:	2d00      	cmp	r5, #0
 8026a02:	f000 808b 	beq.w	8026b1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 8026a06:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8026a0a:	3901      	subs	r1, #1
 8026a0c:	0049      	lsls	r1, r1, #1
 8026a0e:	3102      	adds	r1, #2
 8026a10:	eb00 0c01 	add.w	ip, r0, r1
 8026a14:	5a41      	ldrh	r1, [r0, r1]
 8026a16:	980c      	ldr	r0, [sp, #48]	; 0x30
 8026a18:	28ff      	cmp	r0, #255	; 0xff
 8026a1a:	d019      	beq.n	8026a50 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 8026a1c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8026a1e:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8026a22:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8026a26:	fb04 fa01 	mul.w	sl, r4, r1
 8026a2a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8026a2e:	fb08 f800 	mul.w	r8, r8, r0
 8026a32:	f10a 0020 	add.w	r0, sl, #32
 8026a36:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8026a3a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8026a3e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8026a42:	4441      	add	r1, r8
 8026a44:	0a00      	lsrs	r0, r0, #8
 8026a46:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8026a4a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026a4e:	4301      	orrs	r1, r0
 8026a50:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8026a52:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8026a56:	2cff      	cmp	r4, #255	; 0xff
 8026a58:	d01a      	beq.n	8026a90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 8026a5a:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8026a5e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026a62:	fb04 fa00 	mul.w	sl, r4, r0
 8026a66:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8026a6a:	fb08 f80c 	mul.w	r8, r8, ip
 8026a6e:	f10a 0c20 	add.w	ip, sl, #32
 8026a72:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8026a76:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8026a7a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8026a7e:	4440      	add	r0, r8
 8026a80:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026a84:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8026a88:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8026a8c:	ea40 000c 	orr.w	r0, r0, ip
 8026a90:	fb15 fc02 	smulbb	ip, r5, r2
 8026a94:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8026a98:	f1c5 0810 	rsb	r8, r5, #16
 8026a9c:	eba8 0802 	sub.w	r8, r8, r2
 8026aa0:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8026aa4:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8026aa8:	437a      	muls	r2, r7
 8026aaa:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8026aae:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8026ab2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8026ab6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8026aba:	fb09 2208 	mla	r2, r9, r8, r2
 8026abe:	ea4a 0101 	orr.w	r1, sl, r1
 8026ac2:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8026ac6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026aca:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026ace:	fb05 2201 	mla	r2, r5, r1, r2
 8026ad2:	ea4b 0000 	orr.w	r0, fp, r0
 8026ad6:	fb0c 2200 	mla	r2, ip, r0, r2
 8026ada:	0d57      	lsrs	r7, r2, #21
 8026adc:	0952      	lsrs	r2, r2, #5
 8026ade:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8026ae2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026ae6:	433a      	orrs	r2, r7
 8026ae8:	2bff      	cmp	r3, #255	; 0xff
 8026aea:	b292      	uxth	r2, r2
 8026aec:	d127      	bne.n	8026b3e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 8026aee:	f8ae 2000 	strh.w	r2, [lr]
 8026af2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8026af4:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8026af6:	4413      	add	r3, r2
 8026af8:	931d      	str	r3, [sp, #116]	; 0x74
 8026afa:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8026afc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026afe:	441a      	add	r2, r3
 8026b00:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8026b02:	921e      	str	r2, [sp, #120]	; 0x78
 8026b04:	3b01      	subs	r3, #1
 8026b06:	f10e 0e02 	add.w	lr, lr, #2
 8026b0a:	930f      	str	r3, [sp, #60]	; 0x3c
 8026b0c:	e627      	b.n	802675e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8026b0e:	fb08 f000 	mul.w	r0, r8, r0
 8026b12:	fb09 0303 	mla	r3, r9, r3, r0
 8026b16:	e71b      	b.n	8026950 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 8026b18:	46b9      	mov	r9, r7
 8026b1a:	e743      	b.n	80269a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 8026b1c:	f1c2 0110 	rsb	r1, r2, #16
 8026b20:	437a      	muls	r2, r7
 8026b22:	fb09 2901 	mla	r9, r9, r1, r2
 8026b26:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8026b2a:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8026b2e:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8026b32:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026b36:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026b3a:	4302      	orrs	r2, r0
 8026b3c:	e7d4      	b.n	8026ae8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 8026b3e:	f8be 7000 	ldrh.w	r7, [lr]
 8026b42:	4c1c      	ldr	r4, [pc, #112]	; (8026bb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8026b44:	43db      	mvns	r3, r3
 8026b46:	1238      	asrs	r0, r7, #8
 8026b48:	fa5f fc83 	uxtb.w	ip, r3
 8026b4c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8026b50:	10fd      	asrs	r5, r7, #3
 8026b52:	fb00 f00c 	mul.w	r0, r0, ip
 8026b56:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8026b5a:	fb05 f10c 	mul.w	r1, r5, ip
 8026b5e:	1c45      	adds	r5, r0, #1
 8026b60:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8026b64:	1215      	asrs	r5, r2, #8
 8026b66:	f025 0507 	bic.w	r5, r5, #7
 8026b6a:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8026b6e:	1c4d      	adds	r5, r1, #1
 8026b70:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8026b74:	10d1      	asrs	r1, r2, #3
 8026b76:	f021 0103 	bic.w	r1, r1, #3
 8026b7a:	00fb      	lsls	r3, r7, #3
 8026b7c:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8026b80:	b2db      	uxtb	r3, r3
 8026b82:	b2c0      	uxtb	r0, r0
 8026b84:	00c9      	lsls	r1, r1, #3
 8026b86:	fb03 f30c 	mul.w	r3, r3, ip
 8026b8a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8026b8e:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8026b92:	4308      	orrs	r0, r1
 8026b94:	1c59      	adds	r1, r3, #1
 8026b96:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8026b9a:	00d2      	lsls	r2, r2, #3
 8026b9c:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8026ba0:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8026ba4:	4318      	orrs	r0, r3
 8026ba6:	f8ae 0000 	strh.w	r0, [lr]
 8026baa:	e7a2      	b.n	8026af2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8026bac:	b013      	add	sp, #76	; 0x4c
 8026bae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026bb2:	bf00      	nop
 8026bb4:	fffff800 	.word	0xfffff800

08026bb8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8026bb8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8026bbc:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 8026bc0:	fb05 4c03 	mla	ip, r5, r3, r4
 8026bc4:	2d00      	cmp	r5, #0
 8026bc6:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8026bca:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 8026bce:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8026bd2:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8026bd6:	8808      	ldrh	r0, [r1, #0]
 8026bd8:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8026bdc:	f2c0 80a7 	blt.w	8026d2e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8026be0:	45aa      	cmp	sl, r5
 8026be2:	f340 80a4 	ble.w	8026d2e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8026be6:	2c00      	cmp	r4, #0
 8026be8:	f2c0 809f 	blt.w	8026d2a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8026bec:	42a3      	cmp	r3, r4
 8026bee:	f340 809c 	ble.w	8026d2a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8026bf2:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 8026bf6:	1c62      	adds	r2, r4, #1
 8026bf8:	f100 809c 	bmi.w	8026d34 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8026bfc:	4293      	cmp	r3, r2
 8026bfe:	f340 8099 	ble.w	8026d34 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8026c02:	f1b9 0f00 	cmp.w	r9, #0
 8026c06:	f000 8095 	beq.w	8026d34 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8026c0a:	f8be c002 	ldrh.w	ip, [lr, #2]
 8026c0e:	3501      	adds	r5, #1
 8026c10:	f100 8094 	bmi.w	8026d3c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8026c14:	45aa      	cmp	sl, r5
 8026c16:	f340 8091 	ble.w	8026d3c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8026c1a:	2f00      	cmp	r7, #0
 8026c1c:	f000 808e 	beq.w	8026d3c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8026c20:	2c00      	cmp	r4, #0
 8026c22:	f2c0 8089 	blt.w	8026d38 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8026c26:	42a3      	cmp	r3, r4
 8026c28:	f340 8086 	ble.w	8026d38 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8026c2c:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8026c30:	3401      	adds	r4, #1
 8026c32:	f100 8086 	bmi.w	8026d42 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8026c36:	42a3      	cmp	r3, r4
 8026c38:	f340 8083 	ble.w	8026d42 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8026c3c:	f1b9 0f00 	cmp.w	r9, #0
 8026c40:	d07f      	beq.n	8026d42 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8026c42:	3301      	adds	r3, #1
 8026c44:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 8026c48:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8026c4c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8026c50:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8026c54:	fb19 fe07 	smulbb	lr, r9, r7
 8026c58:	ea44 0808 	orr.w	r8, r4, r8
 8026c5c:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8026c60:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8026c64:	f1c7 0210 	rsb	r2, r7, #16
 8026c68:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8026c6c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8026c70:	ea44 0c0c 	orr.w	ip, r4, ip
 8026c74:	eba2 0209 	sub.w	r2, r2, r9
 8026c78:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8026c7c:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8026c80:	fb04 f40c 	mul.w	r4, r4, ip
 8026c84:	fb02 4808 	mla	r8, r2, r8, r4
 8026c88:	041a      	lsls	r2, r3, #16
 8026c8a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8026c8e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8026c92:	4313      	orrs	r3, r2
 8026c94:	042a      	lsls	r2, r5, #16
 8026c96:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8026c9a:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8026c9e:	fb0e 8303 	mla	r3, lr, r3, r8
 8026ca2:	432a      	orrs	r2, r5
 8026ca4:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8026ca8:	fb07 3202 	mla	r2, r7, r2, r3
 8026cac:	0d53      	lsrs	r3, r2, #21
 8026cae:	0952      	lsrs	r2, r2, #5
 8026cb0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026cb4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026cb8:	431a      	orrs	r2, r3
 8026cba:	b293      	uxth	r3, r2
 8026cbc:	b2b4      	uxth	r4, r6
 8026cbe:	1202      	asrs	r2, r0, #8
 8026cc0:	43f6      	mvns	r6, r6
 8026cc2:	b2f6      	uxtb	r6, r6
 8026cc4:	121d      	asrs	r5, r3, #8
 8026cc6:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8026cca:	fb12 f206 	smulbb	r2, r2, r6
 8026cce:	10c7      	asrs	r7, r0, #3
 8026cd0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8026cd4:	00c0      	lsls	r0, r0, #3
 8026cd6:	fb05 2504 	mla	r5, r5, r4, r2
 8026cda:	b2c0      	uxtb	r0, r0
 8026cdc:	10da      	asrs	r2, r3, #3
 8026cde:	00db      	lsls	r3, r3, #3
 8026ce0:	b2db      	uxtb	r3, r3
 8026ce2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8026ce6:	fb10 f006 	smulbb	r0, r0, r6
 8026cea:	b2ad      	uxth	r5, r5
 8026cec:	fb03 0004 	mla	r0, r3, r4, r0
 8026cf0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8026cf4:	fb17 f706 	smulbb	r7, r7, r6
 8026cf8:	b280      	uxth	r0, r0
 8026cfa:	1c6b      	adds	r3, r5, #1
 8026cfc:	fb02 7204 	mla	r2, r2, r4, r7
 8026d00:	b292      	uxth	r2, r2
 8026d02:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8026d06:	1c43      	adds	r3, r0, #1
 8026d08:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8026d0c:	1c50      	adds	r0, r2, #1
 8026d0e:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8026d12:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8026d16:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8026d1a:	0952      	lsrs	r2, r2, #5
 8026d1c:	432b      	orrs	r3, r5
 8026d1e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026d22:	4313      	orrs	r3, r2
 8026d24:	800b      	strh	r3, [r1, #0]
 8026d26:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8026d2a:	4680      	mov	r8, r0
 8026d2c:	e763      	b.n	8026bf6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 8026d2e:	4684      	mov	ip, r0
 8026d30:	4680      	mov	r8, r0
 8026d32:	e76c      	b.n	8026c0e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8026d34:	4684      	mov	ip, r0
 8026d36:	e76a      	b.n	8026c0e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8026d38:	4605      	mov	r5, r0
 8026d3a:	e779      	b.n	8026c30 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8026d3c:	4603      	mov	r3, r0
 8026d3e:	4605      	mov	r5, r0
 8026d40:	e782      	b.n	8026c48 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 8026d42:	4603      	mov	r3, r0
 8026d44:	e780      	b.n	8026c48 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

08026d46 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8026d46:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026d4a:	b093      	sub	sp, #76	; 0x4c
 8026d4c:	461d      	mov	r5, r3
 8026d4e:	9210      	str	r2, [sp, #64]	; 0x40
 8026d50:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8026d52:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 8026d56:	920b      	str	r2, [sp, #44]	; 0x2c
 8026d58:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 8026d5c:	910a      	str	r1, [sp, #40]	; 0x28
 8026d5e:	6859      	ldr	r1, [r3, #4]
 8026d60:	681b      	ldr	r3, [r3, #0]
 8026d62:	9011      	str	r0, [sp, #68]	; 0x44
 8026d64:	fb01 2707 	mla	r7, r1, r7, r2
 8026d68:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8026d6c:	9307      	str	r3, [sp, #28]
 8026d6e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026d70:	681b      	ldr	r3, [r3, #0]
 8026d72:	9309      	str	r3, [sp, #36]	; 0x24
 8026d74:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8026d76:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8026d7a:	43db      	mvns	r3, r3
 8026d7c:	b2db      	uxtb	r3, r3
 8026d7e:	9308      	str	r3, [sp, #32]
 8026d80:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026d82:	2b00      	cmp	r3, #0
 8026d84:	dc03      	bgt.n	8026d8e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8026d86:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8026d88:	2b00      	cmp	r3, #0
 8026d8a:	f340 8203 	ble.w	8027194 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8026d8e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026d90:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026d94:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8026d98:	1e48      	subs	r0, r1, #1
 8026d9a:	f102 3cff 	add.w	ip, r2, #4294967295
 8026d9e:	2d00      	cmp	r5, #0
 8026da0:	f340 80da 	ble.w	8026f58 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8026da4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8026da8:	ea4f 4326 	mov.w	r3, r6, asr #16
 8026dac:	d406      	bmi.n	8026dbc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8026dae:	4586      	cmp	lr, r0
 8026db0:	da04      	bge.n	8026dbc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8026db2:	2b00      	cmp	r3, #0
 8026db4:	db02      	blt.n	8026dbc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8026db6:	4563      	cmp	r3, ip
 8026db8:	f2c0 80cf 	blt.w	8026f5a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8026dbc:	f11e 0e01 	adds.w	lr, lr, #1
 8026dc0:	f100 80c1 	bmi.w	8026f46 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8026dc4:	4571      	cmp	r1, lr
 8026dc6:	f2c0 80be 	blt.w	8026f46 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8026dca:	3301      	adds	r3, #1
 8026dcc:	f100 80bb 	bmi.w	8026f46 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8026dd0:	429a      	cmp	r2, r3
 8026dd2:	f2c0 80b8 	blt.w	8026f46 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8026dd6:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8026dda:	46a9      	mov	r9, r5
 8026ddc:	f1b9 0f00 	cmp.w	r9, #0
 8026de0:	f340 80d8 	ble.w	8026f94 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8026de4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026de6:	1421      	asrs	r1, r4, #16
 8026de8:	ea4f 4026 	mov.w	r0, r6, asr #16
 8026dec:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026df0:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8026df4:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8026df8:	f100 8111 	bmi.w	802701e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8026dfc:	f10e 3aff 	add.w	sl, lr, #4294967295
 8026e00:	4551      	cmp	r1, sl
 8026e02:	f280 810c 	bge.w	802701e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8026e06:	2800      	cmp	r0, #0
 8026e08:	f2c0 8109 	blt.w	802701e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8026e0c:	f103 3aff 	add.w	sl, r3, #4294967295
 8026e10:	4550      	cmp	r0, sl
 8026e12:	f280 8104 	bge.w	802701e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8026e16:	fa0f f38e 	sxth.w	r3, lr
 8026e1a:	fb00 1103 	mla	r1, r0, r3, r1
 8026e1e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8026e20:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8026e24:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8026e28:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8026e2c:	f1bc 0f00 	cmp.w	ip, #0
 8026e30:	d007      	beq.n	8026e42 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8026e32:	005b      	lsls	r3, r3, #1
 8026e34:	eb0a 0003 	add.w	r0, sl, r3
 8026e38:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8026e3c:	930c      	str	r3, [sp, #48]	; 0x30
 8026e3e:	8843      	ldrh	r3, [r0, #2]
 8026e40:	930d      	str	r3, [sp, #52]	; 0x34
 8026e42:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8026e46:	fb12 f30c 	smulbb	r3, r2, ip
 8026e4a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8026e4e:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8026e52:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8026e56:	10db      	asrs	r3, r3, #3
 8026e58:	ea40 000e 	orr.w	r0, r0, lr
 8026e5c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8026e60:	f1cc 0e10 	rsb	lr, ip, #16
 8026e64:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8026e68:	ebae 0e02 	sub.w	lr, lr, r2
 8026e6c:	ea4a 0101 	orr.w	r1, sl, r1
 8026e70:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8026e74:	4351      	muls	r1, r2
 8026e76:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8026e78:	9f08      	ldr	r7, [sp, #32]
 8026e7a:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8026e7e:	fb0e 1e00 	mla	lr, lr, r0, r1
 8026e82:	0410      	lsls	r0, r2, #16
 8026e84:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8026e88:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026e8c:	4310      	orrs	r0, r2
 8026e8e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8026e90:	990c      	ldr	r1, [sp, #48]	; 0x30
 8026e92:	0412      	lsls	r2, r2, #16
 8026e94:	fb03 e000 	mla	r0, r3, r0, lr
 8026e98:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8026e9c:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8026ea0:	ea42 020e 	orr.w	r2, r2, lr
 8026ea4:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8026ea8:	fb03 0302 	mla	r3, r3, r2, r0
 8026eac:	0d5a      	lsrs	r2, r3, #21
 8026eae:	095b      	lsrs	r3, r3, #5
 8026eb0:	f8b8 0000 	ldrh.w	r0, [r8]
 8026eb4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026eb8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8026ebc:	4313      	orrs	r3, r2
 8026ebe:	b29b      	uxth	r3, r3
 8026ec0:	1201      	asrs	r1, r0, #8
 8026ec2:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8026ec6:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8026eca:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8026ece:	fb11 f107 	smulbb	r1, r1, r7
 8026ed2:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8026ed6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8026eda:	00c0      	lsls	r0, r0, #3
 8026edc:	fb0c 1c02 	mla	ip, ip, r2, r1
 8026ee0:	b2c0      	uxtb	r0, r0
 8026ee2:	10d9      	asrs	r1, r3, #3
 8026ee4:	00db      	lsls	r3, r3, #3
 8026ee6:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8026eea:	b2db      	uxtb	r3, r3
 8026eec:	fb10 f007 	smulbb	r0, r0, r7
 8026ef0:	fa1f fc8c 	uxth.w	ip, ip
 8026ef4:	fb03 0302 	mla	r3, r3, r2, r0
 8026ef8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8026efc:	fb1e fe07 	smulbb	lr, lr, r7
 8026f00:	fb01 e102 	mla	r1, r1, r2, lr
 8026f04:	b29a      	uxth	r2, r3
 8026f06:	f10c 0301 	add.w	r3, ip, #1
 8026f0a:	b289      	uxth	r1, r1
 8026f0c:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8026f10:	1c53      	adds	r3, r2, #1
 8026f12:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8026f16:	1c4a      	adds	r2, r1, #1
 8026f18:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8026f1c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8026f20:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8026f24:	0949      	lsrs	r1, r1, #5
 8026f26:	ea43 030c 	orr.w	r3, r3, ip
 8026f2a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8026f2e:	430b      	orrs	r3, r1
 8026f30:	f8a8 3000 	strh.w	r3, [r8]
 8026f34:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8026f36:	441c      	add	r4, r3
 8026f38:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026f3a:	f108 0802 	add.w	r8, r8, #2
 8026f3e:	441e      	add	r6, r3
 8026f40:	f109 39ff 	add.w	r9, r9, #4294967295
 8026f44:	e74a      	b.n	8026ddc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8026f46:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8026f48:	441c      	add	r4, r3
 8026f4a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026f4c:	441e      	add	r6, r3
 8026f4e:	9b07      	ldr	r3, [sp, #28]
 8026f50:	3302      	adds	r3, #2
 8026f52:	3d01      	subs	r5, #1
 8026f54:	9307      	str	r3, [sp, #28]
 8026f56:	e722      	b.n	8026d9e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8026f58:	d022      	beq.n	8026fa0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8026f5a:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8026f5c:	1e6b      	subs	r3, r5, #1
 8026f5e:	fb00 4003 	mla	r0, r0, r3, r4
 8026f62:	1400      	asrs	r0, r0, #16
 8026f64:	f53f af37 	bmi.w	8026dd6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8026f68:	3901      	subs	r1, #1
 8026f6a:	4288      	cmp	r0, r1
 8026f6c:	f6bf af33 	bge.w	8026dd6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8026f70:	9920      	ldr	r1, [sp, #128]	; 0x80
 8026f72:	fb01 6303 	mla	r3, r1, r3, r6
 8026f76:	141b      	asrs	r3, r3, #16
 8026f78:	f53f af2d 	bmi.w	8026dd6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8026f7c:	3a01      	subs	r2, #1
 8026f7e:	4293      	cmp	r3, r2
 8026f80:	f6bf af29 	bge.w	8026dd6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8026f84:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8026f88:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8026f8c:	46a8      	mov	r8, r5
 8026f8e:	f1b8 0f00 	cmp.w	r8, #0
 8026f92:	dc5e      	bgt.n	8027052 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8026f94:	9b07      	ldr	r3, [sp, #28]
 8026f96:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8026f9a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8026f9e:	9307      	str	r3, [sp, #28]
 8026fa0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026fa2:	2b00      	cmp	r3, #0
 8026fa4:	f340 80f6 	ble.w	8027194 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8026fa8:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026fac:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026fb0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8026fb4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026fb6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026fba:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026fbe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8026fc2:	eef0 6a62 	vmov.f32	s13, s5
 8026fc6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026fca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026fce:	ee77 2a62 	vsub.f32	s5, s14, s5
 8026fd2:	ee16 4a90 	vmov	r4, s13
 8026fd6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026fda:	eef0 6a43 	vmov.f32	s13, s6
 8026fde:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8026fe2:	ee12 2a90 	vmov	r2, s5
 8026fe6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026fea:	fb92 f3f3 	sdiv	r3, r2, r3
 8026fee:	ee13 2a10 	vmov	r2, s6
 8026ff2:	931f      	str	r3, [sp, #124]	; 0x7c
 8026ff4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026ff6:	fb92 f3f3 	sdiv	r3, r2, r3
 8026ffa:	9320      	str	r3, [sp, #128]	; 0x80
 8026ffc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026ffe:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8027000:	3b01      	subs	r3, #1
 8027002:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027006:	930a      	str	r3, [sp, #40]	; 0x28
 8027008:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802700a:	ee16 6a90 	vmov	r6, s13
 802700e:	bf14      	ite	ne
 8027010:	461d      	movne	r5, r3
 8027012:	4615      	moveq	r5, r2
 8027014:	eeb0 3a67 	vmov.f32	s6, s15
 8027018:	eef0 2a47 	vmov.f32	s5, s14
 802701c:	e6b0      	b.n	8026d80 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802701e:	f111 0a01 	adds.w	sl, r1, #1
 8027022:	d487      	bmi.n	8026f34 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8027024:	45d6      	cmp	lr, sl
 8027026:	db85      	blt.n	8026f34 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8027028:	f110 0a01 	adds.w	sl, r0, #1
 802702c:	d482      	bmi.n	8026f34 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802702e:	4553      	cmp	r3, sl
 8027030:	db80      	blt.n	8026f34 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8027032:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8027034:	9101      	str	r1, [sp, #4]
 8027036:	b21b      	sxth	r3, r3
 8027038:	e9cd 0202 	strd	r0, r2, [sp, #8]
 802703c:	9300      	str	r3, [sp, #0]
 802703e:	e9cd c704 	strd	ip, r7, [sp, #16]
 8027042:	fa0f f38e 	sxth.w	r3, lr
 8027046:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8027048:	9811      	ldr	r0, [sp, #68]	; 0x44
 802704a:	4641      	mov	r1, r8
 802704c:	f7ff fdb4 	bl	8026bb8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8027050:	e770      	b.n	8026f34 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8027052:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8027054:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8027056:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802705a:	1430      	asrs	r0, r6, #16
 802705c:	1423      	asrs	r3, r4, #16
 802705e:	fb01 3000 	mla	r0, r1, r0, r3
 8027062:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027064:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8027068:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 802706c:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8027070:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8027074:	8858      	ldrh	r0, [r3, #2]
 8027076:	f1be 0f00 	cmp.w	lr, #0
 802707a:	d00b      	beq.n	8027094 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 802707c:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8027080:	3901      	subs	r1, #1
 8027082:	0049      	lsls	r1, r1, #1
 8027084:	3102      	adds	r1, #2
 8027086:	eb03 0b01 	add.w	fp, r3, r1
 802708a:	5a5b      	ldrh	r3, [r3, r1]
 802708c:	930e      	str	r3, [sp, #56]	; 0x38
 802708e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8027092:	930f      	str	r3, [sp, #60]	; 0x3c
 8027094:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8027098:	fb12 f30e 	smulbb	r3, r2, lr
 802709c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80270a0:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80270a4:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 80270a8:	10db      	asrs	r3, r3, #3
 80270aa:	ea41 010c 	orr.w	r1, r1, ip
 80270ae:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80270b2:	f1ce 0c10 	rsb	ip, lr, #16
 80270b6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80270ba:	ebac 0c02 	sub.w	ip, ip, r2
 80270be:	ea4b 0000 	orr.w	r0, fp, r0
 80270c2:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80270c6:	4350      	muls	r0, r2
 80270c8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80270ca:	9f08      	ldr	r7, [sp, #32]
 80270cc:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80270d0:	fb0c 0c01 	mla	ip, ip, r1, r0
 80270d4:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80270d8:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 80270dc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80270de:	980e      	ldr	r0, [sp, #56]	; 0x38
 80270e0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80270e4:	0412      	lsls	r2, r2, #16
 80270e6:	ea4b 0101 	orr.w	r1, fp, r1
 80270ea:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80270ee:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80270f2:	fb03 c101 	mla	r1, r3, r1, ip
 80270f6:	4302      	orrs	r2, r0
 80270f8:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80270fc:	fb03 1202 	mla	r2, r3, r2, r1
 8027100:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8027104:	0952      	lsrs	r2, r2, #5
 8027106:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 802710a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 802710e:	f8b9 2000 	ldrh.w	r2, [r9]
 8027112:	ea4b 0303 	orr.w	r3, fp, r3
 8027116:	b29b      	uxth	r3, r3
 8027118:	1211      	asrs	r1, r2, #8
 802711a:	1218      	asrs	r0, r3, #8
 802711c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8027120:	fb11 f107 	smulbb	r1, r1, r7
 8027124:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8027128:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802712c:	00d2      	lsls	r2, r2, #3
 802712e:	fb00 100a 	mla	r0, r0, sl, r1
 8027132:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8027136:	10d9      	asrs	r1, r3, #3
 8027138:	b2d2      	uxtb	r2, r2
 802713a:	00db      	lsls	r3, r3, #3
 802713c:	fb1c fc07 	smulbb	ip, ip, r7
 8027140:	fb12 f207 	smulbb	r2, r2, r7
 8027144:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8027148:	b2db      	uxtb	r3, r3
 802714a:	b280      	uxth	r0, r0
 802714c:	fb01 c10a 	mla	r1, r1, sl, ip
 8027150:	fb03 230a 	mla	r3, r3, sl, r2
 8027154:	b29b      	uxth	r3, r3
 8027156:	b289      	uxth	r1, r1
 8027158:	1c42      	adds	r2, r0, #1
 802715a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802715e:	f101 0c01 	add.w	ip, r1, #1
 8027162:	1c5a      	adds	r2, r3, #1
 8027164:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8027168:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 802716c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802716e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8027172:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8027176:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802717a:	4310      	orrs	r0, r2
 802717c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8027180:	441c      	add	r4, r3
 8027182:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8027184:	ea40 000c 	orr.w	r0, r0, ip
 8027188:	f829 0b02 	strh.w	r0, [r9], #2
 802718c:	441e      	add	r6, r3
 802718e:	f108 38ff 	add.w	r8, r8, #4294967295
 8027192:	e6fc      	b.n	8026f8e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8027194:	b013      	add	sp, #76	; 0x4c
 8027196:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802719a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 802719a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 802719e:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 80271a2:	fb0e 4703 	mla	r7, lr, r3, r4
 80271a6:	f1be 0f00 	cmp.w	lr, #0
 80271aa:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 80271ae:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 80271b2:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 80271b6:	8808      	ldrh	r0, [r1, #0]
 80271b8:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 80271bc:	db60      	blt.n	8027280 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 80271be:	45f1      	cmp	r9, lr
 80271c0:	dd5e      	ble.n	8027280 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 80271c2:	2c00      	cmp	r4, #0
 80271c4:	db5a      	blt.n	802727c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 80271c6:	42a3      	cmp	r3, r4
 80271c8:	dd58      	ble.n	802727c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 80271ca:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 80271ce:	1c62      	adds	r2, r4, #1
 80271d0:	d459      	bmi.n	8027286 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 80271d2:	4293      	cmp	r3, r2
 80271d4:	dd57      	ble.n	8027286 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 80271d6:	2d00      	cmp	r5, #0
 80271d8:	d055      	beq.n	8027286 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 80271da:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 80271de:	f11e 0e01 	adds.w	lr, lr, #1
 80271e2:	d454      	bmi.n	802728e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80271e4:	45f1      	cmp	r9, lr
 80271e6:	dd52      	ble.n	802728e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80271e8:	2e00      	cmp	r6, #0
 80271ea:	d050      	beq.n	802728e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80271ec:	2c00      	cmp	r4, #0
 80271ee:	db4c      	blt.n	802728a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 80271f0:	42a3      	cmp	r3, r4
 80271f2:	dd4a      	ble.n	802728a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 80271f4:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 80271f8:	3401      	adds	r4, #1
 80271fa:	d405      	bmi.n	8027208 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80271fc:	42a3      	cmp	r3, r4
 80271fe:	dd03      	ble.n	8027208 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8027200:	b115      	cbz	r5, 8027208 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8027202:	3301      	adds	r3, #1
 8027204:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8027208:	ea4f 430c 	mov.w	r3, ip, lsl #16
 802720c:	fb15 f406 	smulbb	r4, r5, r6
 8027210:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8027214:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8027218:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 802721c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8027220:	ea43 0c0c 	orr.w	ip, r3, ip
 8027224:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8027228:	f1c6 0310 	rsb	r3, r6, #16
 802722c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8027230:	1b5b      	subs	r3, r3, r5
 8027232:	ea4e 0707 	orr.w	r7, lr, r7
 8027236:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 802723a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802723e:	437d      	muls	r5, r7
 8027240:	fb03 5c0c 	mla	ip, r3, ip, r5
 8027244:	0403      	lsls	r3, r0, #16
 8027246:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802724a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802724e:	4318      	orrs	r0, r3
 8027250:	0413      	lsls	r3, r2, #16
 8027252:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8027256:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802725a:	4313      	orrs	r3, r2
 802725c:	fb04 c000 	mla	r0, r4, r0, ip
 8027260:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8027264:	fb06 0003 	mla	r0, r6, r3, r0
 8027268:	0d43      	lsrs	r3, r0, #21
 802726a:	0940      	lsrs	r0, r0, #5
 802726c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8027270:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8027274:	4318      	orrs	r0, r3
 8027276:	8008      	strh	r0, [r1, #0]
 8027278:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 802727c:	4684      	mov	ip, r0
 802727e:	e7a6      	b.n	80271ce <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8027280:	4607      	mov	r7, r0
 8027282:	4684      	mov	ip, r0
 8027284:	e7ab      	b.n	80271de <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8027286:	4607      	mov	r7, r0
 8027288:	e7a9      	b.n	80271de <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 802728a:	4602      	mov	r2, r0
 802728c:	e7b4      	b.n	80271f8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 802728e:	4602      	mov	r2, r0
 8027290:	e7ba      	b.n	8027208 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08027292 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8027292:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027296:	b08f      	sub	sp, #60	; 0x3c
 8027298:	461d      	mov	r5, r3
 802729a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802729c:	920c      	str	r2, [sp, #48]	; 0x30
 802729e:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 80272a2:	9107      	str	r1, [sp, #28]
 80272a4:	6859      	ldr	r1, [r3, #4]
 80272a6:	681b      	ldr	r3, [r3, #0]
 80272a8:	900d      	str	r0, [sp, #52]	; 0x34
 80272aa:	fb01 2707 	mla	r7, r1, r7, r2
 80272ae:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 80272b2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80272b4:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 80272b8:	f8d3 8000 	ldr.w	r8, [r3]
 80272bc:	9b07      	ldr	r3, [sp, #28]
 80272be:	2b00      	cmp	r3, #0
 80272c0:	dc03      	bgt.n	80272ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80272c2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80272c4:	2b00      	cmp	r3, #0
 80272c6:	f340 8181 	ble.w	80275cc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 80272ca:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80272cc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80272d0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80272d4:	1e48      	subs	r0, r1, #1
 80272d6:	f102 3cff 	add.w	ip, r2, #4294967295
 80272da:	2d00      	cmp	r5, #0
 80272dc:	f340 809b 	ble.w	8027416 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 80272e0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80272e4:	ea4f 4326 	mov.w	r3, r6, asr #16
 80272e8:	d406      	bmi.n	80272f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80272ea:	4586      	cmp	lr, r0
 80272ec:	da04      	bge.n	80272f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80272ee:	2b00      	cmp	r3, #0
 80272f0:	db02      	blt.n	80272f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80272f2:	4563      	cmp	r3, ip
 80272f4:	f2c0 8090 	blt.w	8027418 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80272f8:	f11e 0e01 	adds.w	lr, lr, #1
 80272fc:	f100 8084 	bmi.w	8027408 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8027300:	4571      	cmp	r1, lr
 8027302:	f2c0 8081 	blt.w	8027408 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8027306:	3301      	adds	r3, #1
 8027308:	d47e      	bmi.n	8027408 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802730a:	429a      	cmp	r2, r3
 802730c:	db7c      	blt.n	8027408 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802730e:	46aa      	mov	sl, r5
 8027310:	46b9      	mov	r9, r7
 8027312:	f1ba 0f00 	cmp.w	sl, #0
 8027316:	f340 8099 	ble.w	802744c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 802731a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802731c:	1421      	asrs	r1, r4, #16
 802731e:	ea4f 4026 	mov.w	r0, r6, asr #16
 8027322:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8027326:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 802732a:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 802732e:	f100 80d0 	bmi.w	80274d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8027332:	f10e 3bff 	add.w	fp, lr, #4294967295
 8027336:	4559      	cmp	r1, fp
 8027338:	f280 80cb 	bge.w	80274d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802733c:	2800      	cmp	r0, #0
 802733e:	f2c0 80c8 	blt.w	80274d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8027342:	f103 3bff 	add.w	fp, r3, #4294967295
 8027346:	4558      	cmp	r0, fp
 8027348:	f280 80c3 	bge.w	80274d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802734c:	fa0f fe8e 	sxth.w	lr, lr
 8027350:	fb00 110e 	mla	r1, r0, lr, r1
 8027354:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8027358:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 802735c:	8841      	ldrh	r1, [r0, #2]
 802735e:	f1bc 0f00 	cmp.w	ip, #0
 8027362:	d00b      	beq.n	802737c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8027364:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8027368:	3b01      	subs	r3, #1
 802736a:	005b      	lsls	r3, r3, #1
 802736c:	3302      	adds	r3, #2
 802736e:	eb00 0e03 	add.w	lr, r0, r3
 8027372:	5ac3      	ldrh	r3, [r0, r3]
 8027374:	9308      	str	r3, [sp, #32]
 8027376:	f8be 3002 	ldrh.w	r3, [lr, #2]
 802737a:	9309      	str	r3, [sp, #36]	; 0x24
 802737c:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8027380:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8027384:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8027388:	ea40 000b 	orr.w	r0, r0, fp
 802738c:	fb12 f30c 	smulbb	r3, r2, ip
 8027390:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8027394:	10db      	asrs	r3, r3, #3
 8027396:	f1cc 0e10 	rsb	lr, ip, #16
 802739a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802739e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80273a2:	ebae 0e02 	sub.w	lr, lr, r2
 80273a6:	ea4b 0101 	orr.w	r1, fp, r1
 80273aa:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80273ae:	4351      	muls	r1, r2
 80273b0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80273b2:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 80273b6:	fb0e 1e00 	mla	lr, lr, r0, r1
 80273ba:	0410      	lsls	r0, r2, #16
 80273bc:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80273c0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80273c4:	4310      	orrs	r0, r2
 80273c6:	9a08      	ldr	r2, [sp, #32]
 80273c8:	9908      	ldr	r1, [sp, #32]
 80273ca:	0412      	lsls	r2, r2, #16
 80273cc:	fb03 e000 	mla	r0, r3, r0, lr
 80273d0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80273d4:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80273d8:	ea42 020e 	orr.w	r2, r2, lr
 80273dc:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80273e0:	fb03 0302 	mla	r3, r3, r2, r0
 80273e4:	0d5a      	lsrs	r2, r3, #21
 80273e6:	095b      	lsrs	r3, r3, #5
 80273e8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80273ec:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80273f0:	4313      	orrs	r3, r2
 80273f2:	f8a9 3000 	strh.w	r3, [r9]
 80273f6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80273f8:	441c      	add	r4, r3
 80273fa:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80273fc:	f109 0902 	add.w	r9, r9, #2
 8027400:	441e      	add	r6, r3
 8027402:	f10a 3aff 	add.w	sl, sl, #4294967295
 8027406:	e784      	b.n	8027312 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8027408:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802740a:	441c      	add	r4, r3
 802740c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802740e:	3d01      	subs	r5, #1
 8027410:	441e      	add	r6, r3
 8027412:	3702      	adds	r7, #2
 8027414:	e761      	b.n	80272da <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8027416:	d01d      	beq.n	8027454 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8027418:	981b      	ldr	r0, [sp, #108]	; 0x6c
 802741a:	1e6b      	subs	r3, r5, #1
 802741c:	fb00 4003 	mla	r0, r0, r3, r4
 8027420:	1400      	asrs	r0, r0, #16
 8027422:	f53f af74 	bmi.w	802730e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8027426:	3901      	subs	r1, #1
 8027428:	4288      	cmp	r0, r1
 802742a:	f6bf af70 	bge.w	802730e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802742e:	991c      	ldr	r1, [sp, #112]	; 0x70
 8027430:	fb01 6303 	mla	r3, r1, r3, r6
 8027434:	141b      	asrs	r3, r3, #16
 8027436:	f53f af6a 	bmi.w	802730e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802743a:	3a01      	subs	r2, #1
 802743c:	4293      	cmp	r3, r2
 802743e:	f6bf af66 	bge.w	802730e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8027442:	46a9      	mov	r9, r5
 8027444:	46ba      	mov	sl, r7
 8027446:	f1b9 0f00 	cmp.w	r9, #0
 802744a:	dc5a      	bgt.n	8027502 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 802744c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8027450:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8027454:	9b07      	ldr	r3, [sp, #28]
 8027456:	2b00      	cmp	r3, #0
 8027458:	f340 80b8 	ble.w	80275cc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 802745c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8027460:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8027464:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8027468:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802746a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802746e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8027472:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8027476:	eef0 6a62 	vmov.f32	s13, s5
 802747a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802747e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027482:	ee77 2a62 	vsub.f32	s5, s14, s5
 8027486:	ee16 4a90 	vmov	r4, s13
 802748a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802748e:	eef0 6a43 	vmov.f32	s13, s6
 8027492:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8027496:	ee12 2a90 	vmov	r2, s5
 802749a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802749e:	fb92 f3f3 	sdiv	r3, r2, r3
 80274a2:	ee13 2a10 	vmov	r2, s6
 80274a6:	931b      	str	r3, [sp, #108]	; 0x6c
 80274a8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80274aa:	fb92 f3f3 	sdiv	r3, r2, r3
 80274ae:	931c      	str	r3, [sp, #112]	; 0x70
 80274b0:	9b07      	ldr	r3, [sp, #28]
 80274b2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80274b4:	3b01      	subs	r3, #1
 80274b6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80274ba:	9307      	str	r3, [sp, #28]
 80274bc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80274be:	ee16 6a90 	vmov	r6, s13
 80274c2:	bf14      	ite	ne
 80274c4:	461d      	movne	r5, r3
 80274c6:	4615      	moveq	r5, r2
 80274c8:	eeb0 3a67 	vmov.f32	s6, s15
 80274cc:	eef0 2a47 	vmov.f32	s5, s14
 80274d0:	e6f4      	b.n	80272bc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80274d2:	f111 0b01 	adds.w	fp, r1, #1
 80274d6:	d48e      	bmi.n	80273f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80274d8:	45de      	cmp	lr, fp
 80274da:	db8c      	blt.n	80273f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80274dc:	f110 0b01 	adds.w	fp, r0, #1
 80274e0:	d489      	bmi.n	80273f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80274e2:	455b      	cmp	r3, fp
 80274e4:	db87      	blt.n	80273f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80274e6:	b21b      	sxth	r3, r3
 80274e8:	e9cd 1001 	strd	r1, r0, [sp, #4]
 80274ec:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 80274f0:	9300      	str	r3, [sp, #0]
 80274f2:	4642      	mov	r2, r8
 80274f4:	fa0f f38e 	sxth.w	r3, lr
 80274f8:	4649      	mov	r1, r9
 80274fa:	980d      	ldr	r0, [sp, #52]	; 0x34
 80274fc:	f7ff fe4d 	bl	802719a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8027500:	e779      	b.n	80273f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8027502:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8027504:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8027508:	1420      	asrs	r0, r4, #16
 802750a:	1431      	asrs	r1, r6, #16
 802750c:	fb03 0101 	mla	r1, r3, r1, r0
 8027510:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8027514:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8027518:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 802751c:	8841      	ldrh	r1, [r0, #2]
 802751e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8027522:	f1be 0f00 	cmp.w	lr, #0
 8027526:	d00b      	beq.n	8027540 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8027528:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 802752c:	3b01      	subs	r3, #1
 802752e:	005b      	lsls	r3, r3, #1
 8027530:	3302      	adds	r3, #2
 8027532:	eb00 0b03 	add.w	fp, r0, r3
 8027536:	5ac3      	ldrh	r3, [r0, r3]
 8027538:	930a      	str	r3, [sp, #40]	; 0x28
 802753a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 802753e:	930b      	str	r3, [sp, #44]	; 0x2c
 8027540:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8027544:	fb12 f30e 	smulbb	r3, r2, lr
 8027548:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 802754c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8027550:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8027554:	10db      	asrs	r3, r3, #3
 8027556:	ea40 000c 	orr.w	r0, r0, ip
 802755a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802755e:	f1ce 0c10 	rsb	ip, lr, #16
 8027562:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8027566:	ebac 0c02 	sub.w	ip, ip, r2
 802756a:	ea4b 0101 	orr.w	r1, fp, r1
 802756e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8027572:	4351      	muls	r1, r2
 8027574:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8027576:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 802757a:	fb0c 1c00 	mla	ip, ip, r0, r1
 802757e:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8027582:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 8027586:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8027588:	990a      	ldr	r1, [sp, #40]	; 0x28
 802758a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802758e:	0412      	lsls	r2, r2, #16
 8027590:	ea4b 0000 	orr.w	r0, fp, r0
 8027594:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8027598:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 802759c:	fb03 c000 	mla	r0, r3, r0, ip
 80275a0:	ea42 0b0b 	orr.w	fp, r2, fp
 80275a4:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80275a8:	fb03 000b 	mla	r0, r3, fp, r0
 80275ac:	0d43      	lsrs	r3, r0, #21
 80275ae:	0940      	lsrs	r0, r0, #5
 80275b0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80275b4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80275b8:	4318      	orrs	r0, r3
 80275ba:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80275bc:	f82a 0b02 	strh.w	r0, [sl], #2
 80275c0:	441c      	add	r4, r3
 80275c2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80275c4:	f109 39ff 	add.w	r9, r9, #4294967295
 80275c8:	441e      	add	r6, r3
 80275ca:	e73c      	b.n	8027446 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 80275cc:	b00f      	add	sp, #60	; 0x3c
 80275ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080275d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 80275d2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80275d6:	b085      	sub	sp, #20
 80275d8:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 80275dc:	9102      	str	r1, [sp, #8]
 80275de:	2c00      	cmp	r4, #0
 80275e0:	fb04 7103 	mla	r1, r4, r3, r7
 80275e4:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 80275e8:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 80275ec:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 80275f0:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 80275f4:	f2c0 811b 	blt.w	802782e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 80275f8:	45a6      	cmp	lr, r4
 80275fa:	f340 8118 	ble.w	802782e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 80275fe:	2f00      	cmp	r7, #0
 8027600:	f2c0 8113 	blt.w	802782a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8027604:	42bb      	cmp	r3, r7
 8027606:	f340 8110 	ble.w	802782a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 802760a:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 802760e:	1c7a      	adds	r2, r7, #1
 8027610:	f100 8110 	bmi.w	8027834 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8027614:	4293      	cmp	r3, r2
 8027616:	f340 810d 	ble.w	8027834 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 802761a:	2e00      	cmp	r6, #0
 802761c:	f000 810c 	beq.w	8027838 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8027620:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8027624:	3401      	adds	r4, #1
 8027626:	f100 810b 	bmi.w	8027840 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 802762a:	45a6      	cmp	lr, r4
 802762c:	f340 8108 	ble.w	8027840 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8027630:	2800      	cmp	r0, #0
 8027632:	f000 8108 	beq.w	8027846 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 8027636:	2f00      	cmp	r7, #0
 8027638:	f2c0 8100 	blt.w	802783c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 802763c:	42bb      	cmp	r3, r7
 802763e:	f340 80fd 	ble.w	802783c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8027642:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8027646:	3701      	adds	r7, #1
 8027648:	f100 8100 	bmi.w	802784c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 802764c:	42bb      	cmp	r3, r7
 802764e:	f340 80fd 	ble.w	802784c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8027652:	2e00      	cmp	r6, #0
 8027654:	f000 80fc 	beq.w	8027850 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8027658:	3301      	adds	r3, #1
 802765a:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 802765e:	b2b6      	uxth	r6, r6
 8027660:	b280      	uxth	r0, r0
 8027662:	fb00 fe06 	mul.w	lr, r0, r6
 8027666:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 802766a:	0136      	lsls	r6, r6, #4
 802766c:	eba6 070e 	sub.w	r7, r6, lr
 8027670:	b280      	uxth	r0, r0
 8027672:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8027676:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 802767a:	b2bf      	uxth	r7, r7
 802767c:	1a1b      	subs	r3, r3, r0
 802767e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8027682:	b29b      	uxth	r3, r3
 8027684:	fb0a f607 	mul.w	r6, sl, r7
 8027688:	ea4f 6914 	mov.w	r9, r4, lsr #24
 802768c:	fb0b 6603 	mla	r6, fp, r3, r6
 8027690:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8027694:	fb00 6609 	mla	r6, r0, r9, r6
 8027698:	fb0e 6608 	mla	r6, lr, r8, r6
 802769c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80276a0:	9600      	str	r6, [sp, #0]
 80276a2:	2e00      	cmp	r6, #0
 80276a4:	f000 80be 	beq.w	8027824 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 80276a8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80276ac:	fb0b fc0c 	mul.w	ip, fp, ip
 80276b0:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80276b4:	fb0b f505 	mul.w	r5, fp, r5
 80276b8:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80276bc:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 80276c0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80276c4:	44dc      	add	ip, fp
 80276c6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80276ca:	9501      	str	r5, [sp, #4]
 80276cc:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 80276d0:	9503      	str	r5, [sp, #12]
 80276d2:	9d01      	ldr	r5, [sp, #4]
 80276d4:	9e02      	ldr	r6, [sp, #8]
 80276d6:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 80276da:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80276de:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 80276e2:	fb0a fc0c 	mul.w	ip, sl, ip
 80276e6:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80276ea:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80276ee:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80276f2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80276f6:	4465      	add	r5, ip
 80276f8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80276fc:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8027700:	fb09 fc0c 	mul.w	ip, r9, ip
 8027704:	fb09 f904 	mul.w	r9, r9, r4
 8027708:	f509 7480 	add.w	r4, r9, #256	; 0x100
 802770c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8027710:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8027714:	fb08 f404 	mul.w	r4, r8, r4
 8027718:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802771c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8027720:	fb08 f802 	mul.w	r8, r8, r2
 8027724:	fb0a fa01 	mul.w	sl, sl, r1
 8027728:	0a22      	lsrs	r2, r4, #8
 802772a:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 802772e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8027732:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8027736:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 802773a:	4414      	add	r4, r2
 802773c:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8027740:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8027744:	0a2d      	lsrs	r5, r5, #8
 8027746:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 802774a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802774e:	9a03      	ldr	r2, [sp, #12]
 8027750:	8836      	ldrh	r6, [r6, #0]
 8027752:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8027756:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802775a:	437d      	muls	r5, r7
 802775c:	4461      	add	r1, ip
 802775e:	0a24      	lsrs	r4, r4, #8
 8027760:	fb02 5503 	mla	r5, r2, r3, r5
 8027764:	0a09      	lsrs	r1, r1, #8
 8027766:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 802776a:	fb04 540e 	mla	r4, r4, lr, r5
 802776e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8027772:	fb01 4100 	mla	r1, r1, r0, r4
 8027776:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802777a:	0a09      	lsrs	r1, r1, #8
 802777c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027780:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8027784:	fb07 f70a 	mul.w	r7, r7, sl
 8027788:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802778c:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8027790:	fb03 7101 	mla	r1, r3, r1, r7
 8027794:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8027798:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 802779c:	fb0e 1e08 	mla	lr, lr, r8, r1
 80277a0:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 80277a4:	fb00 e101 	mla	r1, r0, r1, lr
 80277a8:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 80277ac:	9a00      	ldr	r2, [sp, #0]
 80277ae:	b287      	uxth	r7, r0
 80277b0:	437a      	muls	r2, r7
 80277b2:	0a09      	lsrs	r1, r1, #8
 80277b4:	1c53      	adds	r3, r2, #1
 80277b6:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80277ba:	4321      	orrs	r1, r4
 80277bc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80277c0:	1235      	asrs	r5, r6, #8
 80277c2:	0c0a      	lsrs	r2, r1, #16
 80277c4:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 80277c8:	b2db      	uxtb	r3, r3
 80277ca:	fb12 f207 	smulbb	r2, r2, r7
 80277ce:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80277d2:	fb05 2503 	mla	r5, r5, r3, r2
 80277d6:	f3c1 2407 	ubfx	r4, r1, #8, #8
 80277da:	10f2      	asrs	r2, r6, #3
 80277dc:	b2c8      	uxtb	r0, r1
 80277de:	00f6      	lsls	r6, r6, #3
 80277e0:	fb14 f407 	smulbb	r4, r4, r7
 80277e4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80277e8:	b2f6      	uxtb	r6, r6
 80277ea:	fb10 f007 	smulbb	r0, r0, r7
 80277ee:	fb02 4203 	mla	r2, r2, r3, r4
 80277f2:	b2ad      	uxth	r5, r5
 80277f4:	fb06 0303 	mla	r3, r6, r3, r0
 80277f8:	b299      	uxth	r1, r3
 80277fa:	b294      	uxth	r4, r2
 80277fc:	1c6b      	adds	r3, r5, #1
 80277fe:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8027802:	1c62      	adds	r2, r4, #1
 8027804:	1c4b      	adds	r3, r1, #1
 8027806:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802780a:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 802780e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8027812:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8027816:	0952      	lsrs	r2, r2, #5
 8027818:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802781c:	432b      	orrs	r3, r5
 802781e:	4313      	orrs	r3, r2
 8027820:	9a02      	ldr	r2, [sp, #8]
 8027822:	8013      	strh	r3, [r2, #0]
 8027824:	b005      	add	sp, #20
 8027826:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802782a:	2500      	movs	r5, #0
 802782c:	e6ef      	b.n	802760e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 802782e:	2100      	movs	r1, #0
 8027830:	460d      	mov	r5, r1
 8027832:	e6f7      	b.n	8027624 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8027834:	2100      	movs	r1, #0
 8027836:	e6f5      	b.n	8027624 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8027838:	4631      	mov	r1, r6
 802783a:	e6f3      	b.n	8027624 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 802783c:	2400      	movs	r4, #0
 802783e:	e702      	b.n	8027646 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8027840:	2200      	movs	r2, #0
 8027842:	4614      	mov	r4, r2
 8027844:	e70b      	b.n	802765e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8027846:	4602      	mov	r2, r0
 8027848:	4604      	mov	r4, r0
 802784a:	e708      	b.n	802765e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802784c:	2200      	movs	r2, #0
 802784e:	e706      	b.n	802765e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8027850:	4632      	mov	r2, r6
 8027852:	e704      	b.n	802765e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08027854 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8027854:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027858:	b09d      	sub	sp, #116	; 0x74
 802785a:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 802785e:	9219      	str	r2, [sp, #100]	; 0x64
 8027860:	9307      	str	r3, [sp, #28]
 8027862:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8027864:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8027868:	931a      	str	r3, [sp, #104]	; 0x68
 802786a:	9117      	str	r1, [sp, #92]	; 0x5c
 802786c:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8027870:	901b      	str	r0, [sp, #108]	; 0x6c
 8027872:	6850      	ldr	r0, [r2, #4]
 8027874:	6812      	ldr	r2, [r2, #0]
 8027876:	fb00 1303 	mla	r3, r0, r3, r1
 802787a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802787e:	930a      	str	r3, [sp, #40]	; 0x28
 8027880:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8027882:	681b      	ldr	r3, [r3, #0]
 8027884:	9310      	str	r3, [sp, #64]	; 0x40
 8027886:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 802788a:	930b      	str	r3, [sp, #44]	; 0x2c
 802788c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802788e:	2b00      	cmp	r3, #0
 8027890:	dc03      	bgt.n	802789a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8027892:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8027894:	2b00      	cmp	r3, #0
 8027896:	f340 8375 	ble.w	8027f84 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802789a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 802789c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80278a0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80278a4:	1e48      	subs	r0, r1, #1
 80278a6:	1e57      	subs	r7, r2, #1
 80278a8:	9b07      	ldr	r3, [sp, #28]
 80278aa:	2b00      	cmp	r3, #0
 80278ac:	f340 818e 	ble.w	8027bcc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 80278b0:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80278b4:	ea4f 4326 	mov.w	r3, r6, asr #16
 80278b8:	d406      	bmi.n	80278c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80278ba:	4584      	cmp	ip, r0
 80278bc:	da04      	bge.n	80278c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80278be:	2b00      	cmp	r3, #0
 80278c0:	db02      	blt.n	80278c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80278c2:	42bb      	cmp	r3, r7
 80278c4:	f2c0 8183 	blt.w	8027bce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 80278c8:	f11c 0c01 	adds.w	ip, ip, #1
 80278cc:	f100 8173 	bmi.w	8027bb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80278d0:	4561      	cmp	r1, ip
 80278d2:	f2c0 8170 	blt.w	8027bb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80278d6:	3301      	adds	r3, #1
 80278d8:	f100 816d 	bmi.w	8027bb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80278dc:	429a      	cmp	r2, r3
 80278de:	f2c0 816a 	blt.w	8027bb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80278e2:	9b07      	ldr	r3, [sp, #28]
 80278e4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80278e6:	9318      	str	r3, [sp, #96]	; 0x60
 80278e8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80278ea:	2b00      	cmp	r3, #0
 80278ec:	f340 818c 	ble.w	8027c08 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 80278f0:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80278f2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80278f4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80278f8:	689b      	ldr	r3, [r3, #8]
 80278fa:	1422      	asrs	r2, r4, #16
 80278fc:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8027900:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8027904:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8027908:	f100 81cd 	bmi.w	8027ca6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802790c:	f103 38ff 	add.w	r8, r3, #4294967295
 8027910:	4542      	cmp	r2, r8
 8027912:	f280 81c8 	bge.w	8027ca6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8027916:	f1bc 0f00 	cmp.w	ip, #0
 802791a:	f2c0 81c4 	blt.w	8027ca6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802791e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8027922:	45c4      	cmp	ip, r8
 8027924:	f280 81bf 	bge.w	8027ca6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8027928:	b21b      	sxth	r3, r3
 802792a:	fb0c 2203 	mla	r2, ip, r3, r2
 802792e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027930:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8027934:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8027938:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 802793c:	2800      	cmp	r0, #0
 802793e:	f000 81a9 	beq.w	8027c94 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 8027942:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8027946:	950c      	str	r5, [sp, #48]	; 0x30
 8027948:	0e2d      	lsrs	r5, r5, #24
 802794a:	9513      	str	r5, [sp, #76]	; 0x4c
 802794c:	b181      	cbz	r1, 8027970 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802794e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8027952:	3b01      	subs	r3, #1
 8027954:	009b      	lsls	r3, r3, #2
 8027956:	3304      	adds	r3, #4
 8027958:	eb08 0c03 	add.w	ip, r8, r3
 802795c:	f858 3003 	ldr.w	r3, [r8, r3]
 8027960:	9308      	str	r3, [sp, #32]
 8027962:	0e1b      	lsrs	r3, r3, #24
 8027964:	9311      	str	r3, [sp, #68]	; 0x44
 8027966:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802796a:	930d      	str	r3, [sp, #52]	; 0x34
 802796c:	0e1b      	lsrs	r3, r3, #24
 802796e:	9314      	str	r3, [sp, #80]	; 0x50
 8027970:	b280      	uxth	r0, r0
 8027972:	b289      	uxth	r1, r1
 8027974:	fb00 f901 	mul.w	r9, r0, r1
 8027978:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802797c:	0100      	lsls	r0, r0, #4
 802797e:	eba0 0809 	sub.w	r8, r0, r9
 8027982:	b289      	uxth	r1, r1
 8027984:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8027988:	9813      	ldr	r0, [sp, #76]	; 0x4c
 802798a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802798c:	fa1f f888 	uxth.w	r8, r8
 8027990:	1a5b      	subs	r3, r3, r1
 8027992:	b29b      	uxth	r3, r3
 8027994:	fb08 f000 	mul.w	r0, r8, r0
 8027998:	fb03 000e 	mla	r0, r3, lr, r0
 802799c:	fb01 0005 	mla	r0, r1, r5, r0
 80279a0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80279a2:	fb09 0005 	mla	r0, r9, r5, r0
 80279a6:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80279aa:	2800      	cmp	r0, #0
 80279ac:	f000 80fa 	beq.w	8027ba4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80279b0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80279b4:	d01b      	beq.n	80279ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80279b6:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 80279ba:	fb0e fa0a 	mul.w	sl, lr, sl
 80279be:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80279c2:	fb0e fe02 	mul.w	lr, lr, r2
 80279c6:	ea4f 221a 	mov.w	r2, sl, lsr #8
 80279ca:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80279ce:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80279d2:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80279d6:	4452      	add	r2, sl
 80279d8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80279dc:	0a12      	lsrs	r2, r2, #8
 80279de:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80279e2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80279e6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80279ea:	ea42 020c 	orr.w	r2, r2, ip
 80279ee:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80279f0:	2dff      	cmp	r5, #255	; 0xff
 80279f2:	d021      	beq.n	8027a38 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80279f4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80279f6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80279fa:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80279fc:	fb05 fb0b 	mul.w	fp, r5, fp
 8027a00:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027a02:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027a06:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027a08:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027a0c:	fb05 fa0a 	mul.w	sl, r5, sl
 8027a10:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027a14:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8027a18:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8027a1c:	44de      	add	lr, fp
 8027a1e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027a22:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027a26:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027a2a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027a2e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027a32:	ea4e 050a 	orr.w	r5, lr, sl
 8027a36:	950c      	str	r5, [sp, #48]	; 0x30
 8027a38:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8027a3a:	2dff      	cmp	r5, #255	; 0xff
 8027a3c:	d021      	beq.n	8027a82 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8027a3e:	9d08      	ldr	r5, [sp, #32]
 8027a40:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8027a44:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8027a46:	fb05 fb0b 	mul.w	fp, r5, fp
 8027a4a:	9d08      	ldr	r5, [sp, #32]
 8027a4c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027a50:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8027a52:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027a56:	fb05 fa0a 	mul.w	sl, r5, sl
 8027a5a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027a5e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8027a62:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8027a66:	44de      	add	lr, fp
 8027a68:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027a6c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027a70:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027a74:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027a78:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027a7c:	ea4e 050a 	orr.w	r5, lr, sl
 8027a80:	9508      	str	r5, [sp, #32]
 8027a82:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8027a84:	2dff      	cmp	r5, #255	; 0xff
 8027a86:	d021      	beq.n	8027acc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8027a88:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8027a8a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8027a8e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8027a90:	fb05 fb0b 	mul.w	fp, r5, fp
 8027a94:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8027a96:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027a9a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8027a9c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027aa0:	fb05 fa0a 	mul.w	sl, r5, sl
 8027aa4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027aa8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8027aac:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8027ab0:	44de      	add	lr, fp
 8027ab2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027ab6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027aba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027abe:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027ac2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027ac6:	ea4e 050a 	orr.w	r5, lr, sl
 8027aca:	950d      	str	r5, [sp, #52]	; 0x34
 8027acc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027ace:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027ad2:	9d08      	ldr	r5, [sp, #32]
 8027ad4:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8027ad8:	fb08 fc0c 	mul.w	ip, r8, ip
 8027adc:	fb03 cc0e 	mla	ip, r3, lr, ip
 8027ae0:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8027ae4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8027ae6:	fb01 cc0e 	mla	ip, r1, lr, ip
 8027aea:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8027aee:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027af0:	fb09 cc0e 	mla	ip, r9, lr, ip
 8027af4:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8027af8:	fb08 f80e 	mul.w	r8, r8, lr
 8027afc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8027b00:	fb03 8202 	mla	r2, r3, r2, r8
 8027b04:	9b08      	ldr	r3, [sp, #32]
 8027b06:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027b08:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 8027b0c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8027b0e:	fb01 220a 	mla	r2, r1, sl, r2
 8027b12:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 8027b16:	fb09 2901 	mla	r9, r9, r1, r2
 8027b1a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8027b1c:	883b      	ldrh	r3, [r7, #0]
 8027b1e:	4342      	muls	r2, r0
 8027b20:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027b24:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8027b28:	1c50      	adds	r0, r2, #1
 8027b2a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027b2e:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8027b32:	ea4c 0c09 	orr.w	ip, ip, r9
 8027b36:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8027b3a:	1219      	asrs	r1, r3, #8
 8027b3c:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8027b40:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8027b44:	b2c0      	uxtb	r0, r0
 8027b46:	fb12 f205 	smulbb	r2, r2, r5
 8027b4a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8027b4e:	fb01 2100 	mla	r1, r1, r0, r2
 8027b52:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8027b56:	10da      	asrs	r2, r3, #3
 8027b58:	fa5f fc8c 	uxtb.w	ip, ip
 8027b5c:	00db      	lsls	r3, r3, #3
 8027b5e:	fb1c fc05 	smulbb	ip, ip, r5
 8027b62:	b2db      	uxtb	r3, r3
 8027b64:	b289      	uxth	r1, r1
 8027b66:	fb03 c300 	mla	r3, r3, r0, ip
 8027b6a:	fa1f fc83 	uxth.w	ip, r3
 8027b6e:	1c4b      	adds	r3, r1, #1
 8027b70:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8027b74:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8027b78:	fb1e fe05 	smulbb	lr, lr, r5
 8027b7c:	f10c 0301 	add.w	r3, ip, #1
 8027b80:	fb02 e200 	mla	r2, r2, r0, lr
 8027b84:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8027b88:	b292      	uxth	r2, r2
 8027b8a:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8027b8e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8027b92:	430b      	orrs	r3, r1
 8027b94:	1c51      	adds	r1, r2, #1
 8027b96:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8027b9a:	0952      	lsrs	r2, r2, #5
 8027b9c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027ba0:	4313      	orrs	r3, r2
 8027ba2:	803b      	strh	r3, [r7, #0]
 8027ba4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8027ba6:	441c      	add	r4, r3
 8027ba8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8027baa:	441e      	add	r6, r3
 8027bac:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8027bae:	3b01      	subs	r3, #1
 8027bb0:	3702      	adds	r7, #2
 8027bb2:	9318      	str	r3, [sp, #96]	; 0x60
 8027bb4:	e698      	b.n	80278e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8027bb6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8027bb8:	441c      	add	r4, r3
 8027bba:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8027bbc:	441e      	add	r6, r3
 8027bbe:	9b07      	ldr	r3, [sp, #28]
 8027bc0:	3b01      	subs	r3, #1
 8027bc2:	9307      	str	r3, [sp, #28]
 8027bc4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8027bc6:	3302      	adds	r3, #2
 8027bc8:	930a      	str	r3, [sp, #40]	; 0x28
 8027bca:	e66d      	b.n	80278a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8027bcc:	d023      	beq.n	8027c16 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8027bce:	9b07      	ldr	r3, [sp, #28]
 8027bd0:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8027bd2:	3b01      	subs	r3, #1
 8027bd4:	fb00 4003 	mla	r0, r0, r3, r4
 8027bd8:	1400      	asrs	r0, r0, #16
 8027bda:	f53f ae82 	bmi.w	80278e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8027bde:	3901      	subs	r1, #1
 8027be0:	4288      	cmp	r0, r1
 8027be2:	f6bf ae7e 	bge.w	80278e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8027be6:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8027be8:	fb01 6303 	mla	r3, r1, r3, r6
 8027bec:	141b      	asrs	r3, r3, #16
 8027bee:	f53f ae78 	bmi.w	80278e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8027bf2:	3a01      	subs	r2, #1
 8027bf4:	4293      	cmp	r3, r2
 8027bf6:	f6bf ae74 	bge.w	80278e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8027bfa:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8027bfe:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8027c02:	f1bb 0f00 	cmp.w	fp, #0
 8027c06:	dc6c      	bgt.n	8027ce2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8027c08:	9b07      	ldr	r3, [sp, #28]
 8027c0a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8027c0e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8027c10:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8027c14:	930a      	str	r3, [sp, #40]	; 0x28
 8027c16:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8027c18:	2b00      	cmp	r3, #0
 8027c1a:	f340 81b3 	ble.w	8027f84 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8027c1e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8027c22:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8027c26:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8027c2a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8027c2c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8027c30:	ee31 1a05 	vadd.f32	s2, s2, s10
 8027c34:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8027c38:	eef0 6a62 	vmov.f32	s13, s5
 8027c3c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8027c40:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027c44:	ee77 2a62 	vsub.f32	s5, s14, s5
 8027c48:	ee16 4a90 	vmov	r4, s13
 8027c4c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8027c50:	eef0 6a43 	vmov.f32	s13, s6
 8027c54:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8027c58:	ee12 2a90 	vmov	r2, s5
 8027c5c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8027c60:	fb92 f3f3 	sdiv	r3, r2, r3
 8027c64:	ee13 2a10 	vmov	r2, s6
 8027c68:	9329      	str	r3, [sp, #164]	; 0xa4
 8027c6a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8027c6c:	fb92 f3f3 	sdiv	r3, r2, r3
 8027c70:	932a      	str	r3, [sp, #168]	; 0xa8
 8027c72:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8027c74:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8027c76:	3b01      	subs	r3, #1
 8027c78:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027c7c:	9317      	str	r3, [sp, #92]	; 0x5c
 8027c7e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8027c80:	bf08      	it	eq
 8027c82:	4613      	moveq	r3, r2
 8027c84:	ee16 6a90 	vmov	r6, s13
 8027c88:	9307      	str	r3, [sp, #28]
 8027c8a:	eeb0 3a67 	vmov.f32	s6, s15
 8027c8e:	eef0 2a47 	vmov.f32	s5, s14
 8027c92:	e5fb      	b.n	802788c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8027c94:	2900      	cmp	r1, #0
 8027c96:	f43f ae6b 	beq.w	8027970 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8027c9a:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8027c9e:	9308      	str	r3, [sp, #32]
 8027ca0:	0e1b      	lsrs	r3, r3, #24
 8027ca2:	9311      	str	r3, [sp, #68]	; 0x44
 8027ca4:	e664      	b.n	8027970 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8027ca6:	f112 0801 	adds.w	r8, r2, #1
 8027caa:	f53f af7b 	bmi.w	8027ba4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8027cae:	4543      	cmp	r3, r8
 8027cb0:	f6ff af78 	blt.w	8027ba4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8027cb4:	f11c 0801 	adds.w	r8, ip, #1
 8027cb8:	f53f af74 	bmi.w	8027ba4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8027cbc:	45c6      	cmp	lr, r8
 8027cbe:	f6ff af71 	blt.w	8027ba4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8027cc2:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8027cc4:	9201      	str	r2, [sp, #4]
 8027cc6:	fa0f f28e 	sxth.w	r2, lr
 8027cca:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8027cce:	e9cd c002 	strd	ip, r0, [sp, #8]
 8027cd2:	9200      	str	r2, [sp, #0]
 8027cd4:	b21b      	sxth	r3, r3
 8027cd6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8027cd8:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8027cda:	4639      	mov	r1, r7
 8027cdc:	f7ff fc79 	bl	80275d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8027ce0:	e760      	b.n	8027ba4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8027ce2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8027ce4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027ce6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8027cea:	1427      	asrs	r7, r4, #16
 8027cec:	1433      	asrs	r3, r6, #16
 8027cee:	fb01 7303 	mla	r3, r1, r3, r7
 8027cf2:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8027cf6:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8027cfa:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8027cfe:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8027d02:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8027d06:	2a00      	cmp	r2, #0
 8027d08:	f000 8133 	beq.w	8027f72 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8027d0c:	687d      	ldr	r5, [r7, #4]
 8027d0e:	950e      	str	r5, [sp, #56]	; 0x38
 8027d10:	0e2d      	lsrs	r5, r5, #24
 8027d12:	9515      	str	r5, [sp, #84]	; 0x54
 8027d14:	b178      	cbz	r0, 8027d36 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8027d16:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8027d1a:	3901      	subs	r1, #1
 8027d1c:	0089      	lsls	r1, r1, #2
 8027d1e:	3104      	adds	r1, #4
 8027d20:	eb07 0e01 	add.w	lr, r7, r1
 8027d24:	5879      	ldr	r1, [r7, r1]
 8027d26:	9109      	str	r1, [sp, #36]	; 0x24
 8027d28:	0e09      	lsrs	r1, r1, #24
 8027d2a:	9112      	str	r1, [sp, #72]	; 0x48
 8027d2c:	f8de 1004 	ldr.w	r1, [lr, #4]
 8027d30:	910f      	str	r1, [sp, #60]	; 0x3c
 8027d32:	0e09      	lsrs	r1, r1, #24
 8027d34:	9116      	str	r1, [sp, #88]	; 0x58
 8027d36:	b292      	uxth	r2, r2
 8027d38:	b280      	uxth	r0, r0
 8027d3a:	fb02 f800 	mul.w	r8, r2, r0
 8027d3e:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8027d42:	0112      	lsls	r2, r2, #4
 8027d44:	eba2 0e08 	sub.w	lr, r2, r8
 8027d48:	b280      	uxth	r0, r0
 8027d4a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8027d4e:	9915      	ldr	r1, [sp, #84]	; 0x54
 8027d50:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027d52:	fa1f fe8e 	uxth.w	lr, lr
 8027d56:	1a12      	subs	r2, r2, r0
 8027d58:	b292      	uxth	r2, r2
 8027d5a:	fb0e f101 	mul.w	r1, lr, r1
 8027d5e:	fb02 110c 	mla	r1, r2, ip, r1
 8027d62:	fb00 1105 	mla	r1, r0, r5, r1
 8027d66:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8027d68:	fb08 1105 	mla	r1, r8, r5, r1
 8027d6c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8027d70:	2900      	cmp	r1, #0
 8027d72:	f000 80f5 	beq.w	8027f60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 8027d76:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8027d7a:	d019      	beq.n	8027db0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8027d7c:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8027d80:	fb0c fa0a 	mul.w	sl, ip, sl
 8027d84:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8027d88:	fb0c fc03 	mul.w	ip, ip, r3
 8027d8c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8027d90:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8027d94:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8027d98:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8027d9c:	4453      	add	r3, sl
 8027d9e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8027da2:	0a1b      	lsrs	r3, r3, #8
 8027da4:	0a3f      	lsrs	r7, r7, #8
 8027da6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8027daa:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8027dae:	433b      	orrs	r3, r7
 8027db0:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8027db2:	2dff      	cmp	r5, #255	; 0xff
 8027db4:	d020      	beq.n	8027df8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8027db6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8027db8:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8027dbc:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8027dbe:	436f      	muls	r7, r5
 8027dc0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8027dc2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027dc6:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8027dc8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8027dcc:	fb05 fa0a 	mul.w	sl, r5, sl
 8027dd0:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8027dd4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027dd8:	44bc      	add	ip, r7
 8027dda:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8027dde:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8027de2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027de6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027dea:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027dee:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027df2:	ea4c 050a 	orr.w	r5, ip, sl
 8027df6:	950e      	str	r5, [sp, #56]	; 0x38
 8027df8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027dfa:	2dff      	cmp	r5, #255	; 0xff
 8027dfc:	d020      	beq.n	8027e40 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8027dfe:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8027e00:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8027e04:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027e06:	436f      	muls	r7, r5
 8027e08:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8027e0a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027e0e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027e10:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8027e14:	fb05 fa0a 	mul.w	sl, r5, sl
 8027e18:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8027e1c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027e20:	44bc      	add	ip, r7
 8027e22:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8027e26:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8027e2a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027e2e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027e32:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027e36:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027e3a:	ea4c 050a 	orr.w	r5, ip, sl
 8027e3e:	9509      	str	r5, [sp, #36]	; 0x24
 8027e40:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8027e42:	2dff      	cmp	r5, #255	; 0xff
 8027e44:	d020      	beq.n	8027e88 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8027e46:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8027e48:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8027e4c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8027e4e:	436f      	muls	r7, r5
 8027e50:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8027e52:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027e56:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8027e58:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8027e5c:	fb05 fa0a 	mul.w	sl, r5, sl
 8027e60:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8027e64:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027e68:	44bc      	add	ip, r7
 8027e6a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8027e6e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8027e72:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027e76:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027e7a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027e7e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027e82:	ea4c 050a 	orr.w	r5, ip, sl
 8027e86:	950f      	str	r5, [sp, #60]	; 0x3c
 8027e88:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8027e8a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8027e8e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8027e90:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8027e94:	fb0e f707 	mul.w	r7, lr, r7
 8027e98:	fb02 770c 	mla	r7, r2, ip, r7
 8027e9c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027ea0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8027ea2:	fb00 770c 	mla	r7, r0, ip, r7
 8027ea6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027eaa:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8027eac:	fb08 770c 	mla	r7, r8, ip, r7
 8027eb0:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8027eb4:	fb0e fe0c 	mul.w	lr, lr, ip
 8027eb8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8027ebc:	fb02 e303 	mla	r3, r2, r3, lr
 8027ec0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8027ec2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027ec4:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8027ec8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8027eca:	fb00 330a 	mla	r3, r0, sl, r3
 8027ece:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8027ed2:	fb08 3c0c 	mla	ip, r8, ip, r3
 8027ed6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8027ed8:	f8b9 0000 	ldrh.w	r0, [r9]
 8027edc:	4359      	muls	r1, r3
 8027ede:	0a3f      	lsrs	r7, r7, #8
 8027ee0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027ee4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8027ee8:	1c4b      	adds	r3, r1, #1
 8027eea:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8027eee:	ea47 070c 	orr.w	r7, r7, ip
 8027ef2:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8027ef6:	1202      	asrs	r2, r0, #8
 8027ef8:	0c3b      	lsrs	r3, r7, #16
 8027efa:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8027efe:	b2c9      	uxtb	r1, r1
 8027f00:	fb13 f305 	smulbb	r3, r3, r5
 8027f04:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8027f08:	fb02 3201 	mla	r2, r2, r1, r3
 8027f0c:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8027f10:	10c3      	asrs	r3, r0, #3
 8027f12:	b2ff      	uxtb	r7, r7
 8027f14:	00c0      	lsls	r0, r0, #3
 8027f16:	b2c0      	uxtb	r0, r0
 8027f18:	fb17 f705 	smulbb	r7, r7, r5
 8027f1c:	fb00 7001 	mla	r0, r0, r1, r7
 8027f20:	b292      	uxth	r2, r2
 8027f22:	fb1c fc05 	smulbb	ip, ip, r5
 8027f26:	b280      	uxth	r0, r0
 8027f28:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8027f2c:	fb03 c301 	mla	r3, r3, r1, ip
 8027f30:	1c51      	adds	r1, r2, #1
 8027f32:	f100 0c01 	add.w	ip, r0, #1
 8027f36:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8027f3a:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8027f3e:	b29b      	uxth	r3, r3
 8027f40:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8027f44:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8027f48:	ea4c 0202 	orr.w	r2, ip, r2
 8027f4c:	f103 0c01 	add.w	ip, r3, #1
 8027f50:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8027f54:	095b      	lsrs	r3, r3, #5
 8027f56:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8027f5a:	431a      	orrs	r2, r3
 8027f5c:	f8a9 2000 	strh.w	r2, [r9]
 8027f60:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8027f62:	441c      	add	r4, r3
 8027f64:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8027f66:	f109 0902 	add.w	r9, r9, #2
 8027f6a:	441e      	add	r6, r3
 8027f6c:	f10b 3bff 	add.w	fp, fp, #4294967295
 8027f70:	e647      	b.n	8027c02 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8027f72:	2800      	cmp	r0, #0
 8027f74:	f43f aedf 	beq.w	8027d36 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8027f78:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8027f7c:	9109      	str	r1, [sp, #36]	; 0x24
 8027f7e:	0e09      	lsrs	r1, r1, #24
 8027f80:	9112      	str	r1, [sp, #72]	; 0x48
 8027f82:	e6d8      	b.n	8027d36 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8027f84:	b01d      	add	sp, #116	; 0x74
 8027f86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08027f8a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8027f8a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027f8e:	b085      	sub	sp, #20
 8027f90:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8027f94:	9102      	str	r1, [sp, #8]
 8027f96:	2c00      	cmp	r4, #0
 8027f98:	fb04 7103 	mla	r1, r4, r3, r7
 8027f9c:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8027fa0:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8027fa4:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8027fa8:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8027fac:	f2c0 810c 	blt.w	80281c8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8027fb0:	45a6      	cmp	lr, r4
 8027fb2:	f340 8109 	ble.w	80281c8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8027fb6:	2f00      	cmp	r7, #0
 8027fb8:	f2c0 8104 	blt.w	80281c4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8027fbc:	42bb      	cmp	r3, r7
 8027fbe:	f340 8101 	ble.w	80281c4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8027fc2:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8027fc6:	1c7a      	adds	r2, r7, #1
 8027fc8:	f100 8101 	bmi.w	80281ce <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8027fcc:	4293      	cmp	r3, r2
 8027fce:	f340 80fe 	ble.w	80281ce <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8027fd2:	2e00      	cmp	r6, #0
 8027fd4:	f000 80fd 	beq.w	80281d2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8027fd8:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8027fdc:	3401      	adds	r4, #1
 8027fde:	f100 80fc 	bmi.w	80281da <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8027fe2:	45a6      	cmp	lr, r4
 8027fe4:	f340 80f9 	ble.w	80281da <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8027fe8:	2800      	cmp	r0, #0
 8027fea:	f000 80f9 	beq.w	80281e0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8027fee:	2f00      	cmp	r7, #0
 8027ff0:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8027ff4:	f2c0 80ef 	blt.w	80281d6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8027ff8:	42bb      	cmp	r3, r7
 8027ffa:	f340 80ec 	ble.w	80281d6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8027ffe:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8028002:	3701      	adds	r7, #1
 8028004:	f100 80ef 	bmi.w	80281e6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8028008:	42bb      	cmp	r3, r7
 802800a:	f340 80ec 	ble.w	80281e6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 802800e:	2e00      	cmp	r6, #0
 8028010:	f000 80eb 	beq.w	80281ea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8028014:	6852      	ldr	r2, [r2, #4]
 8028016:	b2b6      	uxth	r6, r6
 8028018:	b280      	uxth	r0, r0
 802801a:	fb00 fe06 	mul.w	lr, r0, r6
 802801e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8028022:	0136      	lsls	r6, r6, #4
 8028024:	eba6 070e 	sub.w	r7, r6, lr
 8028028:	b280      	uxth	r0, r0
 802802a:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 802802e:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8028032:	b2bf      	uxth	r7, r7
 8028034:	1a1b      	subs	r3, r3, r0
 8028036:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 802803a:	b29b      	uxth	r3, r3
 802803c:	fb07 f60a 	mul.w	r6, r7, sl
 8028040:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8028044:	fb0b 6603 	mla	r6, fp, r3, r6
 8028048:	ea4f 6812 	mov.w	r8, r2, lsr #24
 802804c:	fb00 6609 	mla	r6, r0, r9, r6
 8028050:	fb0e 6608 	mla	r6, lr, r8, r6
 8028054:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8028058:	9600      	str	r6, [sp, #0]
 802805a:	2e00      	cmp	r6, #0
 802805c:	f000 80af 	beq.w	80281be <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8028060:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8028064:	fb0b fc0c 	mul.w	ip, fp, ip
 8028068:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 802806c:	fb0b f505 	mul.w	r5, fp, r5
 8028070:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8028074:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8028078:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802807c:	44dc      	add	ip, fp
 802807e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8028082:	9501      	str	r5, [sp, #4]
 8028084:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8028088:	9503      	str	r5, [sp, #12]
 802808a:	9d01      	ldr	r5, [sp, #4]
 802808c:	9e02      	ldr	r6, [sp, #8]
 802808e:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8028092:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8028096:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 802809a:	fb0a fc0c 	mul.w	ip, sl, ip
 802809e:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80280a2:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80280a6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80280aa:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80280ae:	4465      	add	r5, ip
 80280b0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80280b4:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80280b8:	fb09 fc0c 	mul.w	ip, r9, ip
 80280bc:	fb09 f904 	mul.w	r9, r9, r4
 80280c0:	f509 7480 	add.w	r4, r9, #256	; 0x100
 80280c4:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80280c8:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 80280cc:	fb08 f404 	mul.w	r4, r8, r4
 80280d0:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80280d4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80280d8:	fb08 f802 	mul.w	r8, r8, r2
 80280dc:	fb0a fa01 	mul.w	sl, sl, r1
 80280e0:	0a22      	lsrs	r2, r4, #8
 80280e2:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 80280e6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80280ea:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 80280ee:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80280f2:	4414      	add	r4, r2
 80280f4:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80280f8:	f508 7280 	add.w	r2, r8, #256	; 0x100
 80280fc:	0a2d      	lsrs	r5, r5, #8
 80280fe:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8028102:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8028106:	9a03      	ldr	r2, [sp, #12]
 8028108:	8836      	ldrh	r6, [r6, #0]
 802810a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802810e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8028112:	437d      	muls	r5, r7
 8028114:	4461      	add	r1, ip
 8028116:	0a24      	lsrs	r4, r4, #8
 8028118:	fb02 5503 	mla	r5, r2, r3, r5
 802811c:	0a09      	lsrs	r1, r1, #8
 802811e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8028122:	fb04 540e 	mla	r4, r4, lr, r5
 8028126:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802812a:	fb01 4100 	mla	r1, r1, r0, r4
 802812e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8028132:	0a09      	lsrs	r1, r1, #8
 8028134:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8028138:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 802813c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8028140:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8028144:	fb07 f70a 	mul.w	r7, r7, sl
 8028148:	fb03 7101 	mla	r1, r3, r1, r7
 802814c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8028150:	9b00      	ldr	r3, [sp, #0]
 8028152:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8028156:	fb0e 1e08 	mla	lr, lr, r8, r1
 802815a:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 802815e:	fb00 e101 	mla	r1, r0, r1, lr
 8028162:	43da      	mvns	r2, r3
 8028164:	1233      	asrs	r3, r6, #8
 8028166:	b2d2      	uxtb	r2, r2
 8028168:	10f0      	asrs	r0, r6, #3
 802816a:	0a09      	lsrs	r1, r1, #8
 802816c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8028170:	00f6      	lsls	r6, r6, #3
 8028172:	4353      	muls	r3, r2
 8028174:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8028178:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802817c:	b2f6      	uxtb	r6, r6
 802817e:	4321      	orrs	r1, r4
 8028180:	4350      	muls	r0, r2
 8028182:	4356      	muls	r6, r2
 8028184:	1c5a      	adds	r2, r3, #1
 8028186:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 802818a:	0c0b      	lsrs	r3, r1, #16
 802818c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8028190:	1c42      	adds	r2, r0, #1
 8028192:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8028196:	0a0a      	lsrs	r2, r1, #8
 8028198:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 802819c:	021b      	lsls	r3, r3, #8
 802819e:	00d2      	lsls	r2, r2, #3
 80281a0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80281a4:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80281a8:	4313      	orrs	r3, r2
 80281aa:	1c72      	adds	r2, r6, #1
 80281ac:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80281b0:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 80281b4:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80281b8:	4319      	orrs	r1, r3
 80281ba:	9b02      	ldr	r3, [sp, #8]
 80281bc:	8019      	strh	r1, [r3, #0]
 80281be:	b005      	add	sp, #20
 80281c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80281c4:	2500      	movs	r5, #0
 80281c6:	e6fe      	b.n	8027fc6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 80281c8:	2100      	movs	r1, #0
 80281ca:	460d      	mov	r5, r1
 80281cc:	e706      	b.n	8027fdc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 80281ce:	2100      	movs	r1, #0
 80281d0:	e704      	b.n	8027fdc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 80281d2:	4631      	mov	r1, r6
 80281d4:	e702      	b.n	8027fdc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 80281d6:	2400      	movs	r4, #0
 80281d8:	e713      	b.n	8028002 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 80281da:	2200      	movs	r2, #0
 80281dc:	4614      	mov	r4, r2
 80281de:	e71a      	b.n	8028016 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80281e0:	4602      	mov	r2, r0
 80281e2:	4604      	mov	r4, r0
 80281e4:	e717      	b.n	8028016 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80281e6:	2200      	movs	r2, #0
 80281e8:	e715      	b.n	8028016 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80281ea:	4632      	mov	r2, r6
 80281ec:	e713      	b.n	8028016 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

080281f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80281f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80281f4:	b09b      	sub	sp, #108	; 0x6c
 80281f6:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 80281fa:	9218      	str	r2, [sp, #96]	; 0x60
 80281fc:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80281fe:	9116      	str	r1, [sp, #88]	; 0x58
 8028200:	9307      	str	r3, [sp, #28]
 8028202:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8028206:	9019      	str	r0, [sp, #100]	; 0x64
 8028208:	6850      	ldr	r0, [r2, #4]
 802820a:	6812      	ldr	r2, [r2, #0]
 802820c:	fb00 1303 	mla	r3, r0, r3, r1
 8028210:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8028214:	930a      	str	r3, [sp, #40]	; 0x28
 8028216:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8028218:	681b      	ldr	r3, [r3, #0]
 802821a:	930f      	str	r3, [sp, #60]	; 0x3c
 802821c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802821e:	2b00      	cmp	r3, #0
 8028220:	dc03      	bgt.n	802822a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8028222:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8028224:	2b00      	cmp	r3, #0
 8028226:	f340 8386 	ble.w	8028936 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 802822a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802822c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8028230:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8028234:	1e48      	subs	r0, r1, #1
 8028236:	1e57      	subs	r7, r2, #1
 8028238:	9b07      	ldr	r3, [sp, #28]
 802823a:	2b00      	cmp	r3, #0
 802823c:	f340 8166 	ble.w	802850c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8028240:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8028244:	ea4f 4326 	mov.w	r3, r6, asr #16
 8028248:	d406      	bmi.n	8028258 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802824a:	4584      	cmp	ip, r0
 802824c:	da04      	bge.n	8028258 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802824e:	2b00      	cmp	r3, #0
 8028250:	db02      	blt.n	8028258 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8028252:	42bb      	cmp	r3, r7
 8028254:	f2c0 815b 	blt.w	802850e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8028258:	f11c 0c01 	adds.w	ip, ip, #1
 802825c:	f100 814b 	bmi.w	80284f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8028260:	4561      	cmp	r1, ip
 8028262:	f2c0 8148 	blt.w	80284f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8028266:	3301      	adds	r3, #1
 8028268:	f100 8145 	bmi.w	80284f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802826c:	429a      	cmp	r2, r3
 802826e:	f2c0 8142 	blt.w	80284f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8028272:	9b07      	ldr	r3, [sp, #28]
 8028274:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8028276:	9317      	str	r3, [sp, #92]	; 0x5c
 8028278:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802827a:	2b00      	cmp	r3, #0
 802827c:	f340 8165 	ble.w	802854a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8028280:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8028282:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8028284:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8028288:	689b      	ldr	r3, [r3, #8]
 802828a:	1422      	asrs	r2, r4, #16
 802828c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8028290:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8028294:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8028298:	f100 81d5 	bmi.w	8028646 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802829c:	f103 38ff 	add.w	r8, r3, #4294967295
 80282a0:	4542      	cmp	r2, r8
 80282a2:	f280 81d0 	bge.w	8028646 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80282a6:	f1bc 0f00 	cmp.w	ip, #0
 80282aa:	f2c0 81cc 	blt.w	8028646 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80282ae:	f10e 38ff 	add.w	r8, lr, #4294967295
 80282b2:	45c4      	cmp	ip, r8
 80282b4:	f280 81c7 	bge.w	8028646 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80282b8:	b21b      	sxth	r3, r3
 80282ba:	fb0c 2203 	mla	r2, ip, r3, r2
 80282be:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80282c0:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80282c4:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80282c8:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80282cc:	2900      	cmp	r1, #0
 80282ce:	f000 8182 	beq.w	80285d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 80282d2:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80282d6:	950b      	str	r5, [sp, #44]	; 0x2c
 80282d8:	0e2d      	lsrs	r5, r5, #24
 80282da:	9512      	str	r5, [sp, #72]	; 0x48
 80282dc:	b180      	cbz	r0, 8028300 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80282de:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80282e2:	3b01      	subs	r3, #1
 80282e4:	009b      	lsls	r3, r3, #2
 80282e6:	3304      	adds	r3, #4
 80282e8:	eb08 0c03 	add.w	ip, r8, r3
 80282ec:	f858 3003 	ldr.w	r3, [r8, r3]
 80282f0:	9308      	str	r3, [sp, #32]
 80282f2:	0e1b      	lsrs	r3, r3, #24
 80282f4:	9310      	str	r3, [sp, #64]	; 0x40
 80282f6:	f8dc 3004 	ldr.w	r3, [ip, #4]
 80282fa:	930c      	str	r3, [sp, #48]	; 0x30
 80282fc:	0e1b      	lsrs	r3, r3, #24
 80282fe:	9313      	str	r3, [sp, #76]	; 0x4c
 8028300:	b289      	uxth	r1, r1
 8028302:	b280      	uxth	r0, r0
 8028304:	fb01 f900 	mul.w	r9, r1, r0
 8028308:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 802830c:	0109      	lsls	r1, r1, #4
 802830e:	eba1 0809 	sub.w	r8, r1, r9
 8028312:	b280      	uxth	r0, r0
 8028314:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8028318:	9b12      	ldr	r3, [sp, #72]	; 0x48
 802831a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802831c:	fa1f f888 	uxth.w	r8, r8
 8028320:	1a09      	subs	r1, r1, r0
 8028322:	b289      	uxth	r1, r1
 8028324:	fb08 f303 	mul.w	r3, r8, r3
 8028328:	fb01 330e 	mla	r3, r1, lr, r3
 802832c:	fb00 3305 	mla	r3, r0, r5, r3
 8028330:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8028332:	fb09 3305 	mla	r3, r9, r5, r3
 8028336:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802833a:	2b00      	cmp	r3, #0
 802833c:	f000 80d2 	beq.w	80284e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8028340:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8028344:	d01b      	beq.n	802837e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8028346:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 802834a:	fb0e fa0a 	mul.w	sl, lr, sl
 802834e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8028352:	fb0e fe02 	mul.w	lr, lr, r2
 8028356:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802835a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802835e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8028362:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8028366:	4452      	add	r2, sl
 8028368:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802836c:	0a12      	lsrs	r2, r2, #8
 802836e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8028372:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8028376:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802837a:	ea42 020c 	orr.w	r2, r2, ip
 802837e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8028380:	2dff      	cmp	r5, #255	; 0xff
 8028382:	d021      	beq.n	80283c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8028384:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8028386:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802838a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802838c:	fb05 fb0b 	mul.w	fp, r5, fp
 8028390:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8028392:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8028396:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8028398:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802839c:	fb05 fa0a 	mul.w	sl, r5, sl
 80283a0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80283a4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80283a8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80283ac:	44de      	add	lr, fp
 80283ae:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80283b2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80283b6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80283ba:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80283be:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80283c2:	ea4e 050a 	orr.w	r5, lr, sl
 80283c6:	950b      	str	r5, [sp, #44]	; 0x2c
 80283c8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80283ca:	2dff      	cmp	r5, #255	; 0xff
 80283cc:	d021      	beq.n	8028412 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 80283ce:	9d08      	ldr	r5, [sp, #32]
 80283d0:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80283d4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80283d6:	fb05 fb0b 	mul.w	fp, r5, fp
 80283da:	9d08      	ldr	r5, [sp, #32]
 80283dc:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80283e0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80283e2:	fb05 fa0e 	mul.w	sl, r5, lr
 80283e6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80283ea:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80283ee:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80283f2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80283f6:	44de      	add	lr, fp
 80283f8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80283fc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8028400:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8028404:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8028408:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802840c:	ea4e 050a 	orr.w	r5, lr, sl
 8028410:	9508      	str	r5, [sp, #32]
 8028412:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8028414:	2dff      	cmp	r5, #255	; 0xff
 8028416:	d021      	beq.n	802845c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8028418:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802841a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802841e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8028420:	fb05 fb0b 	mul.w	fp, r5, fp
 8028424:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8028426:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802842a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802842c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8028430:	fb05 fa0a 	mul.w	sl, r5, sl
 8028434:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8028438:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802843c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8028440:	44de      	add	lr, fp
 8028442:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8028446:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802844a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802844e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8028452:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8028456:	ea4e 050a 	orr.w	r5, lr, sl
 802845a:	950c      	str	r5, [sp, #48]	; 0x30
 802845c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802845e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8028462:	9d08      	ldr	r5, [sp, #32]
 8028464:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8028468:	fb08 fc0c 	mul.w	ip, r8, ip
 802846c:	fb01 cc0e 	mla	ip, r1, lr, ip
 8028470:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8028474:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8028476:	fb00 cc0e 	mla	ip, r0, lr, ip
 802847a:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 802847e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8028480:	fb09 cc0e 	mla	ip, r9, lr, ip
 8028484:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8028488:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802848c:	fb08 f80e 	mul.w	r8, r8, lr
 8028490:	fb01 8202 	mla	r2, r1, r2, r8
 8028494:	9908      	ldr	r1, [sp, #32]
 8028496:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 802849a:	990c      	ldr	r1, [sp, #48]	; 0x30
 802849c:	fb00 220a 	mla	r2, r0, sl, r2
 80284a0:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 80284a4:	fb09 2900 	mla	r9, r9, r0, r2
 80284a8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80284ac:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80284b0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80284b4:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80284b8:	ea4c 0c09 	orr.w	ip, ip, r9
 80284bc:	2bff      	cmp	r3, #255	; 0xff
 80284be:	ea4f 221c 	mov.w	r2, ip, lsr #8
 80284c2:	f040 8091 	bne.w	80285e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80284c6:	ea4f 135c 	mov.w	r3, ip, lsr #5
 80284ca:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 80284ce:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80284d2:	f022 0207 	bic.w	r2, r2, #7
 80284d6:	431a      	orrs	r2, r3
 80284d8:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 80284dc:	ea4c 0c02 	orr.w	ip, ip, r2
 80284e0:	f8a7 c000 	strh.w	ip, [r7]
 80284e4:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80284e6:	441c      	add	r4, r3
 80284e8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80284ea:	441e      	add	r6, r3
 80284ec:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80284ee:	3b01      	subs	r3, #1
 80284f0:	3702      	adds	r7, #2
 80284f2:	9317      	str	r3, [sp, #92]	; 0x5c
 80284f4:	e6c0      	b.n	8028278 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80284f6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80284f8:	441c      	add	r4, r3
 80284fa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80284fc:	441e      	add	r6, r3
 80284fe:	9b07      	ldr	r3, [sp, #28]
 8028500:	3b01      	subs	r3, #1
 8028502:	9307      	str	r3, [sp, #28]
 8028504:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8028506:	3302      	adds	r3, #2
 8028508:	930a      	str	r3, [sp, #40]	; 0x28
 802850a:	e695      	b.n	8028238 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802850c:	d024      	beq.n	8028558 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 802850e:	9b07      	ldr	r3, [sp, #28]
 8028510:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8028512:	3b01      	subs	r3, #1
 8028514:	fb00 4003 	mla	r0, r0, r3, r4
 8028518:	1400      	asrs	r0, r0, #16
 802851a:	f53f aeaa 	bmi.w	8028272 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802851e:	3901      	subs	r1, #1
 8028520:	4288      	cmp	r0, r1
 8028522:	f6bf aea6 	bge.w	8028272 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8028526:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8028528:	fb01 6303 	mla	r3, r1, r3, r6
 802852c:	141b      	asrs	r3, r3, #16
 802852e:	f53f aea0 	bmi.w	8028272 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8028532:	3a01      	subs	r2, #1
 8028534:	4293      	cmp	r3, r2
 8028536:	f6bf ae9c 	bge.w	8028272 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802853a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802853e:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8028542:	f1bb 0f00 	cmp.w	fp, #0
 8028546:	f300 809a 	bgt.w	802867e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 802854a:	9b07      	ldr	r3, [sp, #28]
 802854c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8028550:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8028552:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8028556:	930a      	str	r3, [sp, #40]	; 0x28
 8028558:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802855a:	2b00      	cmp	r3, #0
 802855c:	f340 81eb 	ble.w	8028936 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8028560:	ee30 0a04 	vadd.f32	s0, s0, s8
 8028564:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8028568:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802856c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802856e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8028572:	ee31 1a05 	vadd.f32	s2, s2, s10
 8028576:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802857a:	eef0 6a62 	vmov.f32	s13, s5
 802857e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8028582:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8028586:	ee77 2a62 	vsub.f32	s5, s14, s5
 802858a:	ee16 4a90 	vmov	r4, s13
 802858e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8028592:	eef0 6a43 	vmov.f32	s13, s6
 8028596:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802859a:	ee12 2a90 	vmov	r2, s5
 802859e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80285a2:	fb92 f3f3 	sdiv	r3, r2, r3
 80285a6:	ee13 2a10 	vmov	r2, s6
 80285aa:	9327      	str	r3, [sp, #156]	; 0x9c
 80285ac:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80285ae:	fb92 f3f3 	sdiv	r3, r2, r3
 80285b2:	9328      	str	r3, [sp, #160]	; 0xa0
 80285b4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80285b6:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80285b8:	3b01      	subs	r3, #1
 80285ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80285be:	9316      	str	r3, [sp, #88]	; 0x58
 80285c0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80285c2:	bf08      	it	eq
 80285c4:	4613      	moveq	r3, r2
 80285c6:	ee16 6a90 	vmov	r6, s13
 80285ca:	9307      	str	r3, [sp, #28]
 80285cc:	eeb0 3a67 	vmov.f32	s6, s15
 80285d0:	eef0 2a47 	vmov.f32	s5, s14
 80285d4:	e622      	b.n	802821c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 80285d6:	2800      	cmp	r0, #0
 80285d8:	f43f ae92 	beq.w	8028300 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80285dc:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80285e0:	9308      	str	r3, [sp, #32]
 80285e2:	0e1b      	lsrs	r3, r3, #24
 80285e4:	9310      	str	r3, [sp, #64]	; 0x40
 80285e6:	e68b      	b.n	8028300 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80285e8:	8839      	ldrh	r1, [r7, #0]
 80285ea:	4dd4      	ldr	r5, [pc, #848]	; (802893c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 80285ec:	43db      	mvns	r3, r3
 80285ee:	ea4f 2e21 	mov.w	lr, r1, asr #8
 80285f2:	fa5f f883 	uxtb.w	r8, r3
 80285f6:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80285fa:	fb0e fe08 	mul.w	lr, lr, r8
 80285fe:	10c8      	asrs	r0, r1, #3
 8028600:	00cb      	lsls	r3, r1, #3
 8028602:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8028606:	f10e 0101 	add.w	r1, lr, #1
 802860a:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 802860e:	fb00 f008 	mul.w	r0, r0, r8
 8028612:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8028616:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 802861a:	f100 0e01 	add.w	lr, r0, #1
 802861e:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8028622:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8028626:	b2db      	uxtb	r3, r3
 8028628:	b2c9      	uxtb	r1, r1
 802862a:	00d2      	lsls	r2, r2, #3
 802862c:	fb03 f308 	mul.w	r3, r3, r8
 8028630:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8028634:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8028638:	430a      	orrs	r2, r1
 802863a:	1c59      	adds	r1, r3, #1
 802863c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8028640:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8028644:	e748      	b.n	80284d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8028646:	f112 0801 	adds.w	r8, r2, #1
 802864a:	f53f af4b 	bmi.w	80284e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802864e:	4543      	cmp	r3, r8
 8028650:	f6ff af48 	blt.w	80284e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8028654:	f11c 0801 	adds.w	r8, ip, #1
 8028658:	f53f af44 	bmi.w	80284e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802865c:	45c6      	cmp	lr, r8
 802865e:	f6ff af41 	blt.w	80284e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8028662:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8028666:	fa0f f28e 	sxth.w	r2, lr
 802866a:	e9cd 1003 	strd	r1, r0, [sp, #12]
 802866e:	9200      	str	r2, [sp, #0]
 8028670:	b21b      	sxth	r3, r3
 8028672:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8028674:	9819      	ldr	r0, [sp, #100]	; 0x64
 8028676:	4639      	mov	r1, r7
 8028678:	f7ff fc87 	bl	8027f8a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 802867c:	e732      	b.n	80284e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802867e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8028680:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8028682:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 8028686:	1421      	asrs	r1, r4, #16
 8028688:	1433      	asrs	r3, r6, #16
 802868a:	fb07 1303 	mla	r3, r7, r3, r1
 802868e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8028690:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8028694:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8028698:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802869c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80286a0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80286a4:	2a00      	cmp	r2, #0
 80286a6:	f000 8107 	beq.w	80288b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 80286aa:	684d      	ldr	r5, [r1, #4]
 80286ac:	950d      	str	r5, [sp, #52]	; 0x34
 80286ae:	0e2d      	lsrs	r5, r5, #24
 80286b0:	9514      	str	r5, [sp, #80]	; 0x50
 80286b2:	b178      	cbz	r0, 80286d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80286b4:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 80286b8:	3f01      	subs	r7, #1
 80286ba:	00bf      	lsls	r7, r7, #2
 80286bc:	3704      	adds	r7, #4
 80286be:	eb01 0e07 	add.w	lr, r1, r7
 80286c2:	59c9      	ldr	r1, [r1, r7]
 80286c4:	9109      	str	r1, [sp, #36]	; 0x24
 80286c6:	0e09      	lsrs	r1, r1, #24
 80286c8:	9111      	str	r1, [sp, #68]	; 0x44
 80286ca:	f8de 1004 	ldr.w	r1, [lr, #4]
 80286ce:	910e      	str	r1, [sp, #56]	; 0x38
 80286d0:	0e09      	lsrs	r1, r1, #24
 80286d2:	9115      	str	r1, [sp, #84]	; 0x54
 80286d4:	b292      	uxth	r2, r2
 80286d6:	b280      	uxth	r0, r0
 80286d8:	fb02 f900 	mul.w	r9, r2, r0
 80286dc:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80286e0:	0112      	lsls	r2, r2, #4
 80286e2:	eba2 0e09 	sub.w	lr, r2, r9
 80286e6:	b280      	uxth	r0, r0
 80286e8:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80286ec:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80286ee:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80286f0:	fa1f fe8e 	uxth.w	lr, lr
 80286f4:	1a09      	subs	r1, r1, r0
 80286f6:	b289      	uxth	r1, r1
 80286f8:	fb0e f202 	mul.w	r2, lr, r2
 80286fc:	fb01 220c 	mla	r2, r1, ip, r2
 8028700:	fb00 2205 	mla	r2, r0, r5, r2
 8028704:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8028706:	fb09 2205 	mla	r2, r9, r5, r2
 802870a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802870e:	2a00      	cmp	r2, #0
 8028710:	f000 80c9 	beq.w	80288a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8028714:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8028718:	d019      	beq.n	802874e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 802871a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802871e:	fb0c fa0a 	mul.w	sl, ip, sl
 8028722:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8028726:	fb0c fc03 	mul.w	ip, ip, r3
 802872a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802872e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8028732:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8028736:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802873a:	4453      	add	r3, sl
 802873c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8028740:	0a1b      	lsrs	r3, r3, #8
 8028742:	0a3f      	lsrs	r7, r7, #8
 8028744:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8028748:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802874c:	433b      	orrs	r3, r7
 802874e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8028750:	2dff      	cmp	r5, #255	; 0xff
 8028752:	d020      	beq.n	8028796 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8028754:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8028756:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802875a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802875c:	436f      	muls	r7, r5
 802875e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8028760:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8028764:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8028766:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802876a:	fb05 fa0a 	mul.w	sl, r5, sl
 802876e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8028772:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8028776:	44bc      	add	ip, r7
 8028778:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802877c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8028780:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8028784:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8028788:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802878c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8028790:	ea4c 050a 	orr.w	r5, ip, sl
 8028794:	950d      	str	r5, [sp, #52]	; 0x34
 8028796:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8028798:	2dff      	cmp	r5, #255	; 0xff
 802879a:	d020      	beq.n	80287de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 802879c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802879e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80287a2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80287a4:	436f      	muls	r7, r5
 80287a6:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80287a8:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80287ac:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80287ae:	fb05 fa0c 	mul.w	sl, r5, ip
 80287b2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80287b6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80287ba:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80287be:	44bc      	add	ip, r7
 80287c0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80287c4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80287c8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80287cc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80287d0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80287d4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80287d8:	ea4c 050a 	orr.w	r5, ip, sl
 80287dc:	9509      	str	r5, [sp, #36]	; 0x24
 80287de:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80287e0:	2dff      	cmp	r5, #255	; 0xff
 80287e2:	d020      	beq.n	8028826 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 80287e4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80287e6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80287ea:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80287ec:	436f      	muls	r7, r5
 80287ee:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80287f0:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80287f4:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80287f6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80287fa:	fb05 fa0a 	mul.w	sl, r5, sl
 80287fe:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8028802:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8028806:	44bc      	add	ip, r7
 8028808:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802880c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8028810:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8028814:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8028818:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802881c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8028820:	ea4c 050a 	orr.w	r5, ip, sl
 8028824:	950e      	str	r5, [sp, #56]	; 0x38
 8028826:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8028828:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802882c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802882e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8028832:	fb0e f707 	mul.w	r7, lr, r7
 8028836:	fb01 770c 	mla	r7, r1, ip, r7
 802883a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802883e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8028840:	fb00 770c 	mla	r7, r0, ip, r7
 8028844:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8028848:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802884a:	fb09 770c 	mla	r7, r9, ip, r7
 802884e:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8028852:	fb0e fe0c 	mul.w	lr, lr, ip
 8028856:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802885a:	fb01 e303 	mla	r3, r1, r3, lr
 802885e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8028860:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8028864:	990e      	ldr	r1, [sp, #56]	; 0x38
 8028866:	fb00 330a 	mla	r3, r0, sl, r3
 802886a:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 802886e:	fb09 3c0c 	mla	ip, r9, ip, r3
 8028872:	0a3f      	lsrs	r7, r7, #8
 8028874:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8028878:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 802887c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8028880:	ea47 070c 	orr.w	r7, r7, ip
 8028884:	2aff      	cmp	r2, #255	; 0xff
 8028886:	ea4f 2317 	mov.w	r3, r7, lsr #8
 802888a:	d11e      	bne.n	80288ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 802888c:	097a      	lsrs	r2, r7, #5
 802888e:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8028892:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8028896:	f023 0307 	bic.w	r3, r3, #7
 802889a:	4313      	orrs	r3, r2
 802889c:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80288a0:	431f      	orrs	r7, r3
 80288a2:	f8a8 7000 	strh.w	r7, [r8]
 80288a6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80288a8:	441c      	add	r4, r3
 80288aa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80288ac:	f108 0802 	add.w	r8, r8, #2
 80288b0:	441e      	add	r6, r3
 80288b2:	f10b 3bff 	add.w	fp, fp, #4294967295
 80288b6:	e644      	b.n	8028542 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 80288b8:	2800      	cmp	r0, #0
 80288ba:	f43f af0b 	beq.w	80286d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80288be:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 80288c2:	9109      	str	r1, [sp, #36]	; 0x24
 80288c4:	0e09      	lsrs	r1, r1, #24
 80288c6:	9111      	str	r1, [sp, #68]	; 0x44
 80288c8:	e704      	b.n	80286d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80288ca:	f8b8 1000 	ldrh.w	r1, [r8]
 80288ce:	43d2      	mvns	r2, r2
 80288d0:	ea4f 2c21 	mov.w	ip, r1, asr #8
 80288d4:	fa5f fe82 	uxtb.w	lr, r2
 80288d8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80288dc:	fb0c fc0e 	mul.w	ip, ip, lr
 80288e0:	10c8      	asrs	r0, r1, #3
 80288e2:	00ca      	lsls	r2, r1, #3
 80288e4:	f10c 0101 	add.w	r1, ip, #1
 80288e8:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80288ec:	0c39      	lsrs	r1, r7, #16
 80288ee:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80288f2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80288f6:	4911      	ldr	r1, [pc, #68]	; (802893c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 80288f8:	fb00 f00e 	mul.w	r0, r0, lr
 80288fc:	fa5f fc8c 	uxtb.w	ip, ip
 8028900:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8028904:	b2d2      	uxtb	r2, r2
 8028906:	1c41      	adds	r1, r0, #1
 8028908:	fb02 f20e 	mul.w	r2, r2, lr
 802890c:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8028910:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8028914:	1c51      	adds	r1, r2, #1
 8028916:	00c0      	lsls	r0, r0, #3
 8028918:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802891c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8028920:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8028924:	ea4c 0c00 	orr.w	ip, ip, r0
 8028928:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 802892c:	ea47 0c0c 	orr.w	ip, r7, ip
 8028930:	f8a8 c000 	strh.w	ip, [r8]
 8028934:	e7b7      	b.n	80288a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8028936:	b01b      	add	sp, #108	; 0x6c
 8028938:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802893c:	fffff800 	.word	0xfffff800

08028940 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8028940:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8028944:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8028948:	2d00      	cmp	r5, #0
 802894a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 802894e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8028952:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8028956:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 802895a:	fb05 0e03 	mla	lr, r5, r3, r0
 802895e:	f2c0 808c 	blt.w	8028a7a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8028962:	45a9      	cmp	r9, r5
 8028964:	f340 8089 	ble.w	8028a7a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8028968:	2800      	cmp	r0, #0
 802896a:	f2c0 8084 	blt.w	8028a76 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 802896e:	4580      	cmp	r8, r0
 8028970:	f340 8081 	ble.w	8028a76 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8028974:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8028978:	f01e 0f01 	tst.w	lr, #1
 802897c:	5d16      	ldrb	r6, [r2, r4]
 802897e:	bf0c      	ite	eq
 8028980:	f006 060f 	andeq.w	r6, r6, #15
 8028984:	1136      	asrne	r6, r6, #4
 8028986:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802898a:	b2f6      	uxtb	r6, r6
 802898c:	1c44      	adds	r4, r0, #1
 802898e:	d477      	bmi.n	8028a80 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8028990:	45a0      	cmp	r8, r4
 8028992:	dd75      	ble.n	8028a80 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8028994:	2f00      	cmp	r7, #0
 8028996:	d075      	beq.n	8028a84 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 8028998:	f10e 0a01 	add.w	sl, lr, #1
 802899c:	ea4f 045a 	mov.w	r4, sl, lsr #1
 80289a0:	f01a 0f01 	tst.w	sl, #1
 80289a4:	5d14      	ldrb	r4, [r2, r4]
 80289a6:	bf0c      	ite	eq
 80289a8:	f004 040f 	andeq.w	r4, r4, #15
 80289ac:	1124      	asrne	r4, r4, #4
 80289ae:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80289b2:	b2e4      	uxtb	r4, r4
 80289b4:	3501      	adds	r5, #1
 80289b6:	d469      	bmi.n	8028a8c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80289b8:	45a9      	cmp	r9, r5
 80289ba:	dd67      	ble.n	8028a8c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80289bc:	f1bc 0f00 	cmp.w	ip, #0
 80289c0:	d067      	beq.n	8028a92 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 80289c2:	2800      	cmp	r0, #0
 80289c4:	db60      	blt.n	8028a88 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80289c6:	4580      	cmp	r8, r0
 80289c8:	dd5e      	ble.n	8028a88 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80289ca:	eb03 090e 	add.w	r9, r3, lr
 80289ce:	ea4f 0559 	mov.w	r5, r9, lsr #1
 80289d2:	f019 0f01 	tst.w	r9, #1
 80289d6:	5d55      	ldrb	r5, [r2, r5]
 80289d8:	bf0c      	ite	eq
 80289da:	f005 050f 	andeq.w	r5, r5, #15
 80289de:	112d      	asrne	r5, r5, #4
 80289e0:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 80289e4:	b2ed      	uxtb	r5, r5
 80289e6:	3001      	adds	r0, #1
 80289e8:	d456      	bmi.n	8028a98 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 80289ea:	4580      	cmp	r8, r0
 80289ec:	dd54      	ble.n	8028a98 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 80289ee:	2f00      	cmp	r7, #0
 80289f0:	d054      	beq.n	8028a9c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 80289f2:	3301      	adds	r3, #1
 80289f4:	449e      	add	lr, r3
 80289f6:	ea4f 035e 	mov.w	r3, lr, lsr #1
 80289fa:	f01e 0f01 	tst.w	lr, #1
 80289fe:	5cd0      	ldrb	r0, [r2, r3]
 8028a00:	bf0c      	ite	eq
 8028a02:	f000 000f 	andeq.w	r0, r0, #15
 8028a06:	1100      	asrne	r0, r0, #4
 8028a08:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8028a0c:	b2c3      	uxtb	r3, r0
 8028a0e:	b2ba      	uxth	r2, r7
 8028a10:	fa1f fc8c 	uxth.w	ip, ip
 8028a14:	fb02 f00c 	mul.w	r0, r2, ip
 8028a18:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8028a1c:	0112      	lsls	r2, r2, #4
 8028a1e:	fa1f fc8c 	uxth.w	ip, ip
 8028a22:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8028a26:	1a12      	subs	r2, r2, r0
 8028a28:	eba7 070c 	sub.w	r7, r7, ip
 8028a2c:	b292      	uxth	r2, r2
 8028a2e:	b2bf      	uxth	r7, r7
 8028a30:	4362      	muls	r2, r4
 8028a32:	fb06 2207 	mla	r2, r6, r7, r2
 8028a36:	fb0c 2505 	mla	r5, ip, r5, r2
 8028a3a:	fb00 5303 	mla	r3, r0, r3, r5
 8028a3e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028a42:	b1b3      	cbz	r3, 8028a72 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8028a44:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 8028a48:	435a      	muls	r2, r3
 8028a4a:	1c53      	adds	r3, r2, #1
 8028a4c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8028a50:	4a2d      	ldr	r2, [pc, #180]	; (8028b08 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8028a52:	121b      	asrs	r3, r3, #8
 8028a54:	6812      	ldr	r2, [r2, #0]
 8028a56:	2bff      	cmp	r3, #255	; 0xff
 8028a58:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8028a5c:	d120      	bne.n	8028aa0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 8028a5e:	4b2b      	ldr	r3, [pc, #172]	; (8028b0c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8028a60:	0950      	lsrs	r0, r2, #5
 8028a62:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8028a66:	4033      	ands	r3, r6
 8028a68:	4318      	orrs	r0, r3
 8028a6a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8028a6e:	4302      	orrs	r2, r0
 8028a70:	800a      	strh	r2, [r1, #0]
 8028a72:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8028a76:	2600      	movs	r6, #0
 8028a78:	e788      	b.n	802898c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 8028a7a:	2400      	movs	r4, #0
 8028a7c:	4626      	mov	r6, r4
 8028a7e:	e799      	b.n	80289b4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8028a80:	2400      	movs	r4, #0
 8028a82:	e797      	b.n	80289b4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8028a84:	463c      	mov	r4, r7
 8028a86:	e795      	b.n	80289b4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8028a88:	2500      	movs	r5, #0
 8028a8a:	e7ac      	b.n	80289e6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8028a8c:	2300      	movs	r3, #0
 8028a8e:	461d      	mov	r5, r3
 8028a90:	e7bd      	b.n	8028a0e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8028a92:	4663      	mov	r3, ip
 8028a94:	4665      	mov	r5, ip
 8028a96:	e7ba      	b.n	8028a0e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8028a98:	2300      	movs	r3, #0
 8028a9a:	e7b8      	b.n	8028a0e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8028a9c:	463b      	mov	r3, r7
 8028a9e:	e7b6      	b.n	8028a0e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8028aa0:	880d      	ldrh	r5, [r1, #0]
 8028aa2:	b29f      	uxth	r7, r3
 8028aa4:	122c      	asrs	r4, r5, #8
 8028aa6:	f3c2 4007 	ubfx	r0, r2, #16, #8
 8028aaa:	43db      	mvns	r3, r3
 8028aac:	b2db      	uxtb	r3, r3
 8028aae:	fb10 f007 	smulbb	r0, r0, r7
 8028ab2:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8028ab6:	fb04 0403 	mla	r4, r4, r3, r0
 8028aba:	b2f6      	uxtb	r6, r6
 8028abc:	10e8      	asrs	r0, r5, #3
 8028abe:	b2d2      	uxtb	r2, r2
 8028ac0:	00ed      	lsls	r5, r5, #3
 8028ac2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8028ac6:	fb12 f207 	smulbb	r2, r2, r7
 8028aca:	fb16 f607 	smulbb	r6, r6, r7
 8028ace:	b2ed      	uxtb	r5, r5
 8028ad0:	b2a4      	uxth	r4, r4
 8028ad2:	fb00 6603 	mla	r6, r0, r3, r6
 8028ad6:	fb05 2303 	mla	r3, r5, r3, r2
 8028ada:	b29a      	uxth	r2, r3
 8028adc:	1c63      	adds	r3, r4, #1
 8028ade:	b2b0      	uxth	r0, r6
 8028ae0:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8028ae4:	1c53      	adds	r3, r2, #1
 8028ae6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8028aea:	1c42      	adds	r2, r0, #1
 8028aec:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8028af0:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8028af4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8028af8:	0940      	lsrs	r0, r0, #5
 8028afa:	4323      	orrs	r3, r4
 8028afc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8028b00:	4303      	orrs	r3, r0
 8028b02:	800b      	strh	r3, [r1, #0]
 8028b04:	e7b5      	b.n	8028a72 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8028b06:	bf00      	nop
 8028b08:	2000225c 	.word	0x2000225c
 8028b0c:	00fff800 	.word	0x00fff800

08028b10 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8028b10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028b14:	b097      	sub	sp, #92	; 0x5c
 8028b16:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 8028b1a:	9214      	str	r2, [sp, #80]	; 0x50
 8028b1c:	9309      	str	r3, [sp, #36]	; 0x24
 8028b1e:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8028b20:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8028b24:	910d      	str	r1, [sp, #52]	; 0x34
 8028b26:	930f      	str	r3, [sp, #60]	; 0x3c
 8028b28:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8028b2c:	9015      	str	r0, [sp, #84]	; 0x54
 8028b2e:	6850      	ldr	r0, [r2, #4]
 8028b30:	6812      	ldr	r2, [r2, #0]
 8028b32:	fb00 1303 	mla	r3, r0, r3, r1
 8028b36:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8028b3a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8028b3c:	689b      	ldr	r3, [r3, #8]
 8028b3e:	3301      	adds	r3, #1
 8028b40:	f023 0301 	bic.w	r3, r3, #1
 8028b44:	930a      	str	r3, [sp, #40]	; 0x28
 8028b46:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8028b48:	681f      	ldr	r7, [r3, #0]
 8028b4a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8028b4c:	2b00      	cmp	r3, #0
 8028b4e:	dc03      	bgt.n	8028b58 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8028b50:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8028b52:	2b00      	cmp	r3, #0
 8028b54:	f340 8287 	ble.w	8029066 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8028b58:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8028b5a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8028b5e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8028b62:	1e48      	subs	r0, r1, #1
 8028b64:	f102 3cff 	add.w	ip, r2, #4294967295
 8028b68:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028b6a:	2b00      	cmp	r3, #0
 8028b6c:	f340 80c4 	ble.w	8028cf8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8028b70:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8028b74:	ea4f 4326 	mov.w	r3, r6, asr #16
 8028b78:	d406      	bmi.n	8028b88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8028b7a:	4586      	cmp	lr, r0
 8028b7c:	da04      	bge.n	8028b88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8028b7e:	2b00      	cmp	r3, #0
 8028b80:	db02      	blt.n	8028b88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8028b82:	4563      	cmp	r3, ip
 8028b84:	f2c0 80b9 	blt.w	8028cfa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8028b88:	f11e 0e01 	adds.w	lr, lr, #1
 8028b8c:	f100 80aa 	bmi.w	8028ce4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8028b90:	4571      	cmp	r1, lr
 8028b92:	f2c0 80a7 	blt.w	8028ce4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8028b96:	3301      	adds	r3, #1
 8028b98:	f100 80a4 	bmi.w	8028ce4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8028b9c:	429a      	cmp	r2, r3
 8028b9e:	f2c0 80a1 	blt.w	8028ce4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8028ba2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028ba4:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 8028ba8:	930e      	str	r3, [sp, #56]	; 0x38
 8028baa:	46c8      	mov	r8, r9
 8028bac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8028bae:	2b00      	cmp	r3, #0
 8028bb0:	f340 80c3 	ble.w	8028d3a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8028bb4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8028bb6:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8028bba:	1423      	asrs	r3, r4, #16
 8028bbc:	ea4f 4026 	mov.w	r0, r6, asr #16
 8028bc0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8028bc4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8028bc8:	f100 814d 	bmi.w	8028e66 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8028bcc:	f10c 3bff 	add.w	fp, ip, #4294967295
 8028bd0:	455b      	cmp	r3, fp
 8028bd2:	f280 8148 	bge.w	8028e66 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8028bd6:	2800      	cmp	r0, #0
 8028bd8:	f2c0 8145 	blt.w	8028e66 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8028bdc:	f10e 3bff 	add.w	fp, lr, #4294967295
 8028be0:	4558      	cmp	r0, fp
 8028be2:	f280 8140 	bge.w	8028e66 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8028be6:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8028be8:	fb00 3305 	mla	r3, r0, r5, r3
 8028bec:	0858      	lsrs	r0, r3, #1
 8028bee:	07dd      	lsls	r5, r3, #31
 8028bf0:	f817 c000 	ldrb.w	ip, [r7, r0]
 8028bf4:	bf54      	ite	pl
 8028bf6:	f00c 0c0f 	andpl.w	ip, ip, #15
 8028bfa:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8028bfe:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8028c02:	fa5f fc8c 	uxtb.w	ip, ip
 8028c06:	2a00      	cmp	r2, #0
 8028c08:	f000 80db 	beq.w	8028dc2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 8028c0c:	1c58      	adds	r0, r3, #1
 8028c0e:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8028c12:	07c0      	lsls	r0, r0, #31
 8028c14:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8028c18:	bf54      	ite	pl
 8028c1a:	f00e 0e0f 	andpl.w	lr, lr, #15
 8028c1e:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8028c22:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8028c26:	fa5f f08e 	uxtb.w	r0, lr
 8028c2a:	9010      	str	r0, [sp, #64]	; 0x40
 8028c2c:	b1c9      	cbz	r1, 8028c62 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8028c2e:	4453      	add	r3, sl
 8028c30:	0858      	lsrs	r0, r3, #1
 8028c32:	07dd      	lsls	r5, r3, #31
 8028c34:	5c38      	ldrb	r0, [r7, r0]
 8028c36:	bf54      	ite	pl
 8028c38:	f000 000f 	andpl.w	r0, r0, #15
 8028c3c:	1100      	asrmi	r0, r0, #4
 8028c3e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8028c42:	3301      	adds	r3, #1
 8028c44:	b2c0      	uxtb	r0, r0
 8028c46:	900b      	str	r0, [sp, #44]	; 0x2c
 8028c48:	0858      	lsrs	r0, r3, #1
 8028c4a:	07dd      	lsls	r5, r3, #31
 8028c4c:	f817 e000 	ldrb.w	lr, [r7, r0]
 8028c50:	bf54      	ite	pl
 8028c52:	f00e 030f 	andpl.w	r3, lr, #15
 8028c56:	ea4f 132e 	movmi.w	r3, lr, asr #4
 8028c5a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8028c5e:	b2db      	uxtb	r3, r3
 8028c60:	9311      	str	r3, [sp, #68]	; 0x44
 8028c62:	b292      	uxth	r2, r2
 8028c64:	b289      	uxth	r1, r1
 8028c66:	fb02 f301 	mul.w	r3, r2, r1
 8028c6a:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8028c6e:	0112      	lsls	r2, r2, #4
 8028c70:	b289      	uxth	r1, r1
 8028c72:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8028c76:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8028c78:	1ad2      	subs	r2, r2, r3
 8028c7a:	1a40      	subs	r0, r0, r1
 8028c7c:	b292      	uxth	r2, r2
 8028c7e:	436a      	muls	r2, r5
 8028c80:	b280      	uxth	r0, r0
 8028c82:	fb0c 2c00 	mla	ip, ip, r0, r2
 8028c86:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8028c88:	fb01 c102 	mla	r1, r1, r2, ip
 8028c8c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8028c8e:	fb03 1302 	mla	r3, r3, r2, r1
 8028c92:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028c96:	b1db      	cbz	r3, 8028cd0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8028c98:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8028c9a:	4353      	muls	r3, r2
 8028c9c:	1c5a      	adds	r2, r3, #1
 8028c9e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8028ca2:	4ac6      	ldr	r2, [pc, #792]	; (8028fbc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8028ca4:	121b      	asrs	r3, r3, #8
 8028ca6:	6812      	ldr	r2, [r2, #0]
 8028ca8:	2bff      	cmp	r3, #255	; 0xff
 8028caa:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8028cae:	f040 8099 	bne.w	8028de4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8028cb2:	0953      	lsrs	r3, r2, #5
 8028cb4:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8028cb8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8028cbc:	f02c 0c07 	bic.w	ip, ip, #7
 8028cc0:	ea43 0c0c 	orr.w	ip, r3, ip
 8028cc4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8028cc8:	ea4c 0202 	orr.w	r2, ip, r2
 8028ccc:	f8a8 2000 	strh.w	r2, [r8]
 8028cd0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8028cd2:	441c      	add	r4, r3
 8028cd4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028cd6:	441e      	add	r6, r3
 8028cd8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8028cda:	3b01      	subs	r3, #1
 8028cdc:	f108 0802 	add.w	r8, r8, #2
 8028ce0:	930e      	str	r3, [sp, #56]	; 0x38
 8028ce2:	e763      	b.n	8028bac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8028ce4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8028ce6:	441c      	add	r4, r3
 8028ce8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028cea:	441e      	add	r6, r3
 8028cec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028cee:	3b01      	subs	r3, #1
 8028cf0:	9309      	str	r3, [sp, #36]	; 0x24
 8028cf2:	f109 0902 	add.w	r9, r9, #2
 8028cf6:	e737      	b.n	8028b68 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8028cf8:	d024      	beq.n	8028d44 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8028cfa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028cfc:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8028cfe:	3b01      	subs	r3, #1
 8028d00:	fb00 4003 	mla	r0, r0, r3, r4
 8028d04:	1400      	asrs	r0, r0, #16
 8028d06:	f53f af4c 	bmi.w	8028ba2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8028d0a:	3901      	subs	r1, #1
 8028d0c:	4288      	cmp	r0, r1
 8028d0e:	f6bf af48 	bge.w	8028ba2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8028d12:	9924      	ldr	r1, [sp, #144]	; 0x90
 8028d14:	fb01 6303 	mla	r3, r1, r3, r6
 8028d18:	141b      	asrs	r3, r3, #16
 8028d1a:	f53f af42 	bmi.w	8028ba2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8028d1e:	3a01      	subs	r2, #1
 8028d20:	4293      	cmp	r3, r2
 8028d22:	f6bf af3e 	bge.w	8028ba2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8028d26:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8028d2a:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8028d2e:	930e      	str	r3, [sp, #56]	; 0x38
 8028d30:	46c8      	mov	r8, r9
 8028d32:	f1bb 0f00 	cmp.w	fp, #0
 8028d36:	f300 80b7 	bgt.w	8028ea8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8028d3a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028d3c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8028d40:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8028d44:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8028d46:	2b00      	cmp	r3, #0
 8028d48:	f340 818d 	ble.w	8029066 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8028d4c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8028d50:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8028d54:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8028d58:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8028d5a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8028d5e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8028d62:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8028d66:	eef0 6a62 	vmov.f32	s13, s5
 8028d6a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8028d6e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8028d72:	ee77 2a62 	vsub.f32	s5, s14, s5
 8028d76:	ee16 4a90 	vmov	r4, s13
 8028d7a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8028d7e:	eef0 6a43 	vmov.f32	s13, s6
 8028d82:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8028d86:	ee12 2a90 	vmov	r2, s5
 8028d8a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8028d8e:	fb92 f3f3 	sdiv	r3, r2, r3
 8028d92:	ee13 2a10 	vmov	r2, s6
 8028d96:	9323      	str	r3, [sp, #140]	; 0x8c
 8028d98:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8028d9a:	fb92 f3f3 	sdiv	r3, r2, r3
 8028d9e:	9324      	str	r3, [sp, #144]	; 0x90
 8028da0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8028da2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8028da4:	3b01      	subs	r3, #1
 8028da6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8028daa:	930d      	str	r3, [sp, #52]	; 0x34
 8028dac:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8028dae:	bf08      	it	eq
 8028db0:	4613      	moveq	r3, r2
 8028db2:	ee16 6a90 	vmov	r6, s13
 8028db6:	9309      	str	r3, [sp, #36]	; 0x24
 8028db8:	eeb0 3a67 	vmov.f32	s6, s15
 8028dbc:	eef0 2a47 	vmov.f32	s5, s14
 8028dc0:	e6c3      	b.n	8028b4a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8028dc2:	2900      	cmp	r1, #0
 8028dc4:	f43f af4d 	beq.w	8028c62 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8028dc8:	eb0a 0003 	add.w	r0, sl, r3
 8028dcc:	0843      	lsrs	r3, r0, #1
 8028dce:	07c0      	lsls	r0, r0, #31
 8028dd0:	5cfb      	ldrb	r3, [r7, r3]
 8028dd2:	bf54      	ite	pl
 8028dd4:	f003 030f 	andpl.w	r3, r3, #15
 8028dd8:	111b      	asrmi	r3, r3, #4
 8028dda:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8028dde:	b2db      	uxtb	r3, r3
 8028de0:	930b      	str	r3, [sp, #44]	; 0x2c
 8028de2:	e73e      	b.n	8028c62 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8028de4:	f8b8 e000 	ldrh.w	lr, [r8]
 8028de8:	fa1f fb83 	uxth.w	fp, r3
 8028dec:	ea4f 202e 	mov.w	r0, lr, asr #8
 8028df0:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8028df4:	43db      	mvns	r3, r3
 8028df6:	b2db      	uxtb	r3, r3
 8028df8:	fb11 f10b 	smulbb	r1, r1, fp
 8028dfc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8028e00:	fb00 1003 	mla	r0, r0, r3, r1
 8028e04:	fa5f fc8c 	uxtb.w	ip, ip
 8028e08:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8028e0c:	b2d2      	uxtb	r2, r2
 8028e0e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8028e12:	b280      	uxth	r0, r0
 8028e14:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8028e18:	fb1c fc0b 	smulbb	ip, ip, fp
 8028e1c:	fa5f fe8e 	uxtb.w	lr, lr
 8028e20:	fb12 fb0b 	smulbb	fp, r2, fp
 8028e24:	fb01 cc03 	mla	ip, r1, r3, ip
 8028e28:	fb0e bb03 	mla	fp, lr, r3, fp
 8028e2c:	1c43      	adds	r3, r0, #1
 8028e2e:	fa1f fc8c 	uxth.w	ip, ip
 8028e32:	fa1f fb8b 	uxth.w	fp, fp
 8028e36:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8028e3a:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 8028e3e:	f10c 0101 	add.w	r1, ip, #1
 8028e42:	f10b 0001 	add.w	r0, fp, #1
 8028e46:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8028e4a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8028e4e:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8028e52:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8028e56:	4318      	orrs	r0, r3
 8028e58:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8028e5c:	ea40 000c 	orr.w	r0, r0, ip
 8028e60:	f8a8 0000 	strh.w	r0, [r8]
 8028e64:	e734      	b.n	8028cd0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8028e66:	f113 0b01 	adds.w	fp, r3, #1
 8028e6a:	f53f af31 	bmi.w	8028cd0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8028e6e:	45dc      	cmp	ip, fp
 8028e70:	f6ff af2e 	blt.w	8028cd0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8028e74:	f110 0b01 	adds.w	fp, r0, #1
 8028e78:	f53f af2a 	bmi.w	8028cd0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8028e7c:	45de      	cmp	lr, fp
 8028e7e:	f6ff af27 	blt.w	8028cd0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8028e82:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8028e84:	9302      	str	r3, [sp, #8]
 8028e86:	fa0f f38e 	sxth.w	r3, lr
 8028e8a:	9301      	str	r3, [sp, #4]
 8028e8c:	fa0f f38c 	sxth.w	r3, ip
 8028e90:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8028e94:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8028e98:	9300      	str	r3, [sp, #0]
 8028e9a:	463a      	mov	r2, r7
 8028e9c:	4653      	mov	r3, sl
 8028e9e:	4641      	mov	r1, r8
 8028ea0:	9815      	ldr	r0, [sp, #84]	; 0x54
 8028ea2:	f7ff fd4d 	bl	8028940 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8028ea6:	e713      	b.n	8028cd0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8028ea8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8028eaa:	1422      	asrs	r2, r4, #16
 8028eac:	1433      	asrs	r3, r6, #16
 8028eae:	fb05 2303 	mla	r3, r5, r3, r2
 8028eb2:	085a      	lsrs	r2, r3, #1
 8028eb4:	07dd      	lsls	r5, r3, #31
 8028eb6:	5cba      	ldrb	r2, [r7, r2]
 8028eb8:	bf54      	ite	pl
 8028eba:	f002 020f 	andpl.w	r2, r2, #15
 8028ebe:	1112      	asrmi	r2, r2, #4
 8028ec0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8028ec4:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8028ec8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8028ecc:	b2d2      	uxtb	r2, r2
 8028ece:	2900      	cmp	r1, #0
 8028ed0:	d076      	beq.n	8028fc0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8028ed2:	f103 0e01 	add.w	lr, r3, #1
 8028ed6:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8028eda:	f01e 0f01 	tst.w	lr, #1
 8028ede:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8028ee2:	bf0c      	ite	eq
 8028ee4:	f00c 0c0f 	andeq.w	ip, ip, #15
 8028ee8:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8028eec:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8028ef0:	fa5f f58c 	uxtb.w	r5, ip
 8028ef4:	9512      	str	r5, [sp, #72]	; 0x48
 8028ef6:	b300      	cbz	r0, 8028f3a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8028ef8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8028efa:	442b      	add	r3, r5
 8028efc:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8028f00:	07dd      	lsls	r5, r3, #31
 8028f02:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8028f06:	bf54      	ite	pl
 8028f08:	f00c 0c0f 	andpl.w	ip, ip, #15
 8028f0c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8028f10:	3301      	adds	r3, #1
 8028f12:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8028f16:	fa5f f58c 	uxtb.w	r5, ip
 8028f1a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8028f1e:	950c      	str	r5, [sp, #48]	; 0x30
 8028f20:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8028f24:	07dd      	lsls	r5, r3, #31
 8028f26:	bf54      	ite	pl
 8028f28:	f00c 0c0f 	andpl.w	ip, ip, #15
 8028f2c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8028f30:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8028f34:	fa5f f38c 	uxtb.w	r3, ip
 8028f38:	9313      	str	r3, [sp, #76]	; 0x4c
 8028f3a:	b289      	uxth	r1, r1
 8028f3c:	b280      	uxth	r0, r0
 8028f3e:	fb01 f300 	mul.w	r3, r1, r0
 8028f42:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8028f46:	0109      	lsls	r1, r1, #4
 8028f48:	b280      	uxth	r0, r0
 8028f4a:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8028f4e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8028f50:	1ac9      	subs	r1, r1, r3
 8028f52:	ebac 0c00 	sub.w	ip, ip, r0
 8028f56:	b289      	uxth	r1, r1
 8028f58:	4369      	muls	r1, r5
 8028f5a:	fa1f fc8c 	uxth.w	ip, ip
 8028f5e:	fb02 120c 	mla	r2, r2, ip, r1
 8028f62:	990c      	ldr	r1, [sp, #48]	; 0x30
 8028f64:	fb00 2001 	mla	r0, r0, r1, r2
 8028f68:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8028f6a:	fb03 0302 	mla	r3, r3, r2, r0
 8028f6e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028f72:	b1d3      	cbz	r3, 8028faa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8028f74:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8028f76:	4353      	muls	r3, r2
 8028f78:	1c5a      	adds	r2, r3, #1
 8028f7a:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8028f7e:	4a0f      	ldr	r2, [pc, #60]	; (8028fbc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8028f80:	121b      	asrs	r3, r3, #8
 8028f82:	6812      	ldr	r2, [r2, #0]
 8028f84:	2bff      	cmp	r3, #255	; 0xff
 8028f86:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8028f8a:	d12d      	bne.n	8028fe8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8028f8c:	0953      	lsrs	r3, r2, #5
 8028f8e:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8028f92:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8028f96:	f02c 0c07 	bic.w	ip, ip, #7
 8028f9a:	ea43 0c0c 	orr.w	ip, r3, ip
 8028f9e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8028fa2:	ea4c 0202 	orr.w	r2, ip, r2
 8028fa6:	f8a8 2000 	strh.w	r2, [r8]
 8028faa:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8028fac:	441c      	add	r4, r3
 8028fae:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028fb0:	f108 0802 	add.w	r8, r8, #2
 8028fb4:	441e      	add	r6, r3
 8028fb6:	f10b 3bff 	add.w	fp, fp, #4294967295
 8028fba:	e6ba      	b.n	8028d32 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8028fbc:	2000225c 	.word	0x2000225c
 8028fc0:	2800      	cmp	r0, #0
 8028fc2:	d0ba      	beq.n	8028f3a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8028fc4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8028fc6:	442b      	add	r3, r5
 8028fc8:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8028fcc:	07db      	lsls	r3, r3, #31
 8028fce:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8028fd2:	bf54      	ite	pl
 8028fd4:	f00c 0c0f 	andpl.w	ip, ip, #15
 8028fd8:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8028fdc:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8028fe0:	fa5f f38c 	uxtb.w	r3, ip
 8028fe4:	930c      	str	r3, [sp, #48]	; 0x30
 8028fe6:	e7a8      	b.n	8028f3a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8028fe8:	f8b8 e000 	ldrh.w	lr, [r8]
 8028fec:	fa1f fa83 	uxth.w	sl, r3
 8028ff0:	ea4f 202e 	mov.w	r0, lr, asr #8
 8028ff4:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8028ff8:	43db      	mvns	r3, r3
 8028ffa:	b2db      	uxtb	r3, r3
 8028ffc:	fb11 f10a 	smulbb	r1, r1, sl
 8029000:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8029004:	fb00 1003 	mla	r0, r0, r3, r1
 8029008:	b2d2      	uxtb	r2, r2
 802900a:	ea4f 01ee 	mov.w	r1, lr, asr #3
 802900e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8029012:	fa5f fe8e 	uxtb.w	lr, lr
 8029016:	fb12 f20a 	smulbb	r2, r2, sl
 802901a:	fb0e 2203 	mla	r2, lr, r3, r2
 802901e:	fa5f fc8c 	uxtb.w	ip, ip
 8029022:	b280      	uxth	r0, r0
 8029024:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8029028:	b292      	uxth	r2, r2
 802902a:	fb1c fc0a 	smulbb	ip, ip, sl
 802902e:	fb01 cc03 	mla	ip, r1, r3, ip
 8029032:	1c43      	adds	r3, r0, #1
 8029034:	1c51      	adds	r1, r2, #1
 8029036:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802903a:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 802903e:	fa1f fc8c 	uxth.w	ip, ip
 8029042:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8029046:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 802904a:	4308      	orrs	r0, r1
 802904c:	f10c 0101 	add.w	r1, ip, #1
 8029050:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8029054:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8029058:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 802905c:	ea40 000c 	orr.w	r0, r0, ip
 8029060:	f8a8 0000 	strh.w	r0, [r8]
 8029064:	e7a1      	b.n	8028faa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8029066:	b017      	add	sp, #92	; 0x5c
 8029068:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802906c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 802906c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8029070:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8029074:	2d00      	cmp	r5, #0
 8029076:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 802907a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 802907e:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8029082:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8029086:	fb05 0e03 	mla	lr, r5, r3, r0
 802908a:	f2c0 80b0 	blt.w	80291ee <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 802908e:	45a9      	cmp	r9, r5
 8029090:	f340 80ad 	ble.w	80291ee <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8029094:	2800      	cmp	r0, #0
 8029096:	f2c0 80a8 	blt.w	80291ea <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 802909a:	4580      	cmp	r8, r0
 802909c:	f340 80a5 	ble.w	80291ea <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 80290a0:	ea4f 045e 	mov.w	r4, lr, lsr #1
 80290a4:	f01e 0f01 	tst.w	lr, #1
 80290a8:	5d16      	ldrb	r6, [r2, r4]
 80290aa:	bf0c      	ite	eq
 80290ac:	f006 060f 	andeq.w	r6, r6, #15
 80290b0:	1136      	asrne	r6, r6, #4
 80290b2:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80290b6:	b2f6      	uxtb	r6, r6
 80290b8:	1c44      	adds	r4, r0, #1
 80290ba:	f100 809b 	bmi.w	80291f4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 80290be:	45a0      	cmp	r8, r4
 80290c0:	f340 8098 	ble.w	80291f4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 80290c4:	2f00      	cmp	r7, #0
 80290c6:	f000 8097 	beq.w	80291f8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 80290ca:	f10e 0a01 	add.w	sl, lr, #1
 80290ce:	ea4f 045a 	mov.w	r4, sl, lsr #1
 80290d2:	f01a 0f01 	tst.w	sl, #1
 80290d6:	5d14      	ldrb	r4, [r2, r4]
 80290d8:	bf0c      	ite	eq
 80290da:	f004 040f 	andeq.w	r4, r4, #15
 80290de:	1124      	asrne	r4, r4, #4
 80290e0:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80290e4:	b2e4      	uxtb	r4, r4
 80290e6:	3501      	adds	r5, #1
 80290e8:	f100 808a 	bmi.w	8029200 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 80290ec:	45a9      	cmp	r9, r5
 80290ee:	f340 8087 	ble.w	8029200 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 80290f2:	f1bc 0f00 	cmp.w	ip, #0
 80290f6:	f000 8086 	beq.w	8029206 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 80290fa:	2800      	cmp	r0, #0
 80290fc:	db7e      	blt.n	80291fc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 80290fe:	4580      	cmp	r8, r0
 8029100:	dd7c      	ble.n	80291fc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8029102:	eb03 090e 	add.w	r9, r3, lr
 8029106:	ea4f 0559 	mov.w	r5, r9, lsr #1
 802910a:	f019 0f01 	tst.w	r9, #1
 802910e:	5d55      	ldrb	r5, [r2, r5]
 8029110:	bf0c      	ite	eq
 8029112:	f005 050f 	andeq.w	r5, r5, #15
 8029116:	112d      	asrne	r5, r5, #4
 8029118:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 802911c:	b2ed      	uxtb	r5, r5
 802911e:	3001      	adds	r0, #1
 8029120:	d474      	bmi.n	802920c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8029122:	4580      	cmp	r8, r0
 8029124:	dd72      	ble.n	802920c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8029126:	2f00      	cmp	r7, #0
 8029128:	d072      	beq.n	8029210 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 802912a:	3301      	adds	r3, #1
 802912c:	449e      	add	lr, r3
 802912e:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8029132:	f01e 0f01 	tst.w	lr, #1
 8029136:	5cd0      	ldrb	r0, [r2, r3]
 8029138:	bf0c      	ite	eq
 802913a:	f000 000f 	andeq.w	r0, r0, #15
 802913e:	1100      	asrne	r0, r0, #4
 8029140:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8029144:	b2c3      	uxtb	r3, r0
 8029146:	b2ba      	uxth	r2, r7
 8029148:	fa1f fc8c 	uxth.w	ip, ip
 802914c:	fb02 f00c 	mul.w	r0, r2, ip
 8029150:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8029154:	0112      	lsls	r2, r2, #4
 8029156:	fa1f fc8c 	uxth.w	ip, ip
 802915a:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 802915e:	1a12      	subs	r2, r2, r0
 8029160:	eba7 070c 	sub.w	r7, r7, ip
 8029164:	b292      	uxth	r2, r2
 8029166:	b2bf      	uxth	r7, r7
 8029168:	4362      	muls	r2, r4
 802916a:	fb06 2207 	mla	r2, r6, r7, r2
 802916e:	fb0c 2505 	mla	r5, ip, r5, r2
 8029172:	fb00 5303 	mla	r3, r0, r3, r5
 8029176:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802917a:	b3a3      	cbz	r3, 80291e6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 802917c:	4a25      	ldr	r2, [pc, #148]	; (8029214 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 802917e:	880e      	ldrh	r6, [r1, #0]
 8029180:	6815      	ldr	r5, [r2, #0]
 8029182:	1234      	asrs	r4, r6, #8
 8029184:	b29a      	uxth	r2, r3
 8029186:	f3c5 4007 	ubfx	r0, r5, #16, #8
 802918a:	43db      	mvns	r3, r3
 802918c:	b2db      	uxtb	r3, r3
 802918e:	fb10 f002 	smulbb	r0, r0, r2
 8029192:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8029196:	fb04 0403 	mla	r4, r4, r3, r0
 802919a:	f3c5 2707 	ubfx	r7, r5, #8, #8
 802919e:	10f0      	asrs	r0, r6, #3
 80291a0:	b2ed      	uxtb	r5, r5
 80291a2:	00f6      	lsls	r6, r6, #3
 80291a4:	fb17 f702 	smulbb	r7, r7, r2
 80291a8:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80291ac:	fb15 f202 	smulbb	r2, r5, r2
 80291b0:	b2f6      	uxtb	r6, r6
 80291b2:	b2a4      	uxth	r4, r4
 80291b4:	fb00 7003 	mla	r0, r0, r3, r7
 80291b8:	fb06 2303 	mla	r3, r6, r3, r2
 80291bc:	b29a      	uxth	r2, r3
 80291be:	1c63      	adds	r3, r4, #1
 80291c0:	b280      	uxth	r0, r0
 80291c2:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80291c6:	1c53      	adds	r3, r2, #1
 80291c8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80291cc:	1c42      	adds	r2, r0, #1
 80291ce:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80291d2:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80291d6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80291da:	0940      	lsrs	r0, r0, #5
 80291dc:	4323      	orrs	r3, r4
 80291de:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80291e2:	4303      	orrs	r3, r0
 80291e4:	800b      	strh	r3, [r1, #0]
 80291e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80291ea:	2600      	movs	r6, #0
 80291ec:	e764      	b.n	80290b8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 80291ee:	2400      	movs	r4, #0
 80291f0:	4626      	mov	r6, r4
 80291f2:	e778      	b.n	80290e6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80291f4:	2400      	movs	r4, #0
 80291f6:	e776      	b.n	80290e6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80291f8:	463c      	mov	r4, r7
 80291fa:	e774      	b.n	80290e6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80291fc:	2500      	movs	r5, #0
 80291fe:	e78e      	b.n	802911e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8029200:	2300      	movs	r3, #0
 8029202:	461d      	mov	r5, r3
 8029204:	e79f      	b.n	8029146 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8029206:	4663      	mov	r3, ip
 8029208:	4665      	mov	r5, ip
 802920a:	e79c      	b.n	8029146 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802920c:	2300      	movs	r3, #0
 802920e:	e79a      	b.n	8029146 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8029210:	463b      	mov	r3, r7
 8029212:	e798      	b.n	8029146 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8029214:	2000225c 	.word	0x2000225c

08029218 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8029218:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802921c:	b093      	sub	sp, #76	; 0x4c
 802921e:	461d      	mov	r5, r3
 8029220:	920c      	str	r2, [sp, #48]	; 0x30
 8029222:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8029224:	9107      	str	r1, [sp, #28]
 8029226:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 802922a:	9011      	str	r0, [sp, #68]	; 0x44
 802922c:	6850      	ldr	r0, [r2, #4]
 802922e:	6812      	ldr	r2, [r2, #0]
 8029230:	fb00 1303 	mla	r3, r0, r3, r1
 8029234:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8029238:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802923a:	689b      	ldr	r3, [r3, #8]
 802923c:	3301      	adds	r3, #1
 802923e:	f023 0301 	bic.w	r3, r3, #1
 8029242:	9306      	str	r3, [sp, #24]
 8029244:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8029246:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 802924a:	681f      	ldr	r7, [r3, #0]
 802924c:	9b07      	ldr	r3, [sp, #28]
 802924e:	2b00      	cmp	r3, #0
 8029250:	dc03      	bgt.n	802925a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8029252:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8029254:	2b00      	cmp	r3, #0
 8029256:	f340 8267 	ble.w	8029728 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 802925a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802925c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8029260:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8029264:	1e48      	subs	r0, r1, #1
 8029266:	f102 3cff 	add.w	ip, r2, #4294967295
 802926a:	2d00      	cmp	r5, #0
 802926c:	f340 80b8 	ble.w	80293e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8029270:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8029274:	ea4f 4326 	mov.w	r3, r6, asr #16
 8029278:	d406      	bmi.n	8029288 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802927a:	4586      	cmp	lr, r0
 802927c:	da04      	bge.n	8029288 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802927e:	2b00      	cmp	r3, #0
 8029280:	db02      	blt.n	8029288 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8029282:	4563      	cmp	r3, ip
 8029284:	f2c0 80ad 	blt.w	80293e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8029288:	f11e 0e01 	adds.w	lr, lr, #1
 802928c:	f100 80a0 	bmi.w	80293d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8029290:	4571      	cmp	r1, lr
 8029292:	f2c0 809d 	blt.w	80293d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8029296:	3301      	adds	r3, #1
 8029298:	f100 809a 	bmi.w	80293d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 802929c:	429a      	cmp	r2, r3
 802929e:	f2c0 8097 	blt.w	80293d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80292a2:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 80292a6:	9509      	str	r5, [sp, #36]	; 0x24
 80292a8:	46c8      	mov	r8, r9
 80292aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80292ac:	2b00      	cmp	r3, #0
 80292ae:	f340 80b6 	ble.w	802941e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 80292b2:	f3c4 3303 	ubfx	r3, r4, #12, #4
 80292b6:	9308      	str	r3, [sp, #32]
 80292b8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80292ba:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 80292be:	1423      	asrs	r3, r4, #16
 80292c0:	ea4f 4026 	mov.w	r0, r6, asr #16
 80292c4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80292c8:	f100 813e 	bmi.w	8029548 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80292cc:	f10c 3bff 	add.w	fp, ip, #4294967295
 80292d0:	455b      	cmp	r3, fp
 80292d2:	f280 8139 	bge.w	8029548 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80292d6:	2800      	cmp	r0, #0
 80292d8:	f2c0 8136 	blt.w	8029548 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80292dc:	f10e 3bff 	add.w	fp, lr, #4294967295
 80292e0:	4558      	cmp	r0, fp
 80292e2:	f280 8131 	bge.w	8029548 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80292e6:	9a06      	ldr	r2, [sp, #24]
 80292e8:	fb00 3302 	mla	r3, r0, r2, r3
 80292ec:	0858      	lsrs	r0, r3, #1
 80292ee:	07da      	lsls	r2, r3, #31
 80292f0:	f817 c000 	ldrb.w	ip, [r7, r0]
 80292f4:	9a08      	ldr	r2, [sp, #32]
 80292f6:	bf54      	ite	pl
 80292f8:	f00c 0c0f 	andpl.w	ip, ip, #15
 80292fc:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8029300:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8029304:	fa5f fc8c 	uxtb.w	ip, ip
 8029308:	2a00      	cmp	r2, #0
 802930a:	f000 80cb 	beq.w	80294a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 802930e:	1c58      	adds	r0, r3, #1
 8029310:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8029314:	07c0      	lsls	r0, r0, #31
 8029316:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802931a:	bf54      	ite	pl
 802931c:	f00e 0e0f 	andpl.w	lr, lr, #15
 8029320:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8029324:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8029328:	fa5f fe8e 	uxtb.w	lr, lr
 802932c:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8029330:	b1b9      	cbz	r1, 8029362 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8029332:	4453      	add	r3, sl
 8029334:	0858      	lsrs	r0, r3, #1
 8029336:	07da      	lsls	r2, r3, #31
 8029338:	5c38      	ldrb	r0, [r7, r0]
 802933a:	bf54      	ite	pl
 802933c:	f000 000f 	andpl.w	r0, r0, #15
 8029340:	1100      	asrmi	r0, r0, #4
 8029342:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8029346:	b2c0      	uxtb	r0, r0
 8029348:	900a      	str	r0, [sp, #40]	; 0x28
 802934a:	1c58      	adds	r0, r3, #1
 802934c:	0843      	lsrs	r3, r0, #1
 802934e:	07c2      	lsls	r2, r0, #31
 8029350:	5cfb      	ldrb	r3, [r7, r3]
 8029352:	bf54      	ite	pl
 8029354:	f003 030f 	andpl.w	r3, r3, #15
 8029358:	111b      	asrmi	r3, r3, #4
 802935a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802935e:	b2db      	uxtb	r3, r3
 8029360:	930e      	str	r3, [sp, #56]	; 0x38
 8029362:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8029366:	b289      	uxth	r1, r1
 8029368:	fb02 f301 	mul.w	r3, r2, r1
 802936c:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8029370:	0112      	lsls	r2, r2, #4
 8029372:	b289      	uxth	r1, r1
 8029374:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8029378:	1a40      	subs	r0, r0, r1
 802937a:	fa1f fe80 	uxth.w	lr, r0
 802937e:	1ad2      	subs	r2, r2, r3
 8029380:	980d      	ldr	r0, [sp, #52]	; 0x34
 8029382:	b292      	uxth	r2, r2
 8029384:	4342      	muls	r2, r0
 8029386:	fb0c 2c0e 	mla	ip, ip, lr, r2
 802938a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802938c:	fb01 c102 	mla	r1, r1, r2, ip
 8029390:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8029392:	fb03 1302 	mla	r3, r3, r2, r1
 8029396:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802939a:	2bff      	cmp	r3, #255	; 0xff
 802939c:	f040 8093 	bne.w	80294c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 80293a0:	4bbe      	ldr	r3, [pc, #760]	; (802969c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80293a2:	681a      	ldr	r2, [r3, #0]
 80293a4:	4bbe      	ldr	r3, [pc, #760]	; (80296a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 80293a6:	0951      	lsrs	r1, r2, #5
 80293a8:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 80293ac:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80293b0:	430b      	orrs	r3, r1
 80293b2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80293b6:	4313      	orrs	r3, r2
 80293b8:	f8a8 3000 	strh.w	r3, [r8]
 80293bc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80293be:	441c      	add	r4, r3
 80293c0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80293c2:	441e      	add	r6, r3
 80293c4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80293c6:	3b01      	subs	r3, #1
 80293c8:	f108 0802 	add.w	r8, r8, #2
 80293cc:	9309      	str	r3, [sp, #36]	; 0x24
 80293ce:	e76c      	b.n	80292aa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80293d0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80293d2:	441c      	add	r4, r3
 80293d4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80293d6:	3d01      	subs	r5, #1
 80293d8:	441e      	add	r6, r3
 80293da:	f109 0902 	add.w	r9, r9, #2
 80293de:	e744      	b.n	802926a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80293e0:	d021      	beq.n	8029426 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 80293e2:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80293e4:	1e6b      	subs	r3, r5, #1
 80293e6:	fb00 4003 	mla	r0, r0, r3, r4
 80293ea:	1400      	asrs	r0, r0, #16
 80293ec:	f53f af59 	bmi.w	80292a2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80293f0:	3901      	subs	r1, #1
 80293f2:	4288      	cmp	r0, r1
 80293f4:	f6bf af55 	bge.w	80292a2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80293f8:	9920      	ldr	r1, [sp, #128]	; 0x80
 80293fa:	fb01 6303 	mla	r3, r1, r3, r6
 80293fe:	141b      	asrs	r3, r3, #16
 8029400:	f53f af4f 	bmi.w	80292a2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8029404:	3a01      	subs	r2, #1
 8029406:	4293      	cmp	r3, r2
 8029408:	f6bf af4b 	bge.w	80292a2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802940c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8029410:	9308      	str	r3, [sp, #32]
 8029412:	46a8      	mov	r8, r5
 8029414:	46ce      	mov	lr, r9
 8029416:	f1b8 0f00 	cmp.w	r8, #0
 802941a:	f300 80b5 	bgt.w	8029588 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802941e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8029422:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8029426:	9b07      	ldr	r3, [sp, #28]
 8029428:	2b00      	cmp	r3, #0
 802942a:	f340 817d 	ble.w	8029728 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 802942e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8029432:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8029436:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802943a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802943c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8029440:	ee31 1a05 	vadd.f32	s2, s2, s10
 8029444:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8029448:	eef0 6a62 	vmov.f32	s13, s5
 802944c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8029450:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8029454:	ee77 2a62 	vsub.f32	s5, s14, s5
 8029458:	ee16 4a90 	vmov	r4, s13
 802945c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8029460:	eef0 6a43 	vmov.f32	s13, s6
 8029464:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8029468:	ee12 2a90 	vmov	r2, s5
 802946c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8029470:	fb92 f3f3 	sdiv	r3, r2, r3
 8029474:	ee13 2a10 	vmov	r2, s6
 8029478:	931f      	str	r3, [sp, #124]	; 0x7c
 802947a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802947c:	fb92 f3f3 	sdiv	r3, r2, r3
 8029480:	9320      	str	r3, [sp, #128]	; 0x80
 8029482:	9b07      	ldr	r3, [sp, #28]
 8029484:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8029486:	3b01      	subs	r3, #1
 8029488:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802948c:	9307      	str	r3, [sp, #28]
 802948e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8029490:	ee16 6a90 	vmov	r6, s13
 8029494:	bf14      	ite	ne
 8029496:	461d      	movne	r5, r3
 8029498:	4615      	moveq	r5, r2
 802949a:	eeb0 3a67 	vmov.f32	s6, s15
 802949e:	eef0 2a47 	vmov.f32	s5, s14
 80294a2:	e6d3      	b.n	802924c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 80294a4:	2900      	cmp	r1, #0
 80294a6:	f43f af5c 	beq.w	8029362 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80294aa:	eb0a 0003 	add.w	r0, sl, r3
 80294ae:	0843      	lsrs	r3, r0, #1
 80294b0:	07c0      	lsls	r0, r0, #31
 80294b2:	5cfb      	ldrb	r3, [r7, r3]
 80294b4:	bf54      	ite	pl
 80294b6:	f003 030f 	andpl.w	r3, r3, #15
 80294ba:	111b      	asrmi	r3, r3, #4
 80294bc:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80294c0:	b2db      	uxtb	r3, r3
 80294c2:	930a      	str	r3, [sp, #40]	; 0x28
 80294c4:	e74d      	b.n	8029362 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80294c6:	2b00      	cmp	r3, #0
 80294c8:	f43f af78 	beq.w	80293bc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80294cc:	4a73      	ldr	r2, [pc, #460]	; (802969c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80294ce:	f8b8 c000 	ldrh.w	ip, [r8]
 80294d2:	6810      	ldr	r0, [r2, #0]
 80294d4:	fa1f fe83 	uxth.w	lr, r3
 80294d8:	ea4f 212c 	mov.w	r1, ip, asr #8
 80294dc:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80294e0:	43db      	mvns	r3, r3
 80294e2:	b2db      	uxtb	r3, r3
 80294e4:	fb12 f20e 	smulbb	r2, r2, lr
 80294e8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80294ec:	fb01 2103 	mla	r1, r1, r3, r2
 80294f0:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80294f4:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80294f8:	b2c0      	uxtb	r0, r0
 80294fa:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80294fe:	fb1b fb0e 	smulbb	fp, fp, lr
 8029502:	b289      	uxth	r1, r1
 8029504:	fb10 fe0e 	smulbb	lr, r0, lr
 8029508:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802950c:	fa5f fc8c 	uxtb.w	ip, ip
 8029510:	fb02 b203 	mla	r2, r2, r3, fp
 8029514:	1c48      	adds	r0, r1, #1
 8029516:	fb0c e303 	mla	r3, ip, r3, lr
 802951a:	b292      	uxth	r2, r2
 802951c:	b29b      	uxth	r3, r3
 802951e:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8029522:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8029526:	f102 0b01 	add.w	fp, r2, #1
 802952a:	1c59      	adds	r1, r3, #1
 802952c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8029530:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8029534:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8029538:	0952      	lsrs	r2, r2, #5
 802953a:	4301      	orrs	r1, r0
 802953c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8029540:	4311      	orrs	r1, r2
 8029542:	f8a8 1000 	strh.w	r1, [r8]
 8029546:	e739      	b.n	80293bc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8029548:	f113 0b01 	adds.w	fp, r3, #1
 802954c:	f53f af36 	bmi.w	80293bc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8029550:	45dc      	cmp	ip, fp
 8029552:	f6ff af33 	blt.w	80293bc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8029556:	f110 0b01 	adds.w	fp, r0, #1
 802955a:	f53f af2f 	bmi.w	80293bc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802955e:	45de      	cmp	lr, fp
 8029560:	f6ff af2c 	blt.w	80293bc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8029564:	9a08      	ldr	r2, [sp, #32]
 8029566:	9302      	str	r3, [sp, #8]
 8029568:	fa0f f38e 	sxth.w	r3, lr
 802956c:	9301      	str	r3, [sp, #4]
 802956e:	fa0f f38c 	sxth.w	r3, ip
 8029572:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8029576:	9105      	str	r1, [sp, #20]
 8029578:	9300      	str	r3, [sp, #0]
 802957a:	463a      	mov	r2, r7
 802957c:	4653      	mov	r3, sl
 802957e:	4641      	mov	r1, r8
 8029580:	9811      	ldr	r0, [sp, #68]	; 0x44
 8029582:	f7ff fd73 	bl	802906c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8029586:	e719      	b.n	80293bc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8029588:	9906      	ldr	r1, [sp, #24]
 802958a:	1422      	asrs	r2, r4, #16
 802958c:	1433      	asrs	r3, r6, #16
 802958e:	fb01 2303 	mla	r3, r1, r3, r2
 8029592:	085a      	lsrs	r2, r3, #1
 8029594:	07d9      	lsls	r1, r3, #31
 8029596:	5cba      	ldrb	r2, [r7, r2]
 8029598:	bf54      	ite	pl
 802959a:	f002 020f 	andpl.w	r2, r2, #15
 802959e:	1112      	asrmi	r2, r2, #4
 80295a0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80295a4:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80295a8:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80295ac:	b2d2      	uxtb	r2, r2
 80295ae:	2800      	cmp	r0, #0
 80295b0:	d062      	beq.n	8029678 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 80295b2:	f103 0a01 	add.w	sl, r3, #1
 80295b6:	ea4f 015a 	mov.w	r1, sl, lsr #1
 80295ba:	f01a 0f01 	tst.w	sl, #1
 80295be:	5c79      	ldrb	r1, [r7, r1]
 80295c0:	bf0c      	ite	eq
 80295c2:	f001 010f 	andeq.w	r1, r1, #15
 80295c6:	1109      	asrne	r1, r1, #4
 80295c8:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80295cc:	b2c9      	uxtb	r1, r1
 80295ce:	910f      	str	r1, [sp, #60]	; 0x3c
 80295d0:	f1bc 0f00 	cmp.w	ip, #0
 80295d4:	d019      	beq.n	802960a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80295d6:	9908      	ldr	r1, [sp, #32]
 80295d8:	440b      	add	r3, r1
 80295da:	0859      	lsrs	r1, r3, #1
 80295dc:	f013 0f01 	tst.w	r3, #1
 80295e0:	5c79      	ldrb	r1, [r7, r1]
 80295e2:	bf0c      	ite	eq
 80295e4:	f001 010f 	andeq.w	r1, r1, #15
 80295e8:	1109      	asrne	r1, r1, #4
 80295ea:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80295ee:	b2c9      	uxtb	r1, r1
 80295f0:	3301      	adds	r3, #1
 80295f2:	910b      	str	r1, [sp, #44]	; 0x2c
 80295f4:	0859      	lsrs	r1, r3, #1
 80295f6:	07db      	lsls	r3, r3, #31
 80295f8:	5c79      	ldrb	r1, [r7, r1]
 80295fa:	bf54      	ite	pl
 80295fc:	f001 010f 	andpl.w	r1, r1, #15
 8029600:	1109      	asrmi	r1, r1, #4
 8029602:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8029606:	b2c9      	uxtb	r1, r1
 8029608:	9110      	str	r1, [sp, #64]	; 0x40
 802960a:	b280      	uxth	r0, r0
 802960c:	fa1f fc8c 	uxth.w	ip, ip
 8029610:	fb00 f30c 	mul.w	r3, r0, ip
 8029614:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8029618:	0100      	lsls	r0, r0, #4
 802961a:	fa1f fc8c 	uxth.w	ip, ip
 802961e:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 8029622:	eba1 010c 	sub.w	r1, r1, ip
 8029626:	fa1f fa81 	uxth.w	sl, r1
 802962a:	1ac0      	subs	r0, r0, r3
 802962c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 802962e:	b280      	uxth	r0, r0
 8029630:	4348      	muls	r0, r1
 8029632:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8029634:	fb02 020a 	mla	r2, r2, sl, r0
 8029638:	fb0c 2c01 	mla	ip, ip, r1, r2
 802963c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802963e:	fb03 c302 	mla	r3, r3, r2, ip
 8029642:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8029646:	2bff      	cmp	r3, #255	; 0xff
 8029648:	d12c      	bne.n	80296a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 802964a:	4b14      	ldr	r3, [pc, #80]	; (802969c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 802964c:	681a      	ldr	r2, [r3, #0]
 802964e:	4b14      	ldr	r3, [pc, #80]	; (80296a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8029650:	0951      	lsrs	r1, r2, #5
 8029652:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8029656:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802965a:	430b      	orrs	r3, r1
 802965c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8029660:	4313      	orrs	r3, r2
 8029662:	f8ae 3000 	strh.w	r3, [lr]
 8029666:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8029668:	441c      	add	r4, r3
 802966a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802966c:	f10e 0e02 	add.w	lr, lr, #2
 8029670:	441e      	add	r6, r3
 8029672:	f108 38ff 	add.w	r8, r8, #4294967295
 8029676:	e6ce      	b.n	8029416 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8029678:	f1bc 0f00 	cmp.w	ip, #0
 802967c:	d0c5      	beq.n	802960a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802967e:	9908      	ldr	r1, [sp, #32]
 8029680:	440b      	add	r3, r1
 8029682:	0859      	lsrs	r1, r3, #1
 8029684:	07db      	lsls	r3, r3, #31
 8029686:	5c79      	ldrb	r1, [r7, r1]
 8029688:	bf54      	ite	pl
 802968a:	f001 010f 	andpl.w	r1, r1, #15
 802968e:	1109      	asrmi	r1, r1, #4
 8029690:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8029694:	b2c9      	uxtb	r1, r1
 8029696:	910b      	str	r1, [sp, #44]	; 0x2c
 8029698:	e7b7      	b.n	802960a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802969a:	bf00      	nop
 802969c:	2000225c 	.word	0x2000225c
 80296a0:	fffff800 	.word	0xfffff800
 80296a4:	2b00      	cmp	r3, #0
 80296a6:	d0de      	beq.n	8029666 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80296a8:	4a21      	ldr	r2, [pc, #132]	; (8029730 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 80296aa:	f8be c000 	ldrh.w	ip, [lr]
 80296ae:	6810      	ldr	r0, [r2, #0]
 80296b0:	fa1f fa83 	uxth.w	sl, r3
 80296b4:	ea4f 212c 	mov.w	r1, ip, asr #8
 80296b8:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80296bc:	43db      	mvns	r3, r3
 80296be:	b2db      	uxtb	r3, r3
 80296c0:	fb12 f20a 	smulbb	r2, r2, sl
 80296c4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80296c8:	fb01 2103 	mla	r1, r1, r3, r2
 80296cc:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80296d0:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80296d4:	b2c0      	uxtb	r0, r0
 80296d6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80296da:	fa5f fc8c 	uxtb.w	ip, ip
 80296de:	fb10 f00a 	smulbb	r0, r0, sl
 80296e2:	fb0c 0003 	mla	r0, ip, r3, r0
 80296e6:	b289      	uxth	r1, r1
 80296e8:	fb1b fb0a 	smulbb	fp, fp, sl
 80296ec:	b280      	uxth	r0, r0
 80296ee:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80296f2:	fb02 b203 	mla	r2, r2, r3, fp
 80296f6:	1c4b      	adds	r3, r1, #1
 80296f8:	f100 0b01 	add.w	fp, r0, #1
 80296fc:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8029700:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8029704:	b292      	uxth	r2, r2
 8029706:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 802970a:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 802970e:	ea4b 0101 	orr.w	r1, fp, r1
 8029712:	f102 0b01 	add.w	fp, r2, #1
 8029716:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802971a:	0952      	lsrs	r2, r2, #5
 802971c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8029720:	4311      	orrs	r1, r2
 8029722:	f8ae 1000 	strh.w	r1, [lr]
 8029726:	e79e      	b.n	8029666 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8029728:	b013      	add	sp, #76	; 0x4c
 802972a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802972e:	bf00      	nop
 8029730:	2000225c 	.word	0x2000225c

08029734 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8029734:	b570      	push	{r4, r5, r6, lr}
 8029736:	1208      	asrs	r0, r1, #8
 8029738:	b29e      	uxth	r6, r3
 802973a:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 802973e:	1213      	asrs	r3, r2, #8
 8029740:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8029744:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8029748:	fb13 f305 	smulbb	r3, r3, r5
 802974c:	fb10 f006 	smulbb	r0, r0, r6
 8029750:	4418      	add	r0, r3
 8029752:	10cc      	asrs	r4, r1, #3
 8029754:	10d3      	asrs	r3, r2, #3
 8029756:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 802975a:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802975e:	fb13 f305 	smulbb	r3, r3, r5
 8029762:	fb14 f406 	smulbb	r4, r4, r6
 8029766:	00c9      	lsls	r1, r1, #3
 8029768:	00d2      	lsls	r2, r2, #3
 802976a:	441c      	add	r4, r3
 802976c:	b2d2      	uxtb	r2, r2
 802976e:	b2cb      	uxtb	r3, r1
 8029770:	fb12 f205 	smulbb	r2, r2, r5
 8029774:	b280      	uxth	r0, r0
 8029776:	fb13 f306 	smulbb	r3, r3, r6
 802977a:	4413      	add	r3, r2
 802977c:	1c42      	adds	r2, r0, #1
 802977e:	b29b      	uxth	r3, r3
 8029780:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8029784:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 8029788:	1c58      	adds	r0, r3, #1
 802978a:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802978e:	b2a4      	uxth	r4, r4
 8029790:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8029794:	4310      	orrs	r0, r2
 8029796:	1c62      	adds	r2, r4, #1
 8029798:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802979c:	0964      	lsrs	r4, r4, #5
 802979e:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80297a2:	4320      	orrs	r0, r4
 80297a4:	bd70      	pop	{r4, r5, r6, pc}
	...

080297a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 80297a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80297ac:	b08f      	sub	sp, #60	; 0x3c
 80297ae:	461c      	mov	r4, r3
 80297b0:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 80297b4:	9004      	str	r0, [sp, #16]
 80297b6:	460d      	mov	r5, r1
 80297b8:	4616      	mov	r6, r2
 80297ba:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80297bc:	2f00      	cmp	r7, #0
 80297be:	f000 80f6 	beq.w	80299ae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 80297c2:	6820      	ldr	r0, [r4, #0]
 80297c4:	6861      	ldr	r1, [r4, #4]
 80297c6:	aa0a      	add	r2, sp, #40	; 0x28
 80297c8:	c203      	stmia	r2!, {r0, r1}
 80297ca:	6818      	ldr	r0, [r3, #0]
 80297cc:	6859      	ldr	r1, [r3, #4]
 80297ce:	aa0c      	add	r2, sp, #48	; 0x30
 80297d0:	c203      	stmia	r2!, {r0, r1}
 80297d2:	a80a      	add	r0, sp, #40	; 0x28
 80297d4:	f7ef fbbe 	bl	8018f54 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80297d8:	4621      	mov	r1, r4
 80297da:	a80c      	add	r0, sp, #48	; 0x30
 80297dc:	f7ef fbfe 	bl	8018fdc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80297e0:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80297e4:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 80297e8:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 80297ec:	f002 0301 	and.w	r3, r2, #1
 80297f0:	9306      	str	r3, [sp, #24]
 80297f2:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80297f6:	f003 0101 	and.w	r1, r3, #1
 80297fa:	9105      	str	r1, [sp, #20]
 80297fc:	9805      	ldr	r0, [sp, #20]
 80297fe:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8029802:	4403      	add	r3, r0
 8029804:	fb01 2303 	mla	r3, r1, r3, r2
 8029808:	f04f 0802 	mov.w	r8, #2
 802980c:	fb93 f3f8 	sdiv	r3, r3, r8
 8029810:	441d      	add	r5, r3
 8029812:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8029816:	441a      	add	r2, r3
 8029818:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 802981c:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8029820:	4419      	add	r1, r3
 8029822:	4b64      	ldr	r3, [pc, #400]	; (80299b4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8029824:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8029828:	6818      	ldr	r0, [r3, #0]
 802982a:	6803      	ldr	r3, [r0, #0]
 802982c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802982e:	4798      	blx	r3
 8029830:	4a61      	ldr	r2, [pc, #388]	; (80299b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8029832:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8029836:	8813      	ldrh	r3, [r2, #0]
 8029838:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 802983c:	2fff      	cmp	r7, #255	; 0xff
 802983e:	fb03 a404 	mla	r4, r3, r4, sl
 8029842:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8029846:	f106 0604 	add.w	r6, r6, #4
 802984a:	4611      	mov	r1, r2
 802984c:	fb03 fb0b 	mul.w	fp, r3, fp
 8029850:	d06b      	beq.n	802992a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 8029852:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 8029856:	9303      	str	r3, [sp, #12]
 8029858:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 802985c:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8029860:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8029864:	9b07      	ldr	r3, [sp, #28]
 8029866:	42a3      	cmp	r3, r4
 8029868:	f240 809c 	bls.w	80299a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 802986c:	9b06      	ldr	r3, [sp, #24]
 802986e:	2b00      	cmp	r3, #0
 8029870:	d039      	beq.n	80298e6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8029872:	782b      	ldrb	r3, [r5, #0]
 8029874:	8822      	ldrh	r2, [r4, #0]
 8029876:	9804      	ldr	r0, [sp, #16]
 8029878:	f003 030f 	and.w	r3, r3, #15
 802987c:	f105 0801 	add.w	r8, r5, #1
 8029880:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8029884:	9b03      	ldr	r3, [sp, #12]
 8029886:	9300      	str	r3, [sp, #0]
 8029888:	463b      	mov	r3, r7
 802988a:	f7ff ff53 	bl	8029734 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802988e:	f824 0b02 	strh.w	r0, [r4], #2
 8029892:	f109 3bff 	add.w	fp, r9, #4294967295
 8029896:	f1bb 0f01 	cmp.w	fp, #1
 802989a:	46a2      	mov	sl, r4
 802989c:	f104 0404 	add.w	r4, r4, #4
 80298a0:	dd24      	ble.n	80298ec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 80298a2:	f898 3000 	ldrb.w	r3, [r8]
 80298a6:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80298aa:	9804      	ldr	r0, [sp, #16]
 80298ac:	091b      	lsrs	r3, r3, #4
 80298ae:	f1ab 0b02 	sub.w	fp, fp, #2
 80298b2:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80298b6:	9b03      	ldr	r3, [sp, #12]
 80298b8:	9300      	str	r3, [sp, #0]
 80298ba:	463b      	mov	r3, r7
 80298bc:	f7ff ff3a 	bl	8029734 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80298c0:	f824 0c04 	strh.w	r0, [r4, #-4]
 80298c4:	f818 3b01 	ldrb.w	r3, [r8], #1
 80298c8:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80298cc:	9804      	ldr	r0, [sp, #16]
 80298ce:	f003 030f 	and.w	r3, r3, #15
 80298d2:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80298d6:	9b03      	ldr	r3, [sp, #12]
 80298d8:	9300      	str	r3, [sp, #0]
 80298da:	463b      	mov	r3, r7
 80298dc:	f7ff ff2a 	bl	8029734 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80298e0:	f824 0c02 	strh.w	r0, [r4, #-2]
 80298e4:	e7d7      	b.n	8029896 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 80298e6:	46a8      	mov	r8, r5
 80298e8:	46cb      	mov	fp, r9
 80298ea:	e7d4      	b.n	8029896 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 80298ec:	d10e      	bne.n	802990c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 80298ee:	f898 3000 	ldrb.w	r3, [r8]
 80298f2:	f8ba 2000 	ldrh.w	r2, [sl]
 80298f6:	9804      	ldr	r0, [sp, #16]
 80298f8:	091b      	lsrs	r3, r3, #4
 80298fa:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80298fe:	9b03      	ldr	r3, [sp, #12]
 8029900:	9300      	str	r3, [sp, #0]
 8029902:	463b      	mov	r3, r7
 8029904:	f7ff ff16 	bl	8029734 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8029908:	f82a 0b02 	strh.w	r0, [sl], #2
 802990c:	9b08      	ldr	r3, [sp, #32]
 802990e:	9a05      	ldr	r2, [sp, #20]
 8029910:	881c      	ldrh	r4, [r3, #0]
 8029912:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8029916:	eba4 0409 	sub.w	r4, r4, r9
 802991a:	4413      	add	r3, r2
 802991c:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8029920:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8029922:	fb93 f3f2 	sdiv	r3, r3, r2
 8029926:	441d      	add	r5, r3
 8029928:	e79c      	b.n	8029864 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 802992a:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 802992e:	45a3      	cmp	fp, r4
 8029930:	d938      	bls.n	80299a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8029932:	9b06      	ldr	r3, [sp, #24]
 8029934:	b1f3      	cbz	r3, 8029974 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 8029936:	782b      	ldrb	r3, [r5, #0]
 8029938:	f003 030f 	and.w	r3, r3, #15
 802993c:	1c6a      	adds	r2, r5, #1
 802993e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8029942:	8023      	strh	r3, [r4, #0]
 8029944:	f109 30ff 	add.w	r0, r9, #4294967295
 8029948:	3402      	adds	r4, #2
 802994a:	2801      	cmp	r0, #1
 802994c:	4623      	mov	r3, r4
 802994e:	f104 0404 	add.w	r4, r4, #4
 8029952:	dd12      	ble.n	802997a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8029954:	7813      	ldrb	r3, [r2, #0]
 8029956:	091b      	lsrs	r3, r3, #4
 8029958:	3802      	subs	r0, #2
 802995a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802995e:	f824 3c04 	strh.w	r3, [r4, #-4]
 8029962:	f812 3b01 	ldrb.w	r3, [r2], #1
 8029966:	f003 030f 	and.w	r3, r3, #15
 802996a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802996e:	f824 3c02 	strh.w	r3, [r4, #-2]
 8029972:	e7ea      	b.n	802994a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8029974:	462a      	mov	r2, r5
 8029976:	4648      	mov	r0, r9
 8029978:	e7e7      	b.n	802994a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 802997a:	d106      	bne.n	802998a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 802997c:	7812      	ldrb	r2, [r2, #0]
 802997e:	0912      	lsrs	r2, r2, #4
 8029980:	3302      	adds	r3, #2
 8029982:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8029986:	f823 2c02 	strh.w	r2, [r3, #-2]
 802998a:	880c      	ldrh	r4, [r1, #0]
 802998c:	9a05      	ldr	r2, [sp, #20]
 802998e:	eba4 0409 	sub.w	r4, r4, r9
 8029992:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8029996:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802999a:	4413      	add	r3, r2
 802999c:	fb93 f3f8 	sdiv	r3, r3, r8
 80299a0:	441d      	add	r5, r3
 80299a2:	e7c4      	b.n	802992e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 80299a4:	4b03      	ldr	r3, [pc, #12]	; (80299b4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80299a6:	6818      	ldr	r0, [r3, #0]
 80299a8:	6803      	ldr	r3, [r0, #0]
 80299aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80299ac:	4798      	blx	r3
 80299ae:	b00f      	add	sp, #60	; 0x3c
 80299b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80299b4:	2000224c 	.word	0x2000224c
 80299b8:	20002246 	.word	0x20002246

080299bc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 80299bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80299be:	f89d 5014 	ldrb.w	r5, [sp, #20]
 80299c2:	2dff      	cmp	r5, #255	; 0xff
 80299c4:	ea4f 2711 	mov.w	r7, r1, lsr #8
 80299c8:	d10c      	bne.n	80299e4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 80299ca:	2bff      	cmp	r3, #255	; 0xff
 80299cc:	d10a      	bne.n	80299e4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 80299ce:	4b25      	ldr	r3, [pc, #148]	; (8029a64 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 80299d0:	0948      	lsrs	r0, r1, #5
 80299d2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80299d6:	403b      	ands	r3, r7
 80299d8:	4318      	orrs	r0, r3
 80299da:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80299de:	4308      	orrs	r0, r1
 80299e0:	b280      	uxth	r0, r0
 80299e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80299e4:	fb15 f503 	smulbb	r5, r5, r3
 80299e8:	b2ab      	uxth	r3, r5
 80299ea:	1c5d      	adds	r5, r3, #1
 80299ec:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 80299f0:	1214      	asrs	r4, r2, #8
 80299f2:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80299f6:	fa1f fc85 	uxth.w	ip, r5
 80299fa:	10d6      	asrs	r6, r2, #3
 80299fc:	00d0      	lsls	r0, r2, #3
 80299fe:	43ed      	mvns	r5, r5
 8029a00:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8029a04:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8029a08:	b2eb      	uxtb	r3, r5
 8029a0a:	b2c0      	uxtb	r0, r0
 8029a0c:	fb12 f20c 	smulbb	r2, r2, ip
 8029a10:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8029a14:	fb04 2403 	mla	r4, r4, r3, r2
 8029a18:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8029a1c:	b2c8      	uxtb	r0, r1
 8029a1e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8029a22:	b2fd      	uxtb	r5, r7
 8029a24:	fb10 f00c 	smulbb	r0, r0, ip
 8029a28:	b2a4      	uxth	r4, r4
 8029a2a:	fb02 0003 	mla	r0, r2, r3, r0
 8029a2e:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8029a32:	fb15 f50c 	smulbb	r5, r5, ip
 8029a36:	fb06 5503 	mla	r5, r6, r3, r5
 8029a3a:	b283      	uxth	r3, r0
 8029a3c:	1c60      	adds	r0, r4, #1
 8029a3e:	b2ad      	uxth	r5, r5
 8029a40:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8029a44:	1c58      	adds	r0, r3, #1
 8029a46:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8029a4a:	1c6b      	adds	r3, r5, #1
 8029a4c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8029a50:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8029a54:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8029a58:	096d      	lsrs	r5, r5, #5
 8029a5a:	4320      	orrs	r0, r4
 8029a5c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8029a60:	4328      	orrs	r0, r5
 8029a62:	e7be      	b.n	80299e2 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8029a64:	00fff800 	.word	0x00fff800

08029a68 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8029a68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029a6c:	461c      	mov	r4, r3
 8029a6e:	b08d      	sub	sp, #52	; 0x34
 8029a70:	460d      	mov	r5, r1
 8029a72:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8029a74:	6861      	ldr	r1, [r4, #4]
 8029a76:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 8029a7a:	4680      	mov	r8, r0
 8029a7c:	6820      	ldr	r0, [r4, #0]
 8029a7e:	4616      	mov	r6, r2
 8029a80:	aa08      	add	r2, sp, #32
 8029a82:	c203      	stmia	r2!, {r0, r1}
 8029a84:	6818      	ldr	r0, [r3, #0]
 8029a86:	6859      	ldr	r1, [r3, #4]
 8029a88:	aa0a      	add	r2, sp, #40	; 0x28
 8029a8a:	c203      	stmia	r2!, {r0, r1}
 8029a8c:	a808      	add	r0, sp, #32
 8029a8e:	f7ef fa61 	bl	8018f54 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8029a92:	4621      	mov	r1, r4
 8029a94:	a80a      	add	r0, sp, #40	; 0x28
 8029a96:	f7ef faa1 	bl	8018fdc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8029a9a:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8029a9e:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 8029aa2:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8029aa6:	f002 0301 	and.w	r3, r2, #1
 8029aaa:	9303      	str	r3, [sp, #12]
 8029aac:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8029ab0:	f003 0101 	and.w	r1, r3, #1
 8029ab4:	9102      	str	r1, [sp, #8]
 8029ab6:	9802      	ldr	r0, [sp, #8]
 8029ab8:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8029abc:	4403      	add	r3, r0
 8029abe:	fb01 2303 	mla	r3, r1, r3, r2
 8029ac2:	f04f 0a02 	mov.w	sl, #2
 8029ac6:	fb93 f3fa 	sdiv	r3, r3, sl
 8029aca:	441d      	add	r5, r3
 8029acc:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8029ad0:	441a      	add	r2, r3
 8029ad2:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8029ad6:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8029ada:	4a3f      	ldr	r2, [pc, #252]	; (8029bd8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8029adc:	9205      	str	r2, [sp, #20]
 8029ade:	4419      	add	r1, r3
 8029ae0:	6810      	ldr	r0, [r2, #0]
 8029ae2:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 8029ae6:	6803      	ldr	r3, [r0, #0]
 8029ae8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8029aea:	4798      	blx	r3
 8029aec:	4b3b      	ldr	r3, [pc, #236]	; (8029bdc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8029aee:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 8029af2:	8819      	ldrh	r1, [r3, #0]
 8029af4:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 8029af8:	fb01 c404 	mla	r4, r1, r4, ip
 8029afc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8029b00:	434f      	muls	r7, r1
 8029b02:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 8029b06:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 8029b0a:	3604      	adds	r6, #4
 8029b0c:	9204      	str	r2, [sp, #16]
 8029b0e:	9b04      	ldr	r3, [sp, #16]
 8029b10:	429c      	cmp	r4, r3
 8029b12:	d258      	bcs.n	8029bc6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8029b14:	9b03      	ldr	r3, [sp, #12]
 8029b16:	2b00      	cmp	r3, #0
 8029b18:	d034      	beq.n	8029b84 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 8029b1a:	782b      	ldrb	r3, [r5, #0]
 8029b1c:	f003 030f 	and.w	r3, r3, #15
 8029b20:	1c6f      	adds	r7, r5, #1
 8029b22:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8029b26:	0e0b      	lsrs	r3, r1, #24
 8029b28:	d006      	beq.n	8029b38 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 8029b2a:	8822      	ldrh	r2, [r4, #0]
 8029b2c:	9300      	str	r3, [sp, #0]
 8029b2e:	4640      	mov	r0, r8
 8029b30:	464b      	mov	r3, r9
 8029b32:	f7ff ff43 	bl	80299bc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8029b36:	8020      	strh	r0, [r4, #0]
 8029b38:	3402      	adds	r4, #2
 8029b3a:	f10b 3aff 	add.w	sl, fp, #4294967295
 8029b3e:	f1ba 0f01 	cmp.w	sl, #1
 8029b42:	dd22      	ble.n	8029b8a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8029b44:	783b      	ldrb	r3, [r7, #0]
 8029b46:	091b      	lsrs	r3, r3, #4
 8029b48:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8029b4c:	0e0b      	lsrs	r3, r1, #24
 8029b4e:	d006      	beq.n	8029b5e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8029b50:	8822      	ldrh	r2, [r4, #0]
 8029b52:	9300      	str	r3, [sp, #0]
 8029b54:	4640      	mov	r0, r8
 8029b56:	464b      	mov	r3, r9
 8029b58:	f7ff ff30 	bl	80299bc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8029b5c:	8020      	strh	r0, [r4, #0]
 8029b5e:	f817 3b01 	ldrb.w	r3, [r7], #1
 8029b62:	f003 030f 	and.w	r3, r3, #15
 8029b66:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8029b6a:	0e0b      	lsrs	r3, r1, #24
 8029b6c:	d006      	beq.n	8029b7c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8029b6e:	8862      	ldrh	r2, [r4, #2]
 8029b70:	9300      	str	r3, [sp, #0]
 8029b72:	4640      	mov	r0, r8
 8029b74:	464b      	mov	r3, r9
 8029b76:	f7ff ff21 	bl	80299bc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8029b7a:	8060      	strh	r0, [r4, #2]
 8029b7c:	3404      	adds	r4, #4
 8029b7e:	f1aa 0a02 	sub.w	sl, sl, #2
 8029b82:	e7dc      	b.n	8029b3e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8029b84:	462f      	mov	r7, r5
 8029b86:	46da      	mov	sl, fp
 8029b88:	e7d9      	b.n	8029b3e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8029b8a:	d10d      	bne.n	8029ba8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8029b8c:	783b      	ldrb	r3, [r7, #0]
 8029b8e:	091b      	lsrs	r3, r3, #4
 8029b90:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8029b94:	0e0b      	lsrs	r3, r1, #24
 8029b96:	d006      	beq.n	8029ba6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 8029b98:	8822      	ldrh	r2, [r4, #0]
 8029b9a:	9300      	str	r3, [sp, #0]
 8029b9c:	4640      	mov	r0, r8
 8029b9e:	464b      	mov	r3, r9
 8029ba0:	f7ff ff0c 	bl	80299bc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8029ba4:	8020      	strh	r0, [r4, #0]
 8029ba6:	3402      	adds	r4, #2
 8029ba8:	9b06      	ldr	r3, [sp, #24]
 8029baa:	9a02      	ldr	r2, [sp, #8]
 8029bac:	881b      	ldrh	r3, [r3, #0]
 8029bae:	eba3 030b 	sub.w	r3, r3, fp
 8029bb2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8029bb6:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8029bba:	4413      	add	r3, r2
 8029bbc:	9a07      	ldr	r2, [sp, #28]
 8029bbe:	fb93 f3f2 	sdiv	r3, r3, r2
 8029bc2:	441d      	add	r5, r3
 8029bc4:	e7a3      	b.n	8029b0e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 8029bc6:	9b05      	ldr	r3, [sp, #20]
 8029bc8:	6818      	ldr	r0, [r3, #0]
 8029bca:	6803      	ldr	r3, [r0, #0]
 8029bcc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8029bce:	4798      	blx	r3
 8029bd0:	b00d      	add	sp, #52	; 0x34
 8029bd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029bd6:	bf00      	nop
 8029bd8:	2000224c 	.word	0x2000224c
 8029bdc:	20002246 	.word	0x20002246

08029be0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8029be0:	b570      	push	{r4, r5, r6, lr}
 8029be2:	1214      	asrs	r4, r2, #8
 8029be4:	788d      	ldrb	r5, [r1, #2]
 8029be6:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8029bea:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8029bee:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8029bf2:	fb15 f503 	smulbb	r5, r5, r3
 8029bf6:	fb04 5506 	mla	r5, r4, r6, r5
 8029bfa:	10d0      	asrs	r0, r2, #3
 8029bfc:	784c      	ldrb	r4, [r1, #1]
 8029bfe:	7809      	ldrb	r1, [r1, #0]
 8029c00:	00d2      	lsls	r2, r2, #3
 8029c02:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8029c06:	b2d2      	uxtb	r2, r2
 8029c08:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8029c0c:	fb14 f403 	smulbb	r4, r4, r3
 8029c10:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8029c14:	fb11 f303 	smulbb	r3, r1, r3
 8029c18:	fb00 4406 	mla	r4, r0, r6, r4
 8029c1c:	fb02 3306 	mla	r3, r2, r6, r3
 8029c20:	b2ad      	uxth	r5, r5
 8029c22:	b29b      	uxth	r3, r3
 8029c24:	b2a4      	uxth	r4, r4
 8029c26:	1c68      	adds	r0, r5, #1
 8029c28:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8029c2c:	1c62      	adds	r2, r4, #1
 8029c2e:	1c58      	adds	r0, r3, #1
 8029c30:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8029c34:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8029c38:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8029c3c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8029c40:	0964      	lsrs	r4, r4, #5
 8029c42:	4328      	orrs	r0, r5
 8029c44:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8029c48:	4320      	orrs	r0, r4
 8029c4a:	bd70      	pop	{r4, r5, r6, pc}

08029c4c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8029c4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029c50:	b08f      	sub	sp, #60	; 0x3c
 8029c52:	461c      	mov	r4, r3
 8029c54:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8029c58:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8029c5a:	4682      	mov	sl, r0
 8029c5c:	460e      	mov	r6, r1
 8029c5e:	4615      	mov	r5, r2
 8029c60:	2f00      	cmp	r7, #0
 8029c62:	f000 8142 	beq.w	8029eea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 8029c66:	6820      	ldr	r0, [r4, #0]
 8029c68:	6861      	ldr	r1, [r4, #4]
 8029c6a:	aa0a      	add	r2, sp, #40	; 0x28
 8029c6c:	c203      	stmia	r2!, {r0, r1}
 8029c6e:	6818      	ldr	r0, [r3, #0]
 8029c70:	6859      	ldr	r1, [r3, #4]
 8029c72:	aa0c      	add	r2, sp, #48	; 0x30
 8029c74:	c203      	stmia	r2!, {r0, r1}
 8029c76:	a80a      	add	r0, sp, #40	; 0x28
 8029c78:	f7ef f96c 	bl	8018f54 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8029c7c:	4621      	mov	r1, r4
 8029c7e:	a80c      	add	r0, sp, #48	; 0x30
 8029c80:	f7ef f9ac 	bl	8018fdc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8029c84:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8029c88:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8029c8c:	f002 0301 	and.w	r3, r2, #1
 8029c90:	9306      	str	r3, [sp, #24]
 8029c92:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8029c96:	f003 0101 	and.w	r1, r3, #1
 8029c9a:	9105      	str	r1, [sp, #20]
 8029c9c:	9805      	ldr	r0, [sp, #20]
 8029c9e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8029ca2:	4403      	add	r3, r0
 8029ca4:	fb01 2303 	mla	r3, r1, r3, r2
 8029ca8:	f04f 0802 	mov.w	r8, #2
 8029cac:	fb93 f3f8 	sdiv	r3, r3, r8
 8029cb0:	441e      	add	r6, r3
 8029cb2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8029cb6:	441a      	add	r2, r3
 8029cb8:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8029cbc:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8029cc0:	4419      	add	r1, r3
 8029cc2:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8029cc6:	9303      	str	r3, [sp, #12]
 8029cc8:	4b89      	ldr	r3, [pc, #548]	; (8029ef0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8029cca:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8029cce:	6818      	ldr	r0, [r3, #0]
 8029cd0:	6803      	ldr	r3, [r0, #0]
 8029cd2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8029cd4:	4798      	blx	r3
 8029cd6:	4a87      	ldr	r2, [pc, #540]	; (8029ef4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8029cd8:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8029cdc:	8813      	ldrh	r3, [r2, #0]
 8029cde:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 8029ce2:	2fff      	cmp	r7, #255	; 0xff
 8029ce4:	fb03 9404 	mla	r4, r3, r4, r9
 8029ce8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8029cec:	f105 0504 	add.w	r5, r5, #4
 8029cf0:	4694      	mov	ip, r2
 8029cf2:	fb03 f30b 	mul.w	r3, r3, fp
 8029cf6:	d071      	beq.n	8029ddc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8029cf8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8029cfc:	43f9      	mvns	r1, r7
 8029cfe:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8029d02:	b2c9      	uxtb	r1, r1
 8029d04:	9104      	str	r1, [sp, #16]
 8029d06:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8029d0a:	9b07      	ldr	r3, [sp, #28]
 8029d0c:	42a3      	cmp	r3, r4
 8029d0e:	f240 80e7 	bls.w	8029ee0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8029d12:	9b06      	ldr	r3, [sp, #24]
 8029d14:	2b00      	cmp	r3, #0
 8029d16:	d03d      	beq.n	8029d94 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 8029d18:	7831      	ldrb	r1, [r6, #0]
 8029d1a:	9b04      	ldr	r3, [sp, #16]
 8029d1c:	8822      	ldrh	r2, [r4, #0]
 8029d1e:	9300      	str	r3, [sp, #0]
 8029d20:	f001 010f 	and.w	r1, r1, #15
 8029d24:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8029d28:	463b      	mov	r3, r7
 8029d2a:	4429      	add	r1, r5
 8029d2c:	4650      	mov	r0, sl
 8029d2e:	f7ff ff57 	bl	8029be0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8029d32:	9b03      	ldr	r3, [sp, #12]
 8029d34:	f824 0b02 	strh.w	r0, [r4], #2
 8029d38:	f106 0801 	add.w	r8, r6, #1
 8029d3c:	f103 3bff 	add.w	fp, r3, #4294967295
 8029d40:	f1bb 0f01 	cmp.w	fp, #1
 8029d44:	46a1      	mov	r9, r4
 8029d46:	f104 0404 	add.w	r4, r4, #4
 8029d4a:	dd27      	ble.n	8029d9c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8029d4c:	f898 1000 	ldrb.w	r1, [r8]
 8029d50:	9b04      	ldr	r3, [sp, #16]
 8029d52:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8029d56:	9300      	str	r3, [sp, #0]
 8029d58:	0909      	lsrs	r1, r1, #4
 8029d5a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8029d5e:	463b      	mov	r3, r7
 8029d60:	4429      	add	r1, r5
 8029d62:	4650      	mov	r0, sl
 8029d64:	f7ff ff3c 	bl	8029be0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8029d68:	f824 0c04 	strh.w	r0, [r4, #-4]
 8029d6c:	f818 1b01 	ldrb.w	r1, [r8], #1
 8029d70:	9b04      	ldr	r3, [sp, #16]
 8029d72:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8029d76:	9300      	str	r3, [sp, #0]
 8029d78:	f001 010f 	and.w	r1, r1, #15
 8029d7c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8029d80:	463b      	mov	r3, r7
 8029d82:	4429      	add	r1, r5
 8029d84:	4650      	mov	r0, sl
 8029d86:	f7ff ff2b 	bl	8029be0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8029d8a:	f1ab 0b02 	sub.w	fp, fp, #2
 8029d8e:	f824 0c02 	strh.w	r0, [r4, #-2]
 8029d92:	e7d5      	b.n	8029d40 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8029d94:	46b0      	mov	r8, r6
 8029d96:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8029d9a:	e7d1      	b.n	8029d40 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8029d9c:	d10f      	bne.n	8029dbe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8029d9e:	f898 1000 	ldrb.w	r1, [r8]
 8029da2:	9b04      	ldr	r3, [sp, #16]
 8029da4:	f8b9 2000 	ldrh.w	r2, [r9]
 8029da8:	9300      	str	r3, [sp, #0]
 8029daa:	0909      	lsrs	r1, r1, #4
 8029dac:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8029db0:	463b      	mov	r3, r7
 8029db2:	4429      	add	r1, r5
 8029db4:	4650      	mov	r0, sl
 8029db6:	f7ff ff13 	bl	8029be0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8029dba:	f829 0b02 	strh.w	r0, [r9], #2
 8029dbe:	9b08      	ldr	r3, [sp, #32]
 8029dc0:	9a05      	ldr	r2, [sp, #20]
 8029dc2:	881c      	ldrh	r4, [r3, #0]
 8029dc4:	9b03      	ldr	r3, [sp, #12]
 8029dc6:	1ae4      	subs	r4, r4, r3
 8029dc8:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8029dcc:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8029dd0:	4413      	add	r3, r2
 8029dd2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8029dd4:	fb93 f3f2 	sdiv	r3, r3, r2
 8029dd8:	441e      	add	r6, r3
 8029dda:	e796      	b.n	8029d0a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8029ddc:	4f46      	ldr	r7, [pc, #280]	; (8029ef8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8029dde:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8029de2:	42a3      	cmp	r3, r4
 8029de4:	d97c      	bls.n	8029ee0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8029de6:	9a06      	ldr	r2, [sp, #24]
 8029de8:	2a00      	cmp	r2, #0
 8029dea:	d054      	beq.n	8029e96 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8029dec:	7830      	ldrb	r0, [r6, #0]
 8029dee:	f000 000f 	and.w	r0, r0, #15
 8029df2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8029df6:	eb05 0e00 	add.w	lr, r5, r0
 8029dfa:	5c28      	ldrb	r0, [r5, r0]
 8029dfc:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8029e00:	f89e e001 	ldrb.w	lr, [lr, #1]
 8029e04:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8029e08:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8029e0c:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8029e10:	ea42 020e 	orr.w	r2, r2, lr
 8029e14:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8029e18:	f824 2b02 	strh.w	r2, [r4], #2
 8029e1c:	9a03      	ldr	r2, [sp, #12]
 8029e1e:	1c71      	adds	r1, r6, #1
 8029e20:	f102 3eff 	add.w	lr, r2, #4294967295
 8029e24:	f1be 0f01 	cmp.w	lr, #1
 8029e28:	4620      	mov	r0, r4
 8029e2a:	f104 0404 	add.w	r4, r4, #4
 8029e2e:	dd36      	ble.n	8029e9e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8029e30:	7808      	ldrb	r0, [r1, #0]
 8029e32:	0900      	lsrs	r0, r0, #4
 8029e34:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8029e38:	eb05 0a00 	add.w	sl, r5, r0
 8029e3c:	f1ae 0e02 	sub.w	lr, lr, #2
 8029e40:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8029e44:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8029e48:	00d2      	lsls	r2, r2, #3
 8029e4a:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8029e4e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8029e52:	ea49 0202 	orr.w	r2, r9, r2
 8029e56:	f815 9000 	ldrb.w	r9, [r5, r0]
 8029e5a:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8029e5e:	f824 2c04 	strh.w	r2, [r4, #-4]
 8029e62:	f811 0b01 	ldrb.w	r0, [r1], #1
 8029e66:	f000 000f 	and.w	r0, r0, #15
 8029e6a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8029e6e:	eb05 0a00 	add.w	sl, r5, r0
 8029e72:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8029e76:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8029e7a:	00d2      	lsls	r2, r2, #3
 8029e7c:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8029e80:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8029e84:	ea49 0202 	orr.w	r2, r9, r2
 8029e88:	f815 9000 	ldrb.w	r9, [r5, r0]
 8029e8c:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8029e90:	f824 2c02 	strh.w	r2, [r4, #-2]
 8029e94:	e7c6      	b.n	8029e24 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8029e96:	4631      	mov	r1, r6
 8029e98:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8029e9c:	e7c2      	b.n	8029e24 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8029e9e:	d111      	bne.n	8029ec4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8029ea0:	7809      	ldrb	r1, [r1, #0]
 8029ea2:	0909      	lsrs	r1, r1, #4
 8029ea4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8029ea8:	186c      	adds	r4, r5, r1
 8029eaa:	5c69      	ldrb	r1, [r5, r1]
 8029eac:	78a2      	ldrb	r2, [r4, #2]
 8029eae:	7864      	ldrb	r4, [r4, #1]
 8029eb0:	00e4      	lsls	r4, r4, #3
 8029eb2:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8029eb6:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8029eba:	4322      	orrs	r2, r4
 8029ebc:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8029ec0:	f820 2b02 	strh.w	r2, [r0], #2
 8029ec4:	9a03      	ldr	r2, [sp, #12]
 8029ec6:	f8bc 4000 	ldrh.w	r4, [ip]
 8029eca:	9905      	ldr	r1, [sp, #20]
 8029ecc:	1aa4      	subs	r4, r4, r2
 8029ece:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8029ed2:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8029ed6:	440a      	add	r2, r1
 8029ed8:	fb92 f2f8 	sdiv	r2, r2, r8
 8029edc:	4416      	add	r6, r2
 8029ede:	e780      	b.n	8029de2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8029ee0:	4b03      	ldr	r3, [pc, #12]	; (8029ef0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8029ee2:	6818      	ldr	r0, [r3, #0]
 8029ee4:	6803      	ldr	r3, [r0, #0]
 8029ee6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8029ee8:	4798      	blx	r3
 8029eea:	b00f      	add	sp, #60	; 0x3c
 8029eec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029ef0:	2000224c 	.word	0x2000224c
 8029ef4:	20002246 	.word	0x20002246
 8029ef8:	fffff800 	.word	0xfffff800

08029efc <CRC_Lock>:
 8029efc:	b530      	push	{r4, r5, lr}
 8029efe:	4a20      	ldr	r2, [pc, #128]	; (8029f80 <CRC_Lock+0x84>)
 8029f00:	6813      	ldr	r3, [r2, #0]
 8029f02:	f023 0301 	bic.w	r3, r3, #1
 8029f06:	6013      	str	r3, [r2, #0]
 8029f08:	4b1e      	ldr	r3, [pc, #120]	; (8029f84 <CRC_Lock+0x88>)
 8029f0a:	681a      	ldr	r2, [r3, #0]
 8029f0c:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8029f10:	4022      	ands	r2, r4
 8029f12:	f24c 2540 	movw	r5, #49728	; 0xc240
 8029f16:	42aa      	cmp	r2, r5
 8029f18:	d005      	beq.n	8029f26 <CRC_Lock+0x2a>
 8029f1a:	681b      	ldr	r3, [r3, #0]
 8029f1c:	f24c 2270 	movw	r2, #49776	; 0xc270
 8029f20:	4023      	ands	r3, r4
 8029f22:	4293      	cmp	r3, r2
 8029f24:	d124      	bne.n	8029f70 <CRC_Lock+0x74>
 8029f26:	4b18      	ldr	r3, [pc, #96]	; (8029f88 <CRC_Lock+0x8c>)
 8029f28:	681b      	ldr	r3, [r3, #0]
 8029f2a:	bb0b      	cbnz	r3, 8029f70 <CRC_Lock+0x74>
 8029f2c:	4b17      	ldr	r3, [pc, #92]	; (8029f8c <CRC_Lock+0x90>)
 8029f2e:	681a      	ldr	r2, [r3, #0]
 8029f30:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8029f34:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8029f38:	d00d      	beq.n	8029f56 <CRC_Lock+0x5a>
 8029f3a:	681a      	ldr	r2, [r3, #0]
 8029f3c:	f240 4483 	movw	r4, #1155	; 0x483
 8029f40:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8029f44:	42a2      	cmp	r2, r4
 8029f46:	d006      	beq.n	8029f56 <CRC_Lock+0x5a>
 8029f48:	681b      	ldr	r3, [r3, #0]
 8029f4a:	f240 4285 	movw	r2, #1157	; 0x485
 8029f4e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8029f52:	4293      	cmp	r3, r2
 8029f54:	d10c      	bne.n	8029f70 <CRC_Lock+0x74>
 8029f56:	4b0e      	ldr	r3, [pc, #56]	; (8029f90 <CRC_Lock+0x94>)
 8029f58:	2201      	movs	r2, #1
 8029f5a:	601a      	str	r2, [r3, #0]
 8029f5c:	681a      	ldr	r2, [r3, #0]
 8029f5e:	2a00      	cmp	r2, #0
 8029f60:	d1fc      	bne.n	8029f5c <CRC_Lock+0x60>
 8029f62:	4b0c      	ldr	r3, [pc, #48]	; (8029f94 <CRC_Lock+0x98>)
 8029f64:	6018      	str	r0, [r3, #0]
 8029f66:	6818      	ldr	r0, [r3, #0]
 8029f68:	1a43      	subs	r3, r0, r1
 8029f6a:	4258      	negs	r0, r3
 8029f6c:	4158      	adcs	r0, r3
 8029f6e:	bd30      	pop	{r4, r5, pc}
 8029f70:	4b09      	ldr	r3, [pc, #36]	; (8029f98 <CRC_Lock+0x9c>)
 8029f72:	2201      	movs	r2, #1
 8029f74:	601a      	str	r2, [r3, #0]
 8029f76:	681a      	ldr	r2, [r3, #0]
 8029f78:	2a00      	cmp	r2, #0
 8029f7a:	d1fc      	bne.n	8029f76 <CRC_Lock+0x7a>
 8029f7c:	4b07      	ldr	r3, [pc, #28]	; (8029f9c <CRC_Lock+0xa0>)
 8029f7e:	e7f1      	b.n	8029f64 <CRC_Lock+0x68>
 8029f80:	e0002000 	.word	0xe0002000
 8029f84:	e000ed00 	.word	0xe000ed00
 8029f88:	e0042000 	.word	0xe0042000
 8029f8c:	5c001000 	.word	0x5c001000
 8029f90:	58024c08 	.word	0x58024c08
 8029f94:	58024c00 	.word	0x58024c00
 8029f98:	40023008 	.word	0x40023008
 8029f9c:	40023000 	.word	0x40023000

08029fa0 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8029fa0:	6101      	str	r1, [r0, #16]
 8029fa2:	4770      	bx	lr

08029fa4 <_ZN8touchgfx8Gestures4tickEv>:
 8029fa4:	7b83      	ldrb	r3, [r0, #14]
 8029fa6:	b14b      	cbz	r3, 8029fbc <_ZN8touchgfx8Gestures4tickEv+0x18>
 8029fa8:	8903      	ldrh	r3, [r0, #8]
 8029faa:	3301      	adds	r3, #1
 8029fac:	b29b      	uxth	r3, r3
 8029fae:	2b07      	cmp	r3, #7
 8029fb0:	8103      	strh	r3, [r0, #8]
 8029fb2:	bf81      	itttt	hi
 8029fb4:	2300      	movhi	r3, #0
 8029fb6:	8143      	strhhi	r3, [r0, #10]
 8029fb8:	8183      	strhhi	r3, [r0, #12]
 8029fba:	7383      	strbhi	r3, [r0, #14]
 8029fbc:	4770      	bx	lr
	...

08029fc0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8029fc0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8029fc4:	4698      	mov	r8, r3
 8029fc6:	8883      	ldrh	r3, [r0, #4]
 8029fc8:	f8ad 3006 	strh.w	r3, [sp, #6]
 8029fcc:	eba8 0303 	sub.w	r3, r8, r3
 8029fd0:	b21b      	sxth	r3, r3
 8029fd2:	4604      	mov	r4, r0
 8029fd4:	2b00      	cmp	r3, #0
 8029fd6:	4617      	mov	r7, r2
 8029fd8:	4a18      	ldr	r2, [pc, #96]	; (802a03c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8029fda:	9200      	str	r2, [sp, #0]
 8029fdc:	bfb8      	it	lt
 8029fde:	425b      	neglt	r3, r3
 8029fe0:	8aa2      	ldrh	r2, [r4, #20]
 8029fe2:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8029fe6:	f8ad 800a 	strh.w	r8, [sp, #10]
 8029fea:	b21b      	sxth	r3, r3
 8029fec:	460e      	mov	r6, r1
 8029fee:	4293      	cmp	r3, r2
 8029ff0:	88c1      	ldrh	r1, [r0, #6]
 8029ff2:	f8ad 1008 	strh.w	r1, [sp, #8]
 8029ff6:	f04f 0000 	mov.w	r0, #0
 8029ffa:	f88d 0004 	strb.w	r0, [sp, #4]
 8029ffe:	f8ad 500c 	strh.w	r5, [sp, #12]
 802a002:	dc07      	bgt.n	802a014 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 802a004:	1a69      	subs	r1, r5, r1
 802a006:	b209      	sxth	r1, r1
 802a008:	2900      	cmp	r1, #0
 802a00a:	bfb8      	it	lt
 802a00c:	4249      	neglt	r1, r1
 802a00e:	b209      	sxth	r1, r1
 802a010:	428a      	cmp	r2, r1
 802a012:	da10      	bge.n	802a036 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 802a014:	6920      	ldr	r0, [r4, #16]
 802a016:	6803      	ldr	r3, [r0, #0]
 802a018:	4669      	mov	r1, sp
 802a01a:	685b      	ldr	r3, [r3, #4]
 802a01c:	4798      	blx	r3
 802a01e:	eba8 0606 	sub.w	r6, r8, r6
 802a022:	2300      	movs	r3, #0
 802a024:	1bef      	subs	r7, r5, r7
 802a026:	2001      	movs	r0, #1
 802a028:	8123      	strh	r3, [r4, #8]
 802a02a:	8166      	strh	r6, [r4, #10]
 802a02c:	81a7      	strh	r7, [r4, #12]
 802a02e:	f8a4 8004 	strh.w	r8, [r4, #4]
 802a032:	80e5      	strh	r5, [r4, #6]
 802a034:	73a0      	strb	r0, [r4, #14]
 802a036:	b004      	add	sp, #16
 802a038:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802a03c:	0802fa98 	.word	0x0802fa98

0802a040 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 802a040:	b5f0      	push	{r4, r5, r6, r7, lr}
 802a042:	461e      	mov	r6, r3
 802a044:	1e4b      	subs	r3, r1, #1
 802a046:	2b01      	cmp	r3, #1
 802a048:	b085      	sub	sp, #20
 802a04a:	4604      	mov	r4, r0
 802a04c:	460d      	mov	r5, r1
 802a04e:	4617      	mov	r7, r2
 802a050:	d84b      	bhi.n	802a0ea <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 802a052:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 802a056:	1cd3      	adds	r3, r2, #3
 802a058:	b29b      	uxth	r3, r3
 802a05a:	2b06      	cmp	r3, #6
 802a05c:	d916      	bls.n	802a08c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 802a05e:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 802a100 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 802a062:	f8cd c004 	str.w	ip, [sp, #4]
 802a066:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802a06a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802a06e:	6900      	ldr	r0, [r0, #16]
 802a070:	f8ad 100c 	strh.w	r1, [sp, #12]
 802a074:	f04f 0c00 	mov.w	ip, #0
 802a078:	f88d c008 	strb.w	ip, [sp, #8]
 802a07c:	f8ad 200a 	strh.w	r2, [sp, #10]
 802a080:	f8ad 300e 	strh.w	r3, [sp, #14]
 802a084:	6803      	ldr	r3, [r0, #0]
 802a086:	a901      	add	r1, sp, #4
 802a088:	689b      	ldr	r3, [r3, #8]
 802a08a:	4798      	blx	r3
 802a08c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802a090:	1cd3      	adds	r3, r2, #3
 802a092:	b29b      	uxth	r3, r3
 802a094:	2b06      	cmp	r3, #6
 802a096:	d916      	bls.n	802a0c6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802a098:	f8df c064 	ldr.w	ip, [pc, #100]	; 802a100 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 802a09c:	f8cd c004 	str.w	ip, [sp, #4]
 802a0a0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802a0a4:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802a0a8:	6920      	ldr	r0, [r4, #16]
 802a0aa:	f8ad 100c 	strh.w	r1, [sp, #12]
 802a0ae:	f04f 0c01 	mov.w	ip, #1
 802a0b2:	f88d c008 	strb.w	ip, [sp, #8]
 802a0b6:	f8ad 200a 	strh.w	r2, [sp, #10]
 802a0ba:	f8ad 300e 	strh.w	r3, [sp, #14]
 802a0be:	6803      	ldr	r3, [r0, #0]
 802a0c0:	a901      	add	r1, sp, #4
 802a0c2:	689b      	ldr	r3, [r3, #8]
 802a0c4:	4798      	blx	r3
 802a0c6:	4b0d      	ldr	r3, [pc, #52]	; (802a0fc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 802a0c8:	9301      	str	r3, [sp, #4]
 802a0ca:	6920      	ldr	r0, [r4, #16]
 802a0cc:	f88d 5008 	strb.w	r5, [sp, #8]
 802a0d0:	2300      	movs	r3, #0
 802a0d2:	f8ad 700a 	strh.w	r7, [sp, #10]
 802a0d6:	f8ad 600c 	strh.w	r6, [sp, #12]
 802a0da:	f8ad 300e 	strh.w	r3, [sp, #14]
 802a0de:	6803      	ldr	r3, [r0, #0]
 802a0e0:	a901      	add	r1, sp, #4
 802a0e2:	681b      	ldr	r3, [r3, #0]
 802a0e4:	4798      	blx	r3
 802a0e6:	b005      	add	sp, #20
 802a0e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802a0ea:	2900      	cmp	r1, #0
 802a0ec:	d1eb      	bne.n	802a0c6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802a0ee:	80a2      	strh	r2, [r4, #4]
 802a0f0:	80c6      	strh	r6, [r0, #6]
 802a0f2:	60a1      	str	r1, [r4, #8]
 802a0f4:	81a1      	strh	r1, [r4, #12]
 802a0f6:	73a1      	strb	r1, [r4, #14]
 802a0f8:	e7e5      	b.n	802a0c6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802a0fa:	bf00      	nop
 802a0fc:	0802fa84 	.word	0x0802fa84
 802a100:	0802faac 	.word	0x0802faac

0802a104 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 802a104:	10c9      	asrs	r1, r1, #3
 802a106:	2900      	cmp	r1, #0
 802a108:	bfb8      	it	lt
 802a10a:	4249      	neglt	r1, r1
 802a10c:	2801      	cmp	r0, #1
 802a10e:	d108      	bne.n	802a122 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 802a110:	f3c1 0008 	ubfx	r0, r1, #0, #9
 802a114:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 802a118:	4601      	mov	r1, r0
 802a11a:	dd02      	ble.n	802a122 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 802a11c:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 802a120:	4770      	bx	lr
 802a122:	29ff      	cmp	r1, #255	; 0xff
 802a124:	bfa8      	it	ge
 802a126:	21ff      	movge	r1, #255	; 0xff
 802a128:	4608      	mov	r0, r1
 802a12a:	4770      	bx	lr

0802a12c <_ZN8touchgfx10Rasterizer6lineToEii>:
 802a12c:	b410      	push	{r4}
 802a12e:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 802a132:	429c      	cmp	r4, r3
 802a134:	d803      	bhi.n	802a13e <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 802a136:	f85d 4b04 	ldr.w	r4, [sp], #4
 802a13a:	f7ed ba23 	b.w	8017584 <_ZN8touchgfx7Outline6lineToEii>
 802a13e:	f85d 4b04 	ldr.w	r4, [sp], #4
 802a142:	4770      	bx	lr

0802a144 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 802a144:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a148:	b08b      	sub	sp, #44	; 0x2c
 802a14a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 802a14e:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 802a152:	9308      	str	r3, [sp, #32]
 802a154:	4606      	mov	r6, r0
 802a156:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 802a15a:	9309      	str	r3, [sp, #36]	; 0x24
 802a15c:	468a      	mov	sl, r1
 802a15e:	f7ed fb7e 	bl	801785e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 802a162:	68b5      	ldr	r5, [r6, #8]
 802a164:	4604      	mov	r4, r0
 802a166:	2d00      	cmp	r5, #0
 802a168:	d044      	beq.n	802a1f4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802a16a:	6873      	ldr	r3, [r6, #4]
 802a16c:	42ab      	cmp	r3, r5
 802a16e:	d33d      	bcc.n	802a1ec <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 802a170:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 802a174:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 802a178:	eb02 0b03 	add.w	fp, r2, r3
 802a17c:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 802a180:	fb02 1203 	mla	r2, r2, r3, r1
 802a184:	9205      	str	r2, [sp, #20]
 802a186:	1e6a      	subs	r2, r5, #1
 802a188:	9204      	str	r2, [sp, #16]
 802a18a:	f04f 0800 	mov.w	r8, #0
 802a18e:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 802a192:	f9b4 7000 	ldrsh.w	r7, [r4]
 802a196:	454b      	cmp	r3, r9
 802a198:	463a      	mov	r2, r7
 802a19a:	d008      	beq.n	802a1ae <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 802a19c:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 802a1a0:	eb03 0b09 	add.w	fp, r3, r9
 802a1a4:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 802a1a8:	fb03 1309 	mla	r3, r3, r9, r1
 802a1ac:	9305      	str	r3, [sp, #20]
 802a1ae:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 802a1b2:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 802a1b6:	4498      	add	r8, r3
 802a1b8:	9b04      	ldr	r3, [sp, #16]
 802a1ba:	3b01      	subs	r3, #1
 802a1bc:	9304      	str	r3, [sp, #16]
 802a1be:	9b04      	ldr	r3, [sp, #16]
 802a1c0:	3301      	adds	r3, #1
 802a1c2:	d015      	beq.n	802a1f0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 802a1c4:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 802a1c8:	42bb      	cmp	r3, r7
 802a1ca:	d117      	bne.n	802a1fc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 802a1cc:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 802a1d0:	9b04      	ldr	r3, [sp, #16]
 802a1d2:	4548      	cmp	r0, r9
 802a1d4:	f103 33ff 	add.w	r3, r3, #4294967295
 802a1d8:	d17f      	bne.n	802a2da <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 802a1da:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 802a1de:	4401      	add	r1, r0
 802a1e0:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 802a1e4:	4480      	add	r8, r0
 802a1e6:	e7e9      	b.n	802a1bc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 802a1e8:	461f      	mov	r7, r3
 802a1ea:	e044      	b.n	802a276 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 802a1ec:	2000      	movs	r0, #0
 802a1ee:	e002      	b.n	802a1f6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 802a1f0:	2900      	cmp	r1, #0
 802a1f2:	d16f      	bne.n	802a2d4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 802a1f4:	2001      	movs	r0, #1
 802a1f6:	b00b      	add	sp, #44	; 0x2c
 802a1f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a1fc:	2900      	cmp	r1, #0
 802a1fe:	d030      	beq.n	802a262 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 802a200:	2f00      	cmp	r7, #0
 802a202:	db29      	blt.n	802a258 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 802a204:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 802a208:	42bb      	cmp	r3, r7
 802a20a:	dd25      	ble.n	802a258 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 802a20c:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 802a210:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 802a214:	f7ff ff76 	bl	802a104 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 802a218:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802a21a:	fb10 f003 	smulbb	r0, r0, r3
 802a21e:	b280      	uxth	r0, r0
 802a220:	1c41      	adds	r1, r0, #1
 802a222:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802a226:	1209      	asrs	r1, r1, #8
 802a228:	f011 0fff 	tst.w	r1, #255	; 0xff
 802a22c:	d014      	beq.n	802a258 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 802a22e:	9808      	ldr	r0, [sp, #32]
 802a230:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 802a232:	b2c9      	uxtb	r1, r1
 802a234:	b2ba      	uxth	r2, r7
 802a236:	9102      	str	r1, [sp, #8]
 802a238:	2101      	movs	r1, #1
 802a23a:	4413      	add	r3, r2
 802a23c:	9101      	str	r1, [sp, #4]
 802a23e:	4402      	add	r2, r0
 802a240:	fa0f f18b 	sxth.w	r1, fp
 802a244:	f8da 0000 	ldr.w	r0, [sl]
 802a248:	9100      	str	r1, [sp, #0]
 802a24a:	6941      	ldr	r1, [r0, #20]
 802a24c:	b21b      	sxth	r3, r3
 802a24e:	460d      	mov	r5, r1
 802a250:	b212      	sxth	r2, r2
 802a252:	9905      	ldr	r1, [sp, #20]
 802a254:	4650      	mov	r0, sl
 802a256:	47a8      	blx	r5
 802a258:	9b04      	ldr	r3, [sp, #16]
 802a25a:	3301      	adds	r3, #1
 802a25c:	f107 0201 	add.w	r2, r7, #1
 802a260:	d0c8      	beq.n	802a1f4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802a262:	f9b4 7000 	ldrsh.w	r7, [r4]
 802a266:	1abb      	subs	r3, r7, r2
 802a268:	2b00      	cmp	r3, #0
 802a26a:	dd31      	ble.n	802a2d0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802a26c:	2a00      	cmp	r2, #0
 802a26e:	dabb      	bge.n	802a1e8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 802a270:	2f00      	cmp	r7, #0
 802a272:	dd2d      	ble.n	802a2d0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802a274:	2200      	movs	r2, #0
 802a276:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 802a27a:	19d1      	adds	r1, r2, r7
 802a27c:	4299      	cmp	r1, r3
 802a27e:	db02      	blt.n	802a286 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 802a280:	1a9f      	subs	r7, r3, r2
 802a282:	2f00      	cmp	r7, #0
 802a284:	dd24      	ble.n	802a2d0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802a286:	ea4f 1188 	mov.w	r1, r8, lsl #6
 802a28a:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 802a28e:	f7ff ff39 	bl	802a104 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 802a292:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802a294:	fb10 f003 	smulbb	r0, r0, r3
 802a298:	b280      	uxth	r0, r0
 802a29a:	1c41      	adds	r1, r0, #1
 802a29c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802a2a0:	1209      	asrs	r1, r1, #8
 802a2a2:	f011 0fff 	tst.w	r1, #255	; 0xff
 802a2a6:	d013      	beq.n	802a2d0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802a2a8:	9808      	ldr	r0, [sp, #32]
 802a2aa:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 802a2ac:	b292      	uxth	r2, r2
 802a2ae:	b2c9      	uxtb	r1, r1
 802a2b0:	4413      	add	r3, r2
 802a2b2:	9102      	str	r1, [sp, #8]
 802a2b4:	4402      	add	r2, r0
 802a2b6:	b23f      	sxth	r7, r7
 802a2b8:	f8da 0000 	ldr.w	r0, [sl]
 802a2bc:	9701      	str	r7, [sp, #4]
 802a2be:	fa0f f18b 	sxth.w	r1, fp
 802a2c2:	9100      	str	r1, [sp, #0]
 802a2c4:	6947      	ldr	r7, [r0, #20]
 802a2c6:	9905      	ldr	r1, [sp, #20]
 802a2c8:	b21b      	sxth	r3, r3
 802a2ca:	b212      	sxth	r2, r2
 802a2cc:	4650      	mov	r0, sl
 802a2ce:	47b8      	blx	r7
 802a2d0:	464b      	mov	r3, r9
 802a2d2:	e75c      	b.n	802a18e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 802a2d4:	2f00      	cmp	r7, #0
 802a2d6:	da95      	bge.n	802a204 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 802a2d8:	e78c      	b.n	802a1f4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802a2da:	2900      	cmp	r1, #0
 802a2dc:	d0f8      	beq.n	802a2d0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802a2de:	e78f      	b.n	802a200 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

0802a2e0 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 802a2e0:	4b4b      	ldr	r3, [pc, #300]	; (802a410 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 802a2e2:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 802a2e6:	2500      	movs	r5, #0
 802a2e8:	f100 0620 	add.w	r6, r0, #32
 802a2ec:	4604      	mov	r4, r0
 802a2ee:	e9c0 3100 	strd	r3, r1, [r0]
 802a2f2:	e9c0 5502 	strd	r5, r5, [r0, #8]
 802a2f6:	e9c0 5504 	strd	r5, r5, [r0, #16]
 802a2fa:	e9c0 5506 	strd	r5, r5, [r0, #24]
 802a2fe:	f100 0718 	add.w	r7, r0, #24
 802a302:	4630      	mov	r0, r6
 802a304:	4690      	mov	r8, r2
 802a306:	f7ec fc75 	bl	8016bf4 <_ZN8touchgfx7OutlineC1Ev>
 802a30a:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 802a30e:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 802a312:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 802a316:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 802a31a:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 802a31e:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 802a322:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 802a326:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 802a32a:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 802a32e:	f9b8 2000 	ldrsh.w	r2, [r8]
 802a332:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 802a336:	f8d4 c004 	ldr.w	ip, [r4, #4]
 802a33a:	9500      	str	r5, [sp, #0]
 802a33c:	4410      	add	r0, r2
 802a33e:	b280      	uxth	r0, r0
 802a340:	fa0f fa80 	sxth.w	sl, r0
 802a344:	45aa      	cmp	sl, r5
 802a346:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 802a34a:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 802a34e:	dd5c      	ble.n	802a40a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 802a350:	4591      	cmp	r9, r2
 802a352:	dd5a      	ble.n	802a40a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 802a354:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 802a358:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 802a35c:	440b      	add	r3, r1
 802a35e:	b29b      	uxth	r3, r3
 802a360:	b21d      	sxth	r5, r3
 802a362:	2d00      	cmp	r5, #0
 802a364:	dd51      	ble.n	802a40a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 802a366:	458e      	cmp	lr, r1
 802a368:	dd4f      	ble.n	802a40a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 802a36a:	45d1      	cmp	r9, sl
 802a36c:	bfb8      	it	lt
 802a36e:	fa1f f089 	uxthlt.w	r0, r9
 802a372:	45ae      	cmp	lr, r5
 802a374:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 802a378:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 802a37c:	bfb8      	it	lt
 802a37e:	fa1f f38e 	uxthlt.w	r3, lr
 802a382:	1a80      	subs	r0, r0, r2
 802a384:	1a5b      	subs	r3, r3, r1
 802a386:	f8ad 0004 	strh.w	r0, [sp, #4]
 802a38a:	f8ad 3006 	strh.w	r3, [sp, #6]
 802a38e:	f8ad 2000 	strh.w	r2, [sp]
 802a392:	f8ad 1002 	strh.w	r1, [sp, #2]
 802a396:	466d      	mov	r5, sp
 802a398:	e895 0003 	ldmia.w	r5, {r0, r1}
 802a39c:	e887 0003 	stmia.w	r7, {r0, r1}
 802a3a0:	f8dc 3000 	ldr.w	r3, [ip]
 802a3a4:	4660      	mov	r0, ip
 802a3a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802a3a8:	4639      	mov	r1, r7
 802a3aa:	4798      	blx	r3
 802a3ac:	6861      	ldr	r1, [r4, #4]
 802a3ae:	4628      	mov	r0, r5
 802a3b0:	3104      	adds	r1, #4
 802a3b2:	f7ee fe13 	bl	8018fdc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802a3b6:	4638      	mov	r0, r7
 802a3b8:	f7ee fdcc 	bl	8018f54 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802a3bc:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 802a3c0:	f8bd 2000 	ldrh.w	r2, [sp]
 802a3c4:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 802a3c8:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 802a3cc:	4630      	mov	r0, r6
 802a3ce:	f7ec fbf5 	bl	8016bbc <_ZN8touchgfx7Outline5resetEv>
 802a3d2:	f9bd 3000 	ldrsh.w	r3, [sp]
 802a3d6:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 802a3da:	015b      	lsls	r3, r3, #5
 802a3dc:	60a3      	str	r3, [r4, #8]
 802a3de:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 802a3e2:	015b      	lsls	r3, r3, #5
 802a3e4:	60e3      	str	r3, [r4, #12]
 802a3e6:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 802a3ea:	015b      	lsls	r3, r3, #5
 802a3ec:	6123      	str	r3, [r4, #16]
 802a3ee:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 802a3f2:	015b      	lsls	r3, r3, #5
 802a3f4:	6163      	str	r3, [r4, #20]
 802a3f6:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 802a3fa:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 802a3fe:	4620      	mov	r0, r4
 802a400:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 802a404:	b002      	add	sp, #8
 802a406:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802a40a:	2300      	movs	r3, #0
 802a40c:	9301      	str	r3, [sp, #4]
 802a40e:	e7c2      	b.n	802a396 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 802a410:	0802fdd0 	.word	0x0802fdd0

0802a414 <_ZN8touchgfx6Canvas5closeEv>:
 802a414:	b538      	push	{r3, r4, r5, lr}
 802a416:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 802a41a:	4604      	mov	r4, r0
 802a41c:	b193      	cbz	r3, 802a444 <_ZN8touchgfx6Canvas5closeEv+0x30>
 802a41e:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 802a422:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 802a426:	4213      	tst	r3, r2
 802a428:	d10c      	bne.n	802a444 <_ZN8touchgfx6Canvas5closeEv+0x30>
 802a42a:	f100 0520 	add.w	r5, r0, #32
 802a42e:	b123      	cbz	r3, 802a43a <_ZN8touchgfx6Canvas5closeEv+0x26>
 802a430:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 802a434:	4628      	mov	r0, r5
 802a436:	f7ff fe79 	bl	802a12c <_ZN8touchgfx10Rasterizer6lineToEii>
 802a43a:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 802a43e:	4628      	mov	r0, r5
 802a440:	f7ff fe74 	bl	802a12c <_ZN8touchgfx10Rasterizer6lineToEii>
 802a444:	2300      	movs	r3, #0
 802a446:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802a44a:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 802a44e:	4298      	cmp	r0, r3
 802a450:	bf34      	ite	cc
 802a452:	2000      	movcc	r0, #0
 802a454:	2001      	movcs	r0, #1
 802a456:	bd38      	pop	{r3, r4, r5, pc}

0802a458 <_ZN8touchgfx6Canvas6renderEh>:
 802a458:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 802a45c:	4604      	mov	r4, r0
 802a45e:	6840      	ldr	r0, [r0, #4]
 802a460:	6803      	ldr	r3, [r0, #0]
 802a462:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 802a464:	460d      	mov	r5, r1
 802a466:	4798      	blx	r3
 802a468:	fb10 f105 	smulbb	r1, r0, r5
 802a46c:	b289      	uxth	r1, r1
 802a46e:	1c4d      	adds	r5, r1, #1
 802a470:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 802a474:	122d      	asrs	r5, r5, #8
 802a476:	f000 809d 	beq.w	802a5b4 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 802a47a:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 802a47e:	2b00      	cmp	r3, #0
 802a480:	f000 8098 	beq.w	802a5b4 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 802a484:	4620      	mov	r0, r4
 802a486:	f7ff ffc5 	bl	802a414 <_ZN8touchgfx6Canvas5closeEv>
 802a48a:	4607      	mov	r7, r0
 802a48c:	2800      	cmp	r0, #0
 802a48e:	d048      	beq.n	802a522 <_ZN8touchgfx6Canvas6renderEh+0xca>
 802a490:	6863      	ldr	r3, [r4, #4]
 802a492:	4e49      	ldr	r6, [pc, #292]	; (802a5b8 <_ZN8touchgfx6Canvas6renderEh+0x160>)
 802a494:	6a98      	ldr	r0, [r3, #40]	; 0x28
 802a496:	6837      	ldr	r7, [r6, #0]
 802a498:	6803      	ldr	r3, [r0, #0]
 802a49a:	689b      	ldr	r3, [r3, #8]
 802a49c:	4798      	blx	r3
 802a49e:	4601      	mov	r1, r0
 802a4a0:	4638      	mov	r0, r7
 802a4a2:	f7e9 fe03 	bl	80140ac <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 802a4a6:	4607      	mov	r7, r0
 802a4a8:	f7e0 fd6c 	bl	800af84 <_ZN8touchgfx3HAL3lcdEv>
 802a4ac:	6803      	ldr	r3, [r0, #0]
 802a4ae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 802a4b0:	4798      	blx	r3
 802a4b2:	4680      	mov	r8, r0
 802a4b4:	f7e0 fd66 	bl	800af84 <_ZN8touchgfx3HAL3lcdEv>
 802a4b8:	6803      	ldr	r3, [r0, #0]
 802a4ba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802a4bc:	4798      	blx	r3
 802a4be:	280b      	cmp	r0, #11
 802a4c0:	d85d      	bhi.n	802a57e <_ZN8touchgfx6Canvas6renderEh+0x126>
 802a4c2:	e8df f000 	tbb	[pc, r0]
 802a4c6:	5e53      	.short	0x5e53
 802a4c8:	325c066e 	.word	0x325c066e
 802a4cc:	67676742 	.word	0x67676742
 802a4d0:	6767      	.short	0x6767
 802a4d2:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802a4d6:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 802a4da:	2208      	movs	r2, #8
 802a4dc:	fb91 f2f2 	sdiv	r2, r1, r2
 802a4e0:	fb08 2303 	mla	r3, r8, r3, r2
 802a4e4:	441f      	add	r7, r3
 802a4e6:	424b      	negs	r3, r1
 802a4e8:	f003 0307 	and.w	r3, r3, #7
 802a4ec:	f001 0107 	and.w	r1, r1, #7
 802a4f0:	bf58      	it	pl
 802a4f2:	4259      	negpl	r1, r3
 802a4f4:	b2c9      	uxtb	r1, r1
 802a4f6:	b2ed      	uxtb	r5, r5
 802a4f8:	e9cd 1500 	strd	r1, r5, [sp]
 802a4fc:	6860      	ldr	r0, [r4, #4]
 802a4fe:	463a      	mov	r2, r7
 802a500:	6a81      	ldr	r1, [r0, #40]	; 0x28
 802a502:	fa0f f388 	sxth.w	r3, r8
 802a506:	f104 0020 	add.w	r0, r4, #32
 802a50a:	f7ff fe1b 	bl	802a144 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 802a50e:	6863      	ldr	r3, [r4, #4]
 802a510:	4607      	mov	r7, r0
 802a512:	6a98      	ldr	r0, [r3, #40]	; 0x28
 802a514:	6803      	ldr	r3, [r0, #0]
 802a516:	691b      	ldr	r3, [r3, #16]
 802a518:	4798      	blx	r3
 802a51a:	6830      	ldr	r0, [r6, #0]
 802a51c:	6803      	ldr	r3, [r0, #0]
 802a51e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802a520:	4798      	blx	r3
 802a522:	4638      	mov	r0, r7
 802a524:	b002      	add	sp, #8
 802a526:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802a52a:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802a52e:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 802a532:	2204      	movs	r2, #4
 802a534:	fb91 f2f2 	sdiv	r2, r1, r2
 802a538:	fb08 2303 	mla	r3, r8, r3, r2
 802a53c:	441f      	add	r7, r3
 802a53e:	424b      	negs	r3, r1
 802a540:	f003 0303 	and.w	r3, r3, #3
 802a544:	f001 0103 	and.w	r1, r1, #3
 802a548:	e7d2      	b.n	802a4f0 <_ZN8touchgfx6Canvas6renderEh+0x98>
 802a54a:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 802a54e:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802a552:	2900      	cmp	r1, #0
 802a554:	f04f 0202 	mov.w	r2, #2
 802a558:	fb91 f2f2 	sdiv	r2, r1, r2
 802a55c:	f001 0101 	and.w	r1, r1, #1
 802a560:	fb08 2303 	mla	r3, r8, r3, r2
 802a564:	441f      	add	r7, r3
 802a566:	bfb8      	it	lt
 802a568:	4249      	neglt	r1, r1
 802a56a:	e7c3      	b.n	802a4f4 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 802a56c:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802a570:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 802a574:	fb08 f303 	mul.w	r3, r8, r3
 802a578:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 802a57c:	441f      	add	r7, r3
 802a57e:	2100      	movs	r1, #0
 802a580:	e7b9      	b.n	802a4f6 <_ZN8touchgfx6Canvas6renderEh+0x9e>
 802a582:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802a586:	fb08 f203 	mul.w	r2, r8, r3
 802a58a:	8b23      	ldrh	r3, [r4, #24]
 802a58c:	2103      	movs	r1, #3
 802a58e:	fb13 2301 	smlabb	r3, r3, r1, r2
 802a592:	e7f3      	b.n	802a57c <_ZN8touchgfx6Canvas6renderEh+0x124>
 802a594:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802a598:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 802a59c:	fb08 2303 	mla	r3, r8, r3, r2
 802a5a0:	e7ec      	b.n	802a57c <_ZN8touchgfx6Canvas6renderEh+0x124>
 802a5a2:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802a5a6:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 802a5aa:	fb08 f303 	mul.w	r3, r8, r3
 802a5ae:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 802a5b2:	e7e3      	b.n	802a57c <_ZN8touchgfx6Canvas6renderEh+0x124>
 802a5b4:	2701      	movs	r7, #1
 802a5b6:	e7b4      	b.n	802a522 <_ZN8touchgfx6Canvas6renderEh+0xca>
 802a5b8:	2000224c 	.word	0x2000224c

0802a5bc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 802a5bc:	b510      	push	{r4, lr}
 802a5be:	4b07      	ldr	r3, [pc, #28]	; (802a5dc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 802a5c0:	781b      	ldrb	r3, [r3, #0]
 802a5c2:	2b01      	cmp	r3, #1
 802a5c4:	d108      	bne.n	802a5d8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 802a5c6:	6843      	ldr	r3, [r0, #4]
 802a5c8:	6814      	ldr	r4, [r2, #0]
 802a5ca:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 802a5ce:	680b      	ldr	r3, [r1, #0]
 802a5d0:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 802a5d4:	6013      	str	r3, [r2, #0]
 802a5d6:	600c      	str	r4, [r1, #0]
 802a5d8:	bd10      	pop	{r4, pc}
 802a5da:	bf00      	nop
 802a5dc:	20002244 	.word	0x20002244

0802a5e0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 802a5e0:	b513      	push	{r0, r1, r4, lr}
 802a5e2:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 802a5e6:	4604      	mov	r4, r0
 802a5e8:	e9cd 2100 	strd	r2, r1, [sp]
 802a5ec:	b9a3      	cbnz	r3, 802a618 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 802a5ee:	466a      	mov	r2, sp
 802a5f0:	a901      	add	r1, sp, #4
 802a5f2:	4620      	mov	r0, r4
 802a5f4:	f7ff ffe2 	bl	802a5bc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802a5f8:	68a3      	ldr	r3, [r4, #8]
 802a5fa:	9901      	ldr	r1, [sp, #4]
 802a5fc:	9a00      	ldr	r2, [sp, #0]
 802a5fe:	1ac9      	subs	r1, r1, r3
 802a600:	68e3      	ldr	r3, [r4, #12]
 802a602:	9101      	str	r1, [sp, #4]
 802a604:	1ad2      	subs	r2, r2, r3
 802a606:	2a00      	cmp	r2, #0
 802a608:	9200      	str	r2, [sp, #0]
 802a60a:	da0b      	bge.n	802a624 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 802a60c:	2301      	movs	r3, #1
 802a60e:	2900      	cmp	r1, #0
 802a610:	da0e      	bge.n	802a630 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 802a612:	f043 0304 	orr.w	r3, r3, #4
 802a616:	e013      	b.n	802a640 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 802a618:	f7ff fefc 	bl	802a414 <_ZN8touchgfx6Canvas5closeEv>
 802a61c:	2800      	cmp	r0, #0
 802a61e:	d1e6      	bne.n	802a5ee <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 802a620:	b002      	add	sp, #8
 802a622:	bd10      	pop	{r4, pc}
 802a624:	6963      	ldr	r3, [r4, #20]
 802a626:	429a      	cmp	r2, r3
 802a628:	bfac      	ite	ge
 802a62a:	2302      	movge	r3, #2
 802a62c:	2300      	movlt	r3, #0
 802a62e:	e7ee      	b.n	802a60e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 802a630:	6920      	ldr	r0, [r4, #16]
 802a632:	4281      	cmp	r1, r0
 802a634:	bfac      	ite	ge
 802a636:	2008      	movge	r0, #8
 802a638:	2000      	movlt	r0, #0
 802a63a:	4318      	orrs	r0, r3
 802a63c:	b2c3      	uxtb	r3, r0
 802a63e:	b158      	cbz	r0, 802a658 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 802a640:	2200      	movs	r2, #0
 802a642:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 802a646:	9901      	ldr	r1, [sp, #4]
 802a648:	9a00      	ldr	r2, [sp, #0]
 802a64a:	66a1      	str	r1, [r4, #104]	; 0x68
 802a64c:	66e2      	str	r2, [r4, #108]	; 0x6c
 802a64e:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 802a652:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 802a656:	e7e3      	b.n	802a620 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 802a658:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 802a65c:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 802a660:	4298      	cmp	r0, r3
 802a662:	d803      	bhi.n	802a66c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 802a664:	f104 0020 	add.w	r0, r4, #32
 802a668:	f7ec ffa6 	bl	80175b8 <_ZN8touchgfx7Outline6moveToEii>
 802a66c:	2301      	movs	r3, #1
 802a66e:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802a672:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802a676:	2300      	movs	r3, #0
 802a678:	e7e5      	b.n	802a646 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

0802a67a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 802a67a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802a67c:	ab02      	add	r3, sp, #8
 802a67e:	4604      	mov	r4, r0
 802a680:	f843 2d08 	str.w	r2, [r3, #-8]!
 802a684:	9101      	str	r1, [sp, #4]
 802a686:	461a      	mov	r2, r3
 802a688:	a901      	add	r1, sp, #4
 802a68a:	f7ff ff97 	bl	802a5bc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802a68e:	68a3      	ldr	r3, [r4, #8]
 802a690:	9901      	ldr	r1, [sp, #4]
 802a692:	9a00      	ldr	r2, [sp, #0]
 802a694:	1ac9      	subs	r1, r1, r3
 802a696:	68e3      	ldr	r3, [r4, #12]
 802a698:	9101      	str	r1, [sp, #4]
 802a69a:	1ad2      	subs	r2, r2, r3
 802a69c:	2a00      	cmp	r2, #0
 802a69e:	9200      	str	r2, [sp, #0]
 802a6a0:	db1c      	blt.n	802a6dc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 802a6a2:	6963      	ldr	r3, [r4, #20]
 802a6a4:	429a      	cmp	r2, r3
 802a6a6:	bfac      	ite	ge
 802a6a8:	2002      	movge	r0, #2
 802a6aa:	2000      	movlt	r0, #0
 802a6ac:	2900      	cmp	r1, #0
 802a6ae:	db17      	blt.n	802a6e0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 802a6b0:	6923      	ldr	r3, [r4, #16]
 802a6b2:	4299      	cmp	r1, r3
 802a6b4:	bfac      	ite	ge
 802a6b6:	2308      	movge	r3, #8
 802a6b8:	2300      	movlt	r3, #0
 802a6ba:	4303      	orrs	r3, r0
 802a6bc:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 802a6c0:	b2dd      	uxtb	r5, r3
 802a6c2:	b978      	cbnz	r0, 802a6e4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 802a6c4:	f104 0020 	add.w	r0, r4, #32
 802a6c8:	f7ff fd30 	bl	802a12c <_ZN8touchgfx10Rasterizer6lineToEii>
 802a6cc:	9b01      	ldr	r3, [sp, #4]
 802a6ce:	65e3      	str	r3, [r4, #92]	; 0x5c
 802a6d0:	9b00      	ldr	r3, [sp, #0]
 802a6d2:	6623      	str	r3, [r4, #96]	; 0x60
 802a6d4:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 802a6d8:	b002      	add	sp, #8
 802a6da:	bd70      	pop	{r4, r5, r6, pc}
 802a6dc:	2001      	movs	r0, #1
 802a6de:	e7e5      	b.n	802a6ac <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 802a6e0:	2304      	movs	r3, #4
 802a6e2:	e7ea      	b.n	802a6ba <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 802a6e4:	b113      	cbz	r3, 802a6ec <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 802a6e6:	ea10 0305 	ands.w	r3, r0, r5
 802a6ea:	d11c      	bne.n	802a726 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 802a6ec:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 802a6f0:	f104 0620 	add.w	r6, r4, #32
 802a6f4:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 802a6f8:	b98b      	cbnz	r3, 802a71e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 802a6fa:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 802a6fe:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 802a702:	4298      	cmp	r0, r3
 802a704:	d802      	bhi.n	802a70c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 802a706:	4630      	mov	r0, r6
 802a708:	f7ec ff56 	bl	80175b8 <_ZN8touchgfx7Outline6moveToEii>
 802a70c:	2301      	movs	r3, #1
 802a70e:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802a712:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802a716:	e9dd 2100 	ldrd	r2, r1, [sp]
 802a71a:	4630      	mov	r0, r6
 802a71c:	e7d4      	b.n	802a6c8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 802a71e:	4630      	mov	r0, r6
 802a720:	f7ff fd04 	bl	802a12c <_ZN8touchgfx10Rasterizer6lineToEii>
 802a724:	e7f7      	b.n	802a716 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 802a726:	461d      	mov	r5, r3
 802a728:	e7d0      	b.n	802a6cc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

0802a72c <_ZN8touchgfx6CanvasD1Ev>:
 802a72c:	b510      	push	{r4, lr}
 802a72e:	4b04      	ldr	r3, [pc, #16]	; (802a740 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 802a730:	4604      	mov	r4, r0
 802a732:	f840 3b20 	str.w	r3, [r0], #32
 802a736:	f7ec fa39 	bl	8016bac <_ZN8touchgfx7OutlineD1Ev>
 802a73a:	4620      	mov	r0, r4
 802a73c:	bd10      	pop	{r4, pc}
 802a73e:	bf00      	nop
 802a740:	0802fdd0 	.word	0x0802fdd0

0802a744 <_ZN8touchgfx6CanvasD0Ev>:
 802a744:	b510      	push	{r4, lr}
 802a746:	4604      	mov	r4, r0
 802a748:	f7ff fff0 	bl	802a72c <_ZN8touchgfx6CanvasD1Ev>
 802a74c:	4620      	mov	r0, r4
 802a74e:	2170      	movs	r1, #112	; 0x70
 802a750:	f000 f807 	bl	802a762 <_ZdlPvj>
 802a754:	4620      	mov	r0, r4
 802a756:	bd10      	pop	{r4, pc}

0802a758 <__aeabi_atexit>:
 802a758:	460b      	mov	r3, r1
 802a75a:	4601      	mov	r1, r0
 802a75c:	4618      	mov	r0, r3
 802a75e:	f000 bed1 	b.w	802b504 <__cxa_atexit>

0802a762 <_ZdlPvj>:
 802a762:	f000 b812 	b.w	802a78a <_ZdlPv>

0802a766 <__cxa_guard_acquire>:
 802a766:	6803      	ldr	r3, [r0, #0]
 802a768:	07db      	lsls	r3, r3, #31
 802a76a:	d406      	bmi.n	802a77a <__cxa_guard_acquire+0x14>
 802a76c:	7843      	ldrb	r3, [r0, #1]
 802a76e:	b103      	cbz	r3, 802a772 <__cxa_guard_acquire+0xc>
 802a770:	deff      	udf	#255	; 0xff
 802a772:	2301      	movs	r3, #1
 802a774:	7043      	strb	r3, [r0, #1]
 802a776:	4618      	mov	r0, r3
 802a778:	4770      	bx	lr
 802a77a:	2000      	movs	r0, #0
 802a77c:	4770      	bx	lr

0802a77e <__cxa_guard_release>:
 802a77e:	2301      	movs	r3, #1
 802a780:	6003      	str	r3, [r0, #0]
 802a782:	4770      	bx	lr

0802a784 <__cxa_pure_virtual>:
 802a784:	b508      	push	{r3, lr}
 802a786:	f000 f80f 	bl	802a7a8 <_ZSt9terminatev>

0802a78a <_ZdlPv>:
 802a78a:	f000 be07 	b.w	802b39c <free>

0802a78e <_ZN10__cxxabiv111__terminateEPFvvE>:
 802a78e:	b508      	push	{r3, lr}
 802a790:	4780      	blx	r0
 802a792:	f000 fdcf 	bl	802b334 <abort>
	...

0802a798 <_ZSt13get_terminatev>:
 802a798:	4b02      	ldr	r3, [pc, #8]	; (802a7a4 <_ZSt13get_terminatev+0xc>)
 802a79a:	6818      	ldr	r0, [r3, #0]
 802a79c:	f3bf 8f5b 	dmb	ish
 802a7a0:	4770      	bx	lr
 802a7a2:	bf00      	nop
 802a7a4:	20000098 	.word	0x20000098

0802a7a8 <_ZSt9terminatev>:
 802a7a8:	b508      	push	{r3, lr}
 802a7aa:	f7ff fff5 	bl	802a798 <_ZSt13get_terminatev>
 802a7ae:	f7ff ffee 	bl	802a78e <_ZN10__cxxabiv111__terminateEPFvvE>
	...

0802a7b4 <cosf>:
 802a7b4:	ee10 3a10 	vmov	r3, s0
 802a7b8:	b507      	push	{r0, r1, r2, lr}
 802a7ba:	4a1e      	ldr	r2, [pc, #120]	; (802a834 <cosf+0x80>)
 802a7bc:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a7c0:	4293      	cmp	r3, r2
 802a7c2:	dc06      	bgt.n	802a7d2 <cosf+0x1e>
 802a7c4:	eddf 0a1c 	vldr	s1, [pc, #112]	; 802a838 <cosf+0x84>
 802a7c8:	b003      	add	sp, #12
 802a7ca:	f85d eb04 	ldr.w	lr, [sp], #4
 802a7ce:	f000 b8ff 	b.w	802a9d0 <__kernel_cosf>
 802a7d2:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802a7d6:	db04      	blt.n	802a7e2 <cosf+0x2e>
 802a7d8:	ee30 0a40 	vsub.f32	s0, s0, s0
 802a7dc:	b003      	add	sp, #12
 802a7de:	f85d fb04 	ldr.w	pc, [sp], #4
 802a7e2:	4668      	mov	r0, sp
 802a7e4:	f000 f99a 	bl	802ab1c <__ieee754_rem_pio2f>
 802a7e8:	f000 0003 	and.w	r0, r0, #3
 802a7ec:	2801      	cmp	r0, #1
 802a7ee:	d009      	beq.n	802a804 <cosf+0x50>
 802a7f0:	2802      	cmp	r0, #2
 802a7f2:	d010      	beq.n	802a816 <cosf+0x62>
 802a7f4:	b9b0      	cbnz	r0, 802a824 <cosf+0x70>
 802a7f6:	eddd 0a01 	vldr	s1, [sp, #4]
 802a7fa:	ed9d 0a00 	vldr	s0, [sp]
 802a7fe:	f000 f8e7 	bl	802a9d0 <__kernel_cosf>
 802a802:	e7eb      	b.n	802a7dc <cosf+0x28>
 802a804:	eddd 0a01 	vldr	s1, [sp, #4]
 802a808:	ed9d 0a00 	vldr	s0, [sp]
 802a80c:	f000 f93e 	bl	802aa8c <__kernel_sinf>
 802a810:	eeb1 0a40 	vneg.f32	s0, s0
 802a814:	e7e2      	b.n	802a7dc <cosf+0x28>
 802a816:	eddd 0a01 	vldr	s1, [sp, #4]
 802a81a:	ed9d 0a00 	vldr	s0, [sp]
 802a81e:	f000 f8d7 	bl	802a9d0 <__kernel_cosf>
 802a822:	e7f5      	b.n	802a810 <cosf+0x5c>
 802a824:	eddd 0a01 	vldr	s1, [sp, #4]
 802a828:	ed9d 0a00 	vldr	s0, [sp]
 802a82c:	2001      	movs	r0, #1
 802a82e:	f000 f92d 	bl	802aa8c <__kernel_sinf>
 802a832:	e7d3      	b.n	802a7dc <cosf+0x28>
 802a834:	3f490fd8 	.word	0x3f490fd8
 802a838:	00000000 	.word	0x00000000

0802a83c <sinf>:
 802a83c:	ee10 3a10 	vmov	r3, s0
 802a840:	b507      	push	{r0, r1, r2, lr}
 802a842:	4a1f      	ldr	r2, [pc, #124]	; (802a8c0 <sinf+0x84>)
 802a844:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a848:	4293      	cmp	r3, r2
 802a84a:	dc07      	bgt.n	802a85c <sinf+0x20>
 802a84c:	eddf 0a1d 	vldr	s1, [pc, #116]	; 802a8c4 <sinf+0x88>
 802a850:	2000      	movs	r0, #0
 802a852:	b003      	add	sp, #12
 802a854:	f85d eb04 	ldr.w	lr, [sp], #4
 802a858:	f000 b918 	b.w	802aa8c <__kernel_sinf>
 802a85c:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802a860:	db04      	blt.n	802a86c <sinf+0x30>
 802a862:	ee30 0a40 	vsub.f32	s0, s0, s0
 802a866:	b003      	add	sp, #12
 802a868:	f85d fb04 	ldr.w	pc, [sp], #4
 802a86c:	4668      	mov	r0, sp
 802a86e:	f000 f955 	bl	802ab1c <__ieee754_rem_pio2f>
 802a872:	f000 0003 	and.w	r0, r0, #3
 802a876:	2801      	cmp	r0, #1
 802a878:	d00a      	beq.n	802a890 <sinf+0x54>
 802a87a:	2802      	cmp	r0, #2
 802a87c:	d00f      	beq.n	802a89e <sinf+0x62>
 802a87e:	b9c0      	cbnz	r0, 802a8b2 <sinf+0x76>
 802a880:	eddd 0a01 	vldr	s1, [sp, #4]
 802a884:	ed9d 0a00 	vldr	s0, [sp]
 802a888:	2001      	movs	r0, #1
 802a88a:	f000 f8ff 	bl	802aa8c <__kernel_sinf>
 802a88e:	e7ea      	b.n	802a866 <sinf+0x2a>
 802a890:	eddd 0a01 	vldr	s1, [sp, #4]
 802a894:	ed9d 0a00 	vldr	s0, [sp]
 802a898:	f000 f89a 	bl	802a9d0 <__kernel_cosf>
 802a89c:	e7e3      	b.n	802a866 <sinf+0x2a>
 802a89e:	eddd 0a01 	vldr	s1, [sp, #4]
 802a8a2:	ed9d 0a00 	vldr	s0, [sp]
 802a8a6:	2001      	movs	r0, #1
 802a8a8:	f000 f8f0 	bl	802aa8c <__kernel_sinf>
 802a8ac:	eeb1 0a40 	vneg.f32	s0, s0
 802a8b0:	e7d9      	b.n	802a866 <sinf+0x2a>
 802a8b2:	eddd 0a01 	vldr	s1, [sp, #4]
 802a8b6:	ed9d 0a00 	vldr	s0, [sp]
 802a8ba:	f000 f889 	bl	802a9d0 <__kernel_cosf>
 802a8be:	e7f5      	b.n	802a8ac <sinf+0x70>
 802a8c0:	3f490fd8 	.word	0x3f490fd8
 802a8c4:	00000000 	.word	0x00000000

0802a8c8 <ceilf>:
 802a8c8:	ee10 3a10 	vmov	r3, s0
 802a8cc:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802a8d0:	3a7f      	subs	r2, #127	; 0x7f
 802a8d2:	2a16      	cmp	r2, #22
 802a8d4:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802a8d8:	dc2a      	bgt.n	802a930 <ceilf+0x68>
 802a8da:	2a00      	cmp	r2, #0
 802a8dc:	da11      	bge.n	802a902 <ceilf+0x3a>
 802a8de:	eddf 7a19 	vldr	s15, [pc, #100]	; 802a944 <ceilf+0x7c>
 802a8e2:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a8e6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a8ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a8ee:	dd05      	ble.n	802a8fc <ceilf+0x34>
 802a8f0:	2b00      	cmp	r3, #0
 802a8f2:	db23      	blt.n	802a93c <ceilf+0x74>
 802a8f4:	2900      	cmp	r1, #0
 802a8f6:	bf18      	it	ne
 802a8f8:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 802a8fc:	ee00 3a10 	vmov	s0, r3
 802a900:	4770      	bx	lr
 802a902:	4911      	ldr	r1, [pc, #68]	; (802a948 <ceilf+0x80>)
 802a904:	4111      	asrs	r1, r2
 802a906:	420b      	tst	r3, r1
 802a908:	d0fa      	beq.n	802a900 <ceilf+0x38>
 802a90a:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802a944 <ceilf+0x7c>
 802a90e:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a912:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a916:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a91a:	ddef      	ble.n	802a8fc <ceilf+0x34>
 802a91c:	2b00      	cmp	r3, #0
 802a91e:	bfc2      	ittt	gt
 802a920:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 802a924:	fa40 f202 	asrgt.w	r2, r0, r2
 802a928:	189b      	addgt	r3, r3, r2
 802a92a:	ea23 0301 	bic.w	r3, r3, r1
 802a92e:	e7e5      	b.n	802a8fc <ceilf+0x34>
 802a930:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802a934:	d3e4      	bcc.n	802a900 <ceilf+0x38>
 802a936:	ee30 0a00 	vadd.f32	s0, s0, s0
 802a93a:	4770      	bx	lr
 802a93c:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 802a940:	e7dc      	b.n	802a8fc <ceilf+0x34>
 802a942:	bf00      	nop
 802a944:	7149f2ca 	.word	0x7149f2ca
 802a948:	007fffff 	.word	0x007fffff

0802a94c <floorf>:
 802a94c:	ee10 3a10 	vmov	r3, s0
 802a950:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802a954:	3a7f      	subs	r2, #127	; 0x7f
 802a956:	2a16      	cmp	r2, #22
 802a958:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802a95c:	dc2a      	bgt.n	802a9b4 <floorf+0x68>
 802a95e:	2a00      	cmp	r2, #0
 802a960:	da11      	bge.n	802a986 <floorf+0x3a>
 802a962:	eddf 7a18 	vldr	s15, [pc, #96]	; 802a9c4 <floorf+0x78>
 802a966:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a96a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a96e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a972:	dd05      	ble.n	802a980 <floorf+0x34>
 802a974:	2b00      	cmp	r3, #0
 802a976:	da23      	bge.n	802a9c0 <floorf+0x74>
 802a978:	4a13      	ldr	r2, [pc, #76]	; (802a9c8 <floorf+0x7c>)
 802a97a:	2900      	cmp	r1, #0
 802a97c:	bf18      	it	ne
 802a97e:	4613      	movne	r3, r2
 802a980:	ee00 3a10 	vmov	s0, r3
 802a984:	4770      	bx	lr
 802a986:	4911      	ldr	r1, [pc, #68]	; (802a9cc <floorf+0x80>)
 802a988:	4111      	asrs	r1, r2
 802a98a:	420b      	tst	r3, r1
 802a98c:	d0fa      	beq.n	802a984 <floorf+0x38>
 802a98e:	eddf 7a0d 	vldr	s15, [pc, #52]	; 802a9c4 <floorf+0x78>
 802a992:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a996:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a99a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a99e:	ddef      	ble.n	802a980 <floorf+0x34>
 802a9a0:	2b00      	cmp	r3, #0
 802a9a2:	bfbe      	ittt	lt
 802a9a4:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 802a9a8:	fa40 f202 	asrlt.w	r2, r0, r2
 802a9ac:	189b      	addlt	r3, r3, r2
 802a9ae:	ea23 0301 	bic.w	r3, r3, r1
 802a9b2:	e7e5      	b.n	802a980 <floorf+0x34>
 802a9b4:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802a9b8:	d3e4      	bcc.n	802a984 <floorf+0x38>
 802a9ba:	ee30 0a00 	vadd.f32	s0, s0, s0
 802a9be:	4770      	bx	lr
 802a9c0:	2300      	movs	r3, #0
 802a9c2:	e7dd      	b.n	802a980 <floorf+0x34>
 802a9c4:	7149f2ca 	.word	0x7149f2ca
 802a9c8:	bf800000 	.word	0xbf800000
 802a9cc:	007fffff 	.word	0x007fffff

0802a9d0 <__kernel_cosf>:
 802a9d0:	ee10 3a10 	vmov	r3, s0
 802a9d4:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a9d8:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802a9dc:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 802a9e0:	da05      	bge.n	802a9ee <__kernel_cosf+0x1e>
 802a9e2:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802a9e6:	ee17 2a90 	vmov	r2, s15
 802a9ea:	2a00      	cmp	r2, #0
 802a9ec:	d03b      	beq.n	802aa66 <__kernel_cosf+0x96>
 802a9ee:	ee20 7a00 	vmul.f32	s14, s0, s0
 802a9f2:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802aa6c <__kernel_cosf+0x9c>
 802a9f6:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 802aa70 <__kernel_cosf+0xa0>
 802a9fa:	4a1e      	ldr	r2, [pc, #120]	; (802aa74 <__kernel_cosf+0xa4>)
 802a9fc:	eea7 6a27 	vfma.f32	s12, s14, s15
 802aa00:	4293      	cmp	r3, r2
 802aa02:	eddf 7a1d 	vldr	s15, [pc, #116]	; 802aa78 <__kernel_cosf+0xa8>
 802aa06:	eee6 7a07 	vfma.f32	s15, s12, s14
 802aa0a:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 802aa7c <__kernel_cosf+0xac>
 802aa0e:	eea7 6a87 	vfma.f32	s12, s15, s14
 802aa12:	eddf 7a1b 	vldr	s15, [pc, #108]	; 802aa80 <__kernel_cosf+0xb0>
 802aa16:	eee6 7a07 	vfma.f32	s15, s12, s14
 802aa1a:	ed9f 6a1a 	vldr	s12, [pc, #104]	; 802aa84 <__kernel_cosf+0xb4>
 802aa1e:	eea7 6a87 	vfma.f32	s12, s15, s14
 802aa22:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 802aa26:	ee26 6a07 	vmul.f32	s12, s12, s14
 802aa2a:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802aa2e:	eee7 0a06 	vfma.f32	s1, s14, s12
 802aa32:	ee67 7a27 	vmul.f32	s15, s14, s15
 802aa36:	dc04      	bgt.n	802aa42 <__kernel_cosf+0x72>
 802aa38:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802aa3c:	ee36 0ae7 	vsub.f32	s0, s13, s15
 802aa40:	4770      	bx	lr
 802aa42:	4a11      	ldr	r2, [pc, #68]	; (802aa88 <__kernel_cosf+0xb8>)
 802aa44:	4293      	cmp	r3, r2
 802aa46:	bfda      	itte	le
 802aa48:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 802aa4c:	ee07 3a10 	vmovle	s14, r3
 802aa50:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 802aa54:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802aa58:	ee36 0ac7 	vsub.f32	s0, s13, s14
 802aa5c:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802aa60:	ee30 0a67 	vsub.f32	s0, s0, s15
 802aa64:	4770      	bx	lr
 802aa66:	eeb0 0a66 	vmov.f32	s0, s13
 802aa6a:	4770      	bx	lr
 802aa6c:	ad47d74e 	.word	0xad47d74e
 802aa70:	310f74f6 	.word	0x310f74f6
 802aa74:	3e999999 	.word	0x3e999999
 802aa78:	b493f27c 	.word	0xb493f27c
 802aa7c:	37d00d01 	.word	0x37d00d01
 802aa80:	bab60b61 	.word	0xbab60b61
 802aa84:	3d2aaaab 	.word	0x3d2aaaab
 802aa88:	3f480000 	.word	0x3f480000

0802aa8c <__kernel_sinf>:
 802aa8c:	ee10 3a10 	vmov	r3, s0
 802aa90:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802aa94:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802aa98:	da04      	bge.n	802aaa4 <__kernel_sinf+0x18>
 802aa9a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802aa9e:	ee17 3a90 	vmov	r3, s15
 802aaa2:	b35b      	cbz	r3, 802aafc <__kernel_sinf+0x70>
 802aaa4:	ee20 7a00 	vmul.f32	s14, s0, s0
 802aaa8:	eddf 7a15 	vldr	s15, [pc, #84]	; 802ab00 <__kernel_sinf+0x74>
 802aaac:	ed9f 6a15 	vldr	s12, [pc, #84]	; 802ab04 <__kernel_sinf+0x78>
 802aab0:	eea7 6a27 	vfma.f32	s12, s14, s15
 802aab4:	eddf 7a14 	vldr	s15, [pc, #80]	; 802ab08 <__kernel_sinf+0x7c>
 802aab8:	eee6 7a07 	vfma.f32	s15, s12, s14
 802aabc:	ed9f 6a13 	vldr	s12, [pc, #76]	; 802ab0c <__kernel_sinf+0x80>
 802aac0:	eea7 6a87 	vfma.f32	s12, s15, s14
 802aac4:	eddf 7a12 	vldr	s15, [pc, #72]	; 802ab10 <__kernel_sinf+0x84>
 802aac8:	ee60 6a07 	vmul.f32	s13, s0, s14
 802aacc:	eee6 7a07 	vfma.f32	s15, s12, s14
 802aad0:	b930      	cbnz	r0, 802aae0 <__kernel_sinf+0x54>
 802aad2:	ed9f 6a10 	vldr	s12, [pc, #64]	; 802ab14 <__kernel_sinf+0x88>
 802aad6:	eea7 6a27 	vfma.f32	s12, s14, s15
 802aada:	eea6 0a26 	vfma.f32	s0, s12, s13
 802aade:	4770      	bx	lr
 802aae0:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802aae4:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 802aae8:	eee0 7a86 	vfma.f32	s15, s1, s12
 802aaec:	eed7 0a87 	vfnms.f32	s1, s15, s14
 802aaf0:	eddf 7a09 	vldr	s15, [pc, #36]	; 802ab18 <__kernel_sinf+0x8c>
 802aaf4:	eee6 0aa7 	vfma.f32	s1, s13, s15
 802aaf8:	ee30 0a60 	vsub.f32	s0, s0, s1
 802aafc:	4770      	bx	lr
 802aafe:	bf00      	nop
 802ab00:	2f2ec9d3 	.word	0x2f2ec9d3
 802ab04:	b2d72f34 	.word	0xb2d72f34
 802ab08:	3638ef1b 	.word	0x3638ef1b
 802ab0c:	b9500d01 	.word	0xb9500d01
 802ab10:	3c088889 	.word	0x3c088889
 802ab14:	be2aaaab 	.word	0xbe2aaaab
 802ab18:	3e2aaaab 	.word	0x3e2aaaab

0802ab1c <__ieee754_rem_pio2f>:
 802ab1c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802ab1e:	ee10 6a10 	vmov	r6, s0
 802ab22:	4b86      	ldr	r3, [pc, #536]	; (802ad3c <__ieee754_rem_pio2f+0x220>)
 802ab24:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 802ab28:	429d      	cmp	r5, r3
 802ab2a:	b087      	sub	sp, #28
 802ab2c:	4604      	mov	r4, r0
 802ab2e:	dc05      	bgt.n	802ab3c <__ieee754_rem_pio2f+0x20>
 802ab30:	2300      	movs	r3, #0
 802ab32:	ed80 0a00 	vstr	s0, [r0]
 802ab36:	6043      	str	r3, [r0, #4]
 802ab38:	2000      	movs	r0, #0
 802ab3a:	e020      	b.n	802ab7e <__ieee754_rem_pio2f+0x62>
 802ab3c:	4b80      	ldr	r3, [pc, #512]	; (802ad40 <__ieee754_rem_pio2f+0x224>)
 802ab3e:	429d      	cmp	r5, r3
 802ab40:	dc38      	bgt.n	802abb4 <__ieee754_rem_pio2f+0x98>
 802ab42:	2e00      	cmp	r6, #0
 802ab44:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 802ad44 <__ieee754_rem_pio2f+0x228>
 802ab48:	4b7f      	ldr	r3, [pc, #508]	; (802ad48 <__ieee754_rem_pio2f+0x22c>)
 802ab4a:	f025 050f 	bic.w	r5, r5, #15
 802ab4e:	dd18      	ble.n	802ab82 <__ieee754_rem_pio2f+0x66>
 802ab50:	429d      	cmp	r5, r3
 802ab52:	ee70 7a47 	vsub.f32	s15, s0, s14
 802ab56:	bf09      	itett	eq
 802ab58:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 802ad4c <__ieee754_rem_pio2f+0x230>
 802ab5c:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 802ad50 <__ieee754_rem_pio2f+0x234>
 802ab60:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 802ab64:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 802ad54 <__ieee754_rem_pio2f+0x238>
 802ab68:	ee77 6ac7 	vsub.f32	s13, s15, s14
 802ab6c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802ab70:	edc0 6a00 	vstr	s13, [r0]
 802ab74:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802ab78:	edc0 7a01 	vstr	s15, [r0, #4]
 802ab7c:	2001      	movs	r0, #1
 802ab7e:	b007      	add	sp, #28
 802ab80:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802ab82:	429d      	cmp	r5, r3
 802ab84:	ee70 7a07 	vadd.f32	s15, s0, s14
 802ab88:	bf09      	itett	eq
 802ab8a:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 802ad4c <__ieee754_rem_pio2f+0x230>
 802ab8e:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 802ad50 <__ieee754_rem_pio2f+0x234>
 802ab92:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 802ab96:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 802ad54 <__ieee754_rem_pio2f+0x238>
 802ab9a:	ee77 6a87 	vadd.f32	s13, s15, s14
 802ab9e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802aba2:	edc0 6a00 	vstr	s13, [r0]
 802aba6:	ee77 7a87 	vadd.f32	s15, s15, s14
 802abaa:	edc0 7a01 	vstr	s15, [r0, #4]
 802abae:	f04f 30ff 	mov.w	r0, #4294967295
 802abb2:	e7e4      	b.n	802ab7e <__ieee754_rem_pio2f+0x62>
 802abb4:	4b68      	ldr	r3, [pc, #416]	; (802ad58 <__ieee754_rem_pio2f+0x23c>)
 802abb6:	429d      	cmp	r5, r3
 802abb8:	dc71      	bgt.n	802ac9e <__ieee754_rem_pio2f+0x182>
 802abba:	f000 f8db 	bl	802ad74 <fabsf>
 802abbe:	ed9f 7a67 	vldr	s14, [pc, #412]	; 802ad5c <__ieee754_rem_pio2f+0x240>
 802abc2:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802abc6:	eee0 7a07 	vfma.f32	s15, s0, s14
 802abca:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802abce:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802abd2:	ee17 0a90 	vmov	r0, s15
 802abd6:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802ad44 <__ieee754_rem_pio2f+0x228>
 802abda:	eea7 0a67 	vfms.f32	s0, s14, s15
 802abde:	281f      	cmp	r0, #31
 802abe0:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802ad50 <__ieee754_rem_pio2f+0x234>
 802abe4:	ee67 7a27 	vmul.f32	s15, s14, s15
 802abe8:	eeb1 6a47 	vneg.f32	s12, s14
 802abec:	ee70 6a67 	vsub.f32	s13, s0, s15
 802abf0:	ee16 2a90 	vmov	r2, s13
 802abf4:	dc1c      	bgt.n	802ac30 <__ieee754_rem_pio2f+0x114>
 802abf6:	495a      	ldr	r1, [pc, #360]	; (802ad60 <__ieee754_rem_pio2f+0x244>)
 802abf8:	1e47      	subs	r7, r0, #1
 802abfa:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 802abfe:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802ac02:	428b      	cmp	r3, r1
 802ac04:	d014      	beq.n	802ac30 <__ieee754_rem_pio2f+0x114>
 802ac06:	6022      	str	r2, [r4, #0]
 802ac08:	ed94 7a00 	vldr	s14, [r4]
 802ac0c:	ee30 0a47 	vsub.f32	s0, s0, s14
 802ac10:	2e00      	cmp	r6, #0
 802ac12:	ee30 0a67 	vsub.f32	s0, s0, s15
 802ac16:	ed84 0a01 	vstr	s0, [r4, #4]
 802ac1a:	dab0      	bge.n	802ab7e <__ieee754_rem_pio2f+0x62>
 802ac1c:	eeb1 7a47 	vneg.f32	s14, s14
 802ac20:	eeb1 0a40 	vneg.f32	s0, s0
 802ac24:	ed84 7a00 	vstr	s14, [r4]
 802ac28:	ed84 0a01 	vstr	s0, [r4, #4]
 802ac2c:	4240      	negs	r0, r0
 802ac2e:	e7a6      	b.n	802ab7e <__ieee754_rem_pio2f+0x62>
 802ac30:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802ac34:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 802ac38:	2908      	cmp	r1, #8
 802ac3a:	ea4f 53e5 	mov.w	r3, r5, asr #23
 802ac3e:	dde2      	ble.n	802ac06 <__ieee754_rem_pio2f+0xea>
 802ac40:	eddf 5a42 	vldr	s11, [pc, #264]	; 802ad4c <__ieee754_rem_pio2f+0x230>
 802ac44:	eef0 6a40 	vmov.f32	s13, s0
 802ac48:	eee6 6a25 	vfma.f32	s13, s12, s11
 802ac4c:	ee70 7a66 	vsub.f32	s15, s0, s13
 802ac50:	eee6 7a25 	vfma.f32	s15, s12, s11
 802ac54:	eddf 5a3f 	vldr	s11, [pc, #252]	; 802ad54 <__ieee754_rem_pio2f+0x238>
 802ac58:	eed7 7a25 	vfnms.f32	s15, s14, s11
 802ac5c:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802ac60:	ee15 2a90 	vmov	r2, s11
 802ac64:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802ac68:	1a5b      	subs	r3, r3, r1
 802ac6a:	2b19      	cmp	r3, #25
 802ac6c:	dc04      	bgt.n	802ac78 <__ieee754_rem_pio2f+0x15c>
 802ac6e:	edc4 5a00 	vstr	s11, [r4]
 802ac72:	eeb0 0a66 	vmov.f32	s0, s13
 802ac76:	e7c7      	b.n	802ac08 <__ieee754_rem_pio2f+0xec>
 802ac78:	eddf 5a3a 	vldr	s11, [pc, #232]	; 802ad64 <__ieee754_rem_pio2f+0x248>
 802ac7c:	eeb0 0a66 	vmov.f32	s0, s13
 802ac80:	eea6 0a25 	vfma.f32	s0, s12, s11
 802ac84:	ee76 7ac0 	vsub.f32	s15, s13, s0
 802ac88:	eddf 6a37 	vldr	s13, [pc, #220]	; 802ad68 <__ieee754_rem_pio2f+0x24c>
 802ac8c:	eee6 7a25 	vfma.f32	s15, s12, s11
 802ac90:	eed7 7a26 	vfnms.f32	s15, s14, s13
 802ac94:	ee30 7a67 	vsub.f32	s14, s0, s15
 802ac98:	ed84 7a00 	vstr	s14, [r4]
 802ac9c:	e7b4      	b.n	802ac08 <__ieee754_rem_pio2f+0xec>
 802ac9e:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 802aca2:	db06      	blt.n	802acb2 <__ieee754_rem_pio2f+0x196>
 802aca4:	ee70 7a40 	vsub.f32	s15, s0, s0
 802aca8:	edc0 7a01 	vstr	s15, [r0, #4]
 802acac:	edc0 7a00 	vstr	s15, [r0]
 802acb0:	e742      	b.n	802ab38 <__ieee754_rem_pio2f+0x1c>
 802acb2:	15ea      	asrs	r2, r5, #23
 802acb4:	3a86      	subs	r2, #134	; 0x86
 802acb6:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 802acba:	ee07 3a90 	vmov	s15, r3
 802acbe:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802acc2:	eddf 6a2a 	vldr	s13, [pc, #168]	; 802ad6c <__ieee754_rem_pio2f+0x250>
 802acc6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802acca:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802acce:	ed8d 7a03 	vstr	s14, [sp, #12]
 802acd2:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802acd6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802acda:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802acde:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802ace2:	ed8d 7a04 	vstr	s14, [sp, #16]
 802ace6:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802acea:	eef5 7a40 	vcmp.f32	s15, #0.0
 802acee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802acf2:	edcd 7a05 	vstr	s15, [sp, #20]
 802acf6:	d11e      	bne.n	802ad36 <__ieee754_rem_pio2f+0x21a>
 802acf8:	eeb5 7a40 	vcmp.f32	s14, #0.0
 802acfc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802ad00:	bf14      	ite	ne
 802ad02:	2302      	movne	r3, #2
 802ad04:	2301      	moveq	r3, #1
 802ad06:	491a      	ldr	r1, [pc, #104]	; (802ad70 <__ieee754_rem_pio2f+0x254>)
 802ad08:	9101      	str	r1, [sp, #4]
 802ad0a:	2102      	movs	r1, #2
 802ad0c:	9100      	str	r1, [sp, #0]
 802ad0e:	a803      	add	r0, sp, #12
 802ad10:	4621      	mov	r1, r4
 802ad12:	f000 f89d 	bl	802ae50 <__kernel_rem_pio2f>
 802ad16:	2e00      	cmp	r6, #0
 802ad18:	f6bf af31 	bge.w	802ab7e <__ieee754_rem_pio2f+0x62>
 802ad1c:	edd4 7a00 	vldr	s15, [r4]
 802ad20:	eef1 7a67 	vneg.f32	s15, s15
 802ad24:	edc4 7a00 	vstr	s15, [r4]
 802ad28:	edd4 7a01 	vldr	s15, [r4, #4]
 802ad2c:	eef1 7a67 	vneg.f32	s15, s15
 802ad30:	edc4 7a01 	vstr	s15, [r4, #4]
 802ad34:	e77a      	b.n	802ac2c <__ieee754_rem_pio2f+0x110>
 802ad36:	2303      	movs	r3, #3
 802ad38:	e7e5      	b.n	802ad06 <__ieee754_rem_pio2f+0x1ea>
 802ad3a:	bf00      	nop
 802ad3c:	3f490fd8 	.word	0x3f490fd8
 802ad40:	4016cbe3 	.word	0x4016cbe3
 802ad44:	3fc90f80 	.word	0x3fc90f80
 802ad48:	3fc90fd0 	.word	0x3fc90fd0
 802ad4c:	37354400 	.word	0x37354400
 802ad50:	37354443 	.word	0x37354443
 802ad54:	2e85a308 	.word	0x2e85a308
 802ad58:	43490f80 	.word	0x43490f80
 802ad5c:	3f22f984 	.word	0x3f22f984
 802ad60:	0802fddc 	.word	0x0802fddc
 802ad64:	2e85a300 	.word	0x2e85a300
 802ad68:	248d3132 	.word	0x248d3132
 802ad6c:	43800000 	.word	0x43800000
 802ad70:	0802fe5c 	.word	0x0802fe5c

0802ad74 <fabsf>:
 802ad74:	ee10 3a10 	vmov	r3, s0
 802ad78:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802ad7c:	ee00 3a10 	vmov	s0, r3
 802ad80:	4770      	bx	lr
	...

0802ad84 <scalbnf>:
 802ad84:	ee10 3a10 	vmov	r3, s0
 802ad88:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 802ad8c:	d02b      	beq.n	802ade6 <scalbnf+0x62>
 802ad8e:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 802ad92:	d302      	bcc.n	802ad9a <scalbnf+0x16>
 802ad94:	ee30 0a00 	vadd.f32	s0, s0, s0
 802ad98:	4770      	bx	lr
 802ad9a:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 802ad9e:	d123      	bne.n	802ade8 <scalbnf+0x64>
 802ada0:	4b24      	ldr	r3, [pc, #144]	; (802ae34 <scalbnf+0xb0>)
 802ada2:	eddf 7a25 	vldr	s15, [pc, #148]	; 802ae38 <scalbnf+0xb4>
 802ada6:	4298      	cmp	r0, r3
 802ada8:	ee20 0a27 	vmul.f32	s0, s0, s15
 802adac:	db17      	blt.n	802adde <scalbnf+0x5a>
 802adae:	ee10 3a10 	vmov	r3, s0
 802adb2:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802adb6:	3a19      	subs	r2, #25
 802adb8:	f24c 3150 	movw	r1, #50000	; 0xc350
 802adbc:	4288      	cmp	r0, r1
 802adbe:	dd15      	ble.n	802adec <scalbnf+0x68>
 802adc0:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802ae3c <scalbnf+0xb8>
 802adc4:	eddf 6a1e 	vldr	s13, [pc, #120]	; 802ae40 <scalbnf+0xbc>
 802adc8:	ee10 3a10 	vmov	r3, s0
 802adcc:	eeb0 7a67 	vmov.f32	s14, s15
 802add0:	2b00      	cmp	r3, #0
 802add2:	bfb8      	it	lt
 802add4:	eef0 7a66 	vmovlt.f32	s15, s13
 802add8:	ee27 0a87 	vmul.f32	s0, s15, s14
 802addc:	4770      	bx	lr
 802adde:	eddf 7a19 	vldr	s15, [pc, #100]	; 802ae44 <scalbnf+0xc0>
 802ade2:	ee27 0a80 	vmul.f32	s0, s15, s0
 802ade6:	4770      	bx	lr
 802ade8:	0dd2      	lsrs	r2, r2, #23
 802adea:	e7e5      	b.n	802adb8 <scalbnf+0x34>
 802adec:	4410      	add	r0, r2
 802adee:	28fe      	cmp	r0, #254	; 0xfe
 802adf0:	dce6      	bgt.n	802adc0 <scalbnf+0x3c>
 802adf2:	2800      	cmp	r0, #0
 802adf4:	dd06      	ble.n	802ae04 <scalbnf+0x80>
 802adf6:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802adfa:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802adfe:	ee00 3a10 	vmov	s0, r3
 802ae02:	4770      	bx	lr
 802ae04:	f110 0f16 	cmn.w	r0, #22
 802ae08:	da09      	bge.n	802ae1e <scalbnf+0x9a>
 802ae0a:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802ae44 <scalbnf+0xc0>
 802ae0e:	eddf 6a0e 	vldr	s13, [pc, #56]	; 802ae48 <scalbnf+0xc4>
 802ae12:	ee10 3a10 	vmov	r3, s0
 802ae16:	eeb0 7a67 	vmov.f32	s14, s15
 802ae1a:	2b00      	cmp	r3, #0
 802ae1c:	e7d9      	b.n	802add2 <scalbnf+0x4e>
 802ae1e:	3019      	adds	r0, #25
 802ae20:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802ae24:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802ae28:	ed9f 0a08 	vldr	s0, [pc, #32]	; 802ae4c <scalbnf+0xc8>
 802ae2c:	ee07 3a90 	vmov	s15, r3
 802ae30:	e7d7      	b.n	802ade2 <scalbnf+0x5e>
 802ae32:	bf00      	nop
 802ae34:	ffff3cb0 	.word	0xffff3cb0
 802ae38:	4c000000 	.word	0x4c000000
 802ae3c:	7149f2ca 	.word	0x7149f2ca
 802ae40:	f149f2ca 	.word	0xf149f2ca
 802ae44:	0da24260 	.word	0x0da24260
 802ae48:	8da24260 	.word	0x8da24260
 802ae4c:	33000000 	.word	0x33000000

0802ae50 <__kernel_rem_pio2f>:
 802ae50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802ae54:	ed2d 8b04 	vpush	{d8-d9}
 802ae58:	b0d9      	sub	sp, #356	; 0x164
 802ae5a:	4688      	mov	r8, r1
 802ae5c:	9002      	str	r0, [sp, #8]
 802ae5e:	49b8      	ldr	r1, [pc, #736]	; (802b140 <__kernel_rem_pio2f+0x2f0>)
 802ae60:	9866      	ldr	r0, [sp, #408]	; 0x198
 802ae62:	9301      	str	r3, [sp, #4]
 802ae64:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 802ae68:	9901      	ldr	r1, [sp, #4]
 802ae6a:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 802ae6c:	f101 3bff 	add.w	fp, r1, #4294967295
 802ae70:	1d11      	adds	r1, r2, #4
 802ae72:	db25      	blt.n	802aec0 <__kernel_rem_pio2f+0x70>
 802ae74:	1ed0      	subs	r0, r2, #3
 802ae76:	bf48      	it	mi
 802ae78:	1d10      	addmi	r0, r2, #4
 802ae7a:	10c0      	asrs	r0, r0, #3
 802ae7c:	1c45      	adds	r5, r0, #1
 802ae7e:	00e9      	lsls	r1, r5, #3
 802ae80:	eba0 070b 	sub.w	r7, r0, fp
 802ae84:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 802b150 <__kernel_rem_pio2f+0x300>
 802ae88:	9103      	str	r1, [sp, #12]
 802ae8a:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 802ae8e:	eb0a 0c0b 	add.w	ip, sl, fp
 802ae92:	ae1c      	add	r6, sp, #112	; 0x70
 802ae94:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 802ae98:	2400      	movs	r4, #0
 802ae9a:	4564      	cmp	r4, ip
 802ae9c:	dd12      	ble.n	802aec4 <__kernel_rem_pio2f+0x74>
 802ae9e:	9901      	ldr	r1, [sp, #4]
 802aea0:	ac1c      	add	r4, sp, #112	; 0x70
 802aea2:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 802aea6:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 802aeaa:	f04f 0c00 	mov.w	ip, #0
 802aeae:	45d4      	cmp	ip, sl
 802aeb0:	dc27      	bgt.n	802af02 <__kernel_rem_pio2f+0xb2>
 802aeb2:	f8dd e008 	ldr.w	lr, [sp, #8]
 802aeb6:	eddf 7aa6 	vldr	s15, [pc, #664]	; 802b150 <__kernel_rem_pio2f+0x300>
 802aeba:	4627      	mov	r7, r4
 802aebc:	2600      	movs	r6, #0
 802aebe:	e016      	b.n	802aeee <__kernel_rem_pio2f+0x9e>
 802aec0:	2000      	movs	r0, #0
 802aec2:	e7db      	b.n	802ae7c <__kernel_rem_pio2f+0x2c>
 802aec4:	42e7      	cmn	r7, r4
 802aec6:	bf5d      	ittte	pl
 802aec8:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 802aecc:	ee07 1a90 	vmovpl	s15, r1
 802aed0:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 802aed4:	eef0 7a47 	vmovmi.f32	s15, s14
 802aed8:	ece6 7a01 	vstmia	r6!, {s15}
 802aedc:	3401      	adds	r4, #1
 802aede:	e7dc      	b.n	802ae9a <__kernel_rem_pio2f+0x4a>
 802aee0:	ecfe 6a01 	vldmia	lr!, {s13}
 802aee4:	ed97 7a00 	vldr	s14, [r7]
 802aee8:	eee6 7a87 	vfma.f32	s15, s13, s14
 802aeec:	3601      	adds	r6, #1
 802aeee:	455e      	cmp	r6, fp
 802aef0:	f1a7 0704 	sub.w	r7, r7, #4
 802aef4:	ddf4      	ble.n	802aee0 <__kernel_rem_pio2f+0x90>
 802aef6:	ece9 7a01 	vstmia	r9!, {s15}
 802aefa:	f10c 0c01 	add.w	ip, ip, #1
 802aefe:	3404      	adds	r4, #4
 802af00:	e7d5      	b.n	802aeae <__kernel_rem_pio2f+0x5e>
 802af02:	a908      	add	r1, sp, #32
 802af04:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 802af08:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 802af0c:	eddf 8a8f 	vldr	s17, [pc, #572]	; 802b14c <__kernel_rem_pio2f+0x2fc>
 802af10:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 802b148 <__kernel_rem_pio2f+0x2f8>
 802af14:	9105      	str	r1, [sp, #20]
 802af16:	9304      	str	r3, [sp, #16]
 802af18:	4656      	mov	r6, sl
 802af1a:	00b3      	lsls	r3, r6, #2
 802af1c:	9306      	str	r3, [sp, #24]
 802af1e:	ab58      	add	r3, sp, #352	; 0x160
 802af20:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802af24:	ac08      	add	r4, sp, #32
 802af26:	ab44      	add	r3, sp, #272	; 0x110
 802af28:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 802af2c:	46a4      	mov	ip, r4
 802af2e:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802af32:	4637      	mov	r7, r6
 802af34:	2f00      	cmp	r7, #0
 802af36:	f1a0 0004 	sub.w	r0, r0, #4
 802af3a:	dc4a      	bgt.n	802afd2 <__kernel_rem_pio2f+0x182>
 802af3c:	4628      	mov	r0, r5
 802af3e:	9207      	str	r2, [sp, #28]
 802af40:	f7ff ff20 	bl	802ad84 <scalbnf>
 802af44:	eeb0 8a40 	vmov.f32	s16, s0
 802af48:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 802af4c:	ee28 0a00 	vmul.f32	s0, s16, s0
 802af50:	f7ff fcfc 	bl	802a94c <floorf>
 802af54:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 802af58:	eea0 8a67 	vfms.f32	s16, s0, s15
 802af5c:	2d00      	cmp	r5, #0
 802af5e:	9a07      	ldr	r2, [sp, #28]
 802af60:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 802af64:	ee17 9a90 	vmov	r9, s15
 802af68:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802af6c:	ee38 8a67 	vsub.f32	s16, s16, s15
 802af70:	dd41      	ble.n	802aff6 <__kernel_rem_pio2f+0x1a6>
 802af72:	f106 3cff 	add.w	ip, r6, #4294967295
 802af76:	ab08      	add	r3, sp, #32
 802af78:	f1c5 0e08 	rsb	lr, r5, #8
 802af7c:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 802af80:	fa47 f00e 	asr.w	r0, r7, lr
 802af84:	4481      	add	r9, r0
 802af86:	fa00 f00e 	lsl.w	r0, r0, lr
 802af8a:	1a3f      	subs	r7, r7, r0
 802af8c:	f1c5 0007 	rsb	r0, r5, #7
 802af90:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 802af94:	4107      	asrs	r7, r0
 802af96:	2f00      	cmp	r7, #0
 802af98:	dd3c      	ble.n	802b014 <__kernel_rem_pio2f+0x1c4>
 802af9a:	f04f 0e00 	mov.w	lr, #0
 802af9e:	f109 0901 	add.w	r9, r9, #1
 802afa2:	4671      	mov	r1, lr
 802afa4:	4576      	cmp	r6, lr
 802afa6:	dc67      	bgt.n	802b078 <__kernel_rem_pio2f+0x228>
 802afa8:	2d00      	cmp	r5, #0
 802afaa:	dd03      	ble.n	802afb4 <__kernel_rem_pio2f+0x164>
 802afac:	2d01      	cmp	r5, #1
 802afae:	d074      	beq.n	802b09a <__kernel_rem_pio2f+0x24a>
 802afb0:	2d02      	cmp	r5, #2
 802afb2:	d07b      	beq.n	802b0ac <__kernel_rem_pio2f+0x25c>
 802afb4:	2f02      	cmp	r7, #2
 802afb6:	d12d      	bne.n	802b014 <__kernel_rem_pio2f+0x1c4>
 802afb8:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802afbc:	ee30 8a48 	vsub.f32	s16, s0, s16
 802afc0:	b341      	cbz	r1, 802b014 <__kernel_rem_pio2f+0x1c4>
 802afc2:	4628      	mov	r0, r5
 802afc4:	9207      	str	r2, [sp, #28]
 802afc6:	f7ff fedd 	bl	802ad84 <scalbnf>
 802afca:	9a07      	ldr	r2, [sp, #28]
 802afcc:	ee38 8a40 	vsub.f32	s16, s16, s0
 802afd0:	e020      	b.n	802b014 <__kernel_rem_pio2f+0x1c4>
 802afd2:	ee60 7a28 	vmul.f32	s15, s0, s17
 802afd6:	3f01      	subs	r7, #1
 802afd8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802afdc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802afe0:	eea7 0ac9 	vfms.f32	s0, s15, s18
 802afe4:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802afe8:	ecac 0a01 	vstmia	ip!, {s0}
 802afec:	ed90 0a00 	vldr	s0, [r0]
 802aff0:	ee37 0a80 	vadd.f32	s0, s15, s0
 802aff4:	e79e      	b.n	802af34 <__kernel_rem_pio2f+0xe4>
 802aff6:	d105      	bne.n	802b004 <__kernel_rem_pio2f+0x1b4>
 802aff8:	1e70      	subs	r0, r6, #1
 802affa:	ab08      	add	r3, sp, #32
 802affc:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 802b000:	11ff      	asrs	r7, r7, #7
 802b002:	e7c8      	b.n	802af96 <__kernel_rem_pio2f+0x146>
 802b004:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802b008:	eeb4 8ae7 	vcmpe.f32	s16, s15
 802b00c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b010:	da30      	bge.n	802b074 <__kernel_rem_pio2f+0x224>
 802b012:	2700      	movs	r7, #0
 802b014:	eeb5 8a40 	vcmp.f32	s16, #0.0
 802b018:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b01c:	f040 809a 	bne.w	802b154 <__kernel_rem_pio2f+0x304>
 802b020:	1e74      	subs	r4, r6, #1
 802b022:	46a4      	mov	ip, r4
 802b024:	2100      	movs	r1, #0
 802b026:	45d4      	cmp	ip, sl
 802b028:	da47      	bge.n	802b0ba <__kernel_rem_pio2f+0x26a>
 802b02a:	2900      	cmp	r1, #0
 802b02c:	d063      	beq.n	802b0f6 <__kernel_rem_pio2f+0x2a6>
 802b02e:	ab08      	add	r3, sp, #32
 802b030:	3d08      	subs	r5, #8
 802b032:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 802b036:	2b00      	cmp	r3, #0
 802b038:	d07f      	beq.n	802b13a <__kernel_rem_pio2f+0x2ea>
 802b03a:	4628      	mov	r0, r5
 802b03c:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802b040:	f7ff fea0 	bl	802ad84 <scalbnf>
 802b044:	1c63      	adds	r3, r4, #1
 802b046:	aa44      	add	r2, sp, #272	; 0x110
 802b048:	ed9f 7a40 	vldr	s14, [pc, #256]	; 802b14c <__kernel_rem_pio2f+0x2fc>
 802b04c:	0099      	lsls	r1, r3, #2
 802b04e:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802b052:	4623      	mov	r3, r4
 802b054:	2b00      	cmp	r3, #0
 802b056:	f280 80ad 	bge.w	802b1b4 <__kernel_rem_pio2f+0x364>
 802b05a:	4623      	mov	r3, r4
 802b05c:	2b00      	cmp	r3, #0
 802b05e:	f2c0 80cb 	blt.w	802b1f8 <__kernel_rem_pio2f+0x3a8>
 802b062:	aa44      	add	r2, sp, #272	; 0x110
 802b064:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 802b068:	4e36      	ldr	r6, [pc, #216]	; (802b144 <__kernel_rem_pio2f+0x2f4>)
 802b06a:	eddf 7a39 	vldr	s15, [pc, #228]	; 802b150 <__kernel_rem_pio2f+0x300>
 802b06e:	2000      	movs	r0, #0
 802b070:	1ae2      	subs	r2, r4, r3
 802b072:	e0b6      	b.n	802b1e2 <__kernel_rem_pio2f+0x392>
 802b074:	2702      	movs	r7, #2
 802b076:	e790      	b.n	802af9a <__kernel_rem_pio2f+0x14a>
 802b078:	6820      	ldr	r0, [r4, #0]
 802b07a:	b949      	cbnz	r1, 802b090 <__kernel_rem_pio2f+0x240>
 802b07c:	b118      	cbz	r0, 802b086 <__kernel_rem_pio2f+0x236>
 802b07e:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 802b082:	6020      	str	r0, [r4, #0]
 802b084:	2001      	movs	r0, #1
 802b086:	f10e 0e01 	add.w	lr, lr, #1
 802b08a:	3404      	adds	r4, #4
 802b08c:	4601      	mov	r1, r0
 802b08e:	e789      	b.n	802afa4 <__kernel_rem_pio2f+0x154>
 802b090:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 802b094:	6020      	str	r0, [r4, #0]
 802b096:	4608      	mov	r0, r1
 802b098:	e7f5      	b.n	802b086 <__kernel_rem_pio2f+0x236>
 802b09a:	1e74      	subs	r4, r6, #1
 802b09c:	ab08      	add	r3, sp, #32
 802b09e:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802b0a2:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 802b0a6:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 802b0aa:	e783      	b.n	802afb4 <__kernel_rem_pio2f+0x164>
 802b0ac:	1e74      	subs	r4, r6, #1
 802b0ae:	ab08      	add	r3, sp, #32
 802b0b0:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802b0b4:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 802b0b8:	e7f5      	b.n	802b0a6 <__kernel_rem_pio2f+0x256>
 802b0ba:	ab08      	add	r3, sp, #32
 802b0bc:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 802b0c0:	f10c 3cff 	add.w	ip, ip, #4294967295
 802b0c4:	4301      	orrs	r1, r0
 802b0c6:	e7ae      	b.n	802b026 <__kernel_rem_pio2f+0x1d6>
 802b0c8:	3001      	adds	r0, #1
 802b0ca:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 802b0ce:	2f00      	cmp	r7, #0
 802b0d0:	d0fa      	beq.n	802b0c8 <__kernel_rem_pio2f+0x278>
 802b0d2:	9b06      	ldr	r3, [sp, #24]
 802b0d4:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 802b0d8:	eb0d 0403 	add.w	r4, sp, r3
 802b0dc:	9b01      	ldr	r3, [sp, #4]
 802b0de:	18f7      	adds	r7, r6, r3
 802b0e0:	ab1c      	add	r3, sp, #112	; 0x70
 802b0e2:	f106 0c01 	add.w	ip, r6, #1
 802b0e6:	3c4c      	subs	r4, #76	; 0x4c
 802b0e8:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 802b0ec:	4430      	add	r0, r6
 802b0ee:	4560      	cmp	r0, ip
 802b0f0:	da04      	bge.n	802b0fc <__kernel_rem_pio2f+0x2ac>
 802b0f2:	4606      	mov	r6, r0
 802b0f4:	e711      	b.n	802af1a <__kernel_rem_pio2f+0xca>
 802b0f6:	9c05      	ldr	r4, [sp, #20]
 802b0f8:	2001      	movs	r0, #1
 802b0fa:	e7e6      	b.n	802b0ca <__kernel_rem_pio2f+0x27a>
 802b0fc:	9b04      	ldr	r3, [sp, #16]
 802b0fe:	f8dd e008 	ldr.w	lr, [sp, #8]
 802b102:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 802b106:	9306      	str	r3, [sp, #24]
 802b108:	ee07 3a90 	vmov	s15, r3
 802b10c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b110:	2600      	movs	r6, #0
 802b112:	ece7 7a01 	vstmia	r7!, {s15}
 802b116:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802b150 <__kernel_rem_pio2f+0x300>
 802b11a:	46b9      	mov	r9, r7
 802b11c:	455e      	cmp	r6, fp
 802b11e:	dd04      	ble.n	802b12a <__kernel_rem_pio2f+0x2da>
 802b120:	ece4 7a01 	vstmia	r4!, {s15}
 802b124:	f10c 0c01 	add.w	ip, ip, #1
 802b128:	e7e1      	b.n	802b0ee <__kernel_rem_pio2f+0x29e>
 802b12a:	ecfe 6a01 	vldmia	lr!, {s13}
 802b12e:	ed39 7a01 	vldmdb	r9!, {s14}
 802b132:	3601      	adds	r6, #1
 802b134:	eee6 7a87 	vfma.f32	s15, s13, s14
 802b138:	e7f0      	b.n	802b11c <__kernel_rem_pio2f+0x2cc>
 802b13a:	3c01      	subs	r4, #1
 802b13c:	e777      	b.n	802b02e <__kernel_rem_pio2f+0x1de>
 802b13e:	bf00      	nop
 802b140:	080301a0 	.word	0x080301a0
 802b144:	08030174 	.word	0x08030174
 802b148:	43800000 	.word	0x43800000
 802b14c:	3b800000 	.word	0x3b800000
 802b150:	00000000 	.word	0x00000000
 802b154:	9b03      	ldr	r3, [sp, #12]
 802b156:	eeb0 0a48 	vmov.f32	s0, s16
 802b15a:	1a98      	subs	r0, r3, r2
 802b15c:	f7ff fe12 	bl	802ad84 <scalbnf>
 802b160:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 802b148 <__kernel_rem_pio2f+0x2f8>
 802b164:	eeb4 0ac7 	vcmpe.f32	s0, s14
 802b168:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b16c:	db19      	blt.n	802b1a2 <__kernel_rem_pio2f+0x352>
 802b16e:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 802b14c <__kernel_rem_pio2f+0x2fc>
 802b172:	ee60 7a27 	vmul.f32	s15, s0, s15
 802b176:	aa08      	add	r2, sp, #32
 802b178:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802b17c:	1c74      	adds	r4, r6, #1
 802b17e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b182:	3508      	adds	r5, #8
 802b184:	eea7 0ac7 	vfms.f32	s0, s15, s14
 802b188:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802b18c:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802b190:	ee10 3a10 	vmov	r3, s0
 802b194:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802b198:	ee17 3a90 	vmov	r3, s15
 802b19c:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802b1a0:	e74b      	b.n	802b03a <__kernel_rem_pio2f+0x1ea>
 802b1a2:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802b1a6:	aa08      	add	r2, sp, #32
 802b1a8:	ee10 3a10 	vmov	r3, s0
 802b1ac:	4634      	mov	r4, r6
 802b1ae:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802b1b2:	e742      	b.n	802b03a <__kernel_rem_pio2f+0x1ea>
 802b1b4:	a808      	add	r0, sp, #32
 802b1b6:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 802b1ba:	9001      	str	r0, [sp, #4]
 802b1bc:	ee07 0a90 	vmov	s15, r0
 802b1c0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b1c4:	3b01      	subs	r3, #1
 802b1c6:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b1ca:	ee20 0a07 	vmul.f32	s0, s0, s14
 802b1ce:	ed62 7a01 	vstmdb	r2!, {s15}
 802b1d2:	e73f      	b.n	802b054 <__kernel_rem_pio2f+0x204>
 802b1d4:	ecf6 6a01 	vldmia	r6!, {s13}
 802b1d8:	ecb5 7a01 	vldmia	r5!, {s14}
 802b1dc:	eee6 7a87 	vfma.f32	s15, s13, s14
 802b1e0:	3001      	adds	r0, #1
 802b1e2:	4550      	cmp	r0, sl
 802b1e4:	dc01      	bgt.n	802b1ea <__kernel_rem_pio2f+0x39a>
 802b1e6:	4290      	cmp	r0, r2
 802b1e8:	ddf4      	ble.n	802b1d4 <__kernel_rem_pio2f+0x384>
 802b1ea:	a858      	add	r0, sp, #352	; 0x160
 802b1ec:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 802b1f0:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 802b1f4:	3b01      	subs	r3, #1
 802b1f6:	e731      	b.n	802b05c <__kernel_rem_pio2f+0x20c>
 802b1f8:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802b1fa:	2b02      	cmp	r3, #2
 802b1fc:	dc09      	bgt.n	802b212 <__kernel_rem_pio2f+0x3c2>
 802b1fe:	2b00      	cmp	r3, #0
 802b200:	dc2b      	bgt.n	802b25a <__kernel_rem_pio2f+0x40a>
 802b202:	d044      	beq.n	802b28e <__kernel_rem_pio2f+0x43e>
 802b204:	f009 0007 	and.w	r0, r9, #7
 802b208:	b059      	add	sp, #356	; 0x164
 802b20a:	ecbd 8b04 	vpop	{d8-d9}
 802b20e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b212:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802b214:	2b03      	cmp	r3, #3
 802b216:	d1f5      	bne.n	802b204 <__kernel_rem_pio2f+0x3b4>
 802b218:	aa30      	add	r2, sp, #192	; 0xc0
 802b21a:	1f0b      	subs	r3, r1, #4
 802b21c:	4413      	add	r3, r2
 802b21e:	461a      	mov	r2, r3
 802b220:	4620      	mov	r0, r4
 802b222:	2800      	cmp	r0, #0
 802b224:	f1a2 0204 	sub.w	r2, r2, #4
 802b228:	dc52      	bgt.n	802b2d0 <__kernel_rem_pio2f+0x480>
 802b22a:	4622      	mov	r2, r4
 802b22c:	2a01      	cmp	r2, #1
 802b22e:	f1a3 0304 	sub.w	r3, r3, #4
 802b232:	dc5d      	bgt.n	802b2f0 <__kernel_rem_pio2f+0x4a0>
 802b234:	ab30      	add	r3, sp, #192	; 0xc0
 802b236:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 802b150 <__kernel_rem_pio2f+0x300>
 802b23a:	440b      	add	r3, r1
 802b23c:	2c01      	cmp	r4, #1
 802b23e:	dc67      	bgt.n	802b310 <__kernel_rem_pio2f+0x4c0>
 802b240:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 802b244:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 802b248:	2f00      	cmp	r7, #0
 802b24a:	d167      	bne.n	802b31c <__kernel_rem_pio2f+0x4cc>
 802b24c:	edc8 6a00 	vstr	s13, [r8]
 802b250:	ed88 7a01 	vstr	s14, [r8, #4]
 802b254:	edc8 7a02 	vstr	s15, [r8, #8]
 802b258:	e7d4      	b.n	802b204 <__kernel_rem_pio2f+0x3b4>
 802b25a:	ab30      	add	r3, sp, #192	; 0xc0
 802b25c:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 802b150 <__kernel_rem_pio2f+0x300>
 802b260:	440b      	add	r3, r1
 802b262:	4622      	mov	r2, r4
 802b264:	2a00      	cmp	r2, #0
 802b266:	da24      	bge.n	802b2b2 <__kernel_rem_pio2f+0x462>
 802b268:	b34f      	cbz	r7, 802b2be <__kernel_rem_pio2f+0x46e>
 802b26a:	eef1 7a47 	vneg.f32	s15, s14
 802b26e:	edc8 7a00 	vstr	s15, [r8]
 802b272:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 802b276:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b27a:	aa31      	add	r2, sp, #196	; 0xc4
 802b27c:	2301      	movs	r3, #1
 802b27e:	429c      	cmp	r4, r3
 802b280:	da20      	bge.n	802b2c4 <__kernel_rem_pio2f+0x474>
 802b282:	b10f      	cbz	r7, 802b288 <__kernel_rem_pio2f+0x438>
 802b284:	eef1 7a67 	vneg.f32	s15, s15
 802b288:	edc8 7a01 	vstr	s15, [r8, #4]
 802b28c:	e7ba      	b.n	802b204 <__kernel_rem_pio2f+0x3b4>
 802b28e:	ab30      	add	r3, sp, #192	; 0xc0
 802b290:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 802b150 <__kernel_rem_pio2f+0x300>
 802b294:	440b      	add	r3, r1
 802b296:	2c00      	cmp	r4, #0
 802b298:	da05      	bge.n	802b2a6 <__kernel_rem_pio2f+0x456>
 802b29a:	b10f      	cbz	r7, 802b2a0 <__kernel_rem_pio2f+0x450>
 802b29c:	eef1 7a67 	vneg.f32	s15, s15
 802b2a0:	edc8 7a00 	vstr	s15, [r8]
 802b2a4:	e7ae      	b.n	802b204 <__kernel_rem_pio2f+0x3b4>
 802b2a6:	ed33 7a01 	vldmdb	r3!, {s14}
 802b2aa:	3c01      	subs	r4, #1
 802b2ac:	ee77 7a87 	vadd.f32	s15, s15, s14
 802b2b0:	e7f1      	b.n	802b296 <__kernel_rem_pio2f+0x446>
 802b2b2:	ed73 7a01 	vldmdb	r3!, {s15}
 802b2b6:	3a01      	subs	r2, #1
 802b2b8:	ee37 7a27 	vadd.f32	s14, s14, s15
 802b2bc:	e7d2      	b.n	802b264 <__kernel_rem_pio2f+0x414>
 802b2be:	eef0 7a47 	vmov.f32	s15, s14
 802b2c2:	e7d4      	b.n	802b26e <__kernel_rem_pio2f+0x41e>
 802b2c4:	ecb2 7a01 	vldmia	r2!, {s14}
 802b2c8:	3301      	adds	r3, #1
 802b2ca:	ee77 7a87 	vadd.f32	s15, s15, s14
 802b2ce:	e7d6      	b.n	802b27e <__kernel_rem_pio2f+0x42e>
 802b2d0:	edd2 7a00 	vldr	s15, [r2]
 802b2d4:	edd2 6a01 	vldr	s13, [r2, #4]
 802b2d8:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802b2dc:	3801      	subs	r0, #1
 802b2de:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b2e2:	ed82 7a00 	vstr	s14, [r2]
 802b2e6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802b2ea:	edc2 7a01 	vstr	s15, [r2, #4]
 802b2ee:	e798      	b.n	802b222 <__kernel_rem_pio2f+0x3d2>
 802b2f0:	edd3 7a00 	vldr	s15, [r3]
 802b2f4:	edd3 6a01 	vldr	s13, [r3, #4]
 802b2f8:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802b2fc:	3a01      	subs	r2, #1
 802b2fe:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b302:	ed83 7a00 	vstr	s14, [r3]
 802b306:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802b30a:	edc3 7a01 	vstr	s15, [r3, #4]
 802b30e:	e78d      	b.n	802b22c <__kernel_rem_pio2f+0x3dc>
 802b310:	ed33 7a01 	vldmdb	r3!, {s14}
 802b314:	3c01      	subs	r4, #1
 802b316:	ee77 7a87 	vadd.f32	s15, s15, s14
 802b31a:	e78f      	b.n	802b23c <__kernel_rem_pio2f+0x3ec>
 802b31c:	eef1 6a66 	vneg.f32	s13, s13
 802b320:	eeb1 7a47 	vneg.f32	s14, s14
 802b324:	edc8 6a00 	vstr	s13, [r8]
 802b328:	ed88 7a01 	vstr	s14, [r8, #4]
 802b32c:	eef1 7a67 	vneg.f32	s15, s15
 802b330:	e790      	b.n	802b254 <__kernel_rem_pio2f+0x404>
 802b332:	bf00      	nop

0802b334 <abort>:
 802b334:	b508      	push	{r3, lr}
 802b336:	2006      	movs	r0, #6
 802b338:	f000 fa3a 	bl	802b7b0 <raise>
 802b33c:	2001      	movs	r0, #1
 802b33e:	f7d7 ff73 	bl	8003228 <_exit>
	...

0802b344 <__assert_func>:
 802b344:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802b346:	4614      	mov	r4, r2
 802b348:	461a      	mov	r2, r3
 802b34a:	4b09      	ldr	r3, [pc, #36]	; (802b370 <__assert_func+0x2c>)
 802b34c:	681b      	ldr	r3, [r3, #0]
 802b34e:	4605      	mov	r5, r0
 802b350:	68d8      	ldr	r0, [r3, #12]
 802b352:	b14c      	cbz	r4, 802b368 <__assert_func+0x24>
 802b354:	4b07      	ldr	r3, [pc, #28]	; (802b374 <__assert_func+0x30>)
 802b356:	9100      	str	r1, [sp, #0]
 802b358:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802b35c:	4906      	ldr	r1, [pc, #24]	; (802b378 <__assert_func+0x34>)
 802b35e:	462b      	mov	r3, r5
 802b360:	f000 f982 	bl	802b668 <fiprintf>
 802b364:	f7ff ffe6 	bl	802b334 <abort>
 802b368:	4b04      	ldr	r3, [pc, #16]	; (802b37c <__assert_func+0x38>)
 802b36a:	461c      	mov	r4, r3
 802b36c:	e7f3      	b.n	802b356 <__assert_func+0x12>
 802b36e:	bf00      	nop
 802b370:	200000f4 	.word	0x200000f4
 802b374:	080301ac 	.word	0x080301ac
 802b378:	080301b9 	.word	0x080301b9
 802b37c:	080301e7 	.word	0x080301e7

0802b380 <atexit>:
 802b380:	2300      	movs	r3, #0
 802b382:	4601      	mov	r1, r0
 802b384:	461a      	mov	r2, r3
 802b386:	4618      	mov	r0, r3
 802b388:	f000 bac0 	b.w	802b90c <__register_exitproc>

0802b38c <malloc>:
 802b38c:	4b02      	ldr	r3, [pc, #8]	; (802b398 <malloc+0xc>)
 802b38e:	4601      	mov	r1, r0
 802b390:	6818      	ldr	r0, [r3, #0]
 802b392:	f000 b82b 	b.w	802b3ec <_malloc_r>
 802b396:	bf00      	nop
 802b398:	200000f4 	.word	0x200000f4

0802b39c <free>:
 802b39c:	4b02      	ldr	r3, [pc, #8]	; (802b3a8 <free+0xc>)
 802b39e:	4601      	mov	r1, r0
 802b3a0:	6818      	ldr	r0, [r3, #0]
 802b3a2:	f000 bb11 	b.w	802b9c8 <_free_r>
 802b3a6:	bf00      	nop
 802b3a8:	200000f4 	.word	0x200000f4

0802b3ac <sbrk_aligned>:
 802b3ac:	b570      	push	{r4, r5, r6, lr}
 802b3ae:	4e0e      	ldr	r6, [pc, #56]	; (802b3e8 <sbrk_aligned+0x3c>)
 802b3b0:	460c      	mov	r4, r1
 802b3b2:	6831      	ldr	r1, [r6, #0]
 802b3b4:	4605      	mov	r5, r0
 802b3b6:	b911      	cbnz	r1, 802b3be <sbrk_aligned+0x12>
 802b3b8:	f000 fa4a 	bl	802b850 <_sbrk_r>
 802b3bc:	6030      	str	r0, [r6, #0]
 802b3be:	4621      	mov	r1, r4
 802b3c0:	4628      	mov	r0, r5
 802b3c2:	f000 fa45 	bl	802b850 <_sbrk_r>
 802b3c6:	1c43      	adds	r3, r0, #1
 802b3c8:	d00a      	beq.n	802b3e0 <sbrk_aligned+0x34>
 802b3ca:	1cc4      	adds	r4, r0, #3
 802b3cc:	f024 0403 	bic.w	r4, r4, #3
 802b3d0:	42a0      	cmp	r0, r4
 802b3d2:	d007      	beq.n	802b3e4 <sbrk_aligned+0x38>
 802b3d4:	1a21      	subs	r1, r4, r0
 802b3d6:	4628      	mov	r0, r5
 802b3d8:	f000 fa3a 	bl	802b850 <_sbrk_r>
 802b3dc:	3001      	adds	r0, #1
 802b3de:	d101      	bne.n	802b3e4 <sbrk_aligned+0x38>
 802b3e0:	f04f 34ff 	mov.w	r4, #4294967295
 802b3e4:	4620      	mov	r0, r4
 802b3e6:	bd70      	pop	{r4, r5, r6, pc}
 802b3e8:	20002ba4 	.word	0x20002ba4

0802b3ec <_malloc_r>:
 802b3ec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802b3f0:	1ccd      	adds	r5, r1, #3
 802b3f2:	f025 0503 	bic.w	r5, r5, #3
 802b3f6:	3508      	adds	r5, #8
 802b3f8:	2d0c      	cmp	r5, #12
 802b3fa:	bf38      	it	cc
 802b3fc:	250c      	movcc	r5, #12
 802b3fe:	2d00      	cmp	r5, #0
 802b400:	4607      	mov	r7, r0
 802b402:	db01      	blt.n	802b408 <_malloc_r+0x1c>
 802b404:	42a9      	cmp	r1, r5
 802b406:	d905      	bls.n	802b414 <_malloc_r+0x28>
 802b408:	230c      	movs	r3, #12
 802b40a:	603b      	str	r3, [r7, #0]
 802b40c:	2600      	movs	r6, #0
 802b40e:	4630      	mov	r0, r6
 802b410:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802b414:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 802b4e8 <_malloc_r+0xfc>
 802b418:	f000 f868 	bl	802b4ec <__malloc_lock>
 802b41c:	f8d8 3000 	ldr.w	r3, [r8]
 802b420:	461c      	mov	r4, r3
 802b422:	bb5c      	cbnz	r4, 802b47c <_malloc_r+0x90>
 802b424:	4629      	mov	r1, r5
 802b426:	4638      	mov	r0, r7
 802b428:	f7ff ffc0 	bl	802b3ac <sbrk_aligned>
 802b42c:	1c43      	adds	r3, r0, #1
 802b42e:	4604      	mov	r4, r0
 802b430:	d155      	bne.n	802b4de <_malloc_r+0xf2>
 802b432:	f8d8 4000 	ldr.w	r4, [r8]
 802b436:	4626      	mov	r6, r4
 802b438:	2e00      	cmp	r6, #0
 802b43a:	d145      	bne.n	802b4c8 <_malloc_r+0xdc>
 802b43c:	2c00      	cmp	r4, #0
 802b43e:	d048      	beq.n	802b4d2 <_malloc_r+0xe6>
 802b440:	6823      	ldr	r3, [r4, #0]
 802b442:	4631      	mov	r1, r6
 802b444:	4638      	mov	r0, r7
 802b446:	eb04 0903 	add.w	r9, r4, r3
 802b44a:	f000 fa01 	bl	802b850 <_sbrk_r>
 802b44e:	4581      	cmp	r9, r0
 802b450:	d13f      	bne.n	802b4d2 <_malloc_r+0xe6>
 802b452:	6821      	ldr	r1, [r4, #0]
 802b454:	1a6d      	subs	r5, r5, r1
 802b456:	4629      	mov	r1, r5
 802b458:	4638      	mov	r0, r7
 802b45a:	f7ff ffa7 	bl	802b3ac <sbrk_aligned>
 802b45e:	3001      	adds	r0, #1
 802b460:	d037      	beq.n	802b4d2 <_malloc_r+0xe6>
 802b462:	6823      	ldr	r3, [r4, #0]
 802b464:	442b      	add	r3, r5
 802b466:	6023      	str	r3, [r4, #0]
 802b468:	f8d8 3000 	ldr.w	r3, [r8]
 802b46c:	2b00      	cmp	r3, #0
 802b46e:	d038      	beq.n	802b4e2 <_malloc_r+0xf6>
 802b470:	685a      	ldr	r2, [r3, #4]
 802b472:	42a2      	cmp	r2, r4
 802b474:	d12b      	bne.n	802b4ce <_malloc_r+0xe2>
 802b476:	2200      	movs	r2, #0
 802b478:	605a      	str	r2, [r3, #4]
 802b47a:	e00f      	b.n	802b49c <_malloc_r+0xb0>
 802b47c:	6822      	ldr	r2, [r4, #0]
 802b47e:	1b52      	subs	r2, r2, r5
 802b480:	d41f      	bmi.n	802b4c2 <_malloc_r+0xd6>
 802b482:	2a0b      	cmp	r2, #11
 802b484:	d917      	bls.n	802b4b6 <_malloc_r+0xca>
 802b486:	1961      	adds	r1, r4, r5
 802b488:	42a3      	cmp	r3, r4
 802b48a:	6025      	str	r5, [r4, #0]
 802b48c:	bf18      	it	ne
 802b48e:	6059      	strne	r1, [r3, #4]
 802b490:	6863      	ldr	r3, [r4, #4]
 802b492:	bf08      	it	eq
 802b494:	f8c8 1000 	streq.w	r1, [r8]
 802b498:	5162      	str	r2, [r4, r5]
 802b49a:	604b      	str	r3, [r1, #4]
 802b49c:	4638      	mov	r0, r7
 802b49e:	f104 060b 	add.w	r6, r4, #11
 802b4a2:	f000 f829 	bl	802b4f8 <__malloc_unlock>
 802b4a6:	f026 0607 	bic.w	r6, r6, #7
 802b4aa:	1d23      	adds	r3, r4, #4
 802b4ac:	1af2      	subs	r2, r6, r3
 802b4ae:	d0ae      	beq.n	802b40e <_malloc_r+0x22>
 802b4b0:	1b9b      	subs	r3, r3, r6
 802b4b2:	50a3      	str	r3, [r4, r2]
 802b4b4:	e7ab      	b.n	802b40e <_malloc_r+0x22>
 802b4b6:	42a3      	cmp	r3, r4
 802b4b8:	6862      	ldr	r2, [r4, #4]
 802b4ba:	d1dd      	bne.n	802b478 <_malloc_r+0x8c>
 802b4bc:	f8c8 2000 	str.w	r2, [r8]
 802b4c0:	e7ec      	b.n	802b49c <_malloc_r+0xb0>
 802b4c2:	4623      	mov	r3, r4
 802b4c4:	6864      	ldr	r4, [r4, #4]
 802b4c6:	e7ac      	b.n	802b422 <_malloc_r+0x36>
 802b4c8:	4634      	mov	r4, r6
 802b4ca:	6876      	ldr	r6, [r6, #4]
 802b4cc:	e7b4      	b.n	802b438 <_malloc_r+0x4c>
 802b4ce:	4613      	mov	r3, r2
 802b4d0:	e7cc      	b.n	802b46c <_malloc_r+0x80>
 802b4d2:	230c      	movs	r3, #12
 802b4d4:	603b      	str	r3, [r7, #0]
 802b4d6:	4638      	mov	r0, r7
 802b4d8:	f000 f80e 	bl	802b4f8 <__malloc_unlock>
 802b4dc:	e797      	b.n	802b40e <_malloc_r+0x22>
 802b4de:	6025      	str	r5, [r4, #0]
 802b4e0:	e7dc      	b.n	802b49c <_malloc_r+0xb0>
 802b4e2:	605b      	str	r3, [r3, #4]
 802b4e4:	deff      	udf	#255	; 0xff
 802b4e6:	bf00      	nop
 802b4e8:	20002ba0 	.word	0x20002ba0

0802b4ec <__malloc_lock>:
 802b4ec:	4801      	ldr	r0, [pc, #4]	; (802b4f4 <__malloc_lock+0x8>)
 802b4ee:	f000 b9fc 	b.w	802b8ea <__retarget_lock_acquire_recursive>
 802b4f2:	bf00      	nop
 802b4f4:	20002ce9 	.word	0x20002ce9

0802b4f8 <__malloc_unlock>:
 802b4f8:	4801      	ldr	r0, [pc, #4]	; (802b500 <__malloc_unlock+0x8>)
 802b4fa:	f000 b9f7 	b.w	802b8ec <__retarget_lock_release_recursive>
 802b4fe:	bf00      	nop
 802b500:	20002ce9 	.word	0x20002ce9

0802b504 <__cxa_atexit>:
 802b504:	b510      	push	{r4, lr}
 802b506:	4c05      	ldr	r4, [pc, #20]	; (802b51c <__cxa_atexit+0x18>)
 802b508:	4613      	mov	r3, r2
 802b50a:	b12c      	cbz	r4, 802b518 <__cxa_atexit+0x14>
 802b50c:	460a      	mov	r2, r1
 802b50e:	4601      	mov	r1, r0
 802b510:	2002      	movs	r0, #2
 802b512:	f000 f9fb 	bl	802b90c <__register_exitproc>
 802b516:	bd10      	pop	{r4, pc}
 802b518:	4620      	mov	r0, r4
 802b51a:	e7fc      	b.n	802b516 <__cxa_atexit+0x12>
 802b51c:	0802b90d 	.word	0x0802b90d

0802b520 <std>:
 802b520:	2300      	movs	r3, #0
 802b522:	b510      	push	{r4, lr}
 802b524:	4604      	mov	r4, r0
 802b526:	e9c0 3300 	strd	r3, r3, [r0]
 802b52a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802b52e:	6083      	str	r3, [r0, #8]
 802b530:	8181      	strh	r1, [r0, #12]
 802b532:	6643      	str	r3, [r0, #100]	; 0x64
 802b534:	81c2      	strh	r2, [r0, #14]
 802b536:	6183      	str	r3, [r0, #24]
 802b538:	4619      	mov	r1, r3
 802b53a:	2208      	movs	r2, #8
 802b53c:	305c      	adds	r0, #92	; 0x5c
 802b53e:	f000 f906 	bl	802b74e <memset>
 802b542:	4b0d      	ldr	r3, [pc, #52]	; (802b578 <std+0x58>)
 802b544:	6263      	str	r3, [r4, #36]	; 0x24
 802b546:	4b0d      	ldr	r3, [pc, #52]	; (802b57c <std+0x5c>)
 802b548:	62a3      	str	r3, [r4, #40]	; 0x28
 802b54a:	4b0d      	ldr	r3, [pc, #52]	; (802b580 <std+0x60>)
 802b54c:	62e3      	str	r3, [r4, #44]	; 0x2c
 802b54e:	4b0d      	ldr	r3, [pc, #52]	; (802b584 <std+0x64>)
 802b550:	6323      	str	r3, [r4, #48]	; 0x30
 802b552:	4b0d      	ldr	r3, [pc, #52]	; (802b588 <std+0x68>)
 802b554:	6224      	str	r4, [r4, #32]
 802b556:	429c      	cmp	r4, r3
 802b558:	d006      	beq.n	802b568 <std+0x48>
 802b55a:	f103 0268 	add.w	r2, r3, #104	; 0x68
 802b55e:	4294      	cmp	r4, r2
 802b560:	d002      	beq.n	802b568 <std+0x48>
 802b562:	33d0      	adds	r3, #208	; 0xd0
 802b564:	429c      	cmp	r4, r3
 802b566:	d105      	bne.n	802b574 <std+0x54>
 802b568:	f104 0058 	add.w	r0, r4, #88	; 0x58
 802b56c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802b570:	f000 b9ba 	b.w	802b8e8 <__retarget_lock_init_recursive>
 802b574:	bd10      	pop	{r4, pc}
 802b576:	bf00      	nop
 802b578:	0802b6c9 	.word	0x0802b6c9
 802b57c:	0802b6eb 	.word	0x0802b6eb
 802b580:	0802b723 	.word	0x0802b723
 802b584:	0802b747 	.word	0x0802b747
 802b588:	20002ba8 	.word	0x20002ba8

0802b58c <stdio_exit_handler>:
 802b58c:	4a02      	ldr	r2, [pc, #8]	; (802b598 <stdio_exit_handler+0xc>)
 802b58e:	4903      	ldr	r1, [pc, #12]	; (802b59c <stdio_exit_handler+0x10>)
 802b590:	4803      	ldr	r0, [pc, #12]	; (802b5a0 <stdio_exit_handler+0x14>)
 802b592:	f000 b87b 	b.w	802b68c <_fwalk_sglue>
 802b596:	bf00      	nop
 802b598:	2000009c 	.word	0x2000009c
 802b59c:	0802c115 	.word	0x0802c115
 802b5a0:	200000a8 	.word	0x200000a8

0802b5a4 <cleanup_stdio>:
 802b5a4:	6841      	ldr	r1, [r0, #4]
 802b5a6:	4b0c      	ldr	r3, [pc, #48]	; (802b5d8 <cleanup_stdio+0x34>)
 802b5a8:	4299      	cmp	r1, r3
 802b5aa:	b510      	push	{r4, lr}
 802b5ac:	4604      	mov	r4, r0
 802b5ae:	d001      	beq.n	802b5b4 <cleanup_stdio+0x10>
 802b5b0:	f000 fdb0 	bl	802c114 <_fflush_r>
 802b5b4:	68a1      	ldr	r1, [r4, #8]
 802b5b6:	4b09      	ldr	r3, [pc, #36]	; (802b5dc <cleanup_stdio+0x38>)
 802b5b8:	4299      	cmp	r1, r3
 802b5ba:	d002      	beq.n	802b5c2 <cleanup_stdio+0x1e>
 802b5bc:	4620      	mov	r0, r4
 802b5be:	f000 fda9 	bl	802c114 <_fflush_r>
 802b5c2:	68e1      	ldr	r1, [r4, #12]
 802b5c4:	4b06      	ldr	r3, [pc, #24]	; (802b5e0 <cleanup_stdio+0x3c>)
 802b5c6:	4299      	cmp	r1, r3
 802b5c8:	d004      	beq.n	802b5d4 <cleanup_stdio+0x30>
 802b5ca:	4620      	mov	r0, r4
 802b5cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802b5d0:	f000 bda0 	b.w	802c114 <_fflush_r>
 802b5d4:	bd10      	pop	{r4, pc}
 802b5d6:	bf00      	nop
 802b5d8:	20002ba8 	.word	0x20002ba8
 802b5dc:	20002c10 	.word	0x20002c10
 802b5e0:	20002c78 	.word	0x20002c78

0802b5e4 <global_stdio_init.part.0>:
 802b5e4:	b510      	push	{r4, lr}
 802b5e6:	4b0b      	ldr	r3, [pc, #44]	; (802b614 <global_stdio_init.part.0+0x30>)
 802b5e8:	4c0b      	ldr	r4, [pc, #44]	; (802b618 <global_stdio_init.part.0+0x34>)
 802b5ea:	4a0c      	ldr	r2, [pc, #48]	; (802b61c <global_stdio_init.part.0+0x38>)
 802b5ec:	601a      	str	r2, [r3, #0]
 802b5ee:	4620      	mov	r0, r4
 802b5f0:	2200      	movs	r2, #0
 802b5f2:	2104      	movs	r1, #4
 802b5f4:	f7ff ff94 	bl	802b520 <std>
 802b5f8:	f104 0068 	add.w	r0, r4, #104	; 0x68
 802b5fc:	2201      	movs	r2, #1
 802b5fe:	2109      	movs	r1, #9
 802b600:	f7ff ff8e 	bl	802b520 <std>
 802b604:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 802b608:	2202      	movs	r2, #2
 802b60a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802b60e:	2112      	movs	r1, #18
 802b610:	f7ff bf86 	b.w	802b520 <std>
 802b614:	20002ce0 	.word	0x20002ce0
 802b618:	20002ba8 	.word	0x20002ba8
 802b61c:	0802b58d 	.word	0x0802b58d

0802b620 <__sfp_lock_acquire>:
 802b620:	4801      	ldr	r0, [pc, #4]	; (802b628 <__sfp_lock_acquire+0x8>)
 802b622:	f000 b962 	b.w	802b8ea <__retarget_lock_acquire_recursive>
 802b626:	bf00      	nop
 802b628:	20002cea 	.word	0x20002cea

0802b62c <__sfp_lock_release>:
 802b62c:	4801      	ldr	r0, [pc, #4]	; (802b634 <__sfp_lock_release+0x8>)
 802b62e:	f000 b95d 	b.w	802b8ec <__retarget_lock_release_recursive>
 802b632:	bf00      	nop
 802b634:	20002cea 	.word	0x20002cea

0802b638 <__sinit>:
 802b638:	b510      	push	{r4, lr}
 802b63a:	4604      	mov	r4, r0
 802b63c:	f7ff fff0 	bl	802b620 <__sfp_lock_acquire>
 802b640:	6a23      	ldr	r3, [r4, #32]
 802b642:	b11b      	cbz	r3, 802b64c <__sinit+0x14>
 802b644:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802b648:	f7ff bff0 	b.w	802b62c <__sfp_lock_release>
 802b64c:	4b04      	ldr	r3, [pc, #16]	; (802b660 <__sinit+0x28>)
 802b64e:	6223      	str	r3, [r4, #32]
 802b650:	4b04      	ldr	r3, [pc, #16]	; (802b664 <__sinit+0x2c>)
 802b652:	681b      	ldr	r3, [r3, #0]
 802b654:	2b00      	cmp	r3, #0
 802b656:	d1f5      	bne.n	802b644 <__sinit+0xc>
 802b658:	f7ff ffc4 	bl	802b5e4 <global_stdio_init.part.0>
 802b65c:	e7f2      	b.n	802b644 <__sinit+0xc>
 802b65e:	bf00      	nop
 802b660:	0802b5a5 	.word	0x0802b5a5
 802b664:	20002ce0 	.word	0x20002ce0

0802b668 <fiprintf>:
 802b668:	b40e      	push	{r1, r2, r3}
 802b66a:	b503      	push	{r0, r1, lr}
 802b66c:	4601      	mov	r1, r0
 802b66e:	ab03      	add	r3, sp, #12
 802b670:	4805      	ldr	r0, [pc, #20]	; (802b688 <fiprintf+0x20>)
 802b672:	f853 2b04 	ldr.w	r2, [r3], #4
 802b676:	6800      	ldr	r0, [r0, #0]
 802b678:	9301      	str	r3, [sp, #4]
 802b67a:	f000 fa1b 	bl	802bab4 <_vfiprintf_r>
 802b67e:	b002      	add	sp, #8
 802b680:	f85d eb04 	ldr.w	lr, [sp], #4
 802b684:	b003      	add	sp, #12
 802b686:	4770      	bx	lr
 802b688:	200000f4 	.word	0x200000f4

0802b68c <_fwalk_sglue>:
 802b68c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802b690:	4607      	mov	r7, r0
 802b692:	4688      	mov	r8, r1
 802b694:	4614      	mov	r4, r2
 802b696:	2600      	movs	r6, #0
 802b698:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802b69c:	f1b9 0901 	subs.w	r9, r9, #1
 802b6a0:	d505      	bpl.n	802b6ae <_fwalk_sglue+0x22>
 802b6a2:	6824      	ldr	r4, [r4, #0]
 802b6a4:	2c00      	cmp	r4, #0
 802b6a6:	d1f7      	bne.n	802b698 <_fwalk_sglue+0xc>
 802b6a8:	4630      	mov	r0, r6
 802b6aa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802b6ae:	89ab      	ldrh	r3, [r5, #12]
 802b6b0:	2b01      	cmp	r3, #1
 802b6b2:	d907      	bls.n	802b6c4 <_fwalk_sglue+0x38>
 802b6b4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802b6b8:	3301      	adds	r3, #1
 802b6ba:	d003      	beq.n	802b6c4 <_fwalk_sglue+0x38>
 802b6bc:	4629      	mov	r1, r5
 802b6be:	4638      	mov	r0, r7
 802b6c0:	47c0      	blx	r8
 802b6c2:	4306      	orrs	r6, r0
 802b6c4:	3568      	adds	r5, #104	; 0x68
 802b6c6:	e7e9      	b.n	802b69c <_fwalk_sglue+0x10>

0802b6c8 <__sread>:
 802b6c8:	b510      	push	{r4, lr}
 802b6ca:	460c      	mov	r4, r1
 802b6cc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b6d0:	f000 f898 	bl	802b804 <_read_r>
 802b6d4:	2800      	cmp	r0, #0
 802b6d6:	bfab      	itete	ge
 802b6d8:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802b6da:	89a3      	ldrhlt	r3, [r4, #12]
 802b6dc:	181b      	addge	r3, r3, r0
 802b6de:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802b6e2:	bfac      	ite	ge
 802b6e4:	6563      	strge	r3, [r4, #84]	; 0x54
 802b6e6:	81a3      	strhlt	r3, [r4, #12]
 802b6e8:	bd10      	pop	{r4, pc}

0802b6ea <__swrite>:
 802b6ea:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b6ee:	461f      	mov	r7, r3
 802b6f0:	898b      	ldrh	r3, [r1, #12]
 802b6f2:	05db      	lsls	r3, r3, #23
 802b6f4:	4605      	mov	r5, r0
 802b6f6:	460c      	mov	r4, r1
 802b6f8:	4616      	mov	r6, r2
 802b6fa:	d505      	bpl.n	802b708 <__swrite+0x1e>
 802b6fc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b700:	2302      	movs	r3, #2
 802b702:	2200      	movs	r2, #0
 802b704:	f000 f86c 	bl	802b7e0 <_lseek_r>
 802b708:	89a3      	ldrh	r3, [r4, #12]
 802b70a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802b70e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802b712:	81a3      	strh	r3, [r4, #12]
 802b714:	4632      	mov	r2, r6
 802b716:	463b      	mov	r3, r7
 802b718:	4628      	mov	r0, r5
 802b71a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802b71e:	f000 b8a7 	b.w	802b870 <_write_r>

0802b722 <__sseek>:
 802b722:	b510      	push	{r4, lr}
 802b724:	460c      	mov	r4, r1
 802b726:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b72a:	f000 f859 	bl	802b7e0 <_lseek_r>
 802b72e:	1c43      	adds	r3, r0, #1
 802b730:	89a3      	ldrh	r3, [r4, #12]
 802b732:	bf15      	itete	ne
 802b734:	6560      	strne	r0, [r4, #84]	; 0x54
 802b736:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802b73a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802b73e:	81a3      	strheq	r3, [r4, #12]
 802b740:	bf18      	it	ne
 802b742:	81a3      	strhne	r3, [r4, #12]
 802b744:	bd10      	pop	{r4, pc}

0802b746 <__sclose>:
 802b746:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b74a:	f000 b839 	b.w	802b7c0 <_close_r>

0802b74e <memset>:
 802b74e:	4402      	add	r2, r0
 802b750:	4603      	mov	r3, r0
 802b752:	4293      	cmp	r3, r2
 802b754:	d100      	bne.n	802b758 <memset+0xa>
 802b756:	4770      	bx	lr
 802b758:	f803 1b01 	strb.w	r1, [r3], #1
 802b75c:	e7f9      	b.n	802b752 <memset+0x4>

0802b75e <_raise_r>:
 802b75e:	291f      	cmp	r1, #31
 802b760:	b538      	push	{r3, r4, r5, lr}
 802b762:	4604      	mov	r4, r0
 802b764:	460d      	mov	r5, r1
 802b766:	d904      	bls.n	802b772 <_raise_r+0x14>
 802b768:	2316      	movs	r3, #22
 802b76a:	6003      	str	r3, [r0, #0]
 802b76c:	f04f 30ff 	mov.w	r0, #4294967295
 802b770:	bd38      	pop	{r3, r4, r5, pc}
 802b772:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 802b774:	b112      	cbz	r2, 802b77c <_raise_r+0x1e>
 802b776:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802b77a:	b94b      	cbnz	r3, 802b790 <_raise_r+0x32>
 802b77c:	4620      	mov	r0, r4
 802b77e:	f000 f865 	bl	802b84c <_getpid_r>
 802b782:	462a      	mov	r2, r5
 802b784:	4601      	mov	r1, r0
 802b786:	4620      	mov	r0, r4
 802b788:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802b78c:	f000 b84c 	b.w	802b828 <_kill_r>
 802b790:	2b01      	cmp	r3, #1
 802b792:	d00a      	beq.n	802b7aa <_raise_r+0x4c>
 802b794:	1c59      	adds	r1, r3, #1
 802b796:	d103      	bne.n	802b7a0 <_raise_r+0x42>
 802b798:	2316      	movs	r3, #22
 802b79a:	6003      	str	r3, [r0, #0]
 802b79c:	2001      	movs	r0, #1
 802b79e:	e7e7      	b.n	802b770 <_raise_r+0x12>
 802b7a0:	2400      	movs	r4, #0
 802b7a2:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802b7a6:	4628      	mov	r0, r5
 802b7a8:	4798      	blx	r3
 802b7aa:	2000      	movs	r0, #0
 802b7ac:	e7e0      	b.n	802b770 <_raise_r+0x12>
	...

0802b7b0 <raise>:
 802b7b0:	4b02      	ldr	r3, [pc, #8]	; (802b7bc <raise+0xc>)
 802b7b2:	4601      	mov	r1, r0
 802b7b4:	6818      	ldr	r0, [r3, #0]
 802b7b6:	f7ff bfd2 	b.w	802b75e <_raise_r>
 802b7ba:	bf00      	nop
 802b7bc:	200000f4 	.word	0x200000f4

0802b7c0 <_close_r>:
 802b7c0:	b538      	push	{r3, r4, r5, lr}
 802b7c2:	4d06      	ldr	r5, [pc, #24]	; (802b7dc <_close_r+0x1c>)
 802b7c4:	2300      	movs	r3, #0
 802b7c6:	4604      	mov	r4, r0
 802b7c8:	4608      	mov	r0, r1
 802b7ca:	602b      	str	r3, [r5, #0]
 802b7cc:	f7d7 fd6f 	bl	80032ae <_close>
 802b7d0:	1c43      	adds	r3, r0, #1
 802b7d2:	d102      	bne.n	802b7da <_close_r+0x1a>
 802b7d4:	682b      	ldr	r3, [r5, #0]
 802b7d6:	b103      	cbz	r3, 802b7da <_close_r+0x1a>
 802b7d8:	6023      	str	r3, [r4, #0]
 802b7da:	bd38      	pop	{r3, r4, r5, pc}
 802b7dc:	20002ce4 	.word	0x20002ce4

0802b7e0 <_lseek_r>:
 802b7e0:	b538      	push	{r3, r4, r5, lr}
 802b7e2:	4d07      	ldr	r5, [pc, #28]	; (802b800 <_lseek_r+0x20>)
 802b7e4:	4604      	mov	r4, r0
 802b7e6:	4608      	mov	r0, r1
 802b7e8:	4611      	mov	r1, r2
 802b7ea:	2200      	movs	r2, #0
 802b7ec:	602a      	str	r2, [r5, #0]
 802b7ee:	461a      	mov	r2, r3
 802b7f0:	f7d7 fd84 	bl	80032fc <_lseek>
 802b7f4:	1c43      	adds	r3, r0, #1
 802b7f6:	d102      	bne.n	802b7fe <_lseek_r+0x1e>
 802b7f8:	682b      	ldr	r3, [r5, #0]
 802b7fa:	b103      	cbz	r3, 802b7fe <_lseek_r+0x1e>
 802b7fc:	6023      	str	r3, [r4, #0]
 802b7fe:	bd38      	pop	{r3, r4, r5, pc}
 802b800:	20002ce4 	.word	0x20002ce4

0802b804 <_read_r>:
 802b804:	b538      	push	{r3, r4, r5, lr}
 802b806:	4d07      	ldr	r5, [pc, #28]	; (802b824 <_read_r+0x20>)
 802b808:	4604      	mov	r4, r0
 802b80a:	4608      	mov	r0, r1
 802b80c:	4611      	mov	r1, r2
 802b80e:	2200      	movs	r2, #0
 802b810:	602a      	str	r2, [r5, #0]
 802b812:	461a      	mov	r2, r3
 802b814:	f7d7 fd12 	bl	800323c <_read>
 802b818:	1c43      	adds	r3, r0, #1
 802b81a:	d102      	bne.n	802b822 <_read_r+0x1e>
 802b81c:	682b      	ldr	r3, [r5, #0]
 802b81e:	b103      	cbz	r3, 802b822 <_read_r+0x1e>
 802b820:	6023      	str	r3, [r4, #0]
 802b822:	bd38      	pop	{r3, r4, r5, pc}
 802b824:	20002ce4 	.word	0x20002ce4

0802b828 <_kill_r>:
 802b828:	b538      	push	{r3, r4, r5, lr}
 802b82a:	4d07      	ldr	r5, [pc, #28]	; (802b848 <_kill_r+0x20>)
 802b82c:	2300      	movs	r3, #0
 802b82e:	4604      	mov	r4, r0
 802b830:	4608      	mov	r0, r1
 802b832:	4611      	mov	r1, r2
 802b834:	602b      	str	r3, [r5, #0]
 802b836:	f7d7 fce7 	bl	8003208 <_kill>
 802b83a:	1c43      	adds	r3, r0, #1
 802b83c:	d102      	bne.n	802b844 <_kill_r+0x1c>
 802b83e:	682b      	ldr	r3, [r5, #0]
 802b840:	b103      	cbz	r3, 802b844 <_kill_r+0x1c>
 802b842:	6023      	str	r3, [r4, #0]
 802b844:	bd38      	pop	{r3, r4, r5, pc}
 802b846:	bf00      	nop
 802b848:	20002ce4 	.word	0x20002ce4

0802b84c <_getpid_r>:
 802b84c:	f7d7 bcd4 	b.w	80031f8 <_getpid>

0802b850 <_sbrk_r>:
 802b850:	b538      	push	{r3, r4, r5, lr}
 802b852:	4d06      	ldr	r5, [pc, #24]	; (802b86c <_sbrk_r+0x1c>)
 802b854:	2300      	movs	r3, #0
 802b856:	4604      	mov	r4, r0
 802b858:	4608      	mov	r0, r1
 802b85a:	602b      	str	r3, [r5, #0]
 802b85c:	f7d7 fd5c 	bl	8003318 <_sbrk>
 802b860:	1c43      	adds	r3, r0, #1
 802b862:	d102      	bne.n	802b86a <_sbrk_r+0x1a>
 802b864:	682b      	ldr	r3, [r5, #0]
 802b866:	b103      	cbz	r3, 802b86a <_sbrk_r+0x1a>
 802b868:	6023      	str	r3, [r4, #0]
 802b86a:	bd38      	pop	{r3, r4, r5, pc}
 802b86c:	20002ce4 	.word	0x20002ce4

0802b870 <_write_r>:
 802b870:	b538      	push	{r3, r4, r5, lr}
 802b872:	4d07      	ldr	r5, [pc, #28]	; (802b890 <_write_r+0x20>)
 802b874:	4604      	mov	r4, r0
 802b876:	4608      	mov	r0, r1
 802b878:	4611      	mov	r1, r2
 802b87a:	2200      	movs	r2, #0
 802b87c:	602a      	str	r2, [r5, #0]
 802b87e:	461a      	mov	r2, r3
 802b880:	f7d7 fcf9 	bl	8003276 <_write>
 802b884:	1c43      	adds	r3, r0, #1
 802b886:	d102      	bne.n	802b88e <_write_r+0x1e>
 802b888:	682b      	ldr	r3, [r5, #0]
 802b88a:	b103      	cbz	r3, 802b88e <_write_r+0x1e>
 802b88c:	6023      	str	r3, [r4, #0]
 802b88e:	bd38      	pop	{r3, r4, r5, pc}
 802b890:	20002ce4 	.word	0x20002ce4

0802b894 <__errno>:
 802b894:	4b01      	ldr	r3, [pc, #4]	; (802b89c <__errno+0x8>)
 802b896:	6818      	ldr	r0, [r3, #0]
 802b898:	4770      	bx	lr
 802b89a:	bf00      	nop
 802b89c:	200000f4 	.word	0x200000f4

0802b8a0 <__libc_init_array>:
 802b8a0:	b570      	push	{r4, r5, r6, lr}
 802b8a2:	4d0d      	ldr	r5, [pc, #52]	; (802b8d8 <__libc_init_array+0x38>)
 802b8a4:	4c0d      	ldr	r4, [pc, #52]	; (802b8dc <__libc_init_array+0x3c>)
 802b8a6:	1b64      	subs	r4, r4, r5
 802b8a8:	10a4      	asrs	r4, r4, #2
 802b8aa:	2600      	movs	r6, #0
 802b8ac:	42a6      	cmp	r6, r4
 802b8ae:	d109      	bne.n	802b8c4 <__libc_init_array+0x24>
 802b8b0:	4d0b      	ldr	r5, [pc, #44]	; (802b8e0 <__libc_init_array+0x40>)
 802b8b2:	4c0c      	ldr	r4, [pc, #48]	; (802b8e4 <__libc_init_array+0x44>)
 802b8b4:	f000 fd70 	bl	802c398 <_init>
 802b8b8:	1b64      	subs	r4, r4, r5
 802b8ba:	10a4      	asrs	r4, r4, #2
 802b8bc:	2600      	movs	r6, #0
 802b8be:	42a6      	cmp	r6, r4
 802b8c0:	d105      	bne.n	802b8ce <__libc_init_array+0x2e>
 802b8c2:	bd70      	pop	{r4, r5, r6, pc}
 802b8c4:	f855 3b04 	ldr.w	r3, [r5], #4
 802b8c8:	4798      	blx	r3
 802b8ca:	3601      	adds	r6, #1
 802b8cc:	e7ee      	b.n	802b8ac <__libc_init_array+0xc>
 802b8ce:	f855 3b04 	ldr.w	r3, [r5], #4
 802b8d2:	4798      	blx	r3
 802b8d4:	3601      	adds	r6, #1
 802b8d6:	e7f2      	b.n	802b8be <__libc_init_array+0x1e>
 802b8d8:	0804ce80 	.word	0x0804ce80
 802b8dc:	0804ce80 	.word	0x0804ce80
 802b8e0:	0804ce80 	.word	0x0804ce80
 802b8e4:	0804ce98 	.word	0x0804ce98

0802b8e8 <__retarget_lock_init_recursive>:
 802b8e8:	4770      	bx	lr

0802b8ea <__retarget_lock_acquire_recursive>:
 802b8ea:	4770      	bx	lr

0802b8ec <__retarget_lock_release_recursive>:
 802b8ec:	4770      	bx	lr

0802b8ee <memcpy>:
 802b8ee:	440a      	add	r2, r1
 802b8f0:	4291      	cmp	r1, r2
 802b8f2:	f100 33ff 	add.w	r3, r0, #4294967295
 802b8f6:	d100      	bne.n	802b8fa <memcpy+0xc>
 802b8f8:	4770      	bx	lr
 802b8fa:	b510      	push	{r4, lr}
 802b8fc:	f811 4b01 	ldrb.w	r4, [r1], #1
 802b900:	f803 4f01 	strb.w	r4, [r3, #1]!
 802b904:	4291      	cmp	r1, r2
 802b906:	d1f9      	bne.n	802b8fc <memcpy+0xe>
 802b908:	bd10      	pop	{r4, pc}
	...

0802b90c <__register_exitproc>:
 802b90c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802b910:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 802b9c4 <__register_exitproc+0xb8>
 802b914:	4606      	mov	r6, r0
 802b916:	f8d8 0000 	ldr.w	r0, [r8]
 802b91a:	461f      	mov	r7, r3
 802b91c:	460d      	mov	r5, r1
 802b91e:	4691      	mov	r9, r2
 802b920:	f7ff ffe3 	bl	802b8ea <__retarget_lock_acquire_recursive>
 802b924:	4b23      	ldr	r3, [pc, #140]	; (802b9b4 <__register_exitproc+0xa8>)
 802b926:	681c      	ldr	r4, [r3, #0]
 802b928:	b934      	cbnz	r4, 802b938 <__register_exitproc+0x2c>
 802b92a:	4c23      	ldr	r4, [pc, #140]	; (802b9b8 <__register_exitproc+0xac>)
 802b92c:	601c      	str	r4, [r3, #0]
 802b92e:	4b23      	ldr	r3, [pc, #140]	; (802b9bc <__register_exitproc+0xb0>)
 802b930:	b113      	cbz	r3, 802b938 <__register_exitproc+0x2c>
 802b932:	681b      	ldr	r3, [r3, #0]
 802b934:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802b938:	6863      	ldr	r3, [r4, #4]
 802b93a:	2b1f      	cmp	r3, #31
 802b93c:	dd07      	ble.n	802b94e <__register_exitproc+0x42>
 802b93e:	f8d8 0000 	ldr.w	r0, [r8]
 802b942:	f7ff ffd3 	bl	802b8ec <__retarget_lock_release_recursive>
 802b946:	f04f 30ff 	mov.w	r0, #4294967295
 802b94a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802b94e:	b32e      	cbz	r6, 802b99c <__register_exitproc+0x90>
 802b950:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802b954:	b968      	cbnz	r0, 802b972 <__register_exitproc+0x66>
 802b956:	4b1a      	ldr	r3, [pc, #104]	; (802b9c0 <__register_exitproc+0xb4>)
 802b958:	2b00      	cmp	r3, #0
 802b95a:	d0f0      	beq.n	802b93e <__register_exitproc+0x32>
 802b95c:	f44f 7084 	mov.w	r0, #264	; 0x108
 802b960:	f7ff fd14 	bl	802b38c <malloc>
 802b964:	2800      	cmp	r0, #0
 802b966:	d0ea      	beq.n	802b93e <__register_exitproc+0x32>
 802b968:	2300      	movs	r3, #0
 802b96a:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802b96e:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802b972:	6863      	ldr	r3, [r4, #4]
 802b974:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802b978:	2201      	movs	r2, #1
 802b97a:	409a      	lsls	r2, r3
 802b97c:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802b980:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802b984:	4313      	orrs	r3, r2
 802b986:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802b98a:	2e02      	cmp	r6, #2
 802b98c:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802b990:	bf02      	ittt	eq
 802b992:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802b996:	4313      	orreq	r3, r2
 802b998:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 802b99c:	6863      	ldr	r3, [r4, #4]
 802b99e:	f8d8 0000 	ldr.w	r0, [r8]
 802b9a2:	1c5a      	adds	r2, r3, #1
 802b9a4:	3302      	adds	r3, #2
 802b9a6:	6062      	str	r2, [r4, #4]
 802b9a8:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 802b9ac:	f7ff ff9e 	bl	802b8ec <__retarget_lock_release_recursive>
 802b9b0:	2000      	movs	r0, #0
 802b9b2:	e7ca      	b.n	802b94a <__register_exitproc+0x3e>
 802b9b4:	20002d78 	.word	0x20002d78
 802b9b8:	20002cec 	.word	0x20002cec
 802b9bc:	080301e8 	.word	0x080301e8
 802b9c0:	0802b38d 	.word	0x0802b38d
 802b9c4:	200000f8 	.word	0x200000f8

0802b9c8 <_free_r>:
 802b9c8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802b9ca:	2900      	cmp	r1, #0
 802b9cc:	d044      	beq.n	802ba58 <_free_r+0x90>
 802b9ce:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802b9d2:	9001      	str	r0, [sp, #4]
 802b9d4:	2b00      	cmp	r3, #0
 802b9d6:	f1a1 0404 	sub.w	r4, r1, #4
 802b9da:	bfb8      	it	lt
 802b9dc:	18e4      	addlt	r4, r4, r3
 802b9de:	f7ff fd85 	bl	802b4ec <__malloc_lock>
 802b9e2:	4a1e      	ldr	r2, [pc, #120]	; (802ba5c <_free_r+0x94>)
 802b9e4:	9801      	ldr	r0, [sp, #4]
 802b9e6:	6813      	ldr	r3, [r2, #0]
 802b9e8:	b933      	cbnz	r3, 802b9f8 <_free_r+0x30>
 802b9ea:	6063      	str	r3, [r4, #4]
 802b9ec:	6014      	str	r4, [r2, #0]
 802b9ee:	b003      	add	sp, #12
 802b9f0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802b9f4:	f7ff bd80 	b.w	802b4f8 <__malloc_unlock>
 802b9f8:	42a3      	cmp	r3, r4
 802b9fa:	d908      	bls.n	802ba0e <_free_r+0x46>
 802b9fc:	6825      	ldr	r5, [r4, #0]
 802b9fe:	1961      	adds	r1, r4, r5
 802ba00:	428b      	cmp	r3, r1
 802ba02:	bf01      	itttt	eq
 802ba04:	6819      	ldreq	r1, [r3, #0]
 802ba06:	685b      	ldreq	r3, [r3, #4]
 802ba08:	1949      	addeq	r1, r1, r5
 802ba0a:	6021      	streq	r1, [r4, #0]
 802ba0c:	e7ed      	b.n	802b9ea <_free_r+0x22>
 802ba0e:	461a      	mov	r2, r3
 802ba10:	685b      	ldr	r3, [r3, #4]
 802ba12:	b10b      	cbz	r3, 802ba18 <_free_r+0x50>
 802ba14:	42a3      	cmp	r3, r4
 802ba16:	d9fa      	bls.n	802ba0e <_free_r+0x46>
 802ba18:	6811      	ldr	r1, [r2, #0]
 802ba1a:	1855      	adds	r5, r2, r1
 802ba1c:	42a5      	cmp	r5, r4
 802ba1e:	d10b      	bne.n	802ba38 <_free_r+0x70>
 802ba20:	6824      	ldr	r4, [r4, #0]
 802ba22:	4421      	add	r1, r4
 802ba24:	1854      	adds	r4, r2, r1
 802ba26:	42a3      	cmp	r3, r4
 802ba28:	6011      	str	r1, [r2, #0]
 802ba2a:	d1e0      	bne.n	802b9ee <_free_r+0x26>
 802ba2c:	681c      	ldr	r4, [r3, #0]
 802ba2e:	685b      	ldr	r3, [r3, #4]
 802ba30:	6053      	str	r3, [r2, #4]
 802ba32:	440c      	add	r4, r1
 802ba34:	6014      	str	r4, [r2, #0]
 802ba36:	e7da      	b.n	802b9ee <_free_r+0x26>
 802ba38:	d902      	bls.n	802ba40 <_free_r+0x78>
 802ba3a:	230c      	movs	r3, #12
 802ba3c:	6003      	str	r3, [r0, #0]
 802ba3e:	e7d6      	b.n	802b9ee <_free_r+0x26>
 802ba40:	6825      	ldr	r5, [r4, #0]
 802ba42:	1961      	adds	r1, r4, r5
 802ba44:	428b      	cmp	r3, r1
 802ba46:	bf04      	itt	eq
 802ba48:	6819      	ldreq	r1, [r3, #0]
 802ba4a:	685b      	ldreq	r3, [r3, #4]
 802ba4c:	6063      	str	r3, [r4, #4]
 802ba4e:	bf04      	itt	eq
 802ba50:	1949      	addeq	r1, r1, r5
 802ba52:	6021      	streq	r1, [r4, #0]
 802ba54:	6054      	str	r4, [r2, #4]
 802ba56:	e7ca      	b.n	802b9ee <_free_r+0x26>
 802ba58:	b003      	add	sp, #12
 802ba5a:	bd30      	pop	{r4, r5, pc}
 802ba5c:	20002ba0 	.word	0x20002ba0

0802ba60 <__sfputc_r>:
 802ba60:	6893      	ldr	r3, [r2, #8]
 802ba62:	3b01      	subs	r3, #1
 802ba64:	2b00      	cmp	r3, #0
 802ba66:	b410      	push	{r4}
 802ba68:	6093      	str	r3, [r2, #8]
 802ba6a:	da08      	bge.n	802ba7e <__sfputc_r+0x1e>
 802ba6c:	6994      	ldr	r4, [r2, #24]
 802ba6e:	42a3      	cmp	r3, r4
 802ba70:	db01      	blt.n	802ba76 <__sfputc_r+0x16>
 802ba72:	290a      	cmp	r1, #10
 802ba74:	d103      	bne.n	802ba7e <__sfputc_r+0x1e>
 802ba76:	f85d 4b04 	ldr.w	r4, [sp], #4
 802ba7a:	f000 bb73 	b.w	802c164 <__swbuf_r>
 802ba7e:	6813      	ldr	r3, [r2, #0]
 802ba80:	1c58      	adds	r0, r3, #1
 802ba82:	6010      	str	r0, [r2, #0]
 802ba84:	7019      	strb	r1, [r3, #0]
 802ba86:	4608      	mov	r0, r1
 802ba88:	f85d 4b04 	ldr.w	r4, [sp], #4
 802ba8c:	4770      	bx	lr

0802ba8e <__sfputs_r>:
 802ba8e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802ba90:	4606      	mov	r6, r0
 802ba92:	460f      	mov	r7, r1
 802ba94:	4614      	mov	r4, r2
 802ba96:	18d5      	adds	r5, r2, r3
 802ba98:	42ac      	cmp	r4, r5
 802ba9a:	d101      	bne.n	802baa0 <__sfputs_r+0x12>
 802ba9c:	2000      	movs	r0, #0
 802ba9e:	e007      	b.n	802bab0 <__sfputs_r+0x22>
 802baa0:	f814 1b01 	ldrb.w	r1, [r4], #1
 802baa4:	463a      	mov	r2, r7
 802baa6:	4630      	mov	r0, r6
 802baa8:	f7ff ffda 	bl	802ba60 <__sfputc_r>
 802baac:	1c43      	adds	r3, r0, #1
 802baae:	d1f3      	bne.n	802ba98 <__sfputs_r+0xa>
 802bab0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802bab4 <_vfiprintf_r>:
 802bab4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802bab8:	460d      	mov	r5, r1
 802baba:	b09d      	sub	sp, #116	; 0x74
 802babc:	4614      	mov	r4, r2
 802babe:	4698      	mov	r8, r3
 802bac0:	4606      	mov	r6, r0
 802bac2:	b118      	cbz	r0, 802bacc <_vfiprintf_r+0x18>
 802bac4:	6a03      	ldr	r3, [r0, #32]
 802bac6:	b90b      	cbnz	r3, 802bacc <_vfiprintf_r+0x18>
 802bac8:	f7ff fdb6 	bl	802b638 <__sinit>
 802bacc:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802bace:	07d9      	lsls	r1, r3, #31
 802bad0:	d405      	bmi.n	802bade <_vfiprintf_r+0x2a>
 802bad2:	89ab      	ldrh	r3, [r5, #12]
 802bad4:	059a      	lsls	r2, r3, #22
 802bad6:	d402      	bmi.n	802bade <_vfiprintf_r+0x2a>
 802bad8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802bada:	f7ff ff06 	bl	802b8ea <__retarget_lock_acquire_recursive>
 802bade:	89ab      	ldrh	r3, [r5, #12]
 802bae0:	071b      	lsls	r3, r3, #28
 802bae2:	d501      	bpl.n	802bae8 <_vfiprintf_r+0x34>
 802bae4:	692b      	ldr	r3, [r5, #16]
 802bae6:	b99b      	cbnz	r3, 802bb10 <_vfiprintf_r+0x5c>
 802bae8:	4629      	mov	r1, r5
 802baea:	4630      	mov	r0, r6
 802baec:	f000 fb78 	bl	802c1e0 <__swsetup_r>
 802baf0:	b170      	cbz	r0, 802bb10 <_vfiprintf_r+0x5c>
 802baf2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802baf4:	07dc      	lsls	r4, r3, #31
 802baf6:	d504      	bpl.n	802bb02 <_vfiprintf_r+0x4e>
 802baf8:	f04f 30ff 	mov.w	r0, #4294967295
 802bafc:	b01d      	add	sp, #116	; 0x74
 802bafe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802bb02:	89ab      	ldrh	r3, [r5, #12]
 802bb04:	0598      	lsls	r0, r3, #22
 802bb06:	d4f7      	bmi.n	802baf8 <_vfiprintf_r+0x44>
 802bb08:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802bb0a:	f7ff feef 	bl	802b8ec <__retarget_lock_release_recursive>
 802bb0e:	e7f3      	b.n	802baf8 <_vfiprintf_r+0x44>
 802bb10:	2300      	movs	r3, #0
 802bb12:	9309      	str	r3, [sp, #36]	; 0x24
 802bb14:	2320      	movs	r3, #32
 802bb16:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802bb1a:	f8cd 800c 	str.w	r8, [sp, #12]
 802bb1e:	2330      	movs	r3, #48	; 0x30
 802bb20:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 802bcd4 <_vfiprintf_r+0x220>
 802bb24:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802bb28:	f04f 0901 	mov.w	r9, #1
 802bb2c:	4623      	mov	r3, r4
 802bb2e:	469a      	mov	sl, r3
 802bb30:	f813 2b01 	ldrb.w	r2, [r3], #1
 802bb34:	b10a      	cbz	r2, 802bb3a <_vfiprintf_r+0x86>
 802bb36:	2a25      	cmp	r2, #37	; 0x25
 802bb38:	d1f9      	bne.n	802bb2e <_vfiprintf_r+0x7a>
 802bb3a:	ebba 0b04 	subs.w	fp, sl, r4
 802bb3e:	d00b      	beq.n	802bb58 <_vfiprintf_r+0xa4>
 802bb40:	465b      	mov	r3, fp
 802bb42:	4622      	mov	r2, r4
 802bb44:	4629      	mov	r1, r5
 802bb46:	4630      	mov	r0, r6
 802bb48:	f7ff ffa1 	bl	802ba8e <__sfputs_r>
 802bb4c:	3001      	adds	r0, #1
 802bb4e:	f000 80a9 	beq.w	802bca4 <_vfiprintf_r+0x1f0>
 802bb52:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802bb54:	445a      	add	r2, fp
 802bb56:	9209      	str	r2, [sp, #36]	; 0x24
 802bb58:	f89a 3000 	ldrb.w	r3, [sl]
 802bb5c:	2b00      	cmp	r3, #0
 802bb5e:	f000 80a1 	beq.w	802bca4 <_vfiprintf_r+0x1f0>
 802bb62:	2300      	movs	r3, #0
 802bb64:	f04f 32ff 	mov.w	r2, #4294967295
 802bb68:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802bb6c:	f10a 0a01 	add.w	sl, sl, #1
 802bb70:	9304      	str	r3, [sp, #16]
 802bb72:	9307      	str	r3, [sp, #28]
 802bb74:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802bb78:	931a      	str	r3, [sp, #104]	; 0x68
 802bb7a:	4654      	mov	r4, sl
 802bb7c:	2205      	movs	r2, #5
 802bb7e:	f814 1b01 	ldrb.w	r1, [r4], #1
 802bb82:	4854      	ldr	r0, [pc, #336]	; (802bcd4 <_vfiprintf_r+0x220>)
 802bb84:	f7d4 fb2c 	bl	80001e0 <memchr>
 802bb88:	9a04      	ldr	r2, [sp, #16]
 802bb8a:	b9d8      	cbnz	r0, 802bbc4 <_vfiprintf_r+0x110>
 802bb8c:	06d1      	lsls	r1, r2, #27
 802bb8e:	bf44      	itt	mi
 802bb90:	2320      	movmi	r3, #32
 802bb92:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802bb96:	0713      	lsls	r3, r2, #28
 802bb98:	bf44      	itt	mi
 802bb9a:	232b      	movmi	r3, #43	; 0x2b
 802bb9c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802bba0:	f89a 3000 	ldrb.w	r3, [sl]
 802bba4:	2b2a      	cmp	r3, #42	; 0x2a
 802bba6:	d015      	beq.n	802bbd4 <_vfiprintf_r+0x120>
 802bba8:	9a07      	ldr	r2, [sp, #28]
 802bbaa:	4654      	mov	r4, sl
 802bbac:	2000      	movs	r0, #0
 802bbae:	f04f 0c0a 	mov.w	ip, #10
 802bbb2:	4621      	mov	r1, r4
 802bbb4:	f811 3b01 	ldrb.w	r3, [r1], #1
 802bbb8:	3b30      	subs	r3, #48	; 0x30
 802bbba:	2b09      	cmp	r3, #9
 802bbbc:	d94d      	bls.n	802bc5a <_vfiprintf_r+0x1a6>
 802bbbe:	b1b0      	cbz	r0, 802bbee <_vfiprintf_r+0x13a>
 802bbc0:	9207      	str	r2, [sp, #28]
 802bbc2:	e014      	b.n	802bbee <_vfiprintf_r+0x13a>
 802bbc4:	eba0 0308 	sub.w	r3, r0, r8
 802bbc8:	fa09 f303 	lsl.w	r3, r9, r3
 802bbcc:	4313      	orrs	r3, r2
 802bbce:	9304      	str	r3, [sp, #16]
 802bbd0:	46a2      	mov	sl, r4
 802bbd2:	e7d2      	b.n	802bb7a <_vfiprintf_r+0xc6>
 802bbd4:	9b03      	ldr	r3, [sp, #12]
 802bbd6:	1d19      	adds	r1, r3, #4
 802bbd8:	681b      	ldr	r3, [r3, #0]
 802bbda:	9103      	str	r1, [sp, #12]
 802bbdc:	2b00      	cmp	r3, #0
 802bbde:	bfbb      	ittet	lt
 802bbe0:	425b      	neglt	r3, r3
 802bbe2:	f042 0202 	orrlt.w	r2, r2, #2
 802bbe6:	9307      	strge	r3, [sp, #28]
 802bbe8:	9307      	strlt	r3, [sp, #28]
 802bbea:	bfb8      	it	lt
 802bbec:	9204      	strlt	r2, [sp, #16]
 802bbee:	7823      	ldrb	r3, [r4, #0]
 802bbf0:	2b2e      	cmp	r3, #46	; 0x2e
 802bbf2:	d10c      	bne.n	802bc0e <_vfiprintf_r+0x15a>
 802bbf4:	7863      	ldrb	r3, [r4, #1]
 802bbf6:	2b2a      	cmp	r3, #42	; 0x2a
 802bbf8:	d134      	bne.n	802bc64 <_vfiprintf_r+0x1b0>
 802bbfa:	9b03      	ldr	r3, [sp, #12]
 802bbfc:	1d1a      	adds	r2, r3, #4
 802bbfe:	681b      	ldr	r3, [r3, #0]
 802bc00:	9203      	str	r2, [sp, #12]
 802bc02:	2b00      	cmp	r3, #0
 802bc04:	bfb8      	it	lt
 802bc06:	f04f 33ff 	movlt.w	r3, #4294967295
 802bc0a:	3402      	adds	r4, #2
 802bc0c:	9305      	str	r3, [sp, #20]
 802bc0e:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 802bce4 <_vfiprintf_r+0x230>
 802bc12:	7821      	ldrb	r1, [r4, #0]
 802bc14:	2203      	movs	r2, #3
 802bc16:	4650      	mov	r0, sl
 802bc18:	f7d4 fae2 	bl	80001e0 <memchr>
 802bc1c:	b138      	cbz	r0, 802bc2e <_vfiprintf_r+0x17a>
 802bc1e:	9b04      	ldr	r3, [sp, #16]
 802bc20:	eba0 000a 	sub.w	r0, r0, sl
 802bc24:	2240      	movs	r2, #64	; 0x40
 802bc26:	4082      	lsls	r2, r0
 802bc28:	4313      	orrs	r3, r2
 802bc2a:	3401      	adds	r4, #1
 802bc2c:	9304      	str	r3, [sp, #16]
 802bc2e:	f814 1b01 	ldrb.w	r1, [r4], #1
 802bc32:	4829      	ldr	r0, [pc, #164]	; (802bcd8 <_vfiprintf_r+0x224>)
 802bc34:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802bc38:	2206      	movs	r2, #6
 802bc3a:	f7d4 fad1 	bl	80001e0 <memchr>
 802bc3e:	2800      	cmp	r0, #0
 802bc40:	d03f      	beq.n	802bcc2 <_vfiprintf_r+0x20e>
 802bc42:	4b26      	ldr	r3, [pc, #152]	; (802bcdc <_vfiprintf_r+0x228>)
 802bc44:	bb1b      	cbnz	r3, 802bc8e <_vfiprintf_r+0x1da>
 802bc46:	9b03      	ldr	r3, [sp, #12]
 802bc48:	3307      	adds	r3, #7
 802bc4a:	f023 0307 	bic.w	r3, r3, #7
 802bc4e:	3308      	adds	r3, #8
 802bc50:	9303      	str	r3, [sp, #12]
 802bc52:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802bc54:	443b      	add	r3, r7
 802bc56:	9309      	str	r3, [sp, #36]	; 0x24
 802bc58:	e768      	b.n	802bb2c <_vfiprintf_r+0x78>
 802bc5a:	fb0c 3202 	mla	r2, ip, r2, r3
 802bc5e:	460c      	mov	r4, r1
 802bc60:	2001      	movs	r0, #1
 802bc62:	e7a6      	b.n	802bbb2 <_vfiprintf_r+0xfe>
 802bc64:	2300      	movs	r3, #0
 802bc66:	3401      	adds	r4, #1
 802bc68:	9305      	str	r3, [sp, #20]
 802bc6a:	4619      	mov	r1, r3
 802bc6c:	f04f 0c0a 	mov.w	ip, #10
 802bc70:	4620      	mov	r0, r4
 802bc72:	f810 2b01 	ldrb.w	r2, [r0], #1
 802bc76:	3a30      	subs	r2, #48	; 0x30
 802bc78:	2a09      	cmp	r2, #9
 802bc7a:	d903      	bls.n	802bc84 <_vfiprintf_r+0x1d0>
 802bc7c:	2b00      	cmp	r3, #0
 802bc7e:	d0c6      	beq.n	802bc0e <_vfiprintf_r+0x15a>
 802bc80:	9105      	str	r1, [sp, #20]
 802bc82:	e7c4      	b.n	802bc0e <_vfiprintf_r+0x15a>
 802bc84:	fb0c 2101 	mla	r1, ip, r1, r2
 802bc88:	4604      	mov	r4, r0
 802bc8a:	2301      	movs	r3, #1
 802bc8c:	e7f0      	b.n	802bc70 <_vfiprintf_r+0x1bc>
 802bc8e:	ab03      	add	r3, sp, #12
 802bc90:	9300      	str	r3, [sp, #0]
 802bc92:	462a      	mov	r2, r5
 802bc94:	4b12      	ldr	r3, [pc, #72]	; (802bce0 <_vfiprintf_r+0x22c>)
 802bc96:	a904      	add	r1, sp, #16
 802bc98:	4630      	mov	r0, r6
 802bc9a:	f3af 8000 	nop.w
 802bc9e:	4607      	mov	r7, r0
 802bca0:	1c78      	adds	r0, r7, #1
 802bca2:	d1d6      	bne.n	802bc52 <_vfiprintf_r+0x19e>
 802bca4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802bca6:	07d9      	lsls	r1, r3, #31
 802bca8:	d405      	bmi.n	802bcb6 <_vfiprintf_r+0x202>
 802bcaa:	89ab      	ldrh	r3, [r5, #12]
 802bcac:	059a      	lsls	r2, r3, #22
 802bcae:	d402      	bmi.n	802bcb6 <_vfiprintf_r+0x202>
 802bcb0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802bcb2:	f7ff fe1b 	bl	802b8ec <__retarget_lock_release_recursive>
 802bcb6:	89ab      	ldrh	r3, [r5, #12]
 802bcb8:	065b      	lsls	r3, r3, #25
 802bcba:	f53f af1d 	bmi.w	802baf8 <_vfiprintf_r+0x44>
 802bcbe:	9809      	ldr	r0, [sp, #36]	; 0x24
 802bcc0:	e71c      	b.n	802bafc <_vfiprintf_r+0x48>
 802bcc2:	ab03      	add	r3, sp, #12
 802bcc4:	9300      	str	r3, [sp, #0]
 802bcc6:	462a      	mov	r2, r5
 802bcc8:	4b05      	ldr	r3, [pc, #20]	; (802bce0 <_vfiprintf_r+0x22c>)
 802bcca:	a904      	add	r1, sp, #16
 802bccc:	4630      	mov	r0, r6
 802bcce:	f000 f879 	bl	802bdc4 <_printf_i>
 802bcd2:	e7e4      	b.n	802bc9e <_vfiprintf_r+0x1ea>
 802bcd4:	080301ec 	.word	0x080301ec
 802bcd8:	080301f6 	.word	0x080301f6
 802bcdc:	00000000 	.word	0x00000000
 802bce0:	0802ba8f 	.word	0x0802ba8f
 802bce4:	080301f2 	.word	0x080301f2

0802bce8 <_printf_common>:
 802bce8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802bcec:	4616      	mov	r6, r2
 802bcee:	4699      	mov	r9, r3
 802bcf0:	688a      	ldr	r2, [r1, #8]
 802bcf2:	690b      	ldr	r3, [r1, #16]
 802bcf4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802bcf8:	4293      	cmp	r3, r2
 802bcfa:	bfb8      	it	lt
 802bcfc:	4613      	movlt	r3, r2
 802bcfe:	6033      	str	r3, [r6, #0]
 802bd00:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802bd04:	4607      	mov	r7, r0
 802bd06:	460c      	mov	r4, r1
 802bd08:	b10a      	cbz	r2, 802bd0e <_printf_common+0x26>
 802bd0a:	3301      	adds	r3, #1
 802bd0c:	6033      	str	r3, [r6, #0]
 802bd0e:	6823      	ldr	r3, [r4, #0]
 802bd10:	0699      	lsls	r1, r3, #26
 802bd12:	bf42      	ittt	mi
 802bd14:	6833      	ldrmi	r3, [r6, #0]
 802bd16:	3302      	addmi	r3, #2
 802bd18:	6033      	strmi	r3, [r6, #0]
 802bd1a:	6825      	ldr	r5, [r4, #0]
 802bd1c:	f015 0506 	ands.w	r5, r5, #6
 802bd20:	d106      	bne.n	802bd30 <_printf_common+0x48>
 802bd22:	f104 0a19 	add.w	sl, r4, #25
 802bd26:	68e3      	ldr	r3, [r4, #12]
 802bd28:	6832      	ldr	r2, [r6, #0]
 802bd2a:	1a9b      	subs	r3, r3, r2
 802bd2c:	42ab      	cmp	r3, r5
 802bd2e:	dc26      	bgt.n	802bd7e <_printf_common+0x96>
 802bd30:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802bd34:	1e13      	subs	r3, r2, #0
 802bd36:	6822      	ldr	r2, [r4, #0]
 802bd38:	bf18      	it	ne
 802bd3a:	2301      	movne	r3, #1
 802bd3c:	0692      	lsls	r2, r2, #26
 802bd3e:	d42b      	bmi.n	802bd98 <_printf_common+0xb0>
 802bd40:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802bd44:	4649      	mov	r1, r9
 802bd46:	4638      	mov	r0, r7
 802bd48:	47c0      	blx	r8
 802bd4a:	3001      	adds	r0, #1
 802bd4c:	d01e      	beq.n	802bd8c <_printf_common+0xa4>
 802bd4e:	6823      	ldr	r3, [r4, #0]
 802bd50:	6922      	ldr	r2, [r4, #16]
 802bd52:	f003 0306 	and.w	r3, r3, #6
 802bd56:	2b04      	cmp	r3, #4
 802bd58:	bf02      	ittt	eq
 802bd5a:	68e5      	ldreq	r5, [r4, #12]
 802bd5c:	6833      	ldreq	r3, [r6, #0]
 802bd5e:	1aed      	subeq	r5, r5, r3
 802bd60:	68a3      	ldr	r3, [r4, #8]
 802bd62:	bf0c      	ite	eq
 802bd64:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802bd68:	2500      	movne	r5, #0
 802bd6a:	4293      	cmp	r3, r2
 802bd6c:	bfc4      	itt	gt
 802bd6e:	1a9b      	subgt	r3, r3, r2
 802bd70:	18ed      	addgt	r5, r5, r3
 802bd72:	2600      	movs	r6, #0
 802bd74:	341a      	adds	r4, #26
 802bd76:	42b5      	cmp	r5, r6
 802bd78:	d11a      	bne.n	802bdb0 <_printf_common+0xc8>
 802bd7a:	2000      	movs	r0, #0
 802bd7c:	e008      	b.n	802bd90 <_printf_common+0xa8>
 802bd7e:	2301      	movs	r3, #1
 802bd80:	4652      	mov	r2, sl
 802bd82:	4649      	mov	r1, r9
 802bd84:	4638      	mov	r0, r7
 802bd86:	47c0      	blx	r8
 802bd88:	3001      	adds	r0, #1
 802bd8a:	d103      	bne.n	802bd94 <_printf_common+0xac>
 802bd8c:	f04f 30ff 	mov.w	r0, #4294967295
 802bd90:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802bd94:	3501      	adds	r5, #1
 802bd96:	e7c6      	b.n	802bd26 <_printf_common+0x3e>
 802bd98:	18e1      	adds	r1, r4, r3
 802bd9a:	1c5a      	adds	r2, r3, #1
 802bd9c:	2030      	movs	r0, #48	; 0x30
 802bd9e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802bda2:	4422      	add	r2, r4
 802bda4:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802bda8:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 802bdac:	3302      	adds	r3, #2
 802bdae:	e7c7      	b.n	802bd40 <_printf_common+0x58>
 802bdb0:	2301      	movs	r3, #1
 802bdb2:	4622      	mov	r2, r4
 802bdb4:	4649      	mov	r1, r9
 802bdb6:	4638      	mov	r0, r7
 802bdb8:	47c0      	blx	r8
 802bdba:	3001      	adds	r0, #1
 802bdbc:	d0e6      	beq.n	802bd8c <_printf_common+0xa4>
 802bdbe:	3601      	adds	r6, #1
 802bdc0:	e7d9      	b.n	802bd76 <_printf_common+0x8e>
	...

0802bdc4 <_printf_i>:
 802bdc4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802bdc8:	7e0f      	ldrb	r7, [r1, #24]
 802bdca:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802bdcc:	2f78      	cmp	r7, #120	; 0x78
 802bdce:	4691      	mov	r9, r2
 802bdd0:	4680      	mov	r8, r0
 802bdd2:	460c      	mov	r4, r1
 802bdd4:	469a      	mov	sl, r3
 802bdd6:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802bdda:	d807      	bhi.n	802bdec <_printf_i+0x28>
 802bddc:	2f62      	cmp	r7, #98	; 0x62
 802bdde:	d80a      	bhi.n	802bdf6 <_printf_i+0x32>
 802bde0:	2f00      	cmp	r7, #0
 802bde2:	f000 80d4 	beq.w	802bf8e <_printf_i+0x1ca>
 802bde6:	2f58      	cmp	r7, #88	; 0x58
 802bde8:	f000 80c0 	beq.w	802bf6c <_printf_i+0x1a8>
 802bdec:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802bdf0:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802bdf4:	e03a      	b.n	802be6c <_printf_i+0xa8>
 802bdf6:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802bdfa:	2b15      	cmp	r3, #21
 802bdfc:	d8f6      	bhi.n	802bdec <_printf_i+0x28>
 802bdfe:	a101      	add	r1, pc, #4	; (adr r1, 802be04 <_printf_i+0x40>)
 802be00:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802be04:	0802be5d 	.word	0x0802be5d
 802be08:	0802be71 	.word	0x0802be71
 802be0c:	0802bded 	.word	0x0802bded
 802be10:	0802bded 	.word	0x0802bded
 802be14:	0802bded 	.word	0x0802bded
 802be18:	0802bded 	.word	0x0802bded
 802be1c:	0802be71 	.word	0x0802be71
 802be20:	0802bded 	.word	0x0802bded
 802be24:	0802bded 	.word	0x0802bded
 802be28:	0802bded 	.word	0x0802bded
 802be2c:	0802bded 	.word	0x0802bded
 802be30:	0802bf75 	.word	0x0802bf75
 802be34:	0802be9d 	.word	0x0802be9d
 802be38:	0802bf2f 	.word	0x0802bf2f
 802be3c:	0802bded 	.word	0x0802bded
 802be40:	0802bded 	.word	0x0802bded
 802be44:	0802bf97 	.word	0x0802bf97
 802be48:	0802bded 	.word	0x0802bded
 802be4c:	0802be9d 	.word	0x0802be9d
 802be50:	0802bded 	.word	0x0802bded
 802be54:	0802bded 	.word	0x0802bded
 802be58:	0802bf37 	.word	0x0802bf37
 802be5c:	682b      	ldr	r3, [r5, #0]
 802be5e:	1d1a      	adds	r2, r3, #4
 802be60:	681b      	ldr	r3, [r3, #0]
 802be62:	602a      	str	r2, [r5, #0]
 802be64:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802be68:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802be6c:	2301      	movs	r3, #1
 802be6e:	e09f      	b.n	802bfb0 <_printf_i+0x1ec>
 802be70:	6820      	ldr	r0, [r4, #0]
 802be72:	682b      	ldr	r3, [r5, #0]
 802be74:	0607      	lsls	r7, r0, #24
 802be76:	f103 0104 	add.w	r1, r3, #4
 802be7a:	6029      	str	r1, [r5, #0]
 802be7c:	d501      	bpl.n	802be82 <_printf_i+0xbe>
 802be7e:	681e      	ldr	r6, [r3, #0]
 802be80:	e003      	b.n	802be8a <_printf_i+0xc6>
 802be82:	0646      	lsls	r6, r0, #25
 802be84:	d5fb      	bpl.n	802be7e <_printf_i+0xba>
 802be86:	f9b3 6000 	ldrsh.w	r6, [r3]
 802be8a:	2e00      	cmp	r6, #0
 802be8c:	da03      	bge.n	802be96 <_printf_i+0xd2>
 802be8e:	232d      	movs	r3, #45	; 0x2d
 802be90:	4276      	negs	r6, r6
 802be92:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802be96:	485a      	ldr	r0, [pc, #360]	; (802c000 <_printf_i+0x23c>)
 802be98:	230a      	movs	r3, #10
 802be9a:	e012      	b.n	802bec2 <_printf_i+0xfe>
 802be9c:	682b      	ldr	r3, [r5, #0]
 802be9e:	6820      	ldr	r0, [r4, #0]
 802bea0:	1d19      	adds	r1, r3, #4
 802bea2:	6029      	str	r1, [r5, #0]
 802bea4:	0605      	lsls	r5, r0, #24
 802bea6:	d501      	bpl.n	802beac <_printf_i+0xe8>
 802bea8:	681e      	ldr	r6, [r3, #0]
 802beaa:	e002      	b.n	802beb2 <_printf_i+0xee>
 802beac:	0641      	lsls	r1, r0, #25
 802beae:	d5fb      	bpl.n	802bea8 <_printf_i+0xe4>
 802beb0:	881e      	ldrh	r6, [r3, #0]
 802beb2:	4853      	ldr	r0, [pc, #332]	; (802c000 <_printf_i+0x23c>)
 802beb4:	2f6f      	cmp	r7, #111	; 0x6f
 802beb6:	bf0c      	ite	eq
 802beb8:	2308      	moveq	r3, #8
 802beba:	230a      	movne	r3, #10
 802bebc:	2100      	movs	r1, #0
 802bebe:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802bec2:	6865      	ldr	r5, [r4, #4]
 802bec4:	60a5      	str	r5, [r4, #8]
 802bec6:	2d00      	cmp	r5, #0
 802bec8:	bfa2      	ittt	ge
 802beca:	6821      	ldrge	r1, [r4, #0]
 802becc:	f021 0104 	bicge.w	r1, r1, #4
 802bed0:	6021      	strge	r1, [r4, #0]
 802bed2:	b90e      	cbnz	r6, 802bed8 <_printf_i+0x114>
 802bed4:	2d00      	cmp	r5, #0
 802bed6:	d04b      	beq.n	802bf70 <_printf_i+0x1ac>
 802bed8:	4615      	mov	r5, r2
 802beda:	fbb6 f1f3 	udiv	r1, r6, r3
 802bede:	fb03 6711 	mls	r7, r3, r1, r6
 802bee2:	5dc7      	ldrb	r7, [r0, r7]
 802bee4:	f805 7d01 	strb.w	r7, [r5, #-1]!
 802bee8:	4637      	mov	r7, r6
 802beea:	42bb      	cmp	r3, r7
 802beec:	460e      	mov	r6, r1
 802beee:	d9f4      	bls.n	802beda <_printf_i+0x116>
 802bef0:	2b08      	cmp	r3, #8
 802bef2:	d10b      	bne.n	802bf0c <_printf_i+0x148>
 802bef4:	6823      	ldr	r3, [r4, #0]
 802bef6:	07de      	lsls	r6, r3, #31
 802bef8:	d508      	bpl.n	802bf0c <_printf_i+0x148>
 802befa:	6923      	ldr	r3, [r4, #16]
 802befc:	6861      	ldr	r1, [r4, #4]
 802befe:	4299      	cmp	r1, r3
 802bf00:	bfde      	ittt	le
 802bf02:	2330      	movle	r3, #48	; 0x30
 802bf04:	f805 3c01 	strble.w	r3, [r5, #-1]
 802bf08:	f105 35ff 	addle.w	r5, r5, #4294967295
 802bf0c:	1b52      	subs	r2, r2, r5
 802bf0e:	6122      	str	r2, [r4, #16]
 802bf10:	f8cd a000 	str.w	sl, [sp]
 802bf14:	464b      	mov	r3, r9
 802bf16:	aa03      	add	r2, sp, #12
 802bf18:	4621      	mov	r1, r4
 802bf1a:	4640      	mov	r0, r8
 802bf1c:	f7ff fee4 	bl	802bce8 <_printf_common>
 802bf20:	3001      	adds	r0, #1
 802bf22:	d14a      	bne.n	802bfba <_printf_i+0x1f6>
 802bf24:	f04f 30ff 	mov.w	r0, #4294967295
 802bf28:	b004      	add	sp, #16
 802bf2a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802bf2e:	6823      	ldr	r3, [r4, #0]
 802bf30:	f043 0320 	orr.w	r3, r3, #32
 802bf34:	6023      	str	r3, [r4, #0]
 802bf36:	4833      	ldr	r0, [pc, #204]	; (802c004 <_printf_i+0x240>)
 802bf38:	2778      	movs	r7, #120	; 0x78
 802bf3a:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 802bf3e:	6823      	ldr	r3, [r4, #0]
 802bf40:	6829      	ldr	r1, [r5, #0]
 802bf42:	061f      	lsls	r7, r3, #24
 802bf44:	f851 6b04 	ldr.w	r6, [r1], #4
 802bf48:	d402      	bmi.n	802bf50 <_printf_i+0x18c>
 802bf4a:	065f      	lsls	r7, r3, #25
 802bf4c:	bf48      	it	mi
 802bf4e:	b2b6      	uxthmi	r6, r6
 802bf50:	07df      	lsls	r7, r3, #31
 802bf52:	bf48      	it	mi
 802bf54:	f043 0320 	orrmi.w	r3, r3, #32
 802bf58:	6029      	str	r1, [r5, #0]
 802bf5a:	bf48      	it	mi
 802bf5c:	6023      	strmi	r3, [r4, #0]
 802bf5e:	b91e      	cbnz	r6, 802bf68 <_printf_i+0x1a4>
 802bf60:	6823      	ldr	r3, [r4, #0]
 802bf62:	f023 0320 	bic.w	r3, r3, #32
 802bf66:	6023      	str	r3, [r4, #0]
 802bf68:	2310      	movs	r3, #16
 802bf6a:	e7a7      	b.n	802bebc <_printf_i+0xf8>
 802bf6c:	4824      	ldr	r0, [pc, #144]	; (802c000 <_printf_i+0x23c>)
 802bf6e:	e7e4      	b.n	802bf3a <_printf_i+0x176>
 802bf70:	4615      	mov	r5, r2
 802bf72:	e7bd      	b.n	802bef0 <_printf_i+0x12c>
 802bf74:	682b      	ldr	r3, [r5, #0]
 802bf76:	6826      	ldr	r6, [r4, #0]
 802bf78:	6961      	ldr	r1, [r4, #20]
 802bf7a:	1d18      	adds	r0, r3, #4
 802bf7c:	6028      	str	r0, [r5, #0]
 802bf7e:	0635      	lsls	r5, r6, #24
 802bf80:	681b      	ldr	r3, [r3, #0]
 802bf82:	d501      	bpl.n	802bf88 <_printf_i+0x1c4>
 802bf84:	6019      	str	r1, [r3, #0]
 802bf86:	e002      	b.n	802bf8e <_printf_i+0x1ca>
 802bf88:	0670      	lsls	r0, r6, #25
 802bf8a:	d5fb      	bpl.n	802bf84 <_printf_i+0x1c0>
 802bf8c:	8019      	strh	r1, [r3, #0]
 802bf8e:	2300      	movs	r3, #0
 802bf90:	6123      	str	r3, [r4, #16]
 802bf92:	4615      	mov	r5, r2
 802bf94:	e7bc      	b.n	802bf10 <_printf_i+0x14c>
 802bf96:	682b      	ldr	r3, [r5, #0]
 802bf98:	1d1a      	adds	r2, r3, #4
 802bf9a:	602a      	str	r2, [r5, #0]
 802bf9c:	681d      	ldr	r5, [r3, #0]
 802bf9e:	6862      	ldr	r2, [r4, #4]
 802bfa0:	2100      	movs	r1, #0
 802bfa2:	4628      	mov	r0, r5
 802bfa4:	f7d4 f91c 	bl	80001e0 <memchr>
 802bfa8:	b108      	cbz	r0, 802bfae <_printf_i+0x1ea>
 802bfaa:	1b40      	subs	r0, r0, r5
 802bfac:	6060      	str	r0, [r4, #4]
 802bfae:	6863      	ldr	r3, [r4, #4]
 802bfb0:	6123      	str	r3, [r4, #16]
 802bfb2:	2300      	movs	r3, #0
 802bfb4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802bfb8:	e7aa      	b.n	802bf10 <_printf_i+0x14c>
 802bfba:	6923      	ldr	r3, [r4, #16]
 802bfbc:	462a      	mov	r2, r5
 802bfbe:	4649      	mov	r1, r9
 802bfc0:	4640      	mov	r0, r8
 802bfc2:	47d0      	blx	sl
 802bfc4:	3001      	adds	r0, #1
 802bfc6:	d0ad      	beq.n	802bf24 <_printf_i+0x160>
 802bfc8:	6823      	ldr	r3, [r4, #0]
 802bfca:	079b      	lsls	r3, r3, #30
 802bfcc:	d413      	bmi.n	802bff6 <_printf_i+0x232>
 802bfce:	68e0      	ldr	r0, [r4, #12]
 802bfd0:	9b03      	ldr	r3, [sp, #12]
 802bfd2:	4298      	cmp	r0, r3
 802bfd4:	bfb8      	it	lt
 802bfd6:	4618      	movlt	r0, r3
 802bfd8:	e7a6      	b.n	802bf28 <_printf_i+0x164>
 802bfda:	2301      	movs	r3, #1
 802bfdc:	4632      	mov	r2, r6
 802bfde:	4649      	mov	r1, r9
 802bfe0:	4640      	mov	r0, r8
 802bfe2:	47d0      	blx	sl
 802bfe4:	3001      	adds	r0, #1
 802bfe6:	d09d      	beq.n	802bf24 <_printf_i+0x160>
 802bfe8:	3501      	adds	r5, #1
 802bfea:	68e3      	ldr	r3, [r4, #12]
 802bfec:	9903      	ldr	r1, [sp, #12]
 802bfee:	1a5b      	subs	r3, r3, r1
 802bff0:	42ab      	cmp	r3, r5
 802bff2:	dcf2      	bgt.n	802bfda <_printf_i+0x216>
 802bff4:	e7eb      	b.n	802bfce <_printf_i+0x20a>
 802bff6:	2500      	movs	r5, #0
 802bff8:	f104 0619 	add.w	r6, r4, #25
 802bffc:	e7f5      	b.n	802bfea <_printf_i+0x226>
 802bffe:	bf00      	nop
 802c000:	080301fd 	.word	0x080301fd
 802c004:	0803020e 	.word	0x0803020e

0802c008 <__sflush_r>:
 802c008:	898a      	ldrh	r2, [r1, #12]
 802c00a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802c00e:	4605      	mov	r5, r0
 802c010:	0710      	lsls	r0, r2, #28
 802c012:	460c      	mov	r4, r1
 802c014:	d458      	bmi.n	802c0c8 <__sflush_r+0xc0>
 802c016:	684b      	ldr	r3, [r1, #4]
 802c018:	2b00      	cmp	r3, #0
 802c01a:	dc05      	bgt.n	802c028 <__sflush_r+0x20>
 802c01c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802c01e:	2b00      	cmp	r3, #0
 802c020:	dc02      	bgt.n	802c028 <__sflush_r+0x20>
 802c022:	2000      	movs	r0, #0
 802c024:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802c028:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802c02a:	2e00      	cmp	r6, #0
 802c02c:	d0f9      	beq.n	802c022 <__sflush_r+0x1a>
 802c02e:	2300      	movs	r3, #0
 802c030:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802c034:	682f      	ldr	r7, [r5, #0]
 802c036:	6a21      	ldr	r1, [r4, #32]
 802c038:	602b      	str	r3, [r5, #0]
 802c03a:	d032      	beq.n	802c0a2 <__sflush_r+0x9a>
 802c03c:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802c03e:	89a3      	ldrh	r3, [r4, #12]
 802c040:	075a      	lsls	r2, r3, #29
 802c042:	d505      	bpl.n	802c050 <__sflush_r+0x48>
 802c044:	6863      	ldr	r3, [r4, #4]
 802c046:	1ac0      	subs	r0, r0, r3
 802c048:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802c04a:	b10b      	cbz	r3, 802c050 <__sflush_r+0x48>
 802c04c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802c04e:	1ac0      	subs	r0, r0, r3
 802c050:	2300      	movs	r3, #0
 802c052:	4602      	mov	r2, r0
 802c054:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802c056:	6a21      	ldr	r1, [r4, #32]
 802c058:	4628      	mov	r0, r5
 802c05a:	47b0      	blx	r6
 802c05c:	1c43      	adds	r3, r0, #1
 802c05e:	89a3      	ldrh	r3, [r4, #12]
 802c060:	d106      	bne.n	802c070 <__sflush_r+0x68>
 802c062:	6829      	ldr	r1, [r5, #0]
 802c064:	291d      	cmp	r1, #29
 802c066:	d82b      	bhi.n	802c0c0 <__sflush_r+0xb8>
 802c068:	4a29      	ldr	r2, [pc, #164]	; (802c110 <__sflush_r+0x108>)
 802c06a:	410a      	asrs	r2, r1
 802c06c:	07d6      	lsls	r6, r2, #31
 802c06e:	d427      	bmi.n	802c0c0 <__sflush_r+0xb8>
 802c070:	2200      	movs	r2, #0
 802c072:	6062      	str	r2, [r4, #4]
 802c074:	04d9      	lsls	r1, r3, #19
 802c076:	6922      	ldr	r2, [r4, #16]
 802c078:	6022      	str	r2, [r4, #0]
 802c07a:	d504      	bpl.n	802c086 <__sflush_r+0x7e>
 802c07c:	1c42      	adds	r2, r0, #1
 802c07e:	d101      	bne.n	802c084 <__sflush_r+0x7c>
 802c080:	682b      	ldr	r3, [r5, #0]
 802c082:	b903      	cbnz	r3, 802c086 <__sflush_r+0x7e>
 802c084:	6560      	str	r0, [r4, #84]	; 0x54
 802c086:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802c088:	602f      	str	r7, [r5, #0]
 802c08a:	2900      	cmp	r1, #0
 802c08c:	d0c9      	beq.n	802c022 <__sflush_r+0x1a>
 802c08e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802c092:	4299      	cmp	r1, r3
 802c094:	d002      	beq.n	802c09c <__sflush_r+0x94>
 802c096:	4628      	mov	r0, r5
 802c098:	f7ff fc96 	bl	802b9c8 <_free_r>
 802c09c:	2000      	movs	r0, #0
 802c09e:	6360      	str	r0, [r4, #52]	; 0x34
 802c0a0:	e7c0      	b.n	802c024 <__sflush_r+0x1c>
 802c0a2:	2301      	movs	r3, #1
 802c0a4:	4628      	mov	r0, r5
 802c0a6:	47b0      	blx	r6
 802c0a8:	1c41      	adds	r1, r0, #1
 802c0aa:	d1c8      	bne.n	802c03e <__sflush_r+0x36>
 802c0ac:	682b      	ldr	r3, [r5, #0]
 802c0ae:	2b00      	cmp	r3, #0
 802c0b0:	d0c5      	beq.n	802c03e <__sflush_r+0x36>
 802c0b2:	2b1d      	cmp	r3, #29
 802c0b4:	d001      	beq.n	802c0ba <__sflush_r+0xb2>
 802c0b6:	2b16      	cmp	r3, #22
 802c0b8:	d101      	bne.n	802c0be <__sflush_r+0xb6>
 802c0ba:	602f      	str	r7, [r5, #0]
 802c0bc:	e7b1      	b.n	802c022 <__sflush_r+0x1a>
 802c0be:	89a3      	ldrh	r3, [r4, #12]
 802c0c0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802c0c4:	81a3      	strh	r3, [r4, #12]
 802c0c6:	e7ad      	b.n	802c024 <__sflush_r+0x1c>
 802c0c8:	690f      	ldr	r7, [r1, #16]
 802c0ca:	2f00      	cmp	r7, #0
 802c0cc:	d0a9      	beq.n	802c022 <__sflush_r+0x1a>
 802c0ce:	0793      	lsls	r3, r2, #30
 802c0d0:	680e      	ldr	r6, [r1, #0]
 802c0d2:	bf08      	it	eq
 802c0d4:	694b      	ldreq	r3, [r1, #20]
 802c0d6:	600f      	str	r7, [r1, #0]
 802c0d8:	bf18      	it	ne
 802c0da:	2300      	movne	r3, #0
 802c0dc:	eba6 0807 	sub.w	r8, r6, r7
 802c0e0:	608b      	str	r3, [r1, #8]
 802c0e2:	f1b8 0f00 	cmp.w	r8, #0
 802c0e6:	dd9c      	ble.n	802c022 <__sflush_r+0x1a>
 802c0e8:	6a21      	ldr	r1, [r4, #32]
 802c0ea:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 802c0ec:	4643      	mov	r3, r8
 802c0ee:	463a      	mov	r2, r7
 802c0f0:	4628      	mov	r0, r5
 802c0f2:	47b0      	blx	r6
 802c0f4:	2800      	cmp	r0, #0
 802c0f6:	dc06      	bgt.n	802c106 <__sflush_r+0xfe>
 802c0f8:	89a3      	ldrh	r3, [r4, #12]
 802c0fa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802c0fe:	81a3      	strh	r3, [r4, #12]
 802c100:	f04f 30ff 	mov.w	r0, #4294967295
 802c104:	e78e      	b.n	802c024 <__sflush_r+0x1c>
 802c106:	4407      	add	r7, r0
 802c108:	eba8 0800 	sub.w	r8, r8, r0
 802c10c:	e7e9      	b.n	802c0e2 <__sflush_r+0xda>
 802c10e:	bf00      	nop
 802c110:	dfbffffe 	.word	0xdfbffffe

0802c114 <_fflush_r>:
 802c114:	b538      	push	{r3, r4, r5, lr}
 802c116:	690b      	ldr	r3, [r1, #16]
 802c118:	4605      	mov	r5, r0
 802c11a:	460c      	mov	r4, r1
 802c11c:	b913      	cbnz	r3, 802c124 <_fflush_r+0x10>
 802c11e:	2500      	movs	r5, #0
 802c120:	4628      	mov	r0, r5
 802c122:	bd38      	pop	{r3, r4, r5, pc}
 802c124:	b118      	cbz	r0, 802c12e <_fflush_r+0x1a>
 802c126:	6a03      	ldr	r3, [r0, #32]
 802c128:	b90b      	cbnz	r3, 802c12e <_fflush_r+0x1a>
 802c12a:	f7ff fa85 	bl	802b638 <__sinit>
 802c12e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802c132:	2b00      	cmp	r3, #0
 802c134:	d0f3      	beq.n	802c11e <_fflush_r+0xa>
 802c136:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802c138:	07d0      	lsls	r0, r2, #31
 802c13a:	d404      	bmi.n	802c146 <_fflush_r+0x32>
 802c13c:	0599      	lsls	r1, r3, #22
 802c13e:	d402      	bmi.n	802c146 <_fflush_r+0x32>
 802c140:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802c142:	f7ff fbd2 	bl	802b8ea <__retarget_lock_acquire_recursive>
 802c146:	4628      	mov	r0, r5
 802c148:	4621      	mov	r1, r4
 802c14a:	f7ff ff5d 	bl	802c008 <__sflush_r>
 802c14e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802c150:	07da      	lsls	r2, r3, #31
 802c152:	4605      	mov	r5, r0
 802c154:	d4e4      	bmi.n	802c120 <_fflush_r+0xc>
 802c156:	89a3      	ldrh	r3, [r4, #12]
 802c158:	059b      	lsls	r3, r3, #22
 802c15a:	d4e1      	bmi.n	802c120 <_fflush_r+0xc>
 802c15c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802c15e:	f7ff fbc5 	bl	802b8ec <__retarget_lock_release_recursive>
 802c162:	e7dd      	b.n	802c120 <_fflush_r+0xc>

0802c164 <__swbuf_r>:
 802c164:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802c166:	460e      	mov	r6, r1
 802c168:	4614      	mov	r4, r2
 802c16a:	4605      	mov	r5, r0
 802c16c:	b118      	cbz	r0, 802c176 <__swbuf_r+0x12>
 802c16e:	6a03      	ldr	r3, [r0, #32]
 802c170:	b90b      	cbnz	r3, 802c176 <__swbuf_r+0x12>
 802c172:	f7ff fa61 	bl	802b638 <__sinit>
 802c176:	69a3      	ldr	r3, [r4, #24]
 802c178:	60a3      	str	r3, [r4, #8]
 802c17a:	89a3      	ldrh	r3, [r4, #12]
 802c17c:	071a      	lsls	r2, r3, #28
 802c17e:	d525      	bpl.n	802c1cc <__swbuf_r+0x68>
 802c180:	6923      	ldr	r3, [r4, #16]
 802c182:	b31b      	cbz	r3, 802c1cc <__swbuf_r+0x68>
 802c184:	6823      	ldr	r3, [r4, #0]
 802c186:	6922      	ldr	r2, [r4, #16]
 802c188:	1a98      	subs	r0, r3, r2
 802c18a:	6963      	ldr	r3, [r4, #20]
 802c18c:	b2f6      	uxtb	r6, r6
 802c18e:	4283      	cmp	r3, r0
 802c190:	4637      	mov	r7, r6
 802c192:	dc04      	bgt.n	802c19e <__swbuf_r+0x3a>
 802c194:	4621      	mov	r1, r4
 802c196:	4628      	mov	r0, r5
 802c198:	f7ff ffbc 	bl	802c114 <_fflush_r>
 802c19c:	b9e0      	cbnz	r0, 802c1d8 <__swbuf_r+0x74>
 802c19e:	68a3      	ldr	r3, [r4, #8]
 802c1a0:	3b01      	subs	r3, #1
 802c1a2:	60a3      	str	r3, [r4, #8]
 802c1a4:	6823      	ldr	r3, [r4, #0]
 802c1a6:	1c5a      	adds	r2, r3, #1
 802c1a8:	6022      	str	r2, [r4, #0]
 802c1aa:	701e      	strb	r6, [r3, #0]
 802c1ac:	6962      	ldr	r2, [r4, #20]
 802c1ae:	1c43      	adds	r3, r0, #1
 802c1b0:	429a      	cmp	r2, r3
 802c1b2:	d004      	beq.n	802c1be <__swbuf_r+0x5a>
 802c1b4:	89a3      	ldrh	r3, [r4, #12]
 802c1b6:	07db      	lsls	r3, r3, #31
 802c1b8:	d506      	bpl.n	802c1c8 <__swbuf_r+0x64>
 802c1ba:	2e0a      	cmp	r6, #10
 802c1bc:	d104      	bne.n	802c1c8 <__swbuf_r+0x64>
 802c1be:	4621      	mov	r1, r4
 802c1c0:	4628      	mov	r0, r5
 802c1c2:	f7ff ffa7 	bl	802c114 <_fflush_r>
 802c1c6:	b938      	cbnz	r0, 802c1d8 <__swbuf_r+0x74>
 802c1c8:	4638      	mov	r0, r7
 802c1ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802c1cc:	4621      	mov	r1, r4
 802c1ce:	4628      	mov	r0, r5
 802c1d0:	f000 f806 	bl	802c1e0 <__swsetup_r>
 802c1d4:	2800      	cmp	r0, #0
 802c1d6:	d0d5      	beq.n	802c184 <__swbuf_r+0x20>
 802c1d8:	f04f 37ff 	mov.w	r7, #4294967295
 802c1dc:	e7f4      	b.n	802c1c8 <__swbuf_r+0x64>
	...

0802c1e0 <__swsetup_r>:
 802c1e0:	b538      	push	{r3, r4, r5, lr}
 802c1e2:	4b2a      	ldr	r3, [pc, #168]	; (802c28c <__swsetup_r+0xac>)
 802c1e4:	4605      	mov	r5, r0
 802c1e6:	6818      	ldr	r0, [r3, #0]
 802c1e8:	460c      	mov	r4, r1
 802c1ea:	b118      	cbz	r0, 802c1f4 <__swsetup_r+0x14>
 802c1ec:	6a03      	ldr	r3, [r0, #32]
 802c1ee:	b90b      	cbnz	r3, 802c1f4 <__swsetup_r+0x14>
 802c1f0:	f7ff fa22 	bl	802b638 <__sinit>
 802c1f4:	89a3      	ldrh	r3, [r4, #12]
 802c1f6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802c1fa:	0718      	lsls	r0, r3, #28
 802c1fc:	d422      	bmi.n	802c244 <__swsetup_r+0x64>
 802c1fe:	06d9      	lsls	r1, r3, #27
 802c200:	d407      	bmi.n	802c212 <__swsetup_r+0x32>
 802c202:	2309      	movs	r3, #9
 802c204:	602b      	str	r3, [r5, #0]
 802c206:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802c20a:	81a3      	strh	r3, [r4, #12]
 802c20c:	f04f 30ff 	mov.w	r0, #4294967295
 802c210:	e034      	b.n	802c27c <__swsetup_r+0x9c>
 802c212:	0758      	lsls	r0, r3, #29
 802c214:	d512      	bpl.n	802c23c <__swsetup_r+0x5c>
 802c216:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802c218:	b141      	cbz	r1, 802c22c <__swsetup_r+0x4c>
 802c21a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802c21e:	4299      	cmp	r1, r3
 802c220:	d002      	beq.n	802c228 <__swsetup_r+0x48>
 802c222:	4628      	mov	r0, r5
 802c224:	f7ff fbd0 	bl	802b9c8 <_free_r>
 802c228:	2300      	movs	r3, #0
 802c22a:	6363      	str	r3, [r4, #52]	; 0x34
 802c22c:	89a3      	ldrh	r3, [r4, #12]
 802c22e:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802c232:	81a3      	strh	r3, [r4, #12]
 802c234:	2300      	movs	r3, #0
 802c236:	6063      	str	r3, [r4, #4]
 802c238:	6923      	ldr	r3, [r4, #16]
 802c23a:	6023      	str	r3, [r4, #0]
 802c23c:	89a3      	ldrh	r3, [r4, #12]
 802c23e:	f043 0308 	orr.w	r3, r3, #8
 802c242:	81a3      	strh	r3, [r4, #12]
 802c244:	6923      	ldr	r3, [r4, #16]
 802c246:	b94b      	cbnz	r3, 802c25c <__swsetup_r+0x7c>
 802c248:	89a3      	ldrh	r3, [r4, #12]
 802c24a:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802c24e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802c252:	d003      	beq.n	802c25c <__swsetup_r+0x7c>
 802c254:	4621      	mov	r1, r4
 802c256:	4628      	mov	r0, r5
 802c258:	f000 f840 	bl	802c2dc <__smakebuf_r>
 802c25c:	89a0      	ldrh	r0, [r4, #12]
 802c25e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802c262:	f010 0301 	ands.w	r3, r0, #1
 802c266:	d00a      	beq.n	802c27e <__swsetup_r+0x9e>
 802c268:	2300      	movs	r3, #0
 802c26a:	60a3      	str	r3, [r4, #8]
 802c26c:	6963      	ldr	r3, [r4, #20]
 802c26e:	425b      	negs	r3, r3
 802c270:	61a3      	str	r3, [r4, #24]
 802c272:	6923      	ldr	r3, [r4, #16]
 802c274:	b943      	cbnz	r3, 802c288 <__swsetup_r+0xa8>
 802c276:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802c27a:	d1c4      	bne.n	802c206 <__swsetup_r+0x26>
 802c27c:	bd38      	pop	{r3, r4, r5, pc}
 802c27e:	0781      	lsls	r1, r0, #30
 802c280:	bf58      	it	pl
 802c282:	6963      	ldrpl	r3, [r4, #20]
 802c284:	60a3      	str	r3, [r4, #8]
 802c286:	e7f4      	b.n	802c272 <__swsetup_r+0x92>
 802c288:	2000      	movs	r0, #0
 802c28a:	e7f7      	b.n	802c27c <__swsetup_r+0x9c>
 802c28c:	200000f4 	.word	0x200000f4

0802c290 <__swhatbuf_r>:
 802c290:	b570      	push	{r4, r5, r6, lr}
 802c292:	460c      	mov	r4, r1
 802c294:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802c298:	2900      	cmp	r1, #0
 802c29a:	b096      	sub	sp, #88	; 0x58
 802c29c:	4615      	mov	r5, r2
 802c29e:	461e      	mov	r6, r3
 802c2a0:	da0d      	bge.n	802c2be <__swhatbuf_r+0x2e>
 802c2a2:	89a3      	ldrh	r3, [r4, #12]
 802c2a4:	f013 0f80 	tst.w	r3, #128	; 0x80
 802c2a8:	f04f 0100 	mov.w	r1, #0
 802c2ac:	bf0c      	ite	eq
 802c2ae:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 802c2b2:	2340      	movne	r3, #64	; 0x40
 802c2b4:	2000      	movs	r0, #0
 802c2b6:	6031      	str	r1, [r6, #0]
 802c2b8:	602b      	str	r3, [r5, #0]
 802c2ba:	b016      	add	sp, #88	; 0x58
 802c2bc:	bd70      	pop	{r4, r5, r6, pc}
 802c2be:	466a      	mov	r2, sp
 802c2c0:	f000 f848 	bl	802c354 <_fstat_r>
 802c2c4:	2800      	cmp	r0, #0
 802c2c6:	dbec      	blt.n	802c2a2 <__swhatbuf_r+0x12>
 802c2c8:	9901      	ldr	r1, [sp, #4]
 802c2ca:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 802c2ce:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 802c2d2:	4259      	negs	r1, r3
 802c2d4:	4159      	adcs	r1, r3
 802c2d6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802c2da:	e7eb      	b.n	802c2b4 <__swhatbuf_r+0x24>

0802c2dc <__smakebuf_r>:
 802c2dc:	898b      	ldrh	r3, [r1, #12]
 802c2de:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802c2e0:	079d      	lsls	r5, r3, #30
 802c2e2:	4606      	mov	r6, r0
 802c2e4:	460c      	mov	r4, r1
 802c2e6:	d507      	bpl.n	802c2f8 <__smakebuf_r+0x1c>
 802c2e8:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802c2ec:	6023      	str	r3, [r4, #0]
 802c2ee:	6123      	str	r3, [r4, #16]
 802c2f0:	2301      	movs	r3, #1
 802c2f2:	6163      	str	r3, [r4, #20]
 802c2f4:	b002      	add	sp, #8
 802c2f6:	bd70      	pop	{r4, r5, r6, pc}
 802c2f8:	ab01      	add	r3, sp, #4
 802c2fa:	466a      	mov	r2, sp
 802c2fc:	f7ff ffc8 	bl	802c290 <__swhatbuf_r>
 802c300:	9900      	ldr	r1, [sp, #0]
 802c302:	4605      	mov	r5, r0
 802c304:	4630      	mov	r0, r6
 802c306:	f7ff f871 	bl	802b3ec <_malloc_r>
 802c30a:	b948      	cbnz	r0, 802c320 <__smakebuf_r+0x44>
 802c30c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802c310:	059a      	lsls	r2, r3, #22
 802c312:	d4ef      	bmi.n	802c2f4 <__smakebuf_r+0x18>
 802c314:	f023 0303 	bic.w	r3, r3, #3
 802c318:	f043 0302 	orr.w	r3, r3, #2
 802c31c:	81a3      	strh	r3, [r4, #12]
 802c31e:	e7e3      	b.n	802c2e8 <__smakebuf_r+0xc>
 802c320:	89a3      	ldrh	r3, [r4, #12]
 802c322:	6020      	str	r0, [r4, #0]
 802c324:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802c328:	81a3      	strh	r3, [r4, #12]
 802c32a:	9b00      	ldr	r3, [sp, #0]
 802c32c:	6163      	str	r3, [r4, #20]
 802c32e:	9b01      	ldr	r3, [sp, #4]
 802c330:	6120      	str	r0, [r4, #16]
 802c332:	b15b      	cbz	r3, 802c34c <__smakebuf_r+0x70>
 802c334:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802c338:	4630      	mov	r0, r6
 802c33a:	f000 f81d 	bl	802c378 <_isatty_r>
 802c33e:	b128      	cbz	r0, 802c34c <__smakebuf_r+0x70>
 802c340:	89a3      	ldrh	r3, [r4, #12]
 802c342:	f023 0303 	bic.w	r3, r3, #3
 802c346:	f043 0301 	orr.w	r3, r3, #1
 802c34a:	81a3      	strh	r3, [r4, #12]
 802c34c:	89a3      	ldrh	r3, [r4, #12]
 802c34e:	431d      	orrs	r5, r3
 802c350:	81a5      	strh	r5, [r4, #12]
 802c352:	e7cf      	b.n	802c2f4 <__smakebuf_r+0x18>

0802c354 <_fstat_r>:
 802c354:	b538      	push	{r3, r4, r5, lr}
 802c356:	4d07      	ldr	r5, [pc, #28]	; (802c374 <_fstat_r+0x20>)
 802c358:	2300      	movs	r3, #0
 802c35a:	4604      	mov	r4, r0
 802c35c:	4608      	mov	r0, r1
 802c35e:	4611      	mov	r1, r2
 802c360:	602b      	str	r3, [r5, #0]
 802c362:	f7d6 ffb0 	bl	80032c6 <_fstat>
 802c366:	1c43      	adds	r3, r0, #1
 802c368:	d102      	bne.n	802c370 <_fstat_r+0x1c>
 802c36a:	682b      	ldr	r3, [r5, #0]
 802c36c:	b103      	cbz	r3, 802c370 <_fstat_r+0x1c>
 802c36e:	6023      	str	r3, [r4, #0]
 802c370:	bd38      	pop	{r3, r4, r5, pc}
 802c372:	bf00      	nop
 802c374:	20002ce4 	.word	0x20002ce4

0802c378 <_isatty_r>:
 802c378:	b538      	push	{r3, r4, r5, lr}
 802c37a:	4d06      	ldr	r5, [pc, #24]	; (802c394 <_isatty_r+0x1c>)
 802c37c:	2300      	movs	r3, #0
 802c37e:	4604      	mov	r4, r0
 802c380:	4608      	mov	r0, r1
 802c382:	602b      	str	r3, [r5, #0]
 802c384:	f7d6 ffaf 	bl	80032e6 <_isatty>
 802c388:	1c43      	adds	r3, r0, #1
 802c38a:	d102      	bne.n	802c392 <_isatty_r+0x1a>
 802c38c:	682b      	ldr	r3, [r5, #0]
 802c38e:	b103      	cbz	r3, 802c392 <_isatty_r+0x1a>
 802c390:	6023      	str	r3, [r4, #0]
 802c392:	bd38      	pop	{r3, r4, r5, pc}
 802c394:	20002ce4 	.word	0x20002ce4

0802c398 <_init>:
 802c398:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802c39a:	bf00      	nop
 802c39c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802c39e:	bc08      	pop	{r3}
 802c3a0:	469e      	mov	lr, r3
 802c3a2:	4770      	bx	lr

0802c3a4 <_fini>:
 802c3a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802c3a6:	bf00      	nop
 802c3a8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802c3aa:	bc08      	pop	{r3}
 802c3ac:	469e      	mov	lr, r3
 802c3ae:	4770      	bx	lr
